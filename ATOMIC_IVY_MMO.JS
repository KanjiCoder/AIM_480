//:ATOMIC_IVY_MMO_SOURCE_CODE:[034]:=========================:// // [---][---]
//: I filmed this tutorial series 3 times. Pick one!         :// // [102][---]
//:                                                          :// // [102][---]
//: 1__MIN : www.tinyurl.com/BOMB-PLAYLIST-005   (KANJICODER):// // [---][400][300][200][102]
//: 10_MIN : www.tinyurl.com/BOOM-PLAYLIST-005   (NINJACODER):// // [---][400][300][200][102]
//: T_DEMO : www.tinyurl.com/WEEB-PLAYLIST-005   ( WEEBCODER):// // [405][400][300][200][102]
//:                                                          :// // [102][---]
//: SOURCE__CODE : github.com/KanjiCoder/AIM_480             :// // [480][479][478][477][476][475][474][473][472][471][470][469][468][467][466][465][464][463][462][461][460][459][458][457][456][455][454][453][452][451][450][449][448][447][446][445][444][443][442][441][440][439][438][437][436][435][434][433][432][431][430][429][428][427][426][425][424][423][422][421][420][419][418][417][416][415][414][413][412][411][410][409][408][407][406][405][404][403][402][401][400][399][398][397][396][395][394][393][392][391][390][389][388][387][386][385][384][383][382][381][380][379][378][377][376][375][374][373][372][371][370][369][368][367][366][365][364][363][362][361][360][359][358][357][356][355][354][353][352][351][350][349][348][347][346][345][344][343][342][341][340][339][338][337][336][335][334][333][332][331][330][329][328][327][326][325][324][323][322][321][320][319][318][317][316][315][314][313][312][311][310][309][308][307][306][305][304][303][302][301][300][299][298][297][296][295][294][293][292][291][290][289][288][287][286][285][284][283][282][280][279][278][277][276][275][274][273][272][271][270][269][268][267][266][265][264][263][262][261][260][259][258][257][256][255][254][253][252][251][250][249][248][247][246][245][244][243][242][241][240][239][238][237][236][235][234][233][232][231][230][229][228][227][226][225][224][223][222][221][220][219][218][217][216][215][214][213][212][211][210][209][208][207][206][205][204][203][202][201][200][199][198][197][196][195][194][193][192][191][190][189][188][187][186][185][184][183][182][181][180][179][177][176][175][174][173][172][171][170][169][168][167][166][165][164][163][162][161][160][159][158][157][156][155][154][153][152][151][150][148][147][146][145][144][143][142][141][140][139][138][137][136][135][134][133][132][131][130][129][128][127][126][125][124][122][121][120][119][117][116][115][113][112][111][110][109][108][107][106][105][104][103][102][100][099][098][097][096][095][094][093][092][091][090][089][088][087][086][085][084][083][082][081][080][079]                               
//: CONTACT_INFO : KanjiCoder@gmail.com                      :// // [102][---]
//:=========================:ATOMIC_IVY_MMO_SOURCE_CODE:[034]:// // [---][---]
//:CONFIGURATION:[109]:======================================:// // [---][---]
                                                                 // [---][---]
    const _think_you_are_so_fucking_smart_ =( 0 );   //:KEEP0:// // [403][---]
    var   d_bug_konamic_pad=(["[TOG]","[TEX]"][1]);  //:KOPAD:// // [404][---]
                                                                 // [--------]
    const c_sum =(["[SUM_TUT]","[SUM_REL]"][ 0 ]); //:#_SUM_#:// // [218][---]
                                                                 // [--------]
    const c_crash_on_vital_todo =( 0 ); //:#Necessary#   ://     // [218][109]
    const c_crash_on_maybe_todo =( 0 ); //:#FeatureCreep#://     // [109][---]
                                                                 // [109][---]
    var   d_bug =( 1 );     var d_bugline_3pc_png=( 1 );         // [376][109]
    var   d_eci =( 1 );                                          // [109][---]
    var   d_eco =( 1 );                                          // [109][---]
                                                                 // [---][---]
    const c_qualgen =(["[QUALLOW]","[QUALMAX]"][ 0 ]);           // [301]
    const c_duideno =( 3 ); //:[ 3 | 7 ]://                      // [193][---]
    var   d_gpudata_fum     =( 0 ); /** Force Update Mode**/     // [316][314][236]
                                    /** @GPU_ABUSE@ !!!! **/     // [314][---]
                                                                 // [236]
    //:RELATED_SECTION[ LOGGING_CONFIGURATION ]< < < < < ://     // [236]   
    //:RELATED_SECTION[ UNIT_TESTING_OPTIONS  ]< < < < < ://     // [244]
                                                                 // [---][---]
//:======================================:CONFIGURATION:[109]:// // [---][---]
//:SYSTEM_INDEX:[102]:=======================================:// // [---][---]
/** ******************************************************** *** // [102]
                                                                 // [102]
    C : Chronological Order (by creation order)                  // [102]
    D : Dependency    Order (LOW === LESS DEPS)                  // [102]
                                                                 // [---]
    RGBA896 [C:30] [D:01] : Save File Data _AND_ Undo Buffer     // [471]
    PIX2048 [C:13] [D:02] : Data Storage For Game.               // [185][MOV][156]
    PIXDUMP [C:28] [D:03] : Pixel Memory Dump To Hard Disk       // [464]
    GPUDATA [C:18] [D:04] : GPU SETUP VARS (used by:ARTGIRL)     // [226]
    GPUSYNC [C:17] [D:05] : GPU SYNC CODE ,(uses :::PIX2048)     // [226]
    HARDTEX [C:26] [D:06] : HARD_TEXture [ upload / refresh ]    // [402]
    FILE896 [C:29] [D:07] : Previewable 896_x_896 FileFormat     // [471]
    FILEMOB [C:25] [D:08] : #_DONT_ASK_WHERE_WE_GOT_THIS_FROM_#  // [361]
    TILEBOI [C:12] [D:09] : Tile GET_PUT ,#_NEVER_SAVE_LOAD_#    // [361][185][MOV][156]
    BINFONT [C:15] [D:10] : 8x8 Font , 2 U32s Each.              // [207]
    FOURSET [C:19] [D:11] : Kanji's Auto Tile Format             // [239]
    MIPWASP [C:23] [D:12] : Mip Map Maker (Wasp As In Bee)       // [296]
    GOLA512 [C:22] [D:13] : USED_BY[ ARTDECA , ARTGOLA ]         // [292]
    ARTDECA [C:21] [D:14] : ART_DECAL , #_GLOWING_DAMAGE_#       // [289]
    ARTGOLA [C:20] [D:15] : ARTGOLA : All AGOLA stuff.           // [285]
    ARTDUDE [C:04] [D:16] : Art Assets Used By Renderer          // [102]
    ARTGIRL [C:05] [D:17] : Render Pipeline Management           // [102]
    CAMERAH [C:09] [D:18] : Manipulates vp0 & vp1                // [109]
    SEXYCAM [C:10] [D:19] : SexyCam === Hot Key Snapping Camera  // [125]
    ASERVER [C:01] [D:20] : Server Side Functions Only           // [102]
    DABITCH [C:02] [D:21] : Database Access Functions Only       // [102]
    HOWORLD [C:24] [D:22] : HOtel_WORLD ( MMO Level Save+Load )  // [360]
    MIRMAID [C:27] [D:23] : MIRROR MAID , mirrors things.        // [421]
    EDIGAME [C:08] [D:24] : Editor State + Game State            // [102]
    KONAMIC [C:14] [D:25] : Konami Code Debugger                 // [180]
    KEYMAST [C:03] [D:26] : Keyboard Listeners                   // [102]
    KEYEMMA [C:16] [D:27] : Keyboard Emulator                    // [219]
    MOUMAST [C:11] [D:28] : Mouse Master (Mouse Listeners)       // [142]
    SERGAME [C:06] [D:29] : HIGH_LEVEL_GAME_CODE - Server Side   // [102]
    CLIGAME [C:07] [D:30] : HIGH_LEVEL_GAME_CODE - Client Side   // [102]
                                                                 // [102]
*** ******************************************************** **/ // [102]
//:=======================================:SYSTEM_INDEX:[102]:// // [---]
//:TYPE_INDEX:[449]:=========================================:// // [449]
/** ******************************************************** *** // [449]
                                                                 // [449]
    T_GTC [C:01] [D:01] : Global Tile Coordinate                 // [449]
    T_LTC [C:02] [D:02] : Local  Tile Coordinate                 // [449]
                                                                 // [449]
*** ******************************************************** **/ // [449]
//:=========================================:TYPE_INDEX:[449]:// // [449]
//:#_LOGGING_CONFIGURATION_#:[236]:==========================:// // [---]
                                                                 // [---]
    var   d_keymast_log_upp =( 0 ); /** Log The Up Key?  **/     // [193][118]
    var   d_tileboi_log_put =( 0 ); /** Log Put Tile?    **/     // [203][197][---]

    var   d_log_cli_ini     =( 0 ); /** Log_Client_Init  **/     // [236]
    var   d_log_npk         =( 0 ); /** Log:NumPadKey    **/     // [236]
    var   d_log_vpc         =( 0 ); /** Log:ViewPortC    **/     // [236]
    var   d_sexycam_npk     =( 0 ); /** Log:NumPadKey    **/     // [236]
    var   d_sexycam_log_zeb =( 0 ); /** Log:ZeroBasis ?  **/     // [236]
    var   d_keymast_ukm     =( 0 ); /** Unbound_Key_MSG  **/     // [236]
    var   d_moumast_lcp     =( 0 ); /** LogClickPosition **/     // [236]
    var   d_artgirl_gmc     =( 0 ); /** Give_Me_Complime **/     // [236]
    var   d_camerah_bfm     =( 0 ); /** Bounds_Fix_Msg   **/     // [236]
    var   d_gpudata_log     =( 0 ); /** GPU Data Logging **/     // [236]
                                                                 // [---]
//:==========================:#_LOGGING_CONFIGURATION_#:[236]:// // [---]
//:#_UNIT_TESTING_OPTIONS_#:[244]:===========================:// // [244]
                                                                 // [244]
    //:#_TURN_ENTIRE_SYSTEM_TESTS_OFF_#:[244]:---------------:// // [244]
    //:#_TURN_ENTIRE_SYSTEM_TESTS_ONN_#:[244]:---------------:// // [244]
                                                                 // [244]
        const c_artdude_utm =( 1 );                              // [244]
                                                                 // [244]
    //:---------------:#_TURN_ENTIRE_SYSTEM_TESTS_OFF_#:[244]:// // [244]
    //:---------------:#_TURN_ENTIRE_SYSTEM_TESTS_ONN_#:[244]:// // [244]
    //:#_TURN_SPECIFIC_SUB_TESTS_OFF_#:[244]:----------------:// // [244]
    //:#_TURN_SPECIFIC_SUB_TESTS_ONN_#:[244]:----------------:// // [244]
                                                                 // [244]
        //:  #__ARTDUDE_UTM_U25CLUS__#  ://                      // [275][REF][244]
        const c_artdude_utm_u25clus =( 1 );                      // [275][REF][244]
                                                                 // [244]
    //:----------------:#_TURN_SPECIFIC_SUB_TESTS_OFF_#:[244]:// // [244]
    //:----------------:#_TURN_SPECIFIC_SUB_TESTS_ONN_#:[244]:// // [244]
                                                                 // [244]
                                                                 // [244]
//:===========================:#_UNIT_TESTING_OPTIONS_#:[244]:// // [244]
//:DEPLOY_THIS_SERVER_YOURSELF:[034]:========================:// // [---]
/**----------------------------------------------------------::: // [???]
                                                                 // [???]
    Atomic_Ivy_MMO (AIM) client _AND_ server.                    // [???]
                                                                 // [???]
    If you are looking at this code in a debugger,               // [???]
    you could copy+paste it and deploy it RIGHT NOW!             // [???]
                                                                 // [???]
    Deployment Steps :                                           // [???]
                                                                 // [???]
    1. Copy Everything You See And Save As "ATOMIC_IVY_MMO.JS"   // [346]
                                                                 // [???]
    2. create package.json that looks like this:                 // [???]
                                                                 // [???]
        STEP 2 FOR PROGRAMMERS :                                 // [???]
                                                                 // [???]
        touch package.json                                       // [073]
        echo '{ "dependencies":{"pg":"8.7.3"}}' > package.json   // [073]
                                                                 // [???]
        STEP 2 FOR ARTISTS :                                     // [???]
                                                                 // [???]
            +-------------------------------------------------+  // [073]
            | Notepad ++ : package.json               |[-]|[X]|  // [346][BUG][073]
            +-------------------------------------------------+  // [073]
            |    |                                            |  // [073]
            | 01 |  {                                         |  // [073]
            | 02 |      "//" : "[ pg added in video [039] ]"  |  // [073]
            | 03 |  ,   "dependencies": { "pg" : "8.7.3" }    |  // [073]
            | 04 |                                            |  // [346]
            | 05 |  ,   "scripts" :{                          |  // [346]
            | 06 |      "start" : "node ./ATOMIC_IVY_MMO.JS"  |  // [346]
            | 07 |      }                                     |  // [346]
            | 08 |  }                                         |  // [073]
            |    |                                            |  // [073]
            +----+--------------------------------------------+  // [073]
                                                                 // [???]
    3. git init . && git add . && git commit -m "[AIM]"          // [???]
                                                                 // [???]
    4. heroku apps:create APPNAME     ## Example: "aim-kanji" ## // [???]
                                                                 // [???]
    5. heroku addons:create              \                       // [???]
            heroku-postgresql:hobby-dev  \                       // [???]
            --version=14                 \                       // [???]
            --app  "APPNAME"             \                       // [???]
            --name "APPNAME-database"    ## END OF COMMAND ##    // [???]
                                                                 // [???]
    6. heroku labs:enable  runtime-dyno-metadata --app APPNAME   // [???]
                                                                 // [???]
    7. git push heroku master                                    // [???]
                                                                 // [???]
:::----------------------------------------------------------**/ // [---]
//:========================:DEPLOY_THIS_SERVER_YOURSELF:[034]:// // [---]
//:HIT_THE_GROUND_RUNNING_MY_FRIEND:[034]:===================:// // [---]
/**----------------------------------------------------------::: // [---]
                                                                 // [???]
    Coding Convention ( s ):                                     // [063]
                                                                 // [063]
        let : Only for temporary [object/system] references      // [063]
        let : Okay... And for "temp macros"                      // [066]
                                                                 // [???]
    DODS Hungarian Notation :       [DODS: DataOrientedDesign's] // [???]     
                                                                 // [???]
        c_    : const    ( GLOBAL ) ( use like c99 macros )[064] // [???]
        d_    : data     ( GLOBAL )                              // [???]
        f_    : function ( GLOBAL )                              // [???]
        l_    : library  ( GLOBAL )                              // [???]
                                                                 // [???]
        m_    : member   ( LOCAL  )(SERVER SIDE CODE ONLY) [067] // [???]
        i_    : input    ( LOCAL  )                              // [???]
        o_    : output   ( LOCAL  )                              // [???]
                                                                 // [???]
    SQL Table Prefixes :                                         // [041] 
                                                                 // [041] 
        @tab@ : tab_ : A Normal Table                            // [041] 
        @lnk@ : lnk_ : A Link   Table                            // [041]    
        @con@ : con_ : A CONstraint                              // [042] 
         @c_@ :   c_ : Column Name                               // [041] 
         @k_@ :   k_ : Foriegn_Key ( id )                        // [041] 
        @iid@ : iid  : Primary_Key , NOT A PREFIX                // [041] 
                                                                 // [041] 
        NO MORE SQL PREFIXES THAN THAT!!!                        // [041] 
                                                                 // [---]
:::----------------------------------------------------------**/ // [---]
//:===================:HIT_THE_GROUND_RUNNING_MY_FRIEND:[034]:// // [---]
//:ENVIRONMENT_DETECTION:[026]:==============================:// // [140][---][026]
                                                                 // [---]
    //:TAG[ environment-detection | env-detection ]::::::://     // [352]
                                                                 // [---]
    const yesnode =( "undefined" === typeof window );            // [140][042][026]
    const notnode =( "undefined"  != typeof window );            // [140][042][026]
                                                                 // [---]
    const firefox =(                                             // [077]    
        notnode                                                  // [077]
        &&                                                       // [077]
        ('netscape' in window )                                  // [077]
        &&                                                       // [077]
        / rv:/.test( navigator.userAgent )                       // [077]
    );;                                                          // [077]
                                                                 // [---]
    //:#_ARE_WE_IN_HEROKU_APP_SERVER_#:[358]:------------://     // [358][--------]
                                                                 // [358][--------]
        const yeshero =(                                         // [358][--------]
                                                                 // [358][--------]
            ( !! notnode  /** #_DBOC_2022_# **/   ) ? 0 :        // [358][CAP][352]
            ( !! process.env.HEROKU_EXEC_URL      ) ? 1 :        // [358][--------]
            ( !! process.env.HEROKU_JMX_OPTIONS   ) ? 1 :        // [358][--------]
            ( !! process.env.HEROKU_APP_NAME      ) ? 1 :        // [358][--------]
            0                                                    // [358][--------]
        );;                                                      // [358][--------]
        const nothero =( 1 - yeshero );                          // [358][--------]
                                                                 // [358][--------]
        const yes_heroku =("[FIX:USE:yeshero(7__letters)]");     // [358][--------]
        const not_heroku =("[FIX:USE:nothero(7__letters)]");     // [358][--------]
                                                                 // [358][--------]
    //:------------:#_ARE_WE_IN_HEROKU_APP_SERVER_#:[358]://     // [358][--------]
    //:#_ARE_WE_IN_GOOGLE_APP_ENGINE_#:[352]:------------://     // [352]
                                                                 // [352]
        const yesgoog =(                                         // [352]
                                                                 // [352]
            ( !! notnode  /** #_DBOC_2022_# **/   ) ? 0 :        // [352]
            ( !! process.env.GOOGLE_CLOUD_PROJECT ) ? 1 :        // [352]
            ( !! process.env.GAE_INSTANCE         ) ? 1 :        // [352]
            ( !! process.env.GAE_APPLICATION      ) ? 1 :        // [357]
            0                                                    // [352]
        );;                                                      // [352]
        const notgoog =( 1 - yesgoog );                          // [352]
                                                                 // [352]
        const yes_gae =( "[FIX:USE:yesgoog]" );                  // [352]
        const not_gae =( "[FIX:USE:notgoog]" );                  // [352]
                                                                 // [352]
    //:-------------:_ARE_WE_IN_GOOGLE_APP_ENGINE_#:[352]://     // [352]
                                                                 // [---]
                                                                 // [---]
//:==============================:ENVIRONMENT_DETECTION:[026]:// // [140][026]
//:TOP_LEVEL_CONSTANT_MACROS:[085]:==========================:// // [085]
                                                                 // [085]
    //:TAG[ constants | macros | constant | macro       ]://     // [088]
    //:TAG[ CONSTANTS_SECTION | constants-section       ]://     // [161]
    //:TAG[ constants_section | constants_section       ]://     // [161]
    //:TAG[ constantssection  | CONSTANTSSECTION        ]://     // [161]
    //:TAG[ top-level-constants | top level constants   ]://     // [263]
    //:TAG[ top-level-consts | top_level_consts | t_l_c ]://     // [288]
    //:TAG[ TOP_LEVEL_CONSTANTS | TOP_LEVEL_CONSTS      ]://     // [313]
                                                                 // [---]   
    //:#_128_X_128_CHUNK_TYPES_#:[473]:------------------://     // [473]
    //:#_128_X_128_CHUNK_KINDS_#:[473]:------------------://     // [473]
                                                                 // [473]
        const c_c7t_l16     = "[USE:c.c49_l16]" ;   //:::://     // [473]
        const c_c7t_pf8     = "[USE:c.c49_pf8]" ;   //:::://     // [473]
        const c_c7t_t25     = "[USE:c.c49_t25]" ;   //:::://     // [473]
                                                    //:::://     // [473]
        const c_49k_l16     = "[USE:c.c49_l16]" ;   //:::://     // [473]
        const c_49k_pf8     = "[USE:c.c49_pf8]" ;   //:::://     // [473]
        const c_49k_t25     = "[USE:c.c49_t25]" ;   //:::://     // [473]
                                                    //:::://     // [473]
        const c_c49kind_l16 = "[USE:c.c49_l16]" ;   //:::://     // [473]
        const c_c49kind_pf8 = "[USE:c.c49_pf8]" ;   //:::://     // [473]
        const c_c49kind_t25 = "[USE:c.c49_t25]" ;   //:::://     // [473]
                                                    //:::://     // [473]
        const c_c49type_l16 = "[USE:c.c49_l16]" ;   //:::://     // [473]
        const c_c49type_pf8 = "[USE:c.c49_pf8]" ;   //:::://     // [473]
        const c_c49type_t25 = "[USE:c.c49_t25]" ;   //:::://     // [473]
                                                    //:::://     // [473]
        const c_k49_l16     = "[USE:c.c49_l16]" ;   //:::://     // [473]
        const c_k49_pf8     = "[USE:c.c49_pf8]" ;   //:::://     // [473]
        const c_k49_t25     = "[USE:c.c49_t25]" ;   //:::://     // [473]
                                                    //:::://     // [473]
        const c_t49_l16     = "[USE:c.c49_l16]" ;   //:::://     // [473]
        const c_t49_pf8     = "[USE:c.c49_pf8]" ;   //:::://     // [473]
        const c_t49_t25     = "[USE:c.c49_t25]" ;   //:::://     // [473]
                                                    //:::://     // [473]
        const c_c4k_l16     = "[USE:c.c49_l16]" ;   //:::://     // [473]
        const c_c4k_pf8     = "[USE:c.c49_pf8]" ;   //:::://     // [473]
        const c_c4k_t25     = "[USE:c.c49_t25]" ;   //:::://     // [473]
                                                                 // [473]
        const c_c49_l16 =( 1 );     //: CHUNKTYPE_L16 :::://     // [473]
        const c_c49_pf8 =( 2 );     //: CHUNKTYPE_PF8 :::://     // [473]
        const c_c49_t25 =( 3 );     //: CHUNKTYPE_T25 :::://     // [473]
                                                                 // [473]
    //:------------------:#_128_X_128_CHUNK_KINDS_#:[473]://     // [473]
    //:------------------:#_128_X_128_CHUNK_TYPES_#:[473]://     // [473]
                                                                 // [---]
//////////////////////////////////////////////////////////////// // [472]
    //:#_128_X_128_CHUNK_ENUMS_#:[472]:------------------://     // [472]
                                                                 // [472]
    const ___________128_x_128_chunk_enums___________=(0)        // [472]
//////////////////////////////////////////////////////////////// // [472]
,c_c00= 0,c_c01= 1,c_c02= 2,c_c03= 3,c_c04= 4,c_c05= 5,c_c06= 6  // [472]
////                                                             // [472]
,c_c07= 7,c_c08= 8,c_c09= 9,c_c10=10,c_c11=11,c_c12=12,c_c13=13  // [472]
,c_c14=14,c_c15=15,c_c16=16,c_c17=17,c_c18=18,c_c19=19,c_c20=20  // [472]
,c_c21=21,c_c22=22,c_c23=23,c_c24=24,c_c25=25,c_c26=26,c_c27=27  // [472]
,c_c28=28,c_c29=29,c_c30=30,c_c31=31,c_c32=32,c_c33=33,c_c34=34  // [472]
,c_c35=35,c_c36=36,c_c37=37,c_c38=38,c_c39=39,c_c40=40,c_c41=41  // [472]
////                                                             // [472]
,c_c42=42,c_c43=43,c_c44=44,c_c45=45,c_c46=46,c_c47=47,c_c48=48  // [472]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [472]
//////////////////////////////////////////////////////////////// // [472]
                                                                 // [472]
        //:#_128_X_128_CHUNK_KIND_ENUMS_#:[472]:---------://     // [472]
                                                                 // [472]
            const _128_x_128_chunk_kinds____level_=( 0 )         // [472]
            ////                                                 // [472]
            ,                     c_l00= 0                       // [472]
            ,            c_l01= 1,c_l02= 2,c_l03= 3              // [472]
            ,   c_l04= 4,c_l05= 5,c_l06= 6,c_l07= 7,c_l08= 8     // [472]
            ,            c_l09= 9,c_l10=10,c_l11=11              // [472]
            ,                     c_l12=12                       // [472]
            ////                                                 // [472]
            , c_l13=13  //: #_CELLULAR_AUTOMATA_ETC_# :::://     // [472]
            , c_l14=14  //: #_CELLULAR_AUTOMATA_ETC_# :::://     // [472]
            , c_l15=15  //: #_CELLULAR_AUTOMATA_ETC_# :::://     // [472]
            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [472]
            const _128_x_128_chunk_kinds____prefab_=( 0 )        // [472]
            ////                                                 // [472]
            ,   c_p00=(0),c_p01=(1),c_p02=(2),c_p03=(3)          // [472]
            ,   c_p04=(4),c_p05=(5),c_p06=(6),c_p07=(7)          // [472]
            /// _________,_________,_________,_________          // [472]
            /// _________,_________,_________,_________          // [472]
            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [472]
            const _128_x_128_chunk_kinds____thumbnail_=(0)       // [472]
                                                                 // [472]
            ,   c_t00= 0,c_t01= 1,c_t02= 2,c_t03= 3,c_t04= 4     // [472]
            ,   c_t05= 5,c_t06= 6,c_t07= 7,c_t08= 8,c_t09= 9     // [472]
            ,   c_t10=10,c_t11=11,c_t12=12,c_t13=13,c_t14=14     // [472]
            ,   c_t15=15,c_t16=16,c_t17=17,c_t18=18,c_t19=19     // [472]
            ,   c_t20=20,c_t21=21,c_t22=22,c_t23=23,c_t24=24     // [472]
            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [472]
        //:---------:#_128_X_128_CHUNK_KIND_ENUMS_#:[472]://     // [472]
                                                                 // [472]
                                                                 // [472]
    //:------------------:#_128_X_128_CHUNK_ENUMS_#:[472]://     // [472]
    //:#_BINGTEN_#:[430]:--------------------------------://     // [---]
    /** ************************************************ ***     // [430]
        |<-------------------- BINGTEN --------------->|         // [430]
        [  _1_2_3_4_  |  _5_ _6_  |  _7_ _8_ | _9_ _A_ ]         // [430]
        [  ___v16___  |  l_x l_y  |  m_x m_y | __ro4__ ]         // [430]
    *** ************************************************ **/     // [430]
        //:#_BINGTEN_MASKS_#:[430]:----------------------://     // [430]
                                                                 // [430]
            const c_bingten_am6_msk_l_x = 0x20 ;                 // [430]
            const c_bingten_am6_msk_l_y = 0x10 ;                 // [430]
                                                                 // [430]
            const c_bingten_am6_msk_m_x = 0x08 ;                 // [430]
            const c_bingten_am6_msk_m_y = 0x04 ;                 // [430]
                                                                 // [430]
            const c_bingten_am6_msk_ro4 = 0x03 ;                 // [430]
                                                                 // [430]
        //:----------------------:#_BINGTEN_MASKS_#:[430]://     // [430]
        //:#_BINGTEN_SHIFTS_#:[430]:---------------------://     // [430]
                                                                 // [430]
            const c_bingten_am6_shi_l_x =(  5 );                 // [430]
            const c_bingten_am6_shi_l_y =(  4 );                 // [430]
                                                                 // [430]
            const c_bingten_am6_shi_m_x =(  3 );                 // [430]
            const c_bingten_am6_shi_m_y =(  2 );                 // [430]
                                                                 // [430]
            const c_bingten_am6_shi_ro4 =(  1 );                 // [430]
                                                                 // [430]
        //:---------------------:#_BINGTEN_SHIFTS_#:[430]://     // [430]
                                                                 // [430]
                                                                 // [430]
    //:--------------------------------:#_BINGTEN_#:[430]://     // [430]
    //:#_BINTILE_SPECIFICALLY_BINGEOM_#:[429]:-----------://     // [---]
    //:#_BINARY_TILE_LAYOUT_#:[429]:---------------------://     // [429]
    /** ************************************************ ***     // [429]
                                                                 // [429]
        [ _________mg0 ][ _________bg1 ][ _________fg2 ][??]     // [429]
        [ _v16 ____am6 ][ _v16 ____am6 ][ _v16 ____am6 ][??]     // [429]
        [ 1111 1111 11 ][ 1111 1111 11 ][ 1111 1111 11 ][11]     // [429]
                                                                 // [429]
        TAG[ bingeom_layout | bingeom_bits ]                     // [429]
                                                                 // [429]
    *** ************************************************ **/     // [429]
                                                                 // [429]
        //:TAG[ u_bintile | u_bintile_bits | bin-bits   ]://     // [429]
        //:TAG[ u-bintile-bits | binary-tile-bits       ]://     // [429]
                                                                 // [429]
        //:#_BINGEOM_MG0_#:------------------------------://     // [429]
                                                                 // [429]
            const c_bingeom_mg0_all_msk =( 0xFFC00000 );         // [429]
            const c_bingeom_mg0_all_shi =(         22 );         // [429]
                                                                 // [429]
            const c_bingeom_mg0_v16_msk =( 0xF0000000 );         // [429]
            const c_bingeom_mg0_v16_shi =(         28 );         // [429]
                                                                 // [429]
            const c_bingeom_mg0_am6_msk =( 0x0FC00000 );         // [429]
            const c_bingeom_mg0_am6_shi =(         22 );         // [429]
                                                                 // [429]
        //:------------------------------:#_BINGEOM_MG0_#://     // [429]
        //:#_BINGEOM_BG1_#:------------------------------://     // [429]
                                                                 // [429]
            const c_bingeom_bg1_all_msk =( 0x003FF000 );         // [429]
            const c_bingeom_bg1_all_shi =(         12 );         // [429]
                                                                 // [429]
            const c_bingeom_bg1_v16_msk =( 0x003C0000 );         // [429]
            const c_bingeom_bg1_v16_shi =(         18 );         // [429]
                                                                 // [429]
            const c_bingeom_bg1_am6_msk =( 0x0003F000 );         // [429]
            const c_bingeom_bg1_am6_shi =(         12 );         // [429]
                                                                 // [429]
        //:------------------------------:#_BINGEOM_BG1_#://     // [429]
        //:#_BINGEOM_FG2_#:------------------------------://     // [429]
                                                                 // [429]
            const c_bingeom_fg2_all_msk =( 0x00000FFC );         // [429]
            const c_bingeom_fg2_all_shi =(          2 );         // [429]
                                                                 // [429]
            const c_bingeom_fg2_v16_msk =( 0x00000F00 );         // [429]
            const c_bingeom_fg2_v16_shi =(          8 );         // [429]
                                                                 // [429]
            const c_bingeom_fg2_am6_msk =( 0x000000FC );         // [429]
            const c_bingeom_fg2_am6_shi =(          2 );         // [429]
                                                                 // [429]
        //:------------------------------:#_BINGEOM_FG2_#://     // [429]
        //:#_MEMBITS_TEST_#:[429]:-----------------------://     // [429]
                                                                 // [429]
            //:#_MATCHING_SHIFT_AMOUNTS_#:[429]:---------://     // [429]
                                                                 // [429]
                ASS( c_bingeom_mg0_all_shi                       // [429]
                ===  c_bingeom_mg0_am6_shi                       // [429]
                ,  "[c_bingeom_mg0:ALL_SHI!=AM6_SHI]" );         // [429]
                                                                 // [429]
                ASS( c_bingeom_bg1_all_shi                       // [429]
                ===  c_bingeom_bg1_am6_shi                       // [429]
                ,  "[c_bingeom_bg1:ALL_SHI!=AM6_SHI]" );         // [429]
                                                                 // [429]
                ASS( c_bingeom_fg2_all_shi                       // [429]
                ===  c_bingeom_fg2_am6_shi                       // [429]
                ,  "[c_bingeom_fg2:ALL_SHI!=AM6_SHI]" );         // [429]
                                                                 // [429]
            //:---------:#_MATCHING_SHIFT_AMOUNTS_#:[429]://     // [429]
            //:#_SUBMASK_SMASH_#:[429]:------------------://     // [429]
                                                                 // [429]
                ASS( ((   c_bingeom_mg0_v16_msk                  // [429]
                     |    c_bingeom_mg0_am6_msk                  // [429]
                     )>>>0)                                      // [429]
                      === c_bingeom_mg0_all_msk                  // [429]
                ,       "[c_bingeom_mg0:SMOKED]" );;             // [429]
                                                                 // [429]
                ASS( (    c_bingeom_bg1_v16_msk                  // [429]
                     |    c_bingeom_bg1_am6_msk                  // [429]
                     )=== c_bingeom_bg1_all_msk                  // [429]
                ,       "[c_bingeom_bg1:SMOKED]" );;             // [429]
                                                                 // [429]
                ASS( (    c_bingeom_fg2_v16_msk                  // [429]
                     |    c_bingeom_fg2_am6_msk                  // [429]
                     )=== c_bingeom_fg2_all_msk                  // [429]
                ,       "[c_bingeom_fg2:SMOKED]" );;             // [429]
                                                                 // [429]
            //:------------------:#_SUBMASK_SMASH_#:[429]://     // [429]
            //:##_SUBMASKS_SUMS_#:[429]:-----------------://     // [429]
                                                                 // [429]
                //:--------------------------------------://     // [429]
                //: TODO: Bits in all sub masks of a  :::://     // [429]
                //: given sub-layer (mg0,bg1,fg2)     :::://     // [429]
                //: should add up to 10. (10 bits)    :::://     // [429]
                //:--------------------------------------://     // [429]
                                                                 // [429]
            //:#-----------------:#_SUBMASKS_SUMS_#:[429]://     // [429]
            //:#_THE_FINAL_SMASH_#:[429]:----------------://     // [429]
                                                                 // [429]
                ASS( ((   0x3                                    // [429]
                     |    c_bingeom_mg0_v16_msk                  // [429]
                     |    c_bingeom_mg0_am6_msk                  // [429]
                     |    c_bingeom_bg1_v16_msk                  // [429]
                     |    c_bingeom_bg1_am6_msk                  // [429]
                     |    c_bingeom_fg2_v16_msk                  // [429]
                     |    c_bingeom_fg2_am6_msk                  // [429]
                     )>>>0)                                      // [429]
                     === 0xFFFFFFFF                              // [429]
                ,       "[c_bingeom_all:SMOKED]" );;             // [429]
                                                                 // [429]
            //:----------------:#_THE_FINAL_SMASH_#:[429]://     // [429]
                                                                 // [429]
        //:-----------------------:#_MEMBITS_TEST_#:[429]://     // [429]
                                                                 // [429]
    //:---------------------:#_BINARY_TILE_LAYOUT_#:[429]://     // [429]
    //:-----------:#_BINTILE_SPECIFICALLY_BINGEOM_#:[429]://     // [---]
    //:#_BINGEOM_IN_PLACE_:[430]:------------------------://     // [431]
    //:                                                  ://     // [431]
    //:     Different geometry layer binary tile         ://     // [431]
    //:     bit-masks IN_PLACE. So that we can toggle    ://     // [431]
    //:     on/off in place without shifting out of      ://     // [431]
    //:     the UINT32 [ mg0,bg1,fg2 ]are packed into.   ://     // [431]
    //:                                                  ://     // [431]
    //:- - - - - - - - - - - - -- - - - - - - - - - - - -://     // [431]
                                                                 // [431]
            //:#_MG0_WITHIN_BINTILE_BITS_#:[431]:--------://     // [431]
                                                                 // [431]
                //: [ 1111 _1_ _1_ _1_ _1_ _1_ _1_ ] ::::://     // [431]
                //: [ v16  l_x l_y m_x m_y __ro4__ ] ::::://     // [431]
                                                                 // [431]
                const c_bingeom_mg0_bit_v16 =( 0xF0000000 );     // [431]
                const c_bingeom_mg0_bit_l_x =( 0x08000000 );     // [431]
                const c_bingeom_mg0_bit_l_y =( 0x04000000 );     // [431]
                const c_bingeom_mg0_bit_m_x =( 0x02000000 );     // [431]
                const c_bingeom_mg0_bit_m_y =( 0x01000000 );     // [431]
                const c_bingeom_mg0_bit_ro4 =( 0x00C00000 );     // [431]
                                                                 // [---]
                const c_bingeom_mg0_shi_v16 =(  28  );;;;;;;     // [436]
                const c_bingeom_mg0_shi_l_x =(  27  );;;;;;;     // [436]
                const c_bingeom_mg0_shi_l_y =(  26  );;;;;;;     // [436]
                const c_bingeom_mg0_shi_m_x =(  25  );;;;;;;     // [436]
                const c_bingeom_mg0_shi_m_y =(  24  );;;;;;;     // [436]
                const c_bingeom_mg0_shi_ro4 =(  22  );;;;;;;     // [436]
                                                                 // [436]
                {;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [436]
                    let b_1 =( c_bingeom_mg0_shi_v16+4-1 );;     // [436]
                    let b_0 =( c_bingeom_mg0_shi_ro4-(0) );;     // [436]
                    ASS( b_1-b_0+1 === 10 , "[@MG0_TEN@]");;     // [436]
                };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [436]
                                                                 // [---]
            //:--------:#_MG0_WITHIN_BINTILE_BITS_#:[431]://     // [431]
            //:#_BG1_WITHIN_BINTILE_BITS_#:[431]:--------://     // [431]
                                                                 // [431]
                //: [ 1111 _1_ _1_ _1_ _1_ _1_ _1_ ] ::::://     // [431]
                //: [      l_x l_y m_x m_y __ro4__ ] ::::://     // [431]
                                                                 // [431]
                const c_bingeom_bg1_bit_v16 =( 0x003C0000 );     // [431]
                const c_bingeom_bg1_bit_l_x =( 0x00020000 );     // [431]
                const c_bingeom_bg1_bit_l_y =( 0x00010000 );     // [431]
                const c_bingeom_bg1_bit_m_x =( 0x00008000 );     // [431]
                const c_bingeom_bg1_bit_m_y =( 0x00004000 );     // [431]
                const c_bingeom_bg1_bit_ro4 =( 0x00003000 );     // [431]
                                                                 // [---]
                const c_bingeom_bg1_shi_v16 =(  18  );           // [436]
                const c_bingeom_bg1_shi_l_x =(  17  );           // [436]
                const c_bingeom_bg1_shi_l_y =(  16  );           // [436]
                const c_bingeom_bg1_shi_m_x =(  15  );           // [436]
                const c_bingeom_bg1_shi_m_y =(  14  );           // [436]
                const c_bingeom_bg1_shi_ro4 =(  12  );           // [436]
                                                                 // [436]
                {;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [436]
                    let b_1 =( c_bingeom_bg1_shi_v16+4-1 );;     // [436]
                    let b_0 =( c_bingeom_bg1_shi_ro4-(0) );;     // [436]
                    ASS( b_1-b_0+1 === 10 , "[@BG1_TEN@]");;     // [436]
                };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [436]
                                                                 // [---]
            //:--------:#_BG1_WITHIN_BINTILE_BITS_#:[431]://     // [431]
            //:#_FG2_WITHIN_BINTILE_BITS_#:[431]:--------://     // [431]
                                                                 // [431]
                //: [ 1111 _1_ _1_ _1_ _1_ _1_ _1_ ] ::::://     // [431]
                //: [      l_x l_y m_x m_y __ro4__ ] ::::://     // [431]
                                                                 // [431]
                const c_bingeom_fg2_bit_v16 =( 0x00000F00 );     // [431]
                const c_bingeom_fg2_bit_l_x =( 0x00000080 );     // [431]
                const c_bingeom_fg2_bit_l_y =( 0x00000040 );     // [431]
                const c_bingeom_fg2_bit_m_x =( 0x00000020 );     // [431]
                const c_bingeom_fg2_bit_m_y =( 0x00000010 );     // [431]
                const c_bingeom_fg2_bit_ro4 =( 0x0000000C );     // [431]
                                                                 // [---]
                const c_bingeom_fg2_shi_v16 =(  8  );            // [436]
                const c_bingeom_fg2_shi_l_x =(  7  );            // [436]
                const c_bingeom_fg2_shi_l_y =(  6  );            // [436]
                const c_bingeom_fg2_shi_m_x =(  5  );            // [436]
                const c_bingeom_fg2_shi_m_y =(  4  );            // [436]
                const c_bingeom_fg2_shi_ro4 =(  2  );            // [436]
                                                                 // [436]
                {;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [436]
                    let b_1 =( c_bingeom_fg2_shi_v16+4-1 );;     // [436]
                    let b_0 =( c_bingeom_fg2_shi_ro4-(0) );;     // [436]
                    ASS( b_1-b_0+1 === 10 , "[@FG2_TEN@]");;     // [436]
                };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [436]
                                                                 // [---]
            //:--------:#_FG2_WITHIN_BINTILE_BITS_#:[431]://     // [431]
            //:#_IN_PLACE_SMASH_#:[431]:-----------------://     // [431]
                                                                 // [431]
                ASS(                                             // [431]
                   ((0x0                                         // [431]
                    | c_bingeom_mg0_bit_v16                      // [431]
                    | c_bingeom_mg0_bit_l_x                      // [431]
                    | c_bingeom_mg0_bit_l_y                      // [431]
                    | c_bingeom_mg0_bit_m_x                      // [431]
                    | c_bingeom_mg0_bit_m_y                      // [431]
                    | c_bingeom_mg0_bit_ro4                      // [431]
                    )>>>0)                                       // [431]
                ===   c_bingeom_mg0_all_msk                      // [431]
                );;                                              // [431]
                ASS(                                             // [431]
                   ((0x0                                         // [431]
                    | c_bingeom_bg1_bit_v16                      // [431]
                    | c_bingeom_bg1_bit_l_x                      // [431]
                    | c_bingeom_bg1_bit_l_y                      // [431]
                    | c_bingeom_bg1_bit_m_x                      // [431]
                    | c_bingeom_bg1_bit_m_y                      // [431]
                    | c_bingeom_bg1_bit_ro4                      // [431]
                    )>>>0)                                       // [431]
                ===   c_bingeom_bg1_all_msk                      // [431]
                );;                                              // [431]
                ASS(                                             // [431]
                   ((0x0                                         // [431]
                    | c_bingeom_fg2_bit_v16                      // [431]
                    | c_bingeom_fg2_bit_l_x                      // [431]
                    | c_bingeom_fg2_bit_l_y                      // [431]
                    | c_bingeom_fg2_bit_m_x                      // [431]
                    | c_bingeom_fg2_bit_m_y                      // [431]
                    | c_bingeom_fg2_bit_ro4                      // [431]
                    )>>>0)                                       // [431]
                ===   c_bingeom_fg2_all_msk                      // [431]
                );;                                              // [431]
            //:-----------------:#_IN_PLACE_SMASH_#:[431]://     // [---]
            //:#_MIR_LAT_#:[461]:------------------------://     // [461]
            //:#_LAT_MIR_#:[461]:------------------------://     // [461]
                                                                 // [461]
                //:#_MIR_LAT_MG0_#:[461]:----------------://     // [461]
                //:#_LAT_MIR_MG0_#:[461]:----------------://     // [461]
                                                                 // [461]
                    const c_bingeom_mg0_bit_lat =( 0x0           // [461]
                    |     c_bingeom_mg0_bit_l_x                  // [461]
                    |     c_bingeom_mg0_bit_l_y                  // [461]
                    );;                                          // [461]
                    const c_bingeom_mg0_bit_mir =( 0x0           // [461]
                    |     c_bingeom_mg0_bit_m_x                  // [461]
                    |     c_bingeom_mg0_bit_m_y                  // [461]
                    );;                                          // [461]
                                                                 // [461]
                    const c_bingeom_mg0_shi_lat =(               // [461]
                          c_bingeom_mg0_shi_l_y                  // [461]
                    );;                                          // [461]
                    const c_bingeom_mg0_shi_mir =(               // [461]
                          c_bingeom_mg0_shi_m_y                  // [461]
                    );;                                          // [461]
                                                                 // [461]
                    ASS(  c_bingeom_mg0_shi_lat                  // [461]
                        < c_bingeom_mg0_shi_l_x );;              // [461]
                    ASS(  c_bingeom_mg0_shi_mir                  // [461]
                        < c_bingeom_mg0_shi_m_x );;              // [461]
                                                                 // [461]
                //:----------------:#_MIR_LAT_MG0_#:[461]://     // [461]
                //:----------------:#_LAT_MIR_MG0_#:[461]://     // [461]
                //:#_MIR_LAT_BG1_#:[461]:----------------://     // [461]
                //:#_LAT_MIR_BG1_#:[461]:----------------://     // [461]
                                                                 // [461]
                    const c_bingeom_bg1_bit_lat =( 0x0           // [461]
                    |     c_bingeom_bg1_bit_l_x                  // [461]
                    |     c_bingeom_bg1_bit_l_y                  // [461]
                    );;                                          // [461]
                    const c_bingeom_bg1_bit_mir =( 0x0           // [461]
                    |     c_bingeom_bg1_bit_m_x                  // [461]
                    |     c_bingeom_bg1_bit_m_y                  // [461]
                    );;                                          // [461]
                                                                 // [461]
                    const c_bingeom_bg1_shi_lat =(               // [461]
                          c_bingeom_bg1_shi_l_y                  // [461]
                    );;                                          // [461]
                    const c_bingeom_bg1_shi_mir =(               // [461]
                          c_bingeom_bg1_shi_m_y                  // [461]
                    );;                                          // [461]
                                                                 // [461]
                    ASS(  c_bingeom_bg1_shi_lat                  // [461]
                        < c_bingeom_bg1_shi_l_x );;              // [461]
                    ASS(  c_bingeom_bg1_shi_mir                  // [461]
                        < c_bingeom_bg1_shi_m_x );;              // [461]
                                                                 // [461]
                //:----------------:#_MIR_LAT_BG1_#:[461]://     // [461]
                //:----------------:#_LAT_MIR_BG1_#:[461]://     // [461]
                //:#_MIR_LAT_FG2_#:[461]:----------------://     // [461]
                //:#_LAT_MIR_FG2_#:[461]:----------------://     // [461]
                                                                 // [461]
                    const c_bingeom_fg2_bit_lat =( 0x0           // [461]
                    |     c_bingeom_fg2_bit_l_x                  // [461]
                    |     c_bingeom_fg2_bit_l_y                  // [461]
                    );;                                          // [461]
                    const c_bingeom_fg2_bit_mir =( 0x0           // [461]
                    |     c_bingeom_fg2_bit_m_x                  // [461]
                    |     c_bingeom_fg2_bit_m_y                  // [461]
                    );;                                          // [461]
                                                                 // [461]
                    const c_bingeom_fg2_shi_lat =(               // [461]
                          c_bingeom_fg2_shi_l_y                  // [461]
                    );;                                          // [461]
                    const c_bingeom_fg2_shi_mir =(               // [461]
                          c_bingeom_fg2_shi_m_y                  // [461]
                    );;                                          // [461]
                                                                 // [461]
                    ASS(  c_bingeom_fg2_shi_lat                  // [461]
                        < c_bingeom_fg2_shi_l_x );;              // [461]
                    ASS(  c_bingeom_fg2_shi_mir                  // [461]
                        < c_bingeom_fg2_shi_m_x );;              // [461]
                                                                 // [461]
                //:----------------:#_MIR_LAT_FG2_#:[461]://     // [461]
                //:----------------:#_LAT_MIR_FG2_#:[461]://     // [461]
                                                                 // [461]
            //:------------------------:#_MIR_LAT_#:[461]://     // [461]
            //:------------------------:#_LAT_MIR_#:[461]://     // [461]
                                                                 // [---]
    //:------------------------:#_BINGEOM_IN_PLACE_:[430]://     // [431]
    //:#_LEVEL_OVERLAY_TYPES_#:[409]:--------------------://     // [---]
                                                                 // [409]
        //:------------------------------------------://         // [409]
        //: As of writing this : 2022_11_01 , I am   ://         // [409]
        //: not 100% certain of relative order of    ://         // [409]
        //: [ mrd_sil , mrd_gcl , mrd_atl ]and may   ://         // [409]
        //: change that in the future.               ://         // [409]
        //:------------------------------------------://         // [409]
                                                                 // [409]
        const c_lovtype_mulroom = "[FIX:mrd_[sil|gcl|atl]]";     // [409]
        const c_lovtype_oneroom =( 0 );                          // [409]
        const c_lovtype_mrd_sil =( 1 ); //:SpecialItem_L://      // [409]
        const c_lovtype_mrd_gcl =( 2 ); //:Geom_Carve__L://      // [409]
        const c_lovtype_mrd_atl =( 3 ); //:Ascii_Text__L://      // [409]
                                                                 // [409]
    //:--------------------:#_LEVEL_OVERLAY_TYPES_#:[409]://     // [409]
    //:#_DATA_KIND_HASHES_#:[372]:-----------------------://     // [---][372]
                                                                 // [---][372]
        const c_dathash_und_err = "[FIX:ERR_UND]" ;              // [---][372]
        const c_dathash_uoe     = "[FIX:ERR_UND]" ;              // [---][372]
        const c_dathash_eou     = "[FIX:ERR_UND]" ;              // [---][372]
                                                                 // [---][372]
        const c_dathash_err_und = "[DATHASH_ERR_UND]" ;          // [---][372]
        const c_dathash_png_512 = "[DATHASH_PNG_512]" ;          // [---][372]
        const c_dathash_pix_512 = "[DATHASH_PIX_512]" ;          // [375][---]
                                                                 // [---][372]
    //:-----------------------:#_DATA_KIND_HASHES_#:[372]://     // [---][372]
    //:#_MIRROR_TOUCHING_BY_USING_XOR_#:[330]:-----------://     // [330]
                                                                 // [330]
        //:----------------------------------------------://     // [330]
        //: This is WRONG because if both bits are set   ://     // [330]
        //: on the X, then we don't want to flip         ://     // [330]
        //: their state! Use lookup table!!!!!!!!!!!!    ://     // [330]
        //:----------------------------------------------://     // [330]
                                                                 // [330]
        const c_to4_tog_m_x =( "[NOT:0xC]" );//:[ 11 00 ]://     // [330]
        const c_to4_tog_m_y =( "[NOT:0x3]" );//:[ 00 11 ]://     // [330]
                                                                 // [330]
    //:-----------:#_MIRROR_TOUCHING_BY_USING_XOR_#:[330]://     // [330]
    //:#_8_X_4_CAPS_#:[325]:-----------------------------://     // [---]
                                                                 // [325]
        const c_8x4_not = 0x00000000 ;                           // [325]
        const c_8x4_top = 0xFF99C381 ;                           // [325]
        const c_8x4_lef = 0xFFE9C0E1 ;                           // [325]
        const c_8x4_cen = 0xFF99005A ;                           // [325]
        const c_8x4_rig = 0xFF970387 ;                           // [325]
    //:-----------------------------:#_8_X_4_CAPS_#:[325]://     // [---]            
    //:#_TOGGLE_THE_AM4_BITS_#:[324]:--------------------://     // [324]
                                                                 // [324]
        const c_am4_tog_l_x =( 0x8 );                            // [324]
        const c_am4_tog_l_y =( 0x4 );                            // [324]
        const c_am4_tog_m_x =( 0x2 );                            // [324]
        const c_am4_tog_m_y =( 0x1 );                            // [324]
                                                                 // [324]
    //:--------------------:#_TOGGLE_THE_AM4_BITS_#:[324]://     // [324]
                                                                 // [---]
    const c_4x4_v_c_003 = "[FIX:c_4x4_v_m_003]" ;                // [318]
    const c_4x4_h_m_012 = "[FIX:c_4x4_h_c_012]" ;                // [318]
                                                                 // [318]
    const __simpler_auto_tile_shader_graphics__ = "[SATS.G]"     // [318]
                                                                 // [318]
        //: [ x_0 | x_1 | y_0 | y_1 ] ::::::::::::::::::::::::// // [318]
        //: [  L  |  R  |  T  |  B  ] ::::::::::::::::::::::::// // [318]
                                   //:  _BINA_  _NAME_ INDEX :// // [318]
    ,   c_4x4_dtm_000 = 0xF99FFFCC //: [ 0000 ][ ____ ]__00__:// // [318]
    ,   c_4x4_v_t_001 = 0xF999FFCC //: [ 0001 ][ ___B ]__01__:// // [318]
    ,   c_4x4_v_b_002 = 0x999FCCCC //: [ 0010 ][ __T_ ]__02__:// // [318]
    ,   c_4x4_v_m_003 = 0x9999CCCC //: [ 0011 ][ __TB ]__03__:// // [318]
    ,   c_4x4_h_l_004 = 0xF88FFFCC //: [ 0100 ][ _R__ ]__04__:// // [318]
    ,   c_4x4_ntl_005 = 0xF888FFCC //: [ 0101 ][ _R_B ]__05__:// // [318]
    ,   c_4x4_nbl_006 = 0x888FCCCC //: [ 0110 ][ _RT_ ]__06__:// // [318]
    ,   c_4x4_n_l_007 = 0x8888CCCC //: [ 0111 ][ _RTB ]__07__:// // [318]
    ,   c_4x4_h_r_008 = 0xF11FFF00 //: [ 1000 ][ L___ ]__08__:// // [318]
    ,   c_4x4_ntr_009 = 0xF111FF00 //: [ 1001 ][ L__B ]__09__:// // [318]
    ,   c_4x4_nbr_010 = 0x111F0000 //: [ 1010 ][ L_T_ ]__10__:// // [318]
    ,   c_4x4_n_r_011 = 0x11110000 //: [ 1011 ][ L_TB ]__11__:// // [318]
    ,   c_4x4_h_c_012 = 0xF00FFF00 //: [ 1100 ][ LR__ ]__12__:// // [318]
    ,   c_4x4_n_t_013 = 0xF000FF00 //: [ 1101 ][ LR_B ]__13__:// // [318]
    ,   c_4x4_n_b_014 = 0x000F0000 //: [ 1110 ][ LRT_ ]__14__:// // [318]
    ,   c_4x4_noa_015 = 0x90090640 //: [ 1111 ][ LRTB ]__15__:// // [318]
                                                                 // [318]
    //// TAG[ nonagon | nona-gon | nona_gon  | nona ] //////     // [318]
    //// TAG[ nonagone| nona-gone| nona_gone | gone ] //////     // [318]
    //// SEE[ nonagon_tiles | _____________________ ] //////     // [318]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [318]
                                                                 // [---]
    //:#_V16_DEBUG_COLOR_PALLET_#:[313]:-----------------://     // [313]
    //:#_V16_HEX_#:[313]:--------------------------------://     // [313]
                      //:::::::::TAG[ 16_Debug_Colors   ]://     // [313]
                      //:RELATED_TAG[ production_colors ]://     // [313]
                                                                 // [313]
    const _v16_debug_color_pallet_ = "[HACK]"                    // [313]
    ////                                                         // [313]
    ,   d_v16_hex_000 =( 0x111111 )   //: "BLACK"        ://     // [313]
    ////                              //:                ://     // [313]
    ,   d_v16_hex_001 =( 0xFF4400 )   //: "NINJA_RED"    ://     // [313]
    ,   d_v16_hex_002 =( 0xFF8800 )   //: "ORANGE"       ://     // [313]
    ,   d_v16_hex_003 =( 0xFFC300 )   //: "AMBER"        ://     // [313]
    ,   d_v16_hex_004 =( 0xFFFF00 )   //: "YELLOW"       ://     // [313]
    ,   d_v16_hex_005 =( 0xC3FF00 )   //: "ELECTRIC_LIME"://     // [313]
    ////                              //:                ://     // [313]
    ,   d_v16_hex_006 =( 0x00FF44 )   //: "ZOISITE"      ://     // [313]
    ,   d_v16_hex_007 =( 0x00FF88 )   //: "TEAL"         ://     // [313]
    ,   d_v16_hex_008 =( 0x00FFC3 )   //: "VAPOR"        ://     // [313]
    ,   d_v16_hex_009 =( 0x00FFFF )   //: "CYAN"         ://     // [313]
    ,   d_v16_hex_010 =( 0x00C3FF )   //: "WATER"        ://     // [313]
    ////                              //:                ://     // [313]
    ,   d_v16_hex_011 =( 0x4400FF )   //: "HAN_PURPLE"   ://     // [313]
    ,   d_v16_hex_012 =( 0x8800FF )   //: "INDIGO"       ://     // [313]
    ,   d_v16_hex_013 =( 0xC300FF )   //: "P_LIGHT"      ://     // [313]
    ,   d_v16_hex_014 =( 0xFF00FF )   //: "MAGENTA"      ://     // [313]
    ,   d_v16_hex_015 =( 0xFF00C3 )   //: "UBER_MAGENTA" ://     // [313]
    ////                                                         // [313]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [313]
                                                                 // [313]
    //:--------------------------------:#_V16_HEX_#:[313]://     // [313]
    //:-----------------:#_V16_DEBUG_COLOR_PALLET_#:[313]://     // [313]
    //:#_TOUCHING_TO_AGOLASET_CELL_XY_#:[286]:-----------://     // [286]
                                                                 // [286]
    const _agola_cell_names_to_cell_coords_ ="[HACK]" //////     // [286]
    ////                                                  //     // [286]
    //// @NTL@        @N_T@        @NTR@        @V_T@     //     // [286]
    ,   c_ntl_x =0 , c_n_t_x =1 , c_ntr_x =2 , c_v_t_x =3 //     // [286]
    ,   c_ntl_y =0 , c_n_t_y =0 , c_ntr_y =0 , c_v_t_y =0 //     // [286]
    ////                                                  //     // [286]
    //// @N_L@        @NOA@        @N_R@        @V_M@     //     // [286]
    ,   c_n_l_x =0 , c_noa_x =1 , c_n_r_x =2 , c_v_m_x =3 //     // [286]
    ,   c_n_l_y =1 , c_noa_y =1 , c_n_r_y =1 , c_v_m_y =1 //     // [286]
    ////                                                  //     // [286]
    //// @NBL@        @N_B@        @NBR@        @V_B@     //     // [286]
    ,   c_nbl_x =0 , c_n_b_x =1 , c_nbr_x =2 , c_v_b_x =3 //     // [286]
    ,   c_nbl_y =2 , c_n_b_y =2 , c_nbr_y =2 , c_v_b_y =2 //     // [286]
    ////                                                  //     // [286]
    //// @H_L@        @H_C@        @H_R@        @DTM@     //     // [286]
    ,   c_h_l_x =0 , c_h_c_x =1 , c_h_r_x =2 , c_dtm_x =3 //     // [286]
    ,   c_h_l_y =3 , c_h_c_y =3 , c_h_r_y =3 , c_dtm_y =3 //     // [286]
    ////                                                  //     // [286]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [286]
    //:-----------:#_TOUCHING_TO_AGOLASET_CELL_XY_#:[286]://     // [286]
    //:#_BULGE_CONSTANTS_#:[278]:========================://     // [278]
                                                                 // [278]
        const c_bu3_bulgout =( 0 ); //: BulgeMode : OUT  ://     // [278]
        const c_bu3_bulgnot =( 1 ); //: BulgeMode : NOT  ://     // [278]
        const c_bu3_bulginn =( 2 ); //: BulgeMode : INN  ://     // [278]
                                                                 // [278]
    //:========================:#_BULGE_CONSTANTS_#:[278]://     // [278]
                                                                 // [---]
    //:SEE[ _MATERIAL_COLOR_NAME_KEY_ ]::::::::::::::::::://
    //:#_MATERIAL_COLOR_CONSTANTS_#:[266]:---------------://     // [---][266]
    const __material_colors__ = "[HACK]" ///////////////////     // [---][266]
                                                                 // [---][266]
    ,   c________0 = 0xC8C8C8C8  //: Temp Body     Color ://     // [---][266]
    ,   c________1 = 0xA3A3A3A3  //: Temp Edge     Color ://     // [---][266]
    ,   c________2 = 0x42424242  //: Temp Body Alt_Color ://     // [---][266]
    ,   c________3 = 0x23232323  //: Temp Edge Alt_Color ://     // [---][266]
                                                                 // [---][266]
    ,   c_vacglow0 = 0xFF42BCFF  //:Glass Light Fixtures ://     // [268][BUG][266]
    ,   c_vacglow1 = 0xFF008BFF  //:HAVE The Lowest Level://     // [268][BUG][266]
    ,   c_vacglow2 = c________2  //:Of Material Strength ://     // [268][BUG][266]
    ,   c_vacglow3 = c________3  //:Strength: NONE       ://     // [268][BUG][266]
                                                                 // [---][266]
    ,   c_ladglow0 = 0x93E5FFFF  //:LighBulb - LADders   ://     // [268][266]
    ,   c_ladglow1 = 0x12DCFFFF  //:Leaves Ladders When  ://     // [268][266]
    ,   c_ladglow2 = c________2  //:It has been destroyed://     // [268][266]
    ,   c_ladglow3 = c________3  //:Strength: NONE       ://     // [268][266]
                                                                 // [---][266]
    ,   c_vacsoil0 = 0x00FF42FF  //:Vacant Soil, leaves  ://     // [268][266]
    ,   c_vacsoil1 = 0x072612FF  //:nothing when destroy-://     // [268][266]
    ,   c_vacsoil2 = 0x00FF42FF  //:-ed. Head bashable.  ://     // [268][266]
    ,   c_vacsoil3 = 0x261612FF  //:Low_Strength         ://     // [268][266]
                                                                 // [268][266]
    ,   c_ladsoil0 = 0x00FF02FF  //:Bauxite is dirt that ://     // [268][266]
    ,   c_ladsoil1 = 0x072612FF  //:leaves ladders when  ://     // [268][266]
    ,   c_ladsoil2 = 0x00FF02FF  //:it has been destroyed://     // [268][266]
    ,   c_ladsoil3 = 0x261612FF  //:Low_Strength         ://     // [268][266]
                                                                 // [---][266]
    ,   c_vacpurp0 = 0x8888FFFF  //: Vacant Purple       ://     // [268][266]
    ,   c_vacpurp1 = 0x222233FF  //: 1. Bombable         ://     // [268][266]
    ,   c_vacpurp2 = c________2  //: 2. Square           ://     // [---][266]
    ,   c_vacpurp3 = c________3  //: 3. Leaves Nothing   ://     // [---][266]
                                                                 // [---][266]
    ,   c_parpurp0 = 0x8844FFFF  //: Partial Purple      ://     // [268][266]
    ,   c_parpurp1 = 0x222233FF  //: 1. Bombable         ://     // [268][266]
    ,   c_parpurp2 = c________2  //: 2. Angled           ://     // [---][266]
    ,   c_parpurp3 = c________3  //: 3. #LEAVES_PARTIAL# ://     // [---][266]
                                                                 // [---][266]
    ,   c_ladpurp0 = 0x8800FFFF  //: Ladder Purple       ://     // [268][266]
    ,   c_ladpurp1 = 0x222233FF  //: 1. Bombable         ://     // [268][266]
    ,   c_ladpurp2 = c________2  //: 2. Square           ://     // [---][266]
    ,   c_ladpurp3 = c________3  //: 3. Leaves Ladders   ://     // [---][266]
                                                                 // [---][266]
    ,   c_falmarb0 = 0x995511FF  //: Falling Marble      ://     // [---][266]
    ,   c_falmarb1 = 0x636975FF  //: Only Destroyable    ://     // [268][266]
    ,   c_falmarb2 = c________2  //: By #_BOX_BOMBS_#    ://     // [---][266]
    ,   c_falmarb3 = c________3  //: Leaves NOTHING      ://     // [---][266]
                                                                 // [---][266]
    ,   c_falbeam0 = 0x995522FF  //: Falling Beams       ://     // [---][266]
    ,   c_falbeam1 = 0x636975FF  //: Only Destroyable    ://     // [268][266]
    ,   c_falbeam2 = c________2  //: By #_BOX_BOMBS_#    ://     // [---][266]
    ,   c_falbeam3 = c________3  //: Leaves NOTHING      ://     // [---][266]
                                                                 // [---][266]
    ,   c_faliron0 = 0x995533FF  //: Falling Iron        ://     // [---][266]
    ,   c_faliron1 = 0x636975FF  //: Only Destroyable    ://     // [268][266]
    ,   c_faliron2 = c________2  //: By #_BOX_BOMBS_#    ://     // [---][266]
    ,   c_faliron3 = c________3  //: Leaves NOTHING      ://     // [---][266]
                                                                 // [---][266]
    ,   c_godvent0 = 0x995544FF  //: God Vents.          ://     // [---][266]
    ,   c_godvent1 = 0x372318FF  //: Indestructable ,    ://     // [268][266]
    ,   c_godvent2 = c________2  //: but allows flames   ://     // [---][266]
    ,   c_godvent3 = c________3  //: to pass through     ://     // [---][266]
                                                                 // [---][266]
    ,   c_godiron0 = 0x995544FF  //: God Iron.           ://     // [---][266]
    ,   c_godiron1 = 0x372318FF  //: Indestructable ,    ://     // [268][266]
    ,   c_godiron2 = c________2  //: and IMPERMIABLE     ://     // [---][266]
    ,   c_godiron3 = c________3  //: to flames.          ://     // [---][266]
                                                                 // [---][266]
    ,   c_comsoli0 = 0xC04400FF  //: @_TENATIVE_@        ://     // [267][266]
    ,   c_comsoli1 = 0x221100FF  //: com : COMBUSTABLE   ://     // [267][266]
    ,   c_comsoli2 = c________2  //: soli: SOLID         ://     // [---][266]
    ,   c_comsoli3 = c________3  //: Coal ?              ://     // [---][266]
                                                                 // [---][266]
    ,   c_comliqu0 = 0xFF8800FF  //: @_TENATIVE_@        ://     // [267][266]
    ,   c_comliqu1 = 0x884400FF  //: com : COMBUSTABLE   ://     // [267][266]
    ,   c_comliqu2 = c________2  //: liqu: LIQUID        ://     // [---][266]
    ,   c_comliqu3 = c________3  //: Coal ?              ://     // [---][266]
                                                                 // [---][266]
    ,   c_comvapo0 = 0xFFAA44FF  //: @_TENATIVE_@        ://     // [268][267][266]
    ,   c_comvapo1 = 0xFF8800FF  //: com : COMBUSTABLE   ://     // [268][267][266]
    ,   c_comvapo2 = c________2  //: vapo: VAPOR(gas)    ://     // [---][266]
    ,   c_comvapo3 = c________3  //: Coal ?              ://     // [---][266]
                                                                 // [---][266]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [---][266]
    //:---------------:#_MATERIAL_COLOR_CONSTANTS_#:[266]://     // [---][266]
                                                                 // [---]
    const __touching_test_bit_masks__ = "[HACK]" ///////////     // [265]
                                                                 // [265]
                        //: NBI[c_x_0 c_x_1 c_y_0 c_y_1]:://     // [265]
    ,   c_to4_lef = 0x8 //: BIN[  1     _     _     _  ]:://     // [283][REF][265]
    ,   c_to4_rig = 0x4 //: BIN[  _     1     _     _  ]:://     // [283][REF][265]
    ,   c_to4_top = 0x2 //: BIN[  _     _     1     _  ]:://     // [283][REF][265]
    ,   c_to4_bot = 0x1 //: BIN[  _     _     _     1  ]:://     // [283][REF][265]
                                                                 // [265]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [265]
                                                                 // [265]
    ASS( 0x1 ===( c_to4_lef >>> 3 ) , "[C_TO4_LEF]" );           // [283][REF][265]
    ASS( 0x1 ===( c_to4_rig >>> 2 ) , "[C_TO4_RIG]" );           // [283][REF][265]
    ASS( 0x1 ===( c_to4_top >>> 1 ) , "[C_TO4_TOP]" );           // [283][REF][265]
    ASS( 0x1 ===( c_to4_bot >>> 0 ) , "[C_TO4_BOT]" );           // [283][REF][265]
                                                                 // [---]
    const __fourset_sub_tile_cells__ = "[HACK]" //////////////// // [264]
                                                                 // [---]
    ,   c_f4x_000= 0 ,c_f4x_001= 1 ,c_f4x_002= 2 ,c_f4x_003= 3   // [275][REF][264]
    ,   c_f4y_000= 0 ,c_f4y_001= 0 ,c_f4y_002= 0 ,c_f4y_003= 0   // [275][REF][264]
                                                                 // [---]
    ,   c_f4x_004= 0 ,c_f4x_005= 1 ,c_f4x_006= 2 ,c_f4x_007= 3   // [275][REF][264]
    ,   c_f4y_004= 1 ,c_f4y_005= 1 ,c_f4y_006= 1 ,c_f4y_007= 1   // [275][REF][264]
                                                                 // [---]
    ,   c_f4x_008= 0 ,c_f4x_009= 1 ,c_f4x_010= 2 ,c_f4x_011= 3   // [275][REF][264]
    ,   c_f4y_008= 2 ,c_f4y_009= 2 ,c_f4y_010= 2 ,c_f4y_011= 2   // [275][REF][264]
                                                                 // [---]
    ,   c_f4x_012= 0 ,c_f4x_013= 1 ,c_f4x_014= 2 ,c_f4x_015= 3   // [275][REF][264]
    ,   c_f4y_012= 3 ,c_f4y_013= 3 ,c_f4y_014= 3 ,c_f4y_015= 3   // [275][REF][264]
                                                                 // [---]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [264]
                                                                 // [---]
    const __auto_tile_constants__ = "[HACK]"    ////////////     // [283][---][263]
    /////////////////////////  //:BIN[ X X Y Y ]://              // [---][---][263] 
    ,   c_to4_del_x = ( 0x3 )  //:BIN[ 0 0 1 1 ]://              // [283][REF][263]
    ,   c_to4_del_y = ( 0xC )  //:BIN[ 1 1 0 0 ]://              // [283][REF][263]
    /////////////////////////                                    // [283][REF][263]
    /////////////////////////  //:BIN[ L L M M ]<--@AM4_BITS@:// // [283][REF][263]
    /////////////////////////  //:BIN[ X Y X Y ]<--@AM4_BITS@:// // [283][REF][263]
    /////////////////////////                                    // [283][REF][263]
    /////////////////////////  //:BIN[ @_am4_l_l_m_m_@ ]         // [283][REF][263]
    /////////////////////////  //:BIN[ @_am4_x_y_x_y_@ ]         // [283][REF][263]
    ,   c_am4_0lx   = ( 0x8 )  //:BIN[       1 0 0 0   ]://      // [283][REF][263]
    ,   c_am4_1ly   = ( 0x4 )  //:BIN[       0 1 0 0   ]://      // [283][REF][263]
    ,   c_am4_2mx   = ( 0x2 )  //:BIN[       0 0 1 0   ]://      // [283][REF][263]
    ,   c_am4_3my   = ( 0x1 )  //:BIN[       0 0 0 1   ]://      // [283][REF][263]
    ////                                                ////     // [283][REF][263]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [283][---][263]
                                                                 // [-------------]
    ASS( (0x1) ===((c_to4_del_x >> 0)&(0x1)) , "[@NTB_0@]" );    // [283][REF][263]
    ASS( (0x1) ===((c_to4_del_x >> 1)&(0x1)) , "[@NTB_1@]" );    // [283][REF][263]
    ASS( (0x1) ===((c_to4_del_y >> 2)&(0x1)) , "[@NTB_2@]" );    // [283][REF][263]
    ASS( (0x1) ===((c_to4_del_y >> 3)&(0x1)) , "[@NTB_3@]" );    // [283][REF][263]
                                                                 // [-------------]
    ASS( (0x1) ===( c_am4_0lx   >> 3       ) , "[HOR_LAT]" );    // [283][REF][263]
    ASS( (0x1) ===( c_am4_1ly   >> 2       ) , "[VER_LAT]" );    // [283][REF][263]
    ASS( (0x1) ===( c_am4_2mx   >> 1       ) , "[HOR_MIR]" );    // [283][REF][263]
    ASS( (0x1) ===( c_am4_3my   >> 0       ) , "[VER_MIR]" );    // [283][REF][263]
    ASS( (0xC) ===( c_am4_0lx | c_am4_1ly  ) , "[LATCHES]" );    // [283][REF][263]
    ASS( (0x3) ===( c_am4_2mx | c_am4_3my  ) , "[MIRRORS]" );    // [283][REF][263]
                                                                 // [-------------]
                                                                 // [---]
    //:#_AM4_VFF_#:------------------------------------------:// // [317]
    //:#_VFF_AM4_#:------------------------------------------:// // [317]
                                                                 // [317]
        //: SEE[ _VFF_AM4_HORLATCH_COINCIDENCE_ ] ::::::::::::// // [317]
        //: SEE[ _VFF_AM4_VERLATCH_COINCIDENCE_ ] ::::::::::::// // [317]
                                                                 // [317]
        const         c_vff_latches_hor =( c_am4_0lx >>> 0 );    // [317]
        const         c_vff_latches_ver =( c_am4_1ly >>> 0 );    // [317]
        ASS(  0x8 === c_vff_latches_hor , "[HORLATCH]" );        // [317]
        ASS(  0x4 === c_vff_latches_ver , "[VERLATCH]" );        // [317]
                                                                 // [---]
        const         c_vff_mirrors_hor =( c_am4_2mx >>> 0 );    // [329]
        const         c_vff_mirrors_ver =( c_am4_3my >>> 0 );    // [329]
        ASS(  0x2 === c_vff_mirrors_hor , "[HORMIRROR]" );       // [329]
        ASS(  0x1 === c_vff_mirrors_ver , "[VERMIRROR]" );       // [329]
                                                                 // [---]
    //:------------------------------------------:#_AM4_VFF_#:// // [317]
    //:------------------------------------------:#_VFF_AM4_#:// // [317]
                                                                 // [---]
                                                                 // [-------------]
    const c_fps =(  30  );  /** Simulation FrameRate **/         // [088][085][---]
                                                                 // [---]                      
    const c_dud = "[YOU_MEAN:c_dum:NO:DiscreteUnits:DUM]" ;      // [088]
                                                                 // [---]
    //:master_memory_cell_constants:[161]:---------------://     // [161]
                                                                 // [161]
        //:SEE[ AT[ AIM_MASTER_MEMORY_LAYOUT ] ]://              // [161]
        const      _AIM_MASTER_MEMORY_LAYOUT_ ="[HACK]"          // [161]
                                                                 // [161]
        ,   c_mm0 =( 0),c_mm1 =( 1),c_mm2 =( 2),c_mm3 =( 3)      // [161]
                                                                 // [161]
        ,   c_mm4 =( 4),c_mm5 =( 5),c_mm6 =( 6),c_mm7 =( 7)      // [161]
                                                                 // [161]
        ,   c_mm8 =( 8),c_mm9 =( 9),c_mma =(10),c_mmb =(11)      // [161]
                                                                 // [161]
        ,   c_mmc =(12),c_mmd =(13),c_mme =(14),c_mmf =(15)      // [161]
                                                                 // [161]
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [161]
                                                                 // [161]
    //:---------------:master_memory_cell_constants:[161]://     // [---]
    //:#_MASTER_MEMORY_CELL_XY_#:[288]:------------------://     // [288]
                                                                 // [288]
        const _AIM_MASTER_MEMORY_LAYOUT_XY_ = "[HACK]"           // [288]
                                                                 // [288]
        //: @_NOT_NEEDED_BY_ARTGOLA_@ ://                        // [288]
                                                                 // [288]
        ,   c_mm0_x = 0,c_mm1_x = 1,c_mm2_x = 2,c_mm3_x = 3      // [288]
        ,   c_mm0_y = 0,c_mm1_y = 0,c_mm2_y = 0,c_mm3_y = 0      // [288]
                                                                 // [288]
        ,   c_mm4_x = 0,c_mm5_x = 1,c_mm6_x = 2,c_mm7_x = 3      // [288]
        ,   c_mm4_y = 1,c_mm5_y = 1,c_mm6_y = 1,c_mm7_y = 1      // [288]
                                                                 // [288]
        ,   c_mm8_x = 0,c_mm9_x = 1,c_mma_x = 2,c_mmb_x = 3      // [288]
        ,   c_mm8_y = 2,c_mm9_y = 2,c_mma_y = 2,c_mmb_y = 2      // [288]
                                                                 // [288]
        ,   c_mmc_x = 0,c_mmd_x = 1,c_mme_x = 2,c_mmf_x = 3      // [288]
        ,   c_mmc_y = 3,c_mmd_y = 3,c_mme_y = 3,c_mmf_y = 3      // [288]
                                                                 // [288]
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [288]
                                                                 // [288]
    //:------------------:#_MASTER_MEMORY_CELL_XY_#:[288]://     // [---]
    //:#_MASTER_MEMORY_INDEXES_BY_SUB_SYS_#:[289]:-------://     // [289]
                                                                 // [289]
        const c_artdeca_mmi ="[FIX:c_mmi_artdeca]";              // [289]
        const c_artdeca_mmx ="[FIX:c_mmx_artdeca]";              // [289]
        const c_artdeca_mmy ="[FIX:c_mmy_artdeca]";              // [289]
                                                                 // [289]
        const c_mmi_artdeca =( c_mmb   );                        // [289]
        const c_mmx_artdeca =( c_mmb_x );                        // [289]
        const c_mmy_artdeca =( c_mmb_y );                        // [289]
        ASS(  c_mmx_artdeca +( c_mmy_artdeca * 4 )===c_mmb       // [289]
           , "[MMI_MMX_MMY:ARTDECA]" );;;;;;;;;;;;;;;;;;;;       // [289]
                                                                 // [---]
        //:#_YES_NEEDED_BY_ARTGOLA_#:[301]:--------------://     // [301]
                                                                 // [301]
            //: SEE[ _global_material_index_ ]:::::::::::://     // [301]
                                                                 // [301]
            const c_mmi_artgola_000_011 =( c_mmc );              // [301]
            const c_mmi_artgola_012_023 =( c_mmd );              // [301]
            const c_mmi_artgola_024_035 =( c_mme );              // [301]
            const c_mmi_artgola_036_047 =( c_mmf );              // [301]
                                                                 // [301]
            ASS( 12 === c_mmi_artgola_000_011 ,"[000_011]");     // [301]
            ASS( 13 === c_mmi_artgola_012_023 ,"[012_023]");     // [301]
            ASS( 14 === c_mmi_artgola_024_035 ,"[024_035]");     // [301]
            ASS( 15 === c_mmi_artgola_036_047 ,"[036_047]");     // [301]
                                                                 // [301]
        //:--------------:#_YES_NEEDED_BY_ARTGOLA_#:[301]://     // [301]
                                                                 // [---]
    //:-------:#_MASTER_MEMORY_INDEXES_BY_SUB_SYS_#:[289]://     // [289]
    //:#_DOUBLE_ENTENDRE_CELLS_#:[281]:------------------://     // [---]
                                                                 // [---]
        //:     @_NOT_NEEDED_BY_ARTGOLA_@ ://                    // [301][288]
        //: SEE[ _YES_NEEDED_BY_ARTGOLA_ ]://                    // [301][---]
                                                                 // [---]
        const c_g64 =( c_mmc ); ASS( 12 === c_g64 ,"[G64]");     // [281]
        const c_b64 =( c_mmd ); ASS( 13 === c_b64 ,"[B64]");     // [281]
        const c_f64 =( c_mme ); ASS( 14 === c_f64 ,"[F64]");     // [281]
        const c_d64 =( c_mmf ); ASS( 15 === c_d64 ,"[D64]");     // [281]
                                                                 // [281]
    //:------------------:#_DOUBLE_ENTENDRE_CELLS_#:[281]://     // [---]
    //:#_MAKE_LESS_CONFUSING_#:[301]:--------------------://     // [301]
                                                                 // [301]
        if( 0                                                    // [301]
        ||  c_g64 === c_mmi_artgola_000_011                      // [301]
        ||  c_b64 === c_mmi_artgola_012_023                      // [301]
        ||  c_f64 === c_mmi_artgola_024_035                      // [301]
        ||  c_d64 === c_mmi_artgola_036_047                      // [301]
        ){                                                       // [301]
            /** That's okay. **/                                 // [301]
        };;                                                      // [301]
        if( 0                                                    // [301]
        ||  c_g64  != c_mmi_artgola_000_011                      // [301]
        ||  c_b64  != c_mmi_artgola_012_023                      // [301]
        ||  c_f64  != c_mmi_artgola_024_035                      // [301]
        ||  c_d64  != c_mmi_artgola_036_047                      // [301]
        ){                                                       // [301]
            /** That's also okay. **/                            // [301]
        };;                                                      // [301]
    //:--------------------:#_MAKE_LESS_CONFUSING_#:[301]://     // [301]
    //:#_DOUBLE_ENTANDRA_CELLS_#:[288]:------------------://     // [288]
                                                                 // [288]
        //:------------------------------------------://         // [288]
        //: Spelled "ENTANDRA" because I can't spell ://         // [288]
        //:  "ENTENDRE" and want to be able to find  ://         // [288]
        //:  The sections 6 months from now.         ://         // [288]
        //:------------------------------------------://         // [288]
                                                                 // [288]
        const _IF_WE_EVER_NEED_IT_WE_GOT_IT_2022_ = "[!]"        // [288]
        ////                                                     // [288]
            //: @_NOT_NEEDED_BY_ARTGOLA_@ ://                    // [288]
        ////                                                     // [288]
        ,   c_g64_x =( c_mmc_x ) , c_g64_y =( c_mmc_y )          // [288]
        ,   c_b64_x =( c_mmd_x ) , c_b64_y =( c_mmd_y )          // [288]
        ,   c_f64_x =( c_mme_x ) , c_f64_y =( c_mme_y )          // [288]
        ,   c_d64_x =( c_mmf_x ) , c_d64_y =( c_mmf_y )          // [288]
        ////                                                     // [288]
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [288]
                                                                 // [288]
        ASS( 0 === c_g64_x ,"[ARTGOLA_DONT_NEED_YOU:001]");      // [288]
        ASS( 1 === c_b64_x ,"[ARTGOLA_DONT_NEED_YOU:002]");      // [288]
        ASS( 2 === c_f64_x ,"[ARTGOLA_DONT_NEED_YOU:003]");      // [288]
        ASS( 3 === c_d64_x ,"[ARTGOLA_DONT_NEED_YOU:004]");      // [288]
                                                                 // [288]
        ASS( 3 === c_g64_y ,"[ARTGOLA_DONT_NEED_YOU:005]");      // [288]
        ASS( 3 === c_b64_y ,"[ARTGOLA_DONT_NEED_YOU:006]");      // [288]
        ASS( 3 === c_f64_y ,"[ARTGOLA_DONT_NEED_YOU:007]");      // [288]
        ASS( 3 === c_d64_y ,"[ARTGOLA_DONT_NEED_YOU:008]");      // [288]
                                                                 // [288]
    //:------------------:#_DOUBLE_ENTANDRA_CELLS_#:[288]://     // [288]
    //:rooms_in_hotels_constants:[161]:------------------://     // [---]
                                                                 // [161]
        //:SEE[ AT[  _LEVEL_PACK_GEOMETRY_LAYOUT_  ]    ]://     // [161]
        const       _LEVEL_PACK_GEOMETRY_LAYOUT_ ="[HACK]"       // [161]
        //:ALSO_SEE[_LEVEL_PACK_DATA_LAYOUT_ ]           ://     // [161]
                                                                 // [161]
    ,                       c_r00=( 0)                           // [161]
                                                                 // [161]
    ,            c_r01=( 1),c_r02=( 2),c_r03=( 3)                // [161]
                                                                 // [161]
    , c_r04=( 4),c_r05=( 5),c_r06=( 6),c_r07=( 7),c_r08=( 8)     // [161]
                                                                 // [161]
    ,            c_r09=( 9),c_r10=(10),c_r11=(11)                // [161]
                                                                 // [161]
    ,                       c_r12=(12)                           // [161]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [161]
                                                                 // [161]
    //:------------------:rooms_in_hotels_constants:[161]://     // [161]
    //:grid_cells_of_the_rooms:[163]:--------------------://     // [---]
                                                                 // [163]
    const ____the_grid_space_of_the_13_rooms____ ="[HACK]"       // [163]
                                                                 // [163]
    , c_g00=( 0),c_g01=( 1),c_g02=( 2),c_g03=( 3),c_g04=( 4)     // [163]
    , c_g05=( 5),c_g06=( 6),c_g07=( 7),c_g08=( 8),c_g09=( 9)     // [163]
    , c_g10=(10),c_g11=(11),c_g12=(12),c_g13=(13),c_g14=(14)     // [163]
    , c_g15=(15),c_g16=(16),c_g17=(17),c_g18=(18),c_g19=(19)     // [163]
    , c_g20=(20),c_g21=(21),c_g22=(22),c_g23=(23),c_g24=(24)     // [163]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [163]
                                                                 // [163]
    //:--------------------:grid_cells_of_the_rooms:[163]://     // [163]
    //:data_locations_of_hotel_rooms:[163]:--------------://     // [163]
                                                                 // [163]
    const ____data_locations_of_hotel_rooms____="[HACK]"         // [163]
                                                                 // [163]
    ,     r4x_0 =(0),r4x_1=(1),r4x_2=(2),r4x_3=(3)               // [163]
    ,     r4y_0 =(0),r4y_1=(1),r4y_2=(2),r4y_3=(3)               // [163]
                                                                 // [163]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [163]
                                                                 // [163]
    //:--------------:data_locations_of_hotel_rooms:[163]://     // [163]
    //:room_aka_level_constants:[161]:-------------------://     // [161]
                                                                 // [161]
        //:SEE[ AT[ LEVEL_DATA_LAYOUT ] ]://                     // [161]
        const      _LEVEL_DATA_LAYOUT_ = "[HACK]"                // [161]
                                                                 // [161]
        ,   c_lay_til =( 0 )    //: LAYER_FOR_TILES ://          // [161]
        ,   c_lay_bom =( 1 )    //: LAYER_FOR_BOMBS ://          // [161]
        ,   c_lay_fad =( 2 )    //: LAYER_FOR_FADA  ://          // [161]
                                                                 // [161]
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [161]
                                                                 // [161]
    //:-------------------:room_aka_level_constants:[161]://     // [161]
                                                                 // [---]
    //:#_DEFINE_ALL_DISCRETE_PLANK_CONSTANTS_#                   // [098]
                                                                 // [---]
    const c_dul = "[YOU_MEAN:c_dur:ROOM===LEVEL]" ;;;;;;;;;;     // [256]
                                                                 // [---]
    const c_dum = 0x7FFF80   ; //:DiscreteUnits : THE_DUM://     // [098][088]
    const c_duh = 0x2AAA80   ; //:DiscreteUnits : HOTEL  ://     // [098]
    const c_dur = 0x088880   ; //:DiscreteUnits : ROOM   ://     // [098]
    const c_dut = 0x002222   ; //:DiscreteUnits : TILE   ://     // [088]
                               //:                       ://     // [098]
    const c_du0 = 0x002222   ; //:DiscreteUnits : te7==0 ://     // [098]
    const c_du1 = 0x004444   ; //:DiscreteUnits : te7==1 ://     // [098]
    const c_du2 = 0x008888   ; //:DiscreteUnits : te7==2 ://     // [098]
    const c_du3 = 0x011110   ; //:DiscreteUnits : te7==3 ://     // [098]
    const c_du4 = 0x022220   ; //:DiscreteUnits : te7==4 ://     // [098]
    const c_du5 = 0x044440   ; //:DiscreteUnits : te7==5 ://     // [098]
    const c_du6 = 0x088880   ; //:DiscreteUnits : te7==6 ://     // [098]
                                                                 // [---]
    ASS( 8388480 === c_dum  ); //:-----------------------://     // [131]
    ASS( 2796160 === c_duh  ); //:                       ://     // [131]
    ASS(  559232 === c_dur  ); //: Because the console   ://     // [131]
    ASS(    8738 === c_dut  ); //: tends to log decimal  ://     // [131]
    ASS(    8738 === c_du0  ); //: integer numbers ,     ://     // [131]
    ASS(   17476 === c_du1  ); //: and not HEX values.   ://     // [131]
    ASS(   34952 === c_du2  ); //:                       ://     // [131]
    ASS(   69904 === c_du3  ); //: Now we can CTRL+F for ://     // [131]
    ASS(  139808 === c_du4  ); //: values and find them. ://     // [131]
    ASS(  279616 === c_du5  ); //:                       ://     // [131]
    ASS(  559232 === c_du6  ); //:-----------------------://     // [131]
                                                                 // [---]
    ASS( Math.floor( c_dum / 3 ) === c_duh , "[@DUA@001]" );     // [098]
    ASS( Math.floor( c_duh / 5 ) === c_dur , "[@DUA@002]" );     // [098]
    ASS( Math.floor( c_dur /64 ) === c_dut , "[@DUA@003]" );     // [098]
    ASS( c_dur/2/2/2/2/2/2       === c_dut , "[@DUA@004]" );     // [098]
    ASS(             c_du0       === c_dut , "[@DUA@005]" );     // [098]
    ASS(             c_du6       === c_dur , "[@DUA@006]" );     // [098]
    ASS(             c_du1 /   2 === c_du0 , "[@DUA@007]" );     // [098]
    ASS(             c_du2 /   2 === c_du1 , "[@DUA@008]" );     // [098]
    ASS(             c_du3 /   2 === c_du2 , "[@DUA@009]" );     // [098]
    ASS(             c_du4 /   2 === c_du3 , "[@DUA@010]" );     // [098]
    ASS(             c_du5 /   2 === c_du4 , "[@DUA@011]" );     // [098]
    ASS(             c_du6 /   2 === c_du5 , "[@DUA@012]" );     // [098]
    ASS(             c_duh /   5 === c_du6 , "[@DUA@013]" );     // [098]
    ASS(             c_dum / 960 === c_dut , "[@DUA@014]" );     // [098]
    ASS(             c_duh / 320 === c_dut , "[@DUA@015]" );     // [098]
                                                                 // [---]
    //:#_DISCRETE_TILE_5THS_#:[271]:---------------------://     // [271]
                                                                 // [---]
        //:#_YOU_DONE_FUCKED_UP_GOOD_:[273]:=============://     // [273]
                                                                 // [---]
            //:#_D20_HAS_A_REMAINDER_#://                        // [---][271]
            //:#_D20_IS_RIGHT_IDEA_BUT_NOT_GOOD_ENOUGH_#:://     // [---][271]
            //:#USE[ _TREE_RING_OVERLAY_FOR_FOURSETS_ ]::://     // [---][271]
                                                                 // [---][271]
            //- c_d20_du0 =F_M_F( c_du0 / (4*5) );   -//         // [273][271]
            //- c_d20_du1 =F_M_F( c_du1 / (4*5) );   -//         // [273][271]
            //- c_d20_du2 =F_M_F( c_du2 / (4*5) );   -//         // [273][271]
            //- c_d20_du3 =F_M_F( c_du3 / (4*5) );   -//         // [273][271]
            //- c_d20_du4 =F_M_F( c_du4 / (4*5) );   -//         // [273][271]
            //- c_d20_du5 =F_M_F( c_du5 / (4*5) );   -//         // [273][271]
            //- c_d20_du6 =F_M_F( c_du6 / (4*5) );   -//         // [273][271]
                                                                 // [---]
        //:=============:#_YOU_DONE_FUCKED_UP_GOOD_:[273]://     // [273]
        //:#_RESTORE_HONOR_TO_KANJI_NAME_#[273]:---------://     // [273]
                                                                 // [273]
            const __10_x_10_overlay_you_fool__="[HACK]" ////     // [273]
            ////                                        ////     // [273]
            ,     c_d10_du0 =F_M_F( c_du0 / (2*5) ) ////////     // [273]
            ,     c_d10_du1 =F_M_F( c_du1 / (2*5) ) ////////     // [273]
            ,     c_d10_du2 =F_M_F( c_du2 / (2*5) ) ////////     // [273]
            ,     c_d10_du3 =F_M_F( c_du3 / (2*5) ) ////////     // [273]
            ,     c_d10_du4 =F_M_F( c_du4 / (2*5) ) ////////     // [273]
            ,     c_d10_du5 =F_M_F( c_du5 / (2*5) ) ////////     // [273]
            ,     c_d10_du6 =F_M_F( c_du6 / (2*5) ) ////////     // [273]
            ////                                    ////////     // [273]
            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [273]
                                                                 // [273]
        //:---------:#_RESTORE_HONOR_TO_KANJI_NAME_#[273]://     // [273]

                                                                 // [271]
    //:---------------------:#_DISCRETE_TILE_5THS_#:[271]://     // [271]

    //:#_EIGHT_GEOMETRIC_ELEMENT_TYPES_#:[253]:----------://     // [253]
                                                                 // [253]
        const c_gt8_000 = "[FIX:c_gt0]" ; //:HOTEL SIZED ://     // [253]
        const c_gt8_001 = "[FIX:c_gt1]" ; //:LEVEL SIZED ://     // [253]
        const c_gt8_002 = "[FIX:c_gt2]" ; //:c_du5 tile  ://     // [253]
        const c_gt8_003 = "[FIX:c_gt3]" ; //:c_du4 tile  ://     // [253]
        const c_gt8_004 = "[FIX:c_gt4]" ; //:c_du3 tile  ://     // [253]
        const c_gt8_005 = "[FIX:c_gt5]" ; //:c_du2 tile  ://     // [253]
        const c_gt8_006 = "[FIX:c_gt6]" ; //:c_du1 tile  ://     // [253]
        const c_gt8_007 = "[FIX:c_gt7]" ; //:c_du0 tile  ://     // [253]
                                                                 // [253]
        //:   c_gt# === "const __ Geometric(element)Type ://     // [253]
        //:   ( __NOT__ describing (geom:vs:bomb:vs:fada)://     // [253]
                                                                 // [253]
        const c_gt0 =( 0 /** c_enu_gt0 / c_enu_gt8_000 **/);     // [253]
        const c_gt1 =( 1 /** c_enu_gt1 / c_enu_gt8_001 **/);     // [253]
        const c_gt2 =( 2 /** c_enu_gt2 / c_enu_gt8_002 **/);     // [253]
        const c_gt3 =( 3 /** c_enu_gt3 / c_enu_gt8_003 **/);     // [253]
        const c_gt4 =( 4 /** c_enu_gt4 / c_enu_gt8_004 **/);     // [253]
        const c_gt5 =( 5 /** c_enu_gt5 / c_enu_gt8_005 **/);     // [253]
        const c_gt6 =( 6 /** c_enu_gt6 / c_enu_gt8_006 **/);     // [253]
        const c_gt7 =( 7 /** c_enu_gt7 / c_enu_gt8_007 **/);     // [253]
                                                                 // [253]
        //: @dus@ : Discrete_Unit_Spans (OfGeometricElms)://     // [253]
                                                                 // [253]
        const c_dus_000 =( c_duh ); //:(gt0)===>(dus_000)://     // [253]
        const c_dus_001 =( c_dur ); //:(gt1)===>(dus_001)://     // [253]
        const c_dus_002 =( c_du5 ); //:(gt2)===>(dus_002)://     // [253]
        const c_dus_003 =( c_du4 ); //:(gt3)===>(dus_003)://     // [253]
        const c_dus_004 =( c_du3 ); //:(gt4)===>(dus_004)://     // [253]
        const c_dus_005 =( c_du2 ); //:(gt5)===>(dus_005)://     // [253]
        const c_dus_006 =( c_du1 ); //:(gt6)===>(dus_006)://     // [253]
        const c_dus_007 =( c_du0 ); //:(gt7)===>(dus_007)://     // [253]
                                                                 // [253]
    //:----------:#_EIGHT_GEOMETRIC_ELEMENT_TYPES_#:[253]://     // [253]
                                                                 // [---]
    //:#_HOW_MUCH_SHOULD_TILES_BE_INSET_BY_#:[191]:------://     // [---][191]
                                                                 // [---][191]

        ASS( c_dut === 0x002222 , "[D_U_T:RE_MIND_ER]" );        // [193]
                                                                 // [193]
        const  /////////////////////////////////////////////     // [193]
        _c_dui_obj_ ={   //  3_rds           7_ths   ///////     // [193]
          dui_max : [ 0,1,2, 0xB60 , 4,5,6 , 0x4E0 , 8,9 ]       // [193]
        , dui_1_3 : [ 0,1,2, 0x3CA , 4,5,6 , 0x1A0 , 8,9 ]       // [193]
        , dui_2_3 : [ 0,1,2, 0x794 , 4,5,6 , 0x340 , 8,9 ]       // [193]
        , dui_3_3 : [ 0,1,2, 0xB5E , 4,5,6 , 0x4E0 , 8,9 ]       // [193]
        };; ////////////////////////////////////////////////     // [193]
        if( 7 === c_duideno ){                                   // [193]
                                                                 // [---]
            ASS( 0x1A0 ===  416 , "[HEX:1A0:DEC:_416]" );        // [---][191]
            ASS( 0x340 ===  832 , "[HEX:340:DEC:_832]" );        // [---][191]
            ASS( 0x4E0 === 1248 , "[HEX:4E0:DEC:1248]" );        // [---][191]
        }else                                                    // [193]
        if( 3 === c_duideno ){                                   // [193]
                                                                 // [193]
            ASS( 0xB60 === 2912 , "[HEX:B60:DEC:2912]" );        // [193]
            ASS( 0x3CA ===  970 , "[HEX:3CA:DEC:_970]" );        // [193]
            ASS( 0x794 === 1940 , "[HEX:794:DEC:1940]" );        // [193]
            ASS( 0xB5E === 2910 , "[HEX:B5E:DEC:2910]" );        // [193]
        }else{                                                   // [193]
            ERR("[UNSUPPORTED:DUIDENO]");                        // [193]
        };;                                                      // [193]
                                                                 // [---]
        const c_dui_max =(_c_dui_obj_.dui_max[ c_duideno ]);     // [193][191]
        const c_dui_1_3 =(_c_dui_obj_.dui_1_3[ c_duideno ]);     // [193][191]
        const c_dui_2_3 =(_c_dui_obj_.dui_2_3[ c_duideno ]);     // [193][191]
        const c_dui_3_3 =(_c_dui_obj_.dui_3_3[ c_duideno ]);     // [193][191]
                                                                 // [---][191]
        //:#_BACKGROUND_TILES_SHOULD_BE_BIGGEST_#:://            // [---][191]
        //:#_FOREGROUND_TILES_SHOULD_BE_SMALLEST_#://            // [---][191]
                                                                 // [---][191]

        //:TAG[ discrete-inset | discrete_inset | tileinset ]:// // [264]
        //:TAG[ discreteinset | discrete unit inset | inset ]:// // [264]
        //:TAG[ non scalar inset amount for tiles | nsiaft  ]:// // [264]

        const c_dui_geo =( c_dui_1_3 ); //:B_G ==> BIGGEST://    // [---][191]
        const c_dui_bom =( c_dui_2_3 ); //:M_G ==> MEDIUM ://    // [---][191]
        const c_dui_fad =( c_dui_3_3 ); //:F_G ==> SMALL  ://    // [---][191]
                                                                 // [---][191]
        ASS( c_duideno === 7 || c_duideno === 3 , "[DENO]");     // [193][---]
        ASS( c_dui_max ===F_M_F( c_dut / c_duideno ) ///////     // [193][191]
        ,   "[IMAX:RELOADED_REVALATIONS_LEGACY_ANNIHILATION]"    // [193][191]
        );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    // [193][191]
                                                                 // [---][---]
        ASS( c_dui_1_3 ===F_M_F( c_dui_max / 3 ),"[I_13]" );     // [---][191]
        ASS( c_dui_2_3 ===( c_dui_1_3      * 2 ),"[I_23]" );     // [---][191]
        ASS( c_dui_3_3 ===( c_dui_1_3      * 3 ),"[I_33]" );     // [---][191]
                                                                 // [---][191]
        if(  c_dui_3_3 !== c_dui_max ){                          // [---][191]
            /** ************************************** **/       // [---][191]
            /** That is okay. Rounding Errors My Dude. **/       // [---][191]
            /** You are making great progress and I    **/       // [---][191]
            /** support your life choices.             **/       // [---][191]
            /** ************************************** **/       // [---][191]
        }else                                                    // [---][191]
        if(  c_dui_3_3   > c_dui_max ){                          // [---][191]
            /** ************************************** **/       // [---][191]
            /** Wow. You are horrible you will never   **/       // [---][191]
            /** achieve anything in life go die in a   **/       // [---][191]
            /** fire and go straight to hell.          **/       // [---][191]
            /** ************************************** **/       // [---][191]
        }else{                                                   // [---][191]
            /** Karmically Neutral Branch. **/                   // [---][191]
        };;                                                      // [---][191]
    //:------:#_HOW_MUCH_SHOULD_TILES_BE_INSET_BY_#:[191]://     // [---][191]
    //:#_DEBUG_TILE_COLORS:CON_#:[194]:======================:// // [---]
                                                                 // [194]
        const c_geo_r =( 0.0 ); //: GEO_TILE : RED       ://     // [194]
        const c_geo_g =( 1.0 ); //: GEO_TILE : GREEN     ://     // [194]
        const c_geo_b =( 0.0 ); //: GEO_TILE : BLUE      ://     // [194]
                                                                 // [194]
        const c_bom_r =( 0.0 ); //: BOM_TILE : RED       ://     // [194]
        const c_bom_g =( 0.0 ); //: BOM_TILE : GREEN     ://     // [194]
        const c_bom_b =( 1.0 ); //: BOM_TILE : BLUE      ://     // [194]
                                                                 // [194]
        const c_fad_r =( 1.0 ); //: FAD_TILE : RED       ://     // [194]
        const c_fad_g =( 0.0 ); //: FAD_TILE : GREEN     ://     // [194]
        const c_fad_b =( 0.0 ); //: FAD_TILE : BLUE      ://     // [194]
                                                                 // [194]
        const __debug_tile_lums__ = "[LAXCOMA:HACK]" /////////// // [194]
                                                                 // [194]
        //: c_geo_lum(s), c_bom_lum(s), c_fad_lum(s) :::::::::// // [194]
        ,   c_gl0=(1.0) , c_bl0=(1.0) , c_fl0=(1.0) //:TE7==0:// // [194]
        ,   c_gl1=(0.9) , c_bl1=(0.9) , c_fl1=(0.9) //:TE7==1:// // [194]
        ,   c_gl2=(0.8) , c_bl2=(0.8) , c_fl2=(0.8) //:TE7==2:// // [194]
        ,   c_gl3=(0.7) , c_bl3=(0.7) , c_fl3=(0.7) //:TE7==3:// // [194]
        ,   c_gl4=(0.6) , c_bl4=(0.6) , c_fl4=(0.6) //:TE7==4:// // [194]
        ,   c_gl5=(0.5) , c_bl5=(0.5) , c_fl5=(0.5) //:TE7==5:// // [194]
        ,   c_gl6=(0.4) , c_bl6=(0.4) , c_fl6=(0.4) //:TE7==6:// // [194]
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [194]
                                                                 // [194]
    //:======================:#_DEBUG_TILE_COLORS:CON_#:[194]:// // [---]
                                                                 // [---]
    const c_r16 =(16 ); //: 4X4 dirty rects over 1 M_M_C ://     // [233]
    const c_xy4 =( 4 ); //: 4_ELMS in[ x_0,x_1,y_0,y_1 ] ://     // [233]
                                                                 // [---]
    const   x_0 =( 0 ); //: VIEWPORT:LEF : @c_x_0@ @x_0@ ://     // [225][088]
    const   x_1 =( 1 ); //: VIEWPORT:RIG : @c_x_1@ @x_1@ ://     // [225][088]
    const   y_0 =( 2 ); //: VIEWPORT:TOP : @c_y_0@ @y_0@ ://     // [225][088]
    const   y_1 =( 3 ); //: VIEWPORT:BOT : @c_y_1@ @y_1@ ://     // [225][088]
                                                                 // [---]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [128]
    //: @dch@ : Discrete_Centerpoint_Hotel (DCH)         ://     // [128]
    //: @c_dch_xy0@ : [ DCH ] Where Cell[ x || y ] === 0 ://     // [128]
    //: @c_dch_xy1@ : [ DCH ] Where Cell[ x || y ] === 1 ://     // [128]
    //: @c_dch_xy2@ : [ DCH ] Where Cell[ x || y ] === 2 ://     // [128]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [128]
                                                                 // [128]
    const laxcoma_2022_08_09 = "[HACK]"                          // [128]
    ,   c_dch_xy0 = ( 0 * c_duh )+Math.floor( c_duh / 2 )-1      // [128]
    ,   c_dch_xy1 = ( 1 * c_duh )+Math.floor( c_duh / 2 )-1      // [128]
    ,   c_dch_xy2 = ( 2 * c_duh )+Math.floor( c_duh / 2 )-1      // [128]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [128]
                                                                 // [---]
    //: @tmi@ : Tile(coordinate)Max_Index (GLOBAL)   ://         // [150]
    ASS( 960 ===  3*5*64 , "[RAWER2022]" );                      // [150]
    const c_tmi_000 =( 960 - 1); //: When te7 === 0  ://         // [150]
    const c_tmi_001 =( 480 - 1); //: When te7 === 1  ://         // [150]
    const c_tmi_002 =( 240 - 1); //: When te7 === 2  ://         // [150]
    const c_tmi_003 =( 120 - 1); //: When te7 === 3  ://         // [150]
    const c_tmi_004 =(  60 - 1); //: When te7 === 4  ://         // [150]
    const c_tmi_005 =(  30 - 1); //: When te7 === 5  ://         // [150]
    const c_tmi_006 =(  15 - 1); //: When te7 === 6  ://         // [150]
                                                                 // [150]
    //: @lat@ : [wid|hig] In Tile When te7 === ###   ://         // [150]
    const c_lat_000 =(  64    ); //: When te7 === 0  ://         // [150]
    const c_lat_001 =(  32    ); //: When te7 === 1  ://         // [150]
    const c_lat_002 =(  16    ); //: When te7 === 2  ://         // [150]
    const c_lat_003 =(   8    ); //: When te7 === 3  ://         // [150]
    const c_lat_004 =(   4    ); //: When te7 === 4  ://         // [150]
    const c_lat_005 =(   2    ); //: When te7 === 5  ://         // [150]
    const c_lat_006 =(   1    ); //: When te7 === 6  ://         // [150]
                                                                 // [150]
    //: Confirm Relationship Between "lat" & "tmi"   ://         // [150]
    ASS( (c_tmi_000+1)/15 === c_lat_000 , "[LAT_000]" );         // [150]
    ASS( (c_tmi_001+1)/15 === c_lat_001 , "[LAT_001]" );         // [150]
    ASS( (c_tmi_002+1)/15 === c_lat_002 , "[LAT_002]" );         // [150]
    ASS( (c_tmi_003+1)/15 === c_lat_003 , "[LAT_003]" );         // [150]
    ASS( (c_tmi_004+1)/15 === c_lat_004 , "[LAT_004]" );         // [150]
    ASS( (c_tmi_005+1)/15 === c_lat_005 , "[LAT_005]" );         // [150]
    ASS( (c_tmi_006+1)/15 === c_lat_006 , "[LAT_006]" );         // [150]

    const c_dia_000 =( 0                              );         // [177]
    const c_dia_001 =( 0 + 64                         );         // [177]
    const c_dia_002 =( 0 + 64 + 32                    );         // [177]
    const c_dia_003 =( 0 + 64 + 32 + 16               );         // [177]
    const c_dia_004 =( 0 + 64 + 32 + 16 + 8           );         // [177]
    const c_dia_005 =( 0 + 64 + 32 + 16 + 8 + 4       );         // [177]
    const c_dia_006 =( 0 + 64 + 32 + 16 + 8 + 4 + 2   );         // [177]
                                                                 // [177]
    ASS(   0 === c_dia_000 , "[ASS_DIA_000:@USA__M@]" );         // [177]
    ASS(  64 === c_dia_001 , "[ASS_DIA_001:@USA__M@]" );         // [177]
    ASS(  96 === c_dia_002 , "[ASS_DIA_002:@USA__M@]" );         // [177]
    ASS( 112 === c_dia_003 , "[ASS_DIA_003:@USA__M@]" );         // [177]
    ASS( 120 === c_dia_004 , "[ASS_DIA_004:@USA__M@]" );         // [177]
    ASS( 124 === c_dia_005 , "[ASS_DIA_005:@USA__M@]" );         // [177]
    ASS( 126 === c_dia_006 , "[ASS_DIA_006:@USA__M@]" );         // [177]
                                                                 // [---]
    //:#_DIVIDE_TILES_INTO_34_SECTIONS_#:[277]:==========://     // [277][--------]
                                                                 // [277][--------]
        const __34_dense_tree_rings_to_filter_down__="[!!!]"     // [277][--------]
        ////                                      //////////     // [277][--------]
        ,     c_d34_du0 =F_M_F( c_du0 / ( 34 ) )  //////////     // [277][--------]
        ,     c_d34_du1 =F_M_F( c_du1 / ( 34 ) )  //////////     // [277][--------]
        ,     c_d34_du2 =F_M_F( c_du2 / ( 34 ) )  //////////     // [277][--------]
        ,     c_d34_du3 =F_M_F( c_du3 / ( 34 ) )  //////////     // [277][--------]
        ,     c_d34_du4 =F_M_F( c_du4 / ( 34 ) )  //////////     // [277][--------]
        ,     c_d34_du5 =F_M_F( c_du5 / ( 34 ) )  //////////     // [277][--------]
        ,     c_d34_du6 =F_M_F( c_du6 / ( 34 ) )  //////////     // [277][--------]
        ////                                      //////////     // [277][--------]
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [277][--------]
        ASS( c_d34_du0 * 34 === c_du0 , "[NOEVE:d34_du0]" );     // [277][--------]
        ASS( c_d34_du1 * 34 === c_du1 , "[NOEVE:d34_du1]" );     // [277][--------]
        ASS( c_d34_du2 * 34 === c_du2 , "[NOEVE:d34_du2]" );     // [277][--------]
        ASS( c_d34_du3 * 34 === c_du3 , "[NOEVE:d34_du3]" );     // [277][--------]
        ASS( c_d34_du4 * 34 === c_du4 , "[NOEVE:d34_du4]" );     // [277][--------]
        ASS( c_d34_du5 * 34 === c_du5 , "[NOEVE:d34_du5]" );     // [277][--------]
        ASS( c_d34_du6 * 34 === c_du6 , "[NOEVE:d34_du6]" );     // [277][--------]
                                                                 // [277][--------]
    //:================:#_DIVIDE_TILES_INTO_34_SECTIONS_#://     // [277][--------]
    //:#_RING_MAPPING_ARRAY_#:[276]:=====================://     // [277][MOV][276]
                                                                 // [277][MOV][276]
        const __5_output_rings_is_10_unique_indexes__ ="[!]"     // [277][MOV][276]
        ////             //:-----------------------------://     // [277][MOV][276]
        ,   c_ri0 =( 0 ) //:                             ://     // [277][MOV][276]
        ,   c_ri1 =( 1 ) //: Our tile a 2x2 cluster of   ://     // [277][MOV][276]
        ,   c_ri2 =( 2 ) //: 5X5 binary bitmaps.         ://     // [277][MOV][276]
        ,   c_ri3 =( 3 ) //:                             ://     // [277][MOV][276]
        ,   c_ri4 =( 4 ) //: This makes a 10x10 graphic. ://     // [277][MOV][276]
        ,   c_ri5 =( 5 ) //:                             ://     // [277][MOV][276]
        ,   c_ri6 =( 6 ) //: 10x10 graphic has 5 rings,  ://     // [277][MOV][276]
        ,   c_ri7 =( 7 ) //: but left and right ends     ://     // [277][MOV][276]
        ,   c_ri8 =( 8 ) //: of a ring are NOT_SAME_ADDR.://     // [277][MOV][276]
        ,   c_ri9 =( 9 ) //:                             ://     // [277][MOV][276]
        ////             //:-----------------------------://     // [277][MOV][276]
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [277][MOV][276]
                                                                 // [277][MOV][276]
    //:=====================:#_RING_MAPPING_ARRAY_#:[276]://     // [277][MOV][276]
                                                                 // [---]
//:==========================:TOP_LEVEL_CONSTANT_MACROS:[085]:// // [085]
//:TOP_LEVEL_TYPES:[449]:====================================:// // [449]
                                                                 // [449]
    //:UPDATED_PREFIXES_2022_11_09:==========================:// // [449]
    //:                                                      :// // [449]
    //:                              [@DEPENDENCY_ORDER@]    :// // [449]
    //:     "c_" : CONST ( Macro )   [ #include 1st ___ ]    :// // [449]
    //:     "t_" : TYPE              [ #include 2nd ___ ]    :// // [449]
    //:     "d_" : DATA              [ #include 3rd ___ ]    :// // [449]
    //:     "F_" : FUNCTION          [ #include 4th ___ ]    :// // [449]
    //:                                                      :// // [449]
    //:     "U_" : NO "U" for "UNIT TEST" in this code base  :// // [449]
    //:                                                      :// // [449]
    //:     #_I_WORRY_ABOUT_PREFIX_PROLIFERATION_#           :// // [449]
    //:                                                      :// // [449]
    //:==========================:UPDATED_PREFIXES_2022_11_09:// // [449]
    ///01//01//01//01//01//01//01//01//01//01//01//01//01//01/// // [449]
    //:#_GLOBAL_TILE_COORD_#:[449]:==========================:// // [449]
                                                                 // [449]
        const NEW_GTC = function PRIVATE_NEW_GTC(){ //:::://     // [449]
                                                                 // [449]
            var t_gtc ={ laxcoma:0                               // [449]
                                                                 // [---]
            ,   m_te7 : 0  //: MEMBER : TileSizeExponent:://     // [450]
                                                                 // [---]
            ,   m_gtx : 0  //: MEMBER : GlobalTile_X ::::://     // [449]
            ,   m_gty : 0  //: MEMBER : GlobalTile_Y ::::://     // [449]
                                                                 // [449]
            };; //:::::::::::::::::::::::::::::::::::::::://     // [449]
            Object.seal( t_gtc ); //:::::::::::::::::::::://     // [449]
            return(      t_gtc ); //:::::::::::::::::::::://     // [449]
        };;                                                      // [449]
    //:==========================:#_GLOBAL_TILE_COORD_#:[449]:// // [449]
    ///01//01//01//01//01//01//01//01//01//01//01//01//01//01/// // [449]
    ///02//02//02//02//02//02//02//02//02//02//02//02//02//02/// // [449]
    //:#_LOCAL_TILE_COORD_#:[449]:===========================:// // [449]
                                                                 // [449]
        const NEW_LTC = function PRIVATE_NEW_LTC(){              // [449]
                                                                 // [449]
            var t_ltc ={ laxcoma:0                               // [449]
                                                                 // [---]
            ,   m_te7 : 0  //: MEMBER : TileSizeExponent:://     // [450]
                                                                 // [---]
            ,   m_h3x : 0  //: MEMBER : HotelCell_X :::::://     // [449]
            ,   m_h3y : 0  //: MEMBER : HotelCell_Y :::::://     // [449]
                                                                 // [449]
            ,   m_r5x : 0  //: MEMBER : Room_Cell_X :::::://     // [449]
            ,   m_r5y : 0  //: MEMBER : Room_Cell_Y :::::://     // [449]
                                                                 // [449]
            ,   m_ltx : 0  //: MEMBER : LocalTile_X :::::://     // [449]
            ,   m_lty : 0  //: MEMBER : LocalTile_Y :::::://     // [449]
                                                                 // [449]
            };;                                                  // [449]
            Object.seal( t_ltc );                                // [449]
            return( t_ltc );                                     // [449]
        };;                                                      // [449]
    //:===========================:#_LOCAL_TILE_COORD_#:[449]:// // [449]
    ///02//02//02//02//02//02//02//02//02//02//02//02//02//02/// // [449]
                                                                 // [449]
//:====================================:TOP_LEVEL_TYPES:[449]:// // [449]
//:TOP_LEVEL_VARIABLES:[088]:================================://    [---]
//:#_NO_FUCKING_LUTS_#:[476]:================================:// // [476]
                                                                 // [---]
    //:TAG[ top-level-data | top_level_data | tl_data   ]://     // [288]
    //:TAG[ topleveldata | tl-data | tldata | toplevvars]://     // [288]
                                                                 // [---]

    //:@PAIRED_TAG@[ THERE_WAS_A_HOLE_HERE_ITS_GONE_NOW ]://     // [478]

    //:#_WHAT_IS_THE_LER_#:[477]:----------------------------:// // [477]
                                                                 // [477]
        //:#_DECLARE_YOU_ARE_A_LERPA_#:[477]:------------://     // [477]
        //:#_ADMIT___YOU_ARE_A_LERPA_#:[477]:------------://     // [477]
                                                                 // [477]
            //:------------------------------------------://     // [477]
            //:   @l5x@ : LER cell (Capacity:5) , X axis ://     // [477]
            //:   @l5y@ : LER cell (Capacity:5) , Y axis ://     // [477]
            //:                                          ://     // [477]
            //: @m_l5x@ : MEMBER variable named[ l5x ]:::://     // [477]
            //: @m_l5y@ : MEMBER variable named[ l5y ]:::://     // [477]
            //:------------------------------------------://     // [477]
                                                                 // [477]
            const d_ler_a_2 ={ m_l5x : 2 , m_l5y : 0 };          // [477]
                                                                 // [477]
            const d_ler_b_1 ={ m_l5x : 1 , m_l5y : 1 };          // [477]
            const d_ler_b_2 ={ m_l5x : 2 , m_l5y : 1 };          // [477]
            const d_ler_b_3 ={ m_l5x : 3 , m_l5y : 1 };          // [477]
                                                                 // [477]
            const d_ler_c_0 ={ m_l5x : 0 , m_l5y : 2 };          // [477]
            const d_ler_c_1 ={ m_l5x : 1 , m_l5y : 2 };          // [477]
            const d_ler_c_2 ={ m_l5x : 2 , m_l5y : 2 };          // [477]
            const d_ler_c_3 ={ m_l5x : 3 , m_l5y : 2 };          // [477]
            const d_ler_c_4 ={ m_l5x : 4 , m_l5y : 2 };          // [477]
                                                                 // [477]
            const d_ler_d_1 ={ m_l5x : 1 , m_l5y : 3 };          // [477]
            const d_ler_d_2 ={ m_l5x : 2 , m_l5y : 3 };          // [477]
            const d_ler_d_3 ={ m_l5x : 3 , m_l5y : 3 };          // [477]
                                                                 // [477]
            const d_ler_e_2 ={ m_l5x : 2 , m_l5y : 4 };          // [477]
                                                                 // [477]
        //:------------:#_DECLARE_YOU_ARE_A_LERPA_#:[477]://     // [477]
        //:------------:#_ADMIT___YOU_ARE_A_LERPA_#:[477]://     // [477]
        //:#_FREEZE_LERPA_###:[477]:---------------------://     // [477]
        //:#_FREEZE_LERPBAG_#:[477]:---------------------://     // [477]
                                                                 // [477]
            Object.freeze( d_ler_a_2 ); //:TAG[ LER_A_2 ]://     // [477]
                                                                 // [477]
            Object.freeze( d_ler_b_1 ); //:TAG[ LER_B_1 ]://     // [477]
            Object.freeze( d_ler_b_2 ); //:TAG[ LER_B_2 ]://     // [477]
            Object.freeze( d_ler_b_3 ); //:TAG[ LER_B_3 ]://     // [477]
                                                                 // [477]
            Object.freeze( d_ler_c_0 ); //:TAG[ LER_C_0 ]://     // [477]
            Object.freeze( d_ler_c_1 ); //:TAG[ LER_C_1 ]://     // [477]
            Object.freeze( d_ler_c_2 ); //:TAG[ LER_C_2 ]://     // [477]
            Object.freeze( d_ler_c_3 ); //:TAG[ LER_C_3 ]://     // [477]
            Object.freeze( d_ler_c_4 ); //:TAG[ LER_C_4 ]://     // [477]
                                                                 // [477]
            Object.freeze( d_ler_d_1 ); //:TAG[ LER_D_1 ]://     // [477]
            Object.freeze( d_ler_d_2 ); //:TAG[ LER_D_2 ]://     // [477]
            Object.freeze( d_ler_d_3 ); //:TAG[ LER_D_3 ]://     // [477]
                                                                 // [477]
            Object.freeze( d_ler_e_2 ); //:TAG[ LER_E_2 ]://     // [477]
                                                                 // [477]
        //:---------------------:#_FREEZE_LERPBAG_#:[477]://     // [477]
        //:-----------------------:#_FREEZE_LERPA_#:[477]://     // [477]
                                                                 // [477]
    //:----------------------------:#_WHAT_IS_THE_LER_#:[477]:// // [477]
    //:#_ARR_GTX_#:[426]:------------------------------------:// // [---][426][-------------]
    //:#_ARR_GTY_#:[426]:------------------------------------:// // [---][426][-------------]
                                                                 // [---][426][-------------]
        var   d_arr_ltx =(new Uint32Array(   16   ) );;;;;;;     // [454][------------------]
        var   d_arr_lty =(new Uint32Array(   16   ) );;;;;;;     // [454][------------------]
        var   d_arr_gtx =(new Uint32Array(   16   ) );;;;;;;     // [---][447][433][---][426]
        var   d_arr_gty =(new Uint32Array(   16   ) );;;;;;;     // [---][447][433][---][426]
        var   d_arr_u32 =(new Uint32Array(   16   ) );;;;;;;     // [---][447][433][428][---]
                                                                 // [---][426][-------------]
        const d_len_gtx =( "[WRONG_USE:d_len_gtc]" );;;;;;;;     // [---][426][-------------]
        const d_len_gty =( "[WRONG_USE:d_len_gtc]" );;;;;;;;     // [---][426][-------------]
        const d_arr_gtc =( "[YOU_MEAN::d_len_gtc]" );;;;;;;;     // [---][426][-------------]
                                                                 // [---][426][-------------]
        var   d_len_gtc =( 0 /** Num Usable Entries **/ );;;     // [---][426][-------------]
        var   d_len_ltc =( 0 /** Num Usable Entries **/ );;;     // [454][------------------]
                                                                 // [---][426][-------------]
    //:------------------------------------:#_ARR_GTX_#:[426]:// // [---][426][-------------]
    //:------------------------------------:#_ARR_GTY_#:[426]:// // [---][426][-------------]
    //:#_MULTI_STEP_INITIALIZER_DATA_#:[290]:----------------:// // [---]
                                                                 // [290]
        var d_msi_ini_all =( 0 ); //:TrueWhen_100Per_Done://     // [290]
        var d_msi_ini_one =( 0 ); //:#_SIGNAL_SELF_DONE_#://     // [291]
        var d_msi_dex_sub =(0-1); //:#_RELATIVE_SUB_SYS_#://     // [290]
        var d_msi_dex_sis =(0-1); //:#_SYS_INTERNA_STEP_#://     // [290]
                                                                 // [290]
    //:----------------:#_MULTI_STEP_INITIALIZER_DATA_#:[290]:// // [290]
                                                                 // [---]
    //:@mp0@ : Miscellanious_Pixels_Zero  ://                    // [---][288]
    //:@mp1@ : Miscellanious_Pixels_One   ://                    // [---][288]
    var d_mp0_512 = new Uint8Array( 4 * 512 * 512 );             // [369][BUG][288]
    var d_mp1_512 = new Uint8Array( 4 * 512 * 512 );             // [369][BUG][288]

    var d_mp0_512_nub =( 0 /** @nub@ : Num_Used_Bytes **/ );     // [371]
    var d_mp1_512_nub =( 0 /** @nub@ : Num_Used_Bytes **/ );     // [371]
                                                                 // [371]
    var d_mp0_512_dathash =( c_dathash_err_und );                // [372][371]
    var d_mp1_512_dathash =( c_dathash_err_und );                // [372][371]

                                                                 // [---][---]
    //:TAG[ viewport_rectangles | viewport-rectangles   ]://     //      [088]
    //:TAG[ viewport rectangles | vprec|vp-rec|vp_rec   ]://     //      [088]
                                                                 //      [088]
    var d_tik     =( 0 /** SEE[ DTICK_INITED ] **/ );            // [121][090]
    var d_vpc     = new Uint32Array( 4 );  //: @d_vpc@   ://     // [121][088]
    var d_vp0     = new Uint32Array( 4 );  //: @d_vp0@   ://     // [121][088]
    var d_vp1     = new Uint32Array( 4 );  //: @d_vp1@   ://     // [121][088]
    var d_camwall = new Uint32Array( 4 );  //: @camwall@ ://     // [121]
    var d_dmx     =( c_dum /** OUT_OF_BOUNDS_BY_ONE **/ );       // [157][141]
    var d_dmy     =( c_dum /** OUT_OF_BOUNDS_BY_ONE **/ );       // [157][141]
    var d_gtx     =( c_tmi_000 + 1 );  //:GLOBAL_TILE_X://       // [157][150]
    var d_gty     =( c_tmi_000 + 1 );  //:GLOBAL_TILE_Y://       // [157][150]
    var d_te7     =(      0        );  //:GLOBAL____TE7://       //      [150]
  const d_p2k     =( "[GPU_ONLY:CPU_SIDE:d_pix2048]" );          // [173]
                                                                 // [---]
    var     d_tik_loc =( 0- 1 ); //:LOC[ d_tik ]In_Shader://     //      [121][090]
    var     d_vpc_loc =( 0- 2 ); //:LOC[ d_vpc ]In_Shader://     //      [121][090]
    var     d_vp0_loc =( 0- 3 ); //:LOC[ d_vp0 ]In_Shader://     //      [121][090]
    var     d_vp1_loc =( 0- 4 ); //:LOC[ d_vp1 ]In_Shader://     //      [121][090]
    var d_camwall_loc =( 0- 5 ); //:LOC[ d_camwall ].....://     //      [121]
    var     d_dmx_loc =( 0- 6 ); //:LOC[ d_dmx ]In_Shader://     // [157][141]
    var     d_dmy_loc =( 0- 7 ); //:LOC[ d_dmy ]In_Shader://     // [157][141]
    var     d_gtx_loc =( 0- 8 ); //:LOC[ d_gtx ]In_Shader://     // [157][150]
    var     d_gty_loc =( 0- 9 ); //:LOC[ d_gty ]In_Shader://     // [157][150]
    var     d_te7_loc =( 0-10 ); //:LOC[ d_te7 ]In_Shader://     //      [150]
    var     d_p2k_loc =( 0-11 ); //:LOC[ d_p2k ]In_Shader://     // [173]
                                                                 // [---]
    const d_loc_tik = ()=>{ ERR("[FIX:d_vpc_tik]"); };           // [090]
    const d_loc_vpc = ()=>{ ERR("[FIX:d_vpc_vpc]"); };           // [090]
    const d_loc_vp0 = ()=>{ ERR("[FIX:d_vpc_vp0]"); };           // [090]
    const d_loc_vp1 = ()=>{ ERR("[FIX:d_vpc_vp1]"); };           // [090]
                                                                 // [---]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [088]
        //:Initially, Camera Is Zoomed All The Way Out   ://     // [088]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [088]
        d_vp1[ x_0 ]=(       0  );                               // [088]
        d_vp1[ y_0 ]=(       0  );                               // [088]
        d_vp1[ x_1 ]=( c_dum - 1);                               // [088]
        d_vp1[ y_1 ]=( c_dum - 1);                               // [088]
                                                                 // [088]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [088]
        //: We don't know what[ vp1 ]or[ vpc ]should be  ://     // [088]
        //: yet, but let's set them to something that    ://     // [088]
        //: will clue us in on how they got to that      ://     // [088]
        //: size.                                        ://     // [088]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [088]
        d_vp0[ x_0 ]=(   0  ); d_vpc[ x_0 ]=(   0  );            // [088]
        d_vp0[ y_0 ]=(   0  ); d_vpc[ y_0 ]=(   0  );            // [088]
        d_vp0[ x_1 ]=( 420  ); d_vpc[ x_1 ]=(  69  );            // [088]
        d_vp0[ y_1 ]=( 420  ); d_vpc[ y_1 ]=(  69  );            // [088]
                                                                 // [---]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     //      [150]
    //: @d_te7_tmi@ : te7 ==> tile_max_index(DUMGLOBAL)  ://     //      [150]
    //: @d_te7_lat@ : te7 ==> [wid|hig]in tiles on level.://     //      [150]
    //: NOTE: ( c_tmi_### != ( c_lat_### - 1 ) )         ://     //      [150]
    //: NOTE: ( c_tmi_000 != ( c_lat_000 - 1 ) )         ://     //      [150]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     //      [150]
    var d_te7_tmi = new Uint32Array([                            //      [150]
        c_tmi_000                                                //      [150]
    ,   c_tmi_001                                                //      [150]
    ,   c_tmi_002                                                //      [150]
    ,   c_tmi_003                                                //      [150]
    ,   c_tmi_004                                                //      [150]
    ,   c_tmi_005                                                //      [150]
    ,   c_tmi_006                                                //      [150]
    ]);;                                                         //      [150]
    var d_te7_mag ="[FIX:d_te7_lat]";                            //      [150]
    var d_te7_lat = new Uint32Array([                            //      [150]
        c_lat_000   //: ( 0 )===> ( 64 )         ://             // [162][150]
    ,   c_lat_001   //: ( 1 )===> ( 32 )         ://             // [162][150]
    ,   c_lat_002   //: ( 2 )===> ( 16 )         ://             // [162][150]
    ,   c_lat_003   //: ( 3 )===> (  8 )         ://             // [162][150]
    ,   c_lat_004   //: ( 4 )===> (  4 )         ://             // [162][150]
    ,   c_lat_005   //: ( 5 )===> (  2 )         ://             // [162][150]
    ,   c_lat_006   //: ( 6 )===> (  1 )         ://             // [162][150]
    ]);;                                                         //      [150]
                                                                 // [---]
    var d_te7_dia = new Uint32Array([                            //      [165]
                                                                 //      [165]
    //:> > >SEE[ #DIAGRAM_TE7_DIA# ]< < < < < < < < < < <://     //      [165]
        c_dia_000 //: ( 0 )==>( _0_ ) ://                        // [177][165]
    ,   c_dia_001 //: ( 1 )==>( _64 ) ://                        // [177][165]
    ,   c_dia_002 //: ( 2 )==>( _96 ) ://                        // [177][165]
    ,   c_dia_003 //: ( 3 )==>( 112 ) ://                        // [177][165]
    ,   c_dia_004 //: ( 4 )==>( 120 ) ://                        // [177][165]
    ,   c_dia_005 //: ( 5 )==>( 124 ) ://                        // [177][165]
    ,   c_dia_006 //: ( 6 )==>( 126 ) ://                        // [177][165]
    ]);;                                                         //      [165]
    {                                                            //      [165]
        let          l_u_t = d_te7_dia ;                         //      [165]
        ASS(   0 === l_u_t[ 0 ] , "[TE7_000_DIA_000]" );         //      [165]
        ASS(  64 === l_u_t[ 1 ] , "[TE7_001_DIA_064]" );         //      [165]
        ASS(  96 === l_u_t[ 2 ] , "[TE7_002_DIA_096]" );         //      [165]
        ASS( 112 === l_u_t[ 3 ] , "[TE7_003_DIA_112]" );         //      [165]
        ASS( 120 === l_u_t[ 4 ] , "[TE7_004_DIA_120]" );         //      [165]
        ASS( 124 === l_u_t[ 5 ] , "[TE7_005_DIA_124]" );         //      [165]
        ASS( 126 === l_u_t[ 6 ] , "[TE7_006_DIA_126]" );         //      [165]
    }                                                            //      [165]
    var d_la3_lmx = new Uint32Array([ 0 , 1 , 0 ]);  //:@lmx@:// //      [165]
    var d_la3_lmy = new Uint32Array([ 0 , 0 , 1 ]);  //:@lmy@:// //      [165]
    {                                                            //      [165]
        let A_T = ASS_TUP_EQU ; //:----------------------://     //      [165]
        let lmx = d_la3_lmx   ; //:  SEE[ #_LM_XY_# ]    ://     //      [165]
        let lmy = d_la3_lmy   ; //:  [ #DIAGRAM_LA3_LAT#]://     //      [165]
                                //:----------------------://     //      [165]
        A_T( [0,0] , [ lmx[0] , lmy[0] ] , "[LMXY_0_0]" );       //      [165]
        A_T( [1,0] , [ lmx[1] , lmy[1] ] , "[LMXY_1_0]" );       //      [165]
        A_T( [0,1] , [ lmx[2] , lmy[2] ] , "[LMXY_0_1]" );       //      [165]
    }                                                            //      [165]
                                                                 // [---]
    var d_te7_peb = new Uint32Array([                            // [153]
                                                                 // [153]
        1       //: ( te7_000 )===>( peb_001 )   ://             // [153]
    ,   2       //: ( te7_001 )===>( peb_002 )   ://             // [153]
    ,   4       //: ( te7_002 )===>( peb_004 )   ://             // [153]
    ,   8       //: ( te7_003 )===>( peb_008 )   ://             // [153]
    ,  16       //: ( te7_004 )===>( peb_016 )   ://             // [153]
    ,  32       //: ( te7_005 )===>( peb_032 )   ://             // [153]
    ,  64       //: ( te7_006 )===>( peb_064 )   ://             // [153]
    ]);;                                                         // [153]
    var d_te7_dus = "[FIX:d_te7_dun]]" ;;;;;;;;;;;;;;;;;;;;;     // [264]
    var d_te7_dun = new Uint32Array([                            // [153]
                                                                 // [153]
        c_du0   //: ( te7_000 )===>( dun_du0 )   ://             // [153]
    ,   c_du1   //: ( te7_001 )===>( dun_du1 )   ://             // [153]
    ,   c_du2   //: ( te7_002 )===>( dun_du2 )   ://             // [153]
    ,   c_du3   //: ( te7_003 )===>( dun_du3 )   ://             // [153]
    ,   c_du4   //: ( te7_004 )===>( dun_du4 )   ://             // [153]
    ,   c_du5   //: ( te7_005 )===>( dun_du5 )   ://             // [153]
    ,   c_du6   //: ( te7_006 )===>( dun_du6 )   ://             // [153]
    ]);;                                                         // [153]
                                                                 // [---]
    ASS( d_te7_peb[ 0+0 ]===d_te7_lat[ 6-0 ] , "[PEB+00]" );     // [153]
    ASS( d_te7_peb[ 0+1 ]===d_te7_lat[ 6-1 ] , "[PEB+01]" );     // [153]
    ASS( d_te7_peb[ 0+2 ]===d_te7_lat[ 6-2 ] , "[PEB+02]" );     // [153]
    ASS( d_te7_peb[ 0+3 ]===d_te7_lat[ 6-3 ] , "[PEB+03]" );     // [153]
    ASS( d_te7_peb[ 0+4 ]===d_te7_lat[ 6-4 ] , "[PEB+04]" );     // [153]
    ASS( d_te7_peb[ 0+5 ]===d_te7_lat[ 6-5 ] , "[PEB+05]" );     // [153]
    ASS( d_te7_peb[ 0+6 ]===d_te7_lat[ 6-6 ] , "[PEB+06]" );     // [153]
                                                                 // [---]
    ASS( 7 === d_te7_tmi.length );                               //      [150]
    ASS( 7 === d_te7_lat.length );                               //      [150]
    ASS( 7 === d_te7_peb.length );                               // [153]
    ASS( 7 === d_te7_dun.length );                               // [153]
                                                                 // [---]
//:================================:#_NO_FUCKING_LUTS_#:[476]:// // [476]
//:================================:TOP_LEVEL_VARIABLES:[088]://    [---]
//:TOP_LEVEL_LOOKUP_TABLES:[128]:============================:// // [128]
    //:------------------------------------------------------:// // [---][128]
    //: TAG[ lookup tables | lookup_tables | lookuptables ]  :// // [---][128]
    //: TAG[ lookup table  | lookup_table  | lookuptable  ]  :// // [---][128]
    //: TAG[ lookup-table  | lookup-tables | global-table ]  :// // [---][128]
    //: TAG[ global-tables | global_tables | global_table ]  :// // [---][128]
    //: TAG[ globaltable | globaltables | global-lut      ]  :// // [---][128]
    //: TAG[ global_lut | globallut | lut | look_up | luts]  :// // [---][128]
    //: TAG[ lookup-table-section | lookup_table_section  ]  :// // [191][---]
    //: TAG[ lookuptablesection | lookup table section    ]  :// // [191][---]
    //: TAG[ where-the-fuck-are-my-lookup-tables |sexyluts]  :// // [253]
    //: TAG[ global-lookup-tables | lookup-tables-section ]  :// // [253]
    //: TAG[ top-level-lookup-tables | lut-section |lutsec]  :// // [253]
    //:------------------------------------------------------:// // [---][128]
                                                                 // [---] 
    //:#_INDEX_TO_INDEX_#:[479]:-----------------------------:// // [479]
    //:#_L_P_T_TO_C49_###:[479]:-----------------------------:// // [479]
                                                                 // [479]
        //:#_LINED_UP_FOR_A_REASON_#:[479]:--------------://     // [479]
                                                                 // [479]
            const d_l16_c49 =( new Uint8Array([                  // [479]
                                                                 // [479]
                ( 0),( 1),( 2),( 3),( 4),( 5),( 6)               // [479]
            ,   ( 7)             ,            (13)               // [479]
            ,   (14)             ,            (20)               // [479]
            ,   (21)             ,            (27)               // [479]
            ,   (28)             ,            (34)               // [479]
            ,   (35)                                             // [479]
            ]));;                                                // [479]
            const d_pf8_c49 =( new Uint8Array([                  // [479]
                                              (41)               // [479]
            ,   (42),(43),(44),(45),(46),(47),(48)               // [479]
            ]));;                                                // [479]
            const d_t25_c49 =( new Uint8Array([                  // [479]
                                                                 // [479]
                     ( 8),( 9),(10),(11),(12)                    // [479]
            ,        (15),(16),(17),(18),(19)                    // [479]
            ,        (22),(23),(24),(25),(26)                    // [479]
            ,        (29),(30),(31),(32),(33)                    // [479]
            ,        (36),(37),(38),(39),(40)                    // [479]
            ]));;                                                // [479]
        //:--------------:#_LINED_UP_FOR_A_REASON_#:[479]://     // [479]
        //:#_BIRD_HOLE_TEST_#:[479]:---------------------://     // [479]
        {                                                        // [479]
            let __ =( 0 );                                       // [479]
            let l16=( 0 );                                       // [479]
            let pf8=( 0 );                                       // [479]
            let t25=( 0 );                                       // [479]
            let c49=( 0 );                                       // [479]
            let bih=( 0 ); //:@bih@:Birds_In_Hole://             // [479]
            let birdhol =( new Uint8Array([                      // [479]
            //:  01   02   03   04   05   06   07  ::::::://     // [479]
                (__),(__),(__),(__),(__),(__),(__) //: 1 ://     // [479]
            ,   (__),(__),(__),(__),(__),(__),(__) //: 2 ://     // [479]
            ,   (__),(__),(__),(__),(__),(__),(__) //: 3 ://     // [479]
            ,   (__),(__),(__),(__),(__),(__),(__) //: 4 ://     // [479]
            ,   (__),(__),(__),(__),(__),(__),(__) //: 5 ://     // [479]
            ,   (__),(__),(__),(__),(__),(__),(__) //: 6 ://     // [479]
            ,   (__),(__),(__),(__),(__),(__),(__) //: 7 ://     // [479]
            ]));;                                                // [479]
                                                                 // [479]
            ASS( 16 === d_l16_c49.length , "[16_HOLES]" );;;     // [479]
            ASS(  8 === d_pf8_c49.length , "[08_HOLES]" );;;     // [479]
            ASS( 25 === d_t25_c49.length , "[25_HOLES]" );;;     // [479]
            ASS( 49 ===   birdhol.length , "[B__HOLES]" );;;     // [479]
                                                                 // [479]
            for( l16 = 0 ; l16 <=(16-1) ; l16 ++ ){              // [479]
                                                                 // [479]
                c49 = d_l16_c49[ l16 ];                          // [479]
                (birdhol[ c49 ])++;                              // [479]
            };;                                                  // [479]
            for( pf8 = 0 ; pf8 <=( 8-1) ; pf8 ++ ){              // [479]
                                                                 // [479]
                c49 = d_pf8_c49[ pf8 ];                          // [479]
                (birdhol[ c49 ])++;                              // [479]
            };;                                                  // [479]
            for( t25 = 0 ; t25 <=(25-1) ; t25 ++ ){              // [479]
                                                                 // [479]
                c49 = d_t25_c49[ t25 ];                          // [479]
                (birdhol[ c49 ])++;                              // [479]
            };;                                                  // [479]
            for( c49 = 0 ; c49 <=(49-1) ; c49 ++ ){              // [479]
                                                                 // [479]
                bih = birdhol[ c49 ];                            // [479]
                if( 1 !== bih ){                                 // [479]
                                                                 // [479]
                    ERR("[NOT_EXACTLY_ONE_BIRD_IN_HOLE]");       // [479]
                };;                                              // [479]
            };;                                                  // [479]
        }                                                        // [479]
        //:---------------------:#_BIRD_HOLE_TEST_#:[479]://     // [479]
                                                                 // [479]
    //:-----------------------------:#_L_P_T_TO_C49_###:[479]:// // [479]
    //:-----------------------------:#_INDEX_TO_INDEX_#:[479]:// // [479]
    //:#_MOVE_LUT_2022_#:[478]:------------------------------:// // [---][--------]
                                                                 // [478][--------]
    //:@PAIRED_TAG@[ THERE_WAS_A_HOLE_HERE_ITS_GONE_NOW ]://     // [478][--------]
                                                                 // [478][--------]
    //:#_C49_TO_X_Y_#:[475]:---------------------------------:// // [478][MOV][475]
                                                                 // [478][MOV][475]
        const d_c49_c7x =( new Uint8Array([                      // [478][MOV][475]
                                                                 // [478][MOV][475]
            0 , 1 , 2 , 3 , 4 , 5 , 6  //: __1__ ://             // [478][MOV][475]
        ,   0 , 1 , 2 , 3 , 4 , 5 , 6  //: __2__ ://             // [478][MOV][475]
        ,   0 , 1 , 2 , 3 , 4 , 5 , 6  //: __3__ ://             // [478][MOV][475]
        ,   0 , 1 , 2 , 3 , 4 , 5 , 6  //: __4__ ://             // [478][MOV][475]
        ,   0 , 1 , 2 , 3 , 4 , 5 , 6  //: __5__ ://             // [478][MOV][475]
        ,   0 , 1 , 2 , 3 , 4 , 5 , 6  //: __6__ ://             // [478][MOV][475]
        ,   0 , 1 , 2 , 3 , 4 , 5 , 6  //: __7__ ://             // [478][MOV][475]
        //:_1___2___3___4___5___6___7____________://             // [478][MOV][475]
        ]));;                                                    // [478][MOV][475]
        const d_c49_c7y =( new Uint8Array([                      // [478][MOV][475]
                                                                 // [478][MOV][475]
            0 , 0 , 0 , 0 , 0 , 0 , 0  //: __1__ ://             // [478][MOV][475]
        ,   1 , 1 , 1 , 1 , 1 , 1 , 1  //: __2__ ://             // [478][MOV][475]
        ,   2 , 2 , 2 , 2 , 2 , 2 , 2  //: __3__ ://             // [478][MOV][475]
        ,   3 , 3 , 3 , 3 , 3 , 3 , 3  //: __4__ ://             // [478][MOV][475]
        ,   4 , 4 , 4 , 4 , 4 , 4 , 4  //: __5__ ://             // [478][MOV][475]
        ,   5 , 5 , 5 , 5 , 5 , 5 , 5  //: __6__ ://             // [478][MOV][475]
        ,   6 , 6 , 6 , 6 , 6 , 6 , 6  //: __7__ ://             // [478][MOV][475]
        //:_1___2___3___4___5___6___7____________://             // [478][MOV][475]
        ]));;                                                    // [478][MOV][475]
    //:---------------------------------:#_C49_TO_X_Y_#:[475]:// // [478][MOV][475]
    //:#_X_Y_TO_C49_#:[475]:---------------------------------:// // [478][MOV][475]
                                                                 // [478][MOV][475]
        const d_c7x_c7y_c49 = "[I_GUESS_YOU_COULD_BUT_DONT]" ;   // [478][MOV][475]
        const d_c7x_c49 =  "[NOT_ENOUGH_INFORMATION:CAN''T]" ;   // [478][MOV][475]
        const d_c7y_c49 =  "[NOT_ENOUGH_INFORMATION:CAN''T]" ;   // [478][MOV][475]
                                                                 // [478][MOV][475]
    //:---------------------------------:#_X_Y_TO_C49_#:[475]:// // [478][MOV][475]
    //:#_128_X_128_CHUNK_TYPES_#:[473]:----------------------:// // [478][MOV][---]
    //:#_128_X_128_CHUNK_KINDS_#:[473]:----------------------:// // [478][MOV][---]
                                                                 // [478][MOV][473]
        const d_c49_chunktype =( "[FIX:d.c49_c49kind]" );        // [478][MOV][473]
        const d_c49_chunktyp  =( "[FIX:d.c49_c49kind]" );        // [478][MOV][473]
        const d_c49_c49type   =( "[FIX:d.c49_c49kind]" );        // [478][MOV][473]
        ///// d_c49_c49kind   =( "[FIX:d.c49_c49kind]" );        // [478][MOV][473]
        const d_c49_c3t       =( "[FIX:d.c49_c49kind]" );        // [478][MOV][473]
        const d_c49_ct3       =( "[FIX:d.c49_c49kind]" );        // [478][MOV][473]
        const d_c49_c7t       =( "[FIX:d.c49_c49kind]" );        // [478][MOV][473]
                                                                 // [478][MOV][473]
        ASS( 1 === c_c49_l16 , "[CKIND_001/CTYPE_001]" );        // [478][MOV][473]
        ASS( 2 === c_c49_pf8 , "[CKIND_002/CTYPE_002]" );        // [478][MOV][473]
        ASS( 3 === c_c49_t25 , "[CKIND_003/CTYPE_003]" );        // [478][MOV][473]
                                                                 // [478][MOV][473]
        const d_c49_c49kind =(new Uint8Array([                   // [478][MOV][473]
                                                                 // [478][MOV][473]
            1 , 1 , 1 , 1 , 1 , 1 , 1                            // [478][MOV][473]
        ,   1 , 3 , 3 , 3 , 3 , 3 , 1                            // [478][MOV][473]
        ,   1 , 3 , 3 , 3 , 3 , 3 , 1                            // [478][MOV][473]
        ,   1 , 3 , 3 , 3 , 3 , 3 , 1                            // [478][MOV][473]
        ,   1 , 3 , 3 , 3 , 3 , 3 , 1                            // [478][MOV][473]
        ,   1 , 3 , 3 , 3 , 3 , 3 , 2                            // [478][MOV][473]
        ,   2 , 2 , 2 , 2 , 2 , 2 , 2                            // [478][MOV][473]
        ]));;                                                    // [478][MOV][473]
                                                                 // [478][MOV][473]
        {                                                        // [478][MOV][473]
            let sum_l16 =( 0 ) ;                                 // [478][MOV][473]
            let sum_pf8 =( 0 ) ;                                 // [478][MOV][473]
            let sum_t25 =( 0 ) ;                                 // [478][MOV][473]
            ///     c7t =( 0 ) ;                                 // [478][MOV][473]
            ///     c4k =( 0 ) ;                                 // [478][MOV][473]
            let c49kind =( 0 ) ;                                 // [478][MOV][473]
            for(let c49 =( 0 ) ; c49 <=(49-1) ; c49++ ){         // [478][MOV][473]
                                                                 // [478][MOV][473]
                    c49kind=( d_c49_c49kind[ c49 ] );            // [478][MOV][473]
                                                                 // [478][MOV][473]
                if( c49kind === c_c49_l16 ){ sum_l16 ++ ; };     // [478][MOV][473]
                if( c49kind === c_c49_pf8 ){ sum_pf8 ++ ; };     // [478][MOV][473]
                if( c49kind === c_c49_t25 ){ sum_t25 ++ ; };     // [478][MOV][473]
            };;                                                  // [478][MOV][473]
            ASS( 16 === sum_l16 , "[SUM_L16:FAIL:2022]" );       // [478][MOV][473]
            ASS(  8 === sum_pf8 , "[SUM_PF8:FAIL:2022]" );       // [478][MOV][473]
            ASS( 25 === sum_t25 , "[SUM_T25:FAIL:2022]" );       // [478][MOV][473]
        };;                                                      // [478][MOV][473]
    //:----------------------:#_128_X_128_CHUNK_KINDS_#:[473]:// // [478][MOV][473]
    //:----------------------:#_128_X_128_CHUNK_TYPES_#:[473]:// // [478][MOV][473]
    //:#_128_X_128_CHUNK_ENUMS_#:[472]:----------------------:// // [478][MOV][---]
    //////////////////////////////////////////////////////////// // [478][MOV][472]
                                                                 // [478][MOV][472]
        //:----------------------------------------------://     // [478][MOV][472]
        //: @c49@ : Generic 128_x_128 chunk cell 1D index://     // [478][MOV][472]
        //: @t25@ : Thumbnail_or_buff chunk. 25 of them. ://     // [478][MOV][472]
        //: @l16@ : Levelpack Chunk, 16 of them. ::::::::://     // [478][MOV][472]
        //: @pm8@ : Prefabrication Memory , 8 chunks. :::://     // [478][MOV][472]
        //:----------------------------------------------://     // [478][MOV][472]
                                                                 // [478][MOV][472]
        const d_c49_tob = "[FIX:d_c49_t25]" ;;;;;;;;;;;;;;;;     // [478][MOV][472]
                                                                 // [478][MOV][472]
    //////////////////////////////////////////////////////////// // [478][MOV][472]
    {   //:<---- BEG[ ITS_A_MOTHER_FUCKING_SCOPE_BITCHES!!! ]:// // [478][MOV][472]
                                                                 // [478][MOV][472]
        let _____=( 0xFF /**255:TRAP_VALUE**/ );                 // [478][MOV][472]
                                                                 // [478][MOV][472]
        var d_c49_c49 =( new Uint8Array([ //////////////////     // [478][MOV][472]
                                                                 // [478][MOV][472]
            c_c00 , c_c01,c_c02,c_c03,c_c04,c_c05 , c_c06        // [478][MOV][472]
                                                                 // [478][MOV][472]
        ,   c_c07 , c_c08,c_c09,c_c10,c_c11,c_c12 , c_c13        // [478][MOV][472]
        ,   c_c14 , c_c15,c_c16,c_c17,c_c18,c_c19 , c_c20        // [478][MOV][472]
        ,   c_c21 , c_c22,c_c23,c_c24,c_c25,c_c26 , c_c27        // [478][MOV][472]
        ,   c_c28 , c_c29,c_c30,c_c31,c_c32,c_c33 , c_c34        // [478][MOV][472]
        ,   c_c35 , c_c36,c_c37,c_c38,c_c39,c_c40 , c_c41        // [478][MOV][472]
                                                                 // [478][MOV][472]
        ,   c_c42 , c_c43,c_c44,c_c45,c_c46,c_c47 , c_c48        // [478][MOV][472]
                                                                 // [478][MOV][472]
        ]));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [478][MOV][472]
        var d_c49_l16 =( new Uint8Array([ //////////////////     // [478][MOV][472]
                                                                 // [478][MOV][472]
            c_l00 , c_l01,c_l02,c_l03,c_l04,c_l05 , c_l06        // [478][MOV][472]
                                                                 // [478][MOV][472]
        ,   c_l07 , _____,_____,_____,_____,_____ , c_l08        // [478][MOV][472]
        ,   c_l09 , _____,_____,_____,_____,_____ , c_l10        // [478][MOV][472]
        ,   c_l11 , _____,_____,_____,_____,_____ , c_l12        // [478][MOV][472]
        ,   c_l13 , _____,_____,_____,_____,_____ , c_l14        // [478][MOV][472]
        ,   c_l15 , _____,_____,_____,_____,_____ , _____        // [478][MOV][472]
                                                                 // [478][MOV][472]
        ,   _____ , _____,_____,_____,_____,_____ , _____        // [478][MOV][472]
                                                                 // [478][MOV][472]
        ]));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [478][MOV][472]
                                                                 // [478][MOV][472]
        var d_c49_pf8 =( new Uint8Array([ //////////////////     // [480][BUG][478][MOV][472]
                                                                 // [478][MOV][472]
            _____ , _____,_____,_____,_____,_____ , _____        // [478][MOV][472]
                                                                 // [478][MOV][472]
        ,   _____ , _____,_____,_____,_____,_____ , _____        // [478][MOV][472]
        ,   _____ , _____,_____,_____,_____,_____ , _____        // [478][MOV][472]
        ,   _____ , _____,_____,_____,_____,_____ , _____        // [478][MOV][472]
        ,   _____ , _____,_____,_____,_____,_____ , _____        // [478][MOV][472]
        ,   _____ , _____,_____,_____,_____,_____ , c_p00        // [478][MOV][472]
                                                                 // [478][MOV][472]
        ,   c_p01 , c_p02,c_p03,c_p04,c_p05,c_p06 , c_p07        // [478][MOV][472]
                                                                 // [478][MOV][472]
        ]));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [478][MOV][472]
                                                                 // [478][MOV][472]
        var d_c49_t25 =( new Uint8Array([ //////////////////     // [478][MOV][472]
                                                                 // [478][MOV][472]
            _____ , _____,_____,_____,_____,_____ , _____        // [478][MOV][472]
                                                                 // [478][MOV][472]
        ,   _____ , c_t00,c_t01,c_t02,c_t03,c_t04 , _____        // [478][MOV][472]
        ,   _____ , c_t05,c_t06,c_t07,c_t08,c_t09 , _____        // [478][MOV][472]
        ,   _____ , c_t10,c_t11,c_t12,c_t13,c_t14 , _____        // [478][MOV][472]
        ,   _____ , c_t15,c_t16,c_t17,c_t18,c_t19 , _____        // [478][MOV][472]
        ,   _____ , c_t20,c_t21,c_t22,c_t23,c_t24 , _____        // [478][MOV][472]
                                                                 // [478][MOV][472]
        ,   _____ , _____,_____,_____,_____,_____ , _____        // [478][MOV][472]
                                                                 // [478][MOV][472]
                                                                 // [478][MOV][472]
        ]));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [478][MOV][472]
                                                                 // [478][MOV][472]
    }   //:<---- BEG[ ITS_A_MOTHER_FUCKING_SCOPE_BITCHES!!! ]:// // [478][MOV][472]
    //////////////////////////////////////////////////////////// // [478][MOV][472]
    //:----------------------:#_128_X_128_CHUNK_ENUMS_#:[472]:// // [478][MOV][---]
                                                                 // [478][--------]
    //:------------------------------:#_MOVE_LUT_2022_#:[478]:// // [478][--------]
                                                                 // [---] 
    //:#_CHUNK_MAPPING_#:[476]:------------------------------:// // [476]
    {   //:::::::::::::::#_MOTHER_FUCKING_BLOCK_SCOPE_#:[476]:// // [476]
                                                                 // [476]
        let __v__=( 0xFF ); /** TRAP_VALUE AKA INVALID **/       // [476]
        let __0__=(  0   ); //: 1st_Cell_X_Or_Y :::::::::://     // [476]
        let __1__=(  1   ); //: 2nd_Cell_X_Or_Y :::::::::://     // [476]
        let __2__=(  2   ); //: 3rd_Cell_X_Or_Y :::::::::://     // [476]
        let __3__=(  3   ); //: 4th_Cell_X_Or_Y :::::::::://     // [476]
        let __4__=(  4   ); //: 5th_Cell_X_Or_Y :::::::::://     // [476]
        let __5__=(  5   ); //: 6th_Cell_X_Or_Y :::::::::://     // [476]
        let __6__=(  6   ); //: 7th_Cell_X_Or_Y :::::::::://     // [476]
                                                                 // [476]
        //:_L16_CHUNKS_#:[476]:--------------------------://     // [476]
                                                                 // [476]
            //:#_RGBA896_L16_#:[476]:--------------------://     // [476]
            //:#_L16_RGBA896_#:[476]:--------------------://     // [476]
                                                                 // [476]
                var d_l16_c7x =( new Uint8Array([                // [476]
                //                                               // [476]
                    __0__,__1__,__2__,__3__,__4__,__5__,__6__    // [476]
                //                                               // [476]
                ,   __0__               ,               __6__    // [476]
                //                                               // [476]
                ,   __0__               ,               __6__    // [476]
                //                                               // [476]
                ,   __0__               ,               __6__    // [476]
                //                                               // [476]
                ,   __0__               ,               __6__    // [476]
                //                                               // [476]
                ,   __0__                               /////    // [476]
                //                                               // [476]
                    /////,/////,/////,/////,/////,/////,/////    // [476]
                ]));;                                            // [476]
                var d_l16_c7y =( new Uint8Array([                // [476]
                                                                 // [476]
                //                                               // [476]
                    __0__,__0__,__0__,__0__,__0__,__0__,__0__    // [476]
                //                                               // [476]
                ,   __1__               ,               __1__    // [476]
                //                                               // [476]
                ,   __2__               ,               __2__    // [476]
                //                                               // [476]
                ,   __3__               ,               __3__    // [476]
                //                                               // [476]
                ,   __4__               ,               __4__    // [476]
                //                                               // [476]
                ,   __5__                               /////    // [476]
                //                                               // [476]
                    /////,/////,/////,/////,/////,/////,/////    // [476]
                ]));;                                            // [476]
            //:--------------------:#_L16_RGBA896_#:[476]://     // [476]
            //:--------------------:#_RGBA896_L16_#:[476]://     // [476]
            //:#_PIX2048_L16_#:[476]:--------------------://     // [476]
            //:#_L16_PIX2048_#:[476]:--------------------://     // [476]
                                                                 // [476]
                var d_l16_c4x =( new Uint8Array([                // [476]
                ////                                             // [476]
                    __0__,__1__,__2__,__3__                      // [476]
                ////                                             // [476]
                ,   __0__,__1__,__2__,__3__                      // [476]
                ////                                             // [476]
                ,   __0__,__1__,__2__,__3__                      // [476]
                ////                                             // [476]
                ,   __0__,__1__,__2__,__3__                      // [476]
                ]));;                                            // [476]
                var d_l16_c4y =( new Uint8Array([                // [476]
                ////                                             // [476]
                    __0__,__0__,__0__,__0__                      // [476]
                ////                                             // [476]
                ,   __1__,__1__,__1__,__1__                      // [476]
                ////                                             // [476]
                ,   __2__,__2__,__2__,__2__                      // [476]
                ////                                             // [476]
                ,   __3__,__3__,__3__,__3__                      // [476]
                ]));;                                            // [476]
            //:--------------------:#_L16_PIX2048_#:[476]://     // [476]
            //:--------------------:#_PIX2048_L16_#:[476]://     // [476]
                                                                 // [476]
        //:--------------------------:_L16_CHUNKS_#:[476]://     // [476]
        //:_PF8_CHUNKS_#:[476]:--------------------------://     // [476]
                                                                 // [476]
            //:#_RGBA896_PF8_#:[476]:--------------------://     // [476]
            //:#_PF8_RGBA896_#:[476]:--------------------://     // [476]
                                                                 // [476]
                var d_pf8_c7x =( new Uint8Array([   //////////// // [476]
                //                                            // // [476]
                //    0  ,  1  ,  2  ,  3  ,  4  ,  5  ,  6   // // [476]
                //                                            // // [476]
                //    0  ,  1  ,  2  ,  3  ,  4  ,  5  ,  6   // // [476]
                //                                            // // [476]
                //    0  ,  1  ,  2  ,  3  ,  4  ,  5  ,  6   // // [476]
                //                                            // // [476]
                //    0  ,  1  ,  2  ,  3  ,  4  ,  5  ,  6   // // [476]
                //                                            // // [476]
                //    0  ,  1  ,  2  ,  3  ,  4  ,  5  ,  6   // // [476]
                //                                            // // [476]
                /*****0*****1*****2*****3*****4*****5**/__6__ // // [476]
                //                                            // // [476]
                ,   __0__,__1__,__2__,__3__,__4__,__5__,__6__ // // [476]
                ]));;                                         // // [476]
                var d_pf8_c7y =( new Uint8Array([   //////////// // [476]
                //                                            // // [476]
                //    0  ,  0  ,  0  ,  0  ,  0  ,  0  ,  0   // // [476]
                //                                            // // [476]
                //    1  ,  1  ,  1  ,  1  ,  1  ,  1  ,  1   // // [476]
                //                                            // // [476]
                //    2  ,  2  ,  2  ,  2  ,  2  ,  2  ,  2   // // [476]
                //                                            // // [476]
                //    3  ,  3  ,  3  ,  3  ,  3  ,  3  ,  3   // // [476]
                //                                            // // [476]
                //    4  ,  4  ,  4  ,  4  ,  4  ,  4  ,  4   // // [476]
                //                                            // // [476]
                /*****5*****5*****5*****5*****5*****5**/__5__ // // [476]
                //                                            // // [476]
                ,   __6__,__6__,__6__,__6__,__6__,__6__,__6__ // // [476]
                ]));;                                            // [476]
            //:--------------------:#_PF8_RGBA896_#:[476]://     // [476]
            //:--------------------:#_RGBA896_PF8_#:[476]://     // [476]
            //:#_PIX2048_PF8_#:[476]:--------------------://     // [476]
            //:#_PF8_PIX2048_#:[476]:--------------------://     // [476]
                                                                 // [476]
                var d_pf8_c4x =( new Uint8Array([                // [476]
                ////                                             // [476]
                    __0__,__1__,__2__,__3__                      // [476]
                ////                                             // [476]
                ,   __0__,__1__,__2__,__3__                      // [476]
                ////                                             // [476]
                ////  0  ,  1  ,  2  ,  3                        // [476]
                ////                                             // [476]
                ////  0  ,  1  ,  2  ,  3                        // [476]
                ]));;                                            // [476]
                var d_pf8_c4y =( new Uint8Array([                // [476]
                ////                                             // [476]
                    __0__,__0__,__0__,__0__                      // [476]
                ////                                             // [476]
                ,   __1__,__1__,__1__,__1__                      // [476]
                ////                                             // [476]
                ////  2  ,  2  ,  2  ,  2                        // [476]
                ////                                             // [476]
                ////  3  ,  3  ,  3  ,  3                        // [476]
                ]));;                                            // [476]
            //:--------------------:#_PF8_PIX2048_#:[476]://     // [476]
            //:--------------------:#_PIX2048_PF8_#:[476]://     // [476]
                                                                 // [476]
        //:--------------------------:_PF8_CHUNKS_#:[476]://     // [476]
        //:_T25_CHUNKS_#:[476]:--------------------------://     // [476]
                                                                 // [476]
            //:#_RGBA896_T25_#:[476]:--------------------://     // [476]
            //:#_T25_RGBA896_#:[476]:--------------------://     // [476]
                                                                 // [476]
                var d_t25_c7x =( new Uint8Array([                // [476]
                //                                               // [476]
                //    0  ,  1  ,  2  ,  3  ,  4  ,  5  ,  6      // [476]
                //                                       ///     // [476]
                          __1__,__2__,__3__,__4__,__5__  ///     // [476]
                //    0                                  ///     // [476]
                         ,__1__,__2__,__3__,__4__,__5__  ///     // [476]
                //    0                                  ///     // [476]
                         ,__1__,__2__,__3__,__4__,__5__  ///     // [476]
                //    0                                  ///     // [476]
                         ,__1__,__2__,__3__,__4__,__5__  ///     // [476]
                //    0                                  ///     // [476]
                         ,__1__,__2__,__3__,__4__,__5__  ///     // [476]
                //    0                                  ///     // [476]
                //    0  ,  1  ,  2  ,  3  ,  4  ,  5  ,  6      // [476]
                ]));;                                            // [476]
                var d_t25_c7y =( new Uint8Array([                // [476]
                //                                               // [476]
                //    0  ,  0  ,  0  ,  0  ,  0  ,  0  ,  0      // [476]
                //                                       ///     // [476]
                          __1__,__1__,__1__,__1__,__1__  ///     // [476]
                //    1                                  ///     // [476]
                         ,__2__,__2__,__2__,__2__,__2__  ///     // [476]
                //    2                                  ///     // [476]
                         ,__3__,__3__,__3__,__3__,__3__  ///     // [476]
                //    3                                  ///     // [476]
                         ,__4__,__4__,__4__,__4__,__4__  ///     // [476]
                //    4                                  ///     // [476]
                         ,__5__,__5__,__5__,__5__,__5__  ///     // [476]
                //    5                                  ///     // [476]
                //    6  ,  6  ,  6  ,  6  ,  6  ,  6  ,  6      // [476]
                ]));;                                            // [476]
            //:--------------------:#_T25_RGBA896_#:[476]://     // [476]
            //:--------------------:#_RGBA896_T25_#:[476]://     // [476]
            //:#_PIX2048_T25_#:[476]:--------------------://     // [476]
            //:#_T25_PIX2048_#:[476]:--------------------://     // [476]
                                                                 // [476]
                //:$_IDENTICAL_T25_C4X_$[ d_g25_r4x ]::::://     // [476]
                                                                 // [476]
                var d_t25_c4x =( new Uint8Array([                // [476]
                                                                 // [476]
                ////                                             // [476]
                    __v__,__v__,__0__,__v__,__v__                // [476]
                ////                                             // [476]
                ,   __v__,__1__,__2__,__3__,__v__                // [476]
                ////                                             // [476]
                ,   __0__,__1__,__2__,__3__,__0__                // [476]
                ////                                             // [476]
                ,   __v__,__1__,__2__,__3__,__v__                // [476]
                ////                                             // [476]
                ,   __v__,__v__,__0__,__v__,__v__                // [476]
                ]));;                                            // [476]
                                                                 // [476]
                //:$_IDENTICAL_T25_C4Y_$[ d_g25_r4y ]::::://     // [476]
                                                                 // [476]
                var d_t25_c4y =( new Uint8Array([                // [476]
                                                                 // [476]
                ////                                             // [476]
                    __v__,__v__,__0__,__v__,__v__                // [476]
                ////                                             // [476]
                ,   __v__,__0__,__0__,__0__,__v__                // [476]
                ////                                             // [476]
                ,   __1__,__1__,__1__,__1__,__2__                // [476]
                ////                                             // [476]
                ,   __v__,__2__,__2__,__2__,__v__                // [476]
                ////                                             // [476]
                ,   __v__,__v__,__3__,__v__,__v__                // [476]
                ]));;                                            // [476]
            //:--------------------:#_T25_PIX2048_#:[476]://     // [476]
            //:--------------------:#_PIX2048_T25_#:[476]://     // [476]
            //:#_CHUNKY_SMOKE_TEST_#:[476]:--------------://     // [476]
                                                                 // [476]
                //: @CST@ : Chunky_Smoke_Test :::::::::::://     // [476]
                                                                 // [476]
                ASS( 16 === d_l16_c7x.length , "[CST_001]");     // [476]
                ASS( 16 === d_l16_c7y.length , "[CST_002]");     // [476]
                                                                 // [476]
                ASS( 16 === d_l16_c4x.length , "[CST_003]");     // [476]
                ASS( 16 === d_l16_c4y.length , "[CST_004]");     // [476]
                                                                 // [476]
                ASS(  8 === d_pf8_c7x.length , "[CST_005]");     // [476]
                ASS(  8 === d_pf8_c7y.length , "[CST_006]");     // [476]
                                                                 // [476]
                ASS(  8 === d_pf8_c4x.length , "[CST_007]");     // [476]
                ASS(  8 === d_pf8_c4y.length , "[CST_008]");     // [476]
                                                                 // [476]
                ASS( 25 === d_t25_c7x.length , "[CST_009]");     // [476]
                ASS( 25 === d_t25_c7y.length , "[CST_010]");     // [476]
                                                                 // [476]
                ASS( 25 === d_t25_c4x.length , "[CST_011]");     // [476]
                ASS( 25 === d_t25_c4y.length , "[CST_012]");     // [476]
                                                                 // [476]
            //:--------------:#_CHUNKY_SMOKE_TEST_#:[476]://     // [476]
                                                                 // [476]
        //:--------------------------:_T25_CHUNKS_#:[476]://     // [476]
                                                                 // [476]
    }   //:::::::::::::::#_MOTHER_FUCKING_BLOCK_SCOPE_#:[476]:// // [476]
    //:------------------------------:#_CHUNK_MAPPING_#:[476]:// // [476]
    //:#_LOV_TO_R4W_#:[409]:---------------------------------:// // [409]
                                                                 // [409]
        //:----------------------------------------------://     // [409]
        //:                                              ://     // [409]
        //: @DLO@ : Data_Layout_Overlay                  ://     // [409]
        //: @r4x@ : Roomcell_on_4x4_DLO - X_AXIS         ://     // [409]
        //: @r4y@ : Roomcell_on_4x4_DLO - Y_AXIS         ://     // [409]
        //: @r4i@ : Roomcell_on_4x4_DLO - I_INDEX (1D)   ://     // [409]
        //:                                              ://     // [409]
        //: @lover4x@ : LevelOVERlayCell - X             ://     // [409]
        //: @lover4y@ : LevelOVERlayCell - Y             ://     // [409]
        //: @lovtype@ : LevelOVERlayCell - TYPE          ://     // [409]
        //:                                              ://     // [409]
        //: SEE[ lover4x_VS_r4x ]                        ://     // [409]
        //: SEE[ lover4y_VS_r4y ]                        ://     // [409]
        //:                                              ://     // [409]
        //: ( r4x , r4y )===>( r4i )                     ://     // [409]
        //:                                              ://     // [409]
        //:----------------------------------------------://     // [409]
                                                                 // [409]
        const d_lover4x_lover4y_r4i =( new Uint8Array([          // [410][BUG][409]
                                                                 // [409]
             0, 1, 2, 3                                          // [409]
        ,    4, 5, 6, 7                                          // [409]
        ,    8, 9,10,11                                          // [409]
        ,   12,13,14,15                                          // [409]
        ]));;                                                    // [409]
                                                                 // [409]
        const d_lover4x_lover4y_lovtype =( new Uint8Array([      // [410][BUG][409]
                                                                 // [409]
             0, 0, 0, 0                                          // [409]
        ,    0, 0, 0, 0                                          // [409]
        ,    0, 0, 0, 0                                          // [409]
        ,    0, 1, 2, 3                                          // [409]
        ]));;                                                    // [409]
                                                                 // [409]
        {                                                        // [409]
            let lov_lut =(d_lover4x_lover4y_lovtype       );     // [410][BUG][409]
                                                                 // [409]
            let mrd_sil =(c_lovtype_mrd_sil /**SPECIAL **/);     // [409]
            let mrd_gcl =(c_lovtype_mrd_gcl /**GEOMETRY**/);     // [409]
            let mrd_atl =(c_lovtype_mrd_atl /**ASCII   **/);     // [409]
                                                                 // [409]
            ASS(mrd_sil === lov_lut[13] , "[001_SIL]"     );     // [409]
            ASS(mrd_gcl === lov_lut[14] , "[002_GCL]"     );     // [409]
            ASS(mrd_atl === lov_lut[15] , "[003_ATL]"     );     // [409]
        }                                                        // [409]
                                                                 // [409]
    //:---------------------------------:#_LOV_TO_R4W_#:[409]:// // [409]
    //:#_ROTATE_TOUCHING_BY_USING_LUT_#:[331]:---------------:// // [331]
                                                                 // [331]
        //:[331]:ROTATE_000:-----------------------------://     // [331]
        //:                                              ://     // [331]
        //:             TAG[ HOT_MATH_ROTATE_000 ]       ://     // [336][331]
        //:BULLSHIT_FORMULA[ (x,y) ==> ( x, y) ](@C_C_W@)://     // [336][331]
        //:- - - - - - - - - - - -- - - - - - - - - - - -://     // [331]
                                                                 // [331]
            const d_rotclok_000_r_x_to4_to2 = new Uint8Array([   // [337][331]
                                                                 // [331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][331]
                0x0   //: [ 0_0_0_0 ]===>( 0_0_0_0 ) ://         // [337][331]
            ,   0x0   //: [ 0_0_0_1 ]===>( 0_0_0_1 ) ://         // [337][331]
            ,   0x0   //: [ 0_0_1_0 ]===>( 0_0_1_0 ) ://         // [337][331]
            ,   0x0   //: [ 0_0_1_1 ]===>( 0_0_1_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][---]
            ,   0x1   //: [ 0_1_0_0 ]===>( 0_1_0_0 ) ://         // [337][331]
            ,   0x1   //: [ 0_1_0_1 ]===>( 0_1_0_1 ) ://         // [337][331]
            ,   0x1   //: [ 0_1_1_0 ]===>( 0_1_1_0 ) ://         // [337][331]
            ,   0x1   //: [ 0_1_1_1 ]===>( 0_1_1_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][---]
            ,   0x2   //: [ 1_0_0_0 ]===>( 1_0_0_0 ) ://         // [337][331]
            ,   0x2   //: [ 1_0_0_1 ]===>( 1_0_0_1 ) ://         // [337][331]
            ,   0x2   //: [ 1_0_1_0 ]===>( 1_0_1_0 ) ://         // [337][331]
            ,   0x2   //: [ 1_0_1_1 ]===>( 1_0_1_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][---]
            ,   0x3   //: [ 1_1_0_0 ]===>( 1_1_0_0 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_0_1 ]===>( 1_1_0_1 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_1_0 ]===>( 1_1_1_0 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_1_1 ]===>( 1_1_1_1 ) ://         // [337][331]
            ]);;                                                 // [331]
            const d_rotclok_000_r_y_to4_to2 = new Uint8Array([   // [337][331]
                                                                 // [331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][331]
                0x0   //: [ 0_0_0_0 ]===>( 0_0_0_0 ) ://         // [337][331]
            ,   0x1   //: [ 0_0_0_1 ]===>( 0_0_0_1 ) ://         // [337][331]
            ,   0x2   //: [ 0_0_1_0 ]===>( 0_0_1_0 ) ://         // [337][331]
            ,   0x3   //: [ 0_0_1_1 ]===>( 0_0_1_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][---]
            ,   0x0   //: [ 0_1_0_0 ]===>( 0_1_0_0 ) ://         // [337][331]
            ,   0x1   //: [ 0_1_0_1 ]===>( 0_1_0_1 ) ://         // [337][331]
            ,   0x2   //: [ 0_1_1_0 ]===>( 0_1_1_0 ) ://         // [337][331]
            ,   0x3   //: [ 0_1_1_1 ]===>( 0_1_1_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][---]
            ,   0x0   //: [ 1_0_0_0 ]===>( 1_0_0_0 ) ://         // [337][331]
            ,   0x1   //: [ 1_0_0_1 ]===>( 1_0_0_1 ) ://         // [337][331]
            ,   0x2   //: [ 1_0_1_0 ]===>( 1_0_1_0 ) ://         // [337][331]
            ,   0x3   //: [ 1_0_1_1 ]===>( 1_0_1_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][---]
            ,   0x0   //: [ 1_1_0_0 ]===>( 1_1_0_0 ) ://         // [337][331]
            ,   0x1   //: [ 1_1_0_1 ]===>( 1_1_0_1 ) ://         // [337][331]
            ,   0x2   //: [ 1_1_1_0 ]===>( 1_1_1_0 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_1_1 ]===>( 1_1_1_1 ) ://         // [337][331]
            ]);;                                                 // [331]
        //:-----------------------------:[331]:ROTATE_000://     // [331]
        //:[331]:ROTATE_090:-----------------------------://     // [331]
        //:                                              ://     // [331]
        //:             TAG[ HOT_MATH_ROTATE_090 ]       ://     // [336][331]
        //:BULLSHIT_FORMULA[ (x,y) ==> (−y, x) ](@C_C_W@)://     // [336][331]
        //:                                              ://     // [331]
        //:- - - - - - - - - - - -- - - - - - - - - - - -://     // [331]
            const d_rotclok_090_r_x_to4_to2 = new Uint8Array([   // [337][331]
                                                                 // [331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][331]
                0x0   //: [ 0_0_0_0 ]===>( 0_0_0_0 ) ://         // [337][331]
            ,   0x2   //: [ 0_0_0_1 ]===>( 1_0 0_0 ) ://         // [337][331]
            ,   0x1   //: [ 0_0_1_0 ]===>( 0_1 0_0 ) ://         // [337][331]
            ,   0x3   //: [ 0_0_1_1 ]===>( 1_1 0_0 ) ://         // [337][331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][331]
            ,   0x0   //: [ 0_1_0_0 ]===>( 0_0 0_1 ) ://         // [337][331]
            ,   0x2   //: [ 0_1_0_1 ]===>( 1_0 0_1 ) ://         // [337][331]
            ,   0x1   //: [ 0_1_1_0 ]===>( 0_1 0_1 ) ://         // [337][331]
            ,   0x3   //: [ 0_1_1_1 ]===>( 1_1 0_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][331]
            ,   0x0   //: [ 1_0_0_0 ]===>( 0_0 1_0 ) ://         // [337][331]
            ,   0x2   //: [ 1_0_0_1 ]===>( 1_0 1_0 ) ://         // [337][331]
            ,   0x1   //: [ 1_0_1_0 ]===>( 0_1 1_0 ) ://         // [337][331]
            ,   0x3   //: [ 1_0_1_1 ]===>( 1_1 1_0 ) ://         // [337][331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][331]
            ,   0x0   //: [ 1_1_0_0 ]===>( 0_0 1_1 ) ://         // [337][331]
            ,   0x2   //: [ 1_1_0_1 ]===>( 1_0 1_1 ) ://         // [337][331]
            ,   0x1   //: [ 1_1_1_0 ]===>( 0_1 1_1 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_1_1 ]===>( 1_1_1_1 ) ://         // [337][331]
            ]);;                                                 //      [331]
            const d_rotclok_090_r_y_to4_to2 = new Uint8Array([   // [337][331]
                                                                 //      [331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][331]
                0x0   //: [ 0_0_0_0 ]===>( 0_0_0_0 ) ://         // [337][331]
            ,   0x0   //: [ 0_0_0_1 ]===>( 1_0 0_0 ) ://         // [337][331]
            ,   0x0   //: [ 0_0_1_0 ]===>( 0_1 0_0 ) ://         // [337][331]
            ,   0x0   //: [ 0_0_1_1 ]===>( 1_1 0_0 ) ://         // [337][331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][331]
            ,   0x1   //: [ 0_1_0_0 ]===>( 0_0 0_1 ) ://         // [337][331]
            ,   0x1   //: [ 0_1_0_1 ]===>( 1_0 0_1 ) ://         // [337][331]
            ,   0x1   //: [ 0_1_1_0 ]===>( 0_1 0_1 ) ://         // [337][331]
            ,   0x1   //: [ 0_1_1_1 ]===>( 1_1 0_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][331]
            ,   0x2   //: [ 1_0_0_0 ]===>( 0_0 1_0 ) ://         // [337][331]
            ,   0x2   //: [ 1_0_0_1 ]===>( 1_0 1_0 ) ://         // [337][331]
            ,   0x2   //: [ 1_0_1_0 ]===>( 0_1 1_0 ) ://         // [337][331]
            ,   0x2   //: [ 1_0_1_1 ]===>( 1_1 1_0 ) ://         // [337][331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][331]
            ,   0x3   //: [ 1_1_0_0 ]===>( 0_0 1_1 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_0_1 ]===>( 1_0 1_1 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_1_0 ]===>( 0_1 1_1 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_1_1 ]===>( 1_1_1_1 ) ://         // [337][331]
            ]);;                                                 //      [331]
        //:-----------------------------:[331]:ROTATE_090://     //      [331]
        //:[331]:ROTATE_180:-----------------------------://     //      [331]
        //:                                              ://     //      [331]
        //:             TAG[ HOT_MATH_ROTATE_180   ]     ://     // [336][331]
        //:BULLSHIT_FORMULA[ (x,y) ==> (−x,−y) ](@C_C_W@)://     // [336][331]
        //:                                              ://     //      [331]
        //:- - - - - - - - - - - -- - - - - - - - - - - -://     //      [331]
            const d_rotclok_180_r_x_to4_to2 = new Uint8Array([   // [337][331]
                                                                 //      [331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][331]
                0x0   //: [ 0_0_0_0 ]===>( 0_0_0_0 ) ://         // [337][331]
            ,   0x0   //: [ 0_0_0_1 ]===>( 0_0 1_0 ) ://         // [337][331]
            ,   0x0   //: [ 0_0_1_0 ]===>( 0_0 0_1 ) ://         // [337][331]
            ,   0x0   //: [ 0_0_1_1 ]===>( 0_0 1_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][331]
            ,   0x2   //: [ 0_1_0_0 ]===>( 1_0 0_0 ) ://         // [337][331]
            ,   0x2   //: [ 0_1_0_1 ]===>( 1_0 1_0 ) ://         // [337][331]
            ,   0x2   //: [ 0_1_1_0 ]===>( 1_0 0_1 ) ://         // [337][331]
            ,   0x2   //: [ 0_1_1_1 ]===>( 1_0 1_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][331]
            ,   0x1   //: [ 1_0_0_0 ]===>( 0_1 0_0 ) ://         // [337][331]
            ,   0x1   //: [ 1_0_0_1 ]===>( 0_1 1_0 ) ://         // [337][331]
            ,   0x1   //: [ 1_0_1_0 ]===>( 0_1 0_1 ) ://         // [337][331]
            ,   0x1   //: [ 1_0_1_1 ]===>( 0_1 1_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][331]
            ,   0x3   //: [ 1_1_0_0 ]===>( 1_1 0_0 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_0_1 ]===>( 1_1 1_0 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_1_0 ]===>( 1_1 0_1 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_1_1 ]===>( 1_1_1_1 ) ://         // [337][331]
            ]);;                                                 //      [331]
            const d_rotclok_180_r_y_to4_to2 = new Uint8Array([   // [337][331]
                                                                 //      [331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][331]
                0x0   //: [ 0_0_0_0 ]===>( 0_0_0_0 ) ://         // [337][331]
            ,   0x2   //: [ 0_0_0_1 ]===>( 0_0 1_0 ) ://         // [337][331]
            ,   0x1   //: [ 0_0_1_0 ]===>( 0_0 0_1 ) ://         // [337][331]
            ,   0x3   //: [ 0_0_1_1 ]===>( 0_0 1_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][331]
            ,   0x0   //: [ 0_1_0_0 ]===>( 1_0 0_0 ) ://         // [337][331]
            ,   0x2   //: [ 0_1_0_1 ]===>( 1_0 1_0 ) ://         // [337][331]
            ,   0x1   //: [ 0_1_1_0 ]===>( 1_0 0_1 ) ://         // [337][331]
            ,   0x3   //: [ 0_1_1_1 ]===>( 1_0 1_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][331]
            ,   0x0   //: [ 1_0_0_0 ]===>( 0_1 0_0 ) ://         // [337][331]
            ,   0x2   //: [ 1_0_0_1 ]===>( 0_1 1_0 ) ://         // [337][331]
            ,   0x1   //: [ 1_0_1_0 ]===>( 0_1 0_1 ) ://         // [337][331]
            ,   0x3   //: [ 1_0_1_1 ]===>( 0_1 1_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][331]
            ,   0x0   //: [ 1_1_0_0 ]===>( 1_1 0_0 ) ://         // [337][331]
            ,   0x2   //: [ 1_1_0_1 ]===>( 1_1 1_0 ) ://         // [337][331]
            ,   0x1   //: [ 1_1_1_0 ]===>( 1_1 0_1 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_1_1 ]===>( 1_1_1_1 ) ://         // [337][331]
            ]);;                                                 //      [331]
        //:-----------------------------:[331]:ROTATE_180://     //      [331]
        //:[331]:ROTATE_270:-----------------------------://     //      [331]
        //:                                              ://     //      [331]
        //:             TAG[ HOT_MATH_ROTATE_270 ]       ://     // [336][331]
        //:BULLSHIT_FORMULA[ (x,y) ==> ( y,−x) ](@C_C_W@)://     // [336][331]
        //:                                              ://     //      [331]
        //:- - - - - - - - - - - -- - - - - - - - - - - -://     //      [331]
                                                                 //      [331]
            const d_rotclok_270_r_x_to4_to2 = new Uint8Array([   // [337][331]
                                                                 //      [331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][331]
                0x0   //: [ 0_0_0_0 ]===>( 0_0_0_0 ) ://         // [337][331]
            ,   0x1   //: [ 0_0_0_1 ]===>( 0_1 0_0 ) ://         // [337][331]
            ,   0x2   //: [ 0_0_1_0 ]===>( 1_0 0_0 ) ://         // [337][331]
            ,   0x3   //: [ 0_0_1_1 ]===>( 1_1 0_0 ) ://         // [337][331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][331]
            ,   0x0   //: [ 0_1_0_0 ]===>( 0_0 1_0 ) ://         // [337][331]
            ,   0x1   //: [ 0_1_0_1 ]===>( 0_1 1_0 ) ://         // [337][331]
            ,   0x2   //: [ 0_1_1_0 ]===>( 1_0 1_0 ) ://         // [337][331]
            ,   0x3   //: [ 0_1_1_1 ]===>( 1_1 1_0 ) ://         // [337][331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][331]
            ,   0x0   //: [ 1_0_0_0 ]===>( 0_0 0_1 ) ://         // [337][331]
            ,   0x1   //: [ 1_0_0_1 ]===>( 0_1 0_1 ) ://         // [337][331]
            ,   0x2   //: [ 1_0_1_0 ]===>( 1_0 0_1 ) ://         // [337][331]
            ,   0x3   //: [ 1_0_1_1 ]===>( 1_1 0_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        X_X ___   ://         // [337][331]
            ,   0x0   //: [ 1_1_0_0 ]===>( 0_0 1_1 ) ://         // [337][331]
            ,   0x1   //: [ 1_1_0_1 ]===>( 0_1 1_1 ) ://         // [337][331]
            ,   0x2   //: [ 1_1_1_0 ]===>( 1_0 1_1 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_1_1 ]===>( 1_1_1_1 ) ://         // [337][331]
            ]);;                                                 //      [331]
            const d_rotclok_270_r_y_to4_to2 = new Uint8Array([   // [337][331]
                                                                 //      [331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][331]
                0x0   //: [ 0_0_0_0 ]===>( 0_0_0_0 ) ://         // [337][331]
            ,   0x0   //: [ 0_0_0_1 ]===>( 0_1 0_0 ) ://         // [337][331]
            ,   0x0   //: [ 0_0_1_0 ]===>( 1_0 0_0 ) ://         // [337][331]
            ,   0x0   //: [ 0_0_1_1 ]===>( 1_1 0_0 ) ://         // [337][331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][331]
            ,   0x2   //: [ 0_1_0_0 ]===>( 0_0 1_0 ) ://         // [337][331]
            ,   0x2   //: [ 0_1_0_1 ]===>( 0_1 1_0 ) ://         // [337][331]
            ,   0x2   //: [ 0_1_1_0 ]===>( 1_0 1_0 ) ://         // [337][331]
            ,   0x2   //: [ 0_1_1_1 ]===>( 1_1 1_0 ) ://         // [337][331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][331]
            ,   0x1   //: [ 1_0_0_0 ]===>( 0_0 0_1 ) ://         // [337][331]
            ,   0x1   //: [ 1_0_0_1 ]===>( 0_1 0_1 ) ://         // [337][331]
            ,   0x1   //: [ 1_0_1_0 ]===>( 1_0 0_1 ) ://         // [337][331]
            ,   0x1   //: [ 1_0_1_1 ]===>( 1_1 0_1 ) ://         // [337][331]
                      //:   X_X_Y_Y        ___ Y_Y   ://         // [337][331]
            ,   0x3   //: [ 1_1_0_0 ]===>( 0_0 1_1 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_0_1 ]===>( 0_1 1_1 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_1_0 ]===>( 1_0 1_1 ) ://         // [337][331]
            ,   0x3   //: [ 1_1_1_1 ]===>( 1_1_1_1 ) ://         // [337][331]
            ]);;                                                 //      [331]
        //:-----------------------------:[331]:ROTATE_270://     // [---][---]
        //:#_TO4_ROTATION_TESTS_#:[332]:-----------------://     // [332]
                                                                 // [332]
            //:------------------------------------------://     // [332]
            //: Needs to go into unit test code function.://     // [332]
            //:------------------------------------------://     // [332]
                                                                 // [332]
        //:-----------------:#_TO4_ROTATION_TESTS_#:[332]://     // [332]     
                                                                 // [---]
    //:---------------:#_ROTATE_TOUCHING_BY_USING_LUT_#:[331]:// // [---]
    //:#_MIRROR_TOUCHING_BY_USING_LUT_#:[330]:---------------:// // [330]
                                                                 // [330]
        const d_tog_m_x_to4_to4 = new Uint8Array([               // [330]
                                                                 // [330]
            0x0 //: BIN[ 0_0_0_0 ]==>( NO_CHANGE )  :://         // [330]
        ,   0x1 //: BIN[ 0_0_0_1 ]==>( NO_CHANGE )  :://         // [330]
        ,   0x2 //: BIN[ 0_0_1_0 ]==>( NO_CHANGE )  :://         // [330]
        ,   0x3 //: BIN[ 0_0_1_1 ]==>( NO_CHANGE )  :://         // [330]
                //:      X_X_Y_Y                    :://         // [330]
        ,   0x8 //: BIN[ 0_1_0_0 ]==>( 1_0_0_0   )  :://         // [330]
        ,   0x9 //: BIN[ 0_1_0_1 ]==>( 1_0_0_1   )  :://         // [330]
        ,   0xA //: BIN[ 0_1_1_0 ]==>( 1_0_1_0   )  :://         // [330]
        ,   0xB //: BIN[ 0_1_1_1 ]==>( 1_0_1_1   )  :://         // [330]
                //:      X_X_Y_Y                    :://         // [330]
        ,   0X4 //: BIN[ 1_0_0_0 ]==>( 0_1_0_0   )  :://         // [330]
        ,   0X5 //: BIN[ 1_0_0_1 ]==>( 0_1_0_1   )  :://         // [330]
        ,   0X6 //: BIN[ 1_0_1_0 ]==>( 0_1_1_0   )  :://         // [330]
        ,   0X7 //: BIN[ 1_0_1_1 ]==>( 0_1_1_1   )  :://         // [330]
                //:      X_X_Y_Y                    :://         // [330]
        ,   0xC //: BIN[ 1_1_0_0 ]==>( NO_CHANGE )  :://         // [330]
        ,   0xD //: BIN[ 1_1_0_1 ]==>( NO_CHANGE )  :://         // [330]
        ,   0xE //: BIN[ 1_1_1_0 ]==>( NO_CHANGE )  :://         // [330]
        ,   0xF //: BIN[ 1_1_1_1 ]==>( NO_CHANGE )  :://         // [330]
        ]);;                                                     // [330]
        const d_tog_m_y_to4_to4 = new Uint8Array([               // [330]
                                                                 // [330]
            0x0 //: BIN[ 0_0_0_0 ]==>( NO_CHANGE )  :://         // [330]
        ,   0x2 //: BIN[ 0_0_0_1 ]==>( 0_0_1_0   )  :://         // [330]
        ,   0x1 //: BIN[ 0_0_1_0 ]==>( 0_0_0_1   )  :://         // [330]
        ,   0x3 //: BIN[ 0_0_1_1 ]==>( NO_CHANGE )  :://         // [330]
                //:      X_X_Y_Y                    :://         // [330]
        ,   0x4 //: BIN[ 0_1_0_0 ]==>( NO_CHANGE )  :://         // [330]
        ,   0x6 //: BIN[ 0_1_0_1 ]==>( 0_1_1_0   )  :://         // [330]
        ,   0x5 //: BIN[ 0_1_1_0 ]==>( 0_1_0_1   )  :://         // [330]
        ,   0x7 //: BIN[ 0_1_1_1 ]==>( NO_CHANGE )  :://         // [330]
                //:      X_X_Y_Y                    :://         // [330]
        ,   0x8 //: BIN[ 1_0_0_0 ]==>( NO_CHANGE )  :://         // [330]
        ,   0xA //: BIN[ 1_0_0_1 ]==>( 1_0_1_0   )  :://         // [330]
        ,   0x9 //: BIN[ 1_0_1_0 ]==>( 1_0_0_1   )  :://         // [330]
        ,   0xB //: BIN[ 1_0_1_1 ]==>( NO_CHANGE )  :://         // [330]
                //:      X_X_Y_Y                    :://         // [330]
        ,   0xC //: BIN[ 1_1_0_0 ]==>( NO_CHANGE )  :://         // [330]
        ,   0xE //: BIN[ 1_1_0_1 ]==>( 1_1_1_0   )  :://         // [330]
        ,   0xD //: BIN[ 1_1_1_0 ]==>( 1_1_0_1   )  :://         // [330]
        ,   0xF //: BIN[ 1_1_1_1 ]==>( NO_CHANGE )  :://         // [330]
        ]);;                                                     // [330]
    //:---------------:#_MIRROR_TOUCHING_BY_USING_LUT_#:[330]:// // [330]
    //:#_8x8_ASYMMETRICAL_CAP_GRAPHICS_#:[326]:--------------:// // [326]
                                                                 // [326]
        //:----------------------------------------------://     // [326]
        //: @t04@ : Touching Bitmask , 4 bits.    :::::::://     // [326]
        //: @h02@ : Half ( two of them , 0 or 1 ) :::::::://     // [326]
        //: @8x4@ : 8x4 binary bitmap packed into uint32 ://     // [326]
        //:----------------------------------------------://     // [326]
                                                                 // [326]
        const d_to4_h02_8x4 = new Uint32Array([                  // [326]
                                   //: SEE[_8X4__SORTED_]://     // [326]
/**@NOCO@**/c_8x4_top , c_8x4_not  //: to4____val____000 ://     // [326]
        ,   c_8x4_top , c_8x4_not  //: to4____val____001 ://     // [326]
        ,   c_8x4_not , c_8x4_not  //: to4____val____002 ://     // [326]
        ,   c_8x4_not , c_8x4_not  //: to4____val____003 ://     // [326]
        ,   c_8x4_lef , c_8x4_not  //: to4____val____004 ://     // [326]
        ,   c_8x4_lef , c_8x4_not  //: to4____val____005 ://     // [326]
        ,   c_8x4_not , c_8x4_not  //: to4____val____006 ://     // [326]
        ,   c_8x4_not , c_8x4_not  //: to4____val____007 ://     // [326]
        ,   c_8x4_rig , c_8x4_not  //: to4____val____008 ://     // [326]
        ,   c_8x4_rig , c_8x4_not  //: to4____val____009 ://     // [326]
        ,   c_8x4_not , c_8x4_not  //: to4____val____010 ://     // [326]
        ,   c_8x4_not , c_8x4_not  //: to4____val____011 ://     // [326]
        ,   c_8x4_cen , c_8x4_not  //: to4____val____012 ://     // [326]
        ,   c_8x4_cen , c_8x4_not  //: to4____val____013 ://     // [326]
        ,   c_8x4_not , c_8x4_not  //: to4____val____014 ://     // [326]
        ,   c_8x4_not , c_8x4_not  //: to4____val____015 ://     // [326]
        ]);;                       //: SEE[_8X4__SORTED_]://     // [326]
        ASS( 32 === d_to4_h02_8x4.length , "[TH8_LEN]" );        // [326]
                                                                 // [326]
    //:--------------:#_8x8_ASYMMETRICAL_CAP_GRAPHICS_#:[326]:// // [326]
    //:#_SHADER_7_BIT_PACKED_AUTO_TILE_GRAPHICS_#:[319]:=====:// // [319]
                                                                 // [319]
        const d_to4_4x4 = new Uint32Array([ ////////////////     // [319]
        //::       _4x4_                    :::::::::::::://     // [319]
        /*FIX005*/c_4x4_dtm_000 //: __DTM__ : DontTouchMe://     // [321][BUG][319]
        ,         c_4x4_v_t_001 //: __V_T__ : Verti___Top://     // [319]
        ,         c_4x4_v_b_002 //: __V_B__ : Verti___Bot://     // [319]
        ,         c_4x4_v_m_003 //: __V_M__ : Verti___Mid://     // [319]
        ,         c_4x4_h_l_004 //: __H_L__ : Horiz___Lef://     // [319]
        ,         c_4x4_ntl_005 //: __NTL__ : NonagTopLef://     // [319]
        ,         c_4x4_nbl_006 //: __NBL__ : NonagBotLef://     // [319]
        ,         c_4x4_n_l_007 //: __N_L__ : Nonag___Lef://     // [319]
        ,         c_4x4_h_r_008 //: __H_R__ : Horiz___Rig://     // [319]
        ,         c_4x4_ntr_009 //: __NTR__ : NonagTopRig://     // [319]
        ,         c_4x4_nbr_010 //: __NBR__ : NonagBotRig://     // [319]
        ,         c_4x4_n_r_011 //: __N_R__ : Nonag___Rig://     // [319]
        ,         c_4x4_h_c_012 //: __H_C__ : Horiz___Cen://     // [319]
        ,         c_4x4_n_t_013 //: __N_T__ : Nonag___Top://     // [319]
        ,         c_4x4_n_b_014 //: __N_B__ : Nonag___Bot://     // [319]
        ,         c_4x4_noa_015 //: __NOA__ : NOnag___All://     // [319]
        ]);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [319]
    //:=====:#_SHADER_7_BIT_PACKED_AUTO_TILE_GRAPHICS_#:[319]:// // [---]
    //:#_WHAT_THE_FUCK_IS_WRONG_WITH_YOU_PEOPLE_#:[321]:=====:// // [---][321]
    if( d_bug >= 1 ){                                            // [---][321]
                                                                 // [--------]
        let  to4_4x4 =( d_to4_4x4 );                             // [322][---]
                                                                 // [--------]
        ASS( 16 === to4_4x4.length , "[TO4_4X4_LEN]" );;;;       // [322][MAE][320]
                                                                 // [--------]
        let  dex = 0 ;                                           //      [321]
        for( dex = 0 ; dex <=( 16-1 ) ; dex ++ ){                //      [321]
                                                                 //      [321]
            if( 0 === to4_4x4[ dex ]      ){                     // [322][321]
                                                                 //      [321]
                ERR("[HOW_THE_FUCK_IS_THIS_ZERO_2022]");         //      [321]
            }else                                                //      [321]
            if(       to4_4x4[ dex ] <= 0 ){                     // [322][321]
                                                                 //      [321]
                ERR("[OHFUCKNO_2022]");                          //      [321]
            }else                                                //      [321]
            if(       to4_4x4[ dex ] >= 1 ){                     // [322][321]
                                                                 //      [321]
                /** OKAY , do nothing **/                        //      [321]
            }else{                                               //      [321]
                ERR("[FUCKITYFUCKFUCKFORPRESIDENT]");            //      [321]
            };;                                                  //      [321]
        };;                                                      //      [321]
    };;                                                          //      [321]
    //:=====:#_WHAT_THE_FUCK_IS_WRONG_WITH_YOU_PEOPLE_#:[321]:// // [---]
    //:#_FRONT_TO_BACK_RENDERING_LOOP_#:[304]:===============:// // [---]
                                                                 // [304]
        const d_i21_la3 = new Uint8Array([                       // [304]
                                                                 // [304]
            2,2,2,2,2,2,2  //: Fada Tiles ( la3 === 2 ) :://     // [304]
        ,   1,1,1,1,1,1,1  //: Bomb Tiles ( la3 === 1 ) :://     // [304]
        ,   0,0,0,0,0,0,0  //: Geom Tiles ( la3 === 0 ) :://     // [304]
        ]);;                                                     // [304]
        const d_i21_te7 = new Uint8Array([                       // [304]
                                                                 // [304]
            0,1,2,3,4,5,6  //: Small_To_Large : FADA ::::://     // [304]
        ,   0,1,2,3,4,5,6  //: Small_To_Large : BOMB ::::://     // [304]
        ,   0,1,2,3,4,5,6  //: Small_To_Large : GEOM ::::://     // [304]
        ]);;                                                     // [304]
        const d_i21_lat = new Uint8Array([ //:::::::::::[309]:// // [309]
                                                                 // [309]
        //: (0064),(0032),(0016),(0008),(0004),(0002),(0001) :// // [309]
            (0x40),(0x20),(0x10),(0x08),(0x04),(0x02),(0x01)     // [309]
        ,   (0x40),(0x20),(0x10),(0x08),(0x04),(0x02),(0x01)     // [309]
        ,   (0x40),(0x20),(0x10),(0x08),(0x04),(0x02),(0x01)     // [309]
                                                                 // [309]
        ]);; //:::::::::::::::::::::::::::::::::::::::::[309]:// // [309]
        const d_i21_dia = new Uint8Array([ //:::::::::::[309]:// // [309]
                                                                 // [309]
        //: (0000),(0064),(0096),(0112),(0120),(0124),(0126) :// // [309]
            (0x00),(0x40),(0x60),(0x70),(0x78),(0x7C),(0x7E)     // [309]
        ,   (0x00),(0x40),(0x60),(0x70),(0x78),(0x7C),(0x7E)     // [309]
        ,   (0x00),(0x40),(0x60),(0x70),(0x78),(0x7C),(0x7E)     // [309]
                                                                 // [309]
        ]);; //:::::::::::::::::::::::::::::::::::::::::[309]:// // [309]
                                                                 // [309]
        //:#_ERROR_CHECK_TABLES_#:[309]:---------------------:// // [309]
        {                                                        // [309]
            let i21 =( 0 /** GenericIndex :[0-(21-1)] **/);      // [309]
            let te7 =( 0 /** Tile Size Exponent ** ** **/);      // [309]
                                                                 // [309]
            let exp_lat , exp_dia ;                              // [309]
            let got_lat , got_dia ;                              // [309]
                                                                 // [309]
            for( i21 = 0 ; i21 <=( 21-1 ) ; i21 ++ ){            // [309]
                                                                 // [309]
                te7 = d_i21_te7[ i21 ];                          // [309]
                                                                 // [309]
                //:----:@BITABLE_TE7_LAT@:---------------://     // [309]
                //:              VVV                     ://     // [309]
                exp_lat =( 64 >> te7 );;;;;;;;;;;;;;;;;;;;;;     // [309]
                exp_dia =(0x7E &( 0x7E << ( 6-te7 )))>>>0;;;     // [309]
                //:                           ^^^        ://     // [309]
                //:-----------------:@BITABLE_TE7_DIA@:--://     // [309]
                                                                 // [309]
                got_lat = d_i21_lat[ i21 ];                      // [309]
                got_dia = d_i21_dia[ i21 ];                      // [309]
                                                                 // [309]
                if( exp_lat != got_lat ){                        // [309]
                                                                 // [309]
                    LOG("[exp_lat]:" , exp_lat );                // [309]
                    LOG("[got_lat]:" , got_lat );                // [309]
                    ERR("[LAT_Y2K:RIKEST_RICK]");                // [309]
                };;                                              // [309]
                if( exp_dia != got_dia ){                        // [309]
                                                                 // [309]
                    LOG("[___:i21]:" ,     i21 );                // [309]
                    LOG("[___:te7]:" ,     te7 );                // [309]
                    LOG("[exp_dia]:" , exp_dia );                // [309]
                    LOG("[got_dia]:" , got_dia );                // [309]
                    ERR("[DIA_Y2K:SUNWILLFADE]");                // [309]
                };;                                              // [309]
            };;                                                  // [309]
        }                                                        // [309]
        //:---------------------:#_ERROR_CHECK_TABLES_#:[309]:// // [---]
                                                                 // [---]
    //:===============:#_FRONT_TO_BACK_RENDERING_LOOP_#:[304]:// // [304]
    //:#_SHADER_7_GRAPHICS_LOOKUP_#:[315]:===================:// // [315]
                                                                 // [315]
        const d_i21_mmi     = "[NOT_ENOUGH_FUCKING_INFO]" ;      // [315]
        const d_i21_v16_mmi = "[TOO_FUCKING_COMPLEX]" ;;;;;      // [315]
        const d_v16_i21_mmi = "[TOO_FUCKING_COMPLEX]" ;;;;;      // [315]
        const d_v16_la3_mmi = "[WRONG_FUCKING_ORDER]" ;;;;;      // [315]
        const d_la3_v16_mmi = "[CLOSE_USE:d_v48_mmi]" ;;;;;      // [315]
                                                                 // [315]
        const d_v48_mmi = new Uint8Array([                       // [315]
                                                                 // [315]
            12,12,12,12,12,12,12,12,12,12,12,12                  // [315]
        ,   13,13,13,13,13,13,13,13,13,13,13,13                  // [315]
        ,   14,14,14,14,14,14,14,14,14,14,14,14                  // [315]
        ,   15,15,15,15,15,15,15,15,15,15,15,15                  // [315]
        ]);;                                                     // [315]
        ASS( 48 === d_v48_mmi.length , "[V48_MMI_LEN]" );        // [315]
        //: Explain Your Majic Numbers ::::::::::::::::::://     // [315]
        ASS( 12 === c_mmi_artgola_000_011 , "[MAJIC_12]" );      // [315]
        ASS( 13 === c_mmi_artgola_012_023 , "[MAJIC_13]" );      // [315]
        ASS( 14 === c_mmi_artgola_024_035 , "[MAJIC_14]" );      // [315]
        ASS( 15 === c_mmi_artgola_036_047 , "[MAJIC_15]" );      // [315]
        //:#_V48_MMI_LUT_ERROR_CHECK_#:[315]:============://     // [315]
        {                                                        // [315]
            let la3 =( 0 );                                      // [315]
            let v16 =( 0 );                                      // [315]
            let v48 =( 0 );                                      // [315]
            let mmi =( 0 );                                      // [315]
                                                                 // [315]
            let arr_mmi =[12,13,14,15];                          // [315]
            let run_mmi     =( 0-1 ); //:Runline_MMI://          // [315]
            let ptr_mmi     =( 0-1 ); //:Pointer_MMI://          // [315]
            let tot_048     =( 0-1 ); //:Total:48   ://          // [315]
                                                                 // [315]
            for( la3 = 0 ; la3 <=( 3-1) ; la3 ++ ){              // [315]
            for( v16 = 0 ; v16 <=(16-1) ; v16 ++ ){              // [315]
                                                                 // [315]
                tot_048 ++;                                      // [315]
                v48 =( (la3*16)+(v16*1) );                       // [315]
                mmi = d_v48_mmi[ v48 ];                          // [315]
                                                                 // [315]
                if( tot_048 != v48 ){                            // [315]
                                                                 // [315]
                    ERR("[V48_OUT_OF_SYNC]");                    // [315]
                };;                                              // [315]
                if( mmi != run_mmi ){ ptr_mmi++ ; };             // [315]
                run_mmi = arr_mmi[ ptr_mmi ];                    // [315]
                if( mmi != run_mmi ){                            // [315]
                                                                 // [315]
                    ERR("[MMI_NOT_CLUSTERED_PROPERLY]");         // [315]
                };;                                              // [315]
            };;};; //:NEXT[ la3 , v16 ]::::::::::::::::::://     // [315]
        };;                                                      // [315]
        //:============:#_V48_MMI_LUT_ERROR_CHECK_#:[315]://     // [315]
                                                                 // [315]
    //:===================:#_SHADER_7_GRAPHICS_LOOKUP_#:[315]:// // [315]
    //:#_MASTER_MEMORY_CELL_LOOKUP_TABLES_#:[294]:===========:// // [---]
                                                                 // [294]
        //:#_MMX_TO_MMI_#:[294]:-------------------------://     // [294]
                                                                 // [294]
            const d_mmx_mmi = "[NOT_FUCKING_POSSIBLE]" ;         // [294]
                                                                 // [294]
        //:-------------------------:#_MMX_TO_MMI_#:[294]://     // [294]
        //:#_MMY_TO_MMI_#:[249]:-------------------------://     // [294]
                                                                 // [294]
            const d_mmy_mmi = "[NOT_FUCKING_POSSIBLE]" ;         // [294]
                                                                 // [294]
        //:-------------------------:#_MMY_TO_MMI_#:[249]://     // [294]
        //:#_MMI_TO_MMX_#:[249]:-------------------------://     // [294]
                                                                 // [294]
            const d_mmi_mmx = new Uint8Array([                   // [294]
                                                                 // [294]
                0 , 1 , 2 , 3                                    // [294]
            ,   0 , 1 , 2 , 3                                    // [294]
            ,   0 , 1 , 2 , 3                                    // [294]
            ,   0 , 1 , 2 , 3                                    // [294]
            ]);;                                                 // [294]
        //:-------------------------:#_MMI_TO_MMX_#:[249]://     // [294]
        //:#_MMI_TO_MMY_#:[249]:-------------------------://     // [294]
                                                                 // [294]
            const d_mmi_mmy = new Uint8Array([                   // [294]
                                                                 // [294]
                0 , 0 , 0 , 0                                    // [294]
            ,   1 , 1 , 1 , 1                                    // [294]
            ,   2 , 2 , 2 , 2                                    // [294]
            ,   3 , 3 , 3 , 3                                    // [294]
            ]);;                                                 // [294]
        //:-------------------------:#_MMI_TO_MMY_#:[249]://     // [294]
                                                                 // [294]
    //:===========:#_MASTER_MEMORY_CELL_LOOKUP_TABLES_#:[294]:// // [294]
    //:#_TOUCHING_TO_AGOLASET_CELL_XY_#:[286]:---------------:// // [---]
                                                                 // [286]
        const d_to4_a4x = new Uint8Array([   //:[to4_a4x]://     // [286]
                                             //:@to4_a4x@://     // [286]
            c_dtm_x  //: BIN[ 0000 ]DEC[ 00 ]SYM[ DTM ]::://     // [286]
        ,   c_v_t_x  //: BIN[ 0001 ]DEC[ 01 ]SYM[ V_T ]::://     // [286]
        ,   c_v_b_x  //: BIN[ 0010 ]DEC[ 02 ]SYM[ V_B ]::://     // [286]
        ,   c_v_m_x  //: BIN[ 0011 ]DEC[ 03 ]SYM[ V_M ]::://     // [286]
        ,   c_h_l_x  //: BIN[ 0100 ]DEC[ 04 ]SYM[ H_L ]::://     // [286]
        ,   c_ntl_x  //: BIN[ 0101 ]DEC[ 05 ]SYM[ NTL ]::://     // [286]
        ,   c_nbl_x  //: BIN[ 0110 ]DEC[ 06 ]SYM[ NBL ]::://     // [286]
        ,   c_n_l_x  //: BIN[ 0111 ]DEC[ 07 ]SYM[ N_L ]::://     // [286]
        ,   c_h_r_x  //: BIN[ 1000 ]DEC[ 08 ]SYM[ H_R ]::://     // [286]
        ,   c_ntr_x  //: BIN[ 1001 ]DEC[ 09 ]SYM[ NTR ]::://     // [286]
        ,   c_nbr_x  //: BIN[ 1010 ]DEC[ 10 ]SYM[ NBR ]::://     // [286]
        ,   c_n_r_x  //: BIN[ 1011 ]DEC[ 11 ]SYM[ N_R ]::://     // [286]
        ,   c_h_c_x  //: BIN[ 1100 ]DEC[ 12 ]SYM[ H_C ]::://     // [286]
        ,   c_n_t_x  //: BIN[ 1101 ]DEC[ 13 ]SYM[ N_T ]::://     // [286]
        ,   c_n_b_x  //: BIN[ 1110 ]DEC[ 14 ]SYM[ N_B ]::://     // [286]
        ,   c_noa_x  //: BIN[ 1111 ]DEC[ 15 ]SYM[ NOA ]::://     // [286]
        ]);;                                                     // [286]
        //:----------------------------------------------://     // [286]
        //: +-----------------------------+ 0000 : DTM   ://     // [286]
        //: | +-----+-----+-----+ +-----+ | 0001 : V_T   ://     // [286]
        //: | | NTL | N_T | NTR | | V_T | | 0010 : V_B   ://     // [286]
        //: | | 0101| 1101| 1001| | 0001| | 0011 : V_M   ://     // [286]
        //: | +-----+-----+-----+ +-----+ | 0100 : H_L   ://     // [286]
        //: | | N_L | NOA | N_R | | V_M | | 0101 : NTL   ://     // [286]
        //: | | 0111| 1111| 1011| | 0011| | 0110 : NBL   ://     // [286]
        //: | +-----+-----+-----+ +-----+ | 0111 : N_L   ://     // [286]
        //: | | NBL | N_B | NBR | | V_B | | 1000 : H_R   ://     // [286]
        //: | | 0110| 1110| 1010| | 0010| | 1001 : NTR   ://     // [286]
        //: | +-----+-----+-----+ +-----+ | 1010 : NBR   ://     // [286]
        //: | +-----+-----+-----+ +-----+ | 1011 : N_R   ://     // [286]
        //: | | H_L | H_C | H_R | | DTM | | 1100 : H_C   ://     // [286]
        //: | | 0100| 1100| 1000| | 0000| | 1101 : N_T   ://     // [286]
        //: | +-----+-----+-----+ +-----+ | 1110 : N_B   ://     // [286]
        //: +-----------------------------+ 1111 : NOA   ://     // [286]
        //:----------------------------------------------://     // [286]
                                                                 // [286]
        const d_to4_a4y = new Uint8Array([   //:[to4_a4y]://     // [286]
                                             //:@to4_a4y@://     // [286]
            c_dtm_y  //: BIN[ 0000 ]DEC[ 00 ]SYM[ DTM ]::://     // [286]
        ,   c_v_t_y  //: BIN[ 0001 ]DEC[ 01 ]SYM[ V_T ]::://     // [286]
        ,   c_v_b_y  //: BIN[ 0010 ]DEC[ 02 ]SYM[ V_B ]::://     // [286]
        ,   c_v_m_y  //: BIN[ 0011 ]DEC[ 03 ]SYM[ V_M ]::://     // [286]
        ,   c_h_l_y  //: BIN[ 0100 ]DEC[ 04 ]SYM[ H_L ]::://     // [286]
        ,   c_ntl_y  //: BIN[ 0101 ]DEC[ 05 ]SYM[ NTL ]::://     // [286]
        ,   c_nbl_y  //: BIN[ 0110 ]DEC[ 06 ]SYM[ NBL ]::://     // [286]
        ,   c_n_l_y  //: BIN[ 0111 ]DEC[ 07 ]SYM[ N_L ]::://     // [286]
        ,   c_h_r_y  //: BIN[ 1000 ]DEC[ 08 ]SYM[ H_R ]::://     // [286]
        ,   c_ntr_y  //: BIN[ 1001 ]DEC[ 09 ]SYM[ NTR ]::://     // [286]
        ,   c_nbr_y  //: BIN[ 1010 ]DEC[ 10 ]SYM[ NBR ]::://     // [286]
        ,   c_n_r_y  //: BIN[ 1011 ]DEC[ 11 ]SYM[ N_R ]::://     // [286]
        ,   c_h_c_y  //: BIN[ 1100 ]DEC[ 12 ]SYM[ H_C ]::://     // [286]
        ,   c_n_t_y  //: BIN[ 1101 ]DEC[ 13 ]SYM[ N_T ]::://     // [286]
        ,   c_n_b_y  //: BIN[ 1110 ]DEC[ 14 ]SYM[ N_B ]::://     // [286]
        ,   c_noa_y  //: BIN[ 1111 ]DEC[ 15 ]SYM[ NOA ]::://     // [286]
        ]);;                                                     // [286]
    //:---------------:#_TOUCHING_TO_AGOLASET_CELL_XY_#:[286]:// // [286]
    //:#_THE_RING_OF_RENDERING_POWER_#:[276]:================:// // [276]
    //:#_THE_RING_OF_POWER_#:[276]:==========================:// // [276]
    //:#_RING_OF_POWER_#[276]:===============================:// // [276]
    //:#_34_RINGS_#:[276]:===================================:// // [276]
                                                                 // [276]
        //:TAG[ ONE_RING | THE_ONE_RING | THE_RING ]::::::::::// // [276]
                                                                 // [---]
        //:#_DIVIDE_TILES_INTO_34_SECTIONS_#:[277]:----------:// // [277]
                                                                 // [277]
            const d_te7_d34 = new Uint32Array([                  // [277]
                      c_d34_du0                                  // [277]
            ,         c_d34_du1                                  // [277]
            ,         c_d34_du2                                  // [277]
            ,         c_d34_du3                                  // [277]
            ,         c_d34_du4                                  // [277]
            ,         c_d34_du5                                  // [277]
            ,         c_d34_du6                                  // [277]
            ]);;                                                 // [277]
        //:----------:#_DIVIDE_TILES_INTO_34_SECTIONS_#:[277]:// // [277]
                                                                 // [---]
        //: @or5@ : Outer Ring (5 of them) NOT_USED   ://        // [276]
        //: @ir5@ : Inner Ring (5 of them) NOT_USED   ://        // [276]
        //: @oir_inn@ :One Indexed Ring , input       ://        // [276]
        //: @oir_min@ :One Indexed Rings, MINIMUM SET ://        // [276]
        //: @oir_max@ :One Indexed Rings, MAXIMUM SET ://        // [276]
                                                                 // [276]
        const d_r34_or5 = "[FIX:d.r34_r10(No_Outer_Inner)]";     // [276]
        const d_r34_ir5 = "[FIX:d.r34_r10(No_Outer_Inner)]";     // [276]
                                                                 // [276]
        const d_r17_r05 = "[#_NOT_R17_R05_#:bu3_r34_r10]";;;     // [276]
        const d_r34_r10 = "[FIX:d_r34_bu3_r10]" ;;;;;;;;;;;;     // [276]
        const d_bu3_r34_r10 = "[FIX:d_r34_bu3_r10]" ;;;;;;;;     // [276]
                                                                 // [276]
        //:#_RING_MAPPING_ARRAY_#:===========================:// // [276]
        const d_r34_bu3_r10 = new Uint8Array([                   // [276]
                                                                 // [276]
            //:SEE_DIAGRAM[ #_RING_MAPPED_TILES_# ]              // [276]
                                                                 // [276]
            //:#__OIR_MIN__#:--------------------------------:// // [276]
                                                                 // [276]
            //: MIN/LEFT/TOP SIDE OF RING ://                    // [276]
                                                                 // [276]
            //:@BULGOUT@   @BULGNOT@  @BULGINN@:::::::::::::::// // [276]
                c_ri0   ,   c_ri0  ,   c_ri0                     // [276]
            ,   c_ri0   ,   c_ri0  ,   c_ri0                     // [276]
            ,   c_ri1   ,   c_ri0  ,   c_ri0                     // [276]
            ,   c_ri1   ,   c_ri1  ,   c_ri0                     // [276]
            ,   c_ri2   ,   c_ri1  ,   c_ri0                     // [276]
            ,   c_ri2   ,   c_ri1  ,   c_ri0                     // [276]
            ,   c_ri2   ,   c_ri2  ,   c_ri1                     // [276]
            ,   c_ri3   ,   c_ri2  ,   c_ri1                     // [276]
            ,   c_ri3   ,   c_ri2  ,   c_ri1                     // [276]
            ,   c_ri3   ,   c_ri3  ,   c_ri1                     // [276]
            ,   c_ri3   ,   c_ri3  ,   c_ri1                     // [276]
            ,   c_ri4   ,   c_ri3  ,   c_ri2                     // [276]
            ,   c_ri4   ,   c_ri4  ,   c_ri2                     // [276]
            ,   c_ri4   ,   c_ri4  ,   c_ri2                     // [276]
            ,   c_ri4   ,   c_ri4  ,   c_ri3                     // [276]
            ,   c_ri4   ,   c_ri4  ,   c_ri3                     // [276]
            ,   c_ri4   ,   c_ri4  ,   c_ri4                     // [276]
                                                                 // [276]
            //:--------------------------------:#__OIR_MIN__#:// // [276]
            //:#__OIR_MAX__#:--------------------------------:// // [276]
                                                                 // [276]
            //: MAX/RIGHT/BOT SIDE OF RING ://                   // [276]
                                                                 // [276]
            //:@BULGOUT@   @BULGNOT@  @BULGINN@:::::::::::::::// // [276]
            ,   c_ri5   ,   c_ri5  ,   c_ri5                     // [276]
            ,   c_ri5   ,   c_ri5  ,   c_ri6                     // [276]
            ,   c_ri5   ,   c_ri5  ,   c_ri6                     // [276]
            ,   c_ri5   ,   c_ri5  ,   c_ri7                     // [276]
            ,   c_ri5   ,   c_ri5  ,   c_ri7                     // [276]
            ,   c_ri5   ,   c_ri6  ,   c_ri7                     // [276]
            ,   c_ri6   ,   c_ri6  ,   c_ri8                     // [276]
            ,   c_ri6   ,   c_ri6  ,   c_ri8                     // [276]
            ,   c_ri6   ,   c_ri7  ,   c_ri8                     // [276]
            ,   c_ri6   ,   c_ri7  ,   c_ri8                     // [276]
            ,   c_ri7   ,   c_ri7  ,   c_ri8                     // [276]
            ,   c_ri7   ,   c_ri8  ,   c_ri9                     // [276]
            ,   c_ri7   ,   c_ri8  ,   c_ri9                     // [276]
            ,   c_ri8   ,   c_ri8  ,   c_ri9                     // [276]
            ,   c_ri8   ,   c_ri9  ,   c_ri9                     // [276]
            ,   c_ri9   ,   c_ri9  ,   c_ri9                     // [276]
            ,   c_ri9   ,   c_ri9  ,   c_ri9                     // [276]
                                                                 // [276]
            //:--------------------------------:#__OIR_MAX__#:// // [276]
        ]);;                                                     // [276]
        ASS( 34*3 === d_r34_bu3_r10.length,"[R34BU3R10:A]");     // [276]
        ASS( 34*3 === 17*2*3              ,"[R34BU3R10:B]");     // [276]
        ASS( 34*3 === 102                 ,"[R34BU3R10:C]");     // [276]
        //:=============================:_RING_MAPPING_ARRAY_:// // [276]
                                                                 // [276]
    //:===================================:#_34_RINGS_#:[276]:// // [276]
    //:===============================:#_RING_OF_POWER_#[276]:// // [276]
    //:==========================:#_THE_RING_OF_POWER_#:[276]:// // [276]
    //:================:#_THE_RING_OF_RENDERING_POWER_#:[276]:// // [276]

                                                                 // [---]
    //:#_DISCRETE_TILE_5THS_#:[271]:=========================:// // [271]
                                                                 // [271]
        //:#_YOU_DONE_FUCKED_UP_GOOD_:[273]:=================://
        //# WHAT DOES MARCELLUS WALLUS LOOK LIKE ?           #// // [273][---]
        //# DOES HE LOOK LIKE A BITCH ?                      #// // [273][---]
        //# NO ?                                             #// // [273][---]
        //# THEN WHY YOU TRYING TO FUCK HIM LIKE A BITCH?    #// // [273][---]
        //# ( This was the wrong lookup table by the way )   #// // [273][---]
        //# ( -KanjiCoder )                                  #// // [273][---]
        //- const d_te7_d20 = new Uint32Array([              -// // [273][271]
        //-           c_d20_du0                              -// // [273][271]
        //- ,         c_d20_du1                              -// // [273][271]
        //- ,         c_d20_du2                              -// // [273][271]
        //- ,         c_d20_du3                              -// // [273][271]
        //- ,         c_d20_du4                              -// // [273][271]
        //- ,         c_d20_du5                              -// // [273][271]
        //- ,         c_d20_du6                              -// // [273][271]
        //- ]);;                                             -// // [273][271]
        //-                                                  -// // [273][271]
        //- ASS( 7 === d_te7_d20.length , "[TE7_DU0_LEN]" ); -// // [273][271]
        //:=================:#_YOU_DONE_FUCKED_UP_GOOD_:[273]:// // [273][---]
        //:#_RESTORE_HONOR_TO_KANJI_NAME_#:[273]:------------:// // [273][---]
                                                                 // [273][---]
            const d_te7_d10 = new Uint32Array([                  // [273][---]
                      c_d10_du0                                  // [273][---]
            ,         c_d10_du1                                  // [273][---]
            ,         c_d10_du2                                  // [273][---]
            ,         c_d10_du3                                  // [273][---]
            ,         c_d10_du4                                  // [273][---]
            ,         c_d10_du5                                  // [273][---]
            ,         c_d10_du6                                  // [273][---]
            ]);;                                                 // [273][---]
        //:------------:#_RESTORE_HONOR_TO_KANJI_NAME_#:[273]:// // [273][---]
                                                                 // [--------]
    //:=========================:#_DISCRETE_TILE_5THS_#:[271]:// // [271]
    //:#_FOURSET_REMIX_TABLES_#:[269]:=======================:// // [---]
    {                                                            // [269]
        let __dont_you_fucking_touch_my_battle_ship__ = "!!"     // [269]
                                                                 // [269]
        ,   A_1 , A_2 , A_3 , A_4  //: 4X4_Grid : X (S)  ://     // [269]
        ,   B_1 , B_2 , B_3 , B_4  //: 4X4_Grid : X (S)  ://     // [269]
        ,   C_1 , C_2 , C_3 , C_4  //: 4X4_Grid : X (S)  ://     // [269]
        ,   D_1 , D_2 , D_3 , D_4  //: 4X4_Grid : X (S)  ://     // [269]
                                                                 // [269]
        ,   E_1 , F_1 , G_1 , H_1  //: 4X4_Grid : Y (S)  ://     // [269]
        ,   E_2 , F_2 , G_2 , H_2  //: 4X4_Grid : Y (S)  ://     // [269]
        ,   E_3 , F_3 , G_3 , H_3  //: 4X4_Grid : Y (S)  ://     // [269]
        ,   E_4 , F_4 , G_4 , H_4  //: 4X4_Grid : Y (S)  ://     // [269]
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [269]
                                                                 // [-------------]
        A_1=c_f4x_000;A_2=c_f4x_001;A_3=c_f4x_002;A_4=c_f4x_003; // [275][REF][269]
        B_1=c_f4x_004;B_2=c_f4x_005;B_3=c_f4x_006;B_4=c_f4x_007; // [275][REF][269]
        C_1=c_f4x_008;C_2=c_f4x_009;C_3=c_f4x_010;C_4=c_f4x_011; // [275][REF][269]
        D_1=c_f4x_012;D_2=c_f4x_013;D_3=c_f4x_014;D_4=c_f4x_015; // [275][REF][269]
                                                                 // [-------------]
        E_1=c_f4y_000;F_1=c_f4y_001;G_1=c_f4y_002;H_1=c_f4y_003; // [275][REF][269]
        E_2=c_f4y_004;F_2=c_f4y_005;G_2=c_f4y_006;H_2=c_f4y_007; // [275][REF][269]
        E_3=c_f4y_008;F_3=c_f4y_009;G_3=c_f4y_010;H_3=c_f4y_011; // [275][REF][269]
        E_4=c_f4y_012;F_4=c_f4y_013;G_4=c_f4y_014;H_4=c_f4y_015; // [275][REF][269]
                                                                 // [-------------]
        /** ************************************************ *** // [269]
        +--===--+--===--+--===--+--===--+      +---+       @I_D@ // [269]
        |       |       |       |       |      |Y_0|             // [269]
        |  A_1  |  A_2  |  A_3  |  A_4  |  +---+---+---+         // [269]
        |       |       |       |       |  |X_0|   |X_1|         // [269]
        +--===--+--===--+--===--+--===--+  +---+---+---+         // [269]
        |       |       |       |       |      |Y_1|             // [269]
        |  B_1  |  B_2  |  B_3  |  B_4  |      +---+             // [269]
        |       |       |       |       |  INVERTED_Y_AXIS!!     // [269]
        +--===--+--===--+--===--+--===--+  +---+---+---+---+     // [269]
        |       |       |       |       |  |000|001|002|003|     // [269]
        |  C_1  |  C_2  |  C_3  |  C_4  |  +---+---+---+---+     // [269]
        |       |       |       |       |  |004|005|006|007|     // [269]
        +--===--+--===--+--===--+--===--+  +---+---+---+---+     // [269]
        |       |       |       |       |  |008|009|010|011|     // [269]
        |  D_1  |  D_2  |  D_3  |  D_4  |  +---+---+---+---+     // [269]
        |       |       |       |       |  |012|013|014|015|     // [269]
        +--===--+--===--+--===--+--===--+  +---+---+---+---+     // [269]
        *** ************************************************ **/ // [269]
        var d_to4_f4x = new Uint8Array([                         // [283][REF][275][REF][269]
                                  //: O[ x_0  x_1  y_0  y_1 ]:// // [269]
            A_1 , A_4 , D_1 , D_4 //: BIN[ 0____0____0____0 ]:// // [269]
        ,   A_1 , A_4 , B_1 , B_4 //: BIN[ 0____0____0____1 ]:// // [274][BUG][269]
        ,   C_1 , C_4 , D_1 , D_4 //: BIN[ 0____0____1____0 ]:// // [274][BUG][269]
        ,   B_1 , B_4 , C_1 , C_4 //: BIN[ 0____0____1____1 ]:// // [269]
        ,   A_1 , A_2 , D_1 , D_2 //: BIN[ 0____1____0____0 ]:// // [269]
        ,   A_1 , A_2 , B_1 , B_2 //: BIN[ 0____1____0____1 ]:// // [269]
        ,   C_1 , C_2 , D_1 , D_2 //: BIN[ 0____1____1____0 ]:// // [269]
        ,   B_1 , B_2 , C_1 , C_2 //: BIN[ 0____1____1____1 ]:// // [269]  
        ,   A_3 , A_4 , D_3 , D_4 //: BIN[ 1____0____0____0 ]:// // [269]
        ,   A_3 , A_4 , B_3 , B_4 //: BIN[ 1____0____0____1 ]:// // [269]
        ,   C_3 , C_4 , D_3 , D_4 //: BIN[ 1____0____1____0 ]:// // [269]
        ,   B_3 , B_4 , C_3 , C_4 //: BIN[ 1____0____1____1 ]:// // [269]
        ,   A_2 , A_3 , D_2 , D_3 //: BIN[ 1____1____0____0 ]:// // [269]
        ,   A_2 , A_3 , B_2 , B_3 //: BIN[ 1____1____0____1 ]:// // [269]
        ,   C_2 , C_3 , D_2 , D_3 //: BIN[ 1____1____1____0 ]:// // [269]
        ,   B_2 , B_3 , C_2 , C_3 //: BIN[ 1____1____1____1 ]:// // [269]
        ]);;                                                     // [269]
        /** ************************************************ *** // [269]
        +--===--+--===--+--===--+--===--+      +---+       @I_D@ // [269]
        |       |       |       |       |      |Y_0|             // [269]
        |  E_1  |  F_1  |  G_1  |  H_1  |  +---+---+---+         // [269]
        |       |       |       |       |  |X_0|   |X_1|         // [269]
        +--===--+--===--+--===--+--===--+  +---+---+---+         // [269]
        |       |       |       |       |      |Y_1|             // [269]
        |  E_2  |  F_2  |  G_2  |  H_2  |      +---+             // [269]
        |       |       |       |       |  INVERTED_Y_AXIS!!     // [269]
        +--===--+--===--+--===--+--===--+  +---+---+---+---+     // [269]
        |       |       |       |       |  |000|001|002|003|     // [269]
        |  E_3  |  F_3  |  G_3  |  H_3  |  +---+---+---+---+     // [269]
        |       |       |       |       |  |004|005|006|007|     // [269]
        +--===--+--===--+--===--+--===--+  +---+---+---+---+     // [269]
        |       |       |       |       |  |008|009|010|011|     // [269]
        |  E_4  |  F_4  |  G_4  |  H_4  |  +---+---+---+---+     // [269]
        |       |       |       |       |  |012|013|014|015|     // [269]
        +--===--+--===--+--===--+--===--+  +---+---+---+---+     // [269]
        *** ************************************************ **/ // [269]
        var d_to4_f4y = new Uint8Array([                         // [283][REF][275][REF][269]
                                  //: O[ x_0  x_1  y_0  y_1 ]:// // [269]
            E_1 , H_1 , E_4 , H_4 //: BIN[ 0____0____0____0 ]:// // [269]
        ,   E_1 , H_1 , E_2 , H_2 //: BIN[ 0____0____0____1 ]:// // [269]
        ,   E_3 , H_3 , E_4 , H_4 //: BIN[ 0____0____1____0 ]:// // [269]
        ,   E_2 , H_2 , E_3 , H_3 //: BIN[ 0____0____1____1 ]:// // [269]
        ,   E_1 , F_1 , E_4 , F_4 //: BIN[ 0____1____0____0 ]:// // [269]
        ,   E_1 , F_1 , E_2 , F_2 //: BIN[ 0____1____0____1 ]:// // [269]
        ,   E_3 , F_3 , E_4 , F_4 //: BIN[ 0____1____1____0 ]:// // [269]
        ,   E_2 , F_2 , E_3 , F_3 //: BIN[ 0____1____1____1 ]:// // [269]
        ,   G_1 , H_1 , G_4 , H_4 //: BIN[ 1____0____0____0 ]:// // [269]
        ,   G_1 , H_1 , G_2 , H_2 //: BIN[ 1____0____0____1 ]:// // [269]
        ,   G_3 , H_3 , G_4 , H_4 //: BIN[ 1____0____1____0 ]:// // [269]
        ,   G_2 , H_2 , G_3 , H_3 //: BIN[ 1____0____1____1 ]:// // [269]
        ,   F_1 , G_1 , F_4 , G_4 //: BIN[ 1____1____0____0 ]:// // [269]
        ,   F_1 , G_1 , F_2 , G_2 //: BIN[ 1____1____0____1 ]:// // [269]
        ,   F_3 , G_3 , F_4 , G_4 //: BIN[ 1____1____1____0 ]:// // [269]
        ,   F_2 , G_2 , F_3 , G_3 //: BIN[ 1____1____1____1 ]:// // [269]
        ]);;                                                     // [269]
    }                                                            // [269]
    //:=======================:#_FOURSET_REMIX_TABLES_#:[269]:// // [269]
                                                                 // [---]
    //:#_MASTER_TILE_COLOR_LIST_#:[266]:=====================:// // [266]
    //:#_STOLEN_HOTEL_13_COLORS_#:[266]:=====================:// // [266]
    //:#_TILE_COLOR_LOOKUPTABLE_#:[266]:=====================:// // [266]
                                                                 // [266]
    var d_la3_v16_c04_hex = new Uint32Array([                    // [267][BUG][266]
                                                                 // [---]
        //: TAG[ production_colors ]::::::::::::::::::::::::::// // [313]
                                                                 // [---]
        //: @la3@ : Layer[ 0 | 1 | 2 ](Geom:0,Bomb:1,Fada:2) :// // [266]
        //: @v16@ : Value[ 0 -(16-1) ](Value/Type Of Tile  ) :// // [266]
        //: @c04@ : Color Enumeration[ 0 | 1 | 2 | 3 ]       :// // [266]
                                                                 // [266]
    //:geom_hex_colors:--------------------------------------:// // [266]
    //: |  BODY  |   |  EDGE  |   | BODALT |   | EDGALT |    :// // [266]
        0x00000000 , 0x00000000 , 0x00000000 , 0x00000000 //00// // [266]
                                                                 // [266]
    ,   c_vacglow0 , c_vacglow1 , c_vacglow2 , c_vacglow3 //01// // [266]
    ,   c_ladglow0 , c_ladglow1 , c_ladglow2 , c_ladglow3 //02// // [266]
                                                                 // [266]
    ,   c_vacsoil0 , c_vacsoil1 , c_vacsoil2 , c_vacsoil3 //03// // [266]
    ,   c_ladsoil0 , c_ladsoil1 , c_ladsoil2 , c_ladsoil3 //04// // [266]
                                                                 // [266]
    ,   c_vacpurp0 , c_vacpurp1 , c_vacpurp2 , c_vacpurp3 //05// // [266]
    ,   c_parpurp0 , c_parpurp1 , c_parpurp2 , c_parpurp3 //06// // [266]
    ,   c_ladpurp0 , c_ladpurp1 , c_ladpurp2 , c_ladpurp3 //07// // [266]
                                                                 // [266]
    ,   c_falmarb0 , c_falmarb1 , c_falmarb2 , c_falmarb3 //08// // [266]
    ,   c_falbeam0 , c_falbeam1 , c_falbeam2 , c_falbeam3 //09// // [266]
    ,   c_faliron0 , c_faliron1 , c_faliron2 , c_faliron3 //10// // [266]
                                                                 // [266]
    ,   c_godvent0 , c_godvent1 , c_godvent2 , c_godvent3 //11// // [266]
    ,   c_godiron0 , c_godiron1 , c_godiron2 , c_godiron3 //12// // [266]
                                                                 // [266]
    ,   c_comsoli0 , c_comsoli1 , c_comsoli2 , c_comsoli3 //13// // [266]
    ,   c_comliqu0 , c_comliqu1 , c_comliqu2 , c_comliqu3 //14// // [266]
    ,   c_comvapo0 , c_comvapo1 , c_comvapo2 , c_comvapo3 //15// // [266]
                                                                 // [266]
    //:--------------------------------------:geom_hex_colors:// // [266]
    //:bomb_hex_colors:--------------------------------------:// // [266]
    //: |  BODY  |   |  EDGE  |   | BODALT |   | EDGALT |    :// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //00// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //01// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //02// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //03// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //04// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //05// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //06// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //07// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //08// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //09// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //10// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //11// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //12// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //13// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //14// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //15// // [266]
                                                                 // [266]
    //:--------------------------------------:bomb_hex_colors:// // [266]
    //:fada_hex_colors:--------------------------------------:// // [266]
    //: |  BODY  |   |  EDGE  |   | BODALT |   | EDGALT |    :// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //00// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //01// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //02// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //03// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //04// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //05// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //06// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //07// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //08// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //09// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //10// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //11// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //12// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //13// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //14// // [266]
    ,   c________0 , c________1 , c________2 , c________3 //15// // [266]
                                                                 // [266]
    //:--------------------------------------:fada_hex_colors:// // [266]
    ]);;                                                         // [266]
    ASS( 192 === d_la3_v16_c04_hex.length,"[la3_v16_c04_hex]" ); // [266]
    ASS( 192 ===(    3 *16 * 4 )         ,"[sanitycheck2022]" ); // [266]
    //:=====================:#_TILE_COLOR_LOOKUPTABLE_#:[266]:// // [266]
    //:=====================:#_STOLEN_HOTEL_13_COLORS_#:[266]:// // [266]
    //:=====================:#_MASTER_TILE_COLOR_LIST_#:[266]:// // [266]
                                                                 // [---]
    //:#_EIGHT_GEOMETRIC_ELEMENT_TYPES_#:[253]:----------://     // [253]
                                                                 // [253]
    var d_gt8_dus = new Uint8Array([    ////////////////////     // [253]
                                                                 // [253]
        c_dus_000   //: ( c_gt0 )==>( c_dus_000 )   :::::://     // [253]
    ,   c_dus_001   //: ( c_gt1 )==>( c_dus_001 )   :::::://     // [253]
    ,   c_dus_002   //: ( c_gt2 )==>( c_dus_002 )   :::::://     // [253]
    ,   c_dus_003   //: ( c_gt3 )==>( c_dus_003 )   :::::://     // [253]
    ,   c_dus_004   //: ( c_gt4 )==>( c_dus_004 )   :::::://     // [253]
    ,   c_dus_005   //: ( c_gt5 )==>( c_dus_005 )   :::::://     // [253]
    ,   c_dus_006   //: ( c_gt6 )==>( c_dus_006 )   :::::://     // [253]
    ,   c_dus_007   //: ( c_gt7 )==>( c_dus_007 )   :::::://     // [253]
                                                                 // [253]
    ]);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [253]
    ASS( 8 == d_gt8_dus.length , "[GT8_DUS]" );;;;;;;;;;;;;;     // [253]
                                                                 // [253]
    //:----------:#_EIGHT_GEOMETRIC_ELEMENT_TYPES_#:[253]://     // [253]
                                                                 // [---]
    //:#_EE_CELL_TO_MEMORY_CELL_#:[234]:-----------------://     // [234]
                                                //        //     // [234]
        const d_ee7_mmi = new Uint32Array([     //        //     // [234]
                                                //        //     // [234]
         /**c_mm0 , c_mm1 , c_mm2**/     c_mm3  //        //     // [234]
        ,/**c_mm4 , c_mm5 , c_mm6**/     c_mm7  //        //     // [234]
        ,/**c_mm8 , c_mm9 , c_mma**/     c_mmb  //        //     // [234]
        ,   c_mmc , c_mmd , c_mme  ,     c_mmf  //        //     // [234]
        ]);;                                    //        //     // [234]
    //:-----------------:#_EE_CELL_TO_MEMORY_CELL_#:[234]://     // [234]
    //:#_HOTEL_TO_MEMORY_CELL_#:[233]:-------------------://     // [233]
                                                                 // [233]
        const d_hi9_mmi = new Uint32Array([                      // [233]
                                                                 // [233]
            c_mm0 , c_mm1 , c_mm2  //| , c_mm3 |//               // [233]
        ,   c_mm4 , c_mm5 , c_mm6  //| , c_mm7 |//               // [233]
        ,   c_mm8 , c_mm9 , c_mma  //| , c_mmb |//               // [233]
        //| c_mmc , c_mmd , c_mme      , c_mmf |//               // [233]
        ]);;                                                     // [233]
    //:-------------------:#_HOTEL_TO_MEMORY_CELL_#:[233]://     // [233]
                                                                 // [---]
    //:#_TILE_DISCRETE_UNIT_INSET_#:[191]:---------------://     // [---]
    var d_la3_dui = new Uint32Array([                            // [191]
        c_dui_geo  //: @c_dui_geo@ : [D_U_I] - GEOM TILES://     // [191]
    ,   c_dui_bom  //: @c_dui_bom@ : [D_U_I] - BOMB TILES://     // [191]
    ,   c_dui_fad  //: @c_dui_fad@ : [D_U_I] - FADA TILES://     // [191]
    ]);;                                                         // [191]
    //:---------------:#_TILE_DISCRETE_UNIT_INSET_#:[191]://     // [---]
    //:#_DEBUG_TILE_COLORS:DAT_#:[194]:------------------://     // [---]
                                                                 // [194]
    const d_la3_hue     = "[FIX:d_la3_f32_hue]" ;                // [194]
    var   d_la3_f32_hue = new Float32Array([                     // [194]
                                                                 // [194]
          c_geo_r , c_geo_g , c_geo_b                            // [194]
    ,     c_bom_r , c_bom_g , c_bom_b                            // [194]
    ,     c_fad_r , c_fad_g , c_fad_b                            // [194]
    ]);;                                                         // [194]
    const d_la3_lum         = "[FIX:d_la3_te7_f32_lum]" ;        // [194]
    const d_la3_f32_lum     = "[FIX:d_la3_te7_f32_lum]" ;        // [194]
    const d_te7_la3_f32_lum = "[FIX:_FLIP_IT_AROUND_!]" ;        // [194]
    var   d_la3_te7_f32_lum = new Float32Array([                 // [194]
                                                                 // [194]
          c_gl0,c_gl1,c_gl2,c_gl3,c_gl4,c_gl5,c_gl6              // [194]
    ,     c_bl0,c_bl1,c_bl2,c_bl3,c_bl4,c_bl5,c_bl6              // [194]
    ,     c_fl0,c_fl1,c_fl2,c_fl3,c_fl4,c_fl5,c_fl6              // [194]
    ]);;                                                         // [194]
    //:------------------:#_DEBUG_TILE_COLORS:DAT_#:[194]://     // [---]
                                                                 // [---]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [163]
    //: These lookup tables do not exist now ,           ://     // [163]
    //: But we may fill them out in the future.          ://     // [163]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [163]
    const d_hi9_hdi = "[HDI_IS_NOT_MMI:TODO_MAYBE.....]" ;       // [163]
    //-   d_hi9_mmi = "[LOOKUP_NOT_NEEDED_AT_THIS_TIME]" ;   -// // [233][163]
    const d_g25_g5x = "[MAKE_TABLE_IF_NEEDED]" ;                 // [163]
    const d_g25_g5y = "[MAKE_TABLE_IF_NEEDED]" ;                 // [163]
                                                                 // [163]
    var d_hi9_mmx = new Uint32Array([   //:------------------:// // [163]
                                        //:                  :// // [163]
        0 , 1 , 2                       //: INPUT  :         :// // [163]
    ,   0 , 1 , 2  //:#DIAGRAM_TAG_MMX#   :                  :// // [163]
    ,   0 , 1 , 2                       //:    Hotel Index   :// // [163]
    ]);;                                //:                  :// // [163]
    var d_hi9_mmy = new Uint32Array([   //: OUTPUT :         :// // [163]
                                        //:                  :// // [163]
        0 , 0 , 0                       //:    Master Memory :// // [163]
    ,   1 , 1 , 1  //:#DIAGRAM_TAG_MMY#   :    Cell X & Y    :// // [163]
    ,   2 , 2 , 2                       //:                  :// // [163]
    ]);;                                //:------------------:// // [163]
    ASS( 9 == d_hi9_mmx.length , "[HI9_MMX.LEN]" );              // [163]
    ASS( 9 == d_hi9_mmy.length , "[HI9_MMY.LEN]" );              // [163]
                                                                 // [163]
        //:SEE[ _AIM_MASTER_MEMORY_LAYOUT_ ]:::::::::::::://     // [163]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [163]
        //: NOTE :                                       ://     // [163]
        //:     We multiply by (4*) not (3*) because     ://     // [163]
        //:     while[ hi9 ]exists in a 3_x_3 grid ,     ://     // [163]
        //:     master memory cells [mmx,mmy] exists     ://     // [163]
        //:     in a 4_x_4 grid.                         ://     // [163]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [163]
                                                                 // [163]
        ASS( c_mm0 === d_hi9_mmx[0]+(4*d_hi9_mmy[0]) ,"[M_0]" ); // [163]
        ASS( c_mm1 === d_hi9_mmx[1]+(4*d_hi9_mmy[1]) ,"[M_1]" ); // [163]
        ASS( c_mm2 === d_hi9_mmx[2]+(4*d_hi9_mmy[2]) ,"[M_2]" ); // [163]
                                                                 // [163]
        if(  c_mm4 !== d_hi9_mmx[3]+(4*d_hi9_mmy[3]) ){          // [163]
            let dex  = d_hi9_mmx[3]+(4*d_hi9_mmy[3]);            // [163]
                                                                 // [163]
            LOG( "[d_hi9_mmx[3]..]:" , d_hi9_mmx[3]      );      // [163]
            LOG( "[d_hi9_mmy[3]..]:" , d_hi9_mmy[3]      );      // [163]
            LOG( "[M_4:OUTPUT_DEX]:" , dex               );      // [163]
            ERR( "[M_4:DO_YOU_KNOW_WHAT_YOU_ARE_DOING?]" );      // [163]
        };;                                                      // [163]
        ASS( c_mm5 === d_hi9_mmx[4]+(4*d_hi9_mmy[4]) ,"[M_5]" ); // [163]
        ASS( c_mm6 === d_hi9_mmx[5]+(4*d_hi9_mmy[5]) ,"[M_6]" ); // [163]
                                                                 // [163]
        ASS( c_mm8 === d_hi9_mmx[6]+(4*d_hi9_mmy[6]) ,"[M_8]" ); // [163]
        ASS( c_mm9 === d_hi9_mmx[7]+(4*d_hi9_mmy[7]) ,"[M_9]" ); // [163]
        ASS( c_mma === d_hi9_mmx[8]+(4*d_hi9_mmy[8]) ,"[M_A]" ); // [163]
                                                                 // [163]
    {   //::::::::::::::::::::::::::::::::::::::::::::::::::::// // [163]
                                                                 // [163]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [163]
        //: SEE[ _LEVEL_PACK_GEOMETRY_LAYOUT_           ]://     // [163]
        //: SEE[ _LEVEL_PACK_DATA_LAYOUT_               ]://     // [163]
        //: DIRECTION[ GEOMETRY_LAYOUT ===> DATA_LAYOUT ]://     // [163]
        //: one way convert , isolated by axis.          ://     // [163]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [163]
                                                                 // [163]
        //:::::::::0x12345678:::::::::::::::::::::::::::::::::// // [163]
        let ___ =( 0x00 /**#_0X00_OLUT_COMPATIBILITY_#**/ );     // [307][163]
                                                                 // [163]
        //: AKA[d_g25_h_x] :<--  HOTEL13.JS Name             :// // [163]
        //: AKA[d_g25_rdx] :<--  [g25]===>RoomData(cell)X    :// // [163]
        var     d_g25_r4x = new Uint32Array([                    // [163]
                                                                 // [163]
                ( ___ ),( ___ ),(r4x_0),( ___ ),( ___ )          // [163]
            ,   ( ___ ),(r4x_1),(r4x_2),(r4x_3),( ___ )          // [163]
            ,   (r4x_0),(r4x_1),(r4x_2),(r4x_3),(r4x_0)          // [163]
            ,   ( ___ ),(r4x_1),(r4x_2),(r4x_3),( ___ )          // [163]
            ,   ( ___ ),( ___ ),(r4x_0),( ___ ),( ___ )          // [163]
        ]);;                                                     // [163]
        //: AKA[d_g25_h_y] :<--  HOTEL13.JS Name             :// // [163]
        //: AKA[d_g25_rdy] :<--  [g25]===>RoomData(cell)Y    :// // [163]
        var     d_g25_r4y = new Uint32Array([                    // [163]
                                                                 // [163]
                ( ___ ),( ___ ),(r4y_0),( ___ ),( ___ )          // [163]
            ,   ( ___ ),(r4y_0),(r4y_0),(r4y_0),( ___ )          // [163]
            ,   (r4y_1),(r4y_1),(r4y_1),(r4y_1),(r4y_2)          // [163]
            ,   ( ___ ),(r4y_2),(r4y_2),(r4y_2),( ___ )          // [163]
            ,   ( ___ ),( ___ ),(r4y_3),( ___ ),( ___ )          // [163]
        ]);;                                                     // [163]
                                                                 // [---]
    }   //::::::::::::::::::::::::::::::::::::::::::::::::::::// // [163]

                                                                 // [---]
    {                                                            // [164]
        let A_T = ASS_TUP_EQU   ;  //:SEE[ #R4Y_EQ_000# ]://     // [164]
        let r4x = d_g25_r4x     ;  //:SEE[ #R4Y_EQ_001# ]://     // [164]
        let r4y = d_g25_r4y     ;  //:SEE[ #R4Y_EQ_002# ]://     // [164]
                                ;  //:SEE[ #R4Y_EQ_003# ]://     // [164]
                                                                 // [164]
        A_T( [0,0] , [ r4x[ 2] , r4y[ 2] ] , "[01[0__0]]" );     // [164]
        A_T( [1,0] , [ r4x[ 6] , r4y[ 6] ] , "[02[1__0]]" );     // [164]
        A_T( [2,0] , [ r4x[ 7] , r4y[ 7] ] , "[03[2__0]]" );     // [164]
        A_T( [3,0] , [ r4x[ 8] , r4y[ 8] ] , "[04[3__0]]" );     // [164]
        A_T( [0,1] , [ r4x[10] , r4y[10] ] , "[05[0__1]]" );     // [164]
        A_T( [1,1] , [ r4x[11] , r4y[11] ] , "[06[1__1]]" );     // [164]
        A_T( [2,1] , [ r4x[12] , r4y[12] ] , "[07[2__1]]" );     // [164]
        A_T( [3,1] , [ r4x[13] , r4y[13] ] , "[08[3__1]]" );     // [164]
        A_T( [0,2] , [ r4x[14] , r4y[14] ] , "[09[0__2]]" );     // [164]
        A_T( [1,2] , [ r4x[16] , r4y[16] ] , "[10[1__2]]" );     // [164]
        A_T( [2,2] , [ r4x[17] , r4y[17] ] , "[11[2__2]]" );     // [164]
        A_T( [3,2] , [ r4x[18] , r4y[18] ] , "[12[3__2]]" );     // [164]
        A_T( [0,3] , [ r4x[22] , r4y[22] ] , "[13[0__3]]" );     // [164]
    }                                                            // [164]
                                                                 // [---]
    {   //:#YOU_THINK_YOU_ARE_SO_SMART_USING_THOSE_BIG_WORDS#:// // [307]
        //:OPTIMIZED_G25_R4X_BITPACKING:[307]:===============:// // [307]
        //:OPTIMIZED_G25_R4Y_BITPACKING:[307]:===============:// // [307]
        /** ************************************************ *** // [307]
                   0        10        20  24                     // [307]
                   |         |         |   |                     // [307]
            INN  : 0123456789012345678901234                     // [307]
            OUT  : __X___XXX_XXXXX_XXX___X__                     // [307]
            OUT_X: __0___123_01230_123___0__                     // [307]
            OUT_Y: __0___000_11112_222___3__                     // [307]
            OUT  : __Y___YYY_YYYYY_YYY___Y__                     // [307]
            INN  : 0123456789012345678901234                     // [307]
                   |         |         |   |                     // [307]
                   0        10        20  24                     // [307]
                                                                 // [307]
            //////////////////////////////////////////////////// // [307]
                                                                 // [307]
            OUT_X: __0___123_01230_123___0__                     // [307]
            B_LEF: __0___011__0110_011___0__                     // [307]
            B_RIG: __0___101__1010_101___0__                     // [307]
                                                0xRRGGBBAA       // [307]
            B_LEF: 0000000110001100011000000 <- 0x000318C0       // [307]
            B_RIG: 0000001010010100101000000 <- 0x00052940       // [307]
                   _________________________                     // [307]
                                                                 // [307]
                  31     24                                      // [307]
                   |      |                                      // [307]
              ABI: 10987654321098765432109876543210              // [307]
                   12345678901234567890123456789012              // [307]
                   _______|_________________0000000              // [307]
            B_LEF: 00000001100011000110000000000000  0x018C6000  // [307]
            B_RIG: 00000010100101001010000000000000  0x0294A000  // [307]
                   _______|_________________0000000              // [307]
        BLANKSIX___123456                                        // [307]
                                                                 // [307]
                                                                 // [307]
        *** ************************************************ **/ // [307]
        //////////////////////////////////////////////////////// // [307]
                                                                 // [307]
            var d_g25_r4x_u_2 =( 0x018C6000 );                   // [307]
            var d_g25_r4x_u_1 =( 0x0294A000 );                   // [307]
                                                                 // [307]
        //////////////////////////////////////////////////////// // [307]
        /** ************************************************ *** // [307]
                                                                 // [307]
            OUT_Y: __0___000_11112_222___3__                     // [307]
            B_LEF: __0___000_00001_111___1__                     // [307]
            B_RIG: __0___000_11110_000___1__                     // [307]
                                                0xRRGGBBAA       // [307]
            B_LEF: 0000000000000010111000100 <- 0x000005C4       // [307]
            B_RIG: 0000000000111100000000100 <- 0x00007804       // [307]
                                                                 // [307]
                   12345678901234567890123456789012              // [307]
                   _________________________0000000              // [307]
            B_LEF: 00000000000000101110001000000000  0x0002E200  // [307]
            B_RIG: 00000000001111000000001000000000  0x003C0200  // [307]
                                                                 // [307]
        *** ************************************************ **/ // [307]
        //////////////////////////////////////////////////////// // [307]
                                                                 // [307]
            var d_g25_r4y_u_2 =( 0x0002E200 );                   // [307]
            var d_g25_r4y_u_1 =( 0x003C0200 );                   // [307]
                                                                 // [307]
        //////////////////////////////////////////////////////// // [307]
        //:===============:OPTIMIZED_G25_R4X_BITPACKING:[307]:// // [307]
        //:===============:OPTIMIZED_G25_R4Y_BITPACKING:[307]:// // [307]
        //:#_VERIFY_BITPACKING_VIDEO_3_0_7_#:[307]:==========:// // [307]
        {                                                        // [307]
            let g25 ;;;;;;;;;;;;;;; //: INPUT____VALUE_ :://     // [307]
            let exp_r4x , exp_r4y ; //: EXPECTED_VALUES :://     // [307]
            let got_r4x , got_r4y ; //: GOTTEN___VALUES :://     // [307]
            let abi ;;;;;;;;;;;;;;; //: ACTUAL_BITINDEX :://     // [307]
                                                                 // [307]
            for( g25 = 0 ; g25 <=(25-1) ; g25++ ){               // [307]
                                                                 // [307]
                exp_r4x =( d_g25_r4x[ g25 ] );                   // [307]
                exp_r4y =( d_g25_r4y[ g25 ] );                   // [307]
                                                                 // [307]
//:_____________abi____32___1___g25_____IS_THE_CORRECT_ABI___:// // [307]
                abi =((32 - 1)- g25 );                           // [307]
                got_r4x =( 0x00  //:@ABI2@ :::::://              // [307]
                | ((d_g25_r4x_u_2>>>(abi-1))&(0x2))              // [307]
                | ((d_g25_r4x_u_1>>>(abi+0))&(0x1))              // [307]
                )>>>0;           //:@ABI1@ :::::://              // [307] 
                got_r4y =( 0x00  //:@ABI2@ :::::://              // [307]
                | ((d_g25_r4y_u_2>>>(abi-1))&(0x2))              // [307]
                | ((d_g25_r4y_u_1>>>(abi+0))&(0x1))              // [307]
                )>>>0;          //: @ABI1@ :::::://              // [307]
                                                                 // [307]
                if( exp_r4x != got_r4x ){                        // [307]
                                                                 // [307]
                    let bu2 =((d_g25_r4x_u_2>>>(abi-1))&(0x2));  // [307]
                    let bu1 =((d_g25_r4x_u_1>>>(abi+0))&(0x1));  // [307]
                                                                 // [307]
                    LOG("[____G25]:" ,     g25 );                // [307]
                    LOG("[____ABI]:" ,     abi );                // [307]
                    LOG("[____bu2]:" ,     bu2 );                // [307]
                    LOG("[____bu1]:" ,     bu1 );                // [307]
                    LOG("[EXP_R4X]:" , exp_r4x );                // [307]
                    LOG("[GOT_R4X]:" , got_r4x );                // [307]
                    ERR("[YOU_ARE_NOT_NUM_ONE_HACKER:R4X]");     // [307]
                };;                                              // [307]
                if( exp_r4y != got_r4y ){                        // [307]
                                                                 // [307]
                    let bu2 =((d_g25_r4y_u_2>>>(abi-1))&(0x2));  // [307]
                    let bu1 =((d_g25_r4y_u_1>>>(abi+0))&(0x1));  // [307]
                                                                 // [307]
                    LOG("[____G25]:" ,     g25 );                // [307]
                    LOG("[____ABI]:" ,     abi );                // [307]
                    LOG("[____bu2]:" ,     bu2 );                // [307]
                    LOG("[____bu1]:" ,     bu1 );                // [307]
                    LOG("[EXP_R4Y]:" , exp_r4y );                // [307]
                    LOG("[GOT_R4Y]:" , got_r4y );                // [307]
                    ERR("[YOU_ARE_NOT_NUM_ONE_HACKER:R4Y]");     // [307]
                };;                                              // [307]
            };;                                                  // [307]
        }                                                        // [307]
        //:============:_VERIFY_BITPACKING_VIDEO_3_0_7_:[307]:// // [307]
    }   //:#YOU_THINK_YOU_ARE_SO_SMART_USING_THOSE_BIG_WORDS#:// // [307]
                                                                 // [---]
    //: d_g25_r16 <--- To easy to confuse with d_g25_r13 ://     // [163]
    //: d_g25_rdi <--- NOT_NEEDED_USE :::::::: d_g25_r13 ://     // [163]
    {                                                            // [163]
        //:::::::0x12345678:::://                                // [163]
        let _ =( 0xFFFFFFFF );                                   // [163]
                                                                 // [163]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [163]
        //: SEE[ _LEVEL_PACK_GEOMETRY_LAYOUT_           ]://     // [163]
        //: SEE[ _LEVEL_PACK_DATA_LAYOUT_               ]://     // [163]
        //:   ( g25 )<===>( r13 ) GEOM_LAY<==>DATA_LAY   ://     // [163]
        //:   ( r13 )<===>( g25 ) DATA_LAY<==>GEOM_LAY   ://     // [163]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [163]
                                                                 // [163]
        var  d_g25_r13 = new Uint32Array([                       // [163]
                                                                 // [163]
                ( _   ),( _   ),(c_r00),( _   ),( _   )          // [163]
            ,   ( _   ),(c_r01),(c_r02),(c_r03),( _   )          // [163]
            ,   (c_r04),(c_r05),(c_r06),(c_r07),(c_r08)          // [163]
            ,   ( _   ),(c_r09),(c_r10),(c_r11),( _   )          // [163]
            ,   ( _   ),( _   ),(c_r12),( _   ),( _   )          // [163]
        ]);;                                                     // [163]
        var d_r13_g25 = new Uint32Array([                        // [163]
                                                                 // [163]
                                (c_g02)                          // [163]
        ,               (c_g06),(c_g07),(c_g08)                  // [163]
        ,       (c_g10),(c_g11),(c_g12),(c_g13),(c_g14)          // [163]
        ,               (c_g16),(c_g17),(c_g18)                  // [163]
        ,                       (c_g22)                          // [163]
        ]);;                                                     // [163]
        //::::::::::::::::::::::::::::::::::::::::::::::::::::// // [163]
        //: Test Lookup Tables            ::::::::::::::::::::// // [163]
        //: @R_G_R@ : r13 ==> g25 ==> r13 ::::::::::::::::::::// // [163]
        //::::::::::::::::::::::::::::::::::::::::::::::::::::// // [163]
        ASS( 0 === d_g25_r13[ d_r13_g25[ 0 ] ] , "[R_G_R:00]" ); // [163]
        ASS( 1 === d_g25_r13[ d_r13_g25[ 1 ] ] , "[R_G_R:01]" ); // [163]
        ASS( 2 === d_g25_r13[ d_r13_g25[ 2 ] ] , "[R_G_R:02]" ); // [163]
        ASS( 3 === d_g25_r13[ d_r13_g25[ 3 ] ] , "[R_G_R:03]" ); // [163]
        ASS( 4 === d_g25_r13[ d_r13_g25[ 4 ] ] , "[R_G_R:04]" ); // [163]
        ASS( 5 === d_g25_r13[ d_r13_g25[ 5 ] ] , "[R_G_R:05]" ); // [163]
        ASS( 6 === d_g25_r13[ d_r13_g25[ 6 ] ] , "[R_G_R:06]" ); // [163]
        ASS( 7 === d_g25_r13[ d_r13_g25[ 7 ] ] , "[R_G_R:07]" ); // [163]
        ASS( 8 === d_g25_r13[ d_r13_g25[ 8 ] ] , "[R_G_R:08]" ); // [163]
        ASS( 9 === d_g25_r13[ d_r13_g25[ 9 ] ] , "[R_G_R:09]" ); // [163]
        ASS(10 === d_g25_r13[ d_r13_g25[10 ] ] , "[R_G_R:10]" ); // [163]
        ASS(11 === d_g25_r13[ d_r13_g25[11 ] ] , "[R_G_R:11]" ); // [163]
        ASS(12 === d_g25_r13[ d_r13_g25[12 ] ] , "[R_G_R:12]" ); // [163]
    }                                                            // [163]
                                                                 // [---][---]
    {                                                            //      [162]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     //      [162]
        //: Return Positive If "Void_Room" Exists        ://     //      [162]
        //: at the given grid cell index.                ://     //      [162]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     //      [162]
                                                                 //      [162]
        let _v_ = ( 1 ); //: void is here ://                    //      [162]
                                                                 //      [162]
        var d_g25_vod =new Uint32Array([  //:#TAG_VR_LUT#://     // [189][162]
                                                                 //      [162]
            //: Grid_ID ==> IsVoidRoom ://                       //      [162]
                                                                 //      [162]
            ( _v_ ),( _v_ ),(  0  ),( _v_ ),( _v_ )              //      [162]
        ,   ( _v_ ),(  0  ),(  0  ),(  0  ),( _v_ )              //      [162]
        ,   (  0  ),(  0  ),(  0  ),(  0  ),(  0  )              //      [162]
        ,   ( _v_ ),(  0  ),(  0  ),(  0  ),( _v_ )              //      [162]
        ,   ( _v_ ),( _v_ ),(  0  ),( _v_ ),( _v_ )              //      [162]
        ]);;                                                     //      [162]
        ASS( 25 === d_g25_vod.length , "[G25_VOD]" );            //      [162]
    }                                                            //      [162]
                                                                 // [---][---]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [128]
    //: @dch@ : Discrete Center - [ Hotel / Levelpack ]  ://     // [128]
    //:       : ( as located on [THE_DUM] )              ://     // [128]
    //: @d_hi9_dcx@ : HotelIndex ==> DiscreteCenter - X  ://     // [128]
    //: @d_hi9_dcy@ : HotelIndex ==> DiscreteCenter - Y  ://     // [128]
    //: ( Center of the hotel cell on [THE_DUM] )        ://     // [128]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [128]
                                                                 // [128]
    var d_hi9_dcx = new Uint32Array([                            // [128]
                                                                 // [128]
        c_dch_xy0   //: ( hi9:0 )===>( dch:c_dch_xy0 )   ://     // [128]
    ,   c_dch_xy1   //: ( hi9:1 )===>( dch:c_dch_xy1 )   ://     // [128]
    ,   c_dch_xy2   //: ( hi9:2 )===>( dch:c_dch_xy2 )   ://     // [128]
                                                                 // [128]
    ,   c_dch_xy0   //: ( hi9:3 )===>( dch:c_dch_xy0 )   ://     // [128]
    ,   c_dch_xy1   //: ( hi9:4 )===>( dch:c_dch_xy1 )   ://     // [128]
    ,   c_dch_xy2   //: ( hi9:5 )===>( dch:c_dch_xy2 )   ://     // [128]
                                                                 // [128]
    ,   c_dch_xy0   //: ( hi9:6 )===>( dch:c_dch_xy0 )   ://     // [128]
    ,   c_dch_xy1   //: ( hi9:7 )===>( dch:c_dch_xy1 )   ://     // [128]
    ,   c_dch_xy2   //: ( hi9:8 )===>( dch:c_dch_xy2 )   ://     // [128]
                                                                 // [128]
    ]);;                                                         // [128]
    var d_hi9_dcy = new Uint32Array([                            // [128]
                                                                 // [128]
        c_dch_xy0   //: ( hi9:0 )===>( dch:c_dch_xy0 )   ://     // [128]
    ,   c_dch_xy0   //: ( hi9:1 )===>( dch:c_dch_xy0 )   ://     // [128]
    ,   c_dch_xy0   //: ( hi9:2 )===>( dch:c_dch_xy0 )   ://     // [128]
                                                                 // [128]
    ,   c_dch_xy1   //: ( hi9:3 )===>( dch:c_dch_xy1 )   ://     // [128]
    ,   c_dch_xy1   //: ( hi9:4 )===>( dch:c_dch_xy1 )   ://     // [128]
    ,   c_dch_xy1   //: ( hi9:5 )===>( dch:c_dch_xy1 )   ://     // [128]
                                                                 // [128]
    ,   c_dch_xy2   //: ( hi9:6 )===>( dch:c_dch_xy2 )   ://     // [128]
    ,   c_dch_xy2   //: ( hi9:7 )===>( dch:c_dch_xy2 )   ://     // [128]
    ,   c_dch_xy2   //: ( hi9:8 )===>( dch:c_dch_xy2 )   ://     // [128]
                                                                 // [128]
    ]);;                                                         // [128]
    ASS( 9 === d_hi9_dcx.length );                               // [128]
    ASS( 9 === d_hi9_dcy.length );                               // [128]
                                                                 // [---]
//:============================:TOP_LEVEL_LOOKUP_TABLES:[128]://
//:RENDER_OPTION_VARIABLES:[094]:============================://   



    var d_rendopt_boxview_onn =( 1 ); //:LetterBoxxingOn?://     // [094]
    var d_rendopt_boxview_rat =( 3 ); //:LetterBoxRatio  ://     // [094]



//:============================:RENDER_OPTION_VARIABLES:[094]://
//:000_3RD:UPNG_LIB:[206]:===================================:// // [000_3RD][206][---]
//:                                                          :// // [000_3RD][206][---]
//:    WEB_URL : github.com/photopea/UPNG.js                 :// // [000_3RD][206][---]
//:    SSH_URL : git@github.com:photopea/UPNG.js.git         :// // [000_3RD][206][---]
//:                                                          :// // [000_3RD][206][---]
//: - - - - - - - - - - - - - ---- - - - - - - - - - - - - - :// // [000_3RD][206][---]
//:                                                          :// // [000_3RD][206][---]
//:   Let's not do any more formatting of this source        :// // [000_3RD][206][---]
//:   code until we have some basic tests written to         :// // [000_3RD][206][---]
//:   prove the library works. Then we will slowly           :// // [000_3RD][206][---]
//:   refactor the formatting for this library in            :// // [000_3RD][206][---]
//:   little tiny chunks until it is pretty.                 :// // [000_3RD][206][---]
//:                                                          :// // [000_3RD][206][---]
//:   -KanjiCoder , 2022_08_28                               :// // [000_3RD][206][---]
//:                                                          :// // [000_3RD][206][---]
//: - - - - - - - - - - - - - ---- - - - - - - - - - - - - - :// // [000_3RD][206][---]

var UZIP = {};
if(typeof module == "object") module.exports = UZIP;


UZIP["parse"] = function(buf, onlyNames)	// ArrayBuffer
{
	var rUs = UZIP.bin.readUshort, rUi = UZIP.bin.readUint, o = 0, out = {};
	var data = new Uint8Array(buf);
	var eocd = data.length-4;
	
	while(rUi(data, eocd)!=0x06054b50) eocd--;
	
	var o = eocd;
	o+=4;	// sign  = 0x06054b50
	o+=4;  // disks = 0;
	var cnu = rUs(data, o);  o+=2;
	var cnt = rUs(data, o);  o+=2;
			
	var csize = rUi(data, o);  o+=4;
	var coffs = rUi(data, o);  o+=4;
	
	o = coffs;
	for(var i=0; i<cnu; i++)
	{
		var sign = rUi(data, o);  o+=4;
		o += 4;  // versions;
		o += 4;  // flag + compr
		o += 4;  // time
		
		var crc32 = rUi(data, o);  o+=4;
		var csize = rUi(data, o);  o+=4;
		var usize = rUi(data, o);  o+=4;
		
		var nl = rUs(data, o), el = rUs(data, o+2), cl = rUs(data, o+4);  o += 6;  // name, extra, comment
		o += 8;  // disk, attribs
		
		var roff = rUi(data, o);  o+=4;
		o += nl + el + cl;
		
		UZIP._readLocal(data, roff, out, csize, usize, onlyNames);
	}
	//console.log(out);
	return out;
}

UZIP._readLocal = function(data, o, out, csize, usize, onlyNames)
{
	var rUs = UZIP.bin.readUshort, rUi = UZIP.bin.readUint;
	var sign  = rUi(data, o);  o+=4;
	var ver   = rUs(data, o);  o+=2;
	var gpflg = rUs(data, o);  o+=2;
	//if((gpflg&8)!=0) throw "unknown sizes";
	var cmpr  = rUs(data, o);  o+=2;
	
	var time  = rUi(data, o);  o+=4;
	
	var crc32 = rUi(data, o);  o+=4;
	//var csize = rUi(data, o);  o+=4;
	//var usize = rUi(data, o);  o+=4;
	o+=8;
		
	var nlen  = rUs(data, o);  o+=2;
	var elen  = rUs(data, o);  o+=2;
		
	var name =  UZIP.bin.readUTF8(data, o, nlen);  o+=nlen;  //console.log(name);
	o += elen;
			
	//console.log(sign.toString(16), ver, gpflg, cmpr, crc32.toString(16), "csize, usize", csize, usize, nlen, elen, name, o);
	if(onlyNames) {  out[name]={size:usize, csize:csize};  return;  }   
	var file = new Uint8Array(data.buffer, o);
	if(false) {}
	else if(cmpr==0) out[name] = new Uint8Array(file.buffer.slice(o, o+csize));
	else if(cmpr==8) {
		var buf = new Uint8Array(usize);  UZIP.inflateRaw(file, buf);
		/*var nbuf = pako["inflateRaw"](file);
		if(usize>8514000) {
			//console.log(PUtils.readASCII(buf , 8514500, 500));
			//console.log(PUtils.readASCII(nbuf, 8514500, 500));
		}
		for(var i=0; i<buf.length; i++) if(buf[i]!=nbuf[i]) {  console.log(buf.length, nbuf.length, usize, i);  throw "e";  }
		*/
		out[name] = buf;
	}
	else throw "unknown compression method: "+cmpr;
}

UZIP.inflateRaw = function(file, buf) {  return UZIP.F.inflate(file, buf);  }
UZIP.inflate    = function(file, buf) { 
	var CMF = file[0], FLG = file[1];
	var CM = (CMF&15), CINFO = (CMF>>>4);
	//console.log(CM, CINFO,CMF,FLG);
	return UZIP.inflateRaw(new Uint8Array(file.buffer, file.byteOffset+2, file.length-6), buf);  
}
UZIP.deflate    = function(data, opts/*, buf, off*/) {
	if(opts==null) opts={level:6};
	var off=0, buf=new Uint8Array(50+Math.floor(data.length*1.1));
	buf[off]=120;  buf[off+1]=156;  off+=2;
	off = UZIP.F.deflateRaw(data, buf, off, opts.level);
	var crc = UZIP.adler(data, 0, data.length);
	buf[off+0]=((crc>>>24)&255); 
	buf[off+1]=((crc>>>16)&255); 
	buf[off+2]=((crc>>> 8)&255); 
	buf[off+3]=((crc>>> 0)&255); 	
	return new Uint8Array(buf.buffer, 0, off+4);
}
UZIP.deflateRaw = function(data, opts) {
	if(opts==null) opts={level:6};
	var buf=new Uint8Array(50+Math.floor(data.length*1.1));
	var off = UZIP.F.deflateRaw(data, buf, off, opts.level);
	return new Uint8Array(buf.buffer, 0, off);
}


UZIP.encode = function(obj, noCmpr) {
	if(noCmpr==null) noCmpr=false;
	var tot = 0, wUi = UZIP.bin.writeUint, wUs = UZIP.bin.writeUshort;
	var zpd = {};
	for(var p in obj) {  var cpr = !UZIP._noNeed(p) && !noCmpr, buf = obj[p], crc = UZIP.crc.crc(buf,0,buf.length); 
		zpd[p] = {  cpr:cpr, usize:buf.length, crc:crc, file: (cpr ? UZIP.deflateRaw(buf) : buf)  };  }
	
	for(var p in zpd) tot += zpd[p].file.length + 30 + 46 + 2*UZIP.bin.sizeUTF8(p);
	tot +=  22;
	
	var data = new Uint8Array(tot), o = 0;
	var fof = []
	
	for(var p in zpd) {
		var file = zpd[p];  fof.push(o);
		o = UZIP._writeHeader(data, o, p, file, 0);
	}
	var i=0, ioff = o;
	for(var p in zpd) {
		var file = zpd[p];  fof.push(o);
		o = UZIP._writeHeader(data, o, p, file, 1, fof[i++]);		
	}
	var csize = o-ioff;
	
	wUi(data, o, 0x06054b50);  o+=4;
	o += 4;  // disks
	wUs(data, o, i);  o += 2;
	wUs(data, o, i);  o += 2;	// number of c d records
	wUi(data, o, csize);  o += 4;
	wUi(data, o, ioff );  o += 4;
	o += 2;
	return data.buffer;
}
// no need to compress .PNG, .ZIP, .JPEG ....
UZIP._noNeed = function(fn) {  var ext = fn.split(".").pop().toLowerCase();  return "png,jpg,jpeg,zip".indexOf(ext)!=-1;  }

UZIP._writeHeader = function(data, o, p, obj, t, roff)
{
	var wUi = UZIP.bin.writeUint, wUs = UZIP.bin.writeUshort;
	var file = obj.file;
	
	wUi(data, o, t==0 ? 0x04034b50 : 0x02014b50);  o+=4; // sign
	if(t==1) o+=2;  // ver made by
	wUs(data, o, 20);  o+=2;	// ver
	wUs(data, o,  0);  o+=2;    // gflip
	wUs(data, o,  obj.cpr?8:0);  o+=2;	// cmpr
		
	wUi(data, o,  0);  o+=4;	// time		
	wUi(data, o, obj.crc);  o+=4;	// crc32
	wUi(data, o, file.length);  o+=4;	// csize
	wUi(data, o, obj.usize);  o+=4;	// usize
		
	wUs(data, o, UZIP.bin.sizeUTF8(p));  o+=2;	// nlen
	wUs(data, o, 0);  o+=2;	// elen
	
	if(t==1) {
		o += 2;  // comment length
		o += 2;  // disk number
		o += 6;  // attributes
		wUi(data, o, roff);  o+=4;	// usize
	}
	var nlen = UZIP.bin.writeUTF8(data, o, p);  o+= nlen;	
	if(t==0) {  data.set(file, o);  o += file.length;  }
	return o;
}





UZIP.crc = {
	table : ( function() {
	   var tab = new Uint32Array(256);
	   for (var n=0; n<256; n++) {
			var c = n;
			for (var k=0; k<8; k++) {
				if (c & 1)  c = 0xedb88320 ^ (c >>> 1);
				else        c = c >>> 1;
			}
			tab[n] = c;  }    
		return tab;  })(),
	update : function(c, buf, off, len) {
		for (var i=0; i<len; i++)  c = UZIP.crc.table[(c ^ buf[off+i]) & 0xff] ^ (c >>> 8);
		return c;
	},
	crc : function(b,o,l)  {  return UZIP.crc.update(0xffffffff,b,o,l) ^ 0xffffffff;  }
}
UZIP.adler = function(data,o,len) {
	var a = 1, b = 0;
	var off = o, end=o+len;
	while(off<end) {
		var eend = Math.min(off+5552, end);
		while(off<eend) {
			a += data[off++];
			b += a;
		}
		a=a%65521;
		b=b%65521;
	}
    return (b << 16) | a;
}

UZIP.bin = {
	readUshort : function(buff,p)  {  return (buff[p]) | (buff[p+1]<<8);  },
	writeUshort: function(buff,p,n){  buff[p] = (n)&255;  buff[p+1] = (n>>8)&255;  },
	readUint   : function(buff,p)  {  return (buff[p+3]*(256*256*256)) + ((buff[p+2]<<16) | (buff[p+1]<< 8) | buff[p]);  },
	writeUint  : function(buff,p,n){  buff[p]=n&255;  buff[p+1]=(n>>8)&255;  buff[p+2]=(n>>16)&255;  buff[p+3]=(n>>24)&255;  },
	readASCII  : function(buff,p,l){  var s = "";  for(var i=0; i<l; i++) s += String.fromCharCode(buff[p+i]);  return s;    },
	writeASCII : function(data,p,s){  for(var i=0; i<s.length; i++) data[p+i] = s.charCodeAt(i);  },
	pad : function(n) { return n.length < 2 ? "0" + n : n; },
	readUTF8 : function(buff, p, l) {
		var s = "", ns;
		for(var i=0; i<l; i++) s += "%" + UZIP.bin.pad(buff[p+i].toString(16));
		try {  ns = decodeURIComponent(s); }
		catch(e) {  return UZIP.bin.readASCII(buff, p, l);  }
		return  ns;
	},
	writeUTF8 : function(buff, p, str) {
		var strl = str.length, i=0;
		for(var ci=0; ci<strl; ci++)
		{
			var code = str.charCodeAt(ci);
			if     ((code&(0xffffffff-(1<< 7)+1))==0) {  buff[p+i] = (     code     );  i++;  }
			else if((code&(0xffffffff-(1<<11)+1))==0) {  buff[p+i] = (192|(code>> 6));  buff[p+i+1] = (128|((code>> 0)&63));  i+=2;  }
			else if((code&(0xffffffff-(1<<16)+1))==0) {  buff[p+i] = (224|(code>>12));  buff[p+i+1] = (128|((code>> 6)&63));  buff[p+i+2] = (128|((code>>0)&63));  i+=3;  }
			else if((code&(0xffffffff-(1<<21)+1))==0) {  buff[p+i] = (240|(code>>18));  buff[p+i+1] = (128|((code>>12)&63));  buff[p+i+2] = (128|((code>>6)&63));  buff[p+i+3] = (128|((code>>0)&63)); i+=4;  }
			else throw "e";
		}
		return i;
	},
	sizeUTF8 : function(str) {
		var strl = str.length, i=0;
		for(var ci=0; ci<strl; ci++)
		{
			var code = str.charCodeAt(ci);
			if     ((code&(0xffffffff-(1<< 7)+1))==0) {  i++ ;  }
			else if((code&(0xffffffff-(1<<11)+1))==0) {  i+=2;  }
			else if((code&(0xffffffff-(1<<16)+1))==0) {  i+=3;  }
			else if((code&(0xffffffff-(1<<21)+1))==0) {  i+=4;  }
			else throw "e";
		}
		return i;
	}
}





UZIP.F = {};

UZIP.F.deflateRaw = function(data, out, opos, lvl) {	
	var opts = [
	/*
		 ush good_length; /* reduce lazy search above this match length 
		 ush max_lazy;    /* do not perform lazy search above this match length 
         ush nice_length; /* quit search above this match length 
	*/
	/*      good lazy nice chain */
	/* 0 */ [ 0,   0,   0,    0,0],  /* store only */
	/* 1 */ [ 4,   4,   8,    4,0], /* max speed, no lazy matches */
	/* 2 */ [ 4,   5,  16,    8,0],
	/* 3 */ [ 4,   6,  16,   16,0],

	/* 4 */ [ 4,  10,  16,   32,0],  /* lazy matches */
	/* 5 */ [ 8,  16,  32,   32,0],
	/* 6 */ [ 8,  16, 128,  128,0],
	/* 7 */ [ 8,  32, 128,  256,0],
	/* 8 */ [32, 128, 258, 1024,1],
	/* 9 */ [32, 258, 258, 4096,1]]; /* max compression */
	
	var opt = opts[lvl];
	
	
	var U = UZIP.F.U, goodIndex = UZIP.F._goodIndex, hash = UZIP.F._hash, putsE = UZIP.F._putsE;
	var i = 0, pos = opos<<3, cvrd = 0, dlen = data.length;
	
	if(lvl==0) {
		while(i<dlen) {   var len = Math.min(0xffff, dlen-i);
			putsE(out, pos, (i+len==dlen ? 1 : 0));  pos = UZIP.F._copyExact(data, i, len, out, pos+8);  i += len;  }
		return pos>>>3;
	}

	var lits = U.lits, strt=U.strt, prev=U.prev, li=0, lc=0, bs=0, ebits=0, c=0, nc=0;  // last_item, literal_count, block_start
	if(dlen>2) {  nc=UZIP.F._hash(data,0);  strt[nc]=0;  }
	var nmch=0,nmci=0;
	
	for(i=0; i<dlen; i++)  {
		c = nc;
		//*
		if(i+1<dlen-2) {
			nc = UZIP.F._hash(data, i+1);
			var ii = ((i+1)&0x7fff);
			prev[ii]=strt[nc];
			strt[nc]=ii;
		} //*/
		if(cvrd<=i) {
			if((li>14000 || lc>26697) && (dlen-i)>100) {
				if(cvrd<i) {  lits[li]=i-cvrd;  li+=2;  cvrd=i;  }
				pos = UZIP.F._writeBlock(((i==dlen-1) || (cvrd==dlen))?1:0, lits, li, ebits, data,bs,i-bs, out, pos);  li=lc=ebits=0;  bs=i;
			}
			
			var mch = 0;
			//if(nmci==i) mch= nmch;  else 
			if(i<dlen-2) mch = UZIP.F._bestMatch(data, i, prev, c, Math.min(opt[2],dlen-i), opt[3]);
			/*
			if(mch!=0 && opt[4]==1 && (mch>>>16)<opt[1] && i+1<dlen-2) {
				nmch = UZIP.F._bestMatch(data, i+1, prev, nc, opt[2], opt[3]);  nmci=i+1;
				//var mch2 = UZIP.F._bestMatch(data, i+2, prev, nnc);  //nmci=i+1;
				if((nmch>>>16)>(mch>>>16)) mch=0;
			}//*/
			var len = mch>>>16, dst = mch&0xffff;  //if(i-dst<0) throw "e";
			if(mch!=0) { 
				var len = mch>>>16, dst = mch&0xffff;  //if(i-dst<0) throw "e";
				var lgi = goodIndex(len, U.of0);  U.lhst[257+lgi]++; 
				var dgi = goodIndex(dst, U.df0);  U.dhst[    dgi]++;  ebits += U.exb[lgi] + U.dxb[dgi]; 
				lits[li] = (len<<23)|(i-cvrd);  lits[li+1] = (dst<<16)|(lgi<<8)|dgi;  li+=2;
				cvrd = i + len;  
			}
			else {	U.lhst[data[i]]++;  }
			lc++;
		}
	}
	if(bs!=i || data.length==0) {
		if(cvrd<i) {  lits[li]=i-cvrd;  li+=2;  cvrd=i;  }
		pos = UZIP.F._writeBlock(1, lits, li, ebits, data,bs,i-bs, out, pos);  li=0;  lc=0;  li=lc=ebits=0;  bs=i;
	}
	while((pos&7)!=0) pos++;
	return pos>>>3;
}
UZIP.F._bestMatch = function(data, i, prev, c, nice, chain) {
	var ci = (i&0x7fff), pi=prev[ci];  
	//console.log("----", i);
	var dif = ((ci-pi + (1<<15)) & 0x7fff);  if(pi==ci || c!=UZIP.F._hash(data,i-dif)) return 0;
	var tl=0, td=0;  // top length, top distance
	var dlim = Math.min(0x7fff, i);
	while(dif<=dlim && --chain!=0 && pi!=ci /*&& c==UZIP.F._hash(data,i-dif)*/) {
		if(tl==0 || (data[i+tl]==data[i+tl-dif])) {
			var cl = UZIP.F._howLong(data, i, dif);
			if(cl>tl) {  
				tl=cl;  td=dif;  if(tl>=nice) break;    //* 
				if(dif+2<cl) cl = dif+2;
				var maxd = 0; // pi does not point to the start of the word
				for(var j=0; j<cl-2; j++) {
					var ei =  (i-dif+j+ (1<<15)) & 0x7fff;
					var li = prev[ei];
					var curd = (ei-li + (1<<15)) & 0x7fff;
					if(curd>maxd) {  maxd=curd;  pi = ei; }
				}  //*/
			}
		}
		
		ci=pi;  pi = prev[ci];
		dif += ((ci-pi + (1<<15)) & 0x7fff);
	}
	return (tl<<16)|td;
}
UZIP.F._howLong = function(data, i, dif) {
	if(data[i]!=data[i-dif] || data[i+1]!=data[i+1-dif] || data[i+2]!=data[i+2-dif]) return 0;
	var oi=i, l = Math.min(data.length, i+258);  i+=3;
	//while(i+4<l && data[i]==data[i-dif] && data[i+1]==data[i+1-dif] && data[i+2]==data[i+2-dif] && data[i+3]==data[i+3-dif]) i+=4;
	while(i<l && data[i]==data[i-dif]) i++;
	return i-oi;
}
UZIP.F._hash = function(data, i) {
	return (((data[i]<<8) | data[i+1])+(data[i+2]<<4))&0xffff;
	//var hash_shift = 0, hash_mask = 255;
	//var h = data[i+1] % 251;
	//h = (((h << 8) + data[i+2]) % 251);
	//h = (((h << 8) + data[i+2]) % 251);
	//h = ((h<<hash_shift) ^ (c) ) & hash_mask;
	//return h | (data[i]<<8);
	//return (data[i] | (data[i+1]<<8));
}
//UZIP.___toth = 0;
UZIP.saved = 0;
UZIP.F._writeBlock = function(BFINAL, lits, li, ebits, data,o0,l0, out, pos) {
	var U = UZIP.F.U, putsF = UZIP.F._putsF, putsE = UZIP.F._putsE;
	
	//*
	var T, ML, MD, MH, numl, numd, numh, lset, dset;  U.lhst[256]++;
	T = UZIP.F.getTrees(); ML=T[0]; MD=T[1]; MH=T[2]; numl=T[3]; numd=T[4]; numh=T[5]; lset=T[6]; dset=T[7];
	
	var cstSize = (((pos+3)&7)==0 ? 0 : 8-((pos+3)&7)) + 32 + (l0<<3);
	var fxdSize = ebits + UZIP.F.contSize(U.fltree, U.lhst) + UZIP.F.contSize(U.fdtree, U.dhst);
	var dynSize = ebits + UZIP.F.contSize(U.ltree , U.lhst) + UZIP.F.contSize(U.dtree , U.dhst);
	dynSize    += 14 + 3*numh + UZIP.F.contSize(U.itree, U.ihst) + (U.ihst[16]*2 + U.ihst[17]*3 + U.ihst[18]*7);
	
	for(var j=0; j<286; j++) U.lhst[j]=0;   for(var j=0; j<30; j++) U.dhst[j]=0;   for(var j=0; j<19; j++) U.ihst[j]=0;
	//*/
	var BTYPE = (cstSize<fxdSize && cstSize<dynSize) ? 0 : ( fxdSize<dynSize ? 1 : 2 );
	putsF(out, pos, BFINAL);  putsF(out, pos+1, BTYPE);  pos+=3;
	
	var opos = pos;
	if(BTYPE==0) {
		while((pos&7)!=0) pos++;
		pos = UZIP.F._copyExact(data, o0, l0, out, pos);
	}
	else {
		var ltree, dtree;
		if(BTYPE==1) {  ltree=U.fltree;  dtree=U.fdtree;  }
		if(BTYPE==2) {	
			UZIP.F.makeCodes(U.ltree, ML);  UZIP.F.revCodes(U.ltree, ML);
			UZIP.F.makeCodes(U.dtree, MD);  UZIP.F.revCodes(U.dtree, MD);
			UZIP.F.makeCodes(U.itree, MH);  UZIP.F.revCodes(U.itree, MH);
			
			ltree = U.ltree;  dtree = U.dtree;
			
			putsE(out, pos,numl-257);  pos+=5;  // 286
			putsE(out, pos,numd-  1);  pos+=5;  // 30
			putsE(out, pos,numh-  4);  pos+=4;  // 19
			
			for(var i=0; i<numh; i++) putsE(out, pos+i*3, U.itree[(U.ordr[i]<<1)+1]);   pos+=3* numh;
			pos = UZIP.F._codeTiny(lset, U.itree, out, pos);
			pos = UZIP.F._codeTiny(dset, U.itree, out, pos);
		}
		
		var off=o0;
		for(var si=0; si<li; si+=2) {
			var qb=lits[si], len=(qb>>>23), end = off+(qb&((1<<23)-1));
			while(off<end) pos = UZIP.F._writeLit(data[off++], ltree, out, pos);
			
			if(len!=0) {
				var qc = lits[si+1], dst=(qc>>16), lgi=(qc>>8)&255, dgi=(qc&255);
				pos = UZIP.F._writeLit(257+lgi, ltree, out, pos);
				putsE(out, pos, len-U.of0[lgi]);  pos+=U.exb[lgi];
				
				pos = UZIP.F._writeLit(dgi, dtree, out, pos);
				putsF(out, pos, dst-U.df0[dgi]);  pos+=U.dxb[dgi];  off+=len;
			}
		}
		pos = UZIP.F._writeLit(256, ltree, out, pos);
	}
	//console.log(pos-opos, fxdSize, dynSize, cstSize);
	return pos;
}
UZIP.F._copyExact = function(data,off,len,out,pos) {
	var p8 = (pos>>>3);
	out[p8]=(len);  out[p8+1]=(len>>>8);  out[p8+2]=255-out[p8];  out[p8+3]=255-out[p8+1];  p8+=4;
	out.set(new Uint8Array(data.buffer, off, len), p8);
	//for(var i=0; i<len; i++) out[p8+i]=data[off+i];
	return pos + ((len+4)<<3);
}
/*
	Interesting facts:
	- decompressed block can have bytes, which do not occur in a Huffman tree (copied from the previous block by reference)
*/

UZIP.F.getTrees = function() {
	var U = UZIP.F.U;
	var ML = UZIP.F._hufTree(U.lhst, U.ltree, 15);
	var MD = UZIP.F._hufTree(U.dhst, U.dtree, 15);
	var lset = [], numl = UZIP.F._lenCodes(U.ltree, lset);
	var dset = [], numd = UZIP.F._lenCodes(U.dtree, dset);
	for(var i=0; i<lset.length; i+=2) U.ihst[lset[i]]++;
	for(var i=0; i<dset.length; i+=2) U.ihst[dset[i]]++;
	var MH = UZIP.F._hufTree(U.ihst, U.itree,  7);
	var numh = 19;  while(numh>4 && U.itree[(U.ordr[numh-1]<<1)+1]==0) numh--;
	return [ML, MD, MH, numl, numd, numh, lset, dset];
}
UZIP.F.getSecond= function(a) {  var b=[];  for(var i=0; i<a.length; i+=2) b.push  (a[i+1]);  return b;  }
UZIP.F.nonZero  = function(a) {  var b= "";  for(var i=0; i<a.length; i+=2) if(a[i+1]!=0)b+=(i>>1)+",";  return b;  }
UZIP.F.contSize = function(tree, hst) {  var s=0;  for(var i=0; i<hst.length; i++) s+= hst[i]*tree[(i<<1)+1];  return s;  }
UZIP.F._codeTiny = function(set, tree, out, pos) {
	for(var i=0; i<set.length; i+=2) {
		var l = set[i], rst = set[i+1];  //console.log(l, pos, tree[(l<<1)+1]);
		pos = UZIP.F._writeLit(l, tree, out, pos);
		var rsl = l==16 ? 2 : (l==17 ? 3 : 7);
		if(l>15) {  UZIP.F._putsE(out, pos, rst, rsl);  pos+=rsl;  }
	}
	return pos;
}
UZIP.F._lenCodes = function(tree, set) {
	var len=tree.length;  while(len!=2 && tree[len-1]==0) len-=2;  // when no distances, keep one code with length 0
	for(var i=0; i<len; i+=2) {
		var l = tree[i+1], nxt = (i+3<len ? tree[i+3]:-1),  nnxt = (i+5<len ? tree[i+5]:-1),  prv = (i==0 ? -1 : tree[i-1]);
		if(l==0 && nxt==l && nnxt==l) {
			var lz = i+5;
			while(lz+2<len && tree[lz+2]==l) lz+=2;
			var zc = Math.min((lz+1-i)>>>1, 138);
			if(zc<11) set.push(17, zc-3);
			else set.push(18, zc-11);
			i += zc*2-2;
		}
		else if(l==prv && nxt==l && nnxt==l) {
			var lz = i+5;
			while(lz+2<len && tree[lz+2]==l) lz+=2;
			var zc = Math.min((lz+1-i)>>>1, 6);
			set.push(16, zc-3);
			i += zc*2-2;
		}
		else set.push(l, 0);
	}
	return len>>>1;
}
UZIP.F._hufTree   = function(hst, tree, MAXL) {
	var list=[], hl = hst.length, tl=tree.length, i=0;
	for(i=0; i<tl; i+=2) {  tree[i]=0;  tree[i+1]=0;  }	
	for(i=0; i<hl; i++) if(hst[i]!=0) list.push({lit:i, f:hst[i]});
	var end = list.length, l2=list.slice(0);
	if(end==0) return 0;  // empty histogram (usually for dist)
	if(end==1) {  var lit=list[0].lit, l2=lit==0?1:0;  tree[(lit<<1)+1]=1;  tree[(l2<<1)+1]=1;  return 1;  }
	list.sort(function(a,b){return a.f-b.f;});
	var a=list[0], b=list[1], i0=0, i1=1, i2=2;  list[0]={lit:-1,f:a.f+b.f,l:a,r:b,d:0};
	while(i1!=end-1) {
		if(i0!=i1 && (i2==end || list[i0].f<list[i2].f)) {  a=list[i0++];  }  else {  a=list[i2++];  }
		if(i0!=i1 && (i2==end || list[i0].f<list[i2].f)) {  b=list[i0++];  }  else {  b=list[i2++];  }
		list[i1++]={lit:-1,f:a.f+b.f, l:a,r:b};
	}
	var maxl = UZIP.F.setDepth(list[i1-1], 0);
	if(maxl>MAXL) {  UZIP.F.restrictDepth(l2, MAXL, maxl);  maxl = MAXL;  }
	for(i=0; i<end; i++) tree[(l2[i].lit<<1)+1]=l2[i].d;
	return maxl;
}

UZIP.F.setDepth  = function(t, d) {
	if(t.lit!=-1) {  t.d=d;  return d;  }
	return Math.max( UZIP.F.setDepth(t.l, d+1),  UZIP.F.setDepth(t.r, d+1) );
}

UZIP.F.restrictDepth = function(dps, MD, maxl) {
	var i=0, bCost=1<<(maxl-MD), dbt=0;
	dps.sort(function(a,b){return b.d==a.d ? a.f-b.f : b.d-a.d;});
	
	for(i=0; i<dps.length; i++) if(dps[i].d>MD) {  var od=dps[i].d;  dps[i].d=MD;  dbt+=bCost-(1<<(maxl-od));  }  else break;
	dbt = dbt>>>(maxl-MD);
	while(dbt>0) {  var od=dps[i].d;  if(od<MD) {  dps[i].d++;  dbt-=(1<<(MD-od-1));  }  else  i++;  }
	for(; i>=0; i--) if(dps[i].d==MD && dbt<0) {  dps[i].d--;  dbt++;  }  if(dbt!=0) console.log("debt left");
}

UZIP.F._goodIndex = function(v, arr) {
	var i=0;  if(arr[i|16]<=v) i|=16;  if(arr[i|8]<=v) i|=8;  if(arr[i|4]<=v) i|=4;  if(arr[i|2]<=v) i|=2;  if(arr[i|1]<=v) i|=1;  return i;
}
UZIP.F._writeLit = function(ch, ltree, out, pos) {
	UZIP.F._putsF(out, pos, ltree[ch<<1]);
	return pos+ltree[(ch<<1)+1];
}








UZIP.F.inflate = function(data, buf) {
	var u8=Uint8Array;
	if(data[0]==3 && data[1]==0) return (buf ? buf : new u8(0));
	var F=UZIP.F, bitsF = F._bitsF, bitsE = F._bitsE, decodeTiny = F._decodeTiny, makeCodes = F.makeCodes, codes2map=F.codes2map, get17 = F._get17;
	var U = F.U;
	
	var noBuf = (buf==null);
	if(noBuf) buf = new u8((data.length>>>2)<<3);
	
	var BFINAL=0, BTYPE=0, HLIT=0, HDIST=0, HCLEN=0, ML=0, MD=0; 	
	var off = 0, pos = 0;
	var lmap, dmap;
	
	while(BFINAL==0) {		
		BFINAL = bitsF(data, pos  , 1);
		BTYPE  = bitsF(data, pos+1, 2);  pos+=3;
		//console.log(BFINAL, BTYPE);
		
		if(BTYPE==0) {
			if((pos&7)!=0) pos+=8-(pos&7);
			var p8 = (pos>>>3)+4, len = data[p8-4]|(data[p8-3]<<8);  //console.log(len);//bitsF(data, pos, 16), 
			if(noBuf) buf=UZIP.F._check(buf, off+len);
			buf.set(new u8(data.buffer, data.byteOffset+p8, len), off);
			//for(var i=0; i<len; i++) buf[off+i] = data[p8+i];
			//for(var i=0; i<len; i++) if(buf[off+i] != data[p8+i]) throw "e";
			pos = ((p8+len)<<3);  off+=len;  continue;
		}
		if(noBuf) buf=UZIP.F._check(buf, off+(1<<17));  // really not enough in many cases (but PNG and ZIP provide buffer in advance)
		if(BTYPE==1) {  lmap = U.flmap;  dmap = U.fdmap;  ML = (1<<9)-1;  MD = (1<<5)-1;   }
		if(BTYPE==2) {
			HLIT  = bitsE(data, pos   , 5)+257;  
			HDIST = bitsE(data, pos+ 5, 5)+  1;  
			HCLEN = bitsE(data, pos+10, 4)+  4;  pos+=14;
			
			var ppos = pos;
			for(var i=0; i<38; i+=2) {  U.itree[i]=0;  U.itree[i+1]=0;  }
			var tl = 1;
			for(var i=0; i<HCLEN; i++) {  var l=bitsE(data, pos+i*3, 3);  U.itree[(U.ordr[i]<<1)+1] = l;  if(l>tl)tl=l;  }     pos+=3*HCLEN;  //console.log(itree);
			makeCodes(U.itree, tl);
			codes2map(U.itree, tl, U.imap);
			
			lmap = U.lmap;  dmap = U.dmap;
			
			pos = decodeTiny(U.imap, (1<<tl)-1, HLIT+HDIST, data, pos, U.ttree);
			var mx0 = F._copyOut(U.ttree,    0, HLIT , U.ltree);  ML = (1<<mx0)-1;
			var mx1 = F._copyOut(U.ttree, HLIT, HDIST, U.dtree);  MD = (1<<mx1)-1;
			
			//var ml = decodeTiny(U.imap, (1<<tl)-1, HLIT , data, pos, U.ltree); ML = (1<<(ml>>>24))-1;  pos+=(ml&0xffffff);
			makeCodes(U.ltree, mx0);
			codes2map(U.ltree, mx0, lmap);
			
			//var md = decodeTiny(U.imap, (1<<tl)-1, HDIST, data, pos, U.dtree); MD = (1<<(md>>>24))-1;  pos+=(md&0xffffff);
			makeCodes(U.dtree, mx1);
			codes2map(U.dtree, mx1, dmap);
		}
		//var ooff=off, opos=pos;
		while(true) {
			var code = lmap[get17(data, pos) & ML];  pos += code&15;
			var lit = code>>>4;  //U.lhst[lit]++;  
			if((lit>>>8)==0) {  buf[off++] = lit;  }
			else if(lit==256) {  break;  }
			else {
				var end = off+lit-254;
				if(lit>264) { var ebs = U.ldef[lit-257];  end = off + (ebs>>>3) + bitsE(data, pos, ebs&7);  pos += ebs&7;  }
				//UZIP.F.dst[end-off]++;
				
				var dcode = dmap[get17(data, pos) & MD];  pos += dcode&15;
				var dlit = dcode>>>4;
				var dbs = U.ddef[dlit], dst = (dbs>>>4) + bitsF(data, pos, dbs&15);  pos += dbs&15;
				
				//var o0 = off-dst, stp = Math.min(end-off, dst);
				//if(stp>20) while(off<end) {  buf.copyWithin(off, o0, o0+stp);  off+=stp;  }  else
				//if(end-dst<=off) buf.copyWithin(off, off-dst, end-dst);  else
				//if(dst==1) buf.fill(buf[off-1], off, end);  else
				if(noBuf) buf=UZIP.F._check(buf, off+(1<<17));
				while(off<end) {  buf[off]=buf[off++-dst];    buf[off]=buf[off++-dst];  buf[off]=buf[off++-dst];  buf[off]=buf[off++-dst];  }   
				off=end;
				//while(off!=end) {  buf[off]=buf[off++-dst];  }
			}
		}
		//console.log(off-ooff, (pos-opos)>>>3);
	}
	//console.log(UZIP.F.dst);
	//console.log(tlen, dlen, off-tlen+tcnt);
	return buf.length==off ? buf : buf.slice(0,off);
}
UZIP.F._check=function(buf, len) {
	var bl=buf.length;  if(len<=bl) return buf;
	var nbuf = new Uint8Array(Math.max(bl<<1,len));  nbuf.set(buf,0);
	//for(var i=0; i<bl; i+=4) {  nbuf[i]=buf[i];  nbuf[i+1]=buf[i+1];  nbuf[i+2]=buf[i+2];  nbuf[i+3]=buf[i+3];  }
	return nbuf;
}

UZIP.F._decodeTiny = function(lmap, LL, len, data, pos, tree) {
	var bitsE = UZIP.F._bitsE, get17 = UZIP.F._get17;
	var i = 0;
	while(i<len) {
		var code = lmap[get17(data, pos)&LL];  pos+=code&15;
		var lit = code>>>4; 
		if(lit<=15) {  tree[i]=lit;  i++;  }
		else {
			var ll = 0, n = 0;
			if(lit==16) {
				n = (3  + bitsE(data, pos, 2));  pos += 2;  ll = tree[i-1];
			}
			else if(lit==17) {
				n = (3  + bitsE(data, pos, 3));  pos += 3;
			}
			else if(lit==18) {
				n = (11 + bitsE(data, pos, 7));  pos += 7;
			}
			var ni = i+n;
			while(i<ni) {  tree[i]=ll;  i++; }
		}
	}
	return pos;
}
UZIP.F._copyOut = function(src, off, len, tree) {
	var mx=0, i=0, tl=tree.length>>>1;
	while(i<len) {  var v=src[i+off];  tree[(i<<1)]=0;  tree[(i<<1)+1]=v;  if(v>mx)mx=v;  i++;  }
	while(i<tl ) {  tree[(i<<1)]=0;  tree[(i<<1)+1]=0;  i++;  }
	return mx;
}

UZIP.F.makeCodes = function(tree, MAX_BITS) {  // code, length
	var U = UZIP.F.U;
	var max_code = tree.length;
	var code, bits, n, i, len;
	
	var bl_count = U.bl_count;  for(var i=0; i<=MAX_BITS; i++) bl_count[i]=0;
	for(i=1; i<max_code; i+=2) bl_count[tree[i]]++;
	
	var next_code = U.next_code;	// smallest code for each length
	
	code = 0;
	bl_count[0] = 0;
	for (bits = 1; bits <= MAX_BITS; bits++) {
		code = (code + bl_count[bits-1]) << 1;
		next_code[bits] = code;
	}
	
	for (n = 0; n < max_code; n+=2) {
		len = tree[n+1];
		if (len != 0) {
			tree[n] = next_code[len];
			next_code[len]++;
		}
	}
}
UZIP.F.codes2map = function(tree, MAX_BITS, map) {
	var max_code = tree.length;
	var U=UZIP.F.U, r15 = U.rev15;
	for(var i=0; i<max_code; i+=2) if(tree[i+1]!=0)  {
		var lit = i>>1;
		var cl = tree[i+1], val = (lit<<4)|cl; // :  (0x8000 | (U.of0[lit-257]<<7) | (U.exb[lit-257]<<4) | cl);
		var rest = (MAX_BITS-cl), i0 = tree[i]<<rest, i1 = i0 + (1<<rest);
		//tree[i]=r15[i0]>>>(15-MAX_BITS);
		while(i0!=i1) {
			var p0 = r15[i0]>>>(15-MAX_BITS);
			map[p0]=val;  i0++;
		}
	}
}
UZIP.F.revCodes = function(tree, MAX_BITS) {
	var r15 = UZIP.F.U.rev15, imb = 15-MAX_BITS;
	for(var i=0; i<tree.length; i+=2) {  var i0 = (tree[i]<<(MAX_BITS-tree[i+1]));  tree[i] = r15[i0]>>>imb;  }
}

// used only in deflate
UZIP.F._putsE= function(dt, pos, val   ) {  val = val<<(pos&7);  var o=(pos>>>3);  dt[o]|=val;  dt[o+1]|=(val>>>8);                        }
UZIP.F._putsF= function(dt, pos, val   ) {  val = val<<(pos&7);  var o=(pos>>>3);  dt[o]|=val;  dt[o+1]|=(val>>>8);  dt[o+2]|=(val>>>16);  }

UZIP.F._bitsE= function(dt, pos, length) {  return ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8)                        )>>>(pos&7))&((1<<length)-1);  }
UZIP.F._bitsF= function(dt, pos, length) {  return ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8) | (dt[(pos>>>3)+2]<<16))>>>(pos&7))&((1<<length)-1);  }
/*
UZIP.F._get9 = function(dt, pos) {
	return ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8))>>>(pos&7))&511;
} */
UZIP.F._get17= function(dt, pos) {	// return at least 17 meaningful bytes
	return (dt[pos>>>3] | (dt[(pos>>>3)+1]<<8) | (dt[(pos>>>3)+2]<<16) )>>>(pos&7);
}
UZIP.F._get25= function(dt, pos) {	// return at least 17 meaningful bytes
	return (dt[pos>>>3] | (dt[(pos>>>3)+1]<<8) | (dt[(pos>>>3)+2]<<16) | (dt[(pos>>>3)+3]<<24) )>>>(pos&7);
}
UZIP.F.U = function(){
	var u16=Uint16Array, u32=Uint32Array;
	return {
		next_code : new u16(16),
		bl_count  : new u16(16),
		ordr : [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ],
		of0  : [3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],
		exb  : [0,0,0,0,0,0,0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4,  4,  5,  5,  5,  5,  0,  0,  0,  0],
		ldef : new u16(32),
		df0  : [1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577, 65535, 65535],
		dxb  : [0,0,0,0,1,1,2, 2, 3, 3, 4, 4, 5, 5,  6,  6,  7,  7,  8,  8,   9,   9,  10,  10,  11,  11,  12,   12,   13,   13,     0,     0],
		ddef : new u32(32),
		flmap: new u16(  512),  fltree: [],
		fdmap: new u16(   32),  fdtree: [],
		lmap : new u16(32768),  ltree : [],  ttree:[],
		dmap : new u16(32768),  dtree : [],
		imap : new u16(  512),  itree : [],
		//rev9 : new u16(  512)
		rev15: new u16(1<<15),
		lhst : new u32(286), dhst : new u32( 30), ihst : new u32(19),
		lits : new u32(15000),
		strt : new u16(1<<16),
		prev : new u16(1<<15)
	};  
} ();

(function(){	
	var U = UZIP.F.U;
	var len = 1<<15;
	for(var i=0; i<len; i++) {
		var x = i;
		x = (((x & 0xaaaaaaaa) >>> 1) | ((x & 0x55555555) << 1));
		x = (((x & 0xcccccccc) >>> 2) | ((x & 0x33333333) << 2));
		x = (((x & 0xf0f0f0f0) >>> 4) | ((x & 0x0f0f0f0f) << 4));
		x = (((x & 0xff00ff00) >>> 8) | ((x & 0x00ff00ff) << 8));
		U.rev15[i] = (((x >>> 16) | (x << 16)))>>>17;
	}
	
	function pushV(tgt, n, sv) {  while(n--!=0) tgt.push(0,sv);  }
	
	for(var i=0; i<32; i++) {  U.ldef[i]=(U.of0[i]<<3)|U.exb[i];  U.ddef[i]=(U.df0[i]<<4)|U.dxb[i];  }
	
	pushV(U.fltree, 144, 8);  pushV(U.fltree, 255-143, 9);  pushV(U.fltree, 279-255, 7);  pushV(U.fltree,287-279,8);
	/*
	var i = 0;
	for(; i<=143; i++) U.fltree.push(0,8);
	for(; i<=255; i++) U.fltree.push(0,9);
	for(; i<=279; i++) U.fltree.push(0,7);
	for(; i<=287; i++) U.fltree.push(0,8);
	*/
	UZIP.F.makeCodes(U.fltree, 9);
	UZIP.F.codes2map(U.fltree, 9, U.flmap);
	UZIP.F.revCodes (U.fltree, 9)
	
	pushV(U.fdtree,32,5);
	//for(i=0;i<32; i++) U.fdtree.push(0,5);
	UZIP.F.makeCodes(U.fdtree, 5);
	UZIP.F.codes2map(U.fdtree, 5, U.fdmap);
	UZIP.F.revCodes (U.fdtree, 5)
	
	pushV(U.itree,19,0);  pushV(U.ltree,286,0);  pushV(U.dtree,30,0);  pushV(U.ttree,320,0);
	/*
	for(var i=0; i< 19; i++) U.itree.push(0,0);
	for(var i=0; i<286; i++) U.ltree.push(0,0);
	for(var i=0; i< 30; i++) U.dtree.push(0,0);
	for(var i=0; i<320; i++) U.ttree.push(0,0);
	*/
})()

/////////////////////////////////////////////////////////////////////////////////////////////

        var UPNG = {};

	

UPNG.toRGBA8 = function(out)
{
	var w = out.width, h = out.height;
	if(out.tabs.acTL==null) return [UPNG.toRGBA8.decodeImage(out.data, w, h, out).buffer];
	
	var frms = [];
	if(out.frames[0].data==null) out.frames[0].data = out.data;
	
	var len = w*h*4, img = new Uint8Array(len), empty = new Uint8Array(len), prev=new Uint8Array(len);
	for(var i=0; i<out.frames.length; i++)
	{
		var frm = out.frames[i];
		var fx=frm.rect.x, fy=frm.rect.y, fw = frm.rect.width, fh = frm.rect.height;
		var fdata = UPNG.toRGBA8.decodeImage(frm.data, fw,fh, out);
		
		if(i!=0) for(var j=0; j<len; j++) prev[j]=img[j];
		
		if     (frm.blend==0) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 0);
		else if(frm.blend==1) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 1);
		
		frms.push(img.buffer.slice(0));
		
		if     (frm.dispose==0) {}
		else if(frm.dispose==1) UPNG._copyTile(empty, fw, fh, img, w, h, fx, fy, 0);
		else if(frm.dispose==2) for(var j=0; j<len; j++) img[j]=prev[j];
	}
	return frms;
}
UPNG.toRGBA8.decodeImage = function(data, w, h, out)
{
	var area = w*h, bpp = UPNG.decode._getBPP(out);
	var bpl = Math.ceil(w*bpp/8);	// bytes per line

	var bf = new Uint8Array(area*4), bf32 = new Uint32Array(bf.buffer);
	var ctype = out.ctype, depth = out.depth;
	var rs = UPNG._bin.readUshort;
	
	//console.log(ctype, depth);
	var time = Date.now();

	if     (ctype==6) { // RGB + alpha
		var qarea = area<<2;
		if(depth== 8) for(var i=0; i<qarea;i+=4) {  bf[i] = data[i];  bf[i+1] = data[i+1];  bf[i+2] = data[i+2];  bf[i+3] = data[i+3]; }
		if(depth==16) for(var i=0; i<qarea;i++ ) {  bf[i] = data[i<<1];  }
	}
	else if(ctype==2) {	// RGB
		var ts=out.tabs["tRNS"];
		if(ts==null) {
			if(depth== 8) for(var i=0; i<area; i++) {  var ti=i*3;  bf32[i] = (255<<24)|(data[ti+2]<<16)|(data[ti+1]<<8)|data[ti];  }
			if(depth==16) for(var i=0; i<area; i++) {  var ti=i*6;  bf32[i] = (255<<24)|(data[ti+4]<<16)|(data[ti+2]<<8)|data[ti];  }
		}
		else {  var tr=ts[0], tg=ts[1], tb=ts[2];
			if(depth== 8) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*3;  bf32[i] = (255<<24)|(data[ti+2]<<16)|(data[ti+1]<<8)|data[ti];
				if(data[ti]   ==tr && data[ti+1]   ==tg && data[ti+2]   ==tb) bf[qi+3] = 0;  }
			if(depth==16) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*6;  bf32[i] = (255<<24)|(data[ti+4]<<16)|(data[ti+2]<<8)|data[ti];
				if(rs(data,ti)==tr && rs(data,ti+2)==tg && rs(data,ti+4)==tb) bf[qi+3] = 0;  }
		}
	}
	else if(ctype==3) {	// palette
		var p=out.tabs["PLTE"], ap=out.tabs["tRNS"], tl=ap?ap.length:0;
		//console.log(p, ap);
		if(depth==1) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;
			for(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>3)]>>(7-((i&7)<<0)))& 1), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }
		}
		if(depth==2) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;
			for(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>2)]>>(6-((i&3)<<1)))& 3), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }
		}
		if(depth==4) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;
			for(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>1)]>>(4-((i&1)<<2)))&15), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }
		}
		if(depth==8) for(var i=0; i<area; i++ ) {  var qi=i<<2, j=data[i]                      , cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }
	}
	else if(ctype==4) {	// gray + alpha
		if(depth== 8)  for(var i=0; i<area; i++) {  var qi=i<<2, di=i<<1, gr=data[di];  bf[qi]=gr;  bf[qi+1]=gr;  bf[qi+2]=gr;  bf[qi+3]=data[di+1];  }
		if(depth==16)  for(var i=0; i<area; i++) {  var qi=i<<2, di=i<<2, gr=data[di];  bf[qi]=gr;  bf[qi+1]=gr;  bf[qi+2]=gr;  bf[qi+3]=data[di+2];  }
	}
	else if(ctype==0) {	// gray
		var tr = out.tabs["tRNS"] ? out.tabs["tRNS"] : -1;
		for(var y=0; y<h; y++) {
			var off = y*bpl, to = y*w;
			if     (depth== 1) for(var x=0; x<w; x++) {  var gr=255*((data[off+(x>>>3)]>>>(7 -((x&7)   )))& 1), al=(gr==tr*255)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }
			else if(depth== 2) for(var x=0; x<w; x++) {  var gr= 85*((data[off+(x>>>2)]>>>(6 -((x&3)<<1)))& 3), al=(gr==tr* 85)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }
			else if(depth== 4) for(var x=0; x<w; x++) {  var gr= 17*((data[off+(x>>>1)]>>>(4 -((x&1)<<2)))&15), al=(gr==tr* 17)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }
			else if(depth== 8) for(var x=0; x<w; x++) {  var gr=data[off+     x], al=(gr                 ==tr)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }
			else if(depth==16) for(var x=0; x<w; x++) {  var gr=data[off+(x<<1)], al=(rs(data,off+(x<<1))==tr)?0:255;  bf32[to+x]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }
		}
	}
	//console.log(Date.now()-time);
	return bf;
}



UPNG.decode = function(buff)
{
	var data = new Uint8Array(buff), offset = 8, bin = UPNG._bin, rUs = bin.readUshort, rUi = bin.readUint;
	var out = {tabs:{}, frames:[]};
	var dd = new Uint8Array(data.length), doff = 0;	 // put all IDAT data into it
	var fd, foff = 0;	// frames
	
	var mgck = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];
	for(var i=0; i<8; i++) if(data[i]!=mgck[i]) throw "The input is not a PNG file!";

	while(offset<data.length)
	{
		var len  = bin.readUint(data, offset);  offset += 4;
		var type = bin.readASCII(data, offset, 4);  offset += 4;
		//console.log(type,len);
		
		if     (type=="IHDR")  {  UPNG.decode._IHDR(data, offset, out);  }
		else if(type=="CgBI")  {  out.tabs[type] = data.slice(offset,offset+4);  }
		else if(type=="IDAT") {
			for(var i=0; i<len; i++) dd[doff+i] = data[offset+i];
			doff += len;
		}
		else if(type=="acTL")  {
			out.tabs[type] = {  num_frames:rUi(data, offset), num_plays:rUi(data, offset+4)  };
			fd = new Uint8Array(data.length);
		}
		else if(type=="fcTL")  {
			if(foff!=0) {  var fr = out.frames[out.frames.length-1];
				fr.data = UPNG.decode._decompress(out, fd.slice(0,foff), fr.rect.width, fr.rect.height);  foff=0;
			}
			var rct = {x:rUi(data, offset+12),y:rUi(data, offset+16),width:rUi(data, offset+4),height:rUi(data, offset+8)};
			var del = rUs(data, offset+22);  del = rUs(data, offset+20) / (del==0?100:del);
			var frm = {rect:rct, delay:Math.round(del*1000), dispose:data[offset+24], blend:data[offset+25]};
			//console.log(frm);
			out.frames.push(frm);
		}
		else if(type=="fdAT") {
			for(var i=0; i<len-4; i++) fd[foff+i] = data[offset+i+4];
			foff += len-4;
		}
		else if(type=="pHYs") {
			out.tabs[type] = [bin.readUint(data, offset), bin.readUint(data, offset+4), data[offset+8]];
		}
		else if(type=="cHRM") {
			out.tabs[type] = [];
			for(var i=0; i<8; i++) out.tabs[type].push(bin.readUint(data, offset+i*4));
		}
		else if(type=="tEXt" || type=="zTXt") {
			if(out.tabs[type]==null) out.tabs[type] = {};
			var nz = bin.nextZero(data, offset);
			var keyw = bin.readASCII(data, offset, nz-offset);
			var text, tl=offset+len-nz-1;
			if(type=="tEXt") text = bin.readASCII(data, nz+1, tl);
			else {
				var bfr = UPNG.decode._inflate(data.slice(nz+2,nz+2+tl));
				text = bin.readUTF8(bfr,0,bfr.length);
			}
			out.tabs[type][keyw] = text;
		}
		else if(type=="iTXt") {
			if(out.tabs[type]==null) out.tabs[type] = {};
			var nz = 0, off = offset;
			nz = bin.nextZero(data, off);
			var keyw = bin.readASCII(data, off, nz-off);  off = nz + 1;
			var cflag = data[off], cmeth = data[off+1];  off+=2;
			nz = bin.nextZero(data, off);
			var ltag = bin.readASCII(data, off, nz-off);  off = nz + 1;
			nz = bin.nextZero(data, off);
			var tkeyw = bin.readUTF8(data, off, nz-off);  off = nz + 1;
			var text, tl=len-(off-offset);
			if(cflag==0) text  = bin.readUTF8(data, off, tl);
			else {
				var bfr = UPNG.decode._inflate(data.slice(off,off+tl));
				text = bin.readUTF8(bfr,0,bfr.length);
			}
			out.tabs[type][keyw] = text;
		}
		else if(type=="PLTE") {
			out.tabs[type] = bin.readBytes(data, offset, len);
		}
		else if(type=="hIST") {
			var pl = out.tabs["PLTE"].length/3;
			out.tabs[type] = [];  for(var i=0; i<pl; i++) out.tabs[type].push(rUs(data, offset+i*2));
		}
		else if(type=="tRNS") {
			if     (out.ctype==3) out.tabs[type] = bin.readBytes(data, offset, len);
			else if(out.ctype==0) out.tabs[type] = rUs(data, offset);
			else if(out.ctype==2) out.tabs[type] = [ rUs(data,offset),rUs(data,offset+2),rUs(data,offset+4) ];
			//else console.log("tRNS for unsupported color type",out.ctype, len);
		}
		else if(type=="gAMA") out.tabs[type] = bin.readUint(data, offset)/100000;
		else if(type=="sRGB") out.tabs[type] = data[offset];
		else if(type=="bKGD")
		{
			if     (out.ctype==0 || out.ctype==4) out.tabs[type] = [rUs(data, offset)];
			else if(out.ctype==2 || out.ctype==6) out.tabs[type] = [rUs(data, offset), rUs(data, offset+2), rUs(data, offset+4)];
			else if(out.ctype==3) out.tabs[type] = data[offset];
		}
		else if(type=="IEND") {
			break;
		}
		//else {  console.log("unknown chunk type", type, len);  out.tabs[type]=data.slice(offset,offset+len);  }
		offset += len;
		var crc = bin.readUint(data, offset);  offset += 4;
	}
	if(foff!=0) {  var fr = out.frames[out.frames.length-1];
		fr.data = UPNG.decode._decompress(out, fd.slice(0,foff), fr.rect.width, fr.rect.height);
	}	
	out.data = UPNG.decode._decompress(out, dd, out.width, out.height);
	
	delete out.compress;  delete out.interlace;  delete out.filter;
	return out;
}

UPNG.decode._decompress = function(out, dd, w, h) {
	var time = Date.now();
	var bpp = UPNG.decode._getBPP(out), bpl = Math.ceil(w*bpp/8), buff = new Uint8Array((bpl+1+out.interlace)*h);
	if(out.tabs["CgBI"]) dd = UPNG.inflateRaw(dd,buff);
	else                 dd = UPNG.decode._inflate(dd,buff);
	//console.log(dd.length, buff.length);
	//console.log(Date.now()-time);

	var time=Date.now();
	if     (out.interlace==0) dd = UPNG.decode._filterZero(dd, out, 0, w, h);
	else if(out.interlace==1) dd = UPNG.decode._readInterlace(dd, out);
	//console.log(Date.now()-time);
	return dd;
}

UPNG.decode._inflate = function(data, buff) {  var out=UPNG["inflateRaw"](new Uint8Array(data.buffer, 2,data.length-6),buff);  return out;  }
UPNG.inflateRaw=function(){var H={};H.H={};H.H.N=function(N,W){var R=Uint8Array,i=0,m=0,J=0,h=0,Q=0,X=0,u=0,w=0,d=0,v,C;
if(N[0]==3&&N[1]==0)return W?W:new R(0);var V=H.H,n=V.b,A=V.e,l=V.R,M=V.n,I=V.A,e=V.Z,b=V.m,Z=W==null;
if(Z)W=new R(N.length>>>2<<5);while(i==0){i=n(N,d,1);m=n(N,d+1,2);d+=3;if(m==0){if((d&7)!=0)d+=8-(d&7);
var D=(d>>>3)+4,q=N[D-4]|N[D-3]<<8;if(Z)W=H.H.W(W,w+q);W.set(new R(N.buffer,N.byteOffset+D,q),w);d=D+q<<3;
w+=q;continue}if(Z)W=H.H.W(W,w+(1<<17));if(m==1){v=b.J;C=b.h;X=(1<<9)-1;u=(1<<5)-1}if(m==2){J=A(N,d,5)+257;
h=A(N,d+5,5)+1;Q=A(N,d+10,4)+4;d+=14;var E=d,j=1;for(var c=0;c<38;c+=2){b.Q[c]=0;b.Q[c+1]=0}for(var c=0;
c<Q;c++){var K=A(N,d+c*3,3);b.Q[(b.X[c]<<1)+1]=K;if(K>j)j=K}d+=3*Q;M(b.Q,j);I(b.Q,j,b.u);v=b.w;C=b.d;
d=l(b.u,(1<<j)-1,J+h,N,d,b.v);var r=V.V(b.v,0,J,b.C);X=(1<<r)-1;var S=V.V(b.v,J,h,b.D);u=(1<<S)-1;M(b.C,r);
I(b.C,r,v);M(b.D,S);I(b.D,S,C)}while(!0){var T=v[e(N,d)&X];d+=T&15;var p=T>>>4;if(p>>>8==0){W[w++]=p}else if(p==256){break}else{var z=w+p-254;
if(p>264){var _=b.q[p-257];z=w+(_>>>3)+A(N,d,_&7);d+=_&7}var $=C[e(N,d)&u];d+=$&15;var s=$>>>4,Y=b.c[s],a=(Y>>>4)+n(N,d,Y&15);
d+=Y&15;while(w<z){W[w]=W[w++-a];W[w]=W[w++-a];W[w]=W[w++-a];W[w]=W[w++-a]}w=z}}}return W.length==w?W:W.slice(0,w)};
H.H.W=function(N,W){var R=N.length;if(W<=R)return N;var V=new Uint8Array(R<<1);V.set(N,0);return V};
H.H.R=function(N,W,R,V,n,A){var l=H.H.e,M=H.H.Z,I=0;while(I<R){var e=N[M(V,n)&W];n+=e&15;var b=e>>>4;
if(b<=15){A[I]=b;I++}else{var Z=0,m=0;if(b==16){m=3+l(V,n,2);n+=2;Z=A[I-1]}else if(b==17){m=3+l(V,n,3);
n+=3}else if(b==18){m=11+l(V,n,7);n+=7}var J=I+m;while(I<J){A[I]=Z;I++}}}return n};H.H.V=function(N,W,R,V){var n=0,A=0,l=V.length>>>1;
while(A<R){var M=N[A+W];V[A<<1]=0;V[(A<<1)+1]=M;if(M>n)n=M;A++}while(A<l){V[A<<1]=0;V[(A<<1)+1]=0;A++}return n};
H.H.n=function(N,W){var R=H.H.m,V=N.length,n,A,l,M,I,e=R.j;for(var M=0;M<=W;M++)e[M]=0;for(M=1;M<V;M+=2)e[N[M]]++;
var b=R.K;n=0;e[0]=0;for(A=1;A<=W;A++){n=n+e[A-1]<<1;b[A]=n}for(l=0;l<V;l+=2){I=N[l+1];if(I!=0){N[l]=b[I];
b[I]++}}};H.H.A=function(N,W,R){var V=N.length,n=H.H.m,A=n.r;for(var l=0;l<V;l+=2)if(N[l+1]!=0){var M=l>>1,I=N[l+1],e=M<<4|I,b=W-I,Z=N[l]<<b,m=Z+(1<<b);
while(Z!=m){var J=A[Z]>>>15-W;R[J]=e;Z++}}};H.H.l=function(N,W){var R=H.H.m.r,V=15-W;for(var n=0;n<N.length;
n+=2){var A=N[n]<<W-N[n+1];N[n]=R[A]>>>V}};H.H.M=function(N,W,R){R=R<<(W&7);var V=W>>>3;N[V]|=R;N[V+1]|=R>>>8};
H.H.I=function(N,W,R){R=R<<(W&7);var V=W>>>3;N[V]|=R;N[V+1]|=R>>>8;N[V+2]|=R>>>16};H.H.e=function(N,W,R){return(N[W>>>3]|N[(W>>>3)+1]<<8)>>>(W&7)&(1<<R)-1};
H.H.b=function(N,W,R){return(N[W>>>3]|N[(W>>>3)+1]<<8|N[(W>>>3)+2]<<16)>>>(W&7)&(1<<R)-1};H.H.Z=function(N,W){return(N[W>>>3]|N[(W>>>3)+1]<<8|N[(W>>>3)+2]<<16)>>>(W&7)};
H.H.i=function(N,W){return(N[W>>>3]|N[(W>>>3)+1]<<8|N[(W>>>3)+2]<<16|N[(W>>>3)+3]<<24)>>>(W&7)};H.H.m=function(){var N=Uint16Array,W=Uint32Array;
return{K:new N(16),j:new N(16),X:[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],S:[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],T:[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0],q:new N(32),p:[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,65535,65535],z:[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0],c:new W(32),J:new N(512),_:[],h:new N(32),$:[],w:new N(32768),C:[],v:[],d:new N(32768),D:[],u:new N(512),Q:[],r:new N(1<<15),s:new W(286),Y:new W(30),a:new W(19),t:new W(15e3),k:new N(1<<16),g:new N(1<<15)}}();
(function(){var N=H.H.m,W=1<<15;for(var R=0;R<W;R++){var V=R;V=(V&2863311530)>>>1|(V&1431655765)<<1;
V=(V&3435973836)>>>2|(V&858993459)<<2;V=(V&4042322160)>>>4|(V&252645135)<<4;V=(V&4278255360)>>>8|(V&16711935)<<8;
N.r[R]=(V>>>16|V<<16)>>>17}function n(A,l,M){while(l--!=0)A.push(0,M)}for(var R=0;R<32;R++){N.q[R]=N.S[R]<<3|N.T[R];
N.c[R]=N.p[R]<<4|N.z[R]}n(N._,144,8);n(N._,255-143,9);n(N._,279-255,7);n(N._,287-279,8);H.H.n(N._,9);
H.H.A(N._,9,N.J);H.H.l(N._,9);n(N.$,32,5);H.H.n(N.$,5);H.H.A(N.$,5,N.h);H.H.l(N.$,5);n(N.Q,19,0);n(N.C,286,0);
n(N.D,30,0);n(N.v,320,0)}());return H.H.N}()


UPNG.decode._readInterlace = function(data, out)
{
	var w = out.width, h = out.height;
	var bpp = UPNG.decode._getBPP(out), cbpp = bpp>>3, bpl = Math.ceil(w*bpp/8);
	var img = new Uint8Array( h * bpl );
	var di = 0;

	var starting_row  = [ 0, 0, 4, 0, 2, 0, 1 ];
	var starting_col  = [ 0, 4, 0, 2, 0, 1, 0 ];
	var row_increment = [ 8, 8, 8, 4, 4, 2, 2 ];
	var col_increment = [ 8, 8, 4, 4, 2, 2, 1 ];

	var pass=0;
	while(pass<7)
	{
		var ri = row_increment[pass], ci = col_increment[pass];
		var sw = 0, sh = 0;
		var cr = starting_row[pass];  while(cr<h) {  cr+=ri;  sh++;  }
		var cc = starting_col[pass];  while(cc<w) {  cc+=ci;  sw++;  }
		var bpll = Math.ceil(sw*bpp/8);
		UPNG.decode._filterZero(data, out, di, sw, sh);

		var y=0, row = starting_row[pass];
		while(row<h)
		{
			var col = starting_col[pass];
			var cdi = (di+y*bpll)<<3;

			while(col<w)
			{
				if(bpp==1) {
					var val = data[cdi>>3];  val = (val>>(7-(cdi&7)))&1;
					img[row*bpl + (col>>3)] |= (val << (7-((col&7)<<0)));
				}
				if(bpp==2) {
					var val = data[cdi>>3];  val = (val>>(6-(cdi&7)))&3;
					img[row*bpl + (col>>2)] |= (val << (6-((col&3)<<1)));
				}
				if(bpp==4) {
					var val = data[cdi>>3];  val = (val>>(4-(cdi&7)))&15;
					img[row*bpl + (col>>1)] |= (val << (4-((col&1)<<2)));
				}
				if(bpp>=8) {
					var ii = row*bpl+col*cbpp;
					for(var j=0; j<cbpp; j++) img[ii+j] = data[(cdi>>3)+j];
				}
				cdi+=bpp;  col+=ci;
			}
			y++;  row += ri;
		}
		if(sw*sh!=0) di += sh * (1 + bpll);
		pass = pass + 1;
	}
	return img;
}

UPNG.decode._getBPP = function(out) {
	var noc = [1,null,3,1,2,null,4][out.ctype];
	return noc * out.depth;
}

UPNG.decode._filterZero = function(data, out, off, w, h)
{
	var bpp = UPNG.decode._getBPP(out), bpl = Math.ceil(w*bpp/8), paeth = UPNG.decode._paeth;
	bpp = Math.ceil(bpp/8);
	
	var i,di, type=data[off], x=0;
	
	if(type>1) data[off]=[0,0,1][type-2];  
	if(type==3) for(x=bpp; x<bpl; x++) data[x+1] = (data[x+1] + (data[x+1-bpp]>>>1) )&255;

	for(var y=0; y<h; y++)  {
		i = off+y*bpl; di = i+y+1;
		type = data[di-1]; x=0;

		if     (type==0)   for(; x<bpl; x++) data[i+x] = data[di+x];
		else if(type==1) { for(; x<bpp; x++) data[i+x] = data[di+x];
						   for(; x<bpl; x++) data[i+x] = (data[di+x] + data[i+x-bpp]);  }
		else if(type==2) { for(; x<bpl; x++) data[i+x] = (data[di+x] + data[i+x-bpl]);  }
		else if(type==3) { for(; x<bpp; x++) data[i+x] = (data[di+x] + ( data[i+x-bpl]>>>1));
			               for(; x<bpl; x++) data[i+x] = (data[di+x] + ((data[i+x-bpl]+data[i+x-bpp])>>>1) );  }
		else             { for(; x<bpp; x++) data[i+x] = (data[di+x] + paeth(0, data[i+x-bpl], 0));
						   for(; x<bpl; x++) data[i+x] = (data[di+x] + paeth(data[i+x-bpp], data[i+x-bpl], data[i+x-bpp-bpl]) );  }
	}
	return data;
}

UPNG.decode._paeth = function(a,b,c)
{
	var p = a+b-c, pa = (p-a), pb = (p-b), pc = (p-c);
	if (pa*pa <= pb*pb && pa*pa <= pc*pc)  return a;
	else if (pb*pb <= pc*pc)  return b;
	return c;
}

UPNG.decode._IHDR = function(data, offset, out)
{
	var bin = UPNG._bin;
	out.width  = bin.readUint(data, offset);  offset += 4;
	out.height = bin.readUint(data, offset);  offset += 4;
	out.depth     = data[offset];  offset++;
	out.ctype     = data[offset];  offset++;
	out.compress  = data[offset];  offset++;
	out.filter    = data[offset];  offset++;
	out.interlace = data[offset];  offset++;
}

UPNG._bin = {
	nextZero   : function(data,p)  {  while(data[p]!=0) p++;  return p;  },
	readUshort : function(buff,p)  {  return (buff[p]<< 8) | buff[p+1];  },
	writeUshort: function(buff,p,n){  buff[p] = (n>>8)&255;  buff[p+1] = n&255;  },
	readUint   : function(buff,p)  {  return (buff[p]*(256*256*256)) + ((buff[p+1]<<16) | (buff[p+2]<< 8) | buff[p+3]);  },
	writeUint  : function(buff,p,n){  buff[p]=(n>>24)&255;  buff[p+1]=(n>>16)&255;  buff[p+2]=(n>>8)&255;  buff[p+3]=n&255;  },
	readASCII  : function(buff,p,l){  var s = "";  for(var i=0; i<l; i++) s += String.fromCharCode(buff[p+i]);  return s;    },
	writeASCII : function(data,p,s){  for(var i=0; i<s.length; i++) data[p+i] = s.charCodeAt(i);  },
	readBytes  : function(buff,p,l){  var arr = [];   for(var i=0; i<l; i++) arr.push(buff[p+i]);   return arr;  },
	pad : function(n) { return n.length < 2 ? "0" + n : n; },
	readUTF8 : function(buff, p, l) {
		var s = "", ns;
		for(var i=0; i<l; i++) s += "%" + UPNG._bin.pad(buff[p+i].toString(16));
		try {  ns = decodeURIComponent(s); }
		catch(e) {  return UPNG._bin.readASCII(buff, p, l);  }
		return  ns;
	}
}
UPNG._copyTile = function(sb, sw, sh, tb, tw, th, xoff, yoff, mode)
{
	var w = Math.min(sw,tw), h = Math.min(sh,th);
	var si=0, ti=0;
	for(var y=0; y<h; y++)
		for(var x=0; x<w; x++)
		{
			if(xoff>=0 && yoff>=0) {  si = (y*sw+x)<<2;  ti = (( yoff+y)*tw+xoff+x)<<2;  }
			else                   {  si = ((-yoff+y)*sw-xoff+x)<<2;  ti = (y*tw+x)<<2;  }
			
			if     (mode==0) {  tb[ti] = sb[si];  tb[ti+1] = sb[si+1];  tb[ti+2] = sb[si+2];  tb[ti+3] = sb[si+3];  }
			else if(mode==1) {
				var fa = sb[si+3]*(1/255), fr=sb[si]*fa, fg=sb[si+1]*fa, fb=sb[si+2]*fa; 
				var ba = tb[ti+3]*(1/255), br=tb[ti]*ba, bg=tb[ti+1]*ba, bb=tb[ti+2]*ba; 
				
				var ifa=1-fa, oa = fa+ba*ifa, ioa = (oa==0?0:1/oa);
				tb[ti+3] = 255*oa;  
				tb[ti+0] = (fr+br*ifa)*ioa;  
				tb[ti+1] = (fg+bg*ifa)*ioa;   
				tb[ti+2] = (fb+bb*ifa)*ioa;  
			}
			else if(mode==2){	// copy only differences, otherwise zero
				var fa = sb[si+3], fr=sb[si], fg=sb[si+1], fb=sb[si+2]; 
				var ba = tb[ti+3], br=tb[ti], bg=tb[ti+1], bb=tb[ti+2]; 
				if(fa==ba && fr==br && fg==bg && fb==bb) {  tb[ti]=0;  tb[ti+1]=0;  tb[ti+2]=0;  tb[ti+3]=0;  }
				else {  tb[ti]=fr;  tb[ti+1]=fg;  tb[ti+2]=fb;  tb[ti+3]=fa;  }
			}
			else if(mode==3){	// check if can be blended
				var fa = sb[si+3], fr=sb[si], fg=sb[si+1], fb=sb[si+2]; 
				var ba = tb[ti+3], br=tb[ti], bg=tb[ti+1], bb=tb[ti+2]; 
				if(fa==ba && fr==br && fg==bg && fb==bb) continue;
				//if(fa!=255 && ba!=0) return false;
				if(fa<220 && ba>20) return false;
			}
		}
	return true;
}





UPNG.encode = function(bufs, w, h, ps, dels, tabs, forbidPlte)
{
	if(ps==null) ps=0;
	if(forbidPlte==null) forbidPlte = false;

	var nimg = UPNG.encode.compress(bufs, w, h, ps, [false, false, false, 0, forbidPlte,false]);
	UPNG.encode.compressPNG(nimg, -1);
	
	return UPNG.encode._main(nimg, w, h, dels, tabs);
}

UPNG.encodeLL = function(bufs, w, h, cc, ac, depth, dels, tabs) {
	var nimg = {  ctype: 0 + (cc==1 ? 0 : 2) + (ac==0 ? 0 : 4),      depth: depth,  frames: []  };
	
	var time = Date.now();
	var bipp = (cc+ac)*depth, bipl = bipp * w;
	for(var i=0; i<bufs.length; i++)
		nimg.frames.push({  rect:{x:0,y:0,width:w,height:h},  img:new Uint8Array(bufs[i]), blend:0, dispose:1, bpp:Math.ceil(bipp/8), bpl:Math.ceil(bipl/8)  });
	
	UPNG.encode.compressPNG(nimg, 0, true);
	
	var out = UPNG.encode._main(nimg, w, h, dels, tabs);
	return out;
}

UPNG.encode._main = function(nimg, w, h, dels, tabs) {
	if(tabs==null) tabs={};
	var crc = UPNG.crc.crc, wUi = UPNG._bin.writeUint, wUs = UPNG._bin.writeUshort, wAs = UPNG._bin.writeASCII;
	var offset = 8, anim = nimg.frames.length>1, pltAlpha = false;
	
	var leng = 8 + (16+5+4) /*+ (9+4)*/ + (anim ? 20 : 0);
	if(tabs["sRGB"]!=null) leng += 8+1+4;
	if(tabs["pHYs"]!=null) leng += 8+9+4;
	if(nimg.ctype==3) {
		var dl = nimg.plte.length;
		for(var i=0; i<dl; i++) if((nimg.plte[i]>>>24)!=255) pltAlpha = true;
		leng += (8 + dl*3 + 4) + (pltAlpha ? (8 + dl*1 + 4) : 0);
	}
	for(var j=0; j<nimg.frames.length; j++)
	{
		var fr = nimg.frames[j];
		if(anim) leng += 38;
		leng += fr.cimg.length + 12;
		if(j!=0) leng+=4;
	}
	leng += 12; 
	
	var data = new Uint8Array(leng);
	var wr=[0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];
	for(var i=0; i<8; i++) data[i]=wr[i];
	
	wUi(data,offset, 13);     offset+=4;
	wAs(data,offset,"IHDR");  offset+=4;
	wUi(data,offset,w);  offset+=4;
	wUi(data,offset,h);  offset+=4;
	data[offset] = nimg.depth;  offset++;  // depth
	data[offset] = nimg.ctype;  offset++;  // ctype
	data[offset] = 0;  offset++;  // compress
	data[offset] = 0;  offset++;  // filter
	data[offset] = 0;  offset++;  // interlace
	wUi(data,offset,crc(data,offset-17,17));  offset+=4; // crc

	// 13 bytes to say, that it is sRGB
	if(tabs["sRGB"]!=null) {
		wUi(data,offset, 1);      offset+=4;
		wAs(data,offset,"sRGB");  offset+=4;
		data[offset] = tabs["sRGB"];  offset++;
		wUi(data,offset,crc(data,offset-5,5));  offset+=4; // crc
	}
	if(tabs["pHYs"]!=null) {
		wUi(data,offset, 9);      offset+=4;
		wAs(data,offset,"pHYs");  offset+=4;
		wUi(data,offset, tabs["pHYs"][0]);      offset+=4;
		wUi(data,offset, tabs["pHYs"][1]);      offset+=4;
		data[offset]=tabs["pHYs"][2];			offset++;
		wUi(data,offset,crc(data,offset-13,13));  offset+=4; // crc
	}

	if(anim) {
		wUi(data,offset, 8);      offset+=4;
		wAs(data,offset,"acTL");  offset+=4;
		wUi(data,offset, nimg.frames.length);     offset+=4;
		wUi(data,offset, tabs["loop"]!=null?tabs["loop"]:0);      offset+=4;
		wUi(data,offset,crc(data,offset-12,12));  offset+=4; // crc
	}

	if(nimg.ctype==3) {
		var dl = nimg.plte.length;
		wUi(data,offset, dl*3);  offset+=4;
		wAs(data,offset,"PLTE");  offset+=4;
		for(var i=0; i<dl; i++){
			var ti=i*3, c=nimg.plte[i], r=(c)&255, g=(c>>>8)&255, b=(c>>>16)&255;
			data[offset+ti+0]=r;  data[offset+ti+1]=g;  data[offset+ti+2]=b;
		}
		offset+=dl*3;
		wUi(data,offset,crc(data,offset-dl*3-4,dl*3+4));  offset+=4; // crc

		if(pltAlpha) {
			wUi(data,offset, dl);  offset+=4;
			wAs(data,offset,"tRNS");  offset+=4;
			for(var i=0; i<dl; i++)  data[offset+i]=(nimg.plte[i]>>>24)&255;
			offset+=dl;
			wUi(data,offset,crc(data,offset-dl-4,dl+4));  offset+=4; // crc
		}
	}
	
	var fi = 0;
	for(var j=0; j<nimg.frames.length; j++)
	{
		var fr = nimg.frames[j];
		if(anim) {
			wUi(data, offset, 26);     offset+=4;
			wAs(data, offset,"fcTL");  offset+=4;
			wUi(data, offset, fi++);   offset+=4;
			wUi(data, offset, fr.rect.width );   offset+=4;
			wUi(data, offset, fr.rect.height);   offset+=4;
			wUi(data, offset, fr.rect.x);   offset+=4;
			wUi(data, offset, fr.rect.y);   offset+=4;
			wUs(data, offset, dels[j]);   offset+=2;
			wUs(data, offset,  1000);   offset+=2;
			data[offset] = fr.dispose;  offset++;	// dispose
			data[offset] = fr.blend  ;  offset++;	// blend
			wUi(data,offset,crc(data,offset-30,30));  offset+=4; // crc
		}
				
		var imgd = fr.cimg, dl = imgd.length;
		wUi(data,offset, dl+(j==0?0:4));     offset+=4;
		var ioff = offset;
		wAs(data,offset,(j==0)?"IDAT":"fdAT");  offset+=4;
		if(j!=0) {  wUi(data, offset, fi++);  offset+=4;  }
		data.set(imgd,offset);
		offset += dl;
		wUi(data,offset,crc(data,ioff,offset-ioff));  offset+=4; // crc
	}

	wUi(data,offset, 0);     offset+=4;
	wAs(data,offset,"IEND");  offset+=4;
	wUi(data,offset,crc(data,offset-4,4));  offset+=4; // crc

	return data.buffer;
}

UPNG.encode.compressPNG = function(out, filter, levelZero) {
	for(var i=0; i<out.frames.length; i++) {
		var frm = out.frames[i], nw=frm.rect.width, nh=frm.rect.height;
		var fdata = new Uint8Array(nh*frm.bpl+nh);
		frm.cimg = UPNG.encode._filterZero(frm.img,nh,frm.bpp,frm.bpl,fdata, filter, levelZero);
	}
}



UPNG.encode.compress = function(bufs, w, h, ps, prms) // prms:  onlyBlend, minBits, forbidPlte
{
	//var time = Date.now();
	var onlyBlend = prms[0], evenCrd = prms[1], forbidPrev = prms[2], minBits = prms[3], forbidPlte = prms[4], dither=prms[5];
	
	var ctype = 6, depth = 8, alphaAnd=255
	
	for(var j=0; j<bufs.length; j++)  {  // when not quantized, other frames can contain colors, that are not in an initial frame
		var img = new Uint8Array(bufs[j]), ilen = img.length;
		for(var i=0; i<ilen; i+=4) alphaAnd &= img[i+3];
	}
	var gotAlpha = (alphaAnd!=255);
	
	//console.log("alpha check", Date.now()-time);  time = Date.now();
	
	//var brute = gotAlpha && forGIF;		// brute : frames can only be copied, not "blended"
	var frms = UPNG.encode.framize(bufs, w, h, onlyBlend, evenCrd, forbidPrev);
	//console.log("framize", Date.now()-time);  time = Date.now();
	
	var cmap={}, plte=[], inds=[]; 
	
	if(ps!=0) {
		var nbufs = [];  for(var i=0; i<frms.length; i++) nbufs.push(frms[i].img.buffer);
		
		var abuf = UPNG.encode.concatRGBA(nbufs), qres = UPNG.quantize(abuf, ps);
		
		for(var i=0; i<qres.plte.length; i++) plte.push(qres.plte[i].est.rgba);
		
		var cof = 0;
		for(var i=0; i<frms.length; i++) {  
			var frm=frms[i], bln=frm.img.length, ind = new Uint8Array(qres.inds.buffer, cof>>2, bln>>2);  inds.push(ind);
			var bb = new Uint8Array(qres.abuf,cof,bln);
			
			//console.log(frm.img, frm.width, frm.height);
			//var time = Date.now();
			if(dither) UPNG.encode.dither(frm.img, frm.rect.width, frm.rect.height, plte, bb, ind);
			//console.log(Date.now()-time);
			frm.img.set(bb);  cof+=bln;  
		}
		
		//console.log("quantize", Date.now()-time);  time = Date.now();
	}
	else {
		// what if ps==0, but there are <=256 colors?  we still need to detect, if the palette could be used
		for(var j=0; j<frms.length; j++)  {  // when not quantized, other frames can contain colors, that are not in an initial frame
			var frm = frms[j], img32 = new Uint32Array(frm.img.buffer), nw=frm.rect.width, ilen = img32.length;
			var ind = new Uint8Array(ilen);  inds.push(ind);
			for(var i=0; i<ilen; i++) {
				var c = img32[i];
				if     (i!=0 && c==img32[i- 1]) ind[i]=ind[i-1];
				else if(i>nw && c==img32[i-nw]) ind[i]=ind[i-nw];
				else {
					var cmc = cmap[c];
					if(cmc==null) {  cmap[c]=cmc=plte.length;  plte.push(c);  if(plte.length>=300) break;  }
					ind[i]=cmc;
				}
			}
		}
		//console.log("make palette", Date.now()-time);  time = Date.now();
	}
	
	var cc=plte.length; //console.log("colors:",cc);
	if(cc<=256 && forbidPlte==false) {
		if(cc<= 2) depth=1;  else if(cc<= 4) depth=2;  else if(cc<=16) depth=4;  else depth=8;
		depth =  Math.max(depth, minBits);
	}
	
	for(var j=0; j<frms.length; j++)
	{
		var frm = frms[j], nx=frm.rect.x, ny=frm.rect.y, nw=frm.rect.width, nh=frm.rect.height;
		var cimg = frm.img, cimg32 = new Uint32Array(cimg.buffer);
		var bpl = 4*nw, bpp=4;
		if(cc<=256 && forbidPlte==false) {
			bpl = Math.ceil(depth*nw/8);
			var nimg = new Uint8Array(bpl*nh);
			var inj = inds[j];
			for(var y=0; y<nh; y++) {  var i=y*bpl, ii=y*nw;
				if     (depth==8) for(var x=0; x<nw; x++) nimg[i+(x)   ]   =  (inj[ii+x]             );
				else if(depth==4) for(var x=0; x<nw; x++) nimg[i+(x>>1)]  |=  (inj[ii+x]<<(4-(x&1)*4));
				else if(depth==2) for(var x=0; x<nw; x++) nimg[i+(x>>2)]  |=  (inj[ii+x]<<(6-(x&3)*2));
				else if(depth==1) for(var x=0; x<nw; x++) nimg[i+(x>>3)]  |=  (inj[ii+x]<<(7-(x&7)*1));
			}
			cimg=nimg;  ctype=3;  bpp=1;
		}
		else if(gotAlpha==false && frms.length==1) {	// some next "reduced" frames may contain alpha for blending
			var nimg = new Uint8Array(nw*nh*3), area=nw*nh;
			for(var i=0; i<area; i++) { var ti=i*3, qi=i*4;  nimg[ti]=cimg[qi];  nimg[ti+1]=cimg[qi+1];  nimg[ti+2]=cimg[qi+2];  }
			cimg=nimg;  ctype=2;  bpp=3;  bpl=3*nw;
		}
		frm.img=cimg;  frm.bpl=bpl;  frm.bpp=bpp;
	}
	//console.log("colors => palette indices", Date.now()-time);  time = Date.now();
	
	return {ctype:ctype, depth:depth, plte:plte, frames:frms  };
}
UPNG.encode.framize = function(bufs,w,h,alwaysBlend,evenCrd,forbidPrev) {
	/*  DISPOSE
	    - 0 : no change
		- 1 : clear to transparent
		- 2 : retstore to content before rendering (previous frame disposed)
		BLEND
		- 0 : replace
		- 1 : blend
	*/
	var frms = [];
	for(var j=0; j<bufs.length; j++) {
		var cimg = new Uint8Array(bufs[j]), cimg32 = new Uint32Array(cimg.buffer);
		var nimg;
		
		var nx=0, ny=0, nw=w, nh=h, blend=alwaysBlend?1:0;
		if(j!=0) {
			var tlim = (forbidPrev || alwaysBlend || j==1 || frms[j-2].dispose!=0)?1:2, tstp = 0, tarea = 1e9;
			for(var it=0; it<tlim; it++)
			{
				var pimg = new Uint8Array(bufs[j-1-it]), p32 = new Uint32Array(bufs[j-1-it]);
				var mix=w,miy=h,max=-1,may=-1;
				for(var y=0; y<h; y++) for(var x=0; x<w; x++) {
					var i = y*w+x;
					if(cimg32[i]!=p32[i]) {
						if(x<mix) mix=x;  if(x>max) max=x;
						if(y<miy) miy=y;  if(y>may) may=y;
					}
				}
				if(max==-1) mix=miy=max=may=0;
				if(evenCrd) {  if((mix&1)==1)mix--;  if((miy&1)==1)miy--;  }
				var sarea = (max-mix+1)*(may-miy+1);
				if(sarea<tarea) {
					tarea = sarea;  tstp = it;
					nx = mix; ny = miy; nw = max-mix+1; nh = may-miy+1;
				}
			}
			
			// alwaysBlend: pokud zjistím, že blendit nelze, nastavím předchozímu snímku dispose=1. Zajistím, aby obsahoval můj obdélník.
			var pimg = new Uint8Array(bufs[j-1-tstp]);
			if(tstp==1) frms[j-1].dispose = 2;
			
			nimg = new Uint8Array(nw*nh*4);
			UPNG._copyTile(pimg,w,h, nimg,nw,nh, -nx,-ny, 0);
			
			blend =  UPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, 3) ? 1 : 0;
			if(blend==1) UPNG.encode._prepareDiff(cimg,w,h,nimg,{x:nx,y:ny,width:nw,height:nh});
			else         UPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, 0);
			//UPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, blend==1?2:0);
		}
		else nimg = cimg.slice(0);	// img may be rewritten further ... don't rewrite input
		
		frms.push({rect:{x:nx,y:ny,width:nw,height:nh}, img:nimg, blend:blend, dispose:0});
	}
	
	
	if(alwaysBlend) for(var j=0; j<frms.length; j++) {
		var frm = frms[j];  if(frm.blend==1) continue;
		var r0 = frm.rect, r1 = frms[j-1].rect
		var miX = Math.min(r0.x, r1.x), miY = Math.min(r0.y, r1.y);
		var maX = Math.max(r0.x+r0.width, r1.x+r1.width), maY = Math.max(r0.y+r0.height, r1.y+r1.height);
		var r = {x:miX, y:miY, width:maX-miX, height:maY-miY};
		
		frms[j-1].dispose = 1;
		if(j-1!=0) 
		UPNG.encode._updateFrame(bufs, w,h,frms, j-1,r, evenCrd);
		UPNG.encode._updateFrame(bufs, w,h,frms, j  ,r, evenCrd);
	}
	var area = 0;
	if(bufs.length!=1) for(var i=0; i<frms.length; i++) {
		var frm = frms[i];
		area += frm.rect.width*frm.rect.height;
		//if(i==0 || frm.blend!=1) continue;
		//var ob = new Uint8Array(
		//console.log(frm.blend, frm.dispose, frm.rect);
	}
	//if(area!=0) console.log(area);
	return frms;
}
UPNG.encode._updateFrame = function(bufs, w,h, frms, i, r, evenCrd) {
	var U8 = Uint8Array, U32 = Uint32Array;
	var pimg = new U8(bufs[i-1]), pimg32 = new U32(bufs[i-1]), nimg = i+1<bufs.length ? new U8(bufs[i+1]):null;
	var cimg = new U8(bufs[i]), cimg32 = new U32(cimg.buffer);
	
	var mix=w,miy=h,max=-1,may=-1;
	for(var y=0; y<r.height; y++) for(var x=0; x<r.width; x++) {
		var cx = r.x+x, cy = r.y+y;
		var j = cy*w+cx, cc = cimg32[j];
		// no need to draw transparency, or to dispose it. Or, if writing the same color and the next one does not need transparency.
		if(cc==0 || (frms[i-1].dispose==0 && pimg32[j]==cc && (nimg==null || nimg[j*4+3]!=0)) /**-**/ ) {}
		else {
			if(cx<mix) mix=cx;  if(cx>max) max=cx;
			if(cy<miy) miy=cy;  if(cy>may) may=cy;
		}
	}
	if(max==-1) mix=miy=max=may=0;
	if(evenCrd) {  if((mix&1)==1)mix--;  if((miy&1)==1)miy--;  }
	r = {x:mix, y:miy, width:max-mix+1, height:may-miy+1};
	
	var fr = frms[i];  fr.rect = r;  fr.blend = 1;  fr.img = new Uint8Array(r.width*r.height*4);
	if(frms[i-1].dispose==0) {
		UPNG._copyTile(pimg,w,h, fr.img,r.width,r.height, -r.x,-r.y, 0);
		UPNG.encode._prepareDiff(cimg,w,h,fr.img,r);
		//UPNG._copyTile(cimg,w,h, fr.img,r.width,r.height, -r.x,-r.y, 2);
	}
	else
		UPNG._copyTile(cimg,w,h, fr.img,r.width,r.height, -r.x,-r.y, 0);
}
UPNG.encode._prepareDiff = function(cimg, w,h, nimg, rec) {
	UPNG._copyTile(cimg,w,h, nimg,rec.width,rec.height, -rec.x,-rec.y, 2);
	/*
	var n32 = new Uint32Array(nimg.buffer);
	var og = new Uint8Array(rec.width*rec.height*4), o32 = new Uint32Array(og.buffer);
	UPNG._copyTile(cimg,w,h, og,rec.width,rec.height, -rec.x,-rec.y, 0);
	for(var i=4; i<nimg.length; i+=4) {
		if(nimg[i-1]!=0 && nimg[i+3]==0 && o32[i>>>2]==o32[(i>>>2)-1]) {
			n32[i>>>2]=o32[i>>>2];
			//var j = i, c=p32[(i>>>2)-1];
			//while(p32[j>>>2]==c) {  n32[j>>>2]=c;  j+=4;  }
		}
	}
	for(var i=nimg.length-8; i>0; i-=4) {
		if(nimg[i+7]!=0 && nimg[i+3]==0 && o32[i>>>2]==o32[(i>>>2)+1]) {
			n32[i>>>2]=o32[i>>>2];
			//var j = i, c=p32[(i>>>2)-1];
			//while(p32[j>>>2]==c) {  n32[j>>>2]=c;  j+=4;  }
		}
	}*/
}

UPNG.encode._filterZero = function(img,h,bpp,bpl,data, filter, levelZero)
{
	var fls = [], ftry=[0,1,2,3,4];
	if     (filter!=-1)             ftry=[filter];
	else if(h*bpl>500000 || bpp==1) ftry=[0];
	var opts;  if(levelZero) opts={level:0};
	
	//: @KANJI_EDIT@://
	//: var CMPR = (data.length>10e6 && UZIP!=null) ? UZIP : pako;
    var CMPR = UZIP ;
	
	var time = Date.now();
	for(var i=0; i<ftry.length; i++) {
		for(var y=0; y<h; y++) UPNG.encode._filterLine(data, img, y, bpl, bpp, ftry[i]);
		//var nimg = new Uint8Array(data.length);
		//var sz = UZIP.F.deflate(data, nimg);  fls.push(nimg.slice(0,sz));
		//var dfl = pako["deflate"](data), dl=dfl.length-4;
		//var crc = (dfl[dl+3]<<24)|(dfl[dl+2]<<16)|(dfl[dl+1]<<8)|(dfl[dl+0]<<0);
		//console.log(crc, UZIP.adler(data,2,data.length-6));
		fls.push(CMPR["deflate"](data,opts));
	}
	
	var ti, tsize=1e9;
	for(var i=0; i<fls.length; i++) if(fls[i].length<tsize) {  ti=i;  tsize=fls[i].length;  }
	return fls[ti];
}
UPNG.encode._filterLine = function(data, img, y, bpl, bpp, type)
{
	var i = y*bpl, di = i+y, paeth = UPNG.decode._paeth
	data[di]=type;  di++;

	if(type==0) {
		if(bpl<500) for(var x=0; x<bpl; x++) data[di+x] = img[i+x];
		else data.set(new Uint8Array(img.buffer,i,bpl),di);
	}
	else if(type==1) {
		for(var x=  0; x<bpp; x++) data[di+x] =  img[i+x];
		for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]-img[i+x-bpp]+256)&255;
	}
	else if(y==0) {
		for(var x=  0; x<bpp; x++) data[di+x] = img[i+x];

		if(type==2) for(var x=bpp; x<bpl; x++) data[di+x] = img[i+x];
		if(type==3) for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x] - (img[i+x-bpp]>>1) +256)&255;
		if(type==4) for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x] - paeth(img[i+x-bpp], 0, 0) +256)&255;
	}
	else {
		if(type==2) { for(var x=  0; x<bpl; x++) data[di+x] = (img[i+x]+256 - img[i+x-bpl])&255;  }
		if(type==3) { for(var x=  0; x<bpp; x++) data[di+x] = (img[i+x]+256 - (img[i+x-bpl]>>1))&255;
					  for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]+256 - ((img[i+x-bpl]+img[i+x-bpp])>>1))&255;  }
		if(type==4) { for(var x=  0; x<bpp; x++) data[di+x] = (img[i+x]+256 - paeth(0, img[i+x-bpl], 0))&255;
					  for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]+256 - paeth(img[i+x-bpp], img[i+x-bpl], img[i+x-bpp-bpl]))&255;  }
	}
}

UPNG.crc = {
	table : ( function() {
	   var tab = new Uint32Array(256);
	   for (var n=0; n<256; n++) {
			var c = n;
			for (var k=0; k<8; k++) {
				if (c & 1)  c = 0xedb88320 ^ (c >>> 1);
				else        c = c >>> 1;
			}
			tab[n] = c;  }
		return tab;  })(),
	update : function(c, buf, off, len) {
		for (var i=0; i<len; i++)  c = UPNG.crc.table[(c ^ buf[off+i]) & 0xff] ^ (c >>> 8);
		return c;
	},
	crc : function(b,o,l)  {  return UPNG.crc.update(0xffffffff,b,o,l) ^ 0xffffffff;  }
}


UPNG.quantize = function(abuf, ps)
{	
	var sb = new Uint8Array(abuf), tb = sb.slice(0), tb32 = new Uint32Array(tb.buffer);
	
	var KD = UPNG.quantize.getKDtree(tb, ps);
	var root = KD[0], leafs = KD[1];
	
	var planeDst = UPNG.quantize.planeDst;
	var len=sb.length;
		
	var inds = new Uint8Array(len>>2), nd;
	if(sb.length<20e6)  // precise, but slow :(
		for(var i=0; i<len; i+=4) {
			var r=sb[i]*(1/255), g=sb[i+1]*(1/255), b=sb[i+2]*(1/255), a=sb[i+3]*(1/255);
			
			nd = UPNG.quantize.getNearest(root, r, g, b, a);
			inds[i>>2] = nd.ind;  tb32[i>>2] = nd.est.rgba;
		}
	else 
		for(var i=0; i<len; i+=4) {
			var r=sb[i]*(1/255), g=sb[i+1]*(1/255), b=sb[i+2]*(1/255), a=sb[i+3]*(1/255);
			
			nd = root;  while(nd.left) nd = (planeDst(nd.est,r,g,b,a)<=0) ? nd.left : nd.right;
			inds[i>>2] = nd.ind;  tb32[i>>2] = nd.est.rgba;
		}
	return {  abuf:tb.buffer, inds:inds, plte:leafs  };
}

UPNG.quantize.getKDtree = function(nimg, ps, err) {
	if(err==null) err = 0.0001;
	var nimg32 = new Uint32Array(nimg.buffer);
	
	var root = {i0:0, i1:nimg.length, bst:null, est:null, tdst:0, left:null, right:null };  // basic statistic, extra statistic
	root.bst = UPNG.quantize.stats(  nimg,root.i0, root.i1  );  root.est = UPNG.quantize.estats( root.bst );
	var leafs = [root];
	
	while(leafs.length<ps)
	{
		var maxL = 0, mi=0;
		for(var i=0; i<leafs.length; i++) if(leafs[i].est.L > maxL) {  maxL=leafs[i].est.L;  mi=i;  }
		if(maxL<err) break;
		var node = leafs[mi];
		
		var s0 = UPNG.quantize.splitPixels(nimg,nimg32, node.i0, node.i1, node.est.e, node.est.eMq255);
		var s0wrong = (node.i0>=s0 || node.i1<=s0);
		//console.log(maxL, leafs.length, mi);
		if(s0wrong) {  node.est.L=0;  continue;  }
		
		
		var ln = {i0:node.i0, i1:s0, bst:null, est:null, tdst:0, left:null, right:null };  ln.bst = UPNG.quantize.stats( nimg, ln.i0, ln.i1 );  
		ln.est = UPNG.quantize.estats( ln.bst );
		var rn = {i0:s0, i1:node.i1, bst:null, est:null, tdst:0, left:null, right:null };  rn.bst = {R:[], m:[], N:node.bst.N-ln.bst.N};
		for(var i=0; i<16; i++) rn.bst.R[i] = node.bst.R[i]-ln.bst.R[i];
		for(var i=0; i< 4; i++) rn.bst.m[i] = node.bst.m[i]-ln.bst.m[i];
		rn.est = UPNG.quantize.estats( rn.bst );
		
		node.left = ln;  node.right = rn;
		leafs[mi]=ln;  leafs.push(rn);
	}
	leafs.sort(function(a,b) {  return b.bst.N-a.bst.N;  });
	for(var i=0; i<leafs.length; i++) leafs[i].ind=i;
	return [root, leafs];
}

UPNG.quantize.getNearest = function(nd, r,g,b,a)
{
	if(nd.left==null) {  nd.tdst = UPNG.quantize.dist(nd.est.q,r,g,b,a);  return nd;  }
	var planeDst = UPNG.quantize.planeDst(nd.est,r,g,b,a);
	
	var node0 = nd.left, node1 = nd.right;
	if(planeDst>0) {  node0=nd.right;  node1=nd.left;  }
	
	var ln = UPNG.quantize.getNearest(node0, r,g,b,a);
	if(ln.tdst<=planeDst*planeDst) return ln;
	var rn = UPNG.quantize.getNearest(node1, r,g,b,a);
	return rn.tdst<ln.tdst ? rn : ln;
}
UPNG.quantize.planeDst = function(est, r,g,b,a) {  var e = est.e;  return e[0]*r + e[1]*g + e[2]*b + e[3]*a - est.eMq;  }
UPNG.quantize.dist     = function(q,   r,g,b,a) {  var d0=r-q[0], d1=g-q[1], d2=b-q[2], d3=a-q[3];  return d0*d0+d1*d1+d2*d2+d3*d3;  }

UPNG.quantize.splitPixels = function(nimg, nimg32, i0, i1, e, eMq)
{
	var vecDot = UPNG.quantize.vecDot;
	i1-=4;
	var shfs = 0;
	while(i0<i1)
	{
		while(vecDot(nimg, i0, e)<=eMq) i0+=4;
		while(vecDot(nimg, i1, e)> eMq) i1-=4;
		if(i0>=i1) break;
		
		var t = nimg32[i0>>2];  nimg32[i0>>2] = nimg32[i1>>2];  nimg32[i1>>2]=t;
		
		i0+=4;  i1-=4;
	}
	while(vecDot(nimg, i0, e)>eMq) i0-=4;
	return i0+4;
}
UPNG.quantize.vecDot = function(nimg, i, e)
{
	return nimg[i]*e[0] + nimg[i+1]*e[1] + nimg[i+2]*e[2] + nimg[i+3]*e[3];
}
UPNG.quantize.stats = function(nimg, i0, i1){
	var R = [0,0,0,0,  0,0,0,0,  0,0,0,0,  0,0,0,0];
	var m = [0,0,0,0];
	var N = (i1-i0)>>2;
	for(var i=i0; i<i1; i+=4)
	{
		var r = nimg[i]*(1/255), g = nimg[i+1]*(1/255), b = nimg[i+2]*(1/255), a = nimg[i+3]*(1/255);
		//var r = nimg[i], g = nimg[i+1], b = nimg[i+2], a = nimg[i+3];
		m[0]+=r;  m[1]+=g;  m[2]+=b;  m[3]+=a;
		
		R[ 0] += r*r;  R[ 1] += r*g;  R[ 2] += r*b;  R[ 3] += r*a;  
		               R[ 5] += g*g;  R[ 6] += g*b;  R[ 7] += g*a; 
		                              R[10] += b*b;  R[11] += b*a;  
		                                             R[15] += a*a;  
	}
	R[4]=R[1];  R[8]=R[2];  R[9]=R[6];  R[12]=R[3];  R[13]=R[7];  R[14]=R[11];
	
	return {R:R, m:m, N:N};
}
UPNG.quantize.estats = function(stats){
	var R = stats.R, m = stats.m, N = stats.N;
	
	// when all samples are equal, but N is large (millions), the Rj can be non-zero ( 0.0003.... - precission error)
	var m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], iN = (N==0 ? 0 : 1/N);
	var Rj = [
		R[ 0] - m0*m0*iN,  R[ 1] - m0*m1*iN,  R[ 2] - m0*m2*iN,  R[ 3] - m0*m3*iN,  
		R[ 4] - m1*m0*iN,  R[ 5] - m1*m1*iN,  R[ 6] - m1*m2*iN,  R[ 7] - m1*m3*iN,
		R[ 8] - m2*m0*iN,  R[ 9] - m2*m1*iN,  R[10] - m2*m2*iN,  R[11] - m2*m3*iN,  
		R[12] - m3*m0*iN,  R[13] - m3*m1*iN,  R[14] - m3*m2*iN,  R[15] - m3*m3*iN 
	];
	
	var A = Rj, M = UPNG.M4;
	var b = [Math.random(),Math.random(),Math.random(),Math.random()], mi = 0, tmi = 0;
	
	if(N!=0)
	for(var i=0; i<16; i++) {
		b = M.multVec(A, b);  tmi = Math.sqrt(M.dot(b,b));  b = M.sml(1/tmi,  b);
		if(i!=0 && Math.abs(tmi-mi)<1e-9) break;  mi = tmi;
	}	
	//b = [0,0,1,0];  mi=N;
	var q = [m0*iN, m1*iN, m2*iN, m3*iN];
	var eMq255 = M.dot(M.sml(255,q),b);
	
	return {  Cov:Rj, q:q, e:b, L:mi,  eMq255:eMq255, eMq : M.dot(b,q),
				rgba: (((Math.round(255*q[3])<<24) | (Math.round(255*q[2])<<16) |  (Math.round(255*q[1])<<8) | (Math.round(255*q[0])<<0))>>>0)  };
}
UPNG.M4 = {
	multVec : function(m,v) {
			return [
				m[ 0]*v[0] + m[ 1]*v[1] + m[ 2]*v[2] + m[ 3]*v[3],
				m[ 4]*v[0] + m[ 5]*v[1] + m[ 6]*v[2] + m[ 7]*v[3],
				m[ 8]*v[0] + m[ 9]*v[1] + m[10]*v[2] + m[11]*v[3],
				m[12]*v[0] + m[13]*v[1] + m[14]*v[2] + m[15]*v[3]
			];
	},
	dot : function(x,y) {  return  x[0]*y[0]+x[1]*y[1]+x[2]*y[2]+x[3]*y[3];  },
	sml : function(a,y) {  return [a*y[0],a*y[1],a*y[2],a*y[3]];  }
}

UPNG.encode.concatRGBA = function(bufs) {
	var tlen = 0;
	for(var i=0; i<bufs.length; i++) tlen += bufs[i].byteLength;
	var nimg = new Uint8Array(tlen), noff=0;
	for(var i=0; i<bufs.length; i++) {
		var img = new Uint8Array(bufs[i]), il = img.length;
		for(var j=0; j<il; j+=4) {  
			var r=img[j], g=img[j+1], b=img[j+2], a = img[j+3];
			if(a==0) r=g=b=0;
			nimg[noff+j]=r;  nimg[noff+j+1]=g;  nimg[noff+j+2]=b;  nimg[noff+j+3]=a;  }
		noff += il;
	}
	return nimg.buffer;
}

UPNG.encode.dither = function(sb, w, h, plte, tb, oind) {
	
	function addErr(er, tg, ti, f) {
		tg[ti]+=(er[0]*f)>>4;  tg[ti+1]+=(er[1]*f)>>4;  tg[ti+2]+=(er[2]*f)>>4;  tg[ti+3]+=(er[3]*f)>>4;  
	}
	function N(x) {  return Math.max(0, Math.min(255, x));  }
	function D(a,b) {  var dr=a[0]-b[0], dg=a[1]-b[1], db=a[2]-b[2], da=a[3]-b[3];  return (dr*dr + dg*dg + db*db + da*da);  }
	
	
	var pc=plte.length, nplt = [], rads=[];
	for(var i=0; i<pc; i++) {
		var c = plte[i];
		nplt.push([((c>>>0)&255), ((c>>>8)&255), ((c>>>16)&255), ((c>>>24)&255)]);
	}
	for(var i=0; i<pc; i++) {
		var ne=0xffffffff, ni=0;
		for(var j=0; j<pc; j++) {  var ce=D(nplt[i],nplt[j]);  if(j!=i && ce<ne) {  ne=ce;  ni=j;  }  }
		var hd = Math.sqrt(ne)/2;
		rads[i] = ~~(hd*hd);
	}
		
	var tb32 = new Uint32Array(tb.buffer);
	var err = new Int16Array(w*h*4);
	
	for(var y=0; y<h; y++) {
		for(var x=0; x<w; x++) {
			var i = (y*w+x)*4;
			
			var cc = [N(sb[i]+err[i]), N(sb[i+1]+err[i+1]), N(sb[i+2]+err[i+2]), N(sb[i+3]+err[i+3])];
			
			var ni=0, nd = 0xffffff;
			for(var j=0; j<pc; j++) {
				var cd = D(cc,nplt[j]);
				if(cd<nd) {  nd=cd;  ni=j;  }
			}  
			
			//ni = oind[i>>2];
			var nc = nplt[ni];
			var er = [cc[0]-nc[0], cc[1]-nc[1], cc[2]-nc[2], cc[3]-nc[3]];
			
			//addErr(er, err, i+4, 16);
			
			//*
			if(x!=w-1) addErr(er, err, i+4    , 7);
			if(y!=h-1) {
				if(x!=  0) addErr(er, err, i+4*w-4, 3);
				           addErr(er, err, i+4*w  , 5);
				if(x!=w-1) addErr(er, err, i+4*w+4, 1);  //*/
			}
		
			oind[i>>2] = ni;  tb32[i>>2] = plte[ni];
		}
	}
}

//: - - - - - - - - - - - - - ---- - - - - - - - - - - - - - :// // [000_3RD][206][---]
//:                                                          :// // [000_3RD][206][---]
//:    WEB_URL : github.com/photopea/UPNG.js                 :// // [000_3RD][206][---]
//:    SSH_URL : git@github.com:photopea/UPNG.js.git         :// // [000_3RD][206][---]
//:                                                          :// // [000_3RD][206][---]
//:===================================:000_3RD:UPNG_LIB:[206]:// // [000_3RD][206][---]
//:TOP_LEVEL_FUNCTIONS:[205]:================================://
//:TOP_LEVEL_HELPER_FUNCTIONS:[096]:=========================://

    //: TAG[ helper-function-section ]:::::::::::::::::::://     // [215]
    //: TAG[ helper_function_section ]:::::::::::::::::::://     // [215]
    //: TAG[ helper function section ]:::::::::::::::::::://     // [215]
    //: TAG[ top-level-helper-functions | toplevelhelp  ]://     // [335]
    //: TAG[ top_level_helper_functions | godfuckinghelp]://     // [335]
    //: TAG[ toplevelhelperfunctions | top_level_help   ]://     // [335]
    //: TAG[ top-level-helper  | top_level_helper       ]://     // [335]
    //: TAG[ toplevelhelper | you-need-serious-help-bro ]://     // [335]
    //: TAG[ top-level-helpers | top_level_helpers      ]://     // [335]
    //: TAG[ toplevelhelpers | get-yourself-some-help   ]://     // [335]

    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [205]
    //:                                                  ://     // [205]
    //:  If the function has no sub-system namespace on  ://     // [205]
    //:  it, then it goes into this section if you can't ://     // [205]
    //:  think of any other more specific place it       ://     // [205]
    //:  should go. This is the "FUNCTION" equivalent    ://     // [205]
    //:  of "top level C_O_N_S_T , D_A_T_A , L_U_T , etc"://     // [205]
    //:                                                  ://     // [205]
    //:  -KanjiCoder should be clubbing right now.       ://     // [205]
    //:              KanjiCoder is getting old.          ://     // [205]
    //:                                                  ://     // [205]
    //:   "You aren't getting old, you are old"          ://     // [205]
    //:   -KanjiCoder's brother.                         ://     // [205]
    //:                                                  ://     // [205]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [205]
                                                                 // [---]
    //:#_BAK_AND_NEX_#:[441]:============================://     // [441]
    //:#_NEX_AND_BAK_#:[441]:============================://     // [441]
                                                                 // [441]
        const   F_BAK = function                                 // [441]
        PRIVATE_F_BAK(                                           // [441]
            i_val                                                // [441]
        ,   i_min                                                // [441]
        ,   i_max                                                // [441]
        ){                                                       // [441]
            let o_val =( i_val );                                // [441]
                                                                 // [441]
            if( (i_val < i_min) || (i_val > i_max) ){            // [441]
                ERR("[STARTED_OUT_OF_BOUNDS:BAK]");              // [441]
            }else                                                // [441]
            if( (i_val >=i_min) && (i_val <=i_max) ){            // [441]
                                                                 // [441]
                if( i_val > i_min ){                             // [441]
                    o_val-- ;                                    // [441]
                };;                                              // [441]
            }else{                                               // [441]
                ERR("[WTF_2022_11_07_7PM:BAK]");                 // [441]
            };;                                                  // [441]
                                                                 // [441]
            return( o_val );                                     // [441]
        };;                                                      // [441]
                                                                 // [441]
        const   F_FWD ="[YOU_MEAN:F_NEX]" ;                      // [441]
        const   F_FOR ="[YOU_MEAN:F_NEX]" ;                      // [441]
        const   F_NXT ="[YOU_MEAN:F_NEX]" ;                      // [441]
                                                                 // [441]
        const   F_NEX = function                                 // [441]
        PRIVATE_F_NEX(                                           // [441]
            i_val                                                // [441]
        ,   i_min                                                // [441]
        ,   i_max                                                // [441]
        ){                                                       // [441]
            let o_val =( i_val );                                // [441]
                                                                 // [441]
            if( (i_val < i_min) || (i_val > i_max) ){            // [441]
                ERR("[STARTED_OUT_OF_BOUNDS:NEX]");              // [441]
            }else                                                // [441]
            if( (i_val >=i_min) && (i_val <=i_max) ){            // [441]
                                                                 // [441]
                if( i_val < i_max ){                             // [441]
                    o_val++ ;                                    // [441]
                };;                                              // [441]
            }else{                                               // [441]
                ERR("[WTF_2022_11_07_7PM:NEX]");                 // [441]
            };;                                                  // [441]
                                                                 // [441]
            return( o_val );                                     // [441]
        };;                                                      // [441]
    //:============================:#_BAK_AND_NEX_#:[441]://     // [441]
    //:============================:#_NEX_AND_BAK_#:[441]://     // [441]
    //:#_IS_IT_A_FUCKING_ARRAY_#:[369]:==================://     // [369]
                                                                 // [369]
        const F_ASS_ARR_U08 = "[NO_ASSERT_USE:YES_ARR_U08]";     // [369]
                                                                 // [369]
        const   F_YES_ARR_U08 = function                         // [369]
        PRIVATE_F_YES_ARR_U08(                                   // [369]
                                                                 // [369]
            i_arr_u08                                            // [369]
        ){                                                       // [369]
            var o_k=( 1 );                                       // [369]
            let arr=( i_arr_u08 );                               // [369]
                                                                 // [369]
            if( !(arr /**FALSY?**/   ) ){ o_k = 0 ; }else        // [369]
            if( !(arr.byteLength >= 0) ){ o_k = 0 ; }else{       // [369]
                                                                 // [369]
                let iof=( i_arr_u08 instanceof Uint8Array );     // [369]
                if(!iof){                 o_k = 0 ; };;;;;;;     // [369]
            };;                                                  // [369]
                                                                 // [369]
            return( o_k );                                       // [369]
        };;                                                      // [369]
    //:==================:#_IS_IT_A_FUCKING_ARRAY_#:[369]://     // [369]
    //:#_SAFE_TYPEOF_#:[354]:============================://     // [---]
                                                                 // [354]
        const   F_TYPESTR = function                             // [354]
        PRIVATE_F_TYPESTR(                                       // [354]
                                                                 // [354]
            i_whateva                                            // [354]
        ){                                                       // [354]
            var o_typ =( "[nil][o_typ:was_never_set]" );         // [354]
                                                                 // [354]
            try{                                                 // [354]
                                                                 // [354]
                o_typ =( typeof i_whateva );                     // [354]
                                                                 // [354]
            }catch( i_err ){                                     // [354]
                //:--------------------------------------://     // [354]
                //: @EVILTYP@ : A "EVIL TYPE". It is a   ://     // [354]
                //:           : unknown type that is     ://     // [354]
                //:           : so evil it will fuck you ://     // [354]
                //:           : up for just trying to    ://     // [354]
                //:           : look at it.              ://     // [354]
                //:--------------------------------------://     // [354]
                o_typ = "[EVILTYP]" ;                            // [354]
            };;                                                  // [354]
                                                                 // [354]
            return( o_typ );                                     // [354]
        };;                                                      // [354]
    //:#============================:_SAFE_TYPEOF_#:[354]://     // [---]
    //:#_STRING_REPLACE_ALL_#:[355]:=====================://     // [355]
                                                                 // [355]
        const   F_REPLACE_BOD_TOK_REP = "[FUCKING_WRONG!!]";     // [355]
        const   F_REPLACE_BOD_TOK = "[REPLACE_BOD_FIN_REP]";     // [355]
        const   F_REPLACE         = "[REPLACE_BOD_FIN_REP]";     // [355]
                                                                 // [355]
        const   F_REPLACE_BOD_FIN_REP = function                 // [355]
        PRIVATE_F_REPLACE_BOD_FIN_REP(                           // [355]
                                                                 // [355]
            i_bod //: @i_bod@ : The BODY/MAIN string. :::://     // [355]
        ,   i_fin //: @i_fin@ : The FINDME    string. :::://     // [355]
        ,   i_rep //: @i_rep@ : The REPLACEME string. :::://     // [355]
        ){                                                       // [355]
            let o_str = "[nil][o_str:forgot_to_set_2022]" ;      // [355]
                                                                 // [355]
            let e_m = ""; //: @e_m@ : Error_Message :::::://     // [355]
            let h_e =(0); //: @h_e@ : Has____Error? :::::://     // [355]
                                                                 // [355]
            let typ_bod = F_TYPESTR( i_bod );                    // [355]
            let typ_fin = F_TYPESTR( i_fin );                    // [355]
            let typ_rep = F_TYPESTR( i_rep );                    // [355]
                                                                 // [355]
            if( "string" !== typ_bod ){ h_e=( 1 );               // [355]
                                                                 // [355]
                e_m +=( "("+"[typ_bod]:" + typ_bod +")" );       // [355]
            };;                                                  // [355]
            if( "string" !== typ_fin ){ h_e=( 1 );               // [355]
                                                                 // [355]
                e_m +=( "("+"[typ_fin]:" + typ_fin +")" );       // [355]
            };;                                                  // [355]
            if( "string" !== typ_rep ){ h_e=( 1 );               // [355]
                                                                 // [355]
                e_m +=( "("+"[typ_rep]:" + typ_rep +")" );       // [355]
            };;                                                  // [355]
                                                                 // [355]
            if( 1 === h_e ){                                     // [355]
                                                                 // [355]
                o_str =( e_m );                                  // [355]
            }else                                                // [355]
            if( 0 === h_e ){                                     // [355]
                                                                 // [---]
                if( "function" ===typeof(i_bod.replaceAll)){     // [356]
                                                                 // [---]
                    o_str = i_bod.replaceAll( i_fin,i_rep );     // [355]
                                                                 // [---]
                }else{  //::::::::::::::::::::::::::[356]://     // [356]
                                                                 // [356]
                    //:#_REMOVED_REGEX_CODE_2022_#:::://         // [356]
                                                                 // [356]
                    o_str =( i_bod  ////////////////////         // [356]
                        .split( i_fin )     ////////////         // [356]
                        .join(  i_rep )     ////////////         // [356]
                    );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         // [356]
                                                                 // [356]
                };; //::::::::::::::::::::::::::::::[356]://     // [356]
                                                                 // [---]
            }else{                                               // [355]
                //: @DONT_THROW_ERROR_HERE@ :::::::::::::://     // [355]
                o_str = "[HOW_THE_FUCK_ARE_YOU_MAN_2022]"  ;     // [355]
            };;                                                  // [355]
                                                                 // [355]
            return( o_str );                                     // [355]
        };;                                                      // [355]
    //:=====================:#_STRING_REPLACE_ALL_#:[355]://     // [355]
    //:#_ROTATE_A_TOUCHING_VALUE_#:[335]:================://     // [---]
                                                                 // [335]
        const F_TO4_ROT_TO4 = "[FIX_IS_BELOW_2022_10_10]"  ;     // [335]
        const F_ROT_TO4_TO4 = "[FIX_IS_BELOW_2022_10_10]"  ;     // [335]
        const F_RO4_TO4_TO4 = "[FIX_IS_BELOW_2022_10_10]"  ;     // [335]
                                                                 // [335]
        const   F_TO4_RO4_TO4 = function                         // [335]
        PRIVATE_F_TO4_RO4_TO4(                                   // [335]
                                                                 // [335]
            i_to4  //: Input - Touching 4-bit value     :://     // [335]
        ,   i_ro4  //: Input - Rotation Enum[ 0|1|2|3 ] :://     // [335]
                                                                 // [335]
        ){  //:BEGFUNC_BODY[ F_TO4_RO4_TO4 ]::::::::[335]://     // [335]              
                                                                 // [--------]
            var to2_x =( 0 );                                    //      [336]
            var to2_y =( 0 );                                    //      [336]
                                                                 //      [336]
            if( 0 == i_ro4 ){                                    //      [336]
                to2_x =( d_rotclok_000_r_x_to4_to2[ i_to4 ]);    // [337][336]
                to2_y =( d_rotclok_000_r_y_to4_to2[ i_to4 ]);    // [337][336]
            }else                                                //      [336]
            if( 1 == i_ro4 ){                                    //      [336]
                to2_x =( d_rotclok_090_r_x_to4_to2[ i_to4 ]);    // [337][336]
                to2_y =( d_rotclok_090_r_y_to4_to2[ i_to4 ]);    // [337][336]
            }else                                                //      [336]
            if( 2 == i_ro4 ){                                    //      [336]
                to2_x =( d_rotclok_180_r_x_to4_to2[ i_to4 ]);    // [337][336]
                to2_y =( d_rotclok_180_r_y_to4_to2[ i_to4 ]);    // [337][336]
            }else                                                //      [336]
            if( 3 == i_ro4 ){                                    //      [336]
                to2_x =( d_rotclok_270_r_x_to4_to2[ i_to4 ]);    // [337][336]
                to2_y =( d_rotclok_270_r_y_to4_to2[ i_to4 ]);    // [337][336]
            }else{                                               //      [336]
                ERR("[INVALID_ROTATION_ENUM_2022]");             //      [336]
            };;                                                  //      [336]
                                                                 // [--------]
            //:!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!://     // [336]
            //: CANNOT_CALL[ F_TO2_X_TO2_Y_TO4 ]         ://     // [336]
            //: HELPER FUNCTION BECAUSE IT IS BELOW      ://     // [336]
            //: THIS POINT. JUST INLINE IT!!             ://     // [336]
            //:!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!://     // [336]
                                                                 // [336]
            //:#_F_TO2_X_TO2_Y_TO4_INLINED_#:[336]:------://     // [336]
                                                                 // [336]
                var o_to4glue =( 0x00                            // [336]
                                                                 // [336]
                |   ( to2_x << 2 )                               // [336]
                |   ( to2_y << 0 )                               // [336]
                );;                                              // [336]
            //:------:#_F_TO2_X_TO2_Y_TO4_INLINED_#:[336]://     // [336]
                                                                 // [336]
            return( o_to4glue );                                 // [336]
                                                                 // [---]
        };; //:ENDFUNC_BODY[ F_TO4_RO4_TO4 ]::::::::[335]://     // [335]
    //:================:#_ROTATE_A_TOUCHING_VALUE_#:[335]://     // [335]
    //:#_GLUE_TOUCH_#:[334]:=============================://     // [334]
                                                                 // [334]
        const   F_TO2_X_TO2_Y_TO4GLUE = "[FIX_IS_BELOW]";        // [334]
        const   F_TO2_TO2_TO4         = "[FIX_IS_BELOW]";        // [334]
                                                                 // [334]
        const   F_TO2_X_TO2_Y_TO4 = function    //:::::::://     // [334]
        PRIVATE_F_TO2_X_TO2_Y_TO4(              //:::::::://     // [334]
                                                                 // [334]
            i_to2_x //: @i_to2_x@ : i_-Touching2Bits - X ://     // [334]
        ,   i_to2_y //: @i_to2_y@ : i_-Touching2Bits - Y ://     // [334]
                                                                 // [334]
        ){  //:::::::::::::::::::::::::::::::::::::::::::://     // [334]
                                                                 // [334]
            if( d_eci >= 1 ){                                    // [334]
                ASS( i_to2_x >=   0 , "[TO2_X:NEG]" );           // [334]
                ASS( i_to2_x <= 0x3 , "[TO2_X:OOB]" );           // [334]
                ASS( i_to2_y >=   0 , "[TO2_Y:NEG]" );           // [334]
                ASS( i_to2_y <= 0x3 , "[TO2_Y:OOB]" );           // [334]
            };;                                                  // [334]
                                                                 // [334]
            var o_to4glue =( 0x00                                // [334]
                                                                 // [334]
            |   ( i_to2_x << 2 )                                 // [334]
            |   ( i_to2_y << 0 )                                 // [334]
                                                                 // [334]
            );;                                                  // [334]
                                                                 // [334]
            return( o_to4glue );                                 // [334]
                                                                 // [334]
        };; //:::::::::::::::::::::::::::::::::::::::::::://     // [334]
    //:=============================:#_GLUE_TOUCH_#:[334]://     // [334]
    //:#_RANDOM_INTEGER_#:[314]:=========================://     // [314]
        const   F_RANDINT = function                             // [314]
        PRIVATE_F_RANDINT(                                       // [314]
                                                                 // [314]
            i_bou /** Input Upper Bound **/                      // [314]
        ){        //: #ATF_RANDINT#     ://                      // [314]
            var o_i32 =(                                         // [314]
                Math.floor(                                      // [314]
                    Math.random() * (i_bou+1) ));;               // [314]
                                                                 // [314]
            ASS( o_i32 >= 0     , "[o_i32:ASS_001]" );           // [314]
            ASS( o_i32 <= i_bou , "[o_i32:ASS_002]" );           // [314]
            return( o_i32 );                                     // [314]
        };;                                                      // [314]
                                                                 // [314]
        const   F_RANDINT_SKIPVAL = function                     // [314]
        PRIVATE_F_RANDINT_SKIPVAL(                               // [314]
                                                                 // [314]
            i_bou  //: UpperBound, lower always ZERO ://         // [314]
        ,   i_val  //: Value To Skip ::::::::::::::::://         // [314]
        ){                                                       // [314]
            if( !( i_val >= 0 && i_val <= i_bou ) ){             // [314]
                ERR("[Skip_Value_Not_On_Range]");                // [314]
            };;                                                  // [314]
                                                                 // [314]
            var o_i32 =( 0 );                                    // [314]
                                                                 // [314]
            //: @bmo@ : Bound_Minus_One ://                      // [314]
            //: @vmo@ : Value_Minus_One ://                      // [314]
                                                                 // [314]
            var bmo =( i_bou - 1 );;;;;;;;                       // [314]
            var vmo =( F_RANDINT( bmo ) );                       // [314]
                                                                 // [314]
            if( vmo < i_val ){                                   // [314]
                                                                 // [314]
                o_i32 =( vmo * 1 ); //:KEEP://                   // [314]
            }else{                                               // [314]
                o_i32 =( vmo + 1 ); //:JUMP://                   // [314]
            };;                                                  // [314]
                                                                 // [314]
            if( d_eco >= 1 ){                                    // [314]
                ASS( o_i32 >= 0     , "[@RISV@:001]" );          // [314]
                ASS( o_i32 <= i_bou , "[@RISV@:001]" );          // [314]
            };;                                                  // [314]
            return( o_i32 );                                     // [314]
        };;                                                      // [314]
                                                                 // [---]
        const   F_RANDINT_SKIPVAL_MIN_MAX_CUR = function         // [470]
        PRIVATE_F_RANDINT_SKIPVAL_MIN_MAX_CUR(                   // [470]
                                                                 // [470]
            i_min  //: Lower Inclusive Bound ::::::::://         // [470]
        ,   i_max  //: Upper Inclusive Bound ::::::::://         // [470]
        ,   i_cur  //: Value To Skip ::::::::::::::::://         // [470]
                                                                 // [470]
        ){  //:BOD_BEG[ RI_SV_MMC ]::::::::::::::::::://         // [470]
            if( d_eci >= 1 ){                                    // [470]
                ASS( i_min <= i_max ,"[MAX_MIN_2022]");          // [470]
                ASS( i_min >= 0     ,"[MIN_GT0_2022]");          // [470]
                ASS( i_max >= 0     ,"[MAX_GT0_2022]");          // [470]
            };;                                                  // [470]
                                                                 // [470]
            let rng =( i_max - i_min );                          // [470]
                                                                 // [470]
            let val =(F_RANDINT_SKIPVAL( rng , i_cur ));         // [470]
                                                                 // [470]
            let o_val=( i_min + val );                           // [470]
                                                                 // [470]
            return( o_val );                                     // [470]
                                                                 // [470]
        };; //:BOD_END[ RI_SV_MMC ]::::::::::::::::::://         // [470]
                                                                 // [---]
    //:=========================:#_RANDOM_INTEGER_#:[314]://     // [314]
    //:#_NEW_NEVER_NO_PROMISE_#:[350]:===================://     // [350][---]
                                                                 // [350][---]
        //: #_ACCEPTO_REJECTO_EXECUTO_# :::::::::::::::::://     // [350][217]
        const ACCEPTO_REJECTO_EXECUTO  = "[LAX_COMMA_HACK]"      // [350][---]
        ,    F_NEVERNO_ACCEPTO = "[NEVERNO:#_NO_ACCEPTO_#]"      // [350][217]
        ,    F_NEVERNO_EXECUTO = "[NEVERNO:#_NO_EXECUTO_#]"      // [350][217]
        ,    F_NEVERNO_REJECTO = "[NEVERNO:#_NO_REJECTO_#]"      // [350][217]
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [350][---]
                                                                 // [350][217]
        const   F_NEVERNO = function    ////////////////////     // [350][217]
        PRIVATE_F_NEVERNO(              ////////////////////     // [350][217]
                                                                 // [350][217]
            i_executo                                            // [350][217]
                                                                 // [350][217]
        ){  //:BEGBODY[ F_NEVERNO ]::::::::::::::::::::::://     // [350][217]
                                                                 // [350][217]
            if(typeof i_executo !== "function" ){                // [350][217]
                ERR("[I_EXECUTO:SHOULD_BE_EXECUTOR_FUNC]");      // [350][217]
            };;                                                  // [350][217]
            if( i_executo.length !== 1 ){                        // [350][217]
                //:#_NEVERNO_PROMISES_NEVER_SAYS_NO_#://         // [350][217]
                ERR("[#_EXECUTO_1_FORMAL_PARAM_ONLY_#]");        // [350][217]
            };;                                                  // [350][217]
                                                                 // [350][217]
            var o_neverno = new Promise( i_executo );            // [350][217]
                                                                 // [350][217]
            return( o_neverno );                                 // [350][217]
                                                                 // [350][217]
        };; //:ENDBODY[ F_NEVERNO ]::::::::::::::::::::::://     // [350][217]
                                                                 // [350][---]
    //:===================:#_NEW_NEVER_NO_PROMISE_#:[350]://     // [350][---]

    const   F_STR_ASC = function                                 // [215]
    PRIVATE_F_STR_ASC(                                           // [215]
                                                                 // [215]
        i_str                                                    // [215]
    ){                                                           // [215]
        if( d_eci >= 1 ){                                        // [215]
                                                                 // [215]
            if( "string" !== typeof i_str ){                     // [215]
                ERR("[ITSNOTAFUCKINGSTRINGNORISITBUTTER]");      // [215]
            };;                                                  // [215]
            if( 1 !== i_str.length ){                            // [215]
                ERR("[I_LIED_THESE_ARE_REALLY_CHARS]");          // [215]
            };;                                                  // [215]
        };;                                                      // [215]
                                                                 // [215]
        var     o_asc = ( i_str.charCodeAt(0) );                 // [215]
        return( o_asc ); //:@o_asc@:Output_Ascii://              // [215]
    };;                                                          // [215]

    const   F_NEX_PO2 = function                                 // [214]
    PRIVATE_F_NEX_PO2(                                           // [214]
                                                                 // [214]
        i_u32                                                    // [214]
    ){                                                           // [214]
        if( d_eci >= 1 ){                                        // [214]
            ASS_INT( i_u32 , "[NEX_PO2_ONLY_TAKES_INTS]" );      // [214]
            if( i_u32 < 0         ){ ERR("[NEXPOSNEG]"); };      // [214]
            if( i_u32 > 0xFFFFFFFF){ ERR("[NEXPOSOOB]"); };      // [214]
        };;                                                      // [214]
                                                                 // [214]
        var dex =(   0 ); //:Iterator          ://               // [214]
        var b_i =( 0-1 ); //:last set bit index://               // [214]
        var bit =(   0 ); //:Literally A bit   ://               // [214]
        for(dex = 0 ; dex <=(32-1) ; dex ++ ){                   // [214]
                                                                 // [214]
            bit = ( i_u32 >>> dex )&(0x1) ;;;;                   // [214]
            if( 1 === bit ){ b_i = dex ; }else                   // [214]
            if( 0 === bit ){             }else                   // [214]
            { ERR("[NOT_ONE_OR_ZERO_BOI]"); };                   // [214]
        };;                                                      // [214]
                                                                 // [214]
        if( b_i >= (32-1) ){                                     // [214]
            ERR("[NEXPOW2WOULDOVERFLOW]");                       // [214]
        };;                                                      // [214]
                                                                 // [214]
        var o_po2 =( ( 0x1 << (b_i+1) )>>>0 );                   // [214]
        return( o_po2 );                                         // [214]
    };;                                                          // [214]

    const   F_EVT_N10 = function                                 // [205][MAE][203][-------------]
    PRIVATE_F_EVT_N10(                                           // [205][MAE][203][-------------]
                                                                 // [205][MOV][203][-------------]
        i_evt_key                                                // [205][MOV][203][-------------]
    ){                                                           // [205][MOV][203][-------------]
        //:[ATF]:--------------------------------------------:// // [205][--------][-------------]
        //:                                                  :// // [205][--------][-------------]
        //: ( evt )===>( n10 )                               :// // [205][--------][-------------]
        //:                                                  :// // [205][--------][-------------]
        //: Turns a keyboard event into[ 0 - 9 ]for the      :// // [205][--------][-------------]
        //: numpad if that keyboard event is from the        :// // [205][--------][-------------]
        //: [ 0 - 9 ] keys on the numpad.                    :// // [205][--------][-------------]
        //:                                                  :// // [205][--------][-------------]
        //: Function is used by[ KONAMIC ]AND[ KEYMAST ]     :// // [205][--------][-------------]
        //: and thus has been turned into a top-level        :// // [205][--------][-------------]
        //: function to avoid breaking my dependency rules.  :// // [205][--------][-------------]
        //:                                                  :// // [205][--------][-------------]
        //:--------------------------------------------:[ATF]:// // [205][--------][-------------]
                                                                 // [205][MOV][203][-------------]
        var o_n10=( 0-1 );     //:AKA[ pad_num ]://              // [205][MOV][203][MAE][105][---]
        if( i_evt_key.keyCode >=  96  //:numpad0://              // [205][MOV][203][MOV][105][---]
        &&  i_evt_key.keyCode <= 105  //:numpad9://              // [205][MOV][203][MOV][105][---]
        ){                                                       // [205][MOV][203][MOV][105][---]
            let     k_c =( i_evt_key.keyCode );                  // [205][MOV][203][MOV][131][---]
            o_n10=( k_c - 96 );                                  // [205][MOV][203][MAE][131][105]
                                                                 // [---]
            if( d_log_npk >= 1 ){    ;;;;;;;;;;;;;;;;;;;;;;;     // [236]
                LOG( "[EVT_N10:NUMPAD_KEYCODE]:" , k_c   );      // [205][MOV][203][MAE][131][---]
                LOG( "[EVT_N10:NUMPAD_PAD_NUM]:" , o_n10 );      // [205][MOV][203][MAE][131][---]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
        };;                                                      // [205][MOV][203][MOV][105][---]
                                                                 // [205][MOV][-------------][---]
        return( o_n10 );                                         // [205][MOV][203][--------][---]
                                                                 // [205][MOV][203][-------------]
    };; //:ENDFUNC[ EVT_N10 ]:::::::::::::::::::::::::::::::::// // [205][MOV][203][-------------]

    const F_TOG = function PRIVATE_F_TOG(                        // [096]
                                                                 // [096]
        i_obj //:object_containing_var ://                       // [096]
    ,   i_nam //:varible_name_to_toggle://                       // [096]
    ){                                                           // [096]
        var val =( i_obj[ i_nam ] );                             // [096]
                                                                 // [096]
        if( 0 === val ){ i_obj[ i_nam ]=( 1 ); }else             // [096]
        if( 1 === val ){ i_obj[ i_nam ]=( 0 ); }else             // [096]
        {                                                        // [096]
            ERR("[NON_TOGGLE_VAR]");                             // [096]
        };;                                                      // [096]
        return;/**VOID**/                                        // [096]
    };;                                                          // [096]
                                                                 // [---]
    ////  F_NEX = "[USE:F_CYC:(For Cycling)]" ;                  // [441][103]
    ////  F_BAK = "[USE:F_CYC:(For Cycling)]" ;                  // [441][103]
                                                                 // [103]
    const F_CYC = function PRIVATE_F_CYC(                        // [103]
                                                                 // [103]
        //:#_WHY_NOT_CALL_IT_NEXT_#://                           // [103]
                                                                 // [103]
        i_obj   //:object_containing_var  ...............://     // [103]
    ,   i_nam   //:varible_name_to_toggle ...............://     // [103]
    ,   i_arr   //:Array_Of_Valid_Values_To_Cycle_Through://     // [103]
    ){                                                           // [103]
        //:[ATF]:----------------------------------------://     // [103]
        //:                                              ://     // [103]
        //: Like[ F_TOG ]but cycles forward through      ://     // [103]
        //: an array of valid [options/values].          ://     // [103]
        //:                                              ://     // [103]
        //:----------------------------------------:[ATF]://     // [103]
                                                                 // [103]
        var val =( i_obj[ i_nam ]       );                       // [103]
        var dex =( i_arr.indexOf( val ) ); ASS( dex >= 0 );      // [103]
        var nex =( dex + 1              );                       // [103]
        var m_i =( i_arr.length - 1     );                       // [103]
        if( nex > m_i ){   nex = 0 ;    };                       // [103]
                                                                 // [103]
        i_obj[ i_nam ]=(  i_arr[ nex ]  );                       // [103]
    };;                                                          // [103]

//:=========================:TOP_LEVEL_HELPER_FUNCTIONS:[096]://
//:================================:TOP_LEVEL_FUNCTIONS:[205]://
//:SHUTARR:[077]:============================================://

    const F_SHUTARR = function PRIVATE_F_SHUTARR(                //      [077]
                                                                 //      [077]
        i_arr                                                    //      [077]
    ){                                                           //      [077]
        if( firefox ){                                           //      [077]
                                                                 //      [077]
            /** Do nothing because idiots at firefox **/         //      [077]
            /** don't know how to correctly implement**/         //      [077]
            /** the god damned spec. ............... **/         //      [077]
        }else{                                                   //      [077]
                                                                 //      [077]
            Object.seal( i_arr );                                //      [077]
        };;                                                      //      [077]
        return( i_arr ); //:AddedForChaining://                  // [109]
    };;                                                          //      [077]

//:============================================:SHUTARR:[077]://
//:F32_ARRAY:[075]:==========================================://

    const F_ARR_F32 = function PRIVATE_F_ARR_F32(                // [075]
                                                                 // [075]
        i_len /** Length Of Array **/                            // [075]
    ){                                                           // [075]
        var o_arr = "[nil][f_arr_f32:o_arr]" ;                   // [075]
        var   len = arguments.length ;                           // [075]
        var   dex = 0 ;                                          // [075]
                                                                 // [075]
        if( len !=( i_len + 1 ) ){                               // [075]
            ERR( "[F_ARR_F32:#IAI#]" );                          // [075]
        }else{                                                   // [075]
            o_arr = new Float32Array( i_len );                   // [075]
            for( dex = 0 ; dex <=( i_len-1 ) ; dex ++ ){         // [075]
                                                                 // [075]
                o_arr[ dex ] = (                                 // [075]
                    (0.0) + ( arguments[ dex + 1 ] )             // [075]
                );;                                              // [075]
            };;                                                  // [075]
        };;                                                      // [075]
        F_SHUTARR( o_arr /** #FAS# **/ );                        // [077][075]
        return( o_arr );                                         // [075]
    };;                                                          // [075]
                                                                 // [---]
    const F_CAR_F32 = function PRIVATE_F_CAR_F32(                // [075]
                                                                 // [075]
        i_len                                                    // [075]
    ){                                                           // [075]
        //: #_DRY_INSTEAD_OF_KISS_WARNING_BECAUSE_LAZY_# ://     // [075]
                                                                 // [075]
        if( i_len <= 0 ){ ERR("[#YSMITF#:F32]" ); };             // [076][075]
                                                                 // [075]
        var                o_arr = "[nil][f_car_f32]" ;          // [075]
                           o_arr =(                              // [075]
                                                                 // [075]
            F_ARR_F32.apply( null , arguments )                  // [075]
        );;                                                      // [075]
        //- Object.freeze( o_arr ); #KFNFR# -//                  // [075]
        return(            o_arr );                              // [075]
    };;                                                          // [075]

//:==========================================:F32_ARRAY:[075]://

//:I32_ARRAY:[114]:==========================================:// // [114]
                                                                 // [114]
    //:LOCAL_INDEX:==========================================:// // [114]
    //:                                                      :// // [114]
    //:     1 : F_ARR_I32 : NonConst Array Of Int32          :// // [114]
    //:     2 : F_CAR_I32 : Constant Array Of Int32          :// // [114]
    //:                                                      :// // [114]
    //:==========================================:LOCAL_INDEX:// // [114]
                                                                 // [114]
                                                                 // [114]
    //:TAG[ new int32 array | NEW_I32 | NEW_ARR_I32 ]            // [114]
                                                                 // [114]
    const F_I32_ARR ="[FIX:F_ARR_I32]";                          // [114]
                                                                 // [114]
    const F_ARR_I32 = function PRIVATE_F_ARR_I32(                // [114]
                                                                 // [114]
        i_len /** Length Of Array **/                            // [114]
    ){                                                           // [114]
        //:::::::::::::::::::::::::::::::::::::://               // [114]
        //: @ARR_I32@ : ARRay of Int32 Values  ://               // [114]
        //:::::::::::::::::::::::::::::::::::::://               // [114]
                                                                 // [114]
        var o_arr = "[nil][f_arr_i32:o_arr]" ;                   // [114]
        var   len = arguments.length ;                           // [114]
        var   dex = 0 ;                                          // [114]
        var   arg = 0 ;                                          // [114]
                                                                 // [114]
        if( len !=( i_len + 1 ) ){                               // [114]
            ERR( "[F_ARR_I32:#IAI#]" );                          // [114]
        }else{                                                   // [114]
            o_arr = new Int32Array(i_len );                      // [114]
            for( dex = 0 ; dex <=( i_len-1 ) ; dex ++ ){         // [114]
                                                                 // [114]
                arg = arguments[ dex + 1 ];                      // [114]
                                                                 // [114]
                //:I32_SPECIFIC_ERROR_CHECKING:----------://     // [114]
                                                                 // [114]
                    if(!((arg <= 0)||(arg >= 0))){               // [114]
                        ERR("[NAN_I32]" );                       // [114]
                    };;                                          // [114]
                    if( Math.floor( arg ) != arg ){              // [114]
                        ERR("[I32_ARR:FLOAT_INPUT]");            // [114]
                    };;                                          // [114]
                //:----------:I32_SPECIFIC_ERROR_CHECKING://     // [114]
                                                                 // [114]
                o_arr[ dex ] = ( arg );                          // [114]
            };;                                                  // [114]
        };;                                                      // [114]
        F_SHUTARR( o_arr /** #FAS# **/ );                        // [114]
        return( o_arr );                                         // [114]
    };;                                                          // [114]
                                                                 // [114]
    const F_I32_CAR ="[FIX:F_CAR_I32]";                          // [114]
                                                                 // [114]
    const F_CAR_I32 = function PRIVATE_F_CAR_I32(                // [114]
                                                                 // [114]
        i_len                                                    // [114]
    ){                                                           // [114]
        //: @CAR_I32@ : ConstARray - Int32 ::::::::::::::://     // [114]
        //: #_DRY_INSTEAD_OF_KISS_WARNING_BECAUSE_LAZY_# ://     // [114]
                                                                 // [114]
        if( i_len <= 0 ){ ERR("[#YSMITF#:I32]" ); };             // [114]
                                                                 // [114]
        var                o_arr = "[nil][f_car_i32]" ;          // [114]
                           o_arr =(                              // [114]
                                                                 // [114]
            F_ARR_I32.apply( null , arguments )                  // [114]
        );;                                                      // [114]
        //- Object.freeze( o_arr ); #KFNFR# -//                  // [114]
        return(            o_arr );                              // [114]
    };;                                                          // [114]
                                                                 // [114]
//:==========================================:I32_ARRAY:[114]:// // [114]

//:U32_ARRAY:[109]:==========================================://

    //:TAG[ new uint32 array | NEW_U32 | NEW_ARR_U32 ]           // [109]
                                                                 // [---]
    const F_U32_ARR ="[FIX:F_ARR_U32]";                          // [111]
                                                                 // [---]
    const F_ARR_U32 = function PRIVATE_F_ARR_U32(                // [109]
                                                                 // [109]
        i_len /** Length Of Array **/                            // [109]
    ){                                                           // [109]
        //:::::::::::::::::::::::::::::::::::::://               // [109]
        //: @ARR_U32@ : ARRay of Uint32 Values ://               // [109]
        //:::::::::::::::::::::::::::::::::::::://               // [109]
                                                                 // [109]
        var o_arr = "[nil][f_arr_u32:o_arr]" ;                   // [109]
        var   len = arguments.length ;                           // [109]
        var   dex = 0 ;                                          // [109]
        var   arg = 0 ;                                          // [109]
                                                                 // [109]
        if( len !=( i_len + 1 ) ){                               // [109]
            ERR( "[F_ARR_U32:#IAI#]" );                          // [109]
        }else{                                                   // [109]
            o_arr = new Uint32Array( i_len );                    // [109]
            for( dex = 0 ; dex <=( i_len-1 ) ; dex ++ ){         // [109]
                                                                 // [109]
                arg = arguments[ dex + 1 ];                      // [109]
                if(  arg < 0   ){ ERR("[NEG_U32]"); };           // [109]
                if(!( arg>=0 ) ){ ERR("[WTF_U32]"); };           // [109]
                o_arr[ dex ] = ( arg );                          // [109]
            };;                                                  // [109]
        };;                                                      // [109]
        F_SHUTARR( o_arr /** #FAS# **/ );                        // [109]
        return( o_arr );                                         // [109]
    };;                                                          // [109]
                                                                 // [---]
    const F_U32_CAR ="[FIX:F_CAR_U32]";                          // [111]
                                                                 // [---]
    const F_CAR_U32 = function PRIVATE_F_CAR_U32(                // [109]
                                                                 // [109]
        i_len                                                    // [109]
    ){                                                           // [109]
        //: @CAR_U32@ : ConstARray - Uint32 :::::::::::::://     // [109]
        //: #_DRY_INSTEAD_OF_KISS_WARNING_BECAUSE_LAZY_# ://     // [109]
                                                                 // [109]
        if( i_len <= 0 ){ ERR("[#YSMITF#:U32]" ); };             // [109]
                                                                 // [109]
        var                o_arr = "[nil][f_car_u32]" ;          // [109]
                           o_arr =(                              // [109]
                                                                 // [109]
            F_ARR_U32.apply( null , arguments )                  // [109]
        );;                                                      // [109]
        //- Object.freeze( o_arr ); #KFNFR# -//                  // [109]
        return(            o_arr );                              // [109]
    };;                                                          // [109]

//:==========================================:U32_ARRAY:[109]://
//:U08_ARRAY:[075]:==========================================://

    //:TAG[ new uint8 array | NEW_U08 | NEW_ARR_U08 ]            // [109]
                                                                 // [---]
    const F_U08_ARR ="[FIX:F_ARR_U08]";                          // [111]
                                                                 // [---]
    const F_ARR_U08 = function PRIVATE_F_ARR_U08(                // [076]
                                                                 // [076]
        i_len /** Length Of Array **/                            // [076]
    ){                                                           // [076]
        var o_arr = "[nil][f_arr_u08:o_arr]" ;                   // [076]
        var   len = arguments.length ;                           // [076]
        var   dex = 0 ;                                          // [076]
        var   arg = 0 ;                                          // [076]
                                                                 // [076]
        if( len !=( i_len + 1 ) ){                               // [076]
            ERR( "[F_ARR_U08:#IAI#]" );                          // [076]
        }else{                                                   // [076]
            o_arr = new Uint8Array( i_len );                     // [076]
            for( dex = 0 ; dex <=( i_len-1 ) ; dex ++ ){         // [076]
                                                                 // [076]
                arg = arguments[ dex + 1 ];                      // [076]
                if(  arg < 0   ){ ERR("[NEG_U08]"); };           // [076]
                if(!( arg>=0 ) ){ ERR("[WTF_U08]"); };           // [076]
                o_arr[ dex ] = ( arg );                          // [076]
            };;                                                  // [076]
        };;                                                      // [076]
        F_SHUTARR( o_arr /** #FAS# **/ );                        // [077][076]
        return( o_arr );                                         // [076]
    };;                                                          // [076]
                                                                 // [---]
    const F_U08_CAR ="[FIX:F_CAR_U08]";                          // [111]
                                                                 // [---]
    const F_CAR_U08 = function PRIVATE_F_CAR_U08(                // [076]
                                                                 // [076]
        i_len                                                    // [076]
    ){                                                           // [076]
        //: #_DRY_INSTEAD_OF_KISS_WARNING_BECAUSE_LAZY_# ://     // [076]
                                                                 // [076]
        if( i_len <= 0 ){ ERR("[#YSMITF#:U08]" ); };             // [076]
                                                                 // [076]
        var                o_arr = "[nil][f_car_u08]" ;          // [076]
                           o_arr =(                              // [076]
                                                                 // [076]
            F_ARR_U08.apply( null , arguments )                  // [076]
        );;                                                      // [076]
        //- Object.freeze( o_arr ); #KFNFR# -//                  // [076]
        return(            o_arr );                              // [076]
    };;                                                          // [076]

//:==========================================:U08_ARRAY:[075]://
//:STRUCT:[065]:=============================================://

    const STRUCT = function PRIVATE_STRUCT( i_obj ){             // [065] 
                                                                 // [065] 
        var o_obj = Object.create( null );                       // [065] 
                                                                 // [065] 
        Object.keys(i_obj).forEach( (key,dex)=>{                 // [065] 
                                                                 // [065] 
            o_obj[ ""+key+"" ] =(                                // [065] 
            i_obj[ ""+key+"" ]   );;                             // [065] 
                                                                 // [065] 
        });;                                                     // [065] 
                                                                 // [065] 
        Object.seal( o_obj );                                    // [065] 
                                                                 // [065] 
        return( o_obj );                                         // [065] 
    };;                                                          // [065] 

//:=============================================:STRUCT:[065]://
//:CONST_ARR:[066]:==========================================://

    const F_CAR = function PRIVATE_F_CAR(                        // [069]
                                                                 // [066] 
        i_len /** Length Of Array **/                            // [066] 
    ){                                                           // [066] 
        var o_arr = null ;                                       // [066] 
                                                                 // [066] 
        var len   = arguments.length ;                           // [066] 
        var dex   = 0 ;                                          // [066] 
                                                                 // [066] 
        if( len !=( i_len + 1 ) ){                               // [066] 
                                                                 // [066]              
            ERR( "[F_CAR:#IAI#]" );                              // [069] 
        }else{                                                   // [066] 
                                                                 // [066] 
            o_arr = new Array( i_len );                          // [066] 
                                                                 // [066] 
            for(dex = 0 ; dex<=(i_len-1) ; dex ++){              // [066] 
                                                                 // [066] 
                o_arr[ dex ] = arguments[ dex + 1 ];             // [066] 
            };;                                                  // [066] 
        };;                                                      // [066] 
                                                                 // [066] 
        Object.freeze( o_arr );                                  // [066] 
        return( o_arr );                                         // [066] 
    };;                                                          // [066] 

//:==========================================:CONST_ARR:[066]://
//:SHADER_STRING_ARRAY:[069]:================================:// // [---]
                                                                 // [069]
    const F_SSA = function PRIVATE_F_SSA( //:@SSA@://            // [069]
                                                                 // [069]
        i_len //: Length Of Array ://                            // [069]
    ){                                                           // [069]
        var o_arr = null ;                                       // [069]
                                                                 // [069]
        var len   = arguments.length ;                           // [069]
        var dex   = 0 ;                                          // [069]
                                                                 // [069]
        if( len !=( i_len + 1 ) ){                               // [069]
                                                                 // [069]
            ERR( "[SSA:#IAI#]" );                                // [069]
        }else{                                                   // [069]
                                                                 // [069]
            o_arr = new Array( i_len );                          // [069]
                                                                 // [069]
            for(dex = 0 ; dex<=(i_len-1) ; dex ++){              // [069]
                                                                 // [069]
                o_arr[ dex ] = arguments[ dex + 1 ];             // [069]
            };;                                                  // [069]
        };;                                                      // [069]
                                                                 // [069]
        Object.freeze( o_arr );                                  // [069]
        return( o_arr );                                         // [069]
    };;                                                          // [069]
                                                                 // [069]
//:================================:SHADER_STRING_ARRAY:[069]:// // [---]
//:NON_CONST_ARRAY:[067]:====================================:// // [---]
                                                                 // [069]
    const F_ARR = function PRIVATE_F_ARR( i_len ){               // [069]
        var       o_arr = new Array(      i_len );               // [067]
        return(   o_arr );                                       // [067]
    };;                                                          // [067]
                                                                 // [067]
//:====================================:NON_CONST_ARRAY:[067]:// // [---]
//:TOP_LEVEL_UNIT_TEST_FUNCTIONS:[332]:======================:// // [332]
                                                                 // [332]
    const   F_LUT_UTM_TXT_BIN_NUM_BIN = function                 // [332]
    PRIVATE_F_LUT_UTM_TXT_BIN_NUM_BIN(                           // [332]
                                                                 // [332]
        i_txt_bin                                                // [332]
    ){                                                           // [332]
                                                                 // [---]
        if( d_eci >= 1 ){                                        // [333]
            if( "string" != typeof i_txt_bin ){                  // [333]
                console.log( "[i_txt_bin:NOTSTR]:"               // [333]
                             , i_txt_bin );;;;;;;;               // [333]
                ERR("[WHERE_THE_FUCK_IS_MY_STRING_2022]");       // [333]
            };;                                                  // [333]
        };;                                                      // [333]
                                                                 // [---]
        var o_num_bin =( 0 );                                    // [332]
                                                                 // [332]
        o_num_bin=( parseInt( i_txt_bin , 2 ) );                 // [332]
                                                                 // [---]
        if( d_eco >= 1 ){                                        // [333]
            if( Number.isNaN( o_num_bin ) ){                     // [333]
                let C_L =( console.log );                        // [333]
                    C_L( "[i_txt_bin]:" , i_txt_bin );           // [333]
                    C_L( "[o_num_bin]:" , o_num_bin );           // [333]
                ERR("[WTF_YOU_GOT_NAN_2022]");                   // [333]
            };;                                                  // [333]
        };;                                                      // [333]
                                                                 // [---]
        return( o_num_bin );                                     // [332]
    };;                                                          // [332]
                                                                 // [332]
    const   F_LUT_UTM_UTT_BIN_UTT_HEX = function                 // [332]
    PRIVATE_F_LUT_UTM_UTT_BIN_UTT_HEX(                           // [332]
                                                                 // [332]
        i_utt_bin                                                // [332]
    ,   i_utt_hex                                                // [332]
    ){                                                           // [332]
                                                                 // [---]
        if( d_eci >= 1 ){                                        // [333]
            if( !( Array.isArray(i_utt_bin)) ){                  // [333]
                ERR("[i_utt_bin_not_array]");                    // [333]
            };;                                                  // [333]
            if( !( Array.isArray(i_utt_hex)) ){                  // [333]
                ERR("[i_utt_hex_not_array]");                    // [333]
            };;                                                  // [333]
        };;                                                      // [333]
                                                                 // [---]
        var len_bin =( i_utt_bin.length );                       // [332]
        var len_hex =( i_utt_hex.length );                       // [332]
        if( len_bin != len_hex ){                                // [332]
            ERR("[TABLES_NOT_PAIRED]");                          // [332]
        };;                                                      // [332]
                                                                 // [332]
        var txt_bin ; //: Binary String As_Text   :::::::://     // [332]
        var num_bin ; //: Binary String As_Number :::::::://     // [332]
                                                                 // [332]
        /// txt_hex ; //: Hex Value     As_Text   :::::::://     // [332]
        var num_hex ; //: Hex Value     As_Number :::::::://     // [332]
                                                                 // [332]
        var dex ;                                                // [332]
        var len =( len_bin | len_hex );                          // [332]
        for( dex = 0 ; dex <=( len-1 ) ; dex ++ ){               // [333][332]
                                                                 // [332]
            txt_bin = i_utt_bin[ dex ];                          // [332]
            num_hex = i_utt_hex[ dex ];                          // [332]
                                                                 // [332]
            num_bin = F_LUT_UTM_TXT_BIN_NUM_BIN(                 // [332]
                                txt_bin         );;              // [332]
                                                                 // [332]
            if( num_bin != num_hex ){                            // [332]
                LOG_BIN_HEX( "[num_bin]" , num_bin );            // [333]
                LOG_BIN_HEX( "[num_hex]" , num_hex );            // [333]
                ERR("[THEY_DONT_FUCKING_MATCH_2022]");           // [332]
            };;                                                  // [332]
        };;                                                      // [332]
                                                                 // [332]
    };;                                                          // [332]
                                                                 // [---]
    //:#_IS_TO4_UNIT_TEST_TABLE_CORRECT_:[334]:--------------:// // [334]
                                                                 // [334]
    const   F_LUT_UTM____utt_hex____to4_to2 = function           // [334]
    PRIVATE_F_LUT_UTM____utt_hex____to4_to2(                     // [334]
                                                                 // [334]
        i_utt_hex                                                // [334]
    ){                                                           // [334]
        let  row_y   ; //: row/record   in_table ::::::::://     // [334]
        let  col_x   ; //: col/category in_table ::::::::://     // [334]
        let  dex     ; //: Entry Index  in_table ::::::::://     // [334]
                                                                 // [334]
        var  to4_hex ; //: Touching_4_bit_value : UTT_HEX://     // [334]
                                                                 // [334]
        var  to2_x   ; //: Touching_2_bit_value : X-axis ://     // [334]
        var  to2_y   ; //: Touching_2_bit_value : Y-axis ://     // [334]
        var  to4glue ; //: (to2_x + to2_y)===>( to4glue )://     // [334]
                                                                 // [334]
        for( row_y = 0 ; row_y <=(16-1) ; row_y ++ ){            // [---][334]
        for( col_x = 0 ; col_x <=( 4-1) ; col_x ++ ){            // [---][334]
                                                                 // [---][334]
            dex =( col_x + ( row_y * 4 ) );                      // [---][334]
                                                                 // [---][334]
            to4_hex =( i_utt_hex[ dex ] );                       // [---][334]
                                                                 // [---][334]
            if( 0 == col_x ){                                    // [---][334]
                //:PAIRTAG[ROT_000_COL]::::::::::::::::::://     // [---][334]
                to2_x =( d_rotclok_000_r_x_to4_to2[ row_y ] );   // [337][334]
                to2_y =( d_rotclok_000_r_y_to4_to2[ row_y ] );   // [337][334]
            }else                                                //      [334]
            if( 1 == col_x ){                                    //      [334]
                //:PAIRTAG[ROT_090_COL]::::::::::::::::::://     //      [334]
                to2_x =( d_rotclok_090_r_x_to4_to2[ row_y ] );   // [337][334]
                to2_y =( d_rotclok_090_r_y_to4_to2[ row_y ] );   // [337][334]
            }else                                                //      [334]
            if( 2 == col_x ){                                    //      [334]
                //:PAIRTAG[ROT_180_COL]::::::::::::::::::://     //      [334]
                to2_x =( d_rotclok_180_r_x_to4_to2[ row_y ] );   // [337][334]
                to2_y =( d_rotclok_180_r_y_to4_to2[ row_y ] );   // [337][334]
            }else                                                //      [334]
            if( 3 == col_x ){                                    //      [334]
                //:PAIRTAG[ROT_270_COL]::::::::::::::::::://     //      [334]
                to2_x =( d_rotclok_270_r_x_to4_to2[ row_y ] );   // [337][334]
                to2_y =( d_rotclok_270_r_y_to4_to2[ row_y ] );   // [337][334]
            }else{                                               // [---][334]
                ERR("[WTF_WHAT_IS_THIS_COLUMN_2022]");           // [---][334]
            };;                                                  // [---][334]
                                                                 // [---][334]
            to4glue = F_TO2_X_TO2_Y_TO4(                         // [---][334]
                        to2_x,to2_y     );;                      // [---][334]
                                                                 // [---][334]
            if( to4_hex != to4glue ){                            // [---][334]
                                                                 // [---]
                LOG(         "[col_x..]" , col_x   );            // [337]
                LOG(         "[row_y..]" , row_y   );            // [337]
                LOG_BIN_HEX( "[to4_hex]" , to4_hex );            // [337]
                LOG_BIN_HEX( "[to4glue]" , to4glue );            // [337]
                ERR("[TABLES_DONT_LINE_UP_2022]");               // [---][334]
            };;                                                  // [---][334]
                                                                 // [---][334]
        };;};;                                                   // [---][334]
                                                                 // [---][334]
    };;                                                          // [---][334]
    //:--------------:#_IS_TO4_UNIT_TEST_TABLE_CORRECT_:[334]:// // [---][334]
                                                                 // [---]
    //:#_TO4_ROTATION_TESTS_:[332]:--------------------------:// // [332]
    const   F_LUT_UTM_ROT_TO4 = function                         // [332]
    PRIVATE_F_LUT_UTM_ROT_TO4(                                   // [332]
                                                                 // [332]
        /** VOID **/                                             // [332]
    ){                                                           // [332]
                                                                 // [332]
        //: B_LOVE_IT_WHEN_I_ROTATE_000 : (x,y) ==> ( x, y)  :// // [332]
        //: B_LOVE_IT_WHEN_I_ROTATE_090 : (x,y) ==> (−y, x)  :// // [332]
        //: B_LOVE_IT_WHEN_I_ROTATE_180 : (x,y) ==> (−x,−y)  :// // [332]
        //: B_LOVE_IT_WHEN_I_ROTATE_270 : (x,y) ==> ( y,−x)  :// // [332]
                                                                 //      [332]
        var utt_bin =[  //: @_THIS_TABLE_IS_CLOCKWISE_@  ://     // [337][332]
        //:  ___0     __90     _180     _270  :::::::::::://     //      [332]
/*NOCOMMA*/ "0000" , "0000" , "0000" , "0000" //: 0:0000 ://     // [337][333][332]  
        ,   "0001" , "1000" , "0010" , "0100" //: 1:0001 ://     // [337][332][---]
        ,   "0010" , "0100" , "0001" , "1000" //: 2:0010 ://     // [337][332][---]
        ,   "0011" , "1100" , "0011" , "1100" //: 3:0011 ://     // [337][332][---]
        ,   "0100" , "0001" , "1000" , "0010" //: 4:0100 ://     // [337][332][---]
        ,   "0101" , "1001" , "1010" , "0110" //: 5:0101 ://     // [337][332][---]
        ,   "0110" , "0101" , "1001" , "1010" //: 6:0110 ://     // [337][332][---]
        ,   "0111" , "1101" , "1011" , "1110" //: 7:0111 ://     // [337][332][---]
        ,   "1000" , "0010" , "0100" , "0001" //: 8:1000 ://     // [337][332][---]
        ,   "1001" , "1010" , "0110" , "0101" //: 9:1001 ://     // [337][332][---]
        ,   "1010" , "0110" , "0101" , "1001" //: A:1010 ://     // [337][332][---]
        ,   "1011" , "1110" , "0111" , "1101" //: B:1011 ://     // [337][332][---]
        ,   "1100" , "0011" , "1100" , "0011" //: C:1100 ://     // [337][332][---]
        ,   "1101" , "1011" , "1110" , "0111" //: D:1101 ://     // [337][332][---]
        ,   "1110" , "0111" , "1101" , "1011" //: E:1110 ://     // [337][332][---]
        ,   "1111" , "1111" , "1111" , "1111" //: F:1111 ://     // [337][332][---]
        ];;                                                      //      [332][---]
                                                                 //      [332][---]
        var utt_hex =[  //: @_THIS_TABLE_IS_CLOCKWISE_@  ://     // [337][332][---]
        //:     000_DEG | 090_DEG | 180_DEG | 270_DEG :::://     //      [332][---]
/*NOCOMMA*/     0x0     , 0x0     , 0x0     , 0x0                // [337][333][332]
        ,       0x1     , 0x8     , 0x2     , 0x4                // [337][332][---]
        ,       0x2     , 0x4     , 0x1     , 0x8                // [337][332][---]
        ,       0x3     , 0xC     , 0x3     , 0xC                // [337][332][---]
        ,       0x4     , 0x1     , 0x8     , 0x2                // [337][332][---]
        ,       0x5     , 0x9     , 0xA     , 0x6                // [337][332][---]
        ,       0x6     , 0x5     , 0x9     , 0xA                // [337][332][---]
        ,       0x7     , 0xD     , 0xB     , 0xE                // [337][332][---]
        ,       0x8     , 0x2     , 0x4     , 0x1                // [337][332][---]
        ,       0x9     , 0xA     , 0x6     , 0x5                // [337][332][---]
        ,       0xA     , 0x6     , 0x5     , 0x9                // [337][332][---]
        ,       0xB     , 0xE     , 0x7     , 0xD                // [337][332][---]
        ,       0xC     , 0x3     , 0xC     , 0x3                // [337][332][---]
        ,       0xD     , 0xB     , 0xE     , 0x7                // [337][332][---]
        ,       0xE     , 0x7     , 0xD     , 0xB                // [337][332][---]
        ,       0xF     , 0xF     , 0xF     , 0xF                // [337][332][---]
        //:     ^^^       ^^^       ^^^       ^^^     :::://     // [334]
        //:     |||       |||       |||       |||     :::://     // [334]
        //: ROT_000_COL   |||       |||       |||     :::://     // [334]
        //:...........ROT_090_COL   |||       |||     :::://     // [334]
        //:.....................ROT_180_COL   |||     :::://     // [334]
        //:...............................ROT_270_COL :::://     // [334]
        ];;                                                      // [332]
                                                                 // [332]
        ASS( 64 === utt_bin.length , "[UTT_BIN_LEN]" );          // [332]
        ASS( 64 === utt_hex.length , "[UTT_HEX_LEN]" );          // [332]
                                                                 // [332]
        //:------------------------------------------://         // [332]
        //: Cross check the two lookup tables in     ://         // [332]
        //: this function against each other to make ://         // [332]
        //: sure they agree with each other.         ://         // [332]
        //:------------------------------------------://         // [332]
        //:@TEST_CODE_FOR_MY_TEST_CODE@ :::::::::::::://         // [332]
        F_LUT_UTM_UTT_BIN_UTT_HEX(                               // [332]
                  utt_bin,utt_hex );;                            // [332]
                                                                 // [332]
        //: DONE: Cross Check[ utt_hex ]against our :://         // [334][332]
        //:       top-level lookup tables and make  :://         // [332]
        //:       sure they agree.                  :://         // [332]
        F_LUT_UTM____utt_hex____to4_to2( utt_hex );              // [334]
                                                                 // [---]
        //:_FINALLY_OUR_TO4_ROT_TESTS_#:[335]:---------------:// // [335]
        {                                                        // [335]
            //:#RE_USING_ODDLY_SPECIFIC_FUNCTION#:[335]:-----:// // [335]
                                                                 // [335]
            let FN=( F_LUT_UTM_TXT_BIN_NUM_BIN );                // [335]
            //////=(          (TXT)======>(BIN));/////////////// // [335]
                                                                 // [335]
            //:-----:#RE_USING_ODDLY_SPECIFIC_FUNCTION#:[335]:// // [335]
                                                                 // [335]
            //:------------:XXYY:-------:----------------://     // [335]
            let str_n_0 =( "0101" );    //:TAG[ N_0_TO4 ]://     // [335]
            let str_n_1 =( "1001" );    //:TAG[ N_1_TO4 ]://     // [335]
            let str_n_2 =( "1010" );    //:TAG[ N_2_TO4 ]://     // [335]
            let str_n_3 =( "0110" );    //:TAG[ N_3_TO4 ]://     // [335]
            //:------------:XXYY:-------:----------------://     // [335]
            let str_v_0 =( "0001" );    //:TAG[ V_0_TO4 ]://     // [335]
            let str_v_1 =( "1000" );    //:TAG[ V_1_TO4 ]://     // [335]
            let str_v_2 =( "0010" );    //:TAG[ V_2_TO4 ]://     // [335]
            let str_v_3 =( "0100" );    //:TAG[ V_3_TO4 ]://     // [335]
            //:------------:XXYY:-------:----------------://     // [335]
            let str_h_0 =( "0100" );    //:TAG[ H_0_TO4 ]://     // [335]
            let str_h_1 =( "0001" );    //:TAG[ H_1_TO4 ]://     // [335]
            let str_h_2 =( "1000" );    //:TAG[ H_2_TO4 ]://     // [335]
            let str_h_3 =( "0010" );    //:TAG[ H_3_TO4 ]://     // [335]
            //:------------:XXYY:-------:----------------://     // [335]
            let str_c_0 =( "1111" );    //:TAG[ C_0_TO4 ]://     // [335]
            let str_c_1 =( "1111" );    //:TAG[ C_1_TO4 ]://     // [335]
            let str_c_2 =( "1111" );    //:TAG[ C_2_TO4 ]://     // [335]
            let str_c_3 =( "1111" );    //:TAG[ C_3_TO4 ]://     // [335]
            //:------------:XXYY:-------:----------------://     // [335]
            let str_vc0 =( "0011" );    //:TAG[ VC0_TO4 ]://     // [335]
            let str_vc1 =( "1100" );    //:TAG[ VC1_TO4 ]://     // [335]
            let str_vc2 =( "0011" );    //:TAG[ VC2_TO4 ]://     // [335]
            let str_vc3 =( "1100" );    //:TAG[ VC3_TO4 ]://     // [335]
            //:------------:XXYY:-------:----------------://     // [335]
            let str_hc0 =( "1100" );    //:TAG[ HC0_TO4 ]://     // [335]
            let str_hc1 =( "0011" );    //:TAG[ HC1_TO4 ]://     // [335]
            let str_hc2 =( "1100" );    //:TAG[ HC2_TO4 ]://     // [335]
            let str_hc3 =( "0011" );    //:TAG[ HC3_TO4 ]://     // [335]
            //:------------:XXYY:-------:----------------://     // [335]
                                                                 // [335]
            let to4_n_0 =(FN(str_n_0)); //:TAG[ N_0_TO4 ]://     // [335]
            let to4_n_1 =(FN(str_n_1)); //:TAG[ N_1_TO4 ]://     // [335]
            let to4_n_2 =(FN(str_n_2)); //:TAG[ N_2_TO4 ]://     // [335]
            let to4_n_3 =(FN(str_n_3)); //:TAG[ N_3_TO4 ]://     // [335]
                                                                 // [335]
            let to4_v_0 =(FN(str_v_0)); //:TAG[ V_0_TO4 ]://     // [335]
            let to4_v_1 =(FN(str_v_1)); //:TAG[ V_1_TO4 ]://     // [335]
            let to4_v_2 =(FN(str_v_2)); //:TAG[ V_2_TO4 ]://     // [335]
            let to4_v_3 =(FN(str_v_3)); //:TAG[ V_3_TO4 ]://     // [335]
                                                                 // [335]
            let to4_h_0 =(FN(str_h_0)); //:TAG[ H_0_TO4 ]://     // [335]
            let to4_h_1 =(FN(str_h_1)); //:TAG[ H_1_TO4 ]://     // [335]
            let to4_h_2 =(FN(str_h_2)); //:TAG[ H_2_TO4 ]://     // [335]
            let to4_h_3 =(FN(str_h_3)); //:TAG[ H_3_TO4 ]://     // [335]
                                                                 // [335]
            let to4_c_0 =(FN(str_c_0)); //:TAG[ C_0_TO4 ]://     // [335]
            let to4_c_1 =(FN(str_c_1)); //:TAG[ C_1_TO4 ]://     // [335]
            let to4_c_2 =(FN(str_c_2)); //:TAG[ C_2_TO4 ]://     // [335]
            let to4_c_3 =(FN(str_c_3)); //:TAG[ C_3_TO4 ]://     // [335]
                                                                 // [335]
            let to4_vc0 =(FN(str_vc0)); //:TAG[ VC0_TO4 ]://     // [335]
            let to4_vc1 =(FN(str_vc1)); //:TAG[ VC1_TO4 ]://     // [335]
            let to4_vc2 =(FN(str_vc2)); //:TAG[ VC2_TO4 ]://     // [335]
            let to4_vc3 =(FN(str_vc3)); //:TAG[ VC3_TO4 ]://     // [335]
                                                                 // [335]
            let to4_hc0 =(FN(str_hc0)); //:TAG[ HC0_TO4 ]://     // [335]
            let to4_hc1 =(FN(str_hc1)); //:TAG[ HC1_TO4 ]://     // [335]
            let to4_hc2 =(FN(str_hc2)); //:TAG[ HC2_TO4 ]://     // [335]
            let to4_hc3 =(FN(str_hc3)); //:TAG[ HC3_TO4 ]://     // [335]
                                                                 // [--------]
            //:------------------------------------------://     // [---][335]
            //: @sc6@ : Sub_Cluster(category) 6 of them  ://     // [---][335]
            //: @ro4@ : ROtation enumeration, 4 of them  ://     // [---][335]
            //: @to4@ : TOuching value      , 4 bits     ://     // [---][335]
            //: @ro4_x: ro4 value stored in X-axis.      ://     // [---][335]
            //: @sc6_y: sc6 value stored in Y-axis.      ://     // [---][335]
            //:------------------------------------------://     // [---][335]
            var sc6_ro4_to4____c_w = new Uint8Array([            // [336][DAR][335]
                                                                 // [336][DUP][335]
            /*NOCOM*/ to4_n_0 , to4_n_1 , to4_n_2 , to4_n_3      // [336][DUP][335]
            ,         to4_v_0 , to4_v_1 , to4_v_2 , to4_v_3      // [336][DUP][335]
            ,         to4_h_0 , to4_h_1 , to4_h_2 , to4_h_3      // [336][DUP][335]
            ,         to4_c_0 , to4_c_1 , to4_c_2 , to4_c_3      // [336][DUP][335]
            ,         to4_vc0 , to4_vc1 , to4_vc2 , to4_vc3      // [336][DUP][335]
            ,         to4_hc0 , to4_hc1 , to4_hc2 , to4_hc3      // [336][DUP][335]
            ]);;                                                 // [336][DUP][335]
            var sc6_ro4_to4____ccw = new Uint8Array([            // [336][DAR][335]
                                                                 // [336][DUP][335]
            /*NOCOM*/ to4_n_0 , to4_n_3 , to4_n_2 , to4_n_1      // [336][DAE][335]
            ,         to4_v_0 , to4_v_3 , to4_v_2 , to4_v_1      // [336][DAE][335]
            ,         to4_h_0 , to4_h_3 , to4_h_2 , to4_h_1      // [336][DAE][335]
            ,         to4_c_0 , to4_c_3 , to4_c_2 , to4_c_1      // [336][DAE][335]
            ,         to4_vc0 , to4_vc3 , to4_vc2 , to4_vc1      // [336][DAE][335]
            ,         to4_hc0 , to4_hc3 , to4_hc2 , to4_hc1      // [336][DAE][335]
            ]);;                                                 // [336][DUP][335]
                                                                 // [---][335]
            let dex     = 0 ; //: 1D version[ro4_x,sc6_y]://     // [---][335]
            let sc6_y   = 0 ; //: sc6 is stored in Y-axis://     // [---][335]
            let ro4_x   = 0 ; //: ro4 is stored in X-axis://     // [---][335]
            let to4_r_0 = 0 ; //: to4 - non-rotated :::::://     // [---][335]
            let to4_got = 0 ; //: to4 - gotten      :::::://     // [---][335]
            let to4_exp = 0 ; //: to4 - expected    :::::://     // [---][335]
                                                                 // [---]
            let sc6_ro4_to4 =( sc6_ro4_to4____c_w );             // [336]
            //:#_ALWAYS_USE_CLOCKWISE_TO_ROTATE_TO4_#::::://     // [336]
                                                                 // [---]
            for( sc6_y = 0 ; sc6_y <=( 6-1 ) ; sc6_y ++ ){       // [---][335]
            for( ro4_x = 0 ; ro4_x <=( 4-1 ) ; ro4_x ++ ){       // [---][335]
                                                                 // [---][335]
                dex =( ro4_x + ( sc6_y * 4 ) );                  // [---][335]
                                                                 // [---][335]
                to4_r_0 =( sc6_ro4_to4[ (sc6_y*4)+0 ] );         // [---][335]
                to4_exp =( sc6_ro4_to4[  dex        ] );         // [---][335]
                                                                 // [---][335]
                to4_got =(                                       // [---][335]
                    F_TO4_RO4_TO4( to4_r_0 , ro4_x ));;;         // [---][335]
                                                                 // [---][335]
                if( to4_got != to4_exp ){                        // [---][335]
                                                                 // [---][335]
                    LOG(         "[ro4_x..]" , ro4_x   );        // [336][---]
                    LOG(         "[sc6_y..]" , sc6_y   );        // [336][---]
                    LOG(         "[dex....]" , dex     );        // [336][---]
                    LOG_BIN_HEX( "[to4_got]" , to4_got );        // [336][---]
                    LOG_BIN_HEX( "[to4_exp]" , to4_exp );        // [336][---]
                                                                 // [336][---]
                    //: FUCKSEETAG[ _HOT_MATH_IS_WRONG_ ]://     // [336][---]
                    ERR("[YOU_CANT_ROTATE_WORTH_SHIT_2022]");    // [337][336][335]
                };;                                              // [---][335]
            };;};;                                               // [---][335]
        }                                                        // [---][335]
        //:---------------:_FINALLY_OUR_TO4_ROT_TESTS_#:[335]:// // [335]
                                                                 // [---]
    };; //:ENDFUNC[ F_LUT_UTM_ROT_TO4 ]:::::::::::::[335-332]:// // [335][332]
    //:--------------------------:#_TO4_ROTATION_TESTS_:[332]:// // [332]
    //:#_LOOKUP_TABLE_UTM_ENTRY_POINT_#:[332]:---------------:// // [332]
                                                                 // [332]
    const   F_LUT_UTM = function                                 // [332]
    PRIVATE_F_LUT_UTM(                                           // [332]
                                                                 // [332]
        /** VOID **/                                             // [332]
    ){                                                           // [332]
        F_LUT_UTM_ROT_TO4();                                     // [332]
    };;                                                          // [332]
    //:---------------:#_LOOKUP_TABLE_UTM_ENTRY_POINT_#:[332]:// // [332]
                                                                 // [332]
//:======================:TOP_LEVEL_UNIT_TEST_FUNCTIONS:[332]:// // [332]
//:ILLEGAL_STUFF_GO_STRAIGHT_TO_JAIL:[042]:==================:// // [---]
//:MONKEY_WRENCH_MACROS:[108]:===============================:// // [---]
                                                                 // [---]
    //:CTRL_F_TAGS[ #illegal# ]                          ://     // [063] 
    //:TAG[ disallowed | its wrong carl | monkey wrench ]://     // [085]
    //:TAG[ its-wrong-carl | itswrongcarl | wrong_carl  ]://     // [086]
    //:TAG[ its_wrong_carl .............................]://     // [086]
    //:TAG[ illegal-section | illegal-section | illegals]://     // [109]
    //:TAG[ illegal section | illegalsection | illsec   ]://     // [109]
    //:TAG[ illegal-stuff | illegal_stuff | illegalstuff]://     // [283]
    //:TAG[ monkey-wrench-macros-section | mwm-section  ]://     // [477]
    //:TAG[ monkey_wrench_macros_section | mwm_section  ]://     // [477]
    //:TAG[ monkey wrench macros section | mwm section  ]://     // [477]
                                                                 // [477]
    //:#_BATTLESHIP_LER_CELLS_#:[477]:-------------------://     // [477]
                                                                 // [477]
        const c_ler_a_2 = "[FIX:d.ler_a_2:(@D_N_C@)]" ;;;;;;     // [477]
                                                                 // [477]
        const c_ler_b_1 = "[FIX:d.ler_b_1:(@D_N_C@)]" ;;;;;;     // [477]
        const c_ler_b_2 = "[FIX:d.ler_b_2:(@D_N_C@)]" ;;;;;;     // [477]
        const c_ler_b_3 = "[FIX:d.ler_b_3:(@D_N_C@)]" ;;;;;;     // [477]
                                                                 // [477]
        const c_ler_c_0 = "[FIX:d.ler_c_0:(@D_N_C@)]" ;;;;;;     // [477]
        const c_ler_c_1 = "[FIX:d.ler_c_1:(@D_N_C@)]" ;;;;;;     // [477]
        const c_ler_c_2 = "[FIX:d.ler_c_2:(@D_N_C@)]" ;;;;;;     // [477]
        const c_ler_c_3 = "[FIX:d.ler_c_3:(@D_N_C@)]" ;;;;;;     // [477]
        const c_ler_c_4 = "[FIX:d.ler_c_4:(@D_N_C@)]" ;;;;;;     // [477]
                                                                 // [477]
        const c_ler_d_1 = "[FIX:d.ler_d_1:(@D_N_C@)]" ;;;;;;     // [477]
        const c_ler_d_2 = "[FIX:d.ler_d_2:(@D_N_C@)]" ;;;;;;     // [477]
        const c_ler_d_3 = "[FIX:d.ler_d_3:(@D_N_C@)]" ;;;;;;     // [477]
                                                                 // [477]
        const c_ler_e_2 = "[FIX:d.ler_e_2:(@D_N_C@)]" ;;;;;;     // [477]
                                                                 // [477]
    //:-------------------:#_BATTLESHIP_LER_CELLS_#:[477]://     // [477]
    //:#_BATTLESHIP_DUM_CELLS_#:[477]:-------------------://     // [477]
                                                                 // [477]
        //: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ://     // [477]
        //: ___WRONG___... The are actually "LER" cells! ://     // [477]
        //: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ://     // [477]
                                                                 // [477]
        const c_dum_a_2 = "[FIX:d.ler_a_2:(@D_F_W@)]" ;;;;;;     // [477]
                                                                 // [477]
        const c_dum_b_1 = "[FIX:d.ler_b_1:(@D_F_W@)]" ;;;;;;     // [477]
        const c_dum_b_2 = "[FIX:d.ler_b_2:(@D_F_W@)]" ;;;;;;     // [477]
        const c_dum_b_3 = "[FIX:d.ler_b_3:(@D_F_W@)]" ;;;;;;     // [477]
                                                                 // [477]
        const c_dum_c_0 = "[FIX:d.ler_c_0:(@D_F_W@)]" ;;;;;;     // [477]
        const c_dum_c_1 = "[FIX:d.ler_c_1:(@D_F_W@)]" ;;;;;;     // [477]
        const c_dum_c_2 = "[FIX:d.ler_c_2:(@D_F_W@)]" ;;;;;;     // [477]
        const c_dum_c_3 = "[FIX:d.ler_c_3:(@D_F_W@)]" ;;;;;;     // [477]
        const c_dum_c_4 = "[FIX:d.ler_c_4:(@D_F_W@)]" ;;;;;;     // [477]
                                                                 // [477]
        const c_dum_d_1 = "[FIX:d.ler_d_1:(@D_F_W@)]" ;;;;;;     // [477]
        const c_dum_d_2 = "[FIX:d.ler_d_2:(@D_F_W@)]" ;;;;;;     // [477]
        const c_dum_d_3 = "[FIX:d.ler_d_3:(@D_F_W@)]" ;;;;;;     // [477]
                                                                 // [477]
        const c_dum_e_2 = "[FIX:d.ler_e_2:(@D_F_W@)]" ;;;;;;     // [477]
                                                                 // [477]
    //:-------------------:#_BATTLESHIP_DUM_CELLS_#:[477]://     // [477]
    //:#_RO_NOT_R0_#:[430]:------------------------------://     // [---]
                                                                 // [430]
        const c_bingten_am6_shi_r04 = "[ro4:NOT:r04]" ;;;;;;     // [430]
        const c_bingten_am6_msk_r04 = "[ro4:NOT:r04]" ;;;;;;     // [430]
                                                                 // [430]
    //:------------------------------:#_RO_NOT_R0_#:[430]://     // [430]
    //:#_BINTILE_SPECIFICALLY_BINGEOM_#:[429]:-----------://     // [429]
                                                                 // [429]
        //:----------------------------------------------://     // [429]
        //: @mg0@ : MidGround - SubLayerIndex === 0 :::::://     // [429]
        //: @bg1@ : BakGround - SubLayerIndex === 1 :::::://     // [429]
        //: @fg2@ : ForGround - SubLayerIndex === 2 :::::://     // [429]
        //:----------------------------------------------://     // [429]
                                                                 // [429]
        const c_bintile_mg0_v16_msk=( "[FIX:c_bingeom_*]" );     // [429]
        const c_bintile_mg0_v16_shi=( "[FIX:c_bingeom_*]" );     // [429]
        const c_bintile_mg0_am6_msk=( "[FIX:c_bingeom_*]" );     // [429]
        const c_bintile_mg0_am6_shi=( "[FIX:c_bingeom_*]" );     // [429]
                                                                 // [429]
        const c_bintile_bg1_v16_msk=( "[FIX:c_bingeom_*]" );     // [429]
        const c_bintile_bg1_v16_shi=( "[FIX:c_bingeom_*]" );     // [429]
        const c_bintile_bg1_am6_msk=( "[FIX:c_bingeom_*]" );     // [429]
        const c_bintile_bg1_am6_shi=( "[FIX:c_bingeom_*]" );     // [429]
                                                                 // [429]
        const c_bintile_fg2_v16_msk=( "[FIX:c_bingeom_*]" );     // [429]
        const c_bintile_fg2_v16_shi=( "[FIX:c_bingeom_*]" );     // [429]
        const c_bintile_fg2_am6_msk=( "[FIX:c_bingeom_*]" );     // [429]
        const c_bintile_fg2_am6_shi=( "[FIX:c_bingeom_*]" );     // [429]
                                                                 // [429]
    //:-----------:#_BINTILE_SPECIFICALLY_BINGEOM_#:[429]://     // [429]
    //:#_NULL_MONKEY_#:[380]:----------------------------://     // [---]
                                                                 // [380]
        const HAS_NIL = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const YES_NIL = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const ISS_NIL = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const ASS_NIL = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const ASS_HAS = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const YES_EXI = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const YES_HAS = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const NIL_CHK = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const CHK_NIL = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const NILTEST = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const HAS_NUL = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const NUL_HAS = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const IS_NULL = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const IS_NILL = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const IS_NIL  = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
        const IS_NUL  = "[TRY:NIL_OR_HAS_FUNCTIONS]" ;           // [380]
                                                                 // [380]
    //:----------------------------:#_NULL_MONKEY_#:[380]://     // [380]
    //:#_DATA_ORIENTED_YOU_FOOL_#:[371]:-----------------://     // [371]
                                                                 // [371]
        const d_mp0_512_cmd = "[FIX:d_mp0_512_dathash]" ;        // [371]
        const d_mp1_512_cmd = "[FIX:d_mp1_512_dathash]" ;        // [371]
                                                                 // [371]
        const d_mp0_512_comhash = "[d_mp0_512_dathash]" ;        // [371]
        const d_mp1_512_comhash = "[d_mp1_512_dathash]" ;        // [371]
                                                                 // [371]
    //:-----------------:#_DATA_ORIENTED_YOU_FOOL_#:[371]://     // [371]
    //:#_AM4_AND_AM6_#:[339]:----------------------------://     // [---]
                                                                 // [339]
        const edi_am4 = "[@NOW_BITPACKED_JUST_IN_TIME@]" ;       // [339]
        const edi_am6 = "[@NOW_BITPACKED_JUST_IN_TIME@]" ;       // [339]
                                                                 // [339]
        const edi_rot = "[FIX:edigame_edi.edi_ro4]" ;            // [339]
        const edi_ro3 = "[FIX:edigame_edi.edi_ro4]" ;            // [339]
                                                                 // [339]
    //:----------------------------:#_AM4_AND_AM6_#:[339]://     // [339]
    //:#_4x4_bitmaps_for_sats_#:[318]:-------------------://     // [318]
                                                                 // [318]
        const c_nonagon_u16_noa = "[FIX:c_4x4_noa_###]" ;        // [318]
                                                                 // [318]
        const c_nonagon_u16_n_l = "[FIX:c_4x4_n_l_###]" ;        // [318]
        const c_nonagon_u16_n_r = "[FIX:c_4x4_n_r_###]" ;        // [318]
        const c_nonagon_u16_n_t = "[FIX:c_4x4_n_t_###]" ;        // [318]
        const c_nonagon_u16_n_b = "[FIX:c_4x4_n_b_###]" ;        // [318]
                                                                 // [318]
        const c_nonagon_u16_ntl = "[FIX:c_4x4_ntl_###]" ;        // [318]
        const c_nonagon_u16_ntr = "[FIX:c_4x4_ntr_###]" ;        // [318]
        const c_nonagon_u16_nbl = "[FIX:c_4x4_nbl_###]" ;        // [318]
        const c_nonagon_u16_nbr = "[FIX:c_4x4_nbr_###]" ;        // [318]
                                                                 // [318]
        const c_nonagon_u16_h_m = "[FIX:c_4x4_h_m_###]" ;        // [318]
        const c_nonagon_u16_v_c = "[FIX:c_4x4_v_c_###]" ;        // [318]
                                                                 // [318]
        const c_nonagon_u16_h_c = "[FIX:c_4x4_h_c_###]" ;        // [318]
        const c_nonagon_u16_v_m = "[FIX:c_4x4_v_m_###]" ;        // [318]
                                                                 // [318]
        const c_nonagon_u16_h_l = "[FIX:c_4x4_h_l_###]" ;        // [318]
        const c_nonagon_u16_h_r = "[FIX:c_4x4_h_r_###]" ;        // [318]
                                                                 // [318]
        const c_nonagon_u16_v_t = "[FIX:c_4x4_v_t_###]" ;        // [318]
        const c_nonagon_u16_v_b = "[FIX:c_4x4_v_b_###]" ;        // [318]
                                                                 // [318]
        const c_nonagon_u16_dtm = "[FIX:c_4x4_dtm_###]" ;        // [318]
                                                                 // [318]
    //:-------------------:#_4x4_bitmaps_for_sats_#:[318]://     // [318]
    //:#_LETS_NOT_DO_THESE_ALIASES_#:[315]:--------------://     // [---]
                                                                 // [315]
        const c_g_g     = "[USE:c_mmi.artgola_000_011]";         // [315]
        const c_g_b     = "[USE:c_mmi.artgola_012_023]";         // [315]
        const c_b_f     = "[USE:c_mmi.artgola_024_035]";         // [315]
        const c_f_f     = "[USE:c_mmi.artgola_036_047]";         // [315]
                                                                 // [315]
        const c_geo_geo = "[USE:c_mmi.artgola_000_011]";         // [315]
        const c_geo_bom = "[USE:c_mmi.artgola_012_023]";         // [315]
        const c_bom_fad = "[USE:c_mmi.artgola_024_035]";         // [315]
        const c_fad_fad = "[USE:c_mmi.artgola_036_047]";         // [315]
                                                                 // [315]
    //:--------------:#_LETS_NOT_DO_THESE_ALIASES_#:[315]://     // [---]
    //:#_RENDERER_7_MEMORY_CELL_BLOCKS_#:[315]:----------://     // [---]
                                                                 // [315]
        const c_artgola = "[FIX:c_mmi_artgola_###_###]" ;        // [315]
                                                                 // [315]
        const c_artgola_000_011 = "[c_mmi_artgola_#_#]" ;        // [315]
        const c_artgola_012_023 = "[c_mmi_artgola_#_#]" ;        // [315]
        const c_artgola_024_035 = "[c_mmi_artgola_#_#]" ;        // [315]
        const c_artgola_036_047 = "[c_mmi_artgola_#_#]" ;        // [315]
                                                                 // [315]
    //:----------:#_RENDERER_7_MEMORY_CELL_BLOCKS_#:[315]://     // [---]
    //:#_V16_TO_MASTER_MEMORY_GRAPHIC_CELL_#:[315]:------://     // [---]
                                                                 // [315]
        const d_v16_mmi = "[FIX:d_v48_mmi:(PROBABLY)]";          // [315]
        const   v16_mmi = "[FIX:d_v48_mmi:(PROBABLY)]";          // [315]
                                                                 // [315]
    //:------:#_V16_TO_MASTER_MEMORY_GRAPHIC_CELL_#:[315]://     // [---]
    //:#_RANDOMIZING_BRUSH_#:[314]:----------------------://     // [---]
                                                                 // [314]
        const d_edigame_cod = "[FIX:d_edigame_tot_cod]" ;;;;     // [314]
        const   mod_ran_sir = "[FIX:edi_mod_ran_sir]" ;;;;;;     // [314]
                                                                 // [314]
        const edi_mod_ran = "[edi_mod_ran_(te7|la3|v16)]";;;     // [314]
        const mod_ran_te7 = "[FIX:edi_mod_ran_te7]" ;;;;;;;;     // [314]
        const mod_ran_la3 = "[FIX:edi_mod_ran_la3]" ;;;;;;;;     // [314]
        const mod_ran_v16 = "[FIX:edi_mod_ran_v16]" ;;;;;;;;     // [314]
                                                                 // [314]
    //:----------------------:#_RANDOMIZING_BRUSH_#:[314]://     // [314]
    //:#_THE_FLOOR_IS_RUINED_#:[310]:--------------------://     // [314][BUG][310]
                                                                 // [310]
        const d_te7_dut = "[FIX:d_te7_dun(@D_U_I_T@)]" ;         // [310]
        const       dut = "[FIX:::::::dun(@D_U_I_T@)]" ;         // [310]
                                                                 // [310]
    //:--------------------:#_THE_FLOOR_IS_RUINED_#:[310]://     // [314][BUG][310]
    //:#_NOT_ALL_LATS_ARE_THE_SAME_#:[297]:--------------://     // [297]
                                                                 // [297]
        const d_la3_lat = "[d_te7_lat:|:d_mipwasp_me9_lat]";     // [297]
        const d_la3_san = "[d_tey_lat:|:d_mipwasp_me9_lat]";     // [297]
                                                                 // [297]
        const d_mipwasp_te7_lat = "[FIX:d_mipwasp_me9_lat]";     // [297]
        const d_mipwasp_te9_lat = "[FIX:d_mipwasp_me9_lat]";     // [297]
                                                                 // [297]
        const d_mipwasp_la3_lmx = "[NO_NEED_USE:d_la3_lmx]";     // [297]
        const d_mipwasp_la3_lmy = "[NO_NEED_USE:d_la3_lmy]";     // [297]
                                                                 // [297]
    //:#_NOT_ALL_LATS_ARE_THE_SAME_#:[297]:--------------://     // [297]
    //:#_TOUCHING_TO_AGOLASET_CELL_XY_#:[286]:-----------://     // [---]
                                                                 // [286]
        const d_t16_a4x = "[FIX:d_to4_a4x]" ;                    // [286]
        const d_t16_a4y = "[FIX:d_to4_a4y]" ;                    // [286]
                                                                 // [286]
    //:-----------:#_TOUCHING_TO_AGOLASET_CELL_XY_#:[286]://     // [286]
    //:#_REFACTORING_ATM_TO_AM4_GOT_SCARY_#:[283]:-------://     // [283]
                                                                 // [283]
        const       t16 = "[FIX:v16(tile_Value_0to16-1)]";;;     // [283]
                                                                 // [283]
        const c_bit_hor = "[FIX:am4_0lx:MAYBE:am4_2mx]";;;;;     // [283]
        const c_bit_ver = "[FIX:am4_1ly:MAYBE:am4_3my]";;;;;     // [283]
        const c_bit_m_x = "[FIX:am4_2mx]" ;;;;;;;;;;;;;;;;;;     // [283]
        const c_bit_m_y = "[FIX:am4_3my]" ;;;;;;;;;;;;;;;;;;     // [283]
        const c_bit_mir = "[FIX:am4_2mx:OR:am4_3my]";;;;;;;;     // [283]
                                                                 // [283]
        const c_bit_lx0 = "[FIX:am4_0lx:(@NBO_0_1_2_3@)]";;;     // [283]
        const c_bit_ly1 = "[FIX:am4_1ly:(@NBO_0_1_2_3@)]";;;     // [283]
        const c_bit_mx2 = "[FIX:am4_2mx:(@NBO_0_1_2_3@)]";;;     // [283]
        const c_bit_my3 = "[FIX:am4_3my:(@NBO_0_1_2_3@)]";;;     // [283]
                                                                 // [283]
        const c_notouch_x = "[FIX:c.to4_del_x]";;;;;;;;;;;;;     // [283]
        const c_notouch_y = "[FIX:c.to4_del_y]";;;;;;;;;;;;;     // [283]
                                                                 // [283]
        const c_am4_lx0 = "[FIX:c_am4_0lx]" ;;;;;;;;;;;;;;;;     // [283]
        const c_am4_ly1 = "[FIX:c_am4_1ly]" ;;;;;;;;;;;;;;;;     // [283]
        const c_am4_mx2 = "[FIX:c_am4_2mx]" ;;;;;;;;;;;;;;;;     // [283]
        const c_am4_my3 = "[FIX:c_am4_3my]" ;;;;;;;;;;;;;;;;     // [283]
                                                                 // [283]
    //:-------:#_REFACTORING_ATM_TO_AM4_GOT_SCARY_#:[283]://     // [283]
    //:#_BULGE_ENUMS_INCORRECT_AGAIN_#:[282]:------------://     // [---]
                                                                 // [282]
        const c_bulginn = "[FIX:+NAMSPACE+:c.bu3_bulginn]" ;     // [282]
        const c_bulgnot = "[FIX:+NAMSPACE+:c.bu3_bulgnot]" ;     // [282]
        const c_bulgout = "[FIX:+NAMSPACE+:c.bu3_bulgout]" ;     // [282]
                                                                 // [282]
    //:------------:#_BULGE_ENUMS_INCORRECT_AGAIN_#:[282]://     // [282]
    //:#_ITS_BU3_NOT_DU3_#:[278]:------------------------://     // [---]
                                                                 // [278]
        const c_du3_bulgoff = "[FIX:c.bu3_bulgnot]" ;            // [278]
        const c_bu3_bulgoff = "[FIX:c.bu3_bulgnot]" ;            // [278]
                                                                 // [278]
        const c_du3_bulgout = "[FIX:bu3__NOT__du3]" ;            // [278]
        const c_du3_bulgnot = "[FIX:bu3__NOT__du3]" ;            // [278]
        const c_du3_bulginn = "[FIX:bu3__NOT__du3]" ;            // [278]
                                                                 // [278]
    //:------------------------:#_ITS_BU3_NOT_DU3_#:[278]://     // [278]
    //:#_I_CANT_SPELL_THE_WORD_BULGE_#:[278]:------------://     // [278]
                                                                 // [278]
                                                                 // [278]
        const c_bu3_bluginn = "[FIX:c.bu3_bulginn]" ;            // [278]
        const c_bu3_blugnot = "[FIX:c.bu3_bulgnot]" ;            // [278]
        const c_bu3_blugout = "[FIX:c.bu3_bulgout]" ;            // [278]
                                                                 // [278]
        const c_du3_bluginn = "[FIX:c.bu3_bulginn]" ;            // [278]
        const c_du3_blugnot = "[FIX:c.bu3_bulgnot]" ;            // [278]
        const c_du3_blugout = "[FIX:c.bu3_bulgout]" ;            // [278]
                                                                 // [278]
    //:------------:#_I_CANT_SPELL_THE_WORD_BULGE_#:[278]://     // [278]
    //:#_DU3_AND_BU3_ARE_DIFFERENT_THINGS_#:[278]:-------://     // [278]
                                                                 // [278]
        const d_d34_du3_r10 = "[FIX:d_r34_bu3_r10]" ;            // [278]
        const d_r34_du3_r10 = "[FIX:d_r34_bu3_r10]" ;            // [278]
        const d_d34_bu3_r10 = "[FIX:d_r34_bu3_r10]" ;            // [278]
                                                                 // [278]
    //:-------:#_DU3_AND_BU3_ARE_DIFFERENT_THINGS_#:[278]://     // [278]
    //:#_ILLEGAL_FOURSET_VARIABLES_#:[270]:--------------://     // [270]
                                                                 // [270]
        const  u25c = "[FIX:u_5x5:::(5x5_BitmapIn_U32)]";        // [270]
        const u_u2c = "[FIX:u_5x5:::(5x5_BitmapIn_U32)]";        // [270]
        const u_f4i = "[FIX:u_f16:::(FoursetCellIndex)]";        // [270]
        const   f4i = "[FIX:::f16:::(FoursetCellIndex)]";        // [270]
                                                                 // [270]
    //:--------------:#_ILLEGAL_FOURSET_VARIABLES_#:[270]://     // [270]
    //:#_Illegal_Color_Table_Names_#:[266]:--------------://     // [---][266]
                                                                 // [---][266]
        const d_la3_hex     = "[FIX:d.la3_v16_c04_hex]" ;        // [---][266]
        const d_v16_hex     = "[FIX:d.la3_v16_c04_hex]" ;        // [---][266]
        const d_la3_v16     = "[FIX:d.la3_v16_c04_hex]" ;        // [---][266]
        const d_la3_v16_hex = "[FIX:d.la3_v16_c04_hex]" ;        // [---][266]
        const d_la3_v16_c04 = "[FIX:d.la3_v16_c04_hex]" ;        // [267][---]
                                                                 // [---][266]
    //:--------------:#_Illegal_Color_Table_Names_#:[266]://     // [---][266]
    //:#_Illegal_Color_Names_#:[266]:--------------------://     // [---][266]
                                                                 // [---][266]
        const c_hexcol_0 = "[FIX:c________0]" ;                  // [---][266]
        const c_hexcol_1 = "[FIX:c________1]" ;                  // [---][266]
        const c_hexcol_2 = "[FIX:c________2]" ;                  // [---][266]
        const c_hexcol_3 = "[FIX:c________3]" ;                  // [---][266]
                                                                 // [---][266]
        const c_glassli0 = "[FIX:c_vacglow0|c_ladglow0]" ;       // [---][266]
        const c_glassli1 = "[FIX:c_vacglow1|c_ladglow1]" ;       // [---][266]
        const c_glassli2 = "[FIX:c_vacglow2|c_ladglow2]" ;       // [---][266]
        const c_glassli3 = "[FIX:c_vacglow3|c_ladglow3]" ;       // [---][266]
                                                                 // [---][266]
        const c_bulblad0 = "[FIX:c_vacglow0|c_ladglow0]" ;       // [---][266]
        const c_bulblad1 = "[FIX:c_vacglow1|c_ladglow1]" ;       // [---][266]
        const c_bulblad2 = "[FIX:c_vacglow2|c_ladglow2]" ;       // [---][266]
        const c_bulblad3 = "[FIX:c_vacglow3|c_ladglow3]" ;       // [---][266]
                                                                 // [---][266]
        const c_bauxite0 = "[FIX:c_ladsoil0]" ;                  // [---][266]
        const c_bauxite1 = "[FIX:c_ladsoil1]" ;                  // [---][266]
        const c_bauxite2 = "[FIX:c_ladsoil2]" ;                  // [---][266]
        const c_bauxite3 = "[FIX:c_ladsoil3]" ;                  // [---][266]
                                                                 // [---][266]
        const c_angpurp0 = "[FIX:c_parpurp0]" ;                  // [---][266]
        const c_angpurp1 = "[FIX:c_parpurp1]" ;                  // [---][266]
        const c_angpurp2 = "[FIX:c_parpurp2]" ;                  // [---][266]
        const c_angpurp3 = "[FIX:c_parpurp3]" ;                  // [---][266]
                                                                 // [---][266]
    //:--------------------:#_Illegal_Color_Names_#:[266]://     // [---][266]
                                                                 // [---]
    const   ag5 = "[FIX:a5g:(G_At_End_For:GEOM]" ;               // [259]
    const   ab5 = "[FIX:a5b:(G_At_End_For:BOMB]" ;               // [259]
    const   af5 = "[FIX:a5f:(G_At_End_For:FADA]" ;               // [259]
    const   HX3 = "[FIX:H3X(MACRO):OR:h3x(VAR)]" ;               // [259]
    const   HY3 = "[FIX:H3Y(MACRO):OR:h3y(VAR)]" ;               // [259]
    const   hx3 = "[FIX:H3X(MACRO):OR:h3x(VAR)]" ;               // [259]
    const   hy3 = "[FIX:H3Y(MACRO):OR:h3y(VAR)]" ;               // [259]
                                                                 // [---]
    const   b5x = "[FIX:bx5,CAPACITY_ATEND]";    //:@b5x@://     // [247]
    const   byx = "[FIX:by5,CAPACITY_ATEND]";    //:@b5y@://     // [247]
                                                                 // [---]
    const   d_log_ini_cli   = "[FIX:d_log_cli_ini]" ;;;;;;;;     // [236]
                                                                 // [---]
    const           eei     = "[FIX:::ee7::::]" ;;;;;;;;;;;;     // [234]
    const         d_eei_mmi = "[FIX:d_ee7_mmi]" ;;;;;;;;;;;;     // [234]
    const         d_eec_mmi = "[FIX:d_ee7_mmi]" ;;;;;;;;;;;;     // [234]
    const         d_eei_mmc = "[FIX:d_ee7_mmi]" ;;;;;;;;;;;;     // [234]
    const         d_eec_mmc = "[FIX:d_ee7_mmi]" ;;;;;;;;;;;;     // [234]
                                                                 // [---]
    const         d_mmi_u16 = "[FIX:d_dirtmem_mmi_u16]" ;;;;     // [233]
    const         d_r1k_rb4 = "[FIX:d_dirtmem_r1k_rb4]" ;;;;     // [233]
    const d_pix2048_mmi_u16 = "[FIX:d_dirtmem_mmi_u16]" ;;;;     // [233]
    const d_pix2048_r1k_rb4 = "[FIX:d_dirtmem_mmi_u16]" ;;;;     // [233]
    //:- - - - - - - - - - - -- - - - - - - - - - - -://   ;     // [233]
    const ria_dex = "[FIX:ria_loc:RIA-LOCAL-----------]"   ;     // [233]
    const ria_com = "[FIX:ria_glo:RIA-GLOBAL----------]"   ;     // [233]
    //:- - - - - - - - - - - -- - - - - - - - - - - -://   ;     // [233]
    ///// hx3     = "[FIX:h3x:(HOTEL___3___Capacity.X)]"   ;     // [259][233]
    ///// hy3     = "[FIX:h3y:(HOTEL___3___Capacity.Y)]"   ;     // [259][233]
    const h9i     = "[FIX:hi9:(HOTEL_INDEX:Capacity_9)]"   ;     // [233]
                                                                 // [---]
    const F_GPUDATA_TEX_GET = "[#_INLINE_THAT_SHIT_#]"     ;     // [229]
                                                                 // [---]
    const wgl_tex = "[#_WGL_LAST_FOR_EASY_FIND_#:tex_wgl]" ;     // [228][---]
    const wgl_ini = "[#_WGL_LAST_FOR_EASY_FIND_#:ini_wgl]" ;     // [228][---]
    const wgl_uni = "[#_WGL_LAST_FOR_EASY_FIND_#:uni_wgl]" ;     // [228][---]
    const wgl_err = "[#_WGL_LAST_FOR_EASY_FIND_#:err_wgl]" ;     // [228][---]
    const wgl_tik = "[#_WGL_LAST_FOR_EASY_FIND_#:tik_wgl]" ;     // [228][---]
                                                                 // [---]
    const ccx =("[@NO_CLUSTER_CELL_X@:WEHAVE[mmx]ATHOME]") ;     // [225]
    const ccy =("[@NO_CLUSTER_CELL_Y@:WEHAVE[mmy]ATHOME]") ;     // [225]
    const cci =("[@NO_CLUSTER_CELL_I@:WEHAVE[mmi]ATHOME]") ;     // [225]
                                                                 // [---]
    const c_startup_mod = "[USE:c_sum]" ;;;;;;;;;;;;;;;;;;;;     // [218]
    const c_startup     = "[USE:c_sum]" ;;;;;;;;;;;;;;;;;;;;     // [218]
                                                                 // [---]
    const c_bin_nil = "[PIK:c_bin_lef_nil|c_bin_rig_nil]";       // [208]
    const d_binfont_lut_lef ="[FIX:JustPutIntoOneArray]" ;       // [208]
    const d_binfont_lut_rig ="[FIX:JustPutIntoOneArray]" ;       // [208]
                                                                 // [---]
    //::::::::::::::::::::::::@bin_luc@:::@bin_llc@::::::://     // [207]
    const c_bin_lef_a ="[FIX:c_bin_luc_a|c_bin_llc_a]"  ;;;;     // [207]
    const c_bin_lef_b ="[FIX:c_bin_luc_b|c_bin_llc_b]"  ;;;;     // [207]
    const c_bin_lef_c ="[FIX:c_bin_luc_c|c_bin_llc_c]"  ;;;;     // [207]
    const c_bin_lef_d ="[FIX:c_bin_luc_d|c_bin_llc_d]"  ;;;;     // [207]
    const c_bin_lef_e ="[FIX:c_bin_luc_e|c_bin_llc_e]"  ;;;;     // [207]
    const c_bin_lef_f ="[FIX:c_bin_luc_f|c_bin_llc_f]"  ;;;;     // [207]
    const c_bin_lef_g ="[FIX:c_bin_luc_g|c_bin_llc_g]"  ;;;;     // [207]
    const c_bin_lef_h ="[FIX:c_bin_luc_h|c_bin_llc_h]"  ;;;;     // [207]
    const c_bin_lef_i ="[FIX:c_bin_luc_i|c_bin_llc_i]"  ;;;;     // [207]
    const c_bin_lef_j ="[FIX:c_bin_luc_j|c_bin_llc_j]"  ;;;;     // [207]
    const c_bin_lef_k ="[FIX:c_bin_luc_k|c_bin_llc_k]"  ;;;;     // [207]
    const c_bin_lef_l ="[FIX:c_bin_luc_l|c_bin_llc_l]"  ;;;;     // [207]
    const c_bin_lef_m ="[FIX:c_bin_luc_m|c_bin_llc_m]"  ;;;;     // [207]
    const c_bin_lef_n ="[FIX:c_bin_luc_n|c_bin_llc_n]"  ;;;;     // [207]
    const c_bin_lef_o ="[FIX:c_bin_luc_o|c_bin_llc_o]"  ;;;;     // [207]
    const c_bin_lef_p ="[FIX:c_bin_luc_p|c_bin_llc_p]"  ;;;;     // [207]
    const c_bin_lef_q ="[FIX:c_bin_luc_q|c_bin_llc_q]"  ;;;;     // [207]
    const c_bin_lef_r ="[FIX:c_bin_luc_r|c_bin_llc_r]"  ;;;;     // [207]
    const c_bin_lef_s ="[FIX:c_bin_luc_s|c_bin_llc_s]"  ;;;;     // [207]
    const c_bin_lef_t ="[FIX:c_bin_luc_t|c_bin_llc_t]"  ;;;;     // [207]
    const c_bin_lef_u ="[FIX:c_bin_luc_u|c_bin_llc_u]"  ;;;;     // [207]
    const c_bin_lef_v ="[FIX:c_bin_luc_v|c_bin_llc_v]"  ;;;;     // [207]
    const c_bin_lef_w ="[FIX:c_bin_luc_w|c_bin_llc_w]"  ;;;;     // [207]
    const c_bin_lef_x ="[FIX:c_bin_luc_x|c_bin_llc_x]"  ;;;;     // [207]
    const c_bin_lef_y ="[FIX:c_bin_luc_y|c_bin_llc_y]"  ;;;;     // [207]
    const c_bin_lef_z ="[FIX:c_bin_luc_z|c_bin_llc_z]"  ;;;;     // [207]
                                                                 // [207]
    //::::::::::::::::::::::::@bin_ruc@:::@bin_rlc@::::::://     // [207]
    const c_bin_rig_a ="[FIX:c_bin_ruc_a|c_bin_rlc_a]"  ;;;;     // [207]
    const c_bin_rig_b ="[FIX:c_bin_ruc_b|c_bin_rlc_b]"  ;;;;     // [207]
    const c_bin_rig_c ="[FIX:c_bin_ruc_c|c_bin_rlc_c]"  ;;;;     // [207]
    const c_bin_rig_d ="[FIX:c_bin_ruc_d|c_bin_rlc_d]"  ;;;;     // [207]
    const c_bin_rig_e ="[FIX:c_bin_ruc_e|c_bin_rlc_e]"  ;;;;     // [207]
    const c_bin_rig_f ="[FIX:c_bin_ruc_f|c_bin_rlc_f]"  ;;;;     // [207]
    const c_bin_rig_g ="[FIX:c_bin_ruc_g|c_bin_rlc_g]"  ;;;;     // [207]
    const c_bin_rig_h ="[FIX:c_bin_ruc_h|c_bin_rlc_h]"  ;;;;     // [207]
    const c_bin_rig_i ="[FIX:c_bin_ruc_i|c_bin_rlc_i]"  ;;;;     // [207]
    const c_bin_rig_j ="[FIX:c_bin_ruc_j|c_bin_rlc_j]"  ;;;;     // [207]
    const c_bin_rig_k ="[FIX:c_bin_ruc_k|c_bin_rlc_k]"  ;;;;     // [207]
    const c_bin_rig_l ="[FIX:c_bin_ruc_l|c_bin_rlc_l]"  ;;;;     // [207]
    const c_bin_rig_m ="[FIX:c_bin_ruc_m|c_bin_rlc_m]"  ;;;;     // [207]
    const c_bin_rig_n ="[FIX:c_bin_ruc_n|c_bin_rlc_n]"  ;;;;     // [207]
    const c_bin_rig_o ="[FIX:c_bin_ruc_o|c_bin_rlc_o]"  ;;;;     // [207]
    const c_bin_rig_p ="[FIX:c_bin_ruc_p|c_bin_rlc_p]"  ;;;;     // [207]
    const c_bin_rig_q ="[FIX:c_bin_ruc_q|c_bin_rlc_q]"  ;;;;     // [207]
    const c_bin_rig_r ="[FIX:c_bin_ruc_r|c_bin_rlc_r]"  ;;;;     // [207]
    const c_bin_rig_s ="[FIX:c_bin_ruc_s|c_bin_rlc_s]"  ;;;;     // [207]
    const c_bin_rig_t ="[FIX:c_bin_ruc_t|c_bin_rlc_t]"  ;;;;     // [207]
    const c_bin_rig_u ="[FIX:c_bin_ruc_u|c_bin_rlc_u]"  ;;;;     // [207]
    const c_bin_rig_v ="[FIX:c_bin_ruc_v|c_bin_rlc_v]"  ;;;;     // [207]
    const c_bin_rig_w ="[FIX:c_bin_ruc_w|c_bin_rlc_w]"  ;;;;     // [207]
    const c_bin_rig_x ="[FIX:c_bin_ruc_x|c_bin_rlc_x]"  ;;;;     // [207]
    const c_bin_rig_y ="[FIX:c_bin_ruc_y|c_bin_rlc_y]"  ;;;;     // [207]
    const c_bin_rig_z ="[FIX:c_bin_ruc_z|c_bin_rlc_z]"  ;;;;     // [207]
                                                                 // [---]
    const F_KONAMI_EVT_KEY = "[FIX:KONAMIC:NOT:KONAMI]" ;        // [203]
    const d_konamic_tog = "[FIX:d.konamic_h3x_h3y_tog]" ;        // [203]
                                                                 // [---]
    //:#_KONAMIC_NUMPAD_MWM_#:[199]:---------------------://     // [199]
        const c_konamic_num_000 = "[FIX:konamic_dum_000]";       // [199]
        const c_konamic_num_001 = "[FIX:konamic_dum_001]";       // [199]
        const c_konamic_num_002 = "[FIX:konamic_dum_002]";       // [199]
        const c_konamic_num_003 = "[FIX:konamic_dum_003]";       // [199]
        const c_konamic_num_004 = "[FIX:konamic_dum_004]";       // [199]
        const c_konamic_num_005 = "[FIX:konamic_dum_005]";       // [199]
        const c_konamic_num_006 = "[FIX:konamic_dum_006]";       // [199]
        const c_konamic_num_007 = "[FIX:konamic_dum_007]";       // [199]
        const c_konamic_num_008 = "[FIX:konamic_dum_008]";       // [199]
        const c_konamic_num_009 = "[FIX:konamic_dum_009]";       // [199]
                                                                 // [199]
        const c_konamic_pad_000 = "[FIX:konamic_dum_000]";       // [199]
        const c_konamic_pad_001 = "[FIX:konamic_dum_001]";       // [199]
        const c_konamic_pad_002 = "[FIX:konamic_dum_002]";       // [199]
        const c_konamic_pad_003 = "[FIX:konamic_dum_003]";       // [199]
        const c_konamic_pad_004 = "[FIX:konamic_dum_004]";       // [199]
        const c_konamic_pad_005 = "[FIX:konamic_dum_005]";       // [199]
        const c_konamic_pad_006 = "[FIX:konamic_dum_006]";       // [199]
        const c_konamic_pad_007 = "[FIX:konamic_dum_007]";       // [199]
        const c_konamic_pad_008 = "[FIX:konamic_dum_008]";       // [199]
        const c_konamic_pad_009 = "[FIX:konamic_dum_009]";       // [199]
    //:---------------------:#_KONAMIC_NUMPAD_MWM_#:[199]://     // [199]
                                                                 // [---]
    const d_tileboi_logtile_put = "[FIX:JUST:log_put]" ;         // [197]
                                                                 // [---]
    const c_denomim         = "[FIX:c_duideno]";                 // [193]
    const c_dui_denominator = "[FIX:c_duideno]";                 // [193]
                                                                 // [---]
    const c_ins_max = "[FIX:c_dui_max]";;;;;;;;;;;;;;;;;;        // [191]
    const c_ins_1_3 = "[FIX:c_dui_1_3]";;;;;;;;;;;;;;;;;;        // [191]
    const c_ins_2_3 = "[FIX:c_dui_2_3]";;;;;;;;;;;;;;;;;;        // [191]
    const c_ins_3_3 = "[FIX:c_dui_3_3]";;;;;;;;;;;;;;;;;;        // [191]
    const d_la3_ins = "[FIX:d_la3_dui]";;;;;;;;;;;;;;;;;;        // [191]
    const c_dui_til = "[FIX:c_dui_geo]";;;;;;;;;;;;;;;;;;        // [191]
    const c_ins_til = "[FIX:c_dui_geo][#DOUBLY_WRONG#]" ;        // [191]
    const c_ins_geo = "[FIX:c_dui_geo]" ;;;;;;;;;;;;;;;;;        // [191]
    const c_ins_bom = "[FIX:c_dui_bom]" ;;;;;;;;;;;;;;;;;        // [191]
    const c_ins_fad = "[FIX:c_dui_fad]" ;;;;;;;;;;;;;;;;;        // [191]
                                                                 // [---]
    const d_konamic_win_ptr = "[FIX:d_konamic_w_p:::::::]" ;     // [187]
    const d_konamic_win_len = "[FIX:NO_NEED,ALWAYS_CHECK]" ;     // [187]
    const d_konamic_win_w_l = "[FIX:Means:win_len:NO_USE]" ;     // [187]
                                                                 // [---]
    const lat_lev = "[FIX:lat_o_s|lat_m_x|lat_m_y|til_san]";     // [177]
                                                                 // [---]
    const GET_P2K     = "[FIX:GET_UV3_P2K]" ;                    // [175]
    const GET_UV3     = "[FIX:GET_UV3_P2K]" ;                    // [175]
    const GET_UV4     = "[FIX:GET_UV3_P2K]" ;                    // [175]
    const GET_UV4_P2K = "[FIX:GET_UV3_P2K]" ;                    // [175]
    const GET_P2K_UV3 = "[FIX:GET_UV3_P2K]" ;                    // [175]
    const GET_P2K_UV4 = "[FIX:GET_UV3_P2K]" ;                    // [175]
                                                                 // [---]
    const uniformi = "[FIX:I32:uniform1i:U32:uniform1ui]"   ;    // [174]
    const c_artgirl_p2k_dex = "[FIX:c _ artgirl _ p2k_lot]" ;    // [174]
    const d_artgirl_p2k_dex = "[FIX:c _ artgirl _ p2k_lot]" ;    // [174]
    const d_artgirl_tex_han = "[FIX:d _ artgirl _ p2k_tex]" ;    // [174]
    const d_artgirl_han_tex = "[FIX:d _ artgirl _ p2k_tex]" ;    // [174]
    const d_artgirl_texture_handle = "[FIX:SEE______ABOVE]" ;    // [174]
                                                                 // [---]
    const uv4_p2k     = "[GPU_SHADER_CODE_ONLY]" ;               // [173]
    const p2k_uv4     = "[FIX:d_p2k||uv4_p2k]" ;;;               // [173]
    const sam_p2k     = "[FIX:d_p2k]" ;                          // [173]
    const p2k_sam     = "[FIX:d_p2k]" ;                          // [173]
    const pix_sam     = "[FIX:d_p2k]" ;                          // [173]
    const sam_pix     = "[FIX:d_p2k]" ;                          // [173]
    const sam_pix2048 = "[FIX:d_p2k]" ;                          // [173]
    const pix2048_sam = "[FIX:d_p2k]" ;                          // [173]
    const c_artgirl_p2k_loc =("" ///////////////                 // [173]
          + "[YOU_COULD_MEAN:c_artgirl_p2k_lot]"                 // [173]
          + "[YOU_COULD_MEAN:::::::::d_p2k_loc]"                 // [173]
    );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;                 // [173]
                                                                 // [---]
    const d_te7_lmx = "[@TRIPLE_FIX@(la3___lmx)]";               // [165]
    const d_te7_lmy = "[@TRIPLE_FIX@(la3___lmx)]";               // [165]
                                                                 // [---]
    const d_g25_rdi = "[ACTUALLY_USE:d_g25_r13]";                // [163]
                                                                 // [163]
    const d_g25_r16 = "[CALL_IT:d_g25_rdi]" ;                    // [163]
                    //:Too easy to confuse[ r16 ]with ://        // [163]
                    //:[ r13 ]Even though they are    ://        // [163]
                    //:two different variable names.  ://        // [163]
                                                                 // [163]
    const d_r13_h_x = "[THAT_IS_HOTEL13_WE_USE:d_r13_r4x]" ;     // [163]
    const d_r13_h_y = "[THAT_IS_HOTEL13_WE_USE:d_r13_r4y]" ;     // [163]
                                                                 // [163]
    const d_g25_rdx = "[USE:g25_r4x]" ;                          // [163]
    const d_g25_rdy = "[USE:g25_r4y]" ;                          // [163]
                                                                 // [163]
    const d_hi9_mmc =( "[USE:d_hi9_mmi:(mmc_is_a_const)]"   );   // [233][BUG][163]
    const       r5i =( "[MEANS_SAME_THING_AS:g25:USE_THAT]" );   // [163]
    const     i_r5i =( "[MEANS_SAME_THING_AS:g25:USE_THAT]" );   // [163]
                                                                 // [---]
    const i_c_x = "[TOO_AMBIGIOUS_USE:i_h3x]______________";     // [161]
    const i_c_y = "[TOO_AMBIGIOUS_USE:i_h3y]______________";     // [161]
    const i_h_x = "[TOO_AMBIGIOUS_USE:i_r5x]______________";     // [161]
    const i_h_y = "[TOO_AMBIGIOUS_USE:i_r5y]______________";     // [161]
    const i_t_x = "[TOO_AMBIGIOUS_USE:i_stx || i_gtx ]____";     // [161]
    const i_t_y = "[TOO_AMBIGIOUS_USE:i_sty || i_gty ]____";     // [161]
                                                                 // [---]
    const d_te7_t_s = "[:::FIX:::te7_peb]" ;                     // [153]
    const d_te7_t_w = "[:::FIX:::te7_peb]" ;                     // [153]
    const d_te7_t_h = "[:::FIX:::te7_peb]" ;                     // [153]
    const d_te7_wid = "[te7_lat||te7_peb]" ;                     // [153]
    const d_te7_hig = "[te7_lat||te7_peb]" ;                     // [153]
    const d_te7_san = "[te7_lat||te7_peb]" ;                     // [153]
                                                                 // [---]
    const c_tmx_000 ="[FIX:c_tmi_000]";                          // [150]
    const c_tmx_001 ="[FIX:c_tmi_001]";                          // [150]
    const c_tmx_002 ="[FIX:c_tmi_002]";                          // [150]
    const c_tmx_003 ="[FIX:c_tmi_003]";                          // [150]
    const c_tmx_004 ="[FIX:c_tmi_004]";                          // [150]
    const c_tmx_005 ="[FIX:c_tmi_005]";                          // [150]
    const c_tmx_006 ="[FIX:c_tmi_006]";                          // [150]
                                                                 // [150]
    const c_tmy_000 ="[FIX:c_tmi_000]";                          // [150]
    const c_tmy_001 ="[FIX:c_tmi_001]";                          // [150]
    const c_tmy_002 ="[FIX:c_tmi_002]";                          // [150]
    const c_tmy_003 ="[FIX:c_tmi_003]";                          // [150]
    const c_tmy_004 ="[FIX:c_tmi_004]";                          // [150]
    const c_tmy_005 ="[FIX:c_tmi_005]";                          // [150]
    const c_tmy_006 ="[FIX:c_tmi_006]";                          // [150]
                                                                 // [---]
    const i_mou_evt = "[FIX:i_evt_mou(GeneralToSpecific)]";      //      [144]
    const   mou_evt = "[FIX:i_evt_mou(GeneralToSpecific)]";      //      [144]
    const   evt_mov = "[FIX:i_evt_mou(MoreGeneric)]" ;           //      [144]
    const i_evt_mov = "[FIX:i_evt_mou(MoreGeneric)]" ;           //      [144]
    const d_mou = "[FIX:USE[ d_dmx , d_dmy ]]" ;                 // [157][141]
                                                                 // [---]
    const d_hi9_duc = "[FIX:d_hi9_dcx && d_hi9_dcy]" ;           //      [128]
                                                                 //      [128]
    const c_hxy_dc0 = "[FIX:c_dch_xy0]" ;                        //      [128]
    const c_hxy_dc1 = "[FIX:c_dch_xy1]" ;                        //      [128]
    const c_hxy_dc2 = "[FIX:c_dch_xy2]" ;                        //      [128]
                                                                 //      [128]
    const c_xy0_dch = "[FIX:c_dch_xy0]" ;                        //      [128]
    const c_xy1_dch = "[FIX:c_dch_xy1]" ;                        //      [128]
    const c_xy2_dch = "[FIX:c_dch_xy2]" ;                        //      [128]
                                                                 //      [128]
    const c_duc_c_x_hi0 = "[FIX:d_hi9_dcx]" ;                    //      [128]
    const c_duc_c_y_hi0 = "[FIX:d_hi9_dcy]" ;                    //      [128]
                                                                 //      [128]
    const c_duc_c_x_hi1 = "[FIX:d_hi9_dcx]" ;                    //      [128]
    const c_duc_c_y_hi1 = "[FIX:d_hi9_dcy]" ;                    //      [128]
                                                                 // [---]
    const d_camerah_maxunit = "[FIX:ITS_A_CONSTANT_FOOL!]";      // [113]
                                                                 // [---]
    const i_eom = ( "[FIX:i_oem(Optional_Error_Message)]" );     // [110]
                                                                 // [110]
    const F_VITALDO =( "[FIX:VITALDO](Hoisted_Function)"  );     // [109]
    const F_MAYBEDO =( "[FIX:MAYBEDO](Hoisted_Function)"  );     // [109]
    const c_bug     =( "[FIX:d_bug]"                      );     // [109]
    const c_eci     =( "[FIX:d_eci]"                      );     // [109]
    const c_eco     =( "[FIX:d_eco]"                      );     // [109]
    const   ECI     =( "[THIS_ISNT_YOUR_C_CODE_USE:c_eci]");     // [109]
    const   ECO     =( "[THIS_ISNT_YOUR_C_CODE_USE:c_eco]");     // [109]
                                                                 // [109]
    const c_camerah_zeb_du0 =( "[FIX:c_camerah_zeb_dut]" );      // [109][108]
    const c_camerah_zeb_du6 =( "[FIX:c_camerah_zeb_dut]" );      // [109][108]
                                                                 // [109]
    const d_camerah_zeb_du0 =( "[DOUBLY_WRONG]" );               // [109]
    const d_camerah_zeb_du6 =( "[DOUBLY_WRONG]" );               // [109]
                                                                 // [109]
    const d_camerah_zeb_dut =( "[FIX:CONST_NOT_DATAVAR]" );      // [109]
    const d_camerah_zeb_du1 =( "[FIX:CONST_NOT_DATAVAR]" );      // [109]
    const d_camerah_zeb_du2 =( "[FIX:CONST_NOT_DATAVAR]" );      // [109]
    const d_camerah_zeb_du3 =( "[FIX:CONST_NOT_DATAVAR]" );      // [109]
    const d_camerah_zeb_du4 =( "[FIX:CONST_NOT_DATAVAR]" );      // [109]
    const d_camerah_zeb_du5 =( "[FIX:CONST_NOT_DATAVAR]" );      // [109]
    const d_camerah_zeb_dur =( "[FIX:CONST_NOT_DATAVAR]" );      // [109]
    const d_camerah_zeb_duh =( "[FIX:CONST_NOT_DATAVAR]" );      // [109]
    const d_camerah_zeb_dum =( "[FIX:CONST_NOT_DATAVAR]" );      // [109]
                                                                 // [---]
    const c_camerah_zebasis_du0 ="[DOUBLY_WRONG]";               // [108]
    const c_camerah_zebasis_du6 ="[DOUBLY_WRONG]";               // [108]
    const c_camerah_cir_cum_off ="[FIX:cir_cum_not]" ;           // [108]
                                                                 // [108]
    const c_camerah_zebasis_dut =("[FIX:c_camerah_zeb_dut]");    // [108]
    const c_camerah_zebasis_du1 =("[FIX:c_camerah_zeb_du1]");    // [108]
    const c_camerah_zebasis_du2 =("[FIX:c_camerah_zeb_du2]");    // [108]
    const c_camerah_zebasis_du3 =("[FIX:c_camerah_zeb_du3]");    // [108]
    const c_camerah_zebasis_du4 =("[FIX:c_camerah_zeb_du4]");    // [108]
    const c_camerah_zebasis_du5 =("[FIX:c_camerah_zeb_du5]");    // [108]
    const c_camerah_zebasis_dur =("[FIX:c_camerah_zeb_dur]");    // [108]
    const c_camerah_zebasis_duh =("[FIX:c_camerah_zeb_duh]");    // [108]
    const c_camerah_zebasis_dum =("[FIX:c_camerah_zeb_dum]");    // [108]
                                                                 // [---]
    const d_fps =( "[MORE_SENSIBLE::c_fps]" );                   // [085]
    const i_tim =( "[REFACTORED_USE:d_tik]" );                   // [085]
    const d_tim =( "[YOU_MEAN:::::::d_tik]" );                   // [085]
    const d_cligame_tik =( "[FIX:d_tik]"    );                   // [085]
                                                                 // [085]
    const c_cligame_t_0 =( "[FIX:NOT_CONST:d_cligame_t_0]" );    // [085]
    const c_cligame_t_1 =( "[FIX:NOT_CONST:d_cligame_t_1]" );    // [085]
    const c_cligame_mil =( "[FIX:NOT_CONST:d_cligame_mil]" );    // [085]
    const c_cligame_ams =( "[FIX:NOT_CONST:d_cligame_ams]" );    // [085]
    const d_cligame_tms =( "[IS_CONSTANT:::c_cligame_tms]" );    // [085]
                                                                 // [---]
    const idv =( "[FIX:vid]" );                                  // [071]
    const idf =( "[FIX:fid]" );                                  // [071]
    const idp =( "[FIX:pid]" );                                  // [071]
                                                                 // [071]
    const fss =( "[FIX:ssf]" );                                  // [071]
    const vss =( "[FIX:ssv]" );                                  // [071]
    const P_F =( "[FIX:MSG]( P_F == MSG )" );                    // [071]
                                                                 // [---]
    const c_artgirl_ren_len =( "[FIX:ren_tot]" );                // [067] 
                                                                 // [---]       
    const tcz  =( "[TexCoord.Z:NO_SUCH_THING]" );                // [066] 
                                                                 // [---]
    const d_sob =( "" ///////////////////                        // [042] 
    +    "[WHAT_THE_FUCK_WAS_I_THINKING]"                        // [042] 
    +    "[THIS_OBJECT_CANNOT_BE_GLOBAL]"                        // [042] 
    +    "[FIXED_IN_TUTORIAL_042.......]"                        // [042] 
    );; /////////////////////////////////                        // [042] 
                                                                 // [---]
    const d_dbp =( //:It's not "DataBase Pool"://                // [044] 
        "[FIX:d_dcp(Database_Client_Pool)]" );;                  // [044] 
                                                                 // [---]
    const cantsay =( "[FIX:wontsay]" );                          // [045] 
                                                                 // [---]         
    const cmd_nam =( "[FIX:sql_cmd]" );                          // [056] 
    const nam_cmd =( "[FIX:sql_cmd]" );                          // [056] 
    const cmd_sql =( "[FIX:sql_cmd]" );                          // [056] 
    const msg_err =( "[FIX:err_msg]" );                          // [056] 
                                                                 // [---]    
    const key_evt =( "[FIX:evt_key]" );                          // [057] 
    const F_INI_KEYMAST =( "[FIX:F_KEYMAST_INI]" );              // [057] 
                                                                 // [---] 
    const d_wgl   =( "[FIX:d_gpudata_wgl]" );                    // [228][063] 
    const   wgl   =( "[FIX:d_gpudata_wgl]" );                    // [228][063] 
                                                                 // [---]
//:===============================:MONKEY_WRENCH_MACROS:[108]://
//:==================:ILLEGAL_STUFF_GO_STRAIGHT_TO_JAIL:[042]://
//:XMLHTTPREQUEST_WIREUP_HACK:[058]:=========================://
                                                                 // [---]
    /** *************************************** **/              // [058] 
    /** Using pre-processing black magic here.  **/              // [058] 
    /** VID[ 058 ][ www.tinyurl.com/GAME-TUTS ] **/              // [058] 
    /** *************************************** **/              // [058] 
                                                                 // [058] 
    var d_urlsite =(                                             // [058] 
        "[BLACK_MAGIC:d_urlsite]"                                // [059] 
    );;                                                          // [058] 
    var d_urlsite_o_k=(                                          // [059] 
        "[BLACK_MAGIC:d_urlsite_o_k]"                            // [059] 
    );;                                                          // [059] 
                                                                 // [---]
//:=========================:XMLHTTPREQUEST_WIREUP_HACK:[058]://
//:MASTER_DECLARATION_DATA:[035]:============================://

    //:--------------------------------------------------://
    //:   !s!   : server only                            ://
    //:   !c!   : client only                            ://
    //:   !a!   : all sides have access                  ://
    //: "[nil]" : explicit [ nil / null ]                ://
    //:--------------------------------------------------://

if( yesnode ){ //:-------------------------------------------://

    const n = "\n" ; //: @n@ : New_Line_Char  ::::::::::[041]://
                     //:const == block scope  ::::::::::[041]://

    //:DABITCH_CRUD:[046]:-------------------------------://    
                                                 //:[046]://    
        var d_dabitch_c_tab_hex =( "         "+n //:[046]://    
        +"                                   "+n //:[046]://    
        +" /** CRUD.CREATE (VIDEO[051]) **/  "+n //:[051]://    
        +"                                   "+n //:[046]://    
        +"INSERT INTO tab_hex                "+n //:[046]://    
        +"(    c_nam ,   c_hex )VALUES       "+n //:[046]://    
        +"(  '[i_nam]', [i_hex] )            "+n //:[046]://    
        +"ON CONFLICT ( c_nam ) DO NOTHING ; "+n //:[048]://    
        +"                                   "+n //:[046]://    
        );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; //:[046]://    
        var d_dabitch_r_tab_hex =( "         "+n //:[046]://    
        +"                                   "+n //:[046]://  
        +" /** CRUD.READ (VIDEO[052]) **/    "+n //:[052]://      
        +"                                   "+n //:[046]://    
        +"SELECT * FROM tab_hex              "+n //:[046]://    
        +"WHERE c_nam = '[i_nam]' ;          "+n //:[046]://    
        +"                                   "+n //:[046]://    
        );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; //:[046]://    
        var d_dabitch_u_tab_hex =( "         "+n //:[046]://    
        +"                                   "+n //:[046]://    
        +" /** CRUD.READ (VIDEO[053]) **/    "+n //:[053]://     
        +"                                   "+n //:[046]://    
        +"UPDATE tab_hex SET c_hex = [i_hex] "+n //:[046]://    
        +"WHERE c_nam = '[i_nam]' ;          "+n //:[046]://    
        +"                                   "+n //:[046]://    
        );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; //:[046]://    
        var d_dabitch_d_tab_hex =( "         "+n //:[046]://    
        +"                                   "+n //:[046]://    
        +" /** CRUD.READ (VIDEO[054]) **/    "+n //:[054]://    
        +"                                   "+n //:[046]://    
        +"DELETE FROM tab_hex                "+n //:[046]://    
        +"WHERE c_nam = '[i_nam]' ;          "+n //:[046]://    
        +"                                   "+n //:[046]://    
        );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; //:[046]://    
                                                 //:[046]://    
    //:-------------------------------:DABITCH_CRUD:[046]://    

    var d_dts_tab_hex =( "                  "+n  //:[044]://
    +"                                      "+n  //:[044]://
    +"  DROP TABLE IF EXISTS tab_hex ;      "+n  //:[044]://
    +"                                      "+n  //:[044]://
    );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  //:[044]://
 
    var d_cts_tab_hex =( "                  "+n  //:[041]://
    +"  CREATE TABLE IF NOT EXISTS tab_hex( "+n  //:[041]://
    +"       iid SERIAL PRIMARY KEY         "+n  //:[041]://
    +"  ,  c_nam VARCHAR( 64 )     UNIQUE   "+n  //:[048]://      
    +"  ,  c_hex INT CHECK ( c_hex >= 0 )   "+n  //:[046]://    
    +"  );;                                 "+n  //:[041]://
    );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  //:[041]://

    var d_dbu = process.env.DATABASE_URL ;      //:[040]@dbu@://
    var d_cin ={                                //:[040]@cin@://
        connectionString : d_dbu                //:[040]@c_s@://
    ,   ssl : { rejectUnauthorized : false }    //:[040]@ssl@://
    };;                                         //:[040] --- ://
    var d_dcp = "[nil][!s!:d_dcp]"       ;      //:[040]@dcp@://

    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [138]
    //: TAG[ <html> | <HTML> | </html> | </HTML> ]       ://     // [138]
    //: TAG[ <body> | <BODY> | </body> | </BODY> ]       ://     // [138]
    //: TAG[ <head> | <HEAD> | </head> | </HEAD> ]       ://     // [138]
    //: TAG[ <title>| <TITLE>| </title>| </TITLE>]       ://     // [138]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [138]
    var d_webpage =( "" //:------------------://                 // [140][027]
    +'      <!DOCTYPE HTML><head>              '                 // [140][027]
    +'      <meta charset="utf-8"><title>      '                 // [140][027]
    +'          [AIM]                          '                 // [140][027]
    +'      </title>                           '                 // [140][027]
    +'          <script                        '                 // [140][027]
    +'              src    ="./ATOMIC_IVY_MMO" '                 // [140][027]
    +'              charset="UTF-8">           '                 // [140][027]
    +'          </script>                      '                 // [140][027]
    +'      </head>                            '                 // [140][027]
    );; //:----------------------------------://                 // [140][027]

    var d_jso = { "Content-Type": "application/json"         } ; // [140][025]
    var d_txt = { "Content-Type": "text/plain"               } ; // [140][025]
    var d_png = { "Content-Type": "image/png"                } ; // [140][025]
    var d_htm = { "Content-Type": "text/html"                } ; // [140][025]
    var d_js  = { "Content-Type": "text/javascript"          } ; // [140][025]
    var d_exe = { "Content-Type": "application/x-msdownload" } ; // [140][025]
    var d_css = { "Content-Type": "text/css"                 } ; // [140][025]

    console.log( "[d_dbu]" , d_dbu );

};; //:------------------------------------------------------:// // [???]
if( notnode ){ //:-------------------------------------------:// // [???]
                                                                 // [---]
    var d_msgkill_001 =( "" ///////////////////////              // [231][059]
    +"[Your_App_Is_Crashing_Because_You_Dont]"+"\n"              // [---][059] 
    +"[Have_Access_To_______________________]"+"\n"              // [---][059] 
    +"[-------------------------------------]"+"\n"              // [---][059] 
    +"[   process.env[HEROKU_APP_NAME]      ]"+"\n"              // [---][059] 
    +"[-------------------------------------]"+"\n"              // [---][059] 
    +"[To_Fix_This_You_Need_To_Run__________]"+"\n"              // [---][059] 
    +"[The_Below_Command.___________________]"+"\n"              // [---][059] 
    +"[WRITE_IT_AS_ONE_SINGLE_LINE!!!!!!!!!!]"+"\n"              // [---][059] 
    +"                                       "+"\n"              // [---][059] 
    +"       heroku labs:enable              "+"\n"              // [---][059] 
    +"       runtime-dyno-metadata           "+"\n"              // [---][059] 
    +"       --app YOUR_APP_NAME_HERE        "+"\n"              // [231][059] 
    +"                                       "+"\n"              // [---][059] 
    +"[GOOD_LUCK! -KanjiCoder ______________]"+"\n"              // [---][059] 
    );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;              // [231][059]
                                                                 // [---]
    var d_can = "[nil][!c!:d_can]" ;  //: Html5 Canvas   ://     // [035] 
    //- d_wgl = "[nil][!c!:d_wgl]" ;      WebGL Context  -//     // [063]
                                                                 // [---]
    var d_url = d_urlsite ;           //: E.T.PhoneHome  ://     // [058] 
                                                                 // [---]
};; //:------------------------------------------------------:// // [???]
if( yesnode || notnode ){ //:--------------------------------:// // [???]

    //:XXXXXXXX_WHAT_DOES_MARCELLUS_WALLUS_LOOK_LIKE_XXXXXXXX:// // [090]

};; //:------------------------------------------------------://
//:============================:MASTER_DECLARATION_DATA:[035]://
//:MASTER_DECLARATION_LIBS:[035]:============================://
if( yesnode ){ //:-------------------------------------------://

    /** ************************************************ **/
    /** "l_" prefix is only for libraries gotten with    **/
    /** "require". Canvas and WebGl could technically be **/
    /** thought of as "libraries" as well. But decided   **/
    /** categorizing them as "data" was better move.     **/
    /** ************************************************ **/

    var l_pg  = require( "pg"   /**[040]**/ );  //:PostGreSQL://
    var l_fs  = require( "fs"               );  //:FileSys   ://
    var l_url = require( "url"              );  //: U.R.L.   ://
    var l_qs  = require( "node:querystring" );  //:QueryStr  ://

};; //:------------------------------------------------------://
//:============================:MASTER_DECLARATION_LIBS:[035]://
//:CONST_MACROS_BY_SYSTEM[074]:==============================:// // [---]

//: __RGBA896__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [471]
                                                                 // [471]
    /** ************************************************ **/     // [471]
    /** Nothing Here , If ever there will be. My focus   **/     // [471]
    /** feels strange. Its not the "frusterating to      **/     // [471]
    /** focus" Or the "irritating to focus" that I got   **/     // [471]
    /** as a kid. It is... what I think people call      **/     // [471]
    /** "Brain Fog".                                     **/     // [471]
    /** ***************************************************/     // [471]
                                                                 // [471]
//: __PIX2048__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [185][MOV][156]
                                                                 // [185][MOV][---]
    /** NOTHING_HERE_YET **/                                     // [185][MOV][156]
                                                                 // [185][MOV][---]
//: __PIXDUMP__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [464]
                                                                 // [464]
    /** NOTHING_HERE_IF_EVER_IAM_FUCKING_TIRED_SO_TIRED **/      // [464]
                                                                 // [464]
//: __GPUDATA__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [226]
                                                                 // [226]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [226]
    //: @DEPENDS_ON@[ PIX2048 ]                          ://     // [226]
    //: @USED____BY@[ GPUSYNC ]                          ://     // [226]
    //: @TIGHT_PAIR@[ GPUDATA_GPUSYNC / GPUSYNC_GPUDATA ]://     // [226]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [226]
                                                                 // [---]
    const c_gpudata_p2k_lot =( 0 );      //: #_P2K_LOT_# ://     // [227][MAR](173)(---)
                                                                 // [227][-------------]
    //:#_Shader_Attribute_AND_Uniform_Locations_#://             // [227][MAR](086)(077)
                                                                 // [227][-------------]
    const c_gpudata_loc_pos =( "[#_NO_GPUDATA_L_P_#]" );         // [227][MAR](077)(---)
    const c_gpudata_loc_tex =( "[#_NO_GPUDATA_L_T_#]" );         // [227][MAR](077)(---)
    const c_gpudata_loc_tik =( "[#NO_LOC_TIK#]"       );         // [227][MAR](086)(---)
                                                                 // [227][-------------]
    //: #_What_Version_Of_WebGl_Are_We_Using_#?  ://             // [227][MAR](074)(---)
                                                                 // [227][-------------]
    const c_gpudata_wgl_tag =("#version 300 es");                // [227][MAR](074)(---)
    const c_gpudata_wgl_ask =(         "webgl2");                // [227][MAR](074)(---)
                                                                 // [---]
//: __GPUSYNC__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [226]
                                                                 // [226]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [226]
    //: @DEPENDS_ON@[ GPUDATA ]                          ://     // [226]
    //: @USED____BY@[ ARTGIRL && TILEBOI ]               ://     // [226]
    //: @TIGHT_PAIR@[ GPUSYNC_GPUDATA / GPUDATA_GPUSYNC ]://     // [226]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [226]
                                                                 // [226]
    /** NOTHING_HERE_YET **/                                     // [226]
                                                                 // [---]
//: __HARDTEX__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [402]
                                                                 // [402]
    /** NOTHING_HERE_YET , If Ever. **/                          // [402]
                                                                 // [402]
//: __FILE896__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [471]
                                                                 // [474]
    const c_file896_evilme         =( 0 );   //:EVIL==INVALID:// // [474]
    const c_file896_loadme_fromdsk =( 1 );                       // [474]
    const c_file896_saveme_intodsk =( 2 );                       // [474]
                                                                 // [474]
//: __FILEMOB__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [361]
                                                                 // [---]
    //: @taskenu@ : TASK - Enumeration     ::::::::::::::://     // [384]
    //: @tasknos@ : TASK - Number Of Steps ::::::::::::::://     // [384]
                                                                 // [384]
    const c_filemob_taskenu_invalid =( 0 );                      // [384]
    const c_filemob_tasknos_invalid =( 0 );                      // [384]
    const c_filemob_cankill_invalid =( 0 );                      // [392]
                                                                 // [384]
    const c_filemob_taskenu_loadbox_dsk =( 1    );               // [384]
    const c_filemob_tasknos_loadbox_dsk =( 6    );               // [389][384]
    const c_filemob_cankill_loadbox_dsk =( 1    );               // [392]
                                                                 // [---]
    const c_filemob_taskenu_savebox_dsk =( 2    );               // [393]
    const c_filemob_tasknos_savebox_dsk =( 8    );               // [398][396][394][393]
    const c_filemob_cankill_savebox_dsk =( 0    );               // [393]
                                                                 // [---]
//: __TILEBOI__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [185][MOV][156]
                                                                 // [185][MOV][---]
    /** NOTHING_HERE_YET **/                                     // [185][MOV][156]
                                                                 // [185][MOV][---]
//: __BINFONT__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [207]
                                                                 // [207]
    //:::::::::::::::::::::::::::::::::::://                     // [207]
    //: @STOLEN_FROM@[ a3d_ledit64_gly ] ://                     // [207]
    //:::::::::::::::::::::::::::::::::::://                     // [207]
                                                                 // [207]
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::// // [207]
    //:                                                      :// // [207]
    //:         SEE[ #_BINARY_FONTS_EXPLAINED_# ]            :// // [207]
    //:                                                      :// // [207]
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::// // [207]
                                                                 // [207]
    const __binfont__glyphs__ = "[LAXCOMA_HACK]"                 // [207]
                                                                 // [207]
    //:#_NORMAL__CHARACTERS_#:===============================:// // [207]
    ////              0x12345678                 0x12345678 //// // [207]
    ////              0xRRGGBBAA                 0xRRGGBBAA //// // [207]
    ,   c_bin_lef_0 = 0x00000000 , c_bin_rig_0 = 0x00000000 //// // [207]
    ,   c_bin_lef_1 = 0x00183818 , c_bin_rig_1 = 0x18183C00 //// // [207]
    ,   c_bin_lef_2 = 0x007E4204 , c_bin_rig_2 = 0x08307E00 //// // [207]
    ,   c_bin_lef_3 = 0x007E027E , c_bin_rig_3 = 0x7E027E00 //// // [207]
    ,   c_bin_lef_4 = 0x00424242 , c_bin_rig_4 = 0x7E020200 //// // [207]
    ,   c_bin_lef_5 = 0x007E407C , c_bin_rig_5 = 0x02027C00 //// // [207]
    ,   c_bin_lef_6 = 0x007E4240 , c_bin_rig_6 = 0x7E427E00 //// // [207]
    ,   c_bin_lef_7 = 0x007E0408 , c_bin_rig_7 = 0x10101000 //// // [207]
    ,   c_bin_lef_8 = 0x007E427E , c_bin_rig_8 = 0x42427E00 //// // [207]
    ,   c_bin_lef_9 = 0x007E427E , c_bin_rig_9 = 0x02020200 //// // [207]
    ////              0x12345678                 0x12345678 //// // [207]
    ////              0xRRGGBBAA                 0xRRGGBBAA //// // [207]
    ,   c_bin_luc_a = 0x007E427E , c_bin_ruc_a = 0x42424200 //// // [207]
    ,   c_bin_luc_b = 0x007C425C , c_bin_ruc_b = 0x42427C00 //// // [207]
    ,   c_bin_luc_c = 0x003E4240 , c_bin_ruc_c = 0x40423E00 //// // [207]
    ,   c_bin_luc_d = 0x00784646 , c_bin_ruc_d = 0x46467800 //// // [207]
    ,   c_bin_luc_e = 0x007E4078 , c_bin_ruc_e = 0x78407E00 //// // [207]
    ,   c_bin_luc_f = 0x007E407E , c_bin_ruc_f = 0x40404000 //// // [207]
    ,   c_bin_luc_g = 0x007E4040 , c_bin_ruc_g = 0x4E427E00 //// // [207]
    ,   c_bin_luc_h = 0x0042427E , c_bin_ruc_h = 0x7E424200 //// // [207]
    ,   c_bin_luc_i = 0x007E1818 , c_bin_ruc_i = 0x18187E00 //// // [207]
    ,   c_bin_luc_j = 0x007E1818 , c_bin_ruc_j = 0x58587800 //// // [207]
    ,   c_bin_luc_k = 0x00666C78 , c_bin_ruc_k = 0x7C6E6600 //// // [207]
    ,   c_bin_luc_l = 0x00606060 , c_bin_ruc_l = 0x607E7E00 //// // [207]
    ,   c_bin_luc_m = 0x007E5A5A , c_bin_ruc_m = 0x5A5A5A00 //// // [207]
    ,   c_bin_luc_n = 0x007A7A4A , c_bin_ruc_n = 0x4A4E4E00 //// // [207]
    ,   c_bin_luc_o = 0x007E7E66 , c_bin_ruc_o = 0x667E7E00 //// // [207]
    ,   c_bin_luc_p = 0x007E6262 , c_bin_ruc_p = 0x7E606000 //// // [207]
    ,   c_bin_luc_q = 0x007E4242 , c_bin_ruc_q = 0x5A7F0700 //// // [207]
    ,   c_bin_luc_r = 0x007E425E , c_bin_ruc_r = 0x404E4E00 //// // [207]
    ,   c_bin_luc_s = 0x003E407C , c_bin_ruc_s = 0x3E027C00 //// // [207]
    ,   c_bin_luc_t = 0x007E7E18 , c_bin_ruc_t = 0x18181800 //// // [207]
    ,   c_bin_luc_u = 0x00666666 , c_bin_ruc_u = 0x667E7E00 //// // [207]
    ,   c_bin_luc_v = 0x00666666 , c_bin_ruc_v = 0x663C1800 //// // [207]
    ,   c_bin_luc_w = 0x005A5A5A , c_bin_ruc_w = 0x5A5A7E00 //// // [207]
    ,   c_bin_luc_x = 0x00666618 , c_bin_ruc_x = 0x18666600 //// // [207]
    ,   c_bin_luc_y = 0x00666618 , c_bin_ruc_y = 0x18181800 //// // [207]
    ,   c_bin_luc_z = 0x007E660C , c_bin_ruc_z = 0x30667E00 //// // [207]
    ////              0x12345678                 0x12345678 //// // [207]
    ////              0xRRGGBBAA                 0xRRGGBBAA //// // [207]
    ,   c_bin_llc_a = 0x00003C42 , c_bin_rlc_a = 0x427E4200 //// // [207]
    ,   c_bin_llc_b = 0x00004040 , c_bin_rlc_b = 0x7C427E00 //// // [207]
    ,   c_bin_llc_c = 0x00003E40 , c_bin_rlc_c = 0x40403E00 //// // [207]
    ,   c_bin_llc_d = 0x00000202 , c_bin_rlc_d = 0x3E427E00 //// // [207]
    ,   c_bin_llc_e = 0x00003C42 , c_bin_rlc_e = 0x7E403E00 //// // [207]
    ,   c_bin_llc_f = 0x00000E10 , c_bin_rlc_f = 0x38101000 //// // [207]
    ,   c_bin_llc_g = 0x00001E12 , c_bin_rlc_g = 0x1E427E00 //// // [207]
    ,   c_bin_llc_h = 0x00004040 , c_bin_rlc_h = 0x7C424200 //// // [207]
    ,   c_bin_llc_i = 0x00001800 , c_bin_rlc_i = 0x38181C00 //// // [207]
    ,   c_bin_llc_j = 0x00001800 , c_bin_rlc_j = 0x18587800 //// // [207]
    ,   c_bin_llc_k = 0x00006264 , c_bin_rlc_k = 0x68646200 //// // [207]
    ,   c_bin_llc_l = 0x00003818 , c_bin_rlc_l = 0x18181C00 //// // [207]
    ,   c_bin_llc_m = 0x00003C5A , c_bin_rlc_m = 0x5A424200 //// // [207]
    ,   c_bin_llc_n = 0x00003C42 , c_bin_rlc_n = 0x42424200 //// // [207]
    ,   c_bin_llc_o = 0x00003C42 , c_bin_rlc_o = 0x42423C00 //// // [207]
    ,   c_bin_llc_p = 0x00003C42 , c_bin_rlc_p = 0x7C404000 //// // [207]
    ,   c_bin_llc_q = 0x00007848 , c_bin_rlc_q = 0x780A0E00 //// // [207]
    ,   c_bin_llc_r = 0x00003C24 , c_bin_rlc_r = 0x20202000 //// // [207]
    ,   c_bin_llc_s = 0x00003E40 , c_bin_rlc_s = 0x3C027C00 //// // [207]
    ,   c_bin_llc_t = 0x00183C18 , c_bin_rlc_t = 0x18181800 //// // [207]
    ,   c_bin_llc_u = 0x00004242 , c_bin_rlc_u = 0x42423C00 //// // [207]
    ,   c_bin_llc_v = 0x00004242 , c_bin_rlc_v = 0x42241800 //// // [207]
    ,   c_bin_llc_w = 0x00004242 , c_bin_rlc_w = 0x5A5A2400 //// // [207]
    ,   c_bin_llc_x = 0x00004224 , c_bin_rlc_x = 0x18244200 //// // [207]
    ,   c_bin_llc_y = 0x00004224 , c_bin_rlc_y = 0x18181800 //// // [207]
    ,   c_bin_llc_z = 0x00007E0C , c_bin_rlc_z = 0x18307E00 //// // [207]
    ////              0x12345678                 0x12345678 //// // [207]
    ////              0xRRGGBBAA                 0xRRGGBBAA //// // [207]
    //:===============================:#_NORMAL__CHARACTERS_#:// // [207]
    //:#_SPECIAL_CHARACTERS_#:[207]:-------------------------:// // [207]
    ////              0x12345678  //:                        :// // [207]
    ////              0xRRGGBBAA  //:                        :// // [207]
    ,   c_bin_lef_dot=0x0000003C  //: Dot, as in a period.   :// // [207]
    ,   c_bin_rig_dot=0x3C3C3C00  //: This Thing( "." )      :// // [207]
                                  //:                        :// // [207]
    ,   c_bin_lef_f_s=0x00060C18  //: Forward Slash          :// // [207]
    ,   c_bin_rig_f_s=0x18306000  //: This Thing( "/" )      :// // [207]
                                  //:                        :// // [---]
    ,   c_bin_lef_nil=0x00000000  //: #_NIL_FOR_FREE_SPOTS_# :// // [208]
    ,   c_bin_rig_nil=0x00000000  //: #_NIL_FOR_FREE_SPOTS_# :// // [208]
                                  //:                        :// // [208]
    ,   c_bin_lef_spc=0x00000000  //: #_ASCII_SPACE_CHARAC_# :// // [208]
    ,   c_bin_rig_spc=0x00000000  //: #_ASCII_SPACE_CHARAC_# :// // [208]
    ////              0x12345678  //:                        :// // [---][207]
    ////              0xRRGGBBAA  //:                        :// // [207]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [207]
    //:-------------------------:#_SPECIAL_CHARACTERS_#:[207]:// // [207]

//: __FOURSET__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [239]

    /** NOTHING_HERE_YET **/                                     // [239]

//: __MIPWASP__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [296]

    c_mipwasp_me9_lui =( 6 );  //:SEE[ #_WASP_ME9_LUI_# ]://     // [303]

//: __GOLA512__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [292]

    /** NOTHING_HERE_YET **/                                     // [292]

//: __ARTDECA__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [289]

    /** NOTHING_HERE_YET **/                                     // [289]

//: __ARTGOLA__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [285]

    /** NOTHING_HERE_YET **/                                     // [285]

//: __ARTDUDE__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [103]
                                                                         
    /** NOTHING_HERE_YET **/                                     // [103]
                                                                         
//: __ARTGIRL__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [103][064]://

//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::// // [148]
//: TAG[ artgirl constants | artgirl_constants ] :::::::::::::// // [148]
//: TAG[ artgirl-constants | artgirlconstants  ] :::::::::::::// // [148]
//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::// // [148]
                                                                 // [---]
                                                                 // [---]
        const c_artgirl_p2k_lot =(      //: #_P2K_LOT_# ://      // [227][173]
              c_gpudata_p2k_lot  );;    //: #_P2K_LOT_# ://      // [227][173]
                                                                 // [---]
        //: SEE[ #_FSM_EXPLAINED_# ]://                          // [148]
                                                                 // [---]
        const __fragment_shader_rendering_modes__ ="[HACK]"      // [282][---]
                                                                 // [282][---]
        ,   c_artgirl_fsm_bad =(  0  )     //: INVALID   ://     // [282][148]
        ,   c_artgirl_fsm_nil =(  1  )     //: NOT_SET   ://     // [282][148]
        ,   c_artgirl_fsm_000 =(  2  )     //: UNDERSHOOT://     // [282][148]
        ,   c_artgirl_fsm_001 =(  3  )     //: OVERSHOOT ://     // [282][148]
        ,   c_artgirl_fsm_per =(  4  )     //: PERCENT   ://     // [282][148]
                                                                 // [282][---]
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [282][---]
                                                                 // [---]
    /** #_Shader_Attribute_AND_Uniform_Locations_# **/           // [227][086][077]
                                                                 // [077][---][---]
        const c_artgirl_loc_pos =(  ( 0 )  /** #S_POS# **/       // [227][077][---]
        /** [ c_gpudata_loc_pos ]<--#_NO_GPUDATA_L_P_# **/ );;   // [227][077][---]
                                                                 // [--------][---]
        const c_artgirl_loc_tex =(  ( 1 )  /** #S_TEX# **/       // [227][077][---]
        /** [ c_gpudata_loc_tex ]<--#_NO_GPUDATA_L_T_# **/ );;   // [227][077][---]
                                                                 // [---][--------]
        const c_artgirl_loc_tik =( "[#NO_LOC_TIK#]"  );          // [086][--------]
                                                                 // [---][--------]
    /** #_What_Version_Of_WebGl_Are_We_Using_#? **/              // [227][074][---]
                                                                 // [---][--------]
        const c_artgirl_wgl_tag =(                               // [227][074][---]
              c_gpudata_wgl_tag   );;                            // [227][074][---]
                                                                 // [227][074][---]
        const c_artgirl_wgl_ask =(                               // [227][074][---]
              c_gpudata_wgl_ask   );;                            // [227][074][---]
                                                                 // [---]
    /** WebGL Surface Quad Macros ********* **/                  // [---][066] 
                                                                 // [---][066] 
        const c_artgirl_vbd_len =( 20 );    //:#_VBD_LEN_AG_#:// // [074][066] 
                                                                 // [---]    
    /** *********************************** **/                  // [064] 
    /** Different Rendering Pipelines [064] **/                  // [064] 
    /** *********************************** **/                  // [064] 
                                                                 // [064] 
    //:--------------------------------------------------://     // [085]
    //:TAG[ shader types | shader type | slotted shaders]://     // [085]
    //:TAG[ reserved shaders | shader enums | shader id ]://     // [085]
    //:TAG[ shaders on the table | planned shaders      ]://     // [085]
    //:TAG[ shader identifiers | renderers | rendernums ]://     // [085]
    //:TAG[ slotted renderers | slated renderers        ]://     // [085]
    //:--------------------------------------------------://     // [085]

    const __super_secret_shader_waterfall_agenda__ ="[HACK]"     // [282][--------]
                                                                 // [282][---][---]
    ,   c_artgirl_ren_000 = "[DONT_USE:000]"                     // [282][068][---]
    ,   c_artgirl_ren_bad = ( 0 )  //:Select:ren_def     ://     // [282][068][---]
                                                                 // [282][---][---]
    ,   c_artgirl_ren_001 = ( 1 )  //:FLAT_CYAN_COLOR    ://     // [282][081][068]
    ,   c_artgirl_ren_002 = ( 2 )  //:FLAT_LIME_COLOR    ://     // [282][081][068]
    ,   c_artgirl_ren_003 = ( 3 )  //:GradientQuad       ://     // [282][081][068]
    ,   c_artgirl_ren_004 = ( 4 )  //:FlashingScreen     ://     // [282][081][068]
    ,   c_artgirl_ren_005 = ( 5 )  //:Sectors_Colored    ://     // [282][081][068]
    ,   c_artgirl_ren_006 = ( 6 )  //:_FOURSET_RENDER_V1_://     // [282][081][068]
    ,   c_artgirl_ren_007 = ( 7 )  //:_HENTAIF_RENDER_V1_://     // [282][081][068]
    ,   c_artgirl_ren_008 = ( 8 )  //:_Y_D_F_K_M_B__2022_://     // [282][081][068]
    ,   c_artgirl_ren_009 = ( 9 )  //:_Y_D_F_K_M_B__2022_://     // [282][081][068]
                                                                 // [282][---][---]
    ,   c_artgirl_ren_tot = ( 9 )  //:#RenderPipelines#  ://     // [282][081][068]
                                                                 // [282][---][---]
    ,   c_artgirl_ren_def = (      //:Default_Render     ://     // [282][068][---]
        c_artgirl_ren_001    )     //:Pipeline_To_Use    ://     // [282][068][---]
                                                                 // [282][---][---]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [282][--------]

//: __CAMERAH__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [108]
                                                                 // [---]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [129]
    //: TAG[ zero_basis_enumerations | zero_basis_enums ]://     // [129]
    //: TAG[ zero basis enumerations | zero basis enums ]://     // [129]
    //: TAG[ zero-basis-enumerations | zero-basis-enums ]://     // [129]
    //: TAG[ zeb_enums | zeb-enums | zebenums           ]://     // [129]
    //: TAG[ zeb_enumerations | zeb-enumerations        ]://     // [129]
    //: TAG[ zebenumerations | ZEB_ENU | zeb_enu        ]://     // [129]
    //: RELATED[ zero_basis_lookup_table ] < < < < < < < ://     // [129]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [129]
                                                                 // [---]
    const c_camerah_zeb_dut =( 0 );   //:FOR[ #ZEBASIS# ]://     // [108]
    const c_camerah_zeb_du1 =( 1 );   //:FOR[ ^^^^^^^^^ ]://     // [108]
    const c_camerah_zeb_du2 =( 2 );   //:FOR[ ^^^^^^^^^ ]://     // [108]
    const c_camerah_zeb_du3 =( 3 );   //:FOR[ ^^^^^^^^^ ]://     // [108]
    const c_camerah_zeb_du4 =( 4 );   //:FOR[ ^^^^^^^^^ ]://     // [108]
    const c_camerah_zeb_du5 =( 5 );   //:FOR[ ^^^^^^^^^ ]://     // [108]
    const c_camerah_zeb_dur =( 6 );   //:FOR[ ^^^^^^^^^ ]://     // [108]
    const c_camerah_zeb_duh =( 7 );   //:FOR[ ^^^^^^^^^ ]://     // [108]
    const c_camerah_zeb_dum =( 8 );   //:FOR[ ^^^^^^^^^ ]://     // [108]
                                                                 // [---]
    const c_camerah_zeb_m_i =( 8 );   //:ZeroBasis_MaxDex://     // [129]
                                                                 // [---]
    //:#_HOW_TO_USE_ZERO_BASIS_GEOMETRIC_ELEMENTS_#://           // [108]
                                                                 // [108]
    const c_camerah_cir_cum_inn =( 1 );     //:INN_SCRIBE://     // [108]
    const c_camerah_cir_cum_out =( 2 );     //:OUT_SCRIBE://     // [108]
    const c_camerah_cir_cum_not =( 3 );     //:NOT_SCRIBE://     // [108]
    const c_camerah_cir_cum_def =(          //:DE___FAULT://     // [132]
          c_camerah_cir_cum_inn                                  // [132]
    );;                                                          // [132]

    //: #_WHY_MAXUNIT_MINUS_TWO_# ://                            // [111]
    const c_camerah_maxunit =( c_dum - 1 - 1 );                  // [111]
    ASS(  c_camerah_maxunit == c_dum -(  2  ));                  // [111]

//: __SEXYCAM__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [125]

    const c_sexycam_act_zoomext =( 1 ); //:Zoom Extents   ://    // [135]
    const c_sexycam_act_cir_def =( 2 ); //:cir_cum:DEFAULT://    // [135]
    const c_sexycam_act_cir_nex =( 3 ); //:cir_cum:NEXT   ://    // [135]
    const c_sexycam_act_npa_num =( 4 ); //: #_NPA_NUM_#   ://    // [135]

    const laxcoma_hak_2022_08_10 = "[2022_08_10:701PM:::::]"     // [137]
    ,   c_sexycam_npa_zoomext ="[FIX:c_sexycam_act_zoomext]"     // [137]
    ,   c_sexycam_npa_cir_def ="[FIX:c_sexycam_act_cir_def]"     // [137]
    ,   c_sexycam_npa_cir_nex ="[FIX:c_sexycam_act_cir_nex]"     // [137]
    ,   c_sexycam_npa_npa_num ="[FIX:c_sexycam_act_npa_num]"     // [137]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [137]

//: __ASERVER__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [103]
                                                                         
    /** NOTHING_HERE_YET **/                                     // [103]
                                                                         
//: __DABITCH__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [103]
                                                                         
    /** NOTHING_HERE_YET **/                                     // [103]

//: __HOWORLD__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [360]
                                                                         
    /** NOTHING_HERE_YET **/                                     // [360]

//: __MIRMAID__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [421]
                                                                 // [421]
    /** NOTHING_HERE_YET **/                                     // [421]
                                                                         
//: __EDIGAME__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [103]
                                                                 // [---]
    const c_edigame_mod = "[FIX:d_edigame_mod]" ;                //      [103]
    const c_edigame_tog = "[FIX:USE_BOTH:tog_001:AND:tog_002]";  //      [103]
                                                                 //      [103]
    const c_edigame_tog_001 =( "~" /** [edi||gam]? **/ );        //      [103]
    const c_edigame_tog_002 =( String.fromCharCode(              // [177][103]
                                                                 // [177][---]
        96  //:#_NINETY_SIX_IS_BACK_TICK_#://                    // [177][---]
    ));;                                                         // [177][103]
                                                                 //      [103]
    const c_edigame_edi =( 1   /** edigame as EDItor * * **/ );  //      [103]
    const c_edigame_gam =( 2   /** edigame as GAMe   * * **/ );  //      [103]
                                                                 // [---]
//: __KONAMIC__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [180]

    const c_konamic_az0 =( 65  /** UPPERCASE "A" **/ );          // [182]
    const c_konamic_az1 =( 90  /** UPPERCASE "Z" **/ );          // [182]

    //:::::::::::::::::::( (upp) + (dow) + (l_r) + (l_r) - 1):// // [181]
    const c_konamic_m_i =( (1+1) + (1+1) + (1+1) + (1+1) - 1);   // [181]
    ASS(  c_konamic_m_i ===( 7 ) , "[8_Key_Presses_Fool]"   );   // [181]
                                                                 // [181]
    const c_konamic_ark_k_0 =( 37 ); //: ARROW_KEYCODE : 1ST :// // [181]
    const c_konamic_ark_k_1 =( 40 ); //: ARROW_KEYCODE : LAST:// // [181]
                                                                 // [181]
    const c_konamic_ark_lef =( 37 ); //: ARROW_KEYCODE : LEF :// // [181]
    const c_konamic_ark_upp =( 38 ); //: ARROW_KEYCODE : UPP :// // [181]
    const c_konamic_ark_rig =( 39 ); //: ARROW_KEYCODE : RIG :// // [181]
    const c_konamic_ark_dow =( 40 ); //: ARROW_KEYCODE : DOW :// // [181]

    const c_konamic_dumfill = "[FIX:c_konamic_dumones]" ;        // [182]
    const c_konamic_dum_fil = "[FIX:c_konamic_dumones]" ;        // [182]
    const c_konamic_dumempt = "[FIX:c_konamic_dumzero]" ;        // [182]
    const c_konamic_dum_emp = "[FIX:c_konamic_dumzero]" ;        // [182]

    //:#_KONAMIC_SAVE_LOAD_ENUMS_#:[366]:--------------------:// // [366]
    //:#_KONAMIC_LOAD_SAVE_ENUMS_#:[366]:--------------------:// // [366]
                                                                 // [366]
        //: TAG[ KONAMIC_SAVE_ENUMS ]::::::::::::::::::::://     // [366]
        //: TAG[ KONAMIC_LOAD_ENUMS ]::::::::::::::::::::://     // [366]
                                                                 // [366]
        const konamic_save_load_proc_enums = "[@L___C___H@]"     // [366]
        ////                                                     // [366]
        ,   c_konamic_savecen = "[APPEND::_ram||_dsk||_web]"     // [366]
        ,   c_konamic_loadcen = "[APPEND::_ram||_dsk||_web]"     // [366]
        ////                                                     // [366]
        ,   c_konamic_savecen_mem = "[FIX:PICK[_ram||_dsk]]"     // [366]
        ,   c_konamic_loadcen_mem = "[FIX:PICK[_ram||_dsk]]"     // [366]
        ////                                                     // [366]
        ,   c_konamic_savecen_dis = "[FIX::_dsk:MEANS:DISK]"     // [366]
        ,   c_konamic_loadcen_dis = "[FIX::_dsk:MEANS:DISK]"     // [366]
        ////                                                     // [366]
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [366]
                                                                 // [366]
    //:--------------------:#_KONAMIC_SAVE_LOAD_ENUMS_#:[366]:// // [366]
    //:--------------------:#_KONAMIC_LOAD_SAVE_ENUMS_#:[366]:// // [366]

    //:#_KONAMIC_PROCEEDURE_ENUMS_:[365]:--------------------:// // [365][--------]
                                                                 // [365][--------]
    const konamic_proc_enums ="[@LAX_COMMA_HACK@]"               // [365][--------]
    ////  KONAMIC_1234567  //////////////////////////////////    // [365][--------]
    ,   c_konamic_invalid =( 0 ) //:[ 0 is a fatal error ]://    // [365][---][180]
    ,   c_konamic_nothing =( 1 ) //:[ 1 is for empty slot]://    // [365][---][180]
    ,   c_konamic_dumones =( 2 ) //:Fill Dum With Binary 1://    // [365][---][180]
    ,   c_konamic_dumzero =( 3 ) //:Fill Dum With Binary 0://    // [365][---][180]
    ,   c_konamic_dum_000 =( 4 ) //:[ dum_tog ](  Toggle )://    // [365][199][---]
    ,   c_konamic_dum_001 =( 5 ) //:[ del_b_l ][ fil_b_l ]://    // [365][199][---]
    ,   c_konamic_dum_002 =( 6 ) //:[ del_b_m ][ fil_b_m ]://    // [365][199][---]
    ,   c_konamic_dum_003 =( 7 ) //:[ del_b_r ][ fil_b_r ]://    // [365][199][---]
    ,   c_konamic_dum_004 =( 8 ) //:[ del_c_l ][ fil_c_l ]://    // [365][199][---]
    ,   c_konamic_dum_005 =( 9 ) //:[ del_c_m ][ fil_c_m ]://    // [365][199][---]
    ,   c_konamic_dum_006 =(10 ) //:[ del_c_r ][ fil_c_r ]://    // [365][199][---]
    ,   c_konamic_dum_007 =(11 ) //:[ del_t_l ][ fil_t_l ]://    // [365][199][---]
    ,   c_konamic_dum_008 =(12 ) //:[ del_t_m ][ fil_t_m ]://    // [365][199][---]
    ,   c_konamic_dum_009 =(13 ) //:[ del_t_r ][ fil_t_r ]://    // [365][199][---]
    ,   c_konamic_binfont =(14 ) //: @c_konamic_binfont@  ://    // [365][216][---]
    ////                         //:- - - - - -- - - - - -://    // [366][--------]

    ,   c_konamic_ram_dsk_web_000 =( 15 )                        // [367][-------------]
    ////                             ||                          // [367][-------------]
    ,   c_konamic_savecen_ram     =( 15 )  //: #K_SAV_C# ://     // [367][366][DPR][365]
    ,   c_konamic_loadcen_ram     =( 16 )  //: #K_LOD_C# ://     // [367][366][DPR][365]
    ,   c_konamic_savecen_dsk     =( 17 )  //: #K_SAV_C# ://     // [367][366][DPR][365]
    ,   c_konamic_loadcen_dsk     =( 18 )  //: #K_LOD_C# ://     // [367][366][DPR][365]
    ,   c_konamic_savecen_web     =( 19 )  //: #K_SAV_C# ://     // [367][366][DPR][365]
    ,   c_konamic_loadcen_web     =( 20 )  //: #K_LOD_C# ://     // [367][366][DPR][365]
    ////                             ||                          // [367][-------------]
    ,   c_konamic_ram_dsk_web_001 =( 20 )                        // [367][-------------]

    ,   c_konamic_pixdump         =( 21 )  //: PixelDump ://     // [465][---][---][---]

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    // [---][365][---] 
    //:--------------------:#_KONAMIC_PROCEEDURE_ENUMS_:[365]:// // [---][365][---]
    //:#_PROC_ENUM_ORDER_CONSTRAINT_#:[367]:-----------------:// // [367][--------]
    {                                                            // [367][--------]
        let j_0 =( c_konamic_ram_dsk_web_000 );  //:@JOT@://     // [367][--------]
        let z_1 =( c_konamic_ram_dsk_web_001 );  //:@ZEN@://     // [367][--------]
                                                                 // [367][--------]
        let low =( j_0 - 1 );                                    // [367][--------]
        let hig =( z_1 + 1 );                                    // [367][--------]
                                                                 // [367][--------]
        ASS( low + 1 === c_konamic_savecen_ram ,"[LOW_1]");      // [367][--------]
        ASS( low + 2 === c_konamic_loadcen_ram ,"[LOW_2]");      // [367][--------]
        ASS( low + 3 === c_konamic_savecen_dsk ,"[LOW_3]");      // [367][--------]
        ASS( low + 4 === c_konamic_loadcen_dsk ,"[LOW_4]");      // [367][--------]
        ASS( low + 5 === c_konamic_savecen_web ,"[LOW_5]");      // [367][--------]
        ASS( low + 6 === c_konamic_loadcen_web ,"[LOW_6]");      // [367][--------]
                                                                 // [367][--------]
        ASS( hig - 6 === c_konamic_savecen_ram ,"[HIG_1]");      // [367][--------]
        ASS( hig - 5 === c_konamic_loadcen_ram ,"[HIG_2]");      // [367][--------]
        ASS( hig - 4 === c_konamic_savecen_dsk ,"[HIG_3]");      // [367][--------]
        ASS( hig - 3 === c_konamic_loadcen_dsk ,"[HIG_4]");      // [367][--------]
        ASS( hig - 2 === c_konamic_savecen_web ,"[HIG_5]");      // [367][--------]
        ASS( hig - 1 === c_konamic_loadcen_web ,"[HIG_6]");      // [367][--------]
                                                                 // [367][--------]
    }                                                            // [367][--------]
    //:-----------------:#_PROC_ENUM_ORDER_CONSTRAINT_#:[367]:// // [367][--------]
                             
//: __KEYMAST__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [103]

    const c_keymast_ark_top =( "[FIX:ark_upp]" );                // [114]
    const c_keymast_ark_bot =( "[FIX:ark_dow]" );                // [114]
                                                                 // [114]
    const c_keymast_ark_k_0 =( 37 ); //: key0 : FIRST ://        // [114]
    const c_keymast_ark_k_1 =( 40 ); //: key1 : LAST  ://        // [114]
                                                                 // [114]
    const c_keymast_ark_lef =( 37 );                             // [114]
    const c_keymast_ark_upp =( 38 );                             // [114]
    const c_keymast_ark_rig =( 39 );                             // [114]
    const c_keymast_ark_dow =( 40 );                             // [114]

    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::// // [181]
    //: Konamic needs it's own copies of these because       :// // [181]
    //: KEYMAST can reference KONAMIC , but not the          :// // [181]
    //: other way around.                                    :// // [181]
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::// // [181]
    ASS( c_keymast_ark_k_0 === c_konamic_ark_k_0 , "[ARKK0]" );  // [181]
    ASS( c_keymast_ark_k_1 === c_konamic_ark_k_1 , "[ARKK1]" );  // [181]
    ASS( c_keymast_ark_lef === c_konamic_ark_lef , "[ARK_L]" );  // [181]
    ASS( c_keymast_ark_upp === c_konamic_ark_upp , "[ARK_U]" );  // [181]
    ASS( c_keymast_ark_rig === c_konamic_ark_rig , "[ARK_R]" );  // [181]
    ASS( c_keymast_ark_dow === c_konamic_ark_dow , "[ARK_D]" );  // [181]

//: __KEYEMMA__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [219]

    /** NOTHING HERE YET **/                                     // [219]

//: __MOUMAST__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [142]

    const c_moumast_clidrag_bad =( 0 ); //:INVALID   ://         // [222]
    const c_moumast_clidrag_clk =( 2 ); //:CLICKING? ://         // [222]
    const c_moumast_clidrag_mid =( 4 ); //:DRAGGING? ://         // [222]

    const c_moumast_nil =( 0x00 );  //: No Button Pressed://     // [222]
    const c_moumast_001 =( 0x01 );  //: Primary   Button ://     // [222]
    const c_moumast_002 =( 0x02 );  //: Secondary Button ://     // [222]
    const c_moumast_003 =( 0x04 );  //: Auxillary Button ://     // [222]
    const c_moumast_004 =( 0x08 );  //: 4th       Button ://     // [222]
    const c_moumast_005 =( 0x10 );  //: 5th       Button ://     // [222]
                                                                 // [222]
    ASS( 0 === c_moumast_nil , "[MOU_NIL]" );                    // [222]
    ASS( 1 === c_moumast_001 , "[MOU_001]" );                    // [222]
    ASS( 2 === c_moumast_002 , "[MOU_002]" );                    // [222]
    ASS( 4 === c_moumast_003 , "[MOU_003]" );                    // [222]
    ASS( 8 === c_moumast_004 , "[MOU_004]" );                    // [222]
    ASS(16 === c_moumast_005 , "[MOU_005]" );                    // [222]
   
//: __SERGAME__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [103]
                                                                         
    /** NOTHING_HERE_YET **/                                     // [103]
                                                                         
//: __CLIGAME__ V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V_V:// // [103][085]
                                                                 // [103][085]
    const c_cligame_tms =( 1000 / c_fps ); /**Target_MIL sec**/  // [103][085]

//:==============================:CONST_MACROS_BY_SYSTEM[074]:// // [---]
//:__ARTGIRL__:PSYCHO_BITCH_MACROS:[283]:====================:// // [283]
//:__ARTGIRL__:CRAZY_BITCH_MACROS::[283]:====================:// // [283]
                                                                 // [283]
const d_artgirl_crazybi =(` //:TAG[ crazy_bitch | crazy ]://     // [283]
                            //:TAG[ crazy-bitch | i-cbm ]://     // [283]
                            //:TAG[ crazybitch  | i_cbm ]://     // [283]
    //:TAG[ artgirl-monkey-wrench-macros | artmonkey    ]://     // [308]
    //:--------------------------------------------------://     // [283]
    //:  As we refactor, we are going to need to create  ://     // [283]
    //:  disallowed variable names to help avoid making  ://     // [283]
    //:  catastrophic mistakes due to partial refactors. ://     // [283]
    //:--------------------------------------------------://     // [283]
                                                                 // [---]
    #define d_te7_dut "[CLEANINGFLOOR/W/UR/BLOOD:d_te7_dun]"     // [310]
    #define u_dut     "[LICK_MY_TILE_FLOOR_CLEAN:::::u_dun]"     // [310]
    #define   dut     "[TILESFROMTHETEETHOFMYENEMIES:u_dun]"     // [310]
                                                                 // [---]
    #define uv4_pix "[YOUR_FATHER_WAS_A_FAILURE:uv4_p2k]"        // [308]
    #define p2k_uv4 "[ITSNOTHINGILLKILLYOULATER:uv4_p2k]"        // [308]
                                                                 // [---]
    #define u_atm "|FUCK_YOU_TONY_I_TOLD_YOU_ITS:::::u_am4|"     // [283]
    #define u_tou "|DONT_U_TOU_MY_ASS_THAT_GOES_FOR::u_to4|"     // [283]
                                                                 // [283]
    #define c_bit_hor "|AND_STAY_DOWN_BITCH::::::c_am4_0lx|"     // [283]
    #define c_bit_ver "|PUT_UP_OR_SHUT_UP::::::::c_am4_1ly|"     // [283]
                                                                 // [283]
    #define c_notouch_x "|FUCK_THE_HOA:::::::::c_to4_del_x|"     // [283]
    #define c_notouch_y "|WHOS_UPSTAIRS?:::::::c_to4_del_y|"     // [283]
                                                                 // [283]
    #define c_tou_lef  "|ASSHOLES_TO_MY:lef:AKA::c_to4_lef|"     // [283]
    #define c_tou_rig  "|ASSHOLES_TO_MY:rig:AKA::c_to4_rig|"     // [283]
    #define c_tou_top  "|ASSHOLES_TO_MY:top:AKA::c_to4_top|"     // [283]
    #define c_tou_bot  "|ASSHOLES_TO_MY:bot:AKA::c_to4_bot|"     // [283]
                                                                 // [283]
    #define c_tou_x_0  "|WHAT_DO_YOU_MEAN_BYTHAT:c_to4_lef|"     // [283]
    #define c_tou_x_1  "|WHAT_DO_YOU_MEAN_BYTHAT:c_to4_rig|"     // [283]
    #define c_tou_y_0  "|WHAT_DO_YOU_MEAN_BYTHAT:c_to4_top|"     // [283]
    #define c_tou_y_1  "|WHAT_DO_YOU_MEAN_BYTHAT:c_to4_bot|"     // [283]
                                                                 // [283]
    #define c_to4_x_0  "|OH_NO_YOU_DIDNT_BITCH:::c_to4_lef|"     // [283]
    #define c_to4_x_1  "|OH_NO_YOU_DIDNT_BITCH:::c_to4_rig|"     // [283]
    #define c_to4_y_0  "|OH_NO_YOU_DIDNT_BITCH:::c_to4_top|"     // [283]
    #define c_to4_y_1  "|OH_NO_YOU_DIDNT_BITCH:::c_to4_bot|"     // [283]
                                                                 // [283]
    //:#_AM4_BLOCKED____NOT____TO4_BLOCKED_#://                  // [283]
    //:#_TO4_DELBITS____NOT____AM4_DELBITS_#://                  // [283]
                                                                 // [283]
    #define IMF_TO4_BLOCKED_HOR "|FIX:IMF_AM4_BLOCKED_HOR|"      // [283]
    #define IMF_TO4_BLOCKED_VER "|FIX:IMF_AM4_BLOCKED_VER|"      // [283]
                                                                 // [283]
    #define IMF_AM4_DELBITS_HOR "|FIX:IMF_TO4_DELBITS_HOR|"      // [283]
    #define IMF_AM4_DELBITS_VER "|FIX:IMF_TO4_DELBITS_VER|"      // [283]
                                                                 // [283]
    #define   at4 "|A_BETTER_MAN_WOULD_KNOW_TO_USE:u_am4|"       // [283]
    #define u_at4 "|A_BETTER_MAN_WOULD_KNOW_TO_USE:u_am4|"       // [283]
                                                                 // [283]
    //::: #_TOU_VAC_SHAKUR____NOT____TO4_EMP_BOTTLES_# ::://     // [283]
                                                                 // [283]
    #define IMF_TO4_LEF "|WHO_IS_THAT_GIRL?::::IMF_TOU_LEF|"     // [283]
    #define IMF_TO4_RIG "|WHO_IS_THAT_GIRL?::::IMF_TOU_RIG|"     // [283]
    #define IMF_TO4_TOP "|WHO_IS_THAT_GIRL?::::IMF_TOU_TOP|"     // [283]
    #define IMF_TO4_BOT "|WHO_IS_THAT_GIRL?::::IMF_TOU_BOT|"     // [283]
                                                                 // [283]
    #define IMF_EMP_LEF "|DONT_TALK_TO_HER!::::IMF_VAC_LEF|"     // [283]
    #define IMF_EMP_RIG "|DONT_TALK_TO_HER!::::IMF_VAC_RIG|"     // [283]
    #define IMF_EMP_TOP "|DONT_TALK_TO_HER!::::IMF_VAC_TOP|"     // [283]
    #define IMF_EMP_BOT "|DONT_TALK_TO_HER!::::IMF_VAC_BOT|"     // [283]
                                                                 // [283]
    //:#_DONT_CALL_HERE_ANYMORE_#:[283]:=================://     // [283]
                                                                 // [283]
        /////// c_am4_0lx "|right_number_bitch:c_am4_0lx|"       // [283]
        #define c_am4_1lx "|WRONG_NUMBER_BITCH:c_am4_0lx|"       // [283]
        #define c_am4_2lx "|WRONG_NUMBER_BITCH:c_am4_0lx|"       // [283]
        #define c_am4_3lx "|WRONG_NUMBER_BITCH:c_am4_0lx|"       // [283]
        #define c_am4_4lx "|WRONG_NUMBER_BITCH:c_am4_0lx|"       // [283]
                                                                 // [283]
        #define c_am4_0ly "|WRONG_NUMBER_BITCH:c_am4_1ly|"       // [283]
        /////// c_am4_1ly "|right_number_bitch:c_am4_1ly|"       // [283]
        #define c_am4_2ly "|WRONG_NUMBER_BITCH:c_am4_1ly|"       // [283]
        #define c_am4_3ly "|WRONG_NUMBER_BITCH:c_am4_1ly|"       // [283]
        #define c_am4_4ly "|WRONG_NUMBER_BITCH:c_am4_1ly|"       // [283]
                                                                 // [283]
        #define c_am4_0mx "|WRONG_NUMBER_BITCH:c_am4_2mx|"       // [283]
        #define c_am4_1mx "|WRONG_NUMBER_BITCH:c_am4_2mx|"       // [283]
        /////// c_am4_2mx "|right_number_bitch:c_am4_2mx|"       // [283]
        #define c_am4_3mx "|WRONG_NUMBER_BITCH:c_am4_2mx|"       // [283]
        #define c_am4_4mx "|WRONG_NUMBER_BITCH:c_am4_2mx|"       // [283]
                                                                 // [283]
        #define c_am4_0my "|WRONG_NUMBER_BITCH:c_am4_3my|"       // [283]
        #define c_am4_1my "|WRONG_NUMBER_BITCH:c_am4_3my|"       // [283]
        #define c_am4_2my "|WRONG_NUMBER_BITCH:c_am4_3my|"       // [283]
        /////// c_am4_3my "|right_number_bitch:c_am4_3my|"       // [283]
        #define c_am4_4my "|WRONG_NUMBER_BITCH:c_am4_3my|"       // [283]
                                                                 // [283]
    //:=================:#_DONT_CALL_HERE_ANYMORE_#:[283]://     // [283]
    //:#_DONT_TOUCH_ME_LIKE_THAT_#:[283]:================://     // [283]
                                                                 // [283]
        #define d_tou_f4x "|D_TOU_F_WITH_FOUR::::d_to4_f4x|"     // [283]
        #define d_tou_f4y "|D_TOU_F_WITH_FOUR::::d_to4_f4y|"     // [283]
                                                                 // [283]
    //:================:#_DONT_TOUCH_ME_LIKE_THAT_#:[283]://     // [283]
                                                                 // [283]
`);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [283]
//:====================:__ARTGIRL__:CRAZY_BITCH_MACROS::[283]:// // [283]
//:====================:__ARTGIRL__:PSYCHO_BITCH_MACROS:[283]:// // [283]
//:__ARTGIRL__:SHADER_DEBUG_MACROS:[313]:====================:// // [313]
                                                                 // [313]
const d_artgirl_fragbug=(` ///////////////////////////////////// // [313]
                                                                 // [313]
    #define FRAGBUG_001 ( 1 ) //: SEE[ 16_Debug_Colors ] ://     // [317][315][313]
                                                                 // [313]
`);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [313]
//:====================:__ARTGIRL__:SHADER_DEBUG_MACROS:[313]:// // [313]
//:__ARTGIRL__:OPTIMIZE_GUESS_MACROS:[304]:==================:// // [304]
                                                                 // [304]
const d_artgirl_fragopt=(` ///////////////////////////////////// // [304]
                                                                 // [304]
    //:--------------------------------------------------://     // [305]
    //: When adding optimization blocks , always put     ://     // [305]
    //: the #_NON_OPTIMIZED_CASE_FIRST_# , because the   ://     // [305]
    //: optimized case is likely obfuscated and hard     ://     // [305]
    //: to understand. -KanjiCoder 2022_09_27:636PM      ://     // [305]
    //:--------------------------------------------------://     // [305]
                                                                 // [---]
    #define FRAGOPT_001 ( 0 )         //: #_VIDEO___304_#://     // [309][308][304]
    #define FRAGOPT_002 ( 0 )         //: #_VIDEO_3_0_5_#://     // [305]
    #define FRAGOPT_003 ( 0 )         //: #_VIDEO___307_#://     // [307]
    #define FRAGOPT_004 ( 0 )         //: #_VIDEO_3_1_0_#://     // [310]
    #define FRAGOPT_005 ( 0 )         //: #_VIDEO___315_#://     // [316][315]
                                                                 // [---]
    #if( FRAGOPT_001 <= 0 ) //:#####################[304]://     // [---]
                                                                 // [304]
        //:----------------------------------------------://     // [304]
        //: I suspect hand-calculating values on the     ://     // [304]
        //: fly is faster than a lookup table, but       ://     // [304]
        //: also more error prone. If[ FRAGOPT_001 ]     ://     // [304]
        //: is[ OFF ], then we use these lookup tables.  ://     // [304]
        //:----------------------------------------------://     // [304]
                                                                 // [304]
        [[[d_i21_la3]]]                                          // [304]
        [[[d_i21_te7]]]                                          // [304]
                                                                 // [---]
        [[[d_i21_lat]]]  //: < < < IAM_HERE_THUS_I_EXIST ://     // [309][308]
        [[[d_i21_dia]]]  //: < < < IAM_HERE_THUS_I_EXIST ://     // [309][308]
                                                                 // [---]
    #endif //:######################################[304]://     // [---]
    #if( FRAGOPT_002 >= 1 ) //:#####################[305]://     // [305]
        //:----------------------------------------------://     // [305]
        //: No code for this, if optimization is on,     ://     // [305]
        //: DONT modulate calculations for               ://     // [305]
        //: [ ho3.x , ho3.y ]as I don't think they       ://     // [305]
        //: can ever go out of bounds.                   ://     // [305]
        //:----------------------------------------------://     // [305]
    #endif  //:#####################################[305]://     // [305]
    #if( FRAGOPT_003 >= 1 ) //:#####################[307]://     // [307]
                                                                 // [307]
        #define d_g25_r4x_u_2 (U32( ${d_g25_r4x_u_2} ))          // [307]
        #define d_g25_r4x_u_1 (U32( ${d_g25_r4x_u_1} ))          // [307]
                                                                 // [307]
        #define d_g25_r4y_u_2 (U32( ${d_g25_r4y_u_2} ))          // [307]
        #define d_g25_r4y_u_1 (U32( ${d_g25_r4y_u_1} ))          // [307]
                                                                 // [307]
    #endif //:######################################[307]://     // [307]
    #if( FRAGOPT_004 >= 1 ) //:#####################[310]://     // [---]
                                                                 // [310]
        //:----------------------------------------------://     // [310]
        //: No code here. This optimization calculates   ://     // [310]
        //: the size of tile in discrete units without   ://     // [310]
        //: using a lookup table. We can do this only    ://     // [310]
        //: because all tiles are exact power of 2       ://     // [310]
        //: multiples of each other.                     ://     // [310]
        //:----------------------------------------------://     // [310]
                                                                 // [310]
    #endif //:######################################[310]://     // [---]
    #if( FRAGOPT_005 <= 0 ) //:#####################[315]://     // [315]
                                                                 // [315]
        //:------------------------------------------://         // [315]
        //: Used by shader#7 to find the correct     ://         // [315]
        //: memory cell containing the monochrome    ://         // [315]
        //: graphic for a tile on a given layer.     ://         // [315]
        //:------------------------------------------://         // [315]
                                                                 // [---]
        [[[d_v48_mmi]]]                                          // [316]
                                                                 // [---]
    #endif //:######################################[315]://     // [315]
                                                                 // [---]
`);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [304]
//:==================:__ARTGIRL__:OPTIMIZE_GUESS_MACROS:[304]:// // [304]
//:__ARTGIRL__:USE_FEATURE_MACROS:[263]:=====================:// // [---]
                                                                 // [263]
const d_artgirl_use =(` //////////////////////////////////////// // [263]
                                                                 // [---]
    #define USE_AM4 ( 0 ) //: SEE[ #_USE_AM4_DIAGRAM_# ] ://     // [283][REF][263]
                                                                 // [---]
    #define USE_ATF ( 1 ) //: SEE[ #_USE_ATF_DIAGRAM_# ] ://     // [269][264]
                                                                 // [---]
    #define USE_RIN ( 1 ) //: SEE[ #_USE_RIN_DIAGRAM_# ] ://     // [277][271]
                                                                 // [---]
    #define USE_ATH ( 1 ) //: SEE[ #_USE_ATH_DIAGRAM_# ] ://     // [282]
                                                                 // [282]
    #define USE_BVS ( 1 ) //: SEE[ #_USE_BVS_DIAGRAM_# ] ://     // [282]
                                                                 // [---]
`);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [263]
//:=====================:__ARTGIRL__:USE_FEATURE_MACROS:[263]:// // [---]
//:__ARTGIRL__:SHADER_MACROS:[251]:==========================:// // [251]
                                                                 // [251]
const d_artgirl_smacros =(` //////////////////////////////////// // [251]
                                                                 // [251]
    //: @smacros@ :Shader_MACROS ://                             // [251]
                                                                 // [---]
    //: TAG[ artgirl macros | artgirl-macros | artgirlmac  ]     // [259]
    //: TAG[ artgirl_macros | artgirlmacros  | artgirl_mac ]     // [259]
    //: TAG[ artgirl shader macros | artgirl-mac | agsm    ]     // [259]
    //: TAG[ artgirl shader constants | artgirl sc         ]     // [263]
    //: TAG[ artgirl_shader_constants | artgirl_sc         ]     // [263]
    //: TAG[ artgirl-shader-constants | artgirl-sc         ]     // [263]
    //: TAG[ artgirl-shader-macros | shader-macros         ]     // [264]
                                                                 // [---]
    //:#_NBI_TO_ABI_#:[284]:=============================://     // [284]
                                                                 // [284]
        #define bit00   (U32( 31  ))                             // [284]
        #define bit01   (U32( 30  ))                             // [284]
        #define bit02   (U32( 29  ))                             // [284]
        #define bit03   (U32( 28  ))                             // [284]
        #define bit04   (U32( 27  ))                             // [284]
        #define bit05   (U32( 26  ))                             // [284]
        #define bit06   (U32( 25  ))                             // [284]
        #define bit07   (U32( 24  ))                             // [284]
        #define bit08   (U32( 23  ))                             // [284]
        #define bit09   (U32( 22  ))                             // [284]
        #define bit10   (U32( 21  ))                             // [284]
        #define bit11   (U32( 20  ))                             // [284]
        #define bit12   (U32( 19  ))                             // [284]
        #define bit13   (U32( 18  ))                             // [284]
        #define bit14   (U32( 17  ))                             // [284]
        #define bit15   (U32( 16  ))                             // [284]
        #define bit16   (U32( 15  ))                             // [284]
        #define bit17   (U32( 14  ))                             // [284]
        #define bit18   (U32( 13  ))                             // [284]
        #define bit19   (U32( 12  ))                             // [284]
        #define bit20   (U32( 11  ))                             // [284]
        #define bit21   (U32( 10  ))                             // [284]
        #define bit22   (U32(  9  ))                             // [284]
        #define bit23   (U32(  8  ))                             // [284]
        #define bit24   (U32(  7  ))                             // [284]
        #define bit25   (U32(  6  ))                             // [284]
        #define bit26   (U32(  5  ))                             // [284]
        #define bit27   (U32(  4  ))                             // [284]
        #define bit28   (U32(  3  ))                             // [284]
        #define bit29   (U32(  2  ))                             // [284]
        #define bit30   (U32(  1  ))                             // [284]
        #define bit31   (U32(  0  ))                             // [284]
        #define bit32   BITS_INDEXED_STARTING_AT_0               // [284]
                                                                 // [284]
    //:=============================:#_NBI_TO_ABI_#:[284]://     // [284]
    //:#_GREY_MATTER_GREY_#:[311]:=======================://     // [311]
                                                                 // [311]
        #define FV4_GREYMAT ( FV4(0.42,0.23,0.23,1.00) )         // [311]
                                                                 // [311]
    //:=======================:#_GREY_MATTER_GREY_#:[311]://     // [311]
    //:#_VOID_PLACEHOLDER_RED_#:[305]:===================://     // [305]
                                                                 // [305]
        #define FV4_VOIDRED ( FV4(0.23,0.00,0.00,1.00) )         // [305]
                                                                 // [305]
    //:===================:#_VOID_PLACEHOLDER_RED_#:[305]://     // [305]
    //:#_LETTER_BOX_BLACK_#:[284]:=======================://     // [284]
                                                                 // [284]
        #define FV4_LBBLACK ( FV4(0,0,0,1) )                     // [284]
                                                                 // [284]
    //:=======================:#_LETTER_BOX_BLACK_#:[284]://     // [284]
    //:#_TWITCH_PURPLE_#:[284]:==========================://     // [284]
                                                                 // [284]
        #define FV4_PURPLET (FV4( 0.56,0.28,1.00,1.0 ))          // [284]
                                                                 // [284]
    //:==========================:#_TWITCH_PURPLE_#:[284]://     // [284]
    //:#_BULGE_CONSTANTS_#:[278]:========================://     // [278]
                                                                 // [278]
        #define c_bu3_bulgout ( U32( ${c_bu3_bulgout} ) )        // [278]
        #define c_bu3_bulgnot ( U32( ${c_bu3_bulgnot} ) )        // [278]
        #define c_bu3_bulginn ( U32( ${c_bu3_bulginn} ) )        // [278]
                                                                 // [278]
    //:========================:#_BULGE_CONSTANTS_#:[278]://     // [278]
    //:#_TOUCHING_TEST_BITS_#:[265]:---------------------://     // [---]
                                                                 // [265]
        //: "Test"  as in "testing for a condition" :::::://     // [265]
        //: __NOT__ as in "Unit Test" ..............:::::://     // [265]
                                                                 // [265]
        #define c_to4_lef ( U32( ${c_to4_lef} ) )                // [283][REF][265]
        #define c_to4_rig ( U32( ${c_to4_rig} ) )                // [283][REF][265]
        #define c_to4_top ( U32( ${c_to4_top} ) )                // [283][REF][265]
        #define c_to4_bot ( U32( ${c_to4_bot} ) )                // [283][REF][265]
                                                                 // [265]
    //:---------------------:#_TOUCHING_TEST_BITS_#:[265]://     // [---]
    //:#_TILE_EDGE_DISCRETE_UNIT_INSET_#:[264]:----------://     // [---]
                                                                 // [264]
        #define c_dui_geo ( U32( ${c_dui_geo} ) )                // [264]
        #define c_dui_bom ( U32( ${c_dui_bom} ) )                // [264]
        #define c_dui_fad ( U32( ${c_dui_fad} ) )                // [264]
                                                                 // [264]
    //:----------:#_TILE_EDGE_DISCRETE_UNIT_INSET_#:[264]://     // [264]
                                                                 // [---]
    #define ag5 "[FIX:a5g:Autotilingdata_5_entries:GEOM]"        // [259]
    #define ab5 "[FIX:a5b:Autotilingdata_5_entries:BOMB]"        // [259]
    #define af5 "[FIX:a5f:Autotilingdata_5_entries:FADA]"        // [259]
                                                                 // [259]
    #define STF texelFetch //: EX: STF( d_pix2048,iv2,0 )://     // [259]
    #define UNI uniform    //:SEE[ d_artgirl_uniform ]   ://     // [251]
    #define SAM usampler2D //: Uint32 Texture Sampler    ://     // [251]
                                                                 // [-------------]
    #define DIB (U32(0x03))             //: Dibit_Dibble ://     // [---][263][---]
    #define NIB (U32(0x0F))             //: Nyble_Nibble ://     // [---][263][---]
    #define SEX (U32(0x3F))             //: Sex______Tet ://     // [---][263][---]
    #define BYE (U32(0xFF))             //: BYE_BYTE!!!! ://     // [283][---][---]
                                                                 // [---][---][---]
    //:@__auto_tile_constants__@:[263]:----------------------:// // [-------------]
                                              //:B[ X X Y Y ]:// // [283][REF][263]
    #define c_to4_del_x U32( ${c_to4_del_x} ) //:B[ 0 0 1 1 ]:// // [283][REF][263]
    #define c_to4_del_y U32( ${c_to4_del_y} ) //:B[ 1 1 0 0 ]:// // [283][REF][263]
    /////////////////////////////////////////                    // [283][REF][263]
    ///////////////////////////////////////// //:B[ X_Y_X_Y ]:// // [283][REF][263]
    #define c_am4_0lx   U32( ${c_am4_0lx}   ) //:B[ 1 0 0 0 ]:// // [283][REF][263]
    #define c_am4_1ly   U32( ${c_am4_1ly}   ) //:B[ 0 1 0 0 ]:// // [283][REF][263]
    #define c_am4_2mx   U32( ${c_am4_2mx}   ) //:B[ 0 0 1 0 ]:// // [283][REF][263]
    #define c_am4_3my   U32( ${c_am4_3my}   ) //:B[ 0 0 0 1 ]:// // [283][REF][263]
    /////////////////////////////////////////      @L_L_M_M@     // [283][REF][263]
                                                                 // [283][REF][263]
    //:----------------------:@__auto_tile_constants__@:[263]:// // [-------------]
                                                                 // [---]
                                                                 // [251]
    #define x_0  ( 0 )     //: Accessors[ vpc,vp0,vp1 ]  ://     // [251]
    #define x_1  ( 1 )     //: Accessors[ vpc,vp0,vp1 ]  ://     // [251]
    #define y_0  ( 2 )     //: Accessors[ vpc,vp0,vp1 ]  ://     // [251]
    #define y_1  ( 3 )     //: Accessors[ vpc,vp0,vp1 ]  ://     // [251]
                                                                 // [251]
                                                                 // [251]
    //:#_F_PREFIX_ON_ANY_OF_THESE_TYPE_#:[251]:------://         // [251]
                                                                 // [251]
        #define F32 float                                        // [251]
        #define FV2  vec2                                        // [251]
        #define FV3  vec3                                        // [251]
        #define FV4  vec4                                        // [251]
                                                                 // [251]
    //:------:#_F_PREFIX_ON_ANY_OF_THESE_TYPE_#:[251]://         // [251]
    //:#_U_PREFIX_ON_ANY_OF_THESE_TYPE_#:[251]:------://         // [251]
                                                                 // [251]
        #define U32  uint                                        // [251]
        #define UV2 uvec2                                        // [251]
        #define UV3 uvec3                                        // [251]
        #define UV4 uvec4                                        // [251]
                                                                 // [251]
    //:------:#_U_PREFIX_ON_ANY_OF_THESE_TYPE_#:[251]://         // [251]
    //:#_I_PREFIX_ON_ANY_OF_THESE_TYPE_#:[259]:------://         // [---]
                                                                 // [259]
        //: "i_" can also mean "input" so be mindful.://         // [259]
                                                                 // [259]
        #define I32    int                                       // [259]
        #define IV2  ivec2                                       // [260][BUG][259]
        #define IV3  ivec3                                       // [260][BUG][259]
        #define IV4  ivec4                                       // [260][BUG][259]
                                                                 // [259]
    //:------:#_I_PREFIX_ON_ANY_OF_THESE_TYPE_#:[259]://         // [---]
                                                                 // [251]
    #define f_raw_fcx   ( gl_FragCoord.x )                       // [251]
    #define f_raw_fcy   ( gl_FragCoord.y )                       // [251]
                                                                 // [251]
    #define u_0   U32(  0 ) //:  @D_I__S_I@  ://                 // [251]
    #define u_1   U32(  1 ) //:  @D_I__S_I@  ://                 // [251]
    #define u_2   U32(  2 ) //:  @D_I__S_I@  ://                 // [251]
    #define u_3   U32(  3 ) //:  @D_I__S_I@  ://                 // [251]
    #define u_4   U32(  4 ) //:  @D_I__S_I@  ://                 // [251]
    #define u_5   U32(  5 ) //:  @D_I__S_I@  ://                 // [251]
    #define u_6   U32(  6 ) //:  @D_I__S_I@  ://                 // [251]
    #define u_7   U32(  7 ) //:  @D_I__S_I@  ://                 // [251]
    #define u_8   U32(  8 ) //:  @D_I__S_I@  ://                 // [328]
                                                                 // [---]
    #define u_ff  U32( 0xFF)    //: For IMF Functions :::://     // [267]
    #define f_ff  F32(255.0)    //: For IMF Functions :::://     // [267]
    #define UX7E (U32(0x7E ))   //: For BITABLE Optimize ://     // [308]
    #define f_256 F32(256.0)    //: For_Reasons_I_Tired  ://     // [345]
                                                                 // [---]
    #define u_00 U32(    0 )                                     // [313]
    #define u_01 U32(    1 )                                     // [---][258]
    #define u_02 U32(    2 )                                     // [---][258]
    #define u_03 U32(    3 )                                     // [---][305]
    #define u_04 U32(    4 )                                     // [---][258]
    #define u_05 U32(    5 )                                     // [---][273]
    #define u_06 U32(    6 )                                     // [313]
    #define u_07 U32(    7 )                                     // [313]
    #define u_08 U32(    8 )                                     // [---][258]
    #define u_09 U32(    9 )                                     // [313]
    #define u_10 U32(   10 )                                     // [313]
    #define u_11 U32(   11 )                                     // [313]
    #define u_12 U32(   12 )                                     // [313]
    #define u_13 U32(   13 )                                     // [313]
    #define u_14 U32(   14 )                                     // [313]
    #define u_15 U32(   15 )                                     // [313]
    #define u_16 U32(   16 )                                     // [---][258]
                                                                 // [---]
    #define u_32 U32(   32 )                                     // [258]
    #define u_64 U32(   64 )                                     // [258]
                                                                 // [---]
                                                                 // [---]
                                                                 // [---]
    #define u_001  U32(    1 )                                   // [272]
    #define u_002  U32(    2 )                                   // [272]
    #define u_004  U32(    4 )                                   // [272]
    #define u_007  U32(    7 )                                   // [304]
    #define u_008  U32(    8 )                                   // [272]
    #define u_016  U32(   16 )                                   // [272]
    #define u_020  U32(   20 )                                   // [304]
    #define u_021  U32(   21 )                                   // [304]
    #define u_032  U32(   32 )                                   // [272]
    #define u_064  U32(   64 )                                   // [272]
    #define u_128  U32(  128 )                                   // [259]
    #define u_256  U32(  256 )                                   // [345]
    #define u_512  U32(  512 )                                   // [259]
                                                                 // [---]
    #define u_0001 U32(    1 )                                   // [257]
    #define u_0002 U32(    2 )                                   // [257]
    #define u_0004 U32(    4 )                                   // [257]
    #define u_0008 U32(    8 )                                   // [257]
    #define u_0016 U32(   16 )                                   // [257]
    #define u_0032 U32(   32 )                                   // [257]
    #define u_0064 U32(   64 )                                   // [257]
    #define u_0128 U32(  128 )                                   // [257]
    #define u_0256 U32(  256 )                                   // [257]
    #define u_0512 U32(  512 )                                   // [257]
    #define u_1024 U32( 1024 )                                   // [257]
                                                                 // [---]
    //:#_GEOMETRIC_ELEMENT_SIZES_#:[253]:----------------://     // [253]
                                                                 // [253]
        //:----------------------------------------------://     // [253]
        //:COPIED_FROM[ _DUN_NOW_TOP_LEVEL_ ]( #1_7_6 )::://     // [253]
        //:TAG[ geometric_elements | geometric-elements ]://     // [253]
        //:TAG[ geometric_element  | geometric-element  ]://     // [253]
        //:----------------------------------------------://     // [253]
                                                                 // [253]
        #define c_dum  U32( ${c_dum} )//:  0x7FFF80 :::::://     // [253]
        #define c_duh  U32( ${c_duh} )//:  0x2AAA80 HOTEL://     // [253]
        #define c_dur  U32( ${c_dur} )//:  0x088880 ROOM ://     // [253]
        #define c_dut  U32( ${c_dut} )//:  0x002222 :::::://     // [253]
                                      //:  -------- :::::://     // [253]
        #define c_du0  U32( ${c_du0} )//:  0x002222 :::::://     // [253]
        #define c_du1  U32( ${c_du1} )//:  0x004444 :::::://     // [253]
        #define c_du2  U32( ${c_du2} )//:  0x008888 :::::://     // [253]
        #define c_du3  U32( ${c_du3} )//:  0x011110 :::::://     // [253]
        #define c_du4  U32( ${c_du4} )//:  0x022220 :::::://     // [253]
        #define c_du5  U32( ${c_du5} )//:  0x044440 :::::://     // [253]
        #define c_du6  U32( ${c_du6} )//:  0x088880 :::::://     // [253]
                                                                 // [253]
    //:----------------:#_GEOMETRIC_ELEMENT_SIZES_#:[253]://     // [253]
    //:#_GEOMETRIC_ELEMENT_TYPES_#:[253]:----------------://     // [253]
                                                                 // [253]
        #define c_gt0 U32( ${c_gt0} )  //:HOTEL          ://     // [253]
        #define c_gt1 U32( ${c_gt1} )  //:LEVEL / du6    ://     // [253]
        #define c_gt2 U32( ${c_gt2} )  //:      c_du5    ://     // [253]
        #define c_gt3 U32( ${c_gt3} )  //:      c_du4    ://     // [253]
        #define c_gt4 U32( ${c_gt4} )  //:      c_du3    ://     // [253]
        #define c_gt5 U32( ${c_gt5} )  //:      c_du2    ://     // [253]
        #define c_gt6 U32( ${c_gt6} )  //:      c_du1    ://     // [253]
        #define c_gt7 U32( ${c_gt7} )  //:      c_du0    ://     // [253]
                                                                 // [253]
    //:----------------:#_GEOMETRIC_ELEMENT_TYPES_#:[253]://     // [253]

`);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [251]
//:==========================:__ARTGIRL__:SHADER_MACROS:[251]:// // [251]
//:__ARTGIRL__:SHADER_LOOKUP_TABLES:[253]:===================:// // [253]
const d_artgirl_shadlut =(` //////////////////////////////////// // [253]
                                                                 // [---]
    //:TAG[ artgirl-lookup-tables | artgirl-lookup-tables ]:::// // [259]
    //:TAG[ artgirl_lookup_table  | artgirl_lookup_table  ]:::// // [259]
    //:TAG[ artgirl_lut | artgirl-lut | artgirl lut       ]:::// // [259]
    //:TAG[ lut girl | lut-girl | lutgirl | lut_girl      ]:::// // [259]
    //:TAG[ artgirl lookup | artgirl lookup tables | aglt ]:::// // [261]
    //:TAG[ artgirl-shader-lookup-tables | shadersluts    ]:::// // [266]
    //:TAG[ artgirl-shader-luts | shader-luts | shader_lut]:::// // [266]
    //:TAG[ artgirl_shader_luts | shader_luts | shaderslut]:::// // [270]
    //:TAG[ d_artgirl_lookup_tables | ag-lut | ag_lut |agl]:::// // [306]
                                                                 // [---]
    //:#_MIRROR_TOUCHING_BY_USING_LUT_:[330]:----------------:// // [330]
                                                                 // [330]
        [[[d_tog_m_x_to4_to4]]]                                  // [330]
                                                                 // [330]
        [[[d_tog_m_y_to4_to4]]]                                  // [330]
                                                                 // [330]
    //:----------------:#_MIRROR_TOUCHING_BY_USING_LUT_:[330]:// // [330]
    //:#_G25_R4C_TABLES_#:[176]:-----------------------------:// // [306][MOV][176]

        [[[d_g25_r4x]]]  //: GridCell_To_RoomDataCell.X :://     // [306][MAR][176]
        [[[d_g25_r4y]]]  //: GridCell_To_RoomDataCell.Y :://     // [306][MAR][176]

    //:-----------------------------:#_G25_R4C_TABLES_#:[176]:// // [306][MOV][176]
                                                                 // [---]
   //:#_TOUCHING_TO_AGOLASET_CELL_XY_#:[286]:------------://     // [286]
                                                 //:     ://     // [286]
        //: U32 d_to4_a4x[ 16 ]=U32[ 16 ]( .... ) :::::::://     // [286]
             [[[d_to4_a4x]]]                     //:     ://     // [286]
                                                 //:     ://     // [286]
        //: U32 d_to4_a4y[ 16 ]=U32[ 16 ]( .... ) :::::::://     // [286]
             [[[d_to4_a4y]]]                     //:     ://     // [286]
                                                 //:     ://     // [286]
    //:-----------:#_TOUCHING_TO_AGOLASET_CELL_XY_#:[286]://     // [286]
    //:#_DIVIDE_TILES_INTO_34_SECTIONS_#:[277]:==============:// // [277]
                                                                 // [277]
        U32    d_te7_d34[ 7 ]=U32[ 7 ](                          // [277]
            U32( ${c_d34_du0} )                                  // [277]
        ,   U32( ${c_d34_du1} )                                  // [277]
        ,   U32( ${c_d34_du2} )                                  // [277]
        ,   U32( ${c_d34_du3} )                                  // [277]
        ,   U32( ${c_d34_du4} )                                  // [277]
        ,   U32( ${c_d34_du5} )                                  // [277]
        ,   U32( ${c_d34_du6} )                                  // [277]
        );//@NESC@://                                            // [277]
                                                                 // [277]
    //:==============:#_DIVIDE_TILES_INTO_34_SECTIONS_#:[277]:// // [---]
    //:#_RING_MAPPING_ARRAY_#:[276]:=========================:// // [276]
                                                                 // [276]
        //: U32 d_r34_bu3_r10[ 102 ]=U32[ 102 ]( ... ) ://       // [276]
                                                                 // [276]
        [[[d_r34_bu3_r10]]]                                      // [276]
                                                                 // [276]
    //:=========================:#_RING_MAPPING_ARRAY_#:[276]:// // [276]
    //:#_DISCRETE_TILE_5THS_#:[271]:=========================:// // [---]
                                                                 // [---]
        //:#_YOU_DONE_FUCKED_UP_GOOD_:[273]:=================:// // [273][---]
                                                                 // [273][---]
            //: BAD CODE MONKEY! YOU KNOW WHAT YOU DID!! ://     // [273][---]
            //: LOOK AT IT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ://     // [273][---]
                                                                 // [273][---]
            //- U32    d_te7_d20[ 7 ]=U32[ 7 ](  -//             // [272][271]
            //-     U32( @{c_d20_du0} )          -//             // [272][271]
            //- ,   U32( @{c_d20_du1} )          -//             // [272][271]
            //- ,   U32( @{c_d20_du2} )          -//             // [272][271]
            //- ,   U32( @{c_d20_du3} )          -//             // [272][271]
            //- ,   U32( @{c_d20_du4} )          -//             // [272][271]
            //- ,   U32( @{c_d20_du5} )          -//             // [272][271]
            //- ,   U32( @{c_d20_du6} )          -//             // [272][271]
            //- );//@NESC@://                    -//             // [272][271]
                                                                 // [273][---]
        //:=================:#_YOU_DONE_FUCKED_UP_GOOD_:[273]:// // [273][---]
        //:#_RESTORE_HONOR_TO_KANJI_NAME_#:[273]:------------:// // [273][---]
                                                                 // [273][---]
                U32    d_te7_d10[ 7 ]=U32[ 7 ](                  // [273][---]
                    U32( ${c_d10_du0} )                          // [273][---]
                ,   U32( ${c_d10_du1} )                          // [273][---]
                ,   U32( ${c_d10_du2} )                          // [273][---]
                ,   U32( ${c_d10_du3} )                          // [273][---]
                ,   U32( ${c_d10_du4} )                          // [273][---]
                ,   U32( ${c_d10_du5} )                          // [273][---]
                ,   U32( ${c_d10_du6} )                          // [273][---]
                );//@NESC@://                                    // [273][---]
                                                                 // [273][---]
        //:------------:#_RESTORE_HONOR_TO_KANJI_NAME_#:[273]:// // [273][---]
                                                                 // [---]
    //:=========================:#_DISCRETE_TILE_5THS_#:[271]:// // [271]
    //:#_HARDCODED_FOURSET_GRAPHICS_#:[270]:-----------------:// // [---][--------]
                                                                 // [270][--------]
        //:AKA[ d_fourset_la3_v16_f16_binfour ]://               // [270][MOV][249]
             [[[d_fourset_la3_v16_f16_u25clus]]]                 // [270][MOV][249]
                                                                 // [270][--------]
    //:-----------------:#_HARDCODED_FOURSET_GRAPHICS_#:[270]:// // [270][--------]
    //:#_FOURSET_REMIX_TABLES_#:[269]:-----------------------:// // [269]
                                                                 // [-----------------------]
        //: U32 d_to4_f4x[ 64 ]=U32[ 64 ]( ... );                // [283][REF][275][REF][269]
                                                                 // [-----------------------]
             [[[d_to4_f4x]]]                                     // [283][REF][275][REF][269]
                                                                 // [-----------------------]
        //: U32 d_to4_f4y[ 64 ]=U32[ 64 ]( ... );                // [283][REF][275][REF][269]
                                                                 // [-----------------------]
             [[[d_to4_f4y]]]                                     // [283][REF][275][REF][269]
                                                                 // [-----------------------]
    //:-----------------------:#_FOURSET_REMIX_TABLES_#:[269]:// // [269]
    //:#_TILE_COLOR_LOOKUPTABLE_#:[266]:---------------------:// // [---]
                                                                 // [266]
        //: U32 d_la3_v16_c04_hex[ 192 ]=U32[ 192 ]( ... );  :// // [266]
                                                                 // [266]
             [[[d_la3_v16_c04_hex]]]                             // [266]
                                                                 // [266]
    //:---------------------:#_TILE_COLOR_LOOKUPTABLE_#:[266]:// // [---]

    //:#_TE7_TO_DISCRETE_UNIT_SIZE_OF_TILE_#:[264]:----------:// // [---]
                                                                 // [---]
        U32 d_te7_dun[ 7 ]=U32[ 7 ](                             // [264][COP][155]
                                                                 // [264][COP][155]
            U32( ${c_du0} )//:-------------------------------:// // [264][COP][155]
        ,   U32( ${c_du1} )//:                               :// // [264][COP][155]
        ,   U32( ${c_du2} )//:  Collectable Cats That Follow :// // [264][COP][155]
        ,   U32( ${c_du3} )//:  You Around And Trip Bombs    :// // [264][COP][155]
        ,   U32( ${c_du4} )//:  Sounds Fun.                  :// // [264][COP][155]
        ,   U32( ${c_du5} )//:                               :// // [264][COP][155]
        ,   U32( ${c_du6} )//:  Collecting All 7 Dragon      :// // [264][COP][155]
        ////               //:  Balls Also Sounds Good.      :// // [264][COP][155]
        );                 //:-------------------------------:// // [264][COP][155]
                                                                 // [---]
    //:----------:#_TE7_TO_DISCRETE_UNIT_SIZE_OF_TILE_#:[264]:// // [---]
    //:#_TE7_TO_LATERAL_OFFSET_#:[261]:----------------------:// // [---]
                                                                 // [---]
        U32 d_te7_lat[ 7 ]=U32[ 7 ](                             // [261][COP][175]
                                                                 // [261][COP][175]
            U32( ${c_lat_000} )                                  // [261][COP][175]
        ,   U32( ${c_lat_001} )                                  // [261][COP][175]
        ,   U32( ${c_lat_002} )                                  // [261][COP][175]
        ,   U32( ${c_lat_003} )                                  // [261][COP][175]
        ,   U32( ${c_lat_004} )                                  // [261][COP][175]
        ,   U32( ${c_lat_005} )                                  // [261][COP][175]
        ,   U32( ${c_lat_006} )                                  // [261][COP][175]
                                                                 // [261][COP][175]
        );//@NESC@://                                            // [261][COP][175]
                                                                 // [---]
    //:----------------------:#_TE7_TO_LATERAL_OFFSET_#:[261]:// // [---]
    //:#_TE7_TO_DIAGONAL_OFFSET_LOOKUP_TABLE_#:[259]:--------:// // [259]
                                                                 // [259]
        U32 d_te7_dia[ 7 ]=U32[ 7 ](                             // [259][COP][177]
                                                                 // [259][COP][177]
            U32( ${c_dia_000} )                                  // [259][COP][177]
        ,   U32( ${c_dia_001} )                                  // [259][COP][177]
        ,   U32( ${c_dia_002} )                                  // [259][COP][177]
        ,   U32( ${c_dia_003} )                                  // [259][COP][177]
        ,   U32( ${c_dia_004} )                                  // [259][COP][177]
        ,   U32( ${c_dia_005} )                                  // [259][COP][177]
        ,   U32( ${c_dia_006} )                                  // [259][COP][177]
                                                                 // [259][COP][177]
        );//@NESC@://                                            // [259][COP][177]
                                                                 // [259]
    //:--------:#_TE7_TO_DIAGONAL_OFFSET_LOOKUP_TABLE_#:[259]:// // [259]
    //:#_G25_RXY_LOOKUP_TABLE_#:[259]:-----------------------:// // [259]
    #define   _v_ UV2( 3 , 3 )   //:OutOfBounds_For_Room_Data:// // [259]
                                                                 // [259]
    #define rxy00 UV2( ${r4x_0} , ${r4y_0} )   //: [0,0] :::::// // [259]
    #define rxy01 UV2( ${r4x_1} , ${r4y_0} )   //: [1,0] :::::// // [259]
    #define rxy02 UV2( ${r4x_2} , ${r4y_0} )   //: [2,0] :::::// // [259]
    #define rxy03 UV2( ${r4x_3} , ${r4y_0} )   //: [3,0] :::::// // [259]
                                               //:       :::::// // [259]
    #define rxy04 UV2( ${r4x_0} , ${r4y_1} )   //: [0,1] :::::// // [259]
    #define rxy05 UV2( ${r4x_1} , ${r4y_1} )   //: [1,1] :::::// // [259]
    #define rxy06 UV2( ${r4x_2} , ${r4y_1} )   //: [2,1] :::::// // [259]
    #define rxy07 UV2( ${r4x_3} , ${r4y_1} )   //: [3,1] :::::// // [259]
                                               //:       :::::// // [259]
    #define rxy08 UV2( ${r4x_0} , ${r4y_2} )   //: [0,2] :::::// // [259]
    #define rxy09 UV2( ${r4x_1} , ${r4y_2} )   //: [1,2] :::::// // [259]
    #define rxy10 UV2( ${r4x_2} , ${r4y_2} )   //: [2,2] :::::// // [259]
    #define rxy11 UV2( ${r4x_3} , ${r4y_2} )   //: [3,2] :::::// // [259]
                                               //:       :::::// // [259]
    #define rxy12 UV2( ${r4x_0} , ${r4y_3} )   //: [0,3] :::::// // [259]
    //////////////////////////////////////////////////////////// // [259]
                                                                 // [259]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [259]
        //: d_g25_rxy is 2D version of paired L.U.T.(S): ://     // [259]
        //: [ d_g25_r4x ]AND[ d_g25_r4y ]                ://     // [259]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [259]
                                                                 // [259]
        UV2 d_g25_rxy[ 25 ]=UV2[ 25 ](                           // [259]
                                                                 // [259]
            ( _v_ ),( _v_ ),(rxy00),( _v_ ),( _v_ )              // [259]
        ,   ( _v_ ),(rxy01),(rxy02),(rxy03),( _v_ )              // [259]
        ,   (rxy04),(rxy05),(rxy06),(rxy07),(rxy08)              // [259]
        ,   ( _v_ ),(rxy09),(rxy10),(rxy11),( _v_ )              // [259]
        ,   ( _v_ ),( _v_ ),(rxy12),( _v_ ),( _v_ )              // [259]
        );//:@NESC@://                                           // [259]
                                                                 // [259]
    //////////////////////////////////////////////////////////// // [259]
    #undef rxy00  ////////////////////////////////////////////// // [259]
    #undef rxy01  ////////////////////////////////////////////// // [259]
    #undef rxy02  ////////////////////////////////////////////// // [259]
    #undef rxy03  ////////////////////////////////////////////// // [259]
    #undef rxy04  ////////////////////////////////////////////// // [259]
    #undef rxy05  ////////////////////////////////////////////// // [259]
    #undef rxy06  ////////////////////////////////////////////// // [259]
    #undef rxy07  ////////////////////////////////////////////// // [259]
    #undef rxy08  ////////////////////////////////////////////// // [259]
    #undef rxy09  ////////////////////////////////////////////// // [259]
    #undef rxy10  ////////////////////////////////////////////// // [259]
    #undef rxy11  ////////////////////////////////////////////// // [259]
    #undef rxy12  ////////////////////////////////////////////// // [259]
                  ////////////////////////////////////////////// // [259]
    #undef   _v_  ////////////////////////////////////////////// // [259]
    //:-----------------------:#_G25_RXY_LOOKUP_TABLE_#:[259]:// // [259]
    //:#_G25_VOD_LOOKUP_TABLE_#:[254]:-----------------------:// // [254][COP][---]
                                                                 // [254][COP][189]
        #define   _v_ U32( 1 ) ///////////////////////////////// // [254][COP][189]
        #define exist U32( 0 ) ///////////////////////////////// // [254][COP][189]
                                                                 // [254][COP][189]
        U32 d_g25_vod[ 25 ]=U32[ 25 ](                           // [254][COP][189]
                                                                 // [254][COP][189]
            //: Grid_ID ==> IsVoidRoom ://                       // [254][COP][189](162)
                                                                 // [254][COP][189][---]
            ( _v_ ),( _v_ ),(exist),( _v_ ),( _v_ )              // [254][COP][189](162)
        ,   ( _v_ ),(exist),(exist),(exist),( _v_ )              // [254][COP][189](162)
        ,   (exist),(exist),(exist),(exist),(exist)              // [254][COP][189](162)
        ,   ( _v_ ),(exist),(exist),(exist),( _v_ )              // [254][COP][189](162)
        ,   ( _v_ ),( _v_ ),(exist),( _v_ ),( _v_ )              // [254][COP][189](162)
                                                                 // [254][COP][189]
        );//:@NESC@://                                           // [254][COP][189]
                                                                 // [254][COP][189]
        #undef    _v_  ///////////////////////////////////////// // [254][COP][189]
        #undef  exist  ///////////////////////////////////////// // [254][COP][189]
    //:-----------------------:#_G25_VOD_LOOKUP_TABLE_#:[254]:// // [254][COP][189]
    //:#_EIGHT_GEOMETRIC_ELEMENT_TYPES_#:[253]:----------://     // [253]
    U32 d_gt8_dus[ 8 ]=U32[ 8 ](                                 // [253]
                                                                 // [253]
        U32(${c_dus_000})  //: ( c_gt0 )==>( c_dus_000 ) ://     // [253]
    ,   U32(${c_dus_001})  //: ( c_gt1 )==>( c_dus_001 ) ://     // [253]
    ,   U32(${c_dus_002})  //: ( c_gt2 )==>( c_dus_002 ) ://     // [253]
    ,   U32(${c_dus_003})  //: ( c_gt3 )==>( c_dus_003 ) ://     // [253]
    ,   U32(${c_dus_004})  //: ( c_gt4 )==>( c_dus_004 ) ://     // [253]
    ,   U32(${c_dus_005})  //: ( c_gt5 )==>( c_dus_005 ) ://     // [253]
    ,   U32(${c_dus_006})  //: ( c_gt6 )==>( c_dus_006 ) ://     // [253]
    ,   U32(${c_dus_007})  //: ( c_gt7 )==>( c_dus_007 ) ://     // [253]
                                                                 // [253]
    );/**@NESC@**/                                               // [253]
    //:----------:#_EIGHT_GEOMETRIC_ELEMENT_TYPES_#:[253]://     // [253]
                                                                 // [253]
`);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [253]
//:===================:__ARTGIRL__:SHADER_LOOKUP_TABLES:[253]:// // [253]
//:__ARTGIRL__:SHADER_UNIFORMS:[251]:========================:// // [251]
                                                                 // [251]
    const d_artgirl_uniform =(` //////////////////////////////// // [251]
                                                                 // [251]
    precision highp usampler2D;  //:#_SAMPLER_PRECISION_FIX_#:// // [251]
                                                                 // [251]
    //:#_CUT_AND_PASTED_FROM_SSF_005_#:[251]:------------://     // [251]
                                                                 // [251]
    UNI U32 d_tik     ;  //: TICKER   : Logic Frame      ://     // [251]
    UNI UV4 d_vpc     ;  //: Viewport : CANVAS/CLIENT    ://     // [251]
    UNI UV4 d_vp0     ;  //: Viewport : DEST/SCREEN      ://     // [251]
    UNI UV4 d_vp1     ;  //: Viewport : DATA/SELECT      ://     // [251]
    UNI UV4 d_camwall ;  //: Camera Stress Feedback      ://     // [251]
    UNI U32 d_dmx     ;  //: Discrete_Mousepos_X         ://     // [251]
    UNI U32 d_dmy     ;  //: Discrete_Mousepos_Y         ://     // [251]
    UNI U32 d_gtx     ;  //: Global_Tile_X               ://     // [251]
    UNI U32 d_gty     ;  //: Global_Tile_Y               ://     // [251]
    UNI U32 d_te7     ;  //: Active Tile Size Exponent   ://     // [251]
    UNI SAM d_p2k     ;  //: Master Memory Sampler       ://     // [251]
                                                                 // [251]
    //:------------:#_CUT_AND_PASTED_FROM_SSF_005_#:[251]://     // [251]
                                                                 // [251]
    `);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [251]
//:========================:__ARTGIRL__:SHADER_UNIFORMS:[251]:// // [---]
//:__ARTGIRL__:INLINED_MACRO_FUNCTIONS:[260]:----------------:// // [260]
                                                                 // [260]
const d_artgirl_imf =(` //////////////////////////////////////// // [260]


    //:TAG[ imf-functions international-monitary-fund  ]::::::// // [283]
    //:TAG[ IMF_SECTION | internationary monitary fund ]::::::// // [263]
    //:TAG[ international monitary fund | not-that-imf ]::::::// // [263]
    //:TAG[ imf-section | imf_section | imf section    ]::::::// // [263]
    //:TAG[ inlined macro functions | inline functions ]::::::// // [265]
    //:TAG[ inline-macro-section | inline-macro | imac ]::::::// // [308]
    //:#_VIDEO_IDEA_WITH_AND_WITHOUT_EXTENDED_AUTO_TILING_#:::// // [263]
                                                                 // [---]
    //:#_GET_LATERAL_MULTIPLIER_LMX_LMY_#:[308]:---------://     // [308]
                                                                 // [308]
        #define IMF_LA3_LMX ((u_la3 & u_1 )>>u_0)                // [308]
        #define IMF_LA3_LMY ((u_la3 & u_2 )>>u_1)                // [308]
                                                                 // [308]
    //:---------:#_GET_LATERAL_MULTIPLIER_LMX_LMY_#:[308]://     // [308]
    //:#_GET_UINT32_FRAG_COORD_#:[284]:------------------://     // [---]
    //:#_GET_UFC_#:[284]:--------------------------------://     // [284]
                                                                 // [284]
    #define IMF_UFC_X ( u_0         + U32(f_raw_fcx - 0.5))      // [284]
    #define IMF_UFC_Y (d_vpc[ y_1 ] - U32(f_raw_fcy - 0.5))      // [284]
                                                                 // [284]
    //:--------------------------------:#_GET_UFC_#:[284]://     // [284]
    //:------------------:#_GET_UINT32_FRAG_COORD_#:[284]://     // [284]
    //:#_GET_LOCAL_PERCENT_COORD_#:[284]:----------------://     // [284]
    //:#_GET_LPC_#:[284]:--------------------------------://     // [284]
                                                                 // [284]
        //:@RMO@: Range_Minus_One (ZeroedOutAddressSpace)://     // [284]
        //:@ZOP@: Zeroed_Out_Position(On[path/range])::::://     // [284]
                                                                 // [284]
    #define IMF_U32_ZOP_X F32( ufc.x        - d_vp0[ x_0 ] )     // [284]
    #define IMF_U32_ZOP_Y F32( ufc.y        - d_vp0[ y_0 ] )     // [284]
                                                                 // [284]
    #define IMF_U32_RMO_X F32( d_vp0[ x_1 ] - d_vp0[ x_0 ] )     // [284]
    #define IMF_U32_RMO_Y F32( d_vp0[ y_1 ] - d_vp0[ y_0 ] )     // [284]
                                                                 // [284]
    #define IMF_LPC_X ( IMF_U32_ZOP_X / IMF_U32_RMO_X )          // [284]
    #define IMF_LPC_Y ( IMF_U32_ZOP_Y / IMF_U32_RMO_Y )          // [284]
                                                                 // [284]
    //:--------------------------------:#_GET_LPC_#:[284]://     // [284]
    //:----------------:#_GET_LOCAL_PERCENT_COORD_#:[284]://     // [284]
    //:#_GET_GLOBAL_DISCRETE_COORD_#:[284]:--------------://     // [284]
    //:#_DUG_DISCRETE_UNIT_GLOBAL_#:[284]:---------------://     // [284]
    //:#_GET_DUG_#:[284]:--------------------------------://     // [284]
                                                                 // [284]
        #define IMF_DLM_X F32( d_vp1[ x_1 ] - d_vp1[ x_0 ] )     // [284]
        #define IMF_DLM_Y F32( d_vp1[ y_1 ] - d_vp1[ y_0 ] )     // [284]
                                                                 // [284]
        #define IMF_DUG_X (d_vp1[x_0]+U32(lpc.x *IMF_DLM_X))     // [284]
        #define IMF_DUG_Y (d_vp1[y_0]+U32(lpc.y *IMF_DLM_Y))     // [284]
                                                                 // [284]
    //:--------------:#_GET_GLOBAL_DISCRETE_COORD_#:[284]://     // [284]
    //:---------------:#_DUG_DISCRETE_UNIT_GLOBAL_#:[284]://     // [284]
    //:--------------------------------:#_GET_DUG_#:[284]://     // [284]
    //:#_LETTERBOX_DISCARD_#:[284]:----------------------://     // [284]
                                                                 // [284]
        #define IMF_UFC_OOB_X_0 ( ufc.x < d_vp0[ x_0 ] )         // [284]
        #define IMF_UFC_OOB_X_1 ( ufc.x > d_vp0[ x_1 ] )         // [284]
        #define IMF_UFC_OOB_Y_0 ( ufc.y < d_vp0[ y_0 ] )         // [284]
        #define IMF_UFC_OOB_Y_1 ( ufc.y > d_vp0[ y_1 ] )         // [284]
                                                                 // [284]
    //:----------------------:#_LETTERBOX_DISCARD_#:[284]://     // [284]
    //:#_REFUSAL_TO_LATCH_WITH_NEIGHBOR_#[283]:----------://     // [---]
                                                                 // [283]
    #define IMF_AM4_BLOCKED_HOR (u_0==(u_am4 & c_am4_0lx ))      // [283]
    #define IMF_AM4_BLOCKED_VER (u_0==(u_am4 & c_am4_1ly ))      // [283]
                                                                 // [283]
    #define IMF_TO4_DELBITS_HOR u_to4=(u_to4 & c_to4_del_x)      // [283]
    #define IMF_TO4_DELBITS_VER u_to4=(u_to4 & c_to4_del_y)      // [283]
                                                                 // [283]
    //:----------:#_REFUSAL_TO_LATCH_WITH_NEIGHBOR_#[283]://     // [283]
    //:#_HEX_COLOR_TO_FLOAT_COLOR_#:[267]:---------------://     // [267]
                                                                 // [267]
    #define IMF_F_R (F32(( u_hex >> 24 )&( u_ff )) / f_ff )      // [267]
    #define IMF_F_G (F32(( u_hex >> 16 )&( u_ff )) / f_ff )      // [267]
    #define IMF_F_B (F32(( u_hex >>  8 )&( u_ff )) / f_ff )      // [267]
    #define IMF_F_A (F32(( u_hex >>  0 )&( u_ff )) / f_ff )      // [267]
                                                                 // [267]
    //:---------------:#_HEX_COLOR_TO_FLOAT_COLOR_#:[267]://     // [267]
                                                                 // [---]
    //:_TOUCHING_TEST_FUNCTIONS__:[265]:-----------------://     // [265]
    //:_TOUCHING_TEST_CONDITIONS_:[265]:-----------------://     // [265]
                                                                 // [---]
        #define IMF_TOU_LEF ( u_0 != (u_to4 & c_to4_lef) )       // [283][REF][265]
        #define IMF_TOU_RIG ( u_0 != (u_to4 & c_to4_rig) )       // [283][REF][265]
        #define IMF_TOU_TOP ( u_0 != (u_to4 & c_to4_top) )       // [283][REF][265]
        #define IMF_TOU_BOT ( u_0 != (u_to4 & c_to4_bot) )       // [283][REF][265]
                                                                 // [---]
        #define IMF_VAC_LEF ( u_0 == (u_to4 & c_to4_lef) )       // [283][REF][265]
        #define IMF_VAC_RIG ( u_0 == (u_to4 & c_to4_rig) )       // [283][REF][265]
        #define IMF_VAC_TOP ( u_0 == (u_to4 & c_to4_top) )       // [283][REF][265]
        #define IMF_VAC_BOT ( u_0 == (u_to4 & c_to4_bot) )       // [283][REF][265]
                                                                 // [---]
    //:-----------------:_TOUCHING_TEST_CONDITIONS_:[265]://     // [265]
    //:-----------------:_TOUCHING_TEST_FUNCTIONS__:[265]://     // [265]
    //:_TOUCHING_MONKEY_WRENCH_MACROS_:[265]:------------://     // [265]
                                                        ////     // [265]
        //:#_SOME_MOVED_TO_CRAZY_BITCHES_HOUSE_#://     ////     // [283]
                                                        ////     // [265]
        #define IMF_TOU_UPP "[FIX:IMF_TOU_TOP]"         ////     // [265]
        #define IMF_TOU_DOW "[FIX:IMF_TOU_BOT]"         ////     // [265]
                                                        ////     // [265]
        #define IMF_VAC_UPP "[FIX:IMF_VAC_TOP]"         ////     // [265]
        #define IMF_VAC_DOW "[FIX:IMF_VAC_BOT]"         ////     // [265]
                                                        ////     // [265]
        #define IMF_EMP_UPP "[FIX:IMF_VAC_TOP]"         ////     // [265]
        #define IMF_EMP_DOW "[FIX:IMF_VAC_BOT]"         ////     // [265]
                                                        ////     // [265]
    //:------------:_TOUCHING_MONKEY_WRENCH_MACROS_:[265]://     // [265]
                                                                 // [---]
    #if( USE_AM4 <= 0 ) //////////////////////////////////////// // [283][REF][263]
                                                                 // [263]
    #define IMF_A5G_TX0 (u_v16==((a5g[x_0]>>28) & NIB)?u_1:u_0)  // [263]
    #define IMF_A5G_TX1 (u_v16==((a5g[x_1]>>28) & NIB)?u_1:u_0)  // [263]
    #define IMF_A5G_TY0 (u_v16==((a5g[y_0]>>28) & NIB)?u_1:u_0)  // [263]
    #define IMF_A5G_TY1 (u_v16==((a5g[y_1]>>28) & NIB)?u_1:u_0)  // [263]
                                                                 // [263]
    #endif  //////////////////////////////////////////////////// // [263]
    #if( USE_AM4 >= 1 ) //////////////////////////////////////// // [283][REF][263]
                                                                 // [---]
        //: REFACTOR : We now want mirroring modes    :::://     // [---][271]
        //:          : encoded into the tile.         :::://     // [---][271]
        //:          : shift by 24 to get ENTIRE      :::://     // [---][271]
        //:  (DONE)  : RED BYTE OUT.                  :::://     // [283][271]
        //:          : NOT[ u_v64 ]BUT[ u_vff ]       :::://     // [---][271]
        //:          : @vff@ : Value 0xFF # of tiles. :::://     // [---][271]
        //:          : AKA: 255 tile values.          :::://     // [---][271]
                                                                 // [--------]
    #define IMF_A5G_TX0 (u_vff==((a5g[x_0]>>24) & BYE)?u_1:u_0)  // [283][REF][263]
    #define IMF_A5G_TX1 (u_vff==((a5g[x_1]>>24) & BYE)?u_1:u_0)  // [283][REF][263]
    #define IMF_A5G_TY0 (u_vff==((a5g[y_0]>>24) & BYE)?u_1:u_0)  // [283][REF][263]
    #define IMF_A5G_TY1 (u_vff==((a5g[y_1]>>24) & BYE)?u_1:u_0)  // [283][REF][263]
                                                                 // [---][263][---]
    #endif  //////////////////////////////////////////////////// // [263][--------]
                                                                 // [---]
    #define IMF_GET_UV4_P2K uv4_p2k = STF(d_p2k,p2k_x_y,0);      // [260]
    //:TAG[ IMF_TEXEL_FETCH | TEXEL_FUCKING_FETCH ]::::::://     // [308]
                                                                 // [---]
    #define IMF_FTB U32 _1_7_ = u_1 ;_1_7_ <=( u_7 );_1_7_++     // [262]
    #define IMF_BTF U32 _1_7_ = u_7 ;_1_7_ >=( u_1 );_1_7_--     // [262]
                                                                 // [---]
                                                                 // [260]
`);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [260]
//:----------------:__ARTGIRL__:INLINED_MACRO_FUNCTIONS:[260]:// // [260]
//:__ARTGIRL__:SHADER_STRINGS:[074]:=========================:// // [---]
                                                                 // [069]
const d_artgirl_ssv_bad =( "[BAD_SSV_DEX:ssv]" );                // [070][069]
const d_artgirl_ssf_bad =( "[BAD_SSV_DEX:ssf]" );                // [070][069]
                                                                 // [069]
const d_artgirl_ssv_all =( //: ShaderSourceVert #all# ://        // [070][069]
////////////////////////////////////////////////////////////////    [069]
(c_artgirl_wgl_tag+`                                             // [074]    

    precision highp float;                                       // [074]
                                                                 // [074]
    layout (location = ${c_artgirl_loc_pos}) in vec3 inn_pos ;   // [077][074]
    layout (location = ${c_artgirl_loc_tex}) in vec2 inn_tex ;   // [077][074]
                           out vec2 i_o_tex ;    //:@i_o_tex@:// // [074]
                                                                 // [074]
    void main(){                                                 // [074]
                                                                 // [074]
        gl_Position =vec4( inn_pos.x                             // [074]
                         , inn_pos.y                             // [074]
                         , inn_pos.z                             // [074]
                         ,       1.0 );                          // [074]
                                                                 // [074]
        i_o_tex = inn_tex ;                                      // [074]
    }                                                            // [074]
                                   
`));; //////////////////////////////////////////////////////////    [069]
                                                                 // [069]
const d_artgirl_ssv_001 =( d_artgirl_ssv_all ); //:@ssv@://      // [070][069]
const d_artgirl_ssv_002 =( d_artgirl_ssv_all ); //:@ssv@://      // [070][069]
const d_artgirl_ssv_003 =( d_artgirl_ssv_all ); //:@ssv@://      // [070][069]
const d_artgirl_ssv_004 =( d_artgirl_ssv_all ); //:@ssv@://      // [070][069]
const d_artgirl_ssv_005 =( d_artgirl_ssv_all ); //:@ssv@://      // [070][069]
const d_artgirl_ssv_006 =( d_artgirl_ssv_all ); //:@ssv@://      // [070][069]
const d_artgirl_ssv_007 =( d_artgirl_ssv_all ); //:@ssv@://      // [070][069]
const d_artgirl_ssv_008 =( d_artgirl_ssv_all ); //:@ssv@://      // [081]
const d_artgirl_ssv_009 =( d_artgirl_ssv_all ); //:@ssv@://      // [081]
                                                                 // [069]
const d_artgirl_ssf_001 =( //: ShaderSourceFrag #01@ssf@[069]:// // [070][069]
////////////////////////////////////////////////////////////////    [069]
(c_artgirl_wgl_tag+`                                             // [074] 
                                                                 
    //: FRAG_SHADER_STR[ d_artgirl_ssf_001 ] ://                 // [081]
    //: FRAG_SHADER_ENU[ c_artgirl_ren_001 ] ://                 // [081]
                                 
    precision mediump float ;                                    // [074]
                                                                 // [074]
    in  vec2  i_o_tex ; //: @i_o_tex@ ://                        // [074]
    out vec4  out_f_c ; //: @out_f_c@ ://                        // [074]
                                                                 // [074]
    void main(){                                                 // [074]
                                                                 // [074]
        out_f_c = vec4( 0 , 1 , 1 , 1.0 ); //:CYAN://            // [074]
    }                                                            // [074]
                                                                        
`));; //////////////////////////////////////////////////////////    [069]
const d_artgirl_ssf_002 =( //: ShaderSourceFrag #02@ssf@[069]://    [070][069]
////////////////////////////////////////////////////////////////    [069]
(c_artgirl_wgl_tag+`                                             // [074]  
                                                                 
    //: FRAG_SHADER_STR[ d_artgirl_ssf_002 ] ://                 // [081]
    //: FRAG_SHADER_ENU[ c_artgirl_ren_002 ] ://                 // [081]                     
                                                                         
    precision mediump float ;                                    // [074]
                                                                 // [074]
    in  vec2  i_o_tex ; //: @i_o_tex@ ://                        // [074]
    out vec4  out_f_c ; //: @out_f_c@ ://                        // [074]
                                                                 // [074]
    void main(){                                                 // [074]
                                                                 // [074]
        out_f_c = vec4(0.5, 1 , 0 , 1.0 ); //:LIME://            // [081][074]
    }                                                            // [074]
                                                                         
`));; //////////////////////////////////////////////////////////    [069]
const d_artgirl_ssf_003 =( //: ShaderSourceFrag #03@ssf@[069]://    [070][069]
////////////////////////////////////////////////////////////////    [069]
(c_artgirl_wgl_tag+`                                             // [074] 
                                                                 
    //: FRAG_SHADER_STR[ d_artgirl_ssf_003 ] :-------------://   // [083][081]
    //: FRAG_SHADER_ENU[ c_artgirl_ren_003 ] :-------------://   // [083][081] 
    //: FRAG_SHADER_SUM[ GRADIENT_QUAD / GradientQuad    ] ://   // [083]
                                                                 // [---]
    precision mediump float ;                                    // [074]
                                                                 // [074]
    in  vec2  i_o_tex ; //: @i_o_tex@ ://                        // [074]
    out vec4  out_f_c ; //: @out_f_c@ ://                        // [074]
                                                                 // [074]
    void main(){                                                 // [074]
                                                                 // [074]
        out_f_c = vec4(//:---------------------://               // [083][074]
            i_o_tex.x  //: X: 0% to 100% Red   ://               // [083]
        ,   i_o_tex.y  //: Y: 0% to 100% Green ://               // [083]
        ,   0.0        //:    0% Blue          ://               // [083]
        ,   1.0        //: 100% Alpha          ://               // [083]
        );;            //:---------------------://               // [083][074]
                                                                 // [074]
    }                                                            // [074]
                                                                         
`));; //////////////////////////////////////////////////////////    [069]
const d_artgirl_ssf_004 =( //: ShaderSourceFrag #04@ssf@[069]://    [070][069]
////////////////////////////////////////////////////////////////    [069]
(c_artgirl_wgl_tag+`                                             // [074]  

    //: FRAG_SHADER_STR[ d_artgirl_ssf_004 ] :--------------://  // [084][081]
    //: FRAG_SHADER_ENU[ c_artgirl_ren_004 ] :--------------://  // [084][081]  
    //: FRAG_SHADER_SUM[ FlashingScreen / FLASH_GRAD ]://        // [084]
                                                                         
    precision mediump float ;                                    // [074]
                                                                 
    #define F32 float    //: Shorthand Type == Uppercase ://     // [086]
    #define U32 uint     //: Shorthand Type == Uppercase ://     // [086]
    #define UNI uniform  //: Shorthand Type == Uppercase ://     // [086]
                                                                 // [086]
    UNI U32 d_tik ;                                              // [086]
                                                                 //      [074]
    in  vec2  i_o_tex ; //: @i_o_tex@ ://                        //      [074]
    out vec4  out_f_c ; //: @out_f_c@ ://                        //      [074]
                                                                 //      [074]
    void main(){                                                 //      [074]
                                                                 //      [074]
                                                                 
        F32 f32 = mod( F32( d_tik ) , 255.0  ) / 255.0 ;         // [086]
                                                                 // [086]
        out_f_c = vec4(                  ///                     // [086]
            mod( i_o_tex.x * 10.0 , 1.0 )///                     // [086]
        ,   mod( i_o_tex.y * 10.0 , 1.0 )///                     // [086]
        ,   f32                          ///                     // [086]
        ,   1.0                          ///                     // [086]
        );; //:INCREASING_BLUE://///////////                     // [086][074]
                                                                 
    }                                                            //      [074]
                                                                        
`));; //////////////////////////////////////////////////////////    [069]
const d_artgirl_ssf_005 =( //: ShaderSourceFrag #05@ssf@[069]://    [070][069]
////////////////////////////////////////////////////////////////    [069]
(c_artgirl_wgl_tag+`                                             // [074]   
                                                                 
    //: FRAG_SHADER_STR[ d_artgirl_ssf_005 ] ://                 // [081]
    //: FRAG_SHADER_ENU[ c_artgirl_ren_005 ] ://                 // [081]  
                                                                 
    //: TAG[fragment_shaders|fragment-shaders|fragshader]://     // [093]
    //: TAG[fragment shaders|frag shaders | frag_shaders]://     // [093]
    //: TAG[shader-code | shader_code | shadercode      ]://     // [095]
                                                                 
    //: TAG[fragshader5 | frag5 | fragmentshader5 ]      ://     // [122]

    precision highp usampler2D; //:#_SAMPLER_PRECISION_#://      // [173][---]
    precision mediump float ;   //:#_PRECISION_FIRST_#  ://      // [173][074]

    #define lat_lev "[BAD_VAR_NAME_DONT_USE_THIS]"               // [177]
                                                                 // [---]                           
    #define SAM usampler2D //: Uint32 Texture Sampler    ://     // [173]
    #define STF texelFetch //: EX: STF( d_pix2048,iv2,0 )://     // [173]
    #define F32 float      //: Shorthand Type == U_CASE  ://     // [---][089]
    #define U32 uint       //: Shorthand Type == U_CASE  ://     // [---][089]
    #define I32  int       //: Shorthand Type == U_CASE  ://     // [099]
    #define UNI uniform    //: Shorthand Type == U_CASE  ://     // [---][089]
    #define UV3 uvec3      //: U32 Vector , 3 elements.  ://     // [175]
    #define IV2 ivec2      //: I32 Vector , 2 elements.  ://     // [175]
    #define UV2 uvec2      //: U32 Vector , 2 elements.  ://     // [---][095]
    #define FV2  vec2      //: F32 Vector , 2 elements.  ://     // [---][095]
    #define FV4  vec4      //: F32 Vector , 4 elements.  ://     // [---][095]
    #define UV4 uvec4      //: Shorthand Type == U_CASE  ://     // [---][089]
                                                                 // [---][089]
    #define x_0  ( 0 )     //: Accessors[ vpc,vp0,vp1 ]  ://     // [---][089]
    #define x_1  ( 1 )     //: Accessors[ vpc,vp0,vp1 ]  ://     // [---][089]
    #define y_0  ( 2 )     //: Accessors[ vpc,vp0,vp1 ]  ://     // [---][089]
    #define y_1  ( 3 )     //: Accessors[ vpc,vp0,vp1 ]  ://     // [---][089]
                                                                 // [---][089]
    #define u_0   U32(  0 ) //:  @D_I__S_I@  ://                 // [---][178][089]
    #define u_1   U32(  1 ) //:  @D_I__S_I@  ://                 // [---][178][089]
    #define u_2   U32(  2 ) //:  @D_I__S_I@  ://                 // [---][178][097]
    #define u_3   U32(  3 ) //:  @D_I__S_I@  ://                 // [---][178][099]
    #define u_4   U32(  4 ) //:  @D_I__S_I@  ://                 // [---][178][097]
    #define u_5   U32(  5 ) //:  @D_I__S_I@  ://                 // [---][178][099]
    #define u_6   U32(  6 ) //:  @D_I__S_I@  ://                 // [---][178][175]
    #define u_7   U32(  7 ) //:  @D_I__S_I@  ://                 // [---][178][---]
    #define u_ff  U32(0xFF) //:  @D_I__S_I@  ://                 // [---][178][---]
    #define u64   U32( 64 ) //:  @D_I__S_I@  ://                 // [---][178][099]
    #define i_255 I32( 255) //:  @D_I__S_I@  ://                 // [---][178][099]
    #define u_255 U32( 255) //:  @D_I__S_I@  ://                 // [---][178][089]
    #define f_255 F32( 255) //:  @D_I__S_I@  ://                 // [---][178][089]
    #define f_0   F32(  0 ) //:  @D_I__S_I@  ://                 // [179][---][---]
    #define f_1   F32(  1 ) //:  @D_I__S_I@  ://                 // [179][---][---]
    #define f_2   F32(  2 ) //:  @D_I__S_I@  ://                 // [---][178][124]
                                                                 // [---]
    #define u_128 U32( 128 ) //:Level_Room : 128X128 PIX ://     // [176]
    #define u_512 U32( 512 ) //:Level_Pack : 512X512 PIX ://     // [176]
                                                                 // [---]
    #define f_raw_fcx   ( gl_FragCoord.x )                       // [089]
    #define f_raw_fcy   ( gl_FragCoord.y )                       // [089]
                                                                 // [089]
    #define F_NAW_FCX (F32(u_fcx-((u_fcx/u_255)*u_255))/f_255)   // [089]
    #define F_NAW_FCY (F32(u_fcy-((u_fcy/u_255)*u_255))/f_255)   // [089]
                                                                 // [089]
    #define F_NOR_FCX (F32(u_fcx) / F32(d_vpc[x_1]))             // [089]
    #define F_NOR_FCY (F32(u_fcy) / F32(d_vpc[y_1]))             // [089]
                                                                 // [---]
    UNI U32 d_tik     ;  //: TICKER   : Logic Frame      ://     //      [122][089]
    UNI UV4 d_vpc     ;  //: Viewport : CANVAS/CLIENT    ://     //      [122][089]
    UNI UV4 d_vp0     ;  //: Viewport : DEST/SCREEN      ://     //      [122][089]
    UNI UV4 d_vp1     ;  //: Viewport : DATA/SELECT      ://     //      [122][089]
    UNI UV4 d_camwall ;  //: Camera Stress Feedback      ://     //      [122]
    UNI U32 d_dmx     ;  //: Discrete_Mousepos_X         ://     // [157][141]
    UNI U32 d_dmy     ;  //: Discrete_Mousepos_Y         ://     // [157][141]
    UNI U32 d_gtx     ;  //: Global_Tile_X               ://     // [157][155]
    UNI U32 d_gty     ;  //: Global_Tile_Y               ://     // [157][155]
    UNI U32 d_te7     ;  //: Active Tile Size Exponent   ://     //      [155]
    /// UV4   uv4_p2k ;  //: RGBA Sample Of[ d_pix2048 ] ://     // [175][173]
    /// UV3   uv3_p2k ;  //: All 3 tiles on fragment.    ://     // [175][---]
    UNI SAM     d_p2k ;  //: Master Memory Sampler       ://     // [---][173]
                                                                 //      [---]
                                                                 // [---]
    ${d_artgirl_use} //: Artgirl.Use_Feature_Macros :::::://     // [263]
    ${d_artgirl_imf} //: Artgirl.Inlined_Macro_Functions ://     // [260]
    ${d_artgirl_shadlut}    ////////////////////////////////     // [306]
                                                                 // [---]
    //:#_DUN_NOW_TOP_LEVEL_#:[176]:--------------------------:// // [176]
                                                                 // [176]
        //:::::::::::::::::::::::::::::::::::::::::::://         // [176][099]
        //: Number of discrete units in different    ://         // [176][099]
        //: geometric elements of our render space.  ://         // [176][099]
        //:::::::::::::::::::::::::::::::::::::::::::://         // [176][099]
                                                                 // [176][099]
        #define c_dum  U32( ${c_dum} )//:  0x7FFF80 :::::://     // [176][099]
        #define c_duh  U32( ${c_duh} )//:  0x2AAA80 HOTEL://     // [176][099]
        #define c_dur  U32( ${c_dur} )//:  0x088880 ROOM ://     // [176][099]
        #define c_dut  U32( ${c_dut} )//:  0x002222 :::::://     // [176][099]
                                      //:  -------- :::::://     // [176][099]
        #define c_du0  U32( ${c_du0} )//:  0x002222 :::::://     // [176][099]
        #define c_du1  U32( ${c_du1} )//:  0x004444 :::::://     // [176][099]
        #define c_du2  U32( ${c_du2} )//:  0x008888 :::::://     // [176][099]
        #define c_du3  U32( ${c_du3} )//:  0x011110 :::::://     // [176][099]
        #define c_du4  U32( ${c_du4} )//:  0x022220 :::::://     // [176][099]
        #define c_du5  U32( ${c_du5} )//:  0x044440 :::::://     // [176][099]
        #define c_du6  U32( ${c_du6} )//:  0x088880 :::::://     // [176][099]
                                                                 // [176]
    //:--------------------------:#_DUN_NOW_TOP_LEVEL_#:[176]:// // [176]
    //:#_TILE_DISCRETE_UNIT_INSET_#:[191]:-------------------:// // [---]
                                                                 // [191]
        U32 d_la3_dui[ 3 ]=U32[ 3 ](                             // [191]
                                                                 // [191]
            U32( ${c_dui_geo} )  //: GEOMETRY TILE INSET ://     // [191]
        ,   U32( ${c_dui_bom} )  //: BOMB     TILE INSET ://     // [191]
        ,   U32( ${c_dui_fad} )  //: FADA     TILE INSET ://     // [191]
                                                                 // [191]
        );//:@NESC@://                                           // [191]
                                                                 // [191]
    //:-------------------:#_TILE_DISCRETE_UNIT_INSET_#:[191]:// // [---]
    //:#_DEBUG_TILE_COLORS:WGL_#:[194]:----------------------:// // [194]
                                          //:----------------:// // [194]
        #define c_gl0 ( F32( ${c_gl0} ) ) //: geo_te7 === 0  :// // [194]
        #define c_gl1 ( F32( ${c_gl1} ) ) //: geo_te7 === 1  :// // [194]
        #define c_gl2 ( F32( ${c_gl2} ) ) //: geo_te7 === 2  :// // [194]
        #define c_gl3 ( F32( ${c_gl3} ) ) //: geo_te7 === 3  :// // [194]
        #define c_gl4 ( F32( ${c_gl4} ) ) //: geo_te7 === 4  :// // [194]
        #define c_gl5 ( F32( ${c_gl5} ) ) //: geo_te7 === 5  :// // [194]
        #define c_gl6 ( F32( ${c_gl6} ) ) //: geo_te7 === 6  :// // [194]
                                          //:                :// // [194]
        #define c_bl0 ( F32( ${c_bl0} ) ) //: bom_te7 === 0  :// // [194]
        #define c_bl1 ( F32( ${c_bl1} ) ) //: bom_te7 === 1  :// // [194]
        #define c_bl2 ( F32( ${c_bl2} ) ) //: bom_te7 === 2  :// // [194]
        #define c_bl3 ( F32( ${c_bl3} ) ) //: bom_te7 === 3  :// // [194]
        #define c_bl4 ( F32( ${c_bl4} ) ) //: bom_te7 === 4  :// // [194]
        #define c_bl5 ( F32( ${c_bl5} ) ) //: bom_te7 === 5  :// // [194]
        #define c_bl6 ( F32( ${c_bl6} ) ) //: bom_te7 === 6  :// // [194]
                                          //:                :// // [194]
        #define c_fl0 ( F32( ${c_fl0} ) ) //: fad_te7 === 0  :// // [194]
        #define c_fl1 ( F32( ${c_fl1} ) ) //: fad_te7 === 1  :// // [194]
        #define c_fl2 ( F32( ${c_fl2} ) ) //: fad_te7 === 2  :// // [194]
        #define c_fl3 ( F32( ${c_fl3} ) ) //: fad_te7 === 3  :// // [194]
        #define c_fl4 ( F32( ${c_fl4} ) ) //: fad_te7 === 4  :// // [194]
        #define c_fl5 ( F32( ${c_fl5} ) ) //: fad_te7 === 5  :// // [194]
        #define c_fl6 ( F32( ${c_fl6} ) ) //: fad_te7 === 6  :// // [194]
                                          //:----------------:// // [194]
                                               //:-----------:// // [194]
        #define c_geo_r ( F32( ${c_geo_r} ) )  //: GEOM.R    :// // [194]
        #define c_geo_g ( F32( ${c_geo_g} ) )  //: GEOM.G    :// // [194]
        #define c_geo_b ( F32( ${c_geo_b} ) )  //: GEOM.B    :// // [194]
                                               //:           :// // [194]
        #define c_bom_r ( F32( ${c_bom_r} ) )  //: BOMB.R    :// // [194]
        #define c_bom_g ( F32( ${c_bom_g} ) )  //: BOMB.G    :// // [194]
        #define c_bom_b ( F32( ${c_bom_b} ) )  //: BOMB.B    :// // [194]
                                               //:           :// // [194]
        #define c_fad_r ( F32( ${c_fad_r} ) )  //: FADA.R    :// // [194]
        #define c_fad_g ( F32( ${c_fad_g} ) )  //: FADA.G    :// // [194]
        #define c_fad_b ( F32( ${c_fad_b} ) )  //: FADA.B    :// // [194]
                                               //:-----------:// // [194]
        F32 d_la3_f32_hue[ 9 ]=F32[ 9 ](                         // [194]
                                                                 // [194]
              c_geo_r , c_geo_g , c_geo_b                        // [194]
        ,     c_bom_r , c_bom_g , c_bom_b                        // [194]
        ,     c_fad_r , c_fad_g , c_fad_b                        // [194]
        );//:@NESC@://                                           // [194]
                                                                 // [194]
        #define d_la3_f32_lum ("[FIX:d_la3_te7_f32_lum]")        // [194]
        #define d_te7_la3_f32_lum ("[FIX:FLIPIT_AROUND]")        // [194]
                                                                 // [194]
        F32 d_la3_te7_f32_lum[ 21 ]=F32[ 21 ](                   // [194]
                                                                 // [194]
              c_gl0,c_gl1,c_gl2,c_gl3,c_gl4,c_gl5,c_gl6          // [194]
        ,     c_bl0,c_bl1,c_bl2,c_bl3,c_bl4,c_bl5,c_bl6          // [194]
        ,     c_fl0,c_fl1,c_fl2,c_fl3,c_fl4,c_fl5,c_fl6          // [194]
        );//:@NESC@://                                           // [194]
                                                                 // [194]
    //:----------------------:#_DEBUG_TILE_COLORS:WGL_#:[194]:// // [194]
    //:#_R4_ENUMS_#:[176]:-----------------------------------:// // [176]
                                                                 // [176]
        #define r4x_0 U32( ${r4x_0} )                            // [176]
        #define r4x_1 U32( ${r4x_1} )                            // [176]
        #define r4x_2 U32( ${r4x_2} )                            // [176]
        #define r4x_3 U32( ${r4x_3} )                            // [176]
                                                                 // [176]
        #define r4y_0 U32( ${r4y_0} )                            // [176]
        #define r4y_1 U32( ${r4y_1} )                            // [176]
        #define r4y_2 U32( ${r4y_2} )                            // [176]
        #define r4y_3 U32( ${r4y_3} )                            // [176]
                                                                 // [176]
    //:-----------------------------------:#_R4_ENUMS_#:[176]:// // [176]
    //:#_MOVEDSTUFF_VIDEO_306_#[ G25_R4C_TABLES ]:::::::::::::// // [306]
    //:#_REMOVED_IN_VIDEO_306_#[ _G25_VOD_LOOKUP_TABLE_ ]:::::// // [306]
    //:#_REMOVED_IN_VIDEO_306_#[ d_te7_dun (duplicate)  ]:::::// // [306]
                                                                 // [---]
    //:--------------------------------------------------://     //      [089]
    //:Shader Variable Prefixes :                        ://     //      [089]
    //:#_DO_NOT_COMBINE_PREFIXES_# !!!!!!!!!!!!!!!!!!!!! ://     //      [089]
    //:--------------------------------------------------://     //      [089]
    //: d_ : Global Data / Variable                      ://     //      [089]
    //: f_ : Float32 Variable (includes vectors)         ://     //      [089]
    //: u_ : Uint32  Variable (includes vectors)         ://     //      [089]
    //: i_ : Int32   Variable (includes vectors)         ://     //      [089]
    //: o_ : DO NOT USE "o_" for output in shader        ://     //      [089]
    //: p_ : DO NOT USE "p_" for percent.(use f_)        ://     //      [095]
    //:                                                  ://     //      [089]
    //:out_: output variable of function.                ://     //      [089]
    //:inn_: innput variable of function.                ://     //      [089]
    //:--------------------------------------------------://     //      [089]
                                                                 // [---]
                                                                 // [---][074]
    in  vec2  i_o_tex ; //: @i_o_tex@ :#_I_O_TEX_POINTLESS_#://  // [---][074]
    out vec4  out_f_c ; //: @out_f_c@ ://                        // [---][074]
                                                                 // [---]
    //: GET_UV3_P2K : I take this back... Better To      ://     //      [175]
    //:             : create functions that return       ://     //      [175]
    //:             : composite pixel for each layer.    ://     //      [175]
    //:             : THUS[ GET_LA3_FV4 ]                ://     //      [175]
                                                                 //      [175]
    #define GET_UV3_P2K "[I_TAKE_IT_BACK!!!]"  //: @MWM@ ://     // [204][175]
    #define GET_P2K_FV4 "[FIX:GET.LA3.FV4]!!"  //: @MWM@ ://     // [204][175]
    #define GET_FV4_P2K "[FIX:GET.LA3.FV4]!!"  //: @MWM@ ://     // [204][175]
    #define GET_FV4_LA3 "[FIX:GET.LA3.FV4]!!"  //: @MWM@ ://     // [204][175]
                                                                 // [---][---]
    U32 d_la3_lmx[ 3 ]=U32[ 3 ]( u_0 , u_1 , u_0  );             // [177]
    U32 d_la3_lmy[ 3 ]=U32[ 3 ]( u_0 , u_0 , u_1  );             // [177]
                                                                 // [177]
    //:REMOVED_IN_VIDEO_306[ d_te7_dia (duplicate) ]::::::::::// // [306]
    //:REMOVED_IN_VIDEO_306[ d_te7_lat (duplicate) ]::::::::::// // [306]
                                                                 // [---][---]
                                                                 //      [175]
    FV4 GET_LA3_FV4( /////////////////////////////////////////// //      [175]
                                                                 //      [175]
        UV2 inn_u_dsc   //: INNput - u_dsc  :::::::::::::://     //      [175]
    ,   U32 inn_u_la3   //: INNput - U32 - Tile Layer    ://     //      [175]
                                                                 //      [175]
    ){ ///////////////////////////////////////////////////////// //      [175]
    #define   uv3_p2k "[OOPS_NOT_USING_THIS]"                    //      [175]
    #define       hxy "[USE:u32_h3x:u32_h3y]"                    //      [175]
    #define inn_u_gtx "[USE:u32_gtx::::::::]"                    //      [175]
    #define inn_u_gty "[USE:u32_gty::::::::]"                    //      [175]
                                                                 //      [175]
        FV4 out_fv4comp ; //: SEE[ @fv4comp@ ] ://               //      [175]
                                                                 //      [---]
        FV4 flatlay ; //: FlattenedLayer.ALL_LAYER(S)://         //      [196]
        FV4 flatcol ; //: FlattenedLayer.ONE_LAYER:::://         //      [196]
        FV4 flathue ; //: FlattenedLayer.ONE_LAYER:::://         //      [196]
        F32 flatlum ; //: FlattenedLayer.ONE_LAYER:::://         //      [196]
        F32 flatsum ; //: FlattenedLayer.NUM_LAYER(S)://         //      [196]
                                                                 //      [---]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     //      [175]
        //: NOTE :[ uv3_p2k != uv4_p2k ................ ]://     //      [175]
        //: ---- :[ uv3_p2k : 3 tiles of data ......... ]://     //      [175]
        //: ---- :[ uv4_p2k : R,G,B,A bytes of ONE TILE ]://     //      [175]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     //      [175]
                                                                 //      [175]
        UV4 uv4_p2k ;   //: One Pixel AKA One Tile   ://         //      [175]
        IV2 p2k_x_y ;   //: TextureSampleCoordinate  ://         //      [175]
        //- lat_lev ;   ::: Lateral Span Of One Level-//         // [177][175]
        U32 obi_wan ;   //: any_te7 , but off by 1   ://         // [178]
        U32 any_te7 ;   //: Looping over all sizes   ://         //      [175]
                                                                 // [---]
        U32   u_h3x ;   //: Hotel @ROD_CEL@ - X Axis     ://     //      [176][175]
        U32   u_h3y ;   //: Hotel @ROD_CEL@ - Y Axis     ://     //      [176][175]
                                                                 //      [176]
        U32   u_r5x ;   //: Room  @REN_CEL@ - X Axis     ://     //      [176][175]
        U32   u_r5y ;   //: Room  @REN_CEL@ - Y Axis     ://     //      [176][175]
        ///   u_vod ;   //: ARE_WE_IN_A_VOID_ROOM        ://     // [189][---]
                                                                 //      [176]
        U32   u_r4x ;   //: Room  @DAT_CEL@ - X Axis     ://     //      [176]
        U32   u_r4y ;   //: Room  @DAT_CEL@ - Y Axis     ://     //      [176]
        U32   u_vod ;   //: ARE_WE_IN_A_VOID_ROOM        ://     // [189][---]
                                                                 //      [176]
        //- u32_gtx ;     : Global Tile X            -//         // [176][175]
        //- u32_gty ;     : Global Tile Y            -//         // [176][175]
                                                                 //      [176]
        UV2     dhl ;   //: Discrete_Hotel_Local[X,Y]    ://     //      [176]
        UV2     dll ;   //: Discrete_Level_Local[X,Y]    ://     // [---][176]
        UV2     dtl ;   //: Discrete__Tile_Local[X,Y]    ://     // [192]
        U32   u_b_0 ;   //: Lower Bound Of : dtl's @dui@ ://     // [192]
        U32   u_b_1 ;   //: Upper Bound Of : dtl's @dui@ ://     // [192]
        U32   u_oob ;   //: Outside of tile's    [D_U_I] ://     // [192]
                                                                 // [---]
        U32   u_g25 ;   //: Grid Cell Index On 5x5   ://         //      [176]
        UV2 te7_txy[ 7 ];  //:(TileSize)===>(LocalTileXY)://     //      [176]
        U32 te7_u32[ 7 ];  //:(TileSize)===>(   BINARY  )://     // [178]
        U32 nonzero =( u_0 );                                    // [178]
                                                                 //      [176]
          u_h3x =( inn_u_dsc.x / c_duh );    //: HOTEL.X ://     //      [176]
          u_h3y =( inn_u_dsc.y / c_duh );    //: HOTEL.Y ://     //      [176]
                                                                 //      [176]
        dhl.x   =( inn_u_dsc.x - (   u_h3x * c_duh ) );          //      [176]
        dhl.y   =( inn_u_dsc.y - (   u_h3y * c_duh ) );          //      [176]
                                                                 //      [176]
          u_r5x =(       dhl.x / c_dur );    //: ROOM.X  ://     //      [176]
          u_r5y =(       dhl.y / c_dur );    //: ROOM.Y  ://     //      [176]
                                                                 //      [176]
        dll.x   =(       dhl.x - ( u_r5x * c_dur ) );            //      [176]
        dll.y   =(       dhl.y - ( u_r5y * c_dur ) );            //      [176]
                                                                 //      [176]
        u_g25 = ( u_r5x + ( u_r5y * u_5 ) );                     //      [176]
        u_r4x = ( d_g25_r4x[ u_g25 ]      );                     //      [176]
        u_r4y = ( d_g25_r4y[ u_g25 ]      );                     //      [176]
        u_vod = ( d_g25_vod[ u_g25 ]      );                     // [189][---]
                                                                 //      [176]
        #define T_O_D_O ( U32( 0 ) )                             //      [176]
                                                                 // [---]
        U32 til_san ;    //: Tile_Span_In_Discrete_Units ://     // [177]
        U32 dia_o_s ;    //: Diagonal_Off_Set(data:te7)  ://     // [177]
        U32 lat_o_s ;    //: Lateral__Off_Set(data:la3)  ://     // [177]
        U32 lat_m_x ;    //: Lateral_Multiplier - X      ://     // [177]
        U32 lat_m_y ;    //: Lateral_Multiplier - Y      ://     // [177]
                                                                 // [---][---][---]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     //           [175]
        //: Back to front render for alpha compositing ::://     //           [175]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     //           [175]
        for( obi_wan = u_7 ; obi_wan >= u_1 ; obi_wan -- ){      // [178][BUG][175]
        //:----------------------------------------------://     // [177]
        #define macrova_til_wid ( til_san ) ////////////////     // [177]
        #define macrova_til_hig ( til_san ) ////////////////     // [177]
                                                                 // [---]
            any_te7 =( obi_wan - u_1 );    //: @obi_wan@ ://     // [178]
                                                                 // [---] 
        //- lat_lev = d_te7_lat[  any_te7  ]; <-- WRONG  -//     // [---][176][175]
        //- lat_lev = d_te7_dun[  any_te7  ]; <-- FUCK.  -//     // [177][176]
                                                                 // [177]
            til_san = d_te7_dun[  any_te7  ];                    // [177]
            dia_o_s = d_te7_dia[  any_te7  ];                    // [177]
            lat_o_s = d_te7_lat[  any_te7  ];                    // [177]
            lat_m_x = d_la3_lmx[ inn_u_la3 ];                    // [177]
            lat_m_y = d_la3_lmy[ inn_u_la3 ];                    // [177]
                                                                 // [---]
            te7_txy[ any_te7 ]=UV2(                              //      [176]
                                                                 //      [176]
                ( dll.x / macrova_til_wid )  //:[til_san]://     // [177][176]
            ,   ( dll.y / macrova_til_hig )  //:[til_san]://     // [177][176]
            );;                                                  //      [176]
                                                                 //      [176]
            p2k_x_y.x=I32( u_0                                   //      [176]
                                                                 //      [176]
            +   (   u_512 *   u_h3x )                            //      [176]
            +   (   u_128 *   u_r4x )                            //      [176]
            +   ( dia_o_s +     u_0 )                            // [177][---]
            +   ( lat_o_s * lat_m_x )                            // [177][---]
            );;                                                  //      [176]
            p2k_x_y.y=I32( u_0                                   //      [176]
                                                                 //      [176]
            +   (   u_512 *   u_h3y )                            //      [176]
            +   (   u_128 *   u_r4y )                            //      [176]
            +   ( dia_o_s +     u_0 )                            // [177][---]
            +   ( lat_o_s * lat_m_y )                            // [177][---]
            );;                                                  //      [176]
                                                                 //      [176]
            //:#_ITS_THE_FINAL_OFFSET_#:[204]:---------------://
                p2k_x_y.xy =(                                    // [204][BUG][176]
                p2k_x_y.xy                                       // [204][BUG][176]
                +   IV2( te7_txy[ any_te7 ] )                    // [204][BUG][176]
                );;                                              // [204][BUG][176]
            //:---------------:#_ITS_THE_FINAL_OFFSET_#:[204]://
                                                                 // [---]
            //: LITERALLY : uv4_p2k = STF( d_p2k,p2k_x_y,0 );    // [260][175]
                    IMF_GET_UV4_P2K ;;;;;;;;;;;;;;;;;;;;;;;;;    // [260]
                                                                 // [---]
            //: ....<< 24......<< 16......<<  8......<<  0...:// // [178]
            //: [ 31 - 24 ][ 23 - 16 ][ 15 - 08 ][ 07 - 00 ] :// // [178]
            //: [ ___R___ ][ ___G___ ][ ___B___ ][ ___A___ ] :// // [178]
                                                                 // [178]
            te7_u32[ any_te7 ]=( u_0                             // [178]
            |   ( ( uv4_p2k.r & u_ff ) << 24 )                   // [178]
            |   ( ( uv4_p2k.g & u_ff ) << 16 )                   // [178]
            |   ( ( uv4_p2k.b & u_ff ) <<  8 )                   // [178]
            |   ( ( uv4_p2k.a & u_ff ) <<  0 )                   // [178]
            );;                                                  // [178]

            //:#_OOB_INSET_DEL_#:[191]:----------------------:// // [191]
                                                                 // [---]
            #define u_dui ( d_la3_dui[ inn_u_la3 ] ) /////////// // [192]
                                                                 // [192]
                //:::::::::::::::::::::::::::://                 // [192]
                //: u_b_0 == 1/7   == 1      ://                 // [192]
                //: u_b_1 == 7-1-1 == 6      ://                 // [192]
                //:                          ://                 // [192]
                //: [0][ ][ ] [ ] [ ][ ][1]  ://                 // [192]
                //:  ^  ^  ^   ^   ^  ^  ^   ://                 // [192]
                //:  0  1  2   3   4  5  6   ://                 // [192]
                //:::::::::::::::::::::::::::://                 // [192]
                                                                 // [192]
                u_b_0 =( (           u_0 ) + u_dui );            // [192]
                u_b_1 =( ( til_san - u_1 ) - u_dui );            // [192]
                                                                 // [192]
                dtl =( //: @dtl@ : Discrete_Tile_Local ://       // [192]
                                                                 // [192]
                    dll - ( te7_txy[ any_te7 ] * til_san )       // [192]
                );;                                              // [192]
                                                                 // [192]
                u_oob =(                                         // [192]
                    ( dtl.x < u_b_0 ? u_1 :                      // [192]
                      dtl.y < u_b_0 ? u_1 :                      // [192]
                      dtl.x > u_b_1 ? u_1 :                      // [192]
                      dtl.y > u_b_1 ? u_1 : u_0 ) );;            // [192]
                                                                 // [192]
                te7_u32[ any_te7 ]=(                             // [192]
                                                                 // [192]
                       ( u_1 != u_oob       )   //: QUESTION :// // [192]
                    ?  ( te7_u32[ any_te7 ] )   //: IF : YES :// // [192]
                    :  ( u_0                )   //: IF : NOT :// // [192]
                );;                                              // [192]
                                                                 // [192]
            #undef  u_dui  ///////////////////////////////////// // [192]
                                                                 // [192]
            //:----------------------:#_OOB_INSET_DEL_#:[191]:// // [191]

            nonzero =( nonzero | te7_u32[ any_te7 ] );           // [178]
                                                                 // [---]
        #undef  macrova_til_wid  ///////////////////////////     // [177]
        #undef  macrova_til_hig  ///////////////////////////     // [177]
        };;                                                      //      [175]
                                                                 // [---]
        //:#_FLATTEN_LAYER_#:[196]:--------------------------:// // [196]
        for(obi_wan = u_7 ; obi_wan >= u_1 ; obi_wan -- ){       // [196]
            any_te7 =( obi_wan - u_1 );                          // [196]
                                                                 // [196]
            //:#_FAST_FOOD_WASTE_#:[196]:----------------://     // [196]
                                                                 // [196]
                flathue =FV4(                                    // [196]
                    d_la3_f32_hue[ (u_3*inn_u_la3) + u_0 ]       // [196]
                ,   d_la3_f32_hue[ (u_3*inn_u_la3) + u_1 ]       // [196]
                ,   d_la3_f32_hue[ (u_3*inn_u_la3) + u_2 ]       // [196]
                ,   1.0                                          // [196]
                );;                                              // [196]
                flatlum =F32(                                    // [196]
                    d_la3_te7_f32_lum[                           // [196]
                        (u_7*inn_u_la3)+any_te7                  // [196]
                    ]);;                                         // [196]
                flatcol =( flathue * flatlum );                  // [196]
                                                                 // [196]
            //:----------------:#_FAST_FOOD_WASTE_#:[196]://     // [196]
            //:#_ACCUMULATOR_SECTION_#:[196]:------------://     // [196]
            if( u_0 != te7_u32[ any_te7 ] ){                     // [196]
                                                                 // [196]
                flatlay += flatcol   ;                           // [196]
                flatsum += F32( 1.0 );                           // [196]
            };;                                                  // [196]
            //:------------:#_ACCUMULATOR_SECTION_#:[196]://     // [196]
        };;                                                      // [196]
        //:#_AVERAGE_FLATLAY_OUTSIDE_OF_LOOP_#:[196]---------:// // [196]
                                                                 // [196]
            flatlay =( flatlay / flatsum );                      // [196]
                                                                 // [196]
        //:--------:#_AVERAGE_FLATLAY_OUTSIDE_OF_LOOP_#:[196]:// // [196]
        //:--------------------------:#_FLATTEN_LAYER_#:[196]:// // [196]
                                                                 // [---] 
        //:#_INVALIDATE_OUT_OF_BOUNDS_SAMPLING_#:[189]:--://     // [---]
        //:#_OOB_SAM_ALWAYS_EMPTY_#:[189]:---------------://     // [---]
                                                                 // [189]
            #define _v_ ( U32( 1 ) )                             // [189]
                                                                 // [189]
            nonzero =( _v_ == u_vod ? u_0 : nonzero );           // [189]
                                                                 // [189]
            #undef  _v_                                          // [189]
                                                                 // [189]
        //:--:#_INVALIDATE_OUT_OF_BOUNDS_SAMPLING_#:[189]://     // [---]
        //:---------------:#_OOB_SAM_ALWAYS_EMPTY_#:[189]://     // [---]

        //:#_Simple_Yes_No_For_Now_#:[178]:--------------://     // [---][178]
                                                                 // [---][178]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [196]
            //:@R_I_P@ : strobecolor , 1_7_8 - 1_9_5     ://     // [196]
            //:(R.I.P.): You were a pulsating FV4.       ://     // [196]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [196]
                                                                 // [---]
            FV4 empty_color =( FV4( 0.0 , 0.0 , 0.0 , 0.0 ) );   // [---][178]
                                                                 // [---][178]
            out_fv4comp =(( u_0 != nonzero )                     // [---][178]
                                                                 // [---][178]
                ? (     flatlay ) //: YES ://                    // [196][178]
                : ( empty_color ) //: _NO ://                    // [---][178]
            //////( 123_123_123 )///////////////////////////     // [---][178]
            );;                                                  // [---][178]
        //:--------------:#_Simple_Yes_No_For_Now_#:[178]://     // [---][178]
                                                                 // [---][---]
        return( out_fv4comp );                                   //      [175]
                                                                 //      [175]
    #undef  inn_u_gtx  ///////////////////////////////////////// //      [175]
    #undef  inn_u_gty  ///////////////////////////////////////// //      [175]
    #undef        hxy  ///////////////////////////////////////// //      [175]
    #undef    uv3_p2k  ///////////////////////////////////////// //      [175]
    } ////////////////////////////////////////////////////////// //      [175]
    void main(){  ////////////////////////////////////////////// // [---][074]
                                                                 // [---][095]
        U32  u_vod ; //: 1 === in void room.     ://             // [190]
                                                                 // [---]
        U32  u_fcx ; //: FragCoord.X             ://             // [---][095]
        U32  u_fcy ; //: FragCoord.Y             ://             // [---][095]
        UV2  u_v0l ; //: VP0 local XY Position   ://             // [---][095]
        UV2  u_mv0 ; //: Magnitude: VP0          ://             // [---][095]
        FV2  f_v0l ; //: VP0 local XY PERCENTAGE ://             // [---][095]
                                                                 // [---]
        //: #_DISCRETE_UNITS_IN_VIEWPORT_NOTE_#      ://         // [097]
                                                                 // [097]
        UV2  u_duv    ; //: DiscreteUnits:VIEWPORT   ://         // [097]
        UV2  u_dup    ; //: DiscreteUnits:PIXEL      ://         // [097]
        UV2  u_mv1    ; //: Magnitude: VP1           ://         // [097]
        UV2  u_ds0    ; //: DiscreteSample: MIN      ://         // [097]
        UV2  u_ds1    ; //: DiscreteSample: MAX      ://         // [097]
        U32  u_dsa[8] ; //: DiscreteSample: ARRAY    ://         // [097]
        UV2  u_dsc    ; //: DiscreteSample: CURRENT  ://         // [097]
        U32  u_tk4    ; //: TICK, 4 values[0,1,2,3]  ://         // [097]
                                                                 // [---]
        u_fcx = (       u_0   + U32( f_raw_fcx - 0.5 ));         // [095][089]
        u_fcy = (d_vpc[ y_1 ] - U32( f_raw_fcy - 0.5 ));         // [095][089]
                                                                 // [095]
        if( u_fcx < d_vp0[x_0]                                   // [095]
        ||  u_fcx > d_vp0[x_1]                                   // [095]
        ||  u_fcy < d_vp0[y_0]                                   // [095]
        ||  u_fcy > d_vp0[y_1]                                   // [095]
        ){                                                       // [095]
            //:#_BLACKSECTION_OF_LETTERBOX_#://                  // [095]
            out_f_c = vec4(0,0,0,1);                             // [095]
            return;                                              // [095]
        };;                                                      // [095]
        u_v0l = UV2( u_fcx-d_vp0[x_0]                            // [095]
                ,    u_fcy-d_vp0[y_0] );;                        // [095]
                                                                 
                                                                 // [095]
        u_mv0 = UV2( d_vp0[x_1]-d_vp0[x_0]+u_1                   // [095]
                ,    d_vp0[y_1]-d_vp0[y_0]+u_1 );;               // [095]
                                                                 
        //:determine_sample_point:[097]:---------------------:// // [097]
                                                                 // [097]
        //:#_MV1_IS_MAGNITUDE_OF_VP1_THE_DATA_VIEWPORT_#://      // [107]
        u_mv1 = UV2( d_vp1[x_1]-d_vp1[x_0]+u_1                   // [107][BUG][097]
                ,    d_vp1[y_1]-d_vp1[y_0]+u_1 );;               // [107][BUG][097]
                                                                 //      [097]
        u_duv = u_mv1 ; //:@SYNONYMOUS_VARIABLES@://             //      [097]
                                                                 //      [097]
    //:#u_dup#://   //:@FRAG_SHADER_MAPPING@:@FSM_000@://        // [149][097]
    //: u_dup =( DiscreteUnitSelection )/( NumPixelsOnScreen );  //      [097]
        u_dup =(         u_duv         )/(       u_mv0       );  //      [097]
                                                                 //      [097]
        u_ds0 =UV2(       //:SEE_DIAGRAM[ #_DIA_U_DS0_# ]://     //      [097]
            d_vp1[x_0]+( u_v0l.x * u_dup.x )+(         u_0 )     //      [097]
        ,   d_vp1[y_0]+( u_v0l.y * u_dup.y )+(         u_0 )     //      [097]
        );;                                                      //      [097]
        u_ds1 =UV2(       //:SEE_DIAGRAM[ #_DIA_U_DS1_# ]://     //      [097]
            d_vp1[x_0]+( u_v0l.x * u_dup.x )+( u_dup.x-u_1 )     //      [097]
        ,   d_vp1[y_0]+( u_v0l.y * u_dup.y )+( u_dup.y-u_1 )     //      [097]
        );;                                                      //      [097]
                                                                 //      [097]
        //:#_ROTATING_SAMPLE_POINT_#://                          //      [097]
                                                                 //      [097]
        u_dsa[ 0 ]= u_ds0.x ; //:[ * ][ _ ]://                   //      [097]
        u_dsa[ 1 ]= u_ds0.y ; //:[ _ ][ _ ]://                   //      [097]
                                                                 //      [097]
        u_dsa[ 2 ]= u_ds1.x ; //:[ _ ][ * ]://                   //      [097]
        u_dsa[ 3 ]= u_ds0.y ; //:[ _ ][ _ ]://                   //      [097]
                                                                 //      [097]
        u_dsa[ 4 ]= u_ds1.x ; //:[ _ ][ _ ]://                   //      [097]
        u_dsa[ 5 ]= u_ds1.y ; //:[ _ ][ * ]://                   //      [097]
                                                                 //      [097]
        u_dsa[ 6 ]= u_ds0.x ; //:[ _ ][ _ ]://                   //      [097]
        u_dsa[ 7 ]= u_ds1.y ; //:[ * ][ _ ]://                   //      [097]
                                                                 //      [097]
        u_tk4 =(d_tik-(d_tik/u_4*u_4)); //:MOD4://               //      [097]
                                                                 //      [097]
                                                                 // [099]
        //:::::::::::::::::::::::::::::::::::::::://             // [099]
        //: @u_dsc@/@dsc@ : Discrete_Sample_Point://             // [099]
        //:::::::::::::::::::::::::::::::::::::::://             // [099]
                                                                 // [099]
        u_dsc.x = u_dsa[ (u_tk4*u_2) + u_0 ];                    // [097]
        u_dsc.y = u_dsa[ (u_tk4*u_2) + u_1 ];                    // [097]
                                                                 // [097]
        //:---------------------:determine_sample_point:[097]:// // [097]
        //:use_the_sample_point:[099]:-----------------------:// // [099]
                                                                 // [099]
            //: #_DUN_NOW_TOP_LEVEL_# ://                        // [176]
                                                                 // [099]
            //::::::::::::::::::::::::::::::::::::::::::::://    // [099]
            //: @u_h03@/@h03@ : Hotel Coord X&Y [0- 2]    ://    // [099]
            //: @u_r05@/@r05@ : Room  Coord X&Y [0- 4]    ://    // [099]
            //: @u_t64@/@t64@ : Tile  Coord X&Y [0-63]    ://    // [099]
            //::::::::::::::::::::::::::::::::::::::::::::://    // [099]
                                                                 // [099]
            //::::::::::::::::::::::::::::::::::::::::::::::::// // [099]
            //: What things does the sample point belong to? :// // [099]
            //::::::::::::::::::::::::::::::::::::::::::::::::// // [099]
                                                                 // [099]
            UV2 u_h03 =( u_dsc / c_duh );   //:@TMMC@://         // [099]
            UV2 u_r05 =( u_dsc / c_dur );   //:@TMMC@://         // [099]
            UV2 u_t64 =( u_dsc / c_dut );   //:@TMMC@://         // [099]
                                                                 // [099]
            //:::::::::::::::::::::::::::::::::::://             // [099]
            //: Modulate/Wrap within Bounds      ://             // [099]
            //:::::::::::::::::::::::::::::::::::://             // [099]
                                                                 // [099]
            u_h03 =  u_h03-((u_h03 / u_3)* u_3 );//:MOD3 ://     // [099]
            u_r05 =  u_r05-((u_r05 / u_5)* u_5 );//:MOD5 ://     // [099]
            u_t64 =  u_t64-((u_t64 / u64)* u64 );//:MOD64://     // [099]
                                                                 // [099]
                                                                 // [099]
            //::::::::::::::::::::::::::::::::::::::::::::::::// // [099]
            //: Convert XY Coordinates To 1D Index Coords    :// // [099]
            //: (Not used yet, but will be used to fetch )   :// // [099]
            //: (data eventually. )                          :// // [099]
            //:... We are probably converting to 1D TOO SOON :// // [099]
            //:... and these calculations will get scrapped. :// // [099]
            //::::::::::::::::::::::::::::::::::::::::::::::::// // [099]
                                                                 // [---]
            U32 h09 ; //: @h09@ : Hotel Cell ( 0 to (9-1) )  :// // [190](099)
            U32 g25 ; //: @g25@ : GridOverlayCell #_AKA_R25_#:// // [190](099)
            U32 t4k ; //: @t4k@ : Tile1DCoord  SEE[ #_T4K_# ]:// // [190](099)
                                                                 // [190]
            h09 = u_h03.x + ( u_h03.y * u_3 ) ;                  // [190][099]
            g25 = u_r05.x + ( u_r05.y * u_5 ) ;                  // [190][099]
            t4k = u_t64.x + ( u_t64.y * u64 ) ;                  // [190][099]
                                                                 // [---]
            //::::::::::::::::::::::::::::::::::::::::::::::::// // [099]
            //: #_BRANCHLESS_CHECKERBOARD_#                  :// // [099]
            //::::::::::::::::::::::::::::::::::::::::::::::::// // [099]
                                                                 // [099]
            //::::::::::::::::::::::::::::::::::::::::::::://    // [099]
            //: @i_h02@/@h02@ : Hotel Coord As [ 0 || 1 ] ://    // [099]
            //: @i_r02@/@r02@ : Room  Coord As [ 0 || 1 ] ://    // [099]
            //: @i_t02@/@t02@ : Tile  Coord As [ 0 || 1 ] ://    // [099]
            //::::::::::::::::::::::::::::::::::::::::::::://    // [099]
                                                                 // [099]
            I32 i_h02 =abs(                                      // [099]
                I32( u_h03.x -(( u_h03.x / u_2)*u_2)) //:MOD2:// // [099]
            -   I32( u_h03.y -(( u_h03.y / u_2)*u_2)) //:MOD2:// // [099]
            );;                                                  // [099]
            I32 i_r02 =abs(                                      // [099]
                I32( u_r05.x -(( u_r05.x / u_2)*u_2)) //:MOD2:// // [099]
            -   I32( u_r05.y -(( u_r05.y / u_2)*u_2)) //:MOD2:// // [099]
            );;                                                  // [099]
            I32 i_t02 =abs(                                      // [099]
                I32( u_t64.x -(( u_t64.x / u_2)*u_2)) //:MOD2:// // [099]
            -   I32( u_t64.y -(( u_t64.y / u_2)*u_2)) //:MOD2:// // [099]
            );;                                                  // [099]
                                                                 // [099]
            out_f_c =FV4(                                        // [099]
                                                                 // [099]
                F32(   F32( i_255 * i_h02 ) / f_255 )            // [099]
            ,   F32(   F32( i_255 * i_r02 ) / f_255 )            // [099]
            ,   F32(   F32( i_255 * i_t02 ) / f_255 )            // [099]
            ,   1.0                                              // [099]
            );;                                                  // [099]
                                                                 // [---]
            //:#_BLACKEN_THE_VOIDS_#:[190]:--------------://     // [---]
                                                                 // [190]
            #define _r_ ( 0.1  ) ////// #_DARK_RED_VOID_# //     // [190]
            #define _v_ U32( 1 ) ///////////////////////////     // [190]
            #define vod FV4( _r_ , 0.0 , 0.0 , 1.0 ) ///////     // [190]
                                                                 // [190]
                u_vod = d_g25_vod[ g25 ]; //:#_AKA_R25_#://      // [190]
                                                                 // [190]
                out_f_c = ( _v_ == u_vod ? vod : out_f_c );      // [190]
                                                                 // [190]
            #undef  _r_  ///////////////////////////////////     // [190]
            #undef  _v_  ///////////////////////////////////     // [190]
            #undef  vod  ///////////////////////////////////     // [190]
            //:--------------:#_BLACKEN_THE_VOIDS_#:[190]://     // [---]
                                                                 // [---]
            //: #_OUT_OF_BOUNDS_DIAGNOSIS_#://                   // [106]
            if( u_dsc.x > ( c_dum - u_1 )                        // [106]
            ||  u_dsc.y > ( c_dum - u_1 )                        // [106]
            ){                                                   // [106]
                out_f_c.x /= 4.0 ;                               // [106]
                out_f_c.y /= 4.0 ;                               // [106]
                out_f_c.z /= 4.0 ;                               // [106]
            };;                                                  // [106]
                                                                 
            //:#_CAMERA_STRESS_FEEDBACK_#:---------------://     // [---][122]
                                                                 // [---][122]
            #define c_w     d_camwall                            // [---][122]
            #define e_lef ( c_w[ x_0 ] /**#_NOW_MAG_#**/ )       // [124][122]
            #define e_top ( c_w[ y_0 ] /**#_NOW_MAG_#**/ )       // [124][122]
            #define e_rig ( c_w[ x_1 ] /**#_NOW_MAG_#**/ )       // [124][122]
            #define e_bot ( c_w[ y_1 ] /**#_NOW_MAG_#**/ )       // [124][122]
                                                                 // [124]
                /** @u_c_m@ : U32 d_camwall [MPV]        **/     // [124]
                /** @f_c_m@ : F32 d_camwall [MPV]        **/     // [124]
                /** @f_lef@ : F32 Edge Thickness - LEFT  **/     // [124]
                /** @f_top@ : F32 Edge Thickness - TOP   **/     // [124]
                /** @f_rig@ : F32 Edge Thickness - RIGHT **/     // [124]
                /** @f_bot@ : F32 Edge Thickness - BOTTOM**/     // [124]
                                                                 // [124]
                U32 u_c_m =( c_dum / u_2 ); /**#FIX_002#**/      // [124][FIX][124]
                F32 f_c_m =F32(   u_c_m  );                      // [124]
                F32 f_lef =( F32(e_lef) / f_c_m );               // [124]
                F32 f_top =( F32(e_top) / f_c_m );               // [124]
                F32 f_rig =( F32(e_rig) / f_c_m );               // [124]
                F32 f_bot =( F32(e_bot) / f_c_m );               // [124]
                                                                 
                //:!!!!!!:#_VP1_IS_NOT_ON_SCREEN_#:!!!!!!://     // [134]
                                                                 // [134]
                #define f_vp1_wid_haf "[BAD:#VP1_NOT_VPC#]"      // [134]
                #define f_vp1_hig_haf "[BAD:#VP1_NOT_VPC#]"      // [134]
                                                                 
                                                                 //      [124]
                F32 f_vp0_wid_haf =(    //:#VP0_NOT_VPC#://      // [134][124]
                                        //:#VP0_NOT_VP1#://      // [134][124]
                    F32( d_vp0[ x_1 ] - d_vp0[ x_0 ] + u_1 )     // [134][124]
                    /                                            //      [124]
                    f_2                                          //      [124]
                );;                                              //      [124]
                F32 f_vp0_hig_haf =(    //:#VP0_NOT_VPC#://      // [134][124]
                                        //:#VP0_NOT_VP1#://      // [134][124]
                    F32( d_vp0[ y_1 ] - d_vp0[ y_0 ] + u_1 )     // [134][124]
                    /                                            //      [124]
                    f_2                                          //      [124]
                );;                                              //      [124]
                                                                 //      [124]
                #define f_w_h ( f_vp0_wid_haf )                  // [134][124]
                #define f_h_h ( f_vp0_hig_haf )                  // [134][124]
                         //://///////////////////////////://     //      [124]
                         //: +---[ #VP0_NOT_VPC# ]       ://     // [134][124]
                         //: |                           ://     //      [124]
                         //: V                           ://     //      [124]
                U32 u_lef =d_vp0[x_0]+U32(f_lef*(f_w_h))-u_1;    // [134][124]
                U32 u_top =d_vp0[y_0]+U32(f_top*(f_h_h))-u_1;    // [134][124]
                U32 u_rig =d_vp0[x_1]-U32(f_rig*(f_w_h))+u_1;    // [134][124]
                U32 u_bot =d_vp0[y_1]-U32(f_bot*(f_h_h))+u_1;    // [134][124]
                         //: ^                           ://     //      [124]
                         //: |                           ://     //      [124]
                         //: +---[ #VP0_NOT_VPC# ]       ://     // [134][124]
                         //://///////////////////////////://     //      [124]
                #undef  f_w_h                                    //      [124]
                #undef  f_h_h                                    //      [124]
                                                                 // [---]
                U32 u_wal =( u_0 );                              //      [122]
                                                                 //      [122]
                if( d_camwall[ x_0 ] > u_0 ){                    //      [122]
                                                                 //      [122]
                    if( u_fcx <= u_lef ){ //:@edg_lef@://        //      [122]
                                                                 //      [122]
                        u_wal =( u_1 );                          // [124][122]
                    };;                                          //      [122]
                };;                                              //      [122]
                if( d_camwall[ x_1 ] > u_0 ){                    //      [122]
                                                                 //      [122]
                    if( u_fcx >= u_rig ){ //:@edg_rig@://        //      [122]
                                                                 //      [122]
                        u_wal =( u_2 );                          // [124][122]
                    };;                                          //      [122]
                };;                                              //      [122]
                if( d_camwall[ y_0 ] > u_0 ){                    //      [122]
                                                                 //      [122]
                    if( u_fcy <= u_top ){ //:@edg_top@://        //      [122]
                                                                 //      [122]
                        u_wal =( u_3 );                          // [124][122]
                    };;                                          //      [122]
                                                                 //      [122]
                };;                                              //      [122]
                if( d_camwall[ y_1 ] > u_0 ){                    //      [122]
                                                                 //      [122]
                    if( u_fcy >= u_bot ){ //:@edg_bot@://        //      [122]
                                                                 //      [122]
                        u_wal =( u_4 );                          // [124][122]
                    };;                                          //      [122]
                };;                                              //      [122]
                                                                 //      [122]
                if( u_wal >= u_1 ){                              //      [122]
                                                                 // [---][---]
                    //:#_MONOCHROME_STRESS_#:------------://     //      [123]
                                                                 //      [123]
                    F32 lum =( out_f_c.r                         //      [123]
                             + out_f_c.g                         //      [123]
                             + out_f_c.b                         //      [123]
                             ) / ( 3.0 );;                       //      [123]
                                                                 //      [---]
                                                                 
                        out_f_c.r =( lum );                      // [134]
                        out_f_c.g =( 0.0 );                      // [134]
                        out_f_c.b =( 0.0 );                      // [134]
                                                                 
                        #ifdef DIFFERENT_EDGE_COLORS_YEAH        // [134]
                            if( u_1 == u_wal ){                  // [134][124][---]
                                out_f_c.r =( lum );              // [134][124][123]
                                out_f_c.g =( 0.0 );              // [134][124][123]
                                out_f_c.b =( 0.0 );              // [134][124][123]
                            };;                                  // [134][124]
                            if( u_2 == u_wal ){                  // [134][124]
                                out_f_c.r =( 0.0 );              // [134][124]
                                out_f_c.g =( lum );              // [134][124]
                                out_f_c.b =( 0.0 );              // [134][124]
                            };;                                  // [134][124]
                            if( u_3 == u_wal ){                  // [134][124]
                                out_f_c.r =( 0.0 );              // [134][124]
                                out_f_c.g =( 0.0 );              // [134][124]
                                out_f_c.b =( lum );              // [134][124]
                            };;                                  // [134][124]
                            if( u_4 == u_wal ){                  // [134][124]
                                out_f_c.r =( lum );              // [134][124]
                                out_f_c.g =( lum );              // [134][124]
                                out_f_c.b =( lum );              // [134][124]
                            };;                                  // [134][124]
                        #endif                                   // [134]
                                                                 // [---][123]
                    //:------------:#_MONOCHROME_STRESS_#://     // [---][123]
                                                                 // [---]
                };;                                              // [122]
                                                                 // [122]
            #undef  c_w    //:---------------------------://     // [122]
            #undef  e_lef  //:---------------------------://     // [122]
            #undef  e_top  //:---------------------------://     // [122]
            #undef  e_rig  //:---------------------------://     // [122]
            #undef  e_bot  //:---------------------------://     // [122]
            //:---------------:#_CAMERA_STRESS_FEEDBACK_#://     // [122]
            //:#_draw_tile_2022_08_22_#:[178]:-----------://     // [---]
            #define G GET_LA3_FV4    //:[GET_GEO_BOM_FAD]://     //      [178]
                                                                 //      [178]
                FV4 f_geo = G( u_dsc , u_0 );  //:@f_geo@://     //      [178]
                FV4 f_bom = G( u_dsc , u_1 );  //:@f_bom@://     //      [178]
                FV4 f_fad = G( u_dsc , u_2 );  //:@f_fad@://     //      [178]
                                                                 // [---]
                //:#_COMPOSITE_GBF_LAYERS_#:[179]:-------://     // [179]
                                                                 // [---]
                    if( f_0 != f_geo.a  //:#_ALPHAGAURD_#://     // [---][179]
                    ||  f_0 != f_bom.a  //:#_ALPHAGAURD_#://     // [---][179]
                    ||  f_0 != f_fad.a  //:#_ALPHAGAURD_#://     // [---][179]
                    ){                                           // [---][179]
                    #define o out_f_c   ////////////////////     // [198][---]
                                                                 // [198][---]
                        F32 b_g_a ; //:background_alpha://       // [198][---]
                        F32 f_g_a ; //:foreground_alpha://       // [198][---]
                                                                 // [198][---]
                    //:#_B_G_GEOM_#://                           // [198][---]
                                                                 // [198][---]
                        b_g_a =( f_1 - f_geo.a );                // [198][---]
                        f_g_a =( f_0 + f_geo.a );                // [198][---]
                        o=FV4(                                   // [198][---]
                            ( o.r * b_g_a )+( f_geo.r * f_g_a )  // [198][---]
                        ,   ( o.g * b_g_a )+( f_geo.g * f_g_a )  // [198][---]
                        ,   ( o.b * b_g_a )+( f_geo.b * f_g_a )  // [198][---]
                        ,             max(o.a,f_geo.a)           // [198][---]
                        );;                                      // [198][---]
                                                                 // [198][---]
                    //:#_M_G_BOMB_#://                           // [198][---]
                                                                 // [198][---]
                        b_g_a =( f_1 - f_bom.a );                // [198][---]
                        f_g_a =( f_0 + f_bom.a );                // [198][---]
                        o=FV4(                                   // [198][---]
                            ( o.r * b_g_a )+( f_bom.r * f_g_a )  // [198][---]
                        ,   ( o.g * b_g_a )+( f_bom.g * f_g_a )  // [198][---]
                        ,   ( o.b * b_g_a )+( f_bom.b * f_g_a )  // [198][---]
                        ,             max(o.a,f_bom.a)           // [198][---]
                        );;                                      // [198][---]
                                                                 // [198][---]
                    //:#_F_G_FADA_#://                           // [198][---]
                                                                 // [198][---]
                        b_g_a =( f_1 - f_fad.a );                // [198][---]
                        f_g_a =( f_0 + f_fad.a );                // [198][---]
                        o=FV4(                                   // [198][---]
                            ( o.r * b_g_a )+( f_fad.r * f_g_a )  // [198][---]
                        ,   ( o.g * b_g_a )+( f_fad.g * f_g_a )  // [198][---]
                        ,   ( o.b * b_g_a )+( f_fad.b * f_g_a )  // [198][---]
                        ,             max(o.a,f_fad.a)           // [198][---]
                        );;                                      // [198][---]
                                                                 // [198][---]
                    #undef  o  /////////////////////////////     // [198][---]
                    };; //:::::::::::::[ #_ALPHAGAURD_# ]://     // [---][179]
                                                                 // [---]
                //:-------:#_COMPOSITE_GBF_LAYERS_#:[179]://     // [---]
                                                                 // [---]
            #undef  G    //:::::::::::::[GET_GEO_BOM_FAD]://     // [178]
            //:-----------:#_draw_tile_2022_08_22_#:[178]://     // [178]
            //:Active_Tile_Highlight:[155]:--------------://     // [---]
            {                                                    // [---][155]
                U32 u_dunspan =( d_te7_dun[ d_te7 ] );           //      [155]
                U32 gtx = u_dsc.x / u_dunspan ;                  //      [155]
                U32 gty = u_dsc.y / u_dunspan ;                  //      [155]
                                                                 //      [155]
                if( d_gtx == gtx                                 // [157][155]
                &&  d_gty == gty                                 // [157][155]
                ){                                               //      [155]
                    out_f_c.r =( 1.0 );                          //      [155]
                    out_f_c.g =( out_f_c.g / 4.0 );              //      [155]
                    out_f_c.b =( out_f_c.b / 4.0 );              //      [155]
                };;                                              //      [155]
            }                                                    // [---][155]
            //:--------------:Active_Tile_Highlight:[155]://     // [---]
            //:cursor_dot:[147]:-------------------------://     // [---][---]
            if( 1 != 1                                           //      [147]
            || abs( I32( u_dsc.x ) - I32( d_dmx ) ) < 256        // [157][149][147]
            || abs( I32( u_dsc.y ) - I32( d_dmy ) ) < 256        // [157][149][147]
            ){                                                   //      [147]
                out_f_c.r =( 1.0             );                  //      [147]
                out_f_c.g =( 1.0 - out_f_c.g );                  //      [147]
                out_f_c.b =( 1.0 - out_f_c.b );                  //      [147]
            };;                                                  //      [147]
            //:-------------------------:cursor_dot:[147]://     // [---]
                                                                 // [---]
        //:-----------------------:use_the_sample_point:[099]:// // [099]
                                                                 // [---]
                                                                 // [095]
    }   //////////////////////////////////////////////////////// // [074]                                                       
                                                                 // [---]
`));; //////////////////////////////////////////////////////////    [069]
const d_artgirl_ssf_006 =( //: ShaderSourceFrag #06@ssf@[069]://    [070][069]
////////////////////////////////////////////////////////////////    [069]
(c_artgirl_wgl_tag+`                                             // [074]   
                                                                 // [---]
    //: FRAG_SHADER_STR[ d_artgirl_ssf_006 ] ://                 // [081]
    //: FRAG_SHADER_ENU[ c_artgirl_ren_006 ] ://                 // [081] 
                                                                 // [---]
    ${d_artgirl_crazybi} //:@Crazy_Bitch_Macros@:::::::::://     // [283]
    ${d_artgirl_use}     //:Conditional_Compilation :::::://     // [263]
    ${d_artgirl_smacros} //:@smacros@:ShaderMacros  :::::://     // [251](250)
    ${d_artgirl_shadlut} //:Shader Lookup Tables    :::::://     // [253]
    ${d_artgirl_uniform} //:ArtGirl Uniforms        :::::://     // [251]
    ${d_artgirl_imf}     //:@imf@:Inlined_Macro_Functions://     // [260]
                                                                 // [251]
    precision mediump float ;                                    // [074]
                                                                 // [---]
    in  FV2  i_o_tex ; //: @i_o_tex@ ://                         // [251][074]
    out FV4    f_out ; //:   @f_out@ ://                         // [251][074]
                                                                 // [---]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [270]
    //: All Top Level Lookup Tables Should Be In         ://     // [270]
    //: [ d_artgirl_shadlut ] , not directly here .      ://     // [270]
    //: [ d_fourset_la3_v16_f16_u25clus ]was moved there.://     // [270]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [270]
                                                                 // [---]
    void main(){    //////////////////////////////////////////// // [251]

        FV4 f_stg =FV4(0,0,0,0); //:SEE[#_STG__DIAGRAM_#]://     // [264]

        FV4 f_geo =FV4(0,0,0,0); //: @f_geo@ : FINAL_GEO ://     // [262]
        FV4 f_bom =FV4(0,0,0,0); //: @f_bom@ : FINAL_BOM ://     // [262]
        FV4 f_fad =FV4(0,0,0,0); //: @f_fad@ : FINAL_FAD ://     // [262]

                                                                 // [251]
        UV2 ufc =UV2(   ////////////////////////////////////     // [251]
                                                        ////     // [251]
            //: @ufc@ :[ u_fcx , u_fcy ] ://            ////     // [251]
            //: @ufc@ :Uint_Frag_Coord   ://            ////     // [251]
                                                        ////     // [251]
            (       u_0   + U32(f_raw_fcx - 0.5))       ////     // [251](095)(089)
        ,   (d_vpc[ y_1 ] - U32(f_raw_fcy - 0.5))       ////     // [251](095)(089)
        );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [251]
                                                                 // [---]
        //:#_LPC_LOCAL_PERCENT_COORD_#:[252]:------------://     // [---]
                                                                 // [252]
            FV2 lpc = FV2(  //: SEE[#_LPC_EXAMPLE_MATH_#]://     // [252]
                                                                 // [252]
                F32( ufc.x        - d_vp0[ x_0 ] )               // [252]
              / F32( d_vp0[ x_1 ] - d_vp0[ x_0 ] )               // [252]
            ,                                                    // [252]
                F32( ufc.y        - d_vp0[ y_0 ] )               // [252]
              / F32( d_vp0[ y_1 ] - d_vp0[ y_0 ] )               // [252]
            );;                                                  // [252]
        //:------------:#_LPC_LOCAL_PERCENT_COORD_#:[252]://     // [---]
        //:#_DUG_DISCRETE_UNIT_GLOBAL_#:[253]:-----------://     // [---]
                                                                 // [253]
            #define DLM_X F32( d_vp1[ x_1 ] - d_vp1[ x_0 ] )     // [253]
            #define DLM_Y F32( d_vp1[ y_1 ] - d_vp1[ y_0 ] )     // [253]
                                                                 // [253]
            UV2 dug = UV2(                                       // [253]
                d_vp1[ x_0 ]+U32( lpc.x * DLM_X )  //:@DLM_X@:// // [253]
            ,   d_vp1[ y_0 ]+U32( lpc.y * DLM_Y )  //:@DLM_Y@:// // [253]
            );;                                                  // [253]
                                                                 // [253]
        //:-----------:#_DUG_DISCRETE_UNIT_GLOBAL_#:[253]://     // [253]
        //:#_GEOMETRIC_ELEMENT_COORDS_#:[253]:-----------://     // [---]
        #define G   gt8_gec  ///////////////////////////////     // [254]
        #define O   cut_off  ///////////////////////////////     // [254]
        #define D d_gt8_dus  ///////////////////////////////     // [254]
                                                                 // [254]
            #define te7_txy "[USE:gt8_gec:((gt8)==>(gec))]"      // [254]
            #define te7_gec "[USE:gt8_gec:((gt8)==>(gec))]"      // [254]
            #define te7_til "[USE:gt8_gec:((gt8)==>(gec))]"      // [254]
                                                                 // [254]
            UV2 gt8_gec[ 8 ];                                    // [254]
            UV2 cut_off=UV2( 0 , 0 );                            // [254]
                                                                 // [254]
            //:#_GEOELM_WIDDLE_DOWN_#:[254]:=============://     // [254]
                                                                 // [254]
                //:@DIAGRAM_MATH@[ #_DIA_GWD_# ]:::::::::://     // [254]
                                                                 // [254]
            G[ 0 ]=(( dug-O ) / D[ 0 ]); O+=(G[ 0 ]*D[ 0 ]);     // [257][BUG][254]
            G[ 1 ]=(( dug-O ) / D[ 1 ]); O+=(G[ 1 ]*D[ 1 ]);     // [257][BUG][254]
            G[ 2 ]=(( dug-O ) / D[ 2 ]); O+=(G[ 2 ]*D[ 2 ]);     // [257][BUG][254]
            G[ 3 ]=(( dug-O ) / D[ 3 ]); O+=(G[ 3 ]*D[ 3 ]);     // [257][BUG][254]
            G[ 4 ]=(( dug-O ) / D[ 4 ]); O+=(G[ 4 ]*D[ 4 ]);     // [257][BUG][254]
            G[ 5 ]=(( dug-O ) / D[ 5 ]); O+=(G[ 5 ]*D[ 5 ]);     // [257][BUG][254]
            G[ 6 ]=(( dug-O ) / D[ 6 ]); O+=(G[ 6 ]*D[ 6 ]);     // [257][BUG][254]
            G[ 7 ]=(( dug-O ) / D[ 7 ]); O+=(G[ 7 ]*D[ 7 ]);     // [257][BUG][254]
                                                                 // [254]
            //:=============:#_GEOELM_WIDDLE_DOWN_#:[254]://     // [254]
                                                                 // [254]
        #undef  G  /////////////////////////////////////////     // [254]
        #undef  O  /////////////////////////////////////////     // [254]
        #undef  D  /////////////////////////////////////////     // [254]
        //:-----------:#_GEOMETRIC_ELEMENT_COORDS_#:[253]://     // [---]  
        //:#_BINARY_SMASH_COORDS_#:[255]:----------------://     // [255]
                                                                 // [255]
        #define G   gt8_gec  ///////////////////////////////     // [255]
                                                                 // [255]
            //:    RELATED[ #_DIA_GWD_# ]://                     // [255]
            //:SEE_DIAGRAM[ #_DIA_BSC_# ]://                     // [255]
                                                                 // [255]
            UV2 bsc = UV2( 0 , 0 ); //:<--StartsAs[01x01]ADDR:// // [255]
                                                                 // [255]
                //: Largest Tile Size Has No Bits ::::::01x01:// // [255]
                                                                 // [255]
                bsc.x =( bsc.x | ( G[2].x << 5 ) );  //:02x02:// // [255]
                bsc.y =( bsc.y | ( G[2].y << 5 ) );              // [255]
                                                                 // [255]
                bsc.x =( bsc.x | ( G[3].x << 4 ) );  //:04x04:// // [255]
                bsc.y =( bsc.y | ( G[3].y << 4 ) );              // [255]
                                                                 // [255]
                bsc.x =( bsc.x | ( G[4].x << 3 ) );  //:08x08:// // [255]
                bsc.y =( bsc.y | ( G[4].y << 3 ) );              // [255]
                                                                 // [255]
                bsc.x =( bsc.x | ( G[5].x << 2 ) );  //:16x16:// // [255]
                bsc.y =( bsc.y | ( G[5].y << 2 ) );              // [255]
                                                                 // [255]
                bsc.x =( bsc.x | ( G[6].x << 1 ) );  //:32x32:// // [255]
                bsc.y =( bsc.y | ( G[6].y << 1 ) );              // [255]
                                                                 // [255]
                bsc.x =( bsc.x | ( G[7].x << 0 ) );  //:64x64:// // [255]
                bsc.y =( bsc.y | ( G[7].y << 0 ) );              // [255]
                                                                 // [255]
                                                                 // [255]
        #undef  G  /////////////////////////////////////////     // [255]
        //:----------------:#_BINARY_SMASH_COORDS_#:[255]://     // [---]
        //:#_LIC_THE_BATHROOM_FLOOR_TILE_#:[256]:--------://     // [256]
        //:                                              ://     // [256]
        //:__________@IMP_DIA@[_LEGO__STUD_]P_1__________://     // [256]
        //:                                              ://     // [256]
        //:- - - - - - - - - - - -- - - - - - - - - - - -://     // [256]
        #define GEC_3X3   gt8_gec  //:@GEC_3X3@ [0| 1 |2]://     // [256]
        #define GEC_5X5   gt8_gec  //:@GEC_5X5@ [0|...|4]://     // [256]
                                                                 // [256]
            //:@te7_dil@:(te7)===>(discreteInternalLocal)://     // [256]
                                                                 // [256]
            UV2 te7_dil[ 7 ];                                    // [256]
                                                                 // [256]
            UV2 dhl ; //: @dhl@ : Discrete_Hotel_Local ://       // [256]
            UV2 dll ; //: @dll@ : Discrete_Level_Local ://       // [256]
                                                                 // [256]
            dhl =( dug -( c_duh * GEC_3X3[ c_gt0 ] ) );          // [256]
            dll =( dhl -( c_dur * GEC_5X5[ c_gt1 ] ) );          // [256]
                                                                 // [256]
            te7_dil[ 6 ] = dll ;  //:BiggestTile===LevelSized:// // [256]
                                             //:@01_X_01@://     // [256]
                                                                 // [256]
            te7_dil[ 5 ] = UV2(              //:@02_X_02@://     // [256]
                        dll.x -(( bsc.x >> 5 )*c_du5)            // [256]  
            ,           dll.y -(( bsc.y >> 5 )*c_du5)            // [256]  
            );;                                                  // [256]
            te7_dil[ 4 ] = UV2(              //:@04_X_04@://     // [256]
                        dll.x -(( bsc.x >> 4 )*c_du4)            // [256]
            ,           dll.y -(( bsc.y >> 4 )*c_du4)            // [256]
            );;                                                  // [256]
            te7_dil[ 3 ] = UV2(              //:@08_X_08@://     // [256]
                        dll.x -(( bsc.x >> 3 )*c_du3)            // [256]
            ,           dll.y -(( bsc.y >> 3 )*c_du3)            // [256]
            );;                                                  // [256]
            te7_dil[ 2 ] = UV2(              //:@16_X_16@://     // [256]
                        dll.x -(( bsc.x >> 2 )*c_du2)            // [256]
            ,           dll.y -(( bsc.y >> 2 )*c_du2)            // [256]
            );;                                                  // [256]
            te7_dil[ 1 ] = UV2(              //:@32_X_32@://     // [256]
                        dll.x -(( bsc.x >> 1 )*c_du1)            // [256]
            ,           dll.y -(( bsc.y >> 1 )*c_du1)            // [256]
            );;                                                  // [256]
            te7_dil[ 0 ] = UV2(              //:@64_X_64@://     // [256]
                        dll.x -(( bsc.x >> 0 )*c_du0)            // [256]
            ,           dll.y -(( bsc.y >> 0 )*c_du0)            // [256]
            );;                                                  // [256]
                                                                 // [256]
        #undef  GEC_5X5 ////////////////////////////////////     // [256]
        #undef  GET_3X3 ////////////////////////////////////     // [256]
        //:--------:#_LIC_THE_BATHROOM_FLOOR_TILE_#:[256]://     // [256]
        //:#_BATHROOM_TILE_GROUT_#:[256]:----------------://     // [256]
        //:                                              ://     // [256]
        //:__________@IMP_DIA@[_LEGO__STUD_]P_2__________://     // [256]
        //:                                              ://     // [256]
        //:- - - - - - - - - - - -- - - - - - - - - - - -://     // [256]
                                                                 // [257]
            UV2 dup =UV2( //:dup == data_pix / screen_pix://     // [257]
                                                                 // [257]
                U32( d_vp1[ x_1 ] - d_vp1[ x_0 ] +u_1 )          // [257]
            /   U32( d_vp0[ x_1 ] - d_vp0[ x_0 ] +u_1 )          // [257]
            ,                                                    // [257]
                U32( d_vp1[ y_1 ] - d_vp1[ y_0 ] +u_1 )          // [257]
            /   U32( d_vp0[ y_1 ] - d_vp0[ y_0 ] +u_1 )          // [257]
            );;                                                  // [257]
                                                                 // [257]
        //:----------------:#_BATHROOM_TILE_GROUT_#:[256]://     // [256]
        //:#_BATHROOM_TILE_SNAP_GRID_#:[256]:------------://     // [256]
        //:                                              ://     // [256]
        //:__________@IMP_DIA@[_LEGO__STUD_]P_3__________://     // [256]
        //:                                              ://     // [256]
        //:- - - - - - - - - - - -- - - - - - - - - - - -://     // [256]
        #define T7D te7_dil                /////////////////     // [257]
        #define   F    vec2  //:[fvec2]:// /////////////////     // [257]
        #define   I   (u_dud*U32(3))       //:#_ITM_003_#://     // [258]
        #define  I2   (    I*U32(2))       //: @FIX_004@ ://     // [262][-------------]
        #define  M6 ( F32( c_du6 - u_1 - I2) )   ///////////     // [262][BUG][258][257]
        #define  M5 ( F32( c_du5 - u_1 - I2) )   ///////////     // [262][BUG][258][257]
        #define  M4 ( F32( c_du4 - u_1 - I2) )   ///////////     // [262][BUG][258][257]
        #define  M3 ( F32( c_du3 - u_1 - I2) )   ///////////     // [262][BUG][258][257]
        #define  M2 ( F32( c_du2 - u_1 - I2) )   ///////////     // [262][BUG][258][257]
        #define  M1 ( F32( c_du1 - u_1 - I2) )   ///////////     // [262][BUG][258][257]
        #define  M0 ( F32( c_du0 - u_1 - I2) )   ///////////     // [262][BUG][258][257]
                                                                 // [257]
            U32   u_dud =( ((dup.x+dup.y)/u_2) );                // [257]
            FV2   f_pil =FV2( 0,0 ); //:@f_pil@://               // [257]
                                                                 // [---]
            //:#_INSET_TILE_MATH_#:[258]:----------------://     // [258]
                                                                 // [---]       
            #define T c_du0 //// T==Threshold   ////////////     // [257]
            #define D u_dud //// D==Density     ////////////     // [258]
                                                                 // [---]
                f_pil = D*u_02 >= T ? ( F(T7D[ 6 ]-I) / M6 )     // [262][BUG][258][257]
                      : D*u_04 >= T ? ( F(T7D[ 5 ]-I) / M5 )     // [262][BUG][258][257]
                      : D*u_08 >= T ? ( F(T7D[ 4 ]-I) / M4 )     // [262][BUG][258][257]
                      : D*u_16 >= T ? ( F(T7D[ 3 ]-I) / M3 )     // [262][BUG][258][257]
                      : D*u_32 >= T ? ( F(T7D[ 2 ]-I) / M2 )     // [262][BUG][258][257]
                      : D*u_64 >= T ? ( F(T7D[ 1 ]-I) / M1 )     // [262][BUG][258][257]
                      :               ( F(T7D[ 0 ]-I) / M0 )     // [262][BUG][258][257]
                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [257]
                                                                 // [257]
            #undef  T   ////////////////////////////////////     // [257]
            #undef  D   ////////////////////////////////////     // [258]
                                                                 // [---]
            //:----------------:#_INSET_TILE_MATH_#:[258]://     // [258]
                                                                 // [---]
        #undef  T7D  ///////////////////////////////////////     // [257]
        #undef    F  ///////////////////////////////////////     // [257]
        #undef    I  ///////////////////////////////////////     // [258]
        #undef   I2  ///////////////////////////////////////     // [262]
        #undef   M6  ///////////////////////////////////////     // [257]
        #undef   M5  ///////////////////////////////////////     // [257]
        #undef   M4  ///////////////////////////////////////     // [257]
        #undef   M3  ///////////////////////////////////////     // [257]
        #undef   M2  ///////////////////////////////////////     // [257]
        #undef   M1  ///////////////////////////////////////     // [257]
        #undef   M0  ///////////////////////////////////////     // [257]
        //:------------:#_BATHROOM_TILE_SNAP_GRID_#:[256]://     // [256]
        //:#_GROUTED_INSET_TILE_#:[258]:-----------------://     // [258]
        #define P ( f_pil ) ////////////////////////////////     // [258]
                                                                 // [258]
            F32 f_git ; //:@git@:GroutedInsetTile://             // [258]
                                                                 // [258]
            P = P * 2.0 ;    //:@BEND_BACK_INTO_YOURSELF@://     // [258]
            if( P.x > 1.0 ){ P.x=1.0-(P.x-1.0); };               // [258]
            if( P.y > 1.0 ){ P.y=1.0-(P.y-1.0); };               // [258]
                                                                 // [258]
            f_git =(  min( P.x , P.y   ) ); //:@DIAGRAD@://      // [258]
            f_git =( step( 0.0 , f_git ) ); //:@FLATGRAD@://     // [258]
                                                                 // [258]
        #undef  P  /////////////////////////////////////////     // [258]
        //:-----------------:#_GROUTED_INSET_TILE_#:[258]://     // [258]
        //:#_GET_GEOM_TILE_AND_FRIENDS_#:[259]:----------://     // [259]
        //:                                              ://     // [259]
        //:  @d_p2k@   : Sampler   ,   samples d_pix2048 ://     // [259]
        //:  @p2k_x_y@ : XY Sample Coord Into  d_pix2048 ://     // [259]
        //:  @uv4_p2k@ : The RGBA data from    d_pix2048 ://     // [259]
        //:                                              ://     // [259]
        //:- - - - - - - - - - - -- - - - - - - - - - - -://     // [259]
        #define  H3X ( gt8_gec[ 0 ].x )    /////////////////     // [259]
        #define  H3Y ( gt8_gec[ 0 ].y )    /////////////////     // [259]
        #define  HXY ( gt8_gec[ 0 ]   )    /////////////////     // [259]
        #define  R5X ( gt8_gec[ 1 ].x )    /////////////////     // [259]
        #define  R5Y ( gt8_gec[ 1 ].y )    /////////////////     // [259]
        #define  hi9 "[WE_DONT_NEED_1D_HOTEL_INDEX_HERE]"        // [259]
        //-  U32 hi9 =( H3X + ( H3Y * u_3 ) ); -------- --//     // [259]
        #define  U_R     uv4_p2k.r         /////////////////     // [259]
        #define  U_G     uv4_p2k.g         /////////////////     // [259]
        #define  U_B     uv4_p2k.b         /////////////////     // [259]
        #define  U_A     uv4_p2k.a         /////////////////     // [259]
        #define  B_P ( (U_R<<24)|(U_G<<16)|(U_B<<8)|(U_A<<0) )   // [259]
                                                                 // [259]
            U32     g25 =( R5X + ( R5Y * u_5 ) );                // [259]
            UV2     rxy =( d_g25_rxy[ g25 ]    );                // [259]
            UV4 uv4_p2k ; //:RGBA Bytes From Texture://          // [259]
            IV2 p2k_x_y ; //:XY Sample Coord,Texture://          // [259]
                                                                 // [259]
            UV2 lmc ;   //: @lmc@ :Level_Map_Coord ::::::://     // [259]
            U32 dia ;   //: Diagonal Offset To Data :::::://     // [259]
            U32 lat ;   //: LAT_Span:::::::::::::::::::::://     // [261]
            U32 dun ;   //: Tile Size In Discrete Units :://     // [264]
            UV2 dil ;   //: Discrete_Internal_Local :::::://     // [264]
                                                                 // [259]
            U32 te7 ;                                            // [259]
            U32 a5g[  5  ]; //: @a5g@ : Array_5_Geomtiles://     // [259]

            //:#_FRONT_TO_BACK_RENDERING_#:[262]:------------:// // [262]
                         /** @BTF@ : Back_To_Front **/           // [262]
            for( IMF_FTB /** @FTB@ : Front_To_Back **/    ){     // [262][259]
                te7 =(_1_7_ - u_1); //:[ 0 to (7-1) ]::://       // [259]
                                                                 // [259]
                dia = d_te7_dia[ te7 ];                          // [259]   
                lat = d_te7_lat[ te7 ];                          // [261]
                dun = d_te7_dun[ te7 ]; //: TileSizeIn[ dun ]:// // [264]
                dil =   te7_dil[ te7 ]; //: #_DIL_DIAGRAM_#  :// // [264]
                                                                 // [259]
                lmc.x =U32(  bsc.x >> te7 );                     // [259]
                lmc.y =U32(  bsc.y >> te7 );                     // [259]
                                                                 // [259]
                p2k_x_y =IV2( UV2(0,0)                           // [259]
                +      ( HXY * u_512 )                           // [259]
                +      ( rxy * u_128 )                           // [259]
                //:    (#__LAM_GEO__#) ://                       // [259]
                +      ( dia         )                           // [259]
                +      ( lmc         )                           // [259]
                );;;;;;;;;;;;;;;;;;;;;                           // [259]
                                                                 // [---]
                //:#__For_Layers_Other_Than_Zero__#://           // [259]
                //-  p2k_x_y +=( lat * lmx );      -//           // [259]
                //-  p2k_x_y +=( lat * lmy );      -//           // [259]
                                                                 // [---]
                //:#_ME_AND_MY_4_FRIENDS_#:[261]:------------:// // [261]
                //:------------------------------------------:// // [261]
                #define _0_  (UV4(  0,0,0,0  ))  /////////////// // [261]
                #define LEF  (IV2( 0-1 ,  0  ))  /////////////// // [261]
                #define RIG  (IV2( 0+1 ,  0  ))  /////////////// // [261]
                #define UPP  (IV2(  0  , 0-1 ))  /////////////// // [261]
                #define DOW  (IV2(  0  , 0+1 ))  /////////////// // [261]
                                                            //// // [261]
                #define   L  (STF(d_p2k,p2k_x_y + (LEF),0)) //// // [261]
                #define   R  (STF(d_p2k,p2k_x_y + (RIG),0)) //// // [261]
                #define   U  (STF(d_p2k,p2k_x_y + (UPP),0)) //// // [261]
                #define   D  (STF(d_p2k,p2k_x_y + (DOW),0)) //// // [261]
                                                            //// // [261]
                #define   P  uv4_p2k //:Pixel:RGBA:Bytes:// //// // [261]
                #define M_I  ( lat - u_1 )  //:Max_Index://      // [261]
                                                                 // [261]
                    //:LIT: uv4_p2k = STF( d_p2k,p2k_x_y,0 );    // [261][260] 
                    IMF_GET_UV4_P2K ;;;;;;;;;;;;;;;;;;;;;;;;;    // [---][260]
                    a5g[ 4 ]=( B_P );                            // [261]
                                                                 // [261]
                    P=(lmc.x >= u_1 ? L :_0_); a5g[ x_0 ]=(B_P); // [261]
                    P=(lmc.x  < M_I ? R :_0_); a5g[ x_1 ]=(B_P); // [261]
                    P=(lmc.y >= u_1 ? U :_0_); a5g[ y_0 ]=(B_P); // [261]
                    P=(lmc.y  < M_I ? D :_0_); a5g[ y_1 ]=(B_P); // [261]
                                                                 // [261]
                #undef  _0_     //////////////////////////////// // [261] //:TODO:#_UNDEF_INJECTION_#
                                //////////////////////////////// // [261]
                #undef  LEF     //////////////////////////////// // [261]
                #undef  RIG     //////////////////////////////// // [261]
                #undef  UPP     //////////////////////////////// // [261]
                #undef  DOW     //////////////////////////////// // [261]
                                //////////////////////////////// // [261]
                #undef    L     //////////////////////////////// // [261]
                #undef    R     //////////////////////////////// // [261]
                #undef    U     //////////////////////////////// // [261]
                #undef    D     //////////////////////////////// // [261]
                                //////////////////////////////// // [261]
                #undef    P     //////////////////////////////// // [261]
                #undef  M_I     //////////////////////////////// // [261]
                                //////////////////////////////// // [261]
                //:------------------------------------------:// // [261]
                //:------------:#_ME_AND_MY_4_FRIENDS_#:[261]:// // [261]
                //:#_SLEEPOVER_AT_GEOS_HOUSE_#:[263]:--------:// // [---]
                                                                 // [263]
                    //:POS_ABI[ u_3 | u_2 | u_1 | u_0 ]::://     // [263]
                    //:POS_NBO[c_x_0|c_x_1|c_y_0|c_y_1]::://     // [263]
                    //:    BIT[  b  |  b  |  b  |  b  ]::://     // [263]
                    //:  U_TO4[ 0|1 | 0|1 | 0|1 | 0|1 ]::://     // [283][REF][263]
                                                                 // [263]
                    U32 u_v16 ; //: TileValue :[0-(16-1)]://     // [263]
                    U32 u_vff ; //: TileValue :[0-255   ]://     // [283]
                    U32 u_am4 ; //: Auto_Tiling_Method   ://     // [283][REF][263]
                    U32 u_to4 ; //: TOUching_Value       ://     // [283][REF][263]
                                                                 // [---]
                    u_v16 =((a5g[ 4 ]>>28) & NIB );  //:#VAV#:// // [283][263][---]
                    u_vff =((a5g[ 4 ]>>24) & BYE );  //:#VAV#:// // [283][--------]
                    u_am4 =((a5g[ 4 ]>>24) & NIB );  //:#VAV#:// // [283][REF][263]
                                                                 // [---]
                    u_to4 =( U32( 0x0 )                          // [283][REF][263]
                    |   ( (IMF_A5G_TX0) << u_3 ) //:@NBO_X_0@:// // [263]
                    |   ( (IMF_A5G_TX1) << u_2 ) //:@NBO_X_1@:// // [263]
                    |   ( (IMF_A5G_TY0) << u_1 ) //:@NBO_Y_0@:// // [263]
                    |   ( (IMF_A5G_TY1) << u_0 ) //:@NBO_Y_1@:// // [263]
                    );;                                          // [263]
                                                                 // [263]
                    //:#_AM4_BIT_TURN_OFF_#:[263]:-----------:// // [283][REF][263]
                    #if( USE_AM4 >= 1 ) //////////////////////// // [283][REF][263]
                                                                 // [-------------]
                        if( IMF_AM4_BLOCKED_HOR ){               // [283][REF][263]
                            IMF_TO4_DELBITS_HOR ;;;;             // [283][REF][263]
                        };;                                      // [263][--------]     
                        if( IMF_AM4_BLOCKED_VER ){               // [283][REF][263]
                            IMF_TO4_DELBITS_VER ;;;;             // [283][REF][263]
                        };;                                      // [263][--------]
                                                                 // [-------------]
                    #endif ///////////////////////////////////// // [263]
                    //:-----------:#_AM4_BIT_TURN_OFF_#:[263]:// // [283][REF][263]
                                                                 // [263]
                //:--------:#_SLEEPOVER_AT_GEOS_HOUSE_#:[263]:// // [---]
                //:#_GET_GEOM_TILE_COLOR_#:[267]:------------:// // [267]
                #define MACRO_LA3_GEO ( u_0 ) //: GeomLayer  :// // [267]
                #define MACRO_C04_BOD ( u_0 ) //: BodyColor  :// // [267]
                #define MACRO_C04_EDG ( u_1 ) //: EdgeColor  :// // [267]
                                                                 // [267]
                    U32 u_hex ; //:@u_hex@ : U32 RGBA Color  :// // [267]
                    //- u_v16 ;   :@u_v16@ : U32 Tile Value  -// // [267]
                                                                 // [267]
                    //:#_GET_CENTRAL_TILE_VALUE_#:[267]:-----:// // [267]
                                                                 // [267]
                        //:@SKIP_ALREADY_DONE_FURTHER_UP@://     // [267]
                                                                 // [267]
                    //- u_v16 =(( a5g[ 4 ] >> 28 )&(u_ff));  -// // [267]
                                                                 // [267]
                    //:-----:#_GET_CENTRAL_TILE_VALUE_#:[267]:// // [267]
                    //:#_GET_GEOM_BODY_COLOR_#:[267]:--------:// // [267]
                                                                 // [---]
                        //:TAG[ tile_pallet ]:::::::::::::::::// // [313]
                                                                 // [---]
                        u_hex = d_la3_v16_c04_hex[               // [267]
                                                                 // [267]
                            ( MACRO_LA3_GEO * u_16 * u_04 )      // [267]
                        +   ( u_v16         * u_04        )      // [267]
                        +   ( MACRO_C04_BOD * u_01        )      // [267]
                        ];;                                      // [267]
                                                                 // [267]
                        FV4 f_hex_bod = FV4(                     // [267]
                            IMF_F_R    //:(u_hex)==>(F32_RED):// // [267]
                        ,   IMF_F_G    //:(u_hex)==>(F32_GRE):// // [267]
                        ,   IMF_F_B    //:(u_hex)==>(F32_BLU):// // [267]
                        ,   IMF_F_A    //:(u_hex)==>(F32_ALP):// // [267]
                        );;                                      // [267]
                                                                 // [267]
                    //:--------:#_GET_GEOM_BODY_COLOR_#:[267]:// // [267]
                    //:#_GET_GEOM_EDGE_COLOR_#:[267]:--------:// // [267]
                                                                 // [---]
                        //:TAG[ tile_pallet ]:::::::::::::::::// // [313]
                                                                 // [---]
                        u_hex = d_la3_v16_c04_hex[               // [267]
                                                                 // [267]
                            ( MACRO_LA3_GEO * u_16 * u_04 )      // [267]
                        +   ( u_v16         * u_04        )      // [267]
                        +   ( MACRO_C04_EDG * u_01        )      // [267]
                        ];;                                      // [267]
                                                                 // [267]
                        FV4 f_hex_edg = FV4(                     // [267]
                            IMF_F_R    //:(u_hex)==>(F32_RED):// // [267]
                        ,   IMF_F_G    //:(u_hex)==>(F32_GRE):// // [267]
                        ,   IMF_F_B    //:(u_hex)==>(F32_BLU):// // [267]
                        ,   IMF_F_A    //:(u_hex)==>(F32_ALP):// // [267]
                        );;                                      // [267]
                                                                 // [267]
                    //:--------:#_GET_GEOM_EDGE_COLOR_#:[267]:// // [267]
                                                                 // [267]
                #undef  MACRO_LA3_GEO  ///////////////////////// // [267]
                #undef  MACRO_C04_BOD  ///////////////////////// // [267]
                #undef  MACRO_C04_EDG  ///////////////////////// // [267]
                //:------------:#_GET_GEOM_TILE_COLOR_#:[267]:// // [267]
                //:#_MAKE_SUBTILE_GRAPHIC_#:[264]:-----------:// // [264]
                #if( USE_ATF <= 0 ) //////////////////////////// // [264]
                                                                 // [---]
                                                                 // [---]
                //- f_stg =FV4( 0.5,0.0,1.0,1 ); PURPLEISH ---// // [267][264]
                                                                 // [---]
                                                                 // [---]
                    U32 u_oob ; //: Out_Of_Bounds(on_edge)   :// // [264]
                                                                 // [264]
                    //:[264]:#_GEO_TIL_EDGE_THICKNESS_#:[264]:// // [264]
                    {   //////////////////////////////////////// // [264]
                                                                 // [264]
                    U32 u_b_0 ; //: dun_bounds : 1ST / MIN   :// // [264]
                    U32 u_b_1 ; //: dun_bounds : M_I / MAX   :// // [264]
                                                                 // [264]
                    //:!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!:// // [264]
                    //: TODO : "u_oob" needs to take into    :// // [264]
                    //:      : account the "touching" value  :// // [264]
                    //:      : in it's calculations for      :// // [264]
                    //:      : auto tiling to show up.       :// // [264]
                    //:      : NEXT_VIDEO : #2_6_5           :// // [264]
                    //:!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!:// // [264]
                                                                 // [---]
                    //:      ( @_F_V_A_@ ) : : : : : : : ://     // [---][264][--------]
                    u_b_0 =( (       u_0 ) + c_dui_geo );        // [---][264][CAE][192]
                    u_b_1 =( ( dun - u_1 ) - c_dui_geo );        // [---][264][CAE][192]
                    //:      ( @_L_V_A_@ ) : : : : : : : ://     // [---][264][--------]
                    u_oob =(                                     // [---][264][COP][192]
                    (                                            // [---][264][COP][192]
                     (( IMF_VAC_LEF )&&( dil.x < u_b_0 ))?u_1 :  // [265][264][CAE][192]
                     (( IMF_VAC_TOP )&&( dil.y < u_b_0 ))?u_1 :  // [265][264][CAE][192]
                     (( IMF_VAC_RIG )&&( dil.x > u_b_1 ))?u_1 :  // [265][264][CAE][192]
                     (( IMF_VAC_BOT )&&( dil.y > u_b_1 ))?u_1 :  // [265][264][CAE][192]
                                                                 // [265][264][COP][192]
                        u_0  //:OTHERWISE_MAIN_BODY_COLOR://     // [265][264][COP][192]
                    ));;     //:BECAUSE_NOT_OUT_OF_BOUNDS://     // [265][264][COP][192]
                                                                 // [---][264]
                    }   //////////////////////////////////////// // [---][264]
                    //:[264]:#_GEO_TIL_EDGE_THICKNESS_#:[264]:// // [---][264]
                    //:[264]:#_______DRAW__EDGE_______#:[264]:// // [---][264]
                                                                 // [---][264]
                        #define EDGEC (FV4( 0 , 1.0 , 0 , 1 ))   // [---][264]
                                                                 // [---][264]
                            f_stg =( (u_oob >= u_1 )             // [---][264]
                                                                 // [---][264]
                                ? f_hex_edg  //: EdgeColor ://   // [267][264]
                                : f_hex_bod  //: BodyColor ://   // [267][264]
                            );;                                  // [---][264]
                                                                 // [---][264]
                        #undef  EDGEC  ///////////////////////// // [---][264]
                                                                 // [---][264]
                    //:[264]:#_______DRAW__EDGE_______#:[264]:// // [---][264]
                                                                 // [---][264]
                #endif  //////////////////////////////////////// // [---][264]
                #if( USE_ATF >= 1 ) //////////////////////////// // [---][264]
                #define MACRO_LA3_GEO (     u_0 )   //////////// // [270]
                #define       DUN_2   ( dun/u_2 )   //////////// // [270]
                                                                 // [270]

                    //: DONE[ _REFAC_2022_09_17_ ]  ://          // [275]

                                                                 // [270]
                    //:SEE[  #_Too_Many_Fourset_Quads_# ]://     // [270]
                                                                 // [270]
                    U32 u_5x5 ; //: 5x5 Bitmap In U32 ://        // [270]
                                                                 // [---]
                    U32   tqx ; //: @tqx@ : Tile_Quad_X://       // [273][LNK]
                    U32   tqy ; //: @tqy@ : Tile_Quad_Y://       // [273][LNK]
                                                                 // [---]
                    /// u_f4x ; //: Fourset Cell X ::://         // [273][LNK][272][LNK]
                    /// u_f4y ; //: Fourset Cell Y ::://         // [273][LNK][272][LNK]
                                                                 // [---]
                    //:#_GRAB_5X5_GRAPHIC_#:[270]:-----------:// // [270]
                    {                                            // [270]
                        /// tqx ; //: @tqx@ : Tile_Quad_X://     // [273][LNK][270]
                        /// tqy ; //: @tqy@ : Tile_Quad_Y://     // [273][LNK][270]
                        U32 tqi ; //: @tqi@ : Tile_Quad_I://     // [270]
                                                                 // [270]
                        U32 u_f4x ; //: Fourset Cell X ::://     // [273][LNK][272][LNK][270]
                        U32 u_f4y ; //: Fourset Cell Y ::://     // [273][LNK][272][LNK][270]
                        U32 u_f16 ; //: Fourset Cell I ::://     // [270]
                                                                 // [270]
                        //:SEE[ #_TQI_F16_DIAGRAM_# }::::::://   // [270]
                                                                 // [270]
                        tqx =( dil.x >= DUN_2 ) ? u_1:u_0 ;      // [270]
                        tqy =( dil.y >= DUN_2 ) ? u_1:u_0 ;      // [270]
                        tqi =( tqx +(tqy *u_2 ) );;;;;;;;;;      // [270]
                                                                 // [270]
                        u_f4x  = d_to4_f4x[ (u_to4 * u_4)+tqi ]; // [283][REF][275][REF][270]
                        u_f4y  = d_to4_f4y[ (u_to4 * u_4)+tqi ]; // [283][REF][275][REF][270]
                        u_f16  =(    u_f4x+( u_f4y * u_4 )    ); // [270]
                                                                 // [270]
                        u_5x5 = d_fourset_la3_v16_f16_u25clus[   // [270]
                                                                 // [270]
                            ( MACRO_LA3_GEO * u_16 * u_16 )      // [270]
                        +   ( u_v16                * u_16 )      // [270]
                        +   ( u_f16                * u_01 )      // [270]
                        ];;                                      // [270]
                    }                                            // [270]
                    //:-----------:#_GRAB_5X5_GRAPHIC_#:[270]:// // [270]
                    //:#_GET_BINARY_PIXEL_#:[270]:-----------:// // [---]
                    #if( USE_RIN <= 0 ) //////////////////////// // [271]
                                                                 // [---]
                        //: @d10@ : Discrete_Tile_Tenths ://     // [273][271]
                                                                 // [---]
                        U32 u_d10 = d_te7_d10[ te7 ];            // [273][271]
                                                                 // [---]
                        U32 u_10x =( dil.x / u_d10          );   // [273][272]
                        U32 u_10y =( dil.y / u_d10          );   // [273][272]
                        U32 u_d5x =( u_10x -(   tqx * u_05 ));   // [273][272]
                        U32 u_d5y =( u_10y -(   tqy * u_05 ));   // [273][272]
                        U32 u_d25 =( u_d5x +( u_d5y * u_05 ));   // [273][272]
                                                                 // [272]
                        U32 u_bit =(     //////// @N_B_I@ //     // [272]
                                                                 // [272]
                            (u_5x5 >> ((u_032-u_1)-u_d25))       // [272]
                            &                                    // [272]
                            (          (U32( 0x1 )      ))       // [272]
                        );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [272]
                        f_stg =( ( u_bit <= u_0 ) //////////     // [272]
                                                                 // [272]
                              ?    f_hex_bod //:COLOR_BOD://     // [272]
                              :    f_hex_edg //:COLOR_EDG://     // [272]
                        );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [272]
                                                                 // [---]
                    #endif ///////////////////////////////////// // [271]
                    #if( USE_RIN >= 1 ) //////////////////////// // [271]
                    #define MACRO_DU3 ( c_bu3_bulginn )          // [278]
                                                                 // [---]
                        /// u_bu3 =(d_tik-(d_tik/u_3 )*u_3);     // [280][279]
                                                                 // [---]
                        U32 u_bu3 ; //: BUlge[0|1|2]:::::://     // [280]
                        U32 u_d5x ; //: Discrete_5coordsX://     // [280]
                        U32 u_d5y ; //: Discrete_5coordsY://     // [280]
                        U32 u_d25 ; //: Discrete_1D_Coord://     // [280]
                        U32 u_bit ; //: BinaryBitPixel   ://     // [280]
                                                                 // [---]
                        //: @d34@ : Discrete_34TH(S) ://         // [278]
                                                                 // [278]
                        U32 u_d34 = d_te7_d34[ te7 ];            // [278]
                                                                 // [278]
                        U32 u_34x =( dil.x / u_d34 );            // [278]
                        U32 u_34y =( dil.y / u_d34 );            // [278]
                                                                 // [---]
                        for( u_bu3=u_0;u_bu3<=u_2;u_bu3++ ){     // [280]
                                                                 // [---]
                            U32 u_10x = d_r34_bu3_r10[           // [278]
                                                                 // [278]
                               (u_34x * u_3)+( u_bu3 )           // [279][278]
                            ];;                                  // [278]
                            U32 u_10y = d_r34_bu3_r10[           // [278]
                                                                 // [278]
                               (u_34y * u_3)+( u_bu3 )           // [279][278]
                            ];;                                  // [278]
                                                                 // [278]
                            //:#_CAP_272_273_#:[278]:========:// // [278]
                                                                 // [278]
                            u_d5x =( u_10x -(   tqx * u_05 ));   // [280][278]
                            u_d5y =( u_10y -(   tqy * u_05 ));   // [280][278]
                            u_d25 =( u_d5x +( u_d5y * u_05 ));   // [280][278]
                                                                 // [280][278]
                            u_bit =(     //////// @N_B_I@ //     // [280][278]
                                                                 // [278]
                                (u_5x5 >> ((u_032-u_1)-u_d25))   // [278]
                                &                                // [278]
                                (          (U32( 0x1 )      ))   // [278]
                            );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [278]
                                                                 // [---]
                            if( u_0 == u_bu3 ){                  // [280]
                                                                 // [---]
                                f_stg =( ( u_bit <= u_0 ) //     // [278]
                                                                 // [278]
                                      ?    f_hex_bod             // [278]
                                      :    f_hex_edg             // [278]
                                );;;;;;;;;;;;;;;;;;;;;;;;;;;     // [278]
                                                                 // [---]
                            }else                                // [280]
                            if( u_bu3 >= u_1 ){                  // [280]
                                if( u_1 == u_bit ){              // [280]
                                    f_stg.r = f_stg.r / 2.0 ;    // [280]
                                    f_stg.g = f_stg.g / 2.0 ;    // [280]
                                    f_stg.b = f_stg.b / 2.0 ;    // [280]
                                };;                              // [280]
                            };;                                  // [280]
                                                                 // [---]
                            //:========:#_CAP_272_273_#:[278]:// // [278]
                                                                 // [---]
                        };; //:NEXT[ bu3 ]::::::::::::::::::::// // [280]
                                                                 // [---]
                    #undef  MACRO_DU3                            // [278]
                    #endif ///////////////////////////////////// // [271]
                    //:-----------:#_GET_BINARY_PIXEL_#:[270]:// // [---]
                                                                 // [270]
                #undef  MACRO_LA3_GEO  ///////////////////////// // [270]
                #undef        DUN_2    ///////////////////////// // [270]
                #endif ///////////////////////////////////////// // [---][264]
                //:-----------:#_MAKE_SUBTILE_GRAPHIC_#:[264]:// // [---][264]
                //:#_FRONT_TO_BACK_OCCLUDE_#:[262]:----------:// // [---]
                                                                 // [---]
                    if( 0.0 == f_geo.a ){  ///////////////////// // [262]
                                                                 // [262]
                        f_geo =(    //////////////////////////// // [262]
                            ( (a5g[ 4 ]>>28) & (U32(0xF)) )>u_0  // [262]
                            ? FV4(   f_stg )                     // [264][262]
                            : FV4( 0,0,0,0 )                     // [262]
                            );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [262]
                    };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [262]

                //:----------:#_FRONT_TO_BACK_OCCLUDE_#:[262]:// // [---]
                                                                 // [---]
                //:!!!!!!!!!!!!!!!!!!!!!!!!!!!!!://              // [259]
                //:DONE:Put Adjacent Tiles Into ://              // [262][259]
                //:    :a5g[ 0|1|2|3 ]          ://              // [259]
                //:!!!!!!!!!!!!!!!!!!!!!!!!!!!!!://              // [259]
                                                                 // [259]
                //:!!!!!!!!!!!!!!!!!!!!!!!!!!!!!://              // [259]
                //:TODO:Use Bits In Extracted   ://              // [259]
                //:    :Geom Tile Data Here     ://              // [259]
                //:!!!!!!!!!!!!!!!!!!!!!!!!!!!!!://              // [259]
            };;                                                  // [259]
            //:------------:#_FRONT_TO_BACK_RENDERING_#:[262]:// // [262]
                                                                 // [---]
        #undef  H3X   //////////////////////////////////////     // [259]
        #undef  H3Y   //////////////////////////////////////     // [259]
        #undef  HXY   //////////////////////////////////////     // [259]
        #undef  R5X   //////////////////////////////////////     // [259]
        #undef  R5Y   //////////////////////////////////////     // [259]
        #undef  hi9   //////////////////////////////////////     // [259]
        #undef  U_R   //////////////////////////////////////     // [259]
        #undef  U_G   //////////////////////////////////////     // [259]
        #undef  U_B   //////////////////////////////////////     // [259]
        #undef  U_A   //////////////////////////////////////     // [259]
        #undef  B_P   //////////////////////////////////////     // [259]
        //:----------:#_GET_GEOM_TILE_AND_FRIENDS_#:[259]://     // [259]
        //:#_ADD_BACKGROUND_LOD_GRID_#:[262]:------------://     // [---]
                                                                 // [262]
                                                                 // [262]
            if( 0.0 == f_geo.a ){                                // [262]
                                                                 // [262]
                f_geo =FV4( f_git , f_git , f_git , 1.0 );       // [262]
            };;                                                  // [262]
                                                                 // [262]
        //:------------:#_ADD_BACKGROUND_LOD_GRID_#:[262]://     // [---]
        //:#_FINAL_FRAG_#:[252]:-------------------------://     // [---]
                                                                 // [---]
            f_out = FV4(                                         // [262][---][251]
                f_geo.r                                          // [262][258][257][252][251]
            ,   f_geo.g                                          // [262][258][257][252][251]
            ,   f_geo.b                                          // [262][258][251]
            ,   f_geo.a                                          // [262][---][251]
            );;                                                  // [262][---][251]
        //:-------------------------:#_FINAL_FRAG_#:[252]://     // [252]
        //:#_VOID_SPACE_DISCARD_#:[253]:-----------------://     // [---]
                                                                 // [254]
            #define R5X ( gt8_gec[ c_gt1 ].x )                   // [254]
            #define R5Y ( gt8_gec[ c_gt1 ].y )                   // [254]
                                                                 // [254]
                U32 u_g25 =( R5X + ( R5Y * u_5 ) );              // [254]
                U32 u_vod =( d_g25_vod[  u_g25 ] );              // [254]
                                                                 // [254]
                f_out =( u_vod >= u_1 ) //////////               // [254]
                    ? FV4( 0.0 , 0.0 , 0.0 , 1.0 )               // [254]
                    : f_out ;;;;;;;;;;;;;;;;;;;;;;               // [254]
                                                                 // [254]
            #undef  R5X                                          // [254]
            #undef  R5Y                                          // [254]
                                                                 // [254]
        //:-----------------:#_VOID_SPACE_DISCARD_#:[253]://     // [---]
        //:#_LETTERBOX_DISCARD_#:[252]:------------------://     // [252]
                                                                 // [252]
            f_out =( ufc.x < d_vp0[ x_0 ] //                     // [252]
                  || ufc.x > d_vp0[ x_1 ] //                     // [252]
                  || ufc.y < d_vp0[ y_0 ] //                     // [252]
                  || ufc.y > d_vp0[ y_1 ] //                     // [252]
                  )                       //                     // [252]
            ? FV4( 0.0 , 0.0 , 0.0 , 1.0 )//                     // [252]
            : f_out ;;;;;;;;;;;;;;;;;;;;;;;;                     // [252]
                                                                 // [252]
        //:------------------:#_LETTERBOX_DISCARD_#:[252]://     // [252]
        //:#_DISCARD_ON_ERROR_#:[257]:-------------------://     // [---]
        #define       G gt8_gec  ///////////////////////////     // [257]
        #define ERR_001 FV4( 1.0 , 0.0 , 0.0 , 1.0 ) ///////     // [257]
        #define ERR_002 FV4( 0.5 , 0.0 , 0.0 , 1.0 ) ///////     // [257]
                                                                 // [257]
            f_out = G[2].x > u_1 ? ERR_001 : f_out ;             // [257]
            f_out = G[2].y > u_1 ? ERR_002 : f_out ;             // [257]
                                                                 // [257]
        #undef        G     ////////////////////////////////     // [257]
        #undef  ERR_001     ////////////////////////////////     // [257]
        #undef  ERR_002     ////////////////////////////////     // [257]
        //:-------------------:#_DISCARD_ON_ERROR_#:[257]://     // [---]
                                                                 // [---]
    }   //:ENDFUNC[ main : ssf_006 ]::::::::::::::::::::::::::// // [251]                                             
                                                                        
`));; //////////////////////////////////////////////////////////    [069]
const d_artgirl_ssf_007 =( //: ShaderSourceFrag #07@ssf@[069]://    [070][069]
////////////////////////////////////////////////////////////////    [069]
(c_artgirl_wgl_tag+`                                             // [074]
                                                                 // [---]                                                  
    //: FRAG_SHADER_STR[ d_artgirl_ssf_007 ] ://                 // [081]
    //: FRAG_SHADER_ENU[ c_artgirl_ren_007 ] ://                 // [081]        
                                                                 // [---]   
    ${d_artgirl_crazybi}  //:SEE[ #_ABOUT_ARTGIRL_CRAZYBI_# ]:// // [284]
    ${d_artgirl_use}      //:SEE[ #_ABOUT_ARTGIRL_USE_____# ]:// // [284]
    ${d_artgirl_smacros}  //:SEE[ #_ABOUT_ARTGIRL_SMACROS_# ]:// // [284]
    ${d_artgirl_fragbug}  //:SEE[ #_ABOUT_ARTGIRL_FRAGBUG_# ]:// // [313]
    ${d_artgirl_fragopt}  //:SEE[ #_ABOUT_ARTGIRL_FRAGOPT_# ]:// // [304]
    ${d_artgirl_shadlut}  //:SEE[ #_ABOUT_ARTGIRL_SHADLUT_# ]:// // [284]
    ${d_artgirl_uniform}  //:SEE[ #_ABOUT_ARTGIRL_UNIFORM_# ]:// // [284]
    ${d_artgirl_imf}      //:SEE[ #_ABOUT_ARTGIRL_IMF_____# ]:// // [284]
                                                                 // [---] 
    precision mediump float ;                                    // [320][MOV][074]
                                                                 // [---] 
    //:#_SHADER_7_ONLY_LOOKUP_TABLES_#:[319]:----------------:// // [319]
                                                                 // [---]
        //:#_TOUCHING_VALUE_ROTATION_TABLES_#:[338]:-----://     // [338]
                                             //:         ://     // [338]
            [[[d_rotclok_000_r_x_to4_to2]]]  //: C_W_000 ://     // [338]
            [[[d_rotclok_000_r_y_to4_to2]]]  //: C_W_000 ://     // [338]
                                             //:         ://     // [338]
            [[[d_rotclok_090_r_x_to4_to2]]]  //: C_W_090 ://     // [338]
            [[[d_rotclok_090_r_y_to4_to2]]]  //: C_W_090 ://     // [338]
                                             //:         ://     // [338]
            [[[d_rotclok_180_r_x_to4_to2]]]  //: C_W_180 ://     // [338]
            [[[d_rotclok_180_r_y_to4_to2]]]  //: C_W_180 ://     // [338]
                                             //:         ://     // [338]
            [[[d_rotclok_270_r_x_to4_to2]]]  //: C_W_270 ://     // [338]
            [[[d_rotclok_270_r_y_to4_to2]]]  //: C_W_270 ://     // [338]
                                             //:         ://     // [338]
        //:-----:#_TOUCHING_VALUE_ROTATION_TABLES_#:[338]://     // [338]
                                                                 // [---]
        //:( to4 )===>( 4x4 )://                                 // [320]
                                                                 // [319]
        [[[d_to4_4x4]]]                                          // [320][319]
        [[[d_to4_h02_8x4]]]   //:( to4 & h02 )===>( 8x4 )://     // [327]  
                                                                 // [---]
        //:#_HELPS_CREATE_FOUR_TONE_TILES_#:[320]:-------://     // [320]
                                                                 // [320]
            F32 d_v04_mul[ 4 ]=F32[ 4 ](                         // [320]
                       //:BIN[   EDGES         LIGHT    ]://     // [320]
                1.0    //:BIN[_____0______ ______0______]://     // [320]
            ,   1.2    //:BIN[_____0______ ______1______]://     // [320]
                                                                 // [320]
            ,   0.1    //:BIN[_____1______ ______0______]://     // [320]
            ,   0.2    //:BIN[_____1______ ______1______]://     // [320]
                                                                 // [320]
            );//:<---ONLY_ONE_SEMICOLON_ALLOWED_HERE://          // [320]
                                                                 // [320]
        //:-------:#_HELPS_CREATE_FOUR_TONE_TILES_#:[320]://     // [320]
                                                                 // [---]
                                                                 // [319]
    //:----------------:#_SHADER_7_ONLY_LOOKUP_TABLES_#:[319]:// // [319]
                                                                 // [---]
                                                                 // [074]
    in  FV2  i_o_tex ; //: @i_o_tex@ ://                         // [284][074]
    out FV4    f_out ; //:   @f_out@ ://                         // [284]
                                                                 // [---]
    void main(){    //::::::::::::::::BEG_END_FUN[ main ]://     // [284][074]
        //:----------------------------------------------://     // [284]
        //: Remember: the only problem with branching    ://     // [284]
        //: in a shader is if different instances        ://     // [284]
        //: executing on the same computational unit     ://     // [284]
        //: have to take different paths.                ://     // [284]
        //: #_SHADER_BRANCHING_QUOTE_#                   ://     // [284]
        //:----------------------------------------------://     // [284]
        //:#_FRAGMAIN_VARS_#:[284]:----------------------://     // [---]
                                                                 // [284]
            U32 u_boo =( u_0      );//:@u_boo@:Booleans  ://     // [284]
            #define b_xxx ( u_abi ) //:@EXAMPLE_ENTRY@   ://     // [284]
            #define b_lbd ( bit00 ) //:Letter Box Discard://     // [284]
            #define b_vod ( bit01 ) //:Is_In_Void_Room?  ://     // [305]
                                                                 // [284]
            UV2 dug ;  //:Discrete_Unit_Global_coordinate://     // [284]
                                                                 // [---]
            ///////( FV4_LBBLACK );  //:@_DEF_NOT_BLACK_@://     // [312]
            f_out =( FV4_PURPLET );  //:  @_D_I_E_T_S_@  ://     // [312]
                                                                 // [---]
        //:----------------------:#_FRAGMAIN_VARS_#:[284]://     // [---]
        //:@_QUESTIONABLE_SCOPE_@:[303]:-----------------://     // [303]
                                                                 // [303]
            //:------------------------------------------://     // [303]
            //: If we decide any of these variable names ://     // [303]
            //: need TIGHTER (less broad) scope, replace ://     // [303]
            //: "U32" with "///" , so that this section  ://     // [303]
            //: can still function as an index.          ://     // [303]
            //:------------------------------------------://     // [303]
                                                                 // [303]
            //:SEE[ _SHADER_7_OCCLUSION_PROCESS_ ]:::::::://     // [303]
                                                                 // [303]
            U32 u_te7 ; //: SEE[ #_DIAGRAM_U_TE7_# ] ::::://     // [303]
            U32 u_la3 ; //: SEE[ #_DIAGRAM_U_LA3_# ] ::::://     // [303]
            U32 u_lat ; //: SEE[ #_DIAGRAM_U_LAT_# ] ::::://     // [308]
            U32 u_dia ; //: SEE[ #_DIAGRAM_U_DIA_# ] ::::://     // [308]
            U32 u_mmi ; //: SEE[ #_DIAGRAM_U_MMI_# ] ::::://     // [303]
            U32 u_mmx ; //: SEE[ #_DIAGRAM_U_MMX_# ] ::::://     // [303]
            U32 u_mmy ; //: SEE[ #_DIAGRAM_U_MMY_# ] ::::://     // [303]
            U32 u_mm4 ; //: SEE[ #_DIAGRAM_U_MM4_# ] ::::://     // [303]
            U32 u_v16 ; //: SEE[ #_DIAGRAM_U_V16_# ] ::::://     // [303]
            U32 u_v48 ; //: SEE[ #_DIAGRAM_U_V48_# ] ::::://     // [303]
            U32 u_v12 ; //: SEE[ #_DIAGRAM_U_V12_# ] ::::://     // [303]
            U32 u_me9 ; //: SEE[ #_DIAGRAM_U_ME9_# ] ::::://     // [303]
            U32 u_dun ; //: SEE[ #_DIAGRAM_U_DUN_# ] ::::://     // [303]
            UV2 u_dil ; //: SEE[ #_DIAGRAM_U_DIL_# ] ::::://     // [320][BUG][303]
            U32 u_dup ; //: SEE[ #_DIAGRAM_U_DUP_# ] ::::://     // [303]
            U32 u_tsp ; //: SEE[ #_DIAGRAM_U_TSP_# ] ::::://     // [303]
            U32 u_mut ; //: SEE[ #_DIAGRAM_U_MUT_# ] ::::://     // [303]
            U32 u_mil ; //: SEE[ #_DIAGRAM_U_MIL_# ] ::::://     // [303]
            U32 u_i21 ; //: SEE[ #_DIAGRAM_U_I21_# ] ::::://     // [304]

            UV2 u_ho3 ; //: VECTOR[ u_h3x , u_h3y ]::::::://     // [305]
            UV2 u_ro5 ; //: VECTOR[ u_r5x , u_r5y ]::::::://     // [305]
            UV2 u_r4i ; //: VECTOR[ u_r4x , u_r4y ]::::::://     // [342][305]

            U32 u_bintile ; //: Binary Tile Value :::::::://     // [311]

            U32 u_to4     ; //: Touching Value, 4 bits ::://     // [317]
                            //: [ x_0 , x_1 , y_0 , y_1 ]://     // [317]

            #define u_mmt [FIX:u_mm4]                            // [303]
            #define u_pun [FIX:u_mut]                            // [303]
            #define u_put [FIX:u_mut]                            // [303]
            #define u_pil [FIX:u_mil]                            // [303]
            #define u_sut [DONT_NEED_SCREEN_UNITS_FOR_TILE]      // [303]
            #define u_sun [FIX:u_sut]                            // [303]
                                                                 // [303]
        //:-----------------:@_QUESTIONABLE_SCOPE_@:[303]://     // [303]
        //:#_PROMOTED_VARS_#:[329]:======================://     // [329]
                                                                 // [329]
            U32 u_vff ; //: @u_vff@ : 8 Bit Tile Value   ://     // [329]
                        //:     BIN[  11 11    11 11 ]   ://     // [329]
                        //:     BIN[  u_v16    u_am4 ]   ://     // [329]
                                                                 // [329]
            UV2 u_dim ; //: @u_dim@ : u_dil , MIRRORED   ://     // [329]
                        //: @PROMOTED_ON_THE_FIRST_DAY@  ://     // [329]
                                                                 // [---]
            U32 u_ro4 ; //: @u_ro4@ : Touching Rotation  ://     // [342]
                        //: @PROMOTED_ON_THE_FIRST_DAY@  ://     // [342]
                                                                 // [---]
        //:======================:#_PROMOTED_VARS_#:[329]://     // [329]
        //:#_DOUGS_LETTERBOX_#:[284]:--------------------://     // [---]
        { ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [284]
                                                                 // [284]
            UV2 ufc =UV2( IMF_UFC_X , IMF_UFC_Y ); //[ufc]//     // [284]
            FV2 lpc =FV2( IMF_LPC_X , IMF_LPC_Y ); //[lpc]//     // [284]
                dug =UV2( IMF_DUG_X , IMF_DUG_Y ); //[dug]//     // [284]
            if(   IMF_UFC_OOB_X_0                                // [284]
            ||    IMF_UFC_OOB_X_1                                // [284]
            ||    IMF_UFC_OOB_Y_0                                // [284]
            ||    IMF_UFC_OOB_Y_1                                // [284]
            ){                                                   // [284]
                u_boo =( u_boo | ( u_1 << b_lbd ) );             // [284]
            };;                                                  // [284]
                                                                 // [284]
        } ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [284]
        //:--------------------:#_DOUGS_LETTERBOX_#:[284]://     // [---]
        //:#_DECAL_COORDS_CAN_BE_RE_USED_#:[305]:--------://     // [305]
                                                                 // [305]
            //: mod(    x ,  y ) ==> (x-(y*(x/y))) ::::::://     // [305]
                                                                 // [305]
            UV2 u_deca64 ; //:DecalTileXY,on 64x64://            // [305]
            u_deca64 =( dug / c_du0 );                           // [305]
            u_deca64 =( u_deca64-(u_64*(u_deca64/u_64)) );       // [305]
                                                                 // [305]
        //:--------:#_DECAL_COORDS_CAN_BE_RE_USED_#:[305]://     // [305]
        //:#_LEVELPACK_AND_LEVEL_#:[305]:----------------://     // [305]
        {                                                        // [305]
            u_ho3 =( dug / c_duh ); //: Get Hotel :::::::://     // [305]
            u_ro5 =( dug / c_dur ); //: Get Room  :::::::://     // [305]
                                                                 // [305]
            //:#_FRAGOPT_002_#:[305]:--------------------://     // [305]
                                                                 // [305]
                #if( FRAGOPT_002 <=0 )                           // [305]
                                                                 // [305]
                    u_ho3 =(u_ho3-(u_03*(u_ho3/u_03)));          // [305]
                    u_ro5 =(u_ro5-(u_05*(u_ro5/u_05)));          // [305]
                #endif                                           // [305]
                #if( FRAGOPT_002 >=1 )                           // [305]
                    u_ho3 =(u_ho3);;;;;;;;;;;;;;;;;;;;;          // [305]
                    u_ro5 =(u_ro5-(u_05*(u_ro5/u_05)));          // [305]
                #endif                                           // [305]
            //:--------------------:#_FRAGOPT_002_#:[305]://     // [305]
                                                                 // [305]
            U32 u_g25 = ( u_ro5.x + ( u_ro5.y * u_5 ) );         // [305]
                                                                 // [305]
            if( d_g25_vod[ u_g25 ] >= u_1 ){                     // [305]
                                                                 // [305]
                u_boo =( u_boo | ( u_1 << b_vod ) );             // [305]
                                                                 // [305]
                f_out =( FV4_VOIDRED );                          // [305]
                                                                 // [305]
                //: TODO: #_MIME_CELL_LOOKUP_#://                // [305]
                u_r4i.x =( u_3 /** @TEMP_OOB_R04@ **/ );         // [342][312][305]  < < < < < < < < < < NOTICE_ME_SENPAI , upside down world lookup [312]  #_UPSIDE_DOWN_WORLD_LOOKUP_#
                u_r4i.y =( u_3 /** @TEMP_OOB_R04@ **/ );         // [342][320][BUG][312][305]  < < < < < NOTICE_ME_SENPAI , upside down world lookup [312]  #_UPSIDE_DOWN_WORLD_LOOKUP_#
                        //: @_A_RETURN_WAS_HERE_@ ://            // [312]
                        //: @_ITIS___GONE___NOW_@ ://            // [312]
            }else{                                               // [305]
                                                                 // [305]
                #if( FRAGOPT_003 <= 0 ) //::::::::::::::::::::// // [307]
                                                                 // [307]
                u_r4i.x = ( d_g25_r4x[ u_g25 ] );                // [342][307][305]
                u_r4i.y = ( d_g25_r4y[ u_g25 ] );                // [342][307][305]
                                                                 //      [307]
                #endif                                           //      [307]
                #if( FRAGOPT_003 >= 1 ) //::::::::::::::[307]:// //      [307]
                {                                                //      [307]
                #define ABI2 ( abi - u_1 ) //:@ABI2@://          //      [307]
                #define ABI1 ( abi + u_0 ) //:@ABI1@://          //      [307]
                                                                 //      [307]
                    //:@abi@: Actual_Bit_Index ://               //      [307]
                    U32 abi =((u_32-u_1) - u_g25 );              //      [307]
                                                                 //      [307]
                    u_r4i.x =( u_0    //////////////////////     // [342][307]
                         | ((d_g25_r4x_u_2 >> ABI2 )&(u_2))      //      [307]
                         | ((d_g25_r4x_u_1 >> ABI1 )&(u_1))      //      [307]
                    );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     //      [307]
                    u_r4i.y =( u_0    //////////////////////     // [342][307]
                         | ((d_g25_r4y_u_2 >> ABI2 )&(u_2))      //      [307]
                         | ((d_g25_r4y_u_1 >> ABI1 )&(u_1))      //      [307]
                    );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     //      [307]
                #undef  ABI2 //: Actual_Bit_Index #2 ::::://     //      [307]
                #undef  ABI1 //: Actual_Bit_Index #1 ::::://     //      [307]
                }                                                //      [307]
                #endif //:::::::::::::::::::::::::::::::[307]:// // [---][307]
            };;                                                  // [305]
        }                                                        // [305]
        //:----------------:#_LEVELPACK_AND_LEVEL_#:[305]://     // [305]
        //:#_OUTSIDE_OCCLUDE_LOOP_#:[317]:---------------://     // [317]
                                                                 // [317]
            //: TAG[ _OOL_P2K_X_Y_ ]( @O_O_L@ - p2k_x_y )://     // [317]
            //: TAG[ _OOL_UV4_P2K_ ]( @O_O_L@ - uv4_p2k )://     // [317]
                                                                 // [317]
            UV2   u_gmc ;   //: @gmc@ : Global_Map_Coord ://     // [317]
            IV2 p2k_x_y ;   //: Pix2048 Sample Coordinate://     // [317]
            UV4 uv4_p2k ;   //: Pix2048 R_G_B_A Byte_Vec ://     // [317]
                                                                 // [317]
            UV2   u_lmc ;   //: TAG[ #_WHY_YOU_BELONG_# ]://     // [317]
                            //: TAG[ #_OOL_LMC_# ______ ]://     // [317]
                                                                 // [317]
        //:---------------:#_OUTSIDE_OCCLUDE_LOOP_#:[317]://     // [317]
        //:#_DATASEL_OCCLUDE_LOOP_#:[304]:---------------://     // [---]
        for( u_i21 = u_0 ; u_i21 <=( u_020 ) ; u_i21++){         // [304]
                                                                 // [304]
            #if( FRAGOPT_001 <= 0 ) //:##################://     // [304]
                                                                 // [304]
                u_la3 = d_i21_la3[ u_i21 ] ;                     // [304]
                u_te7 = d_i21_te7[ u_i21 ] ;                     // [304]
                u_lat = d_i21_lat[ u_i21 ] ;                     // [308]
                u_dia = d_i21_dia[ u_i21 ] ;                     // [308]
                                                                 // [304]
            #endif //:###################################://     // [304]
            #if( FRAGOPT_001 >= 1 ) //:##################://     // [304]
            {                                                    // [304]
                U32 antirem_003 ; //:AntiRemainder[0|1|2]://     // [304]
                                                                 // [304]
                    antirem_003 =( u_i21 / u_007 );              // [304]
                                                                 // [304]
                u_la3 =( U32(3-1) -(antirem_003      ) );        // [304]
                u_te7 =( u_i21    -(antirem_003*u_007) );        // [304]
                                                                 // [---]
            //:#U_LAT____U_64_RS_U_TE7#::::::::::::::::::://     // [308]
                u_lat =( u_64 >> u_te7 );;;;;;;;;;;;;;;;;        // [308]
                u_dia =( UX7E & ( UX7E << ( u_6-u_te7 )) );      // [308]
            //:#U_DIA____0X7E_A___0X7E_LS___U_6_U_TE7#:::://     // [308]
                                                                 // [---]
            }                                                    // [304]
            #endif //:###################################://     // [304]
            //:#_PLANCK_UNITS_IN_TILE_#:[310]:===========://     // [310]
            #if( FRAGOPT_004 <= 0 ) //:#############[310]://     // [310]
                                                                 // [310]
                u_dun = d_te7_dun[ u_te7 ];                      // [310]
                                                                 // [310]
            #endif //:##############################[310]://     // [310]
            #if( FRAGOPT_004 >= 1 ) //:#############[310]://     // [310]
                                                                 // [310]
                u_dun =( c_du0 * (u_1 << u_te7) );               // [310]
                                                                 // [310]
            #endif //:##############################[310]://     // [310]
            //:===========:#_PLANCK_UNITS_IN_TILE_#:[310]://     // [310]
            //:#_EXTRACT_TILE_VALUE_3_0_9_#:[308]:=======://     // [308]
            {                                                    // [308]
                //:--------------------------------------://     // [---][308][--------]
                //:   We will do this in video #3_0_9 ,  ://     // [---][308][--------]
                //:   the __NEXT__ video.                ://     // [---][308][--------]
                //:   I_AM_A_FILTHY_FUCKING_LAIR ? ......://     // [---][310][--------]
                //:   I_AM_A_FILTHY_FUCKING_LIAR ? ......://     // [---][310][--------]
                //:--------------------------------------://     // [---][308][--------]
                                                                 // [311][-------------]
                //: mod( LMC,R) ==> (LMC-(R*(LMC/R))) :::://     // [311][-------------]
                                                                 // [311][-------------]
                    u_lmc =( dug / u_dun );//:#_OOL_LMC_#://     // [317][311][--------] 
                    u_dil =( dug -(u_dun*u_lmc) );               // [320][-------------]
                    u_lmc =( u_lmc-(u_lat*(u_lmc/u_lat)) );      // [311][-------------]
                                                                 // [---][-------------]
                /// p2k_x_y ; //: SEE[ _OOL_P2K_X_Y_ ] ::://     // [317][311][--------]
                /// uv4_p2k ; //: SEE[ _OOL_UV4_P2K_ ] ::://     // [317][311][--------]
                                                                 // [---][---][--------]
                UV2   u_lmo ; //: @lmo@ : LevelMapOrigin ://     // [---][317][--------]
                                                                 // [---][317][--------]
                u_lmo =( UV2(0,0)   //::::::::::::::::::_LMO_:// // [---][317][--------]
                +      ( u_ho3 * u_512 )      //: HOTEL ::::::// // [---][317][MOV][311]
                +      ( u_r4i * u_128 )      //: ROOM  ::::::// // [342][317][MOV][311]
                +      ( u_dia         )      //: TRICLUS ::::// // [---][317][MOV][311]
                +   UV2(                                         // [---][317][MOV][311]
                       ( IMF_LA3_LMX * u_lat) //: LAYER ::::::// // [---][317][MOV][311]
                    ,  ( IMF_LA3_LMY * u_lat) //: (GEOMTYPE) :// // [---][317][MOV][311]
                    )                                            // [---][317][MOV][311]
                );; //::::::::::::::::::::::::::::::::::_LMO_:// // [---][317][--------]
                                                                 // [---][---][---][---]

                //: SEE[ #_DIAGRAM__GMC__VS__LMO__VS__LMC_# ]:// // [317]
             
                u_gmc =(      UV2(0,0)  //////////////////////// // [317][311][---]
                +      ( u_lmo       )  //: LEVEL_MAP_ORIGIN :// // [317][---][---]
                +      ( u_lmc       )  //: LOCAL_COORD      :// // [317][311][---]
                );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [311]
                p2k_x_y =( IV2( u_gmc ) );;;;;;;;;;;;;;;;;;;;;;; // [317]
                                                                 // [311]
                //: uv4_p2k = STF(d_p2k,p2k_x_y,0); ://          // [311]
                IMF_GET_UV4_P2K  //:<--@TEXELFETCH@ ://          // [311]
                                                                 // [311]
                u_bintile =( u_0                                 // [311]
                |      ( uv4_p2k.r << 24 )                       // [311]
                |      ( uv4_p2k.g << 16 )                       // [311]
                |      ( uv4_p2k.b <<  8 )                       // [311]
                |      ( uv4_p2k.a <<  0 )                       // [311]
                );;                                              // [311]
                                                                 // [---]
                //:#_TOUCHING_VALUE_#:[317]:=============://     // [317]
                //:                                      ://     // [317]
                //:   Caculated Further DOWN. ( u_tou )  ://     // [317]
                //:                                      ://     // [317]
                //:=============:#_TOUCHING_VALUE_#:[317]://     // [317]
            }                                                    // [---][308]
            //:=======:#_EXTRACT_TILE_VALUE_3_0_9_#:[308]://     // [---][308]  
            //:#_BREAK_ON_VISIBLE_#:[311]:---------------://     // [311]
                                                                 // [311]
                if( u_0 != (u_bintile & U32(0xF0000000)) ){      // [418][FIX][311]
                //:.....................U32(0xRRGGBBAA)..://     // [418][--------]
                                                                 // [311]
                    f_out =( FV4_GREYMAT );                      // [311]
                                                                 // [---]
                    //: #_LMC_OOB_BIT_FLAGS_HERE_#  :::::://     // [317]
                    //: #_ON_SECOND_THOUGHT__NO__#  :::::://     // [317]
                                                                 // [---]
                    //: @_A_RETURN_WAS_HERE_@ ://                // [312]
                    //: @_ITIS___GONE___NOW_@ ://                // [312]
                    //:                       ://                // [312]
                    //: @_BROKEN_DREAMS_AND_@ ://                // [312]
                    //: @_SHATTEREDMEMORIES_@ ://                // [312]
                    //: @______REMAIN_______@ ://                // [312]
                    break;                                       // [312]
                };;                                              // [311]
            //:---------------:#_BREAK_ON_VISIBLE_#:[311]://     // [311]
                                                                 // [---]
        };;                                                      // [304]
        //:---------------:#_DATASEL_OCCLUDE_LOOP_#:[304]://     // [304]
        //:#_MONOCHROME_CELL_#:[315]:====================://     // [315]
                                                                 // [315]
            u_v16 =( u_bintile >> 28 )&( U32( 0xF ) );           // [315]
                                                                 // [315]
            #if( FRAGOPT_005 <= 0 ) //:##################://     // [315]
                                                                 // [315]
                u_mmi = d_v48_mmi[ u_0                           // [315]
                +   (u_la3*u_16)                                 // [315]
                +   (u_v16+u_00)                                 // [315]
                ];;                                              // [315]
            #endif //:###################################://     // [315]
            #if( FRAGOPT_005 >= 1 ) //:##################://     // [315]
                                                                 // [315]
                u_mmi =( ///////////////////////////////////     // [315]
                      U32( ${c_mmi_artgola_000_011} )   ////     // [315]
                       +                                ////     // [315]
                    (                                   ////     // [315]
                        ( u_00                          ////     // [315]
                        +   ( u_la3*u_16)               ////     // [315]
                        +   ( u_v16+u_00)               ////     // [315]
                        )                               ////     // [315]
                        /                               ////     // [315]
                       u_12                             ////     // [315]
                    )                                   ////     // [315]
                );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [315]
            #endif //:###################################://     // [315]
        //:====================:#_MONOCHROME_CELL_#:[315]://     // [315]
        //:#_USE__AM4__ONN__#:[317]:---------------------://     // [317]
        //:#_TOUCHING_VALUE_#:[317]:---------------------://     // [317]
        //:                                              ://     // [317]
        //:     u_to4[ x_0 , x_1 , y_0 , y_1 ]           ://     // [317]
        //:                                              ://     // [317]
        //:- - - - - - - - - - - -- - - - - - - - - - - -://     // [317]
        #define B_0 ( (       u_0 ) + u_1 )           //////     // [317]
        #define B_1 ( ( u_lat-u_1 ) - u_1 )           //////     // [317]
        #define HOR ( U32( ${c_vff_latches_hor} ) )   //////     // [317]
        #define VER ( U32( ${c_vff_latches_ver} ) )   //////     // [317]
        {                                             //////     // [317]
            /// u_gmc =(  u_lmo + u_lmc );            //////     // [317]
            UV2 u_hor =UV2( u_1 ,   u_0 );            //////     // [317]
            UV2 u_ver =UV2( u_0 ,   u_1 );            //////     // [317]
                u_vff = uv4_p2k.r ; //: @8_BITS@://   //////     // [329][317]
                                                      //////     // [---]
                //:#_JUST_GET_RO4_INSTEAD_OF_B10_#:// //////     // [342]
                                                      //////     // [342]
                    u_ro4 =( uv4_p2k.g >> 6 );        //////     // [342]
                                                      //////     // [---]
                                                      //////     // [---]
            u_to4 =( U32( 0 ) );                      //////     // [317]
                                                      //////     // [317]
            //:======================================://         // [317]
            if( u_0 !=( u_vff & HOR ) ){ //:HHHHHHHHH://         // [317]
                                                      //////     // [317]
            if( u_lmc.x >= B_0 ){  //:#_GET_TO4_LEF_#://////     // [317]
                                                      //////     // [317]
                p2k_x_y =IV2( u_gmc -u_hor );  //:HOR://////     // [317]
                IMF_GET_UV4_P2K                       //////     // [317]
                if(     uv4_p2k.r == u_vff            //////     // [317]
                &&     (uv4_p2k.g >> u_6 )==( u_ro4 ) //////     // [344]
                ){                                    //////     // [317]
                                                      //////     // [317]
                    u_to4 =( u_to4 | c_to4_lef );     //////     // [317]
                };;                                   //////     // [317]
            };;                                       //////     // [317]
            if( u_lmc.x <= B_1 ){  //:#_GET_TO4_RIG_#://////     // [317]
                                                      //////     // [317]
                p2k_x_y =IV2( u_gmc +u_hor );  //:HOR://////     // [317]
                IMF_GET_UV4_P2K                       //////     // [317]
                if(     uv4_p2k.r == u_vff            //////     // [317]
                &&     (uv4_p2k.g >> u_6 )==( u_ro4 ) //////     // [344]
                ){                                    //////     // [317]
                                                      //////     // [317]
                    u_to4 =( u_to4 | c_to4_rig );     //////     // [317]
                };;                                   //////     // [317]
            };;                                       //////     // [317]
                                                      //////     // [317]
            };; //:________________________:HHHHHHHHH://         // [317]
            if( u_0 !=( u_vff & VER ) ){ //:V___V___V://         // [317]
                                                      //////     // [317]
            if( u_lmc.y >= B_0 ){  //:#_GET_TO4_TOP_#://////     // [317]
                                                      //////     // [317]
                p2k_x_y =IV2( u_gmc -u_ver );  //:VER://////     // [317]
                IMF_GET_UV4_P2K                       //////     // [317]
                if(     uv4_p2k.r == u_vff            //////     // [317]
                &&     (uv4_p2k.g >> u_6 )==( u_ro4 ) //////     // [344]
                ){                                    //////     // [317]
                                                      //////     // [317]
                    u_to4 =( u_to4 | c_to4_top );     //////     // [317]
                };;                                   //////     // [317]
            };;                                       //////     // [317]
            if( u_lmc.y <= B_1 ){  //:#_GET_TO4_BOT_#://////     // [317]
                                                      //////     // [317]
                p2k_x_y =IV2( u_gmc +u_ver );  //:VER://////     // [317]
                IMF_GET_UV4_P2K                       //////     // [317]
                if(     uv4_p2k.r == u_vff            //////     // [317]
                &&     (uv4_p2k.g >> u_6 )==( u_ro4 ) //////     // [344]
                ){                                    //////     // [317]
                                                      //////     // [317]
                    u_to4 =( u_to4 | c_to4_bot );     //////     // [317]
                };;                                   //////     // [317]
            };;                                       //////     // [317]
                                                      //////     // [317]
            };; //:________________________:V___V___V://         // [317]
            //:======================================://         // [317]
                                                      //////     // [317]
        }                                             //////     // [317]
        #undef  B_0       //:- - - - - -------- - - - - -://     // [317]
        #undef  B_1       //:- - - - - -------- - - - - -://     // [317]
        #undef  HOR       //:- - - - - -------- - - - - -://     // [317]
        #undef  VER       //:- - - - - -------- - - - - -://     // [317]
        //:---------------------:#_TOUCHING_VALUE_#:[317]://     // [317]
        //:---------------------:#_USE__AM4__ONN__#:[317]://     // [317]
        //:#_DISCRETE_INTERNAL_LOCAL_#:[320]:============://     // [320]
                                                                 // [320]
            //: #_DIL_IS_CALCULATED_IN_THE_LOOP_# ://            // [320]
            //: SEARCH_FOR_VARIABLE[ u_dil ]ABOVE ://            // [320]
                                                                 // [320]
        //:============:#_DISCRETE_INTERNAL_LOCAL_#:[320]://     // [320]
        //:#_DISCRETE_INTERNAL_MIRRORED_#:[329]:=========://     // [329]
        #define VFF_AM4_BIT_M_X (U32(${c_vff_mirrors_hor}))      // [329]
        #define VFF_AM4_BIT_M_Y (U32(${c_vff_mirrors_ver}))      // [329]
                                                                 // [329]
            //: #_DONE_SOME_TYPE_OF_TOUCHING_MIRROR_# ://        // [330][329]
                                                                 // [329]
            u_dim = u_dil ;                                      // [329]
                                                                 // [329]
            if( u_0 != ( u_vff & VFF_AM4_BIT_M_X ) ){            // [329]
                                                                 // [329]
                u_dim.x =( (u_dun - u_1) - u_dil.x );            // [329]
                                                                 // [---]
                u_to4 =( d_tog_m_x_to4_to4[ u_to4 ] );           // [330]
                                                                 // [330]
                //- u_to4 ^=U32(${c_to4_tog_m_x}) ); -//         // [330]
                                                                 // [---]
            };;                                                  // [329]
            if( u_0 != ( u_vff & VFF_AM4_BIT_M_Y ) ){            // [329]
                                                                 // [329]
                u_dim.y =( (u_dun - u_1) - u_dil.y );            // [329]
                                                                 // [---]
                u_to4 =( d_tog_m_y_to4_to4[ u_to4 ] );           // [330]
                                                                 // [330]
                //- u_to4 ^=U32(${c_to4_tog_m_y}) ); -//         // [330]
                                                                 // [---]
            };;                                                  // [329]
                                                                 // [329]
        #undef  VFF_AM4_BIT_M_X  //:---------------------://     // [329]
        #undef  VFF_AM4_BIT_M_Y  //:---------------------://     // [329]
        //:=========:#_DISCRETE_INTERNAL_MIRRORED_#:[329]://     // [329]
        //:#_DISCRETE_INTERNAL_ROTATED_#:[342]:==========://     // [342]
                                                                 // [342]
            UV2 u_dir = u_dim ;  //:@dir@:DiscreteInternalRot:// // [342]
            U32 u_to2_x ;                                        // [342]
            U32 u_to2_y ;                                        // [342]
                                                                 // [342]
            if( u_0 == u_ro4 ){                                  // [342]
                                                                 // [342]
                u_to2_x = d_rotclok_000_r_x_to4_to2[ u_to4 ];    // [342]
                u_to2_y = d_rotclok_000_r_y_to4_to2[ u_to4 ];    // [342]
                                                                 // [---]
                //: @COUNTER_CLOCKWISE_INTERNAL_ROT@ ://         // [343]
                //:  (x,y) ==> (x,y)                 ://         // [343]
                //:  TAG[ PX_PY__TO__PX_PY ](CCW_000)://         // [343]
                                                                 // [343]
                u_dir.x =( u_dim.x );                            // [343]
                u_dir.y =( u_dim.y );                            // [343]
                                                                 // [---]
            }else                                                // [342]
            if( u_1 == u_ro4 ){                                  // [342]
                                                                 // [342]
                u_to2_x = d_rotclok_090_r_x_to4_to2[ u_to4 ];    // [342]
                u_to2_y = d_rotclok_090_r_y_to4_to2[ u_to4 ];    // [342]
                                                                 // [---]
                //: @COUNTER_CLOCKWISE_INTERNAL_ROT@ ://         // [343]
                //:  (x,y) ==> (-y,x)                ://         // [343]
                //:  TAG[ PX_PY__TO__NY_PX ](CCW_090)://         // [343]
                                                                 // [343]
                u_dir.x =( u_dun - u_1 - u_dim.y );              // [343]
                u_dir.y =(               u_dim.x );              // [343]
                                                                 // [---]
            }else                                                // [342]
            if( u_2 == u_ro4 ){                                  // [342]
                                                                 // [342]
                u_to2_x = d_rotclok_180_r_x_to4_to2[ u_to4 ];    // [342]
                u_to2_y = d_rotclok_180_r_y_to4_to2[ u_to4 ];    // [342]
                                                                 // [---]
                //: @COUNTER_CLOCKWISE_INTERNAL_ROT@ ://         // [343]
                //:  (x,y) ==> (−x,−y)               ://         // [343]
                //:  TAG[ PX_PY__TO__NX_NY ](CCW_180)://         // [343]
                                                                 // [343]
                u_dir.x =( u_dun - u_1 - u_dim.x );              // [343]
                u_dir.y =( u_dun - u_1 - u_dim.y );              // [343]
                                                                 // [---]
            }else                                                // [342]
            if( u_3 == u_ro4 ){                                  // [342]
                                                                 // [342]
                u_to2_x = d_rotclok_270_r_x_to4_to2[ u_to4 ];    // [342]
                u_to2_y = d_rotclok_270_r_y_to4_to2[ u_to4 ];    // [342]
                                                                 // [---]
                //: @COUNTER_CLOCKWISE_INTERNAL_ROT@ ://         // [343]
                //:  (x,y) ==> (y,−x)                ://         // [343]
                //:  TAG[ PX_PY__TO__PY_NX ](CCW_270)://         // [343]
                                                                 // [343]
                u_dir.x =(               u_dim.y  );             // [343]
                u_dir.y =( u_dun - u_1 - u_dim.x  );             // [343]
                                                                 // [---]
            };;                                                  // [342]
                                                                 // [342]
            u_to4 =(  u_0  /////////                             // [342]
            |   ( u_to2_x << 2 )                                 // [342]
            |   ( u_to2_y << 0 )                                 // [342]
            );;;;;;;;;;;;;;;;;;;;;;;                             // [342]
                                                                 // [342]
        //:==========:#_DISCRETE_INTERNAL_ROTATED_#:[342]://     // [342]
        //:#_RENDER_SFMT:DEBU_#:[315]:===================://     // [315][312]
        #if( FRAGBUG_001 >= 1 ) //:#################[313]://     // [315][MOV][313]
                                                                 // [---]
            //: TODO: Rainbow_Auto_Tile_Debug :::::::::::://     // [317]
                                                                 // [---]
            //- u_v16 =( u_bintile >> 28 )&(U32(0xF)); - -//     // [315][313]
                                                                 // [313]
            //:#_DEBUG_COLOR_PALLET_#:[313]:-------------://     // [313]
            //:                        TAG[ tile_pallet ]://     // [313]
            #define _0_ ( 0.00 )    //:#############[313]://     // [313]
            #define _1_ ( 0.25 )    //:#############[313]://     // [313]
            #define _2_ ( 0.70 )    //:#############[313]://     // [313]
            #define _3_ ( 0.90 )    //:#############[313]://     // [313]
            #define _4_ ( 1.00 )    //:#############[313]://     // [313]
            #define _R_ ( 1.00 )    //:#############[313]://     // [313]
            #define _G_ ( 1.00 )    //:#############[313]://     // [313]
            #define _B_ ( 1.00 )    //:#############[313]://     // [313]
            #define _A_ ( 1.00 )    //:#############[313]://     // [313]
            {                                                    // [313]
                //:TODO: USE[ #_V16_HEX_# ]DebugColors:::://     // [313]
                                                                 // [313]
                f_out =( u_00 == u_v16 ? (   f_out  ) :          // [313]
                ////                                             // [313]
                    u_01 == u_v16 ? FV4(_R_, 0 ,_0_,_A_) :       // [313]
                    u_02 == u_v16 ? FV4(_R_, 0 ,_1_,_A_) :       // [313]
                    u_03 == u_v16 ? FV4(_R_, 0 ,_2_,_A_) :       // [313]
                    u_04 == u_v16 ? FV4(_R_, 0 ,_3_,_A_) :       // [313]
                    u_05 == u_v16 ? FV4(_R_, 0 ,_4_,_A_) :       // [313]
                ////                                             // [313]
                    u_06 == u_v16 ? FV4(_0_,_G_, 0 ,_A_) :       // [313]
                    u_07 == u_v16 ? FV4(_1_,_G_, 0 ,_A_) :       // [313]
                    u_08 == u_v16 ? FV4(_2_,_G_, 0 ,_A_) :       // [313]
                    u_09 == u_v16 ? FV4(_3_,_G_, 0 ,_A_) :       // [313]
                    u_10 == u_v16 ? FV4(_4_,_G_, 0 ,_A_) :       // [313]
                ////                                             // [313]
                    u_11 == u_v16 ? FV4( 0 ,_0_,_B_,_A_) :       // [313]
                    u_12 == u_v16 ? FV4( 0 ,_1_,_B_,_A_) :       // [313]
                    u_13 == u_v16 ? FV4( 0 ,_2_,_B_,_A_) :       // [313]
                    u_14 == u_v16 ? FV4( 0 ,_3_,_B_,_A_) :       // [313]
                    u_15 == u_v16 ? FV4( 0 ,_4_,_B_,_A_) :       // [313]
                ////                                             // [313]
                //  u16  == OUT_OF_FUCKING_BOUNDS_U16 //////     // [313]
                f_out );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [313]
                                                                 // [---]
                //:#_TINT_BY_LAYER_#:[313]:--------------://     // [---]
                #define rgb_0_2 FV4(FV3(0.2),1.0)   //:::://     // [314]
                #define rgb_0_5 FV4(FV3(0.5),1.0)   //:::://     // [313]
                #define rgb_0_7 FV4(FV3(0.7),1.0)   //:::://     // [314]
                #define rgb_1_0 FV4(FV3(1.0),1.0)   //:::://     // [313]
                #define rgb_1_5 FV4(FV3(1.5),1.0)   //:::://     // [313]
                #define rgb_1_8 FV4(FV3(1.8),1.0)   //:::://     // [314]
                #define add_0_5 FV4(FV3(0.5),0.0)   //:::://     // [314]
                if( u_0 != u_v16 ){                              // [313]
                                                                 // [313]
                    f_out =( u_0 == u_la3 ? f_out * rgb_0_2 :    // [320][314][313]
                             u_1 == u_la3 ? f_out - ( 0.0 ) :    // [314][313]
                             u_2 == u_la3 ? f_out + add_0_5 :    // [314][313]
                             FV4(1 , 0.5 , 0 ,1.0 )              // [313]
                    );;                                          // [313]
                };;                                              // [313]
                #undef  rgb_0_2  //:::::::::::::::::[314]://     // [314]
                #undef  rgb_0_5  //:::::::::::::::::[313]://     // [313]
                #undef  rgb_0_7  //:::::::::::::::::[314]://     // [314]
                #undef  rgb_1_0  //:::::::::::::::::[313]://     // [313]
                #undef  rgb_1_5  //:::::::::::::::::[313]://     // [313]
                #undef  rgb_1_8  //:::::::::::::::::[314]://     // [314]
                #undef  add_0_5  //:::::::::::::::::[314]://     // [314]
                //:--------------:#_TINT_BY_LAYER_#:[313]://     // [---]
                //:#_8X4_CAPPER_GRAPHICS_#:[328]:--------://     // [328]
                if( u_0 != u_v16 )                               // [328]
                {                                                // [328]
                                                                 // [328]
                    U32 u_8th =( u_dun            / u_8   );     // [328]
                    U32 u_i8x =( u_dir.x          / u_8th );     // [343][329][328]
                    U32 u_i8y =( u_dir.y          / u_8th );     // [343][329][328]
                    U32 u_i8i =( u_i8x +  ( u_i8y * u_8 ) );     // [328]
                                                                 // [328]
                    U32 u_h02 =( u_i8y / u_4 );                  // [328]
                    U32 u_8x4 =( d_to4_h02_8x4[ u_00             // [328]
                                                                 // [328]
                    +   (u_to4*u_2)//: Seek_To_Pair :::::://     // [328]
                    +   (u_h02    )//: Select_Top_Or_Bot ://     // [328]
                                                                 // [328]
                    ]);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [328]
                                                                 // [328]
                    U32 u_nbi =(( u_i8i -( u_h02 * u_32 )));     // [328]
                    U32 u_abi =(( u_32 - u_01 - u_nbi    ));     // [328]
                    U32 u_v02 =(( u_8x4 >> u_abi )&( u_1 ));     // [328]
                                                                 // [---]
                    //: #_THE_FUN_GOT_TOO_COMPLEX_# :::::://     // [345]
                                                                 // [---]
                    if( u_1 == u_v02 ){                          // [328]
                                                                 // [328]
                        //: Color Shift And Brighten ://         // [328]
                                                                 // [328]
                        f_out.r +=( f_out.g + 0.25 );            // [328]
                        f_out.g +=( f_out.b + 0.25 );            // [328]
                        f_out.b +=( f_out.r + 0.25 );            // [328]
                                                                 // [---]
                        //:#_ANIGLOW_#:[345]:------------://     // [345]
                        f_out.g =max(                            // [345]
                            f_out.g                              // [345]
                        ,   cos(F32(d_tik)/16.0)                 // [345]
                        );;                                      // [345]
                        //:------------:#_ANIGLOW_#:[345]://     // [345]
                                                                 // [---]
                    };;                                          // [328]
                }                                                // [328]
                //:--------:#_8X4_CAPPER_GRAPHICS_#:[328]://     // [328]
                //:#_4X4_GRAPHICS_TINT_#:[320]:----------://     // [320]
                #define ABI_EDG ( (u_32-u_01) - u_i4i )          // [320]
                #define ABI_LIG ( (u_16-u_01) - u_i4i )          // [320]
                if( u_0 != u_v16 )                               // [320]
                {                                                // [320]
                    //: #_U_TO4_ALWAYS_ZERO_FOR_NOW_#    ://     // [320]
                    U32 u_4x4 = d_to4_4x4[ u_to4 ]; //:FIX005:// // [322][320]
                                                                 // [320]
                    U32 u_4th = u_dun / u_4 ;                    // [320]
                    U32 u_i4x =( u_dir.x / u_4th );              // [343][330][320]
                    U32 u_i4y =( u_dir.y / u_4th );              // [343][330][320]
                    U32 u_i4i =( u_i4x + ( u_i4y * u_4 ) );      // [320]
                                                                 // [320]
                                                                 // [320]
                    //: #_U_V04_IS_CORRECT_# :---------------:// // [320]
                    //: u_4x4 =( U32( 0xF99FFFCC )       );  :// // [320]
                    //: u_4x4 =( U32( ${c_4x4_dtm_000} ) );  :// // [320]
                    //:---------------: #_U_V04_IS_CORRECT_# :// // [320]
                                                                 // [320]
                    U32 u_v04 =( u_0                             // [320]
                    |(( u_4x4 >>( ABI_EDG -u_1 ) )&( u_2 ))      // [320]
                    |(( u_4x4 >>( ABI_LIG -u_0 ) )&( u_1 ))      // [320]
                    );;                                          // [320]
                                                                 // [320]
                    F32 f_mul =( d_v04_mul[ u_v04 ] );           // [320]
                                                                 // [320]
                                                                 // [320]
                    //: 100% Sure This Line Is Correct   ://     // [320]
                    f_out.rgb =( f_out.rgb * f_mul  );           // [320]
                                                                 // [320]
                }                                                // [320]
                #undef  ABI_EDG  //:---------------------://     // [320]
                #undef  ABI_LIG  //:---------------------://     // [320]
                //:----------:#_4X4_GRAPHICS_TINT_#:[320]://     // [320]
                                                                 // [---]
            }                                                    // [313]
            #undef  _0_             //:#############[313]://     // [313]
            #undef  _1_             //:#############[313]://     // [313]
            #undef  _2_             //:#############[313]://     // [313]
            #undef  _3_             //:#############[313]://     // [313]
            #undef  _4_             //:#############[313]://     // [313]
            #undef  _R_             //:#############[313]://     // [313]
            #undef  _G_             //:#############[313]://     // [313]
            #undef  _B_             //:#############[313]://     // [313]
            #undef  _A_             //:#############[313]://     // [313]
            //:-------------:#_DEBUG_COLOR_PALLET_#:[313]://     // [313]
                                                                 // [---]
        #endif //:##################################[313]://     // [315][MOV][313]
        //:===================:#_RENDER_SFMT:DEBU_#:[315]://     // [315][312]
        //:#_RENDER_SFMT:PROD_#:[315]:===================://     // [315]
        #if( FRAGBUG_001 <= 0 ) //:#################[315]://     // [315]

            //: NEXT_VIDEO_PROBABLY: #3_1_6 :::::::::::::://     // [315]

        #endif //:#################################:[315]://     // [315]
        //:===================:#_RENDER_SFMT:PROD_#:[315]://     // [315]
        //:#_THE_FINAL_FRAG_TIER_#:[284]:----------------://     // [284]
                                                                 // [284]
            if( u_1  ==( (u_boo >> b_lbd) & u_1 ) ){             // [284]
                                                                 // [284]
                f_out =( FV4_LBBLACK );                          // [312][284]
            }else{                                               // [284]
                f_out =(       f_out );    //: @NONVOID@ ://     // [312][284][074]
            };;                                                  // [284]
        //:------------------:_THE_FINAL_FRAG_TIER_:[284]://     // [284]
    }   //:BEG_END_FUN[ main ]:::::::::::::::::::::::::::://     // [284][074]
                                                                 //      
`));; ////////////////////////////////////////////////////////// // [069]
                                                                 // [---]
                                                                 // [---]
                                                                 // [---]
const d_artgirl_ssf_008 =( //: ShaderSourceFrag #08@ssf@[081]:// // [081]
//////////////////////////////////////////////////////////////// // [081]
(c_artgirl_wgl_tag+`                                             // [081]
                                                                 // [081]
    //: FRAG_SHADER_STR[ d_artgirl_ssf_008 ] ://                 // [081]
    //: FRAG_SHADER_ENU[ c_artgirl_ren_008 ] ://                 // [081]
                                                                 // [081]
    precision mediump float ;                                    // [081]
                                                                 // [081]
    in  vec2  i_o_tex ; //: @i_o_tex@ ://                        // [081]
    out vec4  out_f_c ; //: @out_f_c@ ://                        // [081]
                                                                 // [081]
    void main(){                                                 // [081]
                                                                 // [081]
        out_f_c = vec4( 0 , 1 , 1 , 1.0 ); //:CYAN://            // [081]
    }                                                            // [081]
                                                                 // [081]
`));; ////////////////////////////////////////////////////////// // [081]
const d_artgirl_ssf_009 =( //: ShaderSourceFrag #09@ssf@[081]://    [081]
//////////////////////////////////////////////////////////////// // [081]
(c_artgirl_wgl_tag+`                                             // [081]
                                                                 // [081]
    //: FRAG_SHADER_STR[ d_artgirl_ssf_009 ] ://                 // [081]
    //: FRAG_SHADER_ENU[ c_artgirl_ren_009 ] ://                 // [081]
                                                                 // [081]
    precision mediump float ;                                    // [081]
                                                                 // [081]
    in  vec2  i_o_tex ; //: @i_o_tex@ ://                        // [081]
    out vec4  out_f_c ; //: @out_f_c@ ://                        // [081]
                                                                 // [081]
    void main(){                                                 // [081]
                                                                 // [081]
        out_f_c = vec4( 0 , 1 , 1 , 1.0 ); //:CYAN://            // [081]
    }                                                            // [081]
                                                                 // [081]
`));; ////////////////////////////////////////////////////////// // [081]
                                                                 // [---]
                                                                 // [---]
                                                                 // [---]
                                                                 // [069]
//:=========================:__ARTGIRL__:SHADER_STRINGS:[074]:// // [---]
//:DATA_BY_SYSTEM:[063]:=====================================:// // [---]
                                                                 // [---]
if( /** __RGBA896__ **/ notnode ){    //::::::::::::::::::::::// // [471]
                                                                 // [471]
    //:SEE[ _ABOUT_RGBA896_ ]:::::::::::::::::::::::::::::::::// // [471]
                                                                 // [471]
    var d_rgba896 =( new Uint8Array( 4 * 896 * 896 )    );;;     // [471]
                                                                 // [471]
    ASS( 896 === (7*128) , "[896_SHOULD_EQUAL_7_X_128]" );;;     // [471]
                                                                 // [471]
};; //: __RGBA896__ ::: DATASEC ::: END ::::::::::::::::::::::// // [471]
if( /** __PIX2048__ **/ notnode ){                               // [---][185][MOV][156]
    /** __PIX0152__ <-- Not A Namespace **/                      // [---][185][MOV][156]
                                                                 // [---][185][MOV][156]
    var d_pix2048 = new Uint8Array( 4 * 2048 * 2048 );           // [---][185][MOV][156]
    //- d_pix0512 = new Uint8Array( 4 *  512 *  512 );  -//      // [288][185][MOV][156]
    //+ d_pix0512 <--NO, use[ d_mp0_512 ]OR[ d_mp1_512 ]+//      // [288][-------------]
                                                                 // [---][185][MOV][---]
    var d_pix2048_dir =( 0 /** Is pix2048 dirty? **/ );          // [---][185][MOV][183] 
                                                                 // [---]
    //:#_DIRTY_FLAG_OPTIMIZATION_DATA_#:[224]:---------------:// // [224]
                                                                 // [224]
        //: #_MASTER_MEMORY_HAS_TWO_MAIN_CATEGORIES_# ::::::::// // [224]
        var d_pix2048_dir_mem_dum =( 0 ); //:DirtyHotelCells :// // [224]
        var d_pix2048_dir_mem_e_e =( 0 ); //:EverythingElse  :// // [224]
                                                                 // [224]
        //:#_4X4_GRID_OF_16_BIT_FLAGS_INSTEAD_#://               // [224]
        var d_pix2048_dir_mem_mmi = new Uint16Array([            // [224]
                                                                 // [224]
            0x00 , 0x00 , 0x00 , 0x00 //: mmi@[  0, 1, 2, 3 ]:// // [224]
        ,   0x00 , 0x00 , 0x00 , 0x00 //: mmi@[  4, 5, 6, 7 ]:// // [224]
        ,   0x00 , 0x00 , 0x00 , 0x00 //: mmi@[  8, 9,10,11 ]:// // [224]
        ,   0x00 , 0x00 , 0x00 , 0x00 //: mmi@[ 12,13,14,15 ]:// // [224]
                                      //: SEE[#_DMM_ZEROED_#]:// // [232][224]
        ]);;                                                     // [224]
        //:#_DIRTY_128_RECTS_ARE_CLUSTERED_#://                  // [224]
        var d_pix2048_dir_mem_arr =new Uint32Array(              // [224]
            ( 1 )                                                // [224]
        *   (4*4)  //: We have 256 128x128 dirty regions.  ://   // [224]
        *   (4*4)  //: AKA: 16x16 grid of 128x128 cells.   ://   // [224]
        *   ( 4 )  //: ( TimesFour(*4)for[x_0,x_1,y_0,y_1] ://   // [224]
        );;                                                      // [224]
        let mem_arr = d_pix2048_dir_mem_arr ;                    // [224]
        ASS( mem_arr.length === (256*4),"[MEMARR]");             // [224]
                                                                 // [224]
        var d_pix2048_dum_mmi = "[@EXTRALUT@]" ; //:@dum_mmi@:// // [224]
        var d_pix2048_dum_mmx = "[@EXTRALUT@]" ; //:@dum_mmx@:// // [224]
        var d_pix2048_dum_mmy = "[@EXTRALUT@]" ; //:@dum_mmy@:// // [224]
        var d_pix2048_e_e_mmi = "[@EXTRALUT@]" ; //:@e_e_mmi@:// // [224]
        var d_pix2048_e_e_mmx = "[@EXTRALUT@]" ; //:@e_e_mmx@:// // [224]
        var d_pix2048_e_e_mmy = "[@EXTRALUT@]" ; //:@e_e_mmy@:// // [224]
                                                                 // [224]
    //:---------------:#_DIRTY_FLAG_OPTIMIZATION_DATA_#:[224]:// // [224]
                                                                 // [---]
};;                                                              // [---][185][MOV][156]
if( /** __PIXDUMP__ **/ notnode ){ //:::::::::::::::::::[464]:// // [464]
                                                                 // [464]
    var d_pixdump_elmhack_savebox_dsk = "[nil][p_e_s_d]" ;       // [466]
                                                                 // [464]
};; //: __PIXDUMP__ ::: DATASEC ::: END ::::::::::::::::[464]:// // [464]
if( /** __GPUDATA__ **/ notnode ){                               // [226]
                                                                 // [---]
    //: THIS_IS_THE_DATA_SECTION_NOT_THE_CONSTANT_SECTION ://    // [227]
                                                                 // [---]
    var d_gpudata_wgl     = "[nil][d_gpudata_wgl]"     ;         // [228]
                                                                 // [---]
    var d_gpudata_p2k_tex = "[nil][d_gpudata_p2k_tex]" ;         // [229]
                                                                 // [---]
};;                                                              // [226][-------------]
if( /** __GPUSYNC__ **/ notnode ){                               // [226][-------------]
                                                                 // [226][-------------]
    /** NOTHING_HERE_YET / NO_DATA_HERE_YET **/                  // [226][-------------]
                                                                 // [226][-------------]
};; //: __GPUSYNC__ ::: DATASEC ::: END ::::::::::::::::::::::// // [361][226][--------]
if( /** __HARDTEX__ **/ notnode ){  //::::::::::::::::::::::::// // [402]
                                                                 // [402]
    /** NOTHING_HERE_YET / NO_DATA_HERE_YET **/                  // [402]
                                                                 // [402]
};; //: __HARDTEX__ ::: DATASEC ::: END ::::::::::::::::::::::// // [402]
if( /** __FILE896__ **/ notnode ){    //::::::::::::::::::::::// // [471]
                                                                 // [471]
    /** NOTHING_HERE_IN_PREVIEWABLE_FILE_FORMAT_GLOBALS **/      // [471]
                                                                 // [471]
};; //: __FILE896__ ::: DATASEC ::: END ::::::::::::::::::::::// // [471]
if( /** __FILEMOB__ **/ notnode ){  //::::::::::::::::::::::::// // [---][361][---][---]
                                                                 // [------------------]
    //:#_HACKISH_ONE_TASK_SYSTEM_#:[384]:----------------://     // [---][384]
                                                                 // [---][384]
        var d_filemob_taskill =( 0 );  //: KILL_THE_TASK?://     // [391][---]
        var d_filemob_taskhas =( 0 );  //: Task__Exists? ://     // [---][384]
        var d_filemob_taskenu =( 0 );  //: Task_____Enum ://     // [---][384]
        var d_filemob_taskiod =(0-1);  //: Index_Of_Done ://     // [---][384]
        var d_filemob_tasknos =(new Uint8Array([                 // [---][384]
        ////                                                     // [---][384]
            c_filemob_tasknos_invalid                            // [---][384]
        ////                                                     // [---][384]
        ,   c_filemob_tasknos_loadbox_dsk                        // [---][384]
        ,   c_filemob_tasknos_savebox_dsk                        // [393]
        ]));;                                                    // [---][384]
        var d_filemob_cankill =(new Uint8Array([                 // [392]
                                                                 // [392]
            c_filemob_cankill_invalid                            // [392]
        ,   c_filemob_cankill_loadbox_dsk                        // [392]
        ,   c_filemob_cankill_savebox_dsk                        // [393]
        ]));;                                                    // [392]
                                                                 // [---][384]
        //:#_TASK_SPECIFIC_DATA_#:[386]:-----------------://     // [386][---]

            //:TAG[ re-entrant-struct ]::::::::::::::::::://     // [398]
                                                                 // [398]
            var d_filemob_taskdat_savebox_dsk =({ laxcoma:0      // [398]
                                                                 // [398]
            ,   hotel13_pngfile : "[nil][png_h13]"               // [398]
            ,   pngblob         : "[nil][pngblob]"               // [398]
            ,   png_url         : "[nil][png_url]"               // [398]
            ,   png_url_cou     : "[nil][png_url_cou]"           // [399]
                                                                 // [398]
            });;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [398]
                                                                 // [---][---]
            var d_filemob_taskdat_loadbox_dsk =({ laxcoma:0      // [386][---]
                                                                 // [386][---]
            ,   pngbarr : "[nil][.PNG_Binary_Data]"              // [386][---]
            
            ,   pikfile : "[nil][File_Picked?]"                  // [387]
            ,   spinlok : "[nil][ThatSpinLock]"                  // [387]

            ,       f_r : "[nil][File_Reader]"                   // [388]
            ,   arr_buf : "[nil][ArrayBuffer]"                   // [388]
                                                                  
            ,   binarra : "[nil][@F_K_A@:i_binarra]"             // [386][---]
            ,   binanub : "[nil][@F_K_A@:i_binanub]"             // [386][---]
            ,   pixarra : "[nil][@F_K_A@:o_pixarra]"             // [386][---]
            ,   pixanub : "[nil][@F_K_A@:o_pixanub]"             // [386][---]
            });;                                                 // [386][---]
                                                                 // [386][---]
        //:-----------------:#_TASK_SPECIFIC_DATA_#:[386]://     // [386][---]
        //:#_ERROR_CHECK_TASKNOS_TABLE_#:[384]:----------://     // [---][384]
        {                                                        // [---][384]
            let  n_o_s = d_filemob_tasknos ;                     // [---][384]
                                                                 // [---][384]
            if( n_o_s[ c_filemob_taskenu_invalid ]               // [---][384]
                   !== c_filemob_tasknos_invalid                 // [---][384]
            ){                                                   // [---][384]
                let batmans =(                                   // [---][384]
                    n_o_s[c_filemob_taskenu_invalid] );;         // [---][384]
                LOG("[batmans]:" , batmans );                    // [---][384]
                ERR("[I_HAVE_BAD_NEWS_ABOUT_YOUR_PARENTS]");     // [---][384]
            };;                                                  // [---][384]
                                                                 // [---][384]
            ASS( n_o_s[ c_filemob_taskenu_loadbox_dsk ]          // [---][384]
                    === c_filemob_tasknos_loadbox_dsk            // [---][384]
                    , "[NUMBER_OF_STEPS:::loadbox_dsk]" );;      // [---][384]
        }                                                        // [---][384]
        //:----------:#_ERROR_CHECK_TASKNOS_TABLE_#:[384]://     // [---][384]
                                                                 // [---][384]
    //:----------------:#_HACKISH_ONE_TASK_SYSTEM_#:[384]://     // [---][384]
                                                                 // [---][---]
    var d_filemob_elmhack_loadbox_dsk =( "[nil][ehack01]" );     // [381][DAO][380][---]
    var d_filemob_elmhack_savebox_dsk =( "[nil][ehack02]" );     // [381][DAO][380][---]
                                                                 // [---][361][---][---]
};; //: __FILEMOB__ ::: DATASEC ::: END ::::::::::::::::::::::// // [---][361][---][---]
if( /** __TILEBOI__ **/ notnode ){                               // [---][185][MOV][156]
                                                                 // [---][185][MOV][156]
    /** NO_DATA_HERE_YET **/                                     // [---][185][MOV][156]
};; //: __TILEBOI__ ::: DATASEC ::: END ::::::::::::::::::::::// // [361][185][MOV][156]
if( /** __BINFONT__ **/ notnode ){                               // [---][207][--------]
                                                                 // [---]
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::// // [208]
    //:                                                      :// // [208]
    //:  A lot of empty slots here. But I [figure/think]:    :// // [208]
    //:                                                      :// // [208]
    //:     1. Can use REAL ascii values. No weird           :// // [208]
    //:        conversion when loading text to render.       :// // [208]
    //:                                                      :// // [208]
    //:     2. Can sell extended ascii symbol slots to       :// // [208]
    //:        people who can put their own patterns in      :// // [208]
    //:        them. Which will then forever be part         :// // [208]
    //:        of this code base.                            :// // [208]
    //:                                                      :// // [208]
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::// // [208]
                                                                 // [208]
    d_binfont_lut = new Uint32Array([ //:BEG[ d_binfont_lut ]:// // [208]
                                                                 // [208]
        c_bin_lef_nil , c_bin_rig_nil //: ASC_000 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_001 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_002 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_003 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_004 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_005 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_006 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_007 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_008 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_009 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_010 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_011 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_012 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_013 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_014 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_015 - ________ :// // [208]
                                                                 // [208]
    //////////////////////////////////////////////////////////// // [208]
                                                                 // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_016 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_017 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_018 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_019 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_020 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_021 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_022 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_023 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_024 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_025 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_026 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_027 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_028 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_029 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_030 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_031 - ________ :// // [208]
                                                                 // [208]
    //////////////////////////////////////////////////////////// // [208]
                                                                 // [208]
    ,   c_bin_lef_spc , c_bin_rig_spc //: ASC_032 - ASC_SPC  :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_033 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_034 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_035 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_036 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_037 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_038 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_039 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_040 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_041 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_042 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_043 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_044 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_045 - ________ :// // [208]
    ,   c_bin_lef_dot , c_bin_rig_dot //: ASC_046 - ASC_DOT  :// // [208]
    ,   c_bin_lef_f_s , c_bin_rig_f_s //: ASC_047 - ASC_F_S  :// // [208]
                                                                 // [208]
    //////////////////////////////////////////////////////////// // [208]
                                                                 // [208]
    ,   c_bin_lef_0   , c_bin_rig_0   //: ASC_048 - "0"/[0]  :// // [208]
    ,   c_bin_lef_1   , c_bin_rig_1   //: ASC_049 - "1"/[1]  :// // [208]
    ,   c_bin_lef_2   , c_bin_rig_2   //: ASC_050 - "2"/[2]  :// // [208]
    ,   c_bin_lef_3   , c_bin_rig_3   //: ASC_051 - "3"/[3]  :// // [208]
    ,   c_bin_lef_4   , c_bin_rig_4   //: ASC_052 - "4"/[4]  :// // [208]
    ,   c_bin_lef_5   , c_bin_rig_5   //: ASC_053 - "5"/[5]  :// // [208]
    ,   c_bin_lef_6   , c_bin_rig_6   //: ASC_054 - "6"/[6]  :// // [208]
    ,   c_bin_lef_7   , c_bin_rig_7   //: ASC_055 - "7"/[7]  :// // [208]
    ,   c_bin_lef_8   , c_bin_rig_8   //: ASC_056 - "8"/[8]  :// // [208]
    ,   c_bin_lef_9   , c_bin_rig_9   //: ASC_057 - "9"/[9]  :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_058 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_059 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_060 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_061 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_062 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_063 - ________ :// // [208]
                                                                 // [208]
    //////////////////////////////////////////////////////////// // [208]
                                                                 // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_064 - ________ :// // [208]
    ,   c_bin_luc_a   , c_bin_ruc_a   //: ASC_065 - "A"/[A]  :// // [208]
    ,   c_bin_luc_b   , c_bin_ruc_b   //: ASC_066 - "B"/[B]  :// // [208]
    ,   c_bin_luc_c   , c_bin_ruc_c   //: ASC_067 - "C"/[C]  :// // [208]
    ,   c_bin_luc_d   , c_bin_ruc_d   //: ASC_068 - "D"/[D]  :// // [208]
    ,   c_bin_luc_e   , c_bin_ruc_e   //: ASC_069 - "E"/[E]  :// // [208]
    ,   c_bin_luc_f   , c_bin_ruc_f   //: ASC_070 - "F"/[F]  :// // [208]
    ,   c_bin_luc_g   , c_bin_ruc_g   //: ASC_071 - "G"/[G]  :// // [208]
    ,   c_bin_luc_h   , c_bin_ruc_h   //: ASC_072 - "H"/[H]  :// // [208]
    ,   c_bin_luc_i   , c_bin_ruc_i   //: ASC_073 - "I"/[I]  :// // [208]
    ,   c_bin_luc_j   , c_bin_ruc_j   //: ASC_074 - "J"/[J]  :// // [208]
    ,   c_bin_luc_k   , c_bin_ruc_k   //: ASC_075 - "K"/[K]  :// // [208]
    ,   c_bin_luc_l   , c_bin_ruc_l   //: ASC_076 - "L"/[L]  :// // [208]
    ,   c_bin_luc_m   , c_bin_ruc_m   //: ASC_077 - "M"/[M]  :// // [208]
    ,   c_bin_luc_n   , c_bin_ruc_n   //: ASC_078 - "N"/[N]  :// // [208]
    ,   c_bin_luc_o   , c_bin_ruc_o   //: ASC_079 - "O"/[O]  :// // [208]
                                                                 // [208]
    //////////////////////////////////////////////////////////// // [208]
                                                                 // [208]
    ,   c_bin_luc_p   , c_bin_ruc_p   //: ASC_080 - "P"/[P]  :// // [208]
    ,   c_bin_luc_q   , c_bin_ruc_q   //: ASC_081 - "Q"/[Q]  :// // [208]
    ,   c_bin_luc_r   , c_bin_ruc_r   //: ASC_082 - "R"/[R]  :// // [208]
    ,   c_bin_luc_s   , c_bin_ruc_s   //: ASC_083 - "S"/[S]  :// // [208]
    ,   c_bin_luc_t   , c_bin_ruc_t   //: ASC_084 - "T"/[T]  :// // [208]
    ,   c_bin_luc_u   , c_bin_ruc_u   //: ASC_085 - "U"/[U]  :// // [208]
    ,   c_bin_luc_v   , c_bin_ruc_v   //: ASC_086 - "V"/[V]  :// // [208]
    ,   c_bin_luc_w   , c_bin_ruc_w   //: ASC_087 - "W"/[W]  :// // [208]
    ,   c_bin_luc_x   , c_bin_ruc_x   //: ASC_088 - "X"/[X]  :// // [208]
    ,   c_bin_luc_y   , c_bin_ruc_y   //: ASC_089 - "Y"/[Y]  :// // [208]
    ,   c_bin_luc_z   , c_bin_ruc_z   //: ASC_090 - "Z"/[Z]  :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_091 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_092 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_093 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_094 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_095 - ________ :// // [208]
                                                                 // [208]
    //////////////////////////////////////////////////////////// // [208]
                                                                 // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_096 - ________ :// // [208]
    ,   c_bin_llc_a   , c_bin_rlc_a   //: ASC_097 - "a"/[a]  :// // [208]
    ,   c_bin_llc_b   , c_bin_rlc_b   //: ASC_098 - "b"/[b]  :// // [208]
    ,   c_bin_llc_c   , c_bin_rlc_c   //: ASC_099 - "c"/[c]  :// // [208]
    ,   c_bin_llc_d   , c_bin_rlc_d   //: ASC_100 - "d"/[d]  :// // [208]
    ,   c_bin_llc_e   , c_bin_rlc_e   //: ASC_101 - "e"/[e]  :// // [208]
    ,   c_bin_llc_f   , c_bin_rlc_f   //: ASC_102 - "f"/[f]  :// // [208]
    ,   c_bin_llc_g   , c_bin_rlc_g   //: ASC_103 - "g"/[g]  :// // [208]
    ,   c_bin_llc_h   , c_bin_rlc_h   //: ASC_104 - "h"/[h]  :// // [208]
    ,   c_bin_llc_i   , c_bin_rlc_i   //: ASC_105 - "i"/[i]  :// // [208]
    ,   c_bin_llc_j   , c_bin_rlc_j   //: ASC_106 - "j"/[j]  :// // [208]
    ,   c_bin_llc_k   , c_bin_rlc_k   //: ASC_107 - "k"/[k]  :// // [208]
    ,   c_bin_llc_l   , c_bin_rlc_l   //: ASC_108 - "l"/[l]  :// // [208]
    ,   c_bin_llc_m   , c_bin_rlc_m   //: ASC_109 - "m"/[m]  :// // [208]
    ,   c_bin_llc_n   , c_bin_rlc_n   //: ASC_110 - "n"/[n]  :// // [208]
    ,   c_bin_llc_o   , c_bin_rlc_o   //: ASC_111 - "o"/[o]  :// // [208]
                                                                 // [208]
    //////////////////////////////////////////////////////////// // [208]
                                                                 // [208]
    ,   c_bin_llc_p   , c_bin_rlc_p   //: ASC_112 - "p"/[p]  :// // [208]
    ,   c_bin_llc_q   , c_bin_rlc_q   //: ASC_113 - "q"/[q]  :// // [208]
    ,   c_bin_llc_r   , c_bin_rlc_r   //: ASC_114 - "r"/[r]  :// // [208]
    ,   c_bin_llc_s   , c_bin_rlc_s   //: ASC_115 - "s"/[s]  :// // [208]
    ,   c_bin_llc_t   , c_bin_rlc_t   //: ASC_116 - "t"/[t]  :// // [208]
    ,   c_bin_llc_u   , c_bin_rlc_u   //: ASC_117 - "u"/[u]  :// // [208]
    ,   c_bin_llc_v   , c_bin_rlc_v   //: ASC_118 - "v"/[v]  :// // [208]
    ,   c_bin_llc_w   , c_bin_rlc_w   //: ASC_119 - "w"/[w]  :// // [208]
    ,   c_bin_llc_x   , c_bin_rlc_x   //: ASC_120 - "x"/[x]  :// // [208]
    ,   c_bin_llc_y   , c_bin_rlc_y   //: ASC_121 - "y"/[y]  :// // [208]
    ,   c_bin_llc_z   , c_bin_rlc_z   //: ASC_122 - "z"/[z]  :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_123 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_124 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_125 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_126 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_127 - ________ :// // [208]
                                                                 // [208]
    //:!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!:// // [208]
    //:!                                                    !:// // [208]
    //:!   EXTENDED ASCII FOR SALE! I don't know how much   !:// // [208]
    //:!   I will charge yet. But for a fee you can         !:// // [208]
    //:!   design your own 8x8 glyph that will forever      !:// // [208]
    //:!   be in the source code of the game. And when      !:// // [208]
    //:!   someone uses that ascii tile value, it will      !:// // [208]
    //:!   be your image. There are 128 extended ascii      !:// // [208]
    //:!   codes. So they are in limited supply.            !:// // [208]
    //:!                                                    !:// // [208]
    //:!   Could be a fun kickstarter.                      !:// // [208]
    //:!                                                    !:// // [208]
    //:!   -KanjiCoder , 2022_08_28 ( Year 2022 A.D.       )!:// // [208]
    //:!                 2022.08.28 ( Sunday , August 28th )!:// // [208]
    //:!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!:// // [208]
                                                                 // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_128 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_129 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_130 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_131 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_132 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_133 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_134 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_135 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_136 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_137 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_138 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_139 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_140 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_141 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_142 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_143 - ________ :// // [208]
                                                                 // [208]
    //////////////////////////////////////////////////////////// // [208]
                                                                 // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_144 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_145 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_146 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_147 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_148 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_149 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_150 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_151 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_152 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_153 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_154 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_155 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_156 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_157 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_158 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_159 - ________ :// // [208]
                                                                 // [208]
    //////////////////////////////////////////////////////////// // [208]
                                                                 // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_160 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_161 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_162 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_163 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_164 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_165 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_166 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_167 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_168 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_169 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_170 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_171 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_172 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_173 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_174 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_175 - ________ :// // [208]
                                                                 // [208]
    //////////////////////////////////////////////////////////// // [208]
                                                                 // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_176 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_177 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_178 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_179 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_180 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_181 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_182 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_183 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_184 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_185 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_186 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_187 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_188 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_189 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_190 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_191 - ________ :// // [208]
                                                                 // [208]
    //////////////////////////////////////////////////////////// // [208]
                                                                 // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_192 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_193 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_194 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_195 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_196 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_197 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_198 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_199 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_200 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_201 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_202 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_203 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_204 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_205 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_206 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_207 - ________ :// // [208]
                                                                 // [208]
    //////////////////////////////////////////////////////////// // [208]
                                                                 // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_208 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_209 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_210 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_211 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_212 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_213 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_214 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_215 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_216 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_217 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_218 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_219 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_220 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_221 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_222 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_223 - ________ :// // [208]
                                                                 // [208]
    //////////////////////////////////////////////////////////// // [208]
                                                                 // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_224 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_225 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_226 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_227 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_228 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_229 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_230 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_231 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_232 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_233 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_234 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_235 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_236 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_237 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_238 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_239 - ________ :// // [208]
                                                                 // [208]
    //////////////////////////////////////////////////////////// // [208]
                                                                 // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_240 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_241 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_242 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_243 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_244 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_245 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_246 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_247 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_248 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_249 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_250 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_251 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_252 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_253 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_254 - ________ :// // [208]
    ,   c_bin_lef_nil , c_bin_rig_nil //: ASC_255 - ________ :// // [208]
                                                                 // [208]
    ]);; //:END_ARR[ d_binfont_lut ]::::::::::::::::::::::::::// // [208]
                                                                 // [208]
    ASS( 512 === d_binfont_lut.length , "[BINFONT_NOT_512]" );   // [208]
                                                                 // [---]
    //:#_BINFONT_ARGLIST:STAMONE_#:[209]:----------------://     // [209]
    //:#_BINFONT_ARGLIST_STAMONE_#:[209]:----------------://     // [209]
                                                                 // [209]
        var d_binfont_stamone_arglist =( //::::::::::::://       // [216][BUG][209]
        {   laxcoma:"[NOTE:#_ARGLIST_CANT_BE_CONST_#]"           // [216][209][---]
                                                                 // [209]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [209]
        //: Image We Are Stamping To ::::::::::::::::::::://     // [209]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [209]
                                                                 // [209]
            ,   bin_pix : null //::::::::::::::::::::::::://     // [209]
            ,   bin_wid : (0)  //::::::::::::::::::::::::://     // [209]
            ,   bin_hig : (0)  //::::::::::::::::::::::::://     // [209]
                                                                 // [209]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [209]
        //: Where Are We Stamping To On Image?           ://     // [209]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [209]
                                                                 // [209]
            ,   bin_x_0 : (0) //:INCLUSIVE_RECT : EDG_LEF://     // [209]
            ,   bin_x_1 : (0) //:INCLUSIVE_RECT : EDG_RIG://     // [209]
            ,   bin_y_0 : (0) //:INCLUSIVE_RECT : EDG_TOP://     // [209]
            ,   bin_y_1 : (0) //:INCLUSIVE_RECT : EDG_BOT://     // [209]
                                                                 // [209]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [209]
        //: Text Color And [Boarder/Edge] Color Of Glyphs://     // [209]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [209]
                                                                 // [209]
            ,   tex_b_g : 0x00000000 //:AKA[ TEB ]:::::::://     // [209]
            ,   tex_f_g : 0x00000000 //:AKA[ TEF ]:::::::://     // [209]
            ,   bor_b_g : 0x00000000 //:AKA[ BOB ]:::::::://     // [209]
            ,   bor_f_g : 0x00000000 //:AKA[ BOF ]:::::::://     // [209]
                                                                 // [209]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [209]
        //: Ascii Symbol Being Stamped                   ://     // [209]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [209]
                                                                 // [209]
            ,   bin_asc : ( 0 ) //: [ 0 to 255 ]inclusive://     // [209]
                                                                 // [209]
        });;Object.seal( d_binfont_stamone_arglist ); //:://     // [209]
                                                                 // [209]
    //:----------------:#_BINFONT_ARGLIST_STAMONE_#:[209]://     // [209]
    //:----------------:#_BINFONT_ARGLIST:STAMONE_#:[209]://     // [209]
                                                                 // [---]
    var d_binfont_stamone_arglist_fourhex =(                     // [212]
        new Uint32Array( 4 ) );;;;;;;;;;;;;;                     // [212]
                                                                 // [---]
};; //: __BINFONT__ ::: DATASEC ::: END ::::::::::::::::::::::// // [212][207]
if( /** __FOURSET__ **/ notnode ){ //:::::::::::::::::::::::::// // [239]
                                                                 // [239]
    //:#_FOURSET_DATA_CLUSTERS_#:[239]:======================:// // [239]
                                                                 // [239]
        //::::::::::::::::::::::::::::::::::::::::::::::::::::// // [239]
        //:@la3@ : A layer value [ 0:GEOM | 1:BOMB | 2:FADA ]:// // [239]
        //:@v16@ : A tile  value [ 0|1|2|3|4|.....|13|14|15 ]:// // [239]
        //:@f16@ : A fourset cluster index  [ 0 -to- (16-1) ]:// // [239]
        //:@fourset@ : A conceptual 2D graphic that can be   :// // [239]
        //:          : chopped into a 4x4 grid and re-mixed  :// // [239]
        //:          : to create wang-tile style autotiling. :// // [239]
        //:@u25clus@ : One of the cells of[fourset]4x4 grid, :// // [275][REF][239]
        //:          : represented as an unsigned 32 bit     :// // [239]
        //:          : integer. The U32 represents 5x5 bits. :// // [239]
        //:          : (Bits are in @NETWORK_BIT_ORDER@ )    :// // [239]
        //::::::::::::::::::::::::::::::::::::::::::::::::::::// // [239]
                                                                 // [---]
        //:TAG[ __BINFOUR__ | BINFOUR | @binfour@ ]::::::://     // [243]
        //:TAG[ __U25CLUS__ | U25CLUS | @u25clus@ ]::::::://     // [275]
                                                                 // [243]
        let purelen =( 3*16*16 ); ASS( 768 === purelen );        // [243]
        let t_e_s_t =( 0 /** #_KEEP_ZERO_OR_ELSE_# **/ );        // [244][243]
                                                                 // [---]
        var d_fourset_la3_v16_f16_u25clus =(    ////////////     // [275][REF][239]
        new Uint32Array((1                      ////////////     // [243][239]
                                                ////////////     // [239]
            *  3 //: 3        LAYERS (la3) ://  ////////////     // [239]
            * 16 //:16 tile   VALUES (v16) ://  ////////////     // [239]
            * 16 //:16 FOURSET cells (f16) ://  ////////////     // [239]
                                                                 // [---]
           )+( t_e_s_t /** #_ETD_NOW_VIA_OVERRIDE_# **/ )        // [244][243]
                                                                 // [---]
        ));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [239]
                                                                 // [---]
        let len =( d_fourset_la3_v16_f16_u25clus.length );       // [275][REF][243][239]
        ASS( 768+t_e_s_t === len , "[BIGBINNY_1]" );             // [---][243][239]
        ASS( len-purelen ===   0 , "[BIGBINNY_2]" );             // [244][243][239]
        ASS( len-t_e_s_t === 768 , "[BIGBINNY_3]" );             // [---][243][239]
                                                                 // [---]
    //:======================:#_FOURSET_DATA_CLUSTERS_#:[239]:// // [239]
                                                                 // [239]
};; //: __FOURSET__ ::: DATASEC ::: END ::::::::::::::::::::::// // [239]
if( /** __MIPWASP__ **/ notnode ){ //:::::::::::::::::::::::::// // [296]
                                                                 // [---]
                                                                 // [297]
    var d_mipwasp_me9_dia = new Uint32Array([                    // [297]
                                                                 // [297]
          0                     //: (me9:0)===>(dia:000) ://     // [297]
    ,   256                     //: (me9:1)===>(dia:256) ://     // [297]
    ,   256+128                 //: (me9:2)===>(dia:384) ://     // [297]
    ,   256+128+64              //: (me9:3)===>(dia:448) ://     // [297]
    ,   256+128+64+32           //: (me9:4)===>(dia:480) ://     // [297]
    ,   256+128+64+32+16        //: (me9:5)===>(dia:496) ://     // [297]
    ,   256+128+64+32+16+8      //: (me9:6)===>(dia:504) ://     // [297]
    ,   256+128+64+32+16+8+4    //: (me9:7)===>(dia:508) ://     // [297]
    ,   256+128+64+32+16+8+4+2  //: (me9:8)===>(dia:510) ://     // [297]
    ]);;                                                         // [297]
             let l_u_t =( d_mipwasp_me9_dia   );                 // [297]
    ASS(  9  === l_u_t.length,"[ME9_DIA_LEN]" );                 // [297]
    ASS(  0  === l_u_t[ 0 ] , "[ME9_DIA_000]" );                 // [297]
    ASS( 256 === l_u_t[ 1 ] , "[ME9_DIA_001]" );                 // [297]
    ASS( 384 === l_u_t[ 2 ] , "[ME9_DIA_002]" );                 // [297]
    ASS( 448 === l_u_t[ 3 ] , "[ME9_DIA_003]" );                 // [297]
    ASS( 480 === l_u_t[ 4 ] , "[ME9_DIA_004]" );                 // [297]
    ASS( 496 === l_u_t[ 5 ] , "[ME9_DIA_005]" );                 // [297]
    ASS( 504 === l_u_t[ 6 ] , "[ME9_DIA_006]" );                 // [297]
    ASS( 508 === l_u_t[ 7 ] , "[ME9_DIA_007]" );                 // [297]
    ASS( 510 === l_u_t[ 8 ] , "[ME9_DIA_008]" );                 // [297]
                                                                 // [297]
    var d_mipwasp_me9_lat = new Uint32Array([                    // [297]
                                                                 // [297]
        256  //:  ( me9:0 )===>( lat:256 )  ://                  // [297]
    ,   128  //:  ( me9:1 )===>( lat:128 )  ://                  // [297]
    ,    64  //:  ( me9:2 )===>( lat:064 )  ://                  // [297]
    ,    32  //:  ( me9:3 )===>( lat:032 )  ://                  // [297]
    ,    16  //:  ( me9:4 )===>( lat:016 )  ://                  // [297]
    ,     8  //:  ( me9:5 )===>( lat:008 )  ://                  // [297]
    ,     4  //:  ( me9:6 )===>( lat:004 )  ://                  // [297]
    ,     2  //:  ( me9:7 )===>( lat:002 )  ://                  // [297]
    ,     1  //:  ( me9:8 )===>( lat:001 )  ://                  // [297]
    ]);;                                                         // [297]
                                                                 // [---]
};; //: __MIPWASP__ ::: DATASEC ::: END ::::::::::::::::::::::// // [296]
if( /** __GOLA512__ **/ notnode ){ //:::::::::::::::::::::::::// // [292]
                                                                 // [293]
    var d_gola512_key_i10_hex_artdeca = "[WRONG_NAME]" ;         // [293]
    var d_gola512_key_i10_hex_artgola = "[WRONG_NAME]" ;         // [293]
                                                                 // [293]
    //:#_ALL_UDESIGNS_SHOULD_BE_BYTE_ARRAYS_#           ://      // [293]
    //:@key_i10_hex@ : Palletized_Color_Key, 10 @0_I_E@ ://      // [293]
    //:@key_i09_hex@ : Palletized_Color_Key,  9 @1_I_E@ ://      // [293]
                                                                 // [293]
    var d_gola512_artdeca_key_i10_hex =new Uint32Array([         // [293]
                                                                 // [293]
        0x00000000 //: ( 0 )===> "_" : TransparentBlack :://     // [293]
    ,   0x00000088 //: ( 1 )===> "1" : 50%  Trans_Black :://     // [293]
    ,   0x424242FF //: ( 2 )===> "A" : @_GREYSCALE_@    :://     // [293]
    ,   0x111111FF //: ( 3 )===> "B" : @_GREYSCALE_@    :://     // [293]
    ,   0x0C0D0EFF //: ( 4 )===> "X" : @_GREYSCALE_@    :://     // [293]
                                                                 // [293]
    ,   0x00000000 //: ( 5 )===> ___ : @UN_USED_SLOT@   :://     // [293]
    ,   0x00000000 //: ( 6 )===> ___ : @UN_USED_SLOT@   :://     // [293]
    ,   0x00000000 //: ( 7 )===> ___ : @UN_USED_SLOT@   :://     // [293]
    ,   0x00000000 //: ( 8 )===> ___ : @UN_USED_SLOT@   :://     // [293]
    ,   0x00000000 //: ( 9 )===> ___ : @UN_USED_SLOT@   :://     // [293]
    ]);;                                                         // [293]
    var d_gola512_artgola_key_i10_hex =new Uint32Array([         // [293]
                                                                 // [293]
        0xCCDDEEFF //: ( 0 )===> "_" : @_GREYSCALE_@    :://     // [293]
    ,   0x000000FF //: ( 1 )===> "1" : OPAQUE__Black    :://     // [293]
    ,   0x424242FF //: ( 2 )===> "A" : @_GREYSCALE_@    :://     // [293]
    ,   0x111111FF //: ( 3 )===> "B" : @_GREYSCALE_@    :://     // [293]
    ,   0x0C0D0EFF //: ( 4 )===> "X" : @_GREYSCALE_@    :://     // [293]
                                                                 // [293]
    ,   0x00000000 //: ( 5 )===> ___ : @UN_USED_SLOT@   :://     // [293]
    ,   0x00000000 //: ( 6 )===> ___ : @UN_USED_SLOT@   :://     // [293]
    ,   0x00000000 //: ( 7 )===> ___ : @UN_USED_SLOT@   :://     // [293]
    ,   0x00000000 //: ( 8 )===> ___ : @UN_USED_SLOT@   :://     // [293]
    ,   0x00000000 //: ( 9 )===> ___ : @UN_USED_SLOT@   :://     // [293]
    ]);;                                                         // [293]
                                                                 // [293]
    let _ =( 0 ); //:@_ZERO_TCENUM_@://                          // [293]
    let X =( 4 ); //:@_GREYSCALE_@  ://                          // [293]
    let A =( 2 ); //:@_GREYSCALE_@  ://                          // [293]
    let B =( 3 ); //:@_GREYSCALE_@  ://                          // [293]
                                                                 // [293]
    //:#_DECAL_UDESIGN_#:[293]:--------------------------://     // [293]
    //:#_DECAL_DESIGN__#:[293]:--------------------------://     // [293]
                                                                 // [293]
        var d_gola512_udesign_artdeca =new Uint8Array([          // [293]
                                                                 // [293]
            A,B,A,B,A , A,B,A,B,A , A,B,A,B,A , A,B,A,B,A        // [293]
        ,   B,_,_,_,B , B,_,_,_,B , B,_,_,_,B , B,_,_,_,B        // [293]
        ,   A,_,X,1,A , A,1,X,1,A , A,1,X,_,A , A,_,X,_,A        // [293]
        ,   B,_,1,_,B , B,_,1,_,B , B,_,1,_,B , B,_,1,_,B        // [293]
        ,   A,B,A,B,A , A,B,A,B,A , A,B,A,B,A , A,B,A,B,A        // [293]
        ////                                                     // [293]
        ,   A,B,A,B,A , A,B,A,B,A , A,B,A,B,A , A,B,A,B,A        // [293]
        ,   B,_,1,_,B , B,_,1,_,B , B,_,1,_,B , B,_,1,_,B        // [293]
        ,   A,_,X,1,A , A,1,X,1,A , A,1,X,_,A , A,_,X,_,A        // [293]
        ,   B,_,1,_,B , B,_,1,_,B , B,_,1,_,B , B,_,1,_,B        // [293]
        ,   A,B,A,B,A , A,B,A,B,A , A,B,A,B,A , A,B,A,B,A        // [293]
        ////                                                     // [293]
        ,   A,B,A,B,A , A,B,A,B,A , A,B,A,B,A , A,B,A,B,A        // [293]
        ,   B,_,1,_,B , B,_,1,_,B , B,_,1,_,B , B,_,1,_,B        // [293]
        ,   A,_,X,1,A , A,1,X,1,A , A,1,X,_,A , A,_,X,_,A        // [293]
        ,   B,_,_,_,B , B,_,_,_,B , B,_,_,_,B , B,_,_,_,B        // [293]
        ,   A,B,A,B,A , A,B,A,B,A , A,B,A,B,A , A,B,A,B,A        // [293]
        ////                                                     // [293]
        ,   A,B,A,B,A , A,B,A,B,A , A,B,A,B,A , A,B,A,B,A        // [293]
        ,   B,_,_,_,B , B,_,_,_,B , B,_,_,_,B , B,_,_,_,B        // [293]
        ,   A,_,X,1,A , A,1,X,1,A , A,1,X,_,A , A,_,X,_,A        // [293]
        ,   B,_,_,_,B , B,_,_,_,B , B,_,_,_,B , B,_,_,_,B        // [293]
        ,   A,B,A,B,A , A,B,A,B,A , A,B,A,B,A , A,B,A,B,A        // [293]
        ]);;                                                     // [293]
                                                                 // [293]
    //:--------------------------:#_DECAL_UDESIGN_#:[293]://     // [293]
    //:--------------------------:#_DECAL_DESIGN__#:[293]://     // [293]
    //:#_TILE_UDESIGN_#:[293]:---------------------------://     // [293]
    //:#_TILE_DESIGN__#:[293]:---------------------------://     // [293]
                                                                 // [293]
        var d_gola512_udesign_artgola =new Uint8Array([          // [293]
                                                                 // [293]
            X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X        // [293]
        ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X , X,_,_,_,X        // [293]
        ,   X,_,1,1,1 , 1,1,1,1,1 , 1,1,1,_,X , X,_,1,_,X        // [293]
        ,   X,_,1,_,_ , _,_,1,_,_ , _,_,1,_,X , X,_,1,_,X        // [293]
        ,   X,_,1,_,_ , _,_,1,_,_ , _,_,1,_,X , X,_,1,_,X        // [293]
        ////                                                     // [293]
        ,   X,_,_,_,_ , _,_,1,_,_ , _,_,1,_,X , X,_,1,_,X        // [293]
        ,   X,_,1,_,_ , _,_,1,_,_ , _,_,1,_,X , X,_,1,_,X        // [293]
        ,   X,_,1,1,1 , 1,1,1,1,1 , 1,1,1,_,X , X,_,1,_,X        // [293]
        ,   X,_,1,_,_ , _,_,1,_,_ , _,_,1,_,X , X,_,1,_,X        // [293]
        ,   X,_,1,_,_ , _,_,1,_,_ , _,_,1,_,X , X,_,1,_,X        // [293]
        ////                                                     // [293]
        ,   X,_,1,_,_ , _,_,1,_,_ , _,_,1,_,X , X,_,1,_,X        // [293]
        ,   X,_,1,_,_ , _,_,1,_,_ , _,_,1,_,X , X,_,1,_,X        // [293]
        ,   X,_,1,1,1 , 1,1,1,1,1 , 1,1,1,_,X , X,_,1,_,X        // [293]
        ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X , X,_,_,_,X        // [293]
        ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X        // [293]
        ////                                                     // [293]
        ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X        // [293]
        ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X , X,_,_,_,X        // [293]
        ,   X,_,1,1,1 , 1,1,1,1,1 , 1,1,1,_,X , X,_,1,_,X        // [293]
        ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X , X,_,_,_,X        // [293]
        ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X        // [293]
        ]);;                                                     // [293]
    //:---------------------------:#_TILE_UDESIGN_#:[293]://     // [293]
    //:---------------------------:#_TILE_DESIGN__#:[293]://     // [293]
                                                                 // [---]
};; //: __GOLA512__ ::: DATASEC ::: END ::::::::::::::::::::::// // [292]
if( /** __ARTDECA__ **/ notnode ){ //:::::::::::::::::::::::::// // [289]

    var d_artdeca_msi_dex_sis =( 0-1 );                          // [302]

};; //: __ARTDECA__ ::: DATASEC ::: END ::::::::::::::::::::::// // [289]
if( /** __ARTGOLA__ **/ notnode ){ //:::::::::::::::::::::::::// // [285]
                                                                 // [287]

    var d_artgola_msi_dex_sis =( 0-1 );                          // [301]

    //:SEE[ _ARTGOLA_UDESIGN____VS____FOURSET_UDESIGN_ ]:://     // [287]
    //:                                                  ://     // [287]
    //:SEE[ _ARTGOLA_UDESIGN_VAR_POST_FIXES_  ]::::::::::://     // [287]
    //:SEE[ _ARTGOLA_UDESIGN_SPECIAL_INDEXES_ ]::::::::::://     // [287]
                                                                 // [287]
    //:#_DEPTH_000_:_SIXTEEN_OUTER_AGOLAS_#:=============://     // [287]
                                                                 // [---]
    //: @1ST_ONE@[ any_o00 ]( @ZERO_INDEXED_NAMING@ )::::://     // [288]
                                                                 // [---]
    let _ =(9); let X =(7);                                      // [---][287]
    var d_artgola_udesign_any_o00 = new Uint8Array([             // [288][287]
/**1**/                                                          // [---][287]
/**1**/ 1,1,1,1,1 , 1,1,_,1,1 , 1,1,1,1,1 , 1,1,1,1,1            // [---][287]
    ,   1,1,_,2,2 , 2,2,_,2,2 , 2,2,_,1,1 , 1,1,_,1,1            // [---][287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,2,_,3,3 , 3,3,3,3,3 , 3,3,_,2,1 , 1,2,_,2,1            // [---][287]
    ,   1,2,_,3,4 , _,_,3,_,_ , 4,3,_,2,1 , 1,2,_,2,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,2,_,3,_ , 5,5,3,5,5 , _,3,_,2,1 , 1,2,_,2,1            // [---][287]
    ,   1,2,_,3,_ , 5,8,8,8,5 , _,3,_,2,1 , 1,2,_,2,1            // [---][287]
    ,   _,_,_,3,3 , 3,8,9,8,3 , 3,3,_,_,_ , 1,_,_,_,1            // [---][287]
    ,   1,2,_,3,_ , 5,8,8,8,5 , _,3,_,2,1 , 1,2,_,2,1            // [---][287]
    ,   1,2,_,3,_ , 5,5,3,5,5 , _,3,_,2,1 , 1,2,_,2,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,3,_,_,_ , _,_,3,_,_ , 4,3,_,2,1 , 1,2,_,2,1            // [---][287]
    ,   1,3,_,_,_ , 3,3,3,3,3 , 3,3,_,2,1 , 1,2,_,2,1            // [---][287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,2,_,3,3 , 2,2,_,2,2 , 2,2,_,1,1 , 1,1,_,1,1            // [---][287]
    ,   1,1,1,1,1 , 1,1,_,1,1 , 1,1,1,1,1 , 1,1,1,1,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,1,1,1,1 , 1,1,1,1,1 , 1,1,1,1,1 , 1,1,1,1,1            // [---][287]
    ,   1,1,_,2,2 , 2,2,_,2,2 , 2,2,_,1,1 , 1,1,_,1,1            // [---][287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,1,_,2,2 , 2,2,_,2,2 , 2,2,_,1,1 , 1,1,_,1,1            // [---][287]
    ,   1,1,1,1,1 , 1,1,1,1,1 , 1,1,1,1,1 , 1,1,1,1,1            // [---][287]
    ]);;                                                         // [---][287]
    _ =(1);                                                      // [---][287]
    X =(0);                                                      // [---][287]
    var d_artgola_udesign_any_o01 = new Uint8Array([             // [288][287]
/**2**/                                                          // [---][287]
/**2**/ 4,4,2,4,4 , 4,4,4,4,4 , 4,4,2,4,4 , 4,4,4,4,4            // [---][287]
    ,   4,6,6,4,4 , 6,4,6,4,6 , 4,4,6,6,4 , 4,6,6,6,4            // [---][287]
    ,   2,6,_,_,_ , _,_,_,_,_ , _,_,_,6,2 , 2,6,6,6,2            // [---][287]
    ,   4,4,_,3,3 , 4,4,4,4,4 , 3,3,_,4,4 , 4,6,6,6,4            // [---][287]
    ,   4,4,_,3,4 , 4,3,4,3,4 , 4,3,_,4,4 , 4,1,7,1,4            // [---][287]
    ////                                                         // [---][287]
    ,   4,6,_,4,4 , 4,4,4,4,4 , 4,4,_,6,4 , 4,1,7,1,4            // [---][287]
    ,   4,4,_,4,3 , 4,6,6,6,4 , 3,4,_,4,4 , 4,6,6,6,4            // [---][287]
    ,   4,6,_,4,4 , 4,6,6,6,4 , 4,4,_,6,4 , 2,6,6,6,2            // [---][287]
    ,   4,4,_,4,3 , 4,6,6,6,4 , 3,4,_,4,4 , 4,6,6,6,4            // [---][287]
    ,   4,6,_,4,4 , 4,4,4,4,4 , 4,4,_,6,4 , 4,1,7,1,4            // [---][287]
    ////                                                         // [---][287]
    ,   4,4,_,3,4 , 4,3,4,3,4 , 4,3,_,4,4 , 4,1,7,1,4            // [---][287]
    ,   4,4,_,3,3 , 4,4,4,4,4 , 3,3,_,4,4 , 4,6,6,6,4            // [---][287]
    ,   2,6,_,_,_ , _,_,_,_,_ , _,_,_,6,2 , 2,6,6,6,2            // [---][287]
    ,   4,6,6,4,4 , 6,4,6,4,6 , 4,4,6,6,4 , 4,6,6,6,4            // [---][287]
    ,   4,4,2,4,4 , 4,4,4,4,4 , 4,4,2,4,4 , 4,4,4,4,4            // [---][287]
    ////                                                         // [---][287]
    ,   4,4,2,4,4 , 4,4,2,4,4 , 4,4,2,4,4 , 4,4,2,4,4            // [---][287]
    ,   4,6,6,6,1 , 1,6,6,6,1 , 1,6,6,6,4 , 4,6,6,6,4            // [---][287]
    ,   4,6,6,6,7 , 7,6,6,6,7 , 7,6,6,6,4 , 2,6,6,6,2            // [---][287]
    ,   4,6,6,6,1 , 1,6,6,6,1 , 1,6,6,6,4 , 4,6,6,6,4            // [---][287]
    ,   4,4,2,4,4 , 4,4,2,4,4 , 4,4,2,4,4 , 4,4,2,4,4            // [---][287]
    ]);;                                                         // [---][287]
    _ =(2);                                                      // [---][287]
    X =(0);                                                      // [---][287]
    var d_artgola_udesign_any_o02 = new Uint8Array([             // [288][287]
/**3**/                                                          // [---][287]
/**3**/ 1,1,_,_,_ , _,_,_,_,_ , _,_,_,1,1 , 5,5,5,5,5            // [---][287]
    ,   1,1,5,5,5 , 5,5,5,5,5 , 5,5,5,1,1 , 5,5,_,5,5            // [---][287]
    ,   _,5,5,5,1 , 5,5,1,1,1 , 1,5,5,5,_ , _,5,_,1,_            // [---][287]
    ,   _,5,5,5,1 , 5,5,5,5,1 , 1,5,5,5,_ , _,5,_,5,_            // [---][287]
    ,   _,5,1,1,5 , 1,5,5,5,1 , 5,1,1,5,_ , 1,5,5,5,1            // [---][287]
    ////                                                         // [---][287]
    ,   _,5,1,1,5 , 1,5,5,5,1 , 5,1,1,5,_ , 1,5,1,5,1            // [---][287]
    ,   _,5,1,5,5 , 1,5,5,5,1 , 5,5,1,5,_ , 5,_,_,_,5            // [---][287]
    ,   _,1,1,1,5 , 5,5,5,5,5 , 5,1,1,1,_ , 5,_,5,_,5            // [---][287]
    ,   _,5,1,5,5 , 1,5,5,5,1 , 5,5,1,5,_ , 5,_,_,_,5            // [---][287]
    ,   _,5,1,1,5 , 1,5,5,5,1 , 5,1,1,5,_ , 1,5,1,5,1            // [---][287]
    ////                                                         // [---][287]
    ,   _,5,1,1,5 , 1,5,5,5,1 , 5,1,1,5,_ , 1,5,5,5,1            // [---][287]
    ,   _,5,5,5,1 , 1,5,5,5,5 , 1,5,5,5,_ , _,5,_,5,_            // [---][287]
    ,   _,5,5,5,1 , 1,1,1,5,5 , 1,5,5,5,_ , _,1,_,5,_            // [---][287]
    ,   1,1,5,5,5 , 5,5,5,5,5 , 5,5,5,1,1 , 5,5,_,5,5            // [---][287]
    ,   1,1,_,_,_ , _,_,_,_,_ , _,_,_,1,1 , 5,5,5,5,5            // [---][287]
    ////                                                         // [---][287]
    ,   1,1,_,_,5 , 1,5,5,5,1 , 5,_,_,1,1 , 1,5,5,5,1            // [---][287]
    ,   1,1,1,5,5 , 5,_,_,_,5 , 5,5,1,1,1 , 5,_,_,_,5            // [---][287]
    ,   5,_,_,_,5 , 1,_,5,_,1 , 5,_,_,_,5 , 5,_,5,_,5            // [---][287]
    ,   1,1,1,5,5 , 5,_,_,_,5 , 5,5,1,1,1 , 5,_,_,_,5            // [---][287]
    ,   1,1,_,_,5 , 1,5,5,5,1 , 5,_,_,1,1 , 1,5,5,5,1            // [---][287]
    ]);;                                                         // [---][287]
    _ =(2);                                                      // [---][287]
    X =(3);                                                      // [---][287]
    var d_artgola_udesign_any_o03 = new Uint8Array([             // [288][287]
/**4**/                                                          // [---][287]
/**4**/ X,X,X,X,X , X,X,_,X,X , X,X,X,X,X , X,X,X,X,X            // [---][287]
    ,   X,9,9,X,X , _,X,X,X,_ , X,X,9,9,X , X,X,X,X,X            // [---][287]
    ,   X,9,9,_,X , X,X,_,X,X , X,_,9,9,X , X,X,X,X,X            // [---][287]
    ,   X,X,9,9,9 , _,_,_,_,_ , 9,9,9,X,X , _,X,9,X,_            // [---][287]
    ,   X,X,_,X,X , X,_,X,_,X , X,X,_,X,X , _,X,X,X,_            // [---][287]
    ////                                                         // [---][287]
    ,   _,X,X,X,9 , X,X,X,X,X , 9,X,X,X,_ , _,X,X,X,_            // [---][287]
    ,   _,X,_,X,9 , X,_,_,X,X , 9,X,_,X,_ , _,X,9,X,_            // [---][287]
    ,   _,X,X,X,9 , X,_,_,_,X , 9,X,X,X,_ , _,X,9,X,_            // [---][287]
    ,   _,_,X,_,9 , X,X,_,_,X , 9,_,X,_,_ , _,X,9,X,_            // [---][287]
    ,   _,_,X,_,9 , X,X,X,X,X , 9,_,X,_,_ , _,X,X,X,_            // [---][287]
    ////                                                         // [---][287]
    ,   _,_,X,_,9 , _,X,_,X,_ , 9,_,X,_,_ , _,X,X,X,_            // [---][287]
    ,   _,_,X,_,9 , 9,X,9,X,9 , 9,_,X,_,_ , _,X,9,X,_            // [---][287]
    ,   _,_,X,_,_ , _,X,9,X,_ , _,_,X,_,_ , _,X,X,X,_            // [---][287]
    ,   _,_,X,X,X , X,X,X,X,X , X,X,X,_,_ , X,X,X,X,X            // [---][287]
    ,   _,_,_,X,X , X,X,X,X,X , X,X,_,_,_ , X,X,X,X,X            // [---][287]
    ////                                                         // [---][287]
    ,   _,_,X,_,_ , _,X,9,X,_ , _,_,X,_,_ , X,X,X,X,X            // [---][287]
    ,   _,_,X,_,_ , _,X,9,X,_ , _,_,X,_,_ , X,X,X,9,X            // [---][287]
    ,   _,_,X,_,_ , _,X,9,X,_ , _,_,X,_,_ , X,9,X,9,X            // [---][287]
    ,   _,_,X,X,X , X,X,X,X,X , X,X,X,_,_ , X,X,X,9,X            // [---][287]
    ,   _,_,_,X,X , X,X,X,X,X , X,X,_,_,_ , X,X,X,X,X            // [---][287]
    ]);;                                                         // [---][287]
    _ =(1);                                                      // [---][287]
    X =(2);                                                      // [---][287]
    var d_artgola_udesign_any_o04 = new Uint8Array([             // [288][287]
/**5**/                                                          // [---][287]
/**5**/ X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [---][287]
    ,   X,7,_,_,_ , _,X,7,X,_ , _,_,_,7,X , X,_,7,_,X            // [---][287]
    ,   X,X,_,X,X , _,X,7,X,_ , X,X,_,X,X , X,_,7,_,X            // [---][287]
    ,   X,X,_,X,X , _,_,7,_,_ , X,X,_,X,X , X,_,7,_,X            // [---][287]
    ,   X,_,_,_,_ , _,X,7,X,_ , _,_,_,_,X , X,_,7,_,X            // [---][287]
    ////                                                         // [---][287]
    ,   X,_,_,_,_ , _,X,7,X,_ , _,_,_,_,X , X,_,7,_,X            // [---][287]
    ,   X,X,X,_,X , X,X,7,X,X , X,_,X,X,X , X,X,7,X,X            // [---][287]
    ,   X,7,7,7,7 , 7,X,7,X,7 , 7,7,7,7,X , X,_,7,_,X            // [---][287]
    ,   X,X,X,_,X , X,X,7,X,X , X,_,X,X,X , X,X,7,X,X            // [---][287]
    ,   X,_,_,_,_ , _,X,7,X,_ , _,_,_,_,X , X,_,7,_,X            // [---][287]
    ////                                                         // [---][287]
    ,   X,_,_,_,_ , _,X,7,X,_ , _,_,_,_,X , X,_,7,_,X            // [---][287]
    ,   X,X,_,X,X , _,_,7,_,_ , X,X,_,X,X , X,_,7,_,X            // [---][287]
    ,   X,X,_,X,X , _,X,7,X,_ , X,X,_,X,X , X,_,7,_,X            // [---][287]
    ,   X,7,_,_,_ , _,X,7,X,_ , _,_,_,7,X , X,_,7,_,X            // [---][287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [---][287]
    ////                                                         // [---][287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [---][287]
    ,   X,_,_,_,_ , _,X,X,X,_ , _,_,_,_,X , X,_,_,_,X            // [---][287]
    ,   X,7,7,7,7 , 7,7,7,7,7 , 7,7,7,7,X , X,_,7,_,X            // [---][287]
    ,   X,_,_,_,_ , _,X,X,X,_ , _,_,_,_,X , X,_,_,_,X            // [---][287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [---][287]
    ]);;                                                         // [---][287]
    _ =(1);                                                      // [---][287]
    X =(2);                                                      // [---][287]
    var d_artgola_udesign_any_o05 = new Uint8Array([             // [288][287]
/**6**/                                                          // [---][287]
/**6**/ X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [---][287]
    ,   X,_,_,X,X , _,_,_,_,_ , X,X,_,_,X , X,X,_,X,X            // [---][287]
    ,   X,X,_,_,X , X,X,X,X,X , X,_,_,X,X , X,_,_,_,X            // [---][287]
    ,   X,X,_,_,X , _,X,_,X,_ , X,_,_,X,X , X,X,_,X,X            // [---][287]
    ,   X,X,_,_,_ , X,_,X,_,X , _,_,_,X,X , X,X,_,X,X            // [---][287]
    ////                                                         // [---][287]
    ,   X,_,_,_,X , X,X,X,X,X , X,_,_,_,X , X,X,_,X,X            // [---][287]
    ,   X,X,X,_,X , X,X,_,X,X , X,_,X,X,X , X,X,_,X,X            // [---][287]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,X,_,X,X            // [---][287]
    ,   X,X,X,_,X , X,X,_,X,X , X,_,X,X,X , X,X,_,X,X            // [---][287]
    ,   X,_,_,_,X , X,X,X,X,X , X,_,_,_,X , X,X,_,X,X            // [---][287]
    ////                                                         // [---][287]
    ,   X,X,_,_,_ , X,_,X,_,X , _,_,_,X,X , X,X,_,X,X            // [---][287]
    ,   X,X,_,X,X , _,X,_,X,_ , X,X,_,X,X , X,X,_,X,X            // [---][287]
    ,   X,X,_,X,X , X,X,X,X,X , X,X,_,X,X , X,_,_,_,X            // [---][287]
    ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X , X,X,_,X,X            // [---][287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [---][287]
    ////                                                         // [---][287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [---][287]
    ,   X,X,_,X,X , X,X,X,X,X , X,X,X,X,X , X,X,_,X,X            // [---][287]
    ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X            // [---][287]
    ,   X,X,_,X,X , X,X,X,X,X , _,_,_,_,_ , X,X,_,X,X            // [---][287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [---][287]
    ]);;                                                         // [---][287]
    _ =(7);                                                      // [---][287]
    X =(8);                                                      // [---][287]
    var d_artgola_udesign_any_o06 = new Uint8Array([             // [288][287]
/**7**/                                                          // [---][287]
/**7**/ _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [---][287]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [---][287]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [---][287]
    ,   _,X,X,_,_ , _,_,X,_,_ , _,_,X,X,_ , _,X,_,X,_            // [---][287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [---][287]
    ////                                                         // [---][287]
    ,   _,_,_,_,_ , _,_,X,_,_ , _,_,_,_,_ , _,_,_,_,_            // [---][287]
    ,   _,X,X,_,_ , _,X,X,X,_ , _,_,X,X,_ , _,X,_,X,_            // [---][287]
    ,   _,X,X,X,_ , X,X,X,X,X , _,X,X,X,_ , _,X,X,X,_            // [---][287]
    ,   _,X,X,_,_ , _,X,X,X,_ , _,_,X,X,_ , _,X,_,X,_            // [---][287]
    ,   _,_,_,_,_ , _,_,X,_,_ , _,_,_,_,_ , _,_,_,_,_            // [---][287]
    ////                                                         // [---][287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [---][287]
    ,   _,X,X,_,_ , _,_,X,_,_ , _,_,X,X,_ , _,X,_,X,_            // [---][287]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [---][287]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [---][287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [---][287]
    ////                                                         // [---][287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [---][287]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [---][287]
    ,   _,X,_,_,_ , _,_,X,_,_ , _,_,_,X,_ , _,X,X,X,_            // [---][287]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [---][287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [---][287]
    ]);;                                                         // [---][287]
    _ =(3);                                                      // [---][287]
    X =(7);                                                      // [---][287]
    var d_artgola_udesign_any_o07 = new Uint8Array([             // [288][287]
/**8**/                                                          // [---][287]
/**8**/ X,X,X,_,_ , X,X,_,X,X , _,_,X,X,X , X,X,_,X,X            // [---][287]
    ,   X,X,X,X,X , 6,X,X,X,6 , X,X,X,X,X , X,X,X,X,X            // [---][287]
    ,   X,X,X,_,_ , _,X,X,X,_ , _,_,X,X,X , X,X,X,X,X            // [---][287]
    ,   _,X,_,_,_ , _,X,X,X,_ , _,_,_,X,_ , _,X,X,X,_            // [---][287]
    ,   _,X,_,_,_ , _,_,_,_,_ , _,_,_,X,_ , _,X,_,X,_            // [---][287]
    ////                                                         // [---][287]
    ,   X,6,_,_,_ , _,X,X,X,_ , _,_,_,6,X , _,X,_,X,_            // [---][287]
    ,   X,X,X,X,_ , X,X,X,X,X , _,X,X,X,X , _,X,X,X,_            // [---][287]
    ,   _,X,X,X,_ , X,X,X,X,X , _,X,X,X,_ , _,X,X,X,_            // [---][287]
    ,   X,X,X,X,_ , X,X,X,X,X , _,X,X,X,X , _,X,X,X,_            // [---][287]
    ,   X,6,_,_,_ , _,X,X,X,_ , _,_,_,6,X , _,X,_,X,_            // [---][287]
    ////                                                         // [---][287]
    ,   _,X,_,_,_ , _,_,_,_,_ , _,_,_,X,_ , _,X,_,X,_            // [---][287]
    ,   _,X,_,_,_ , _,X,X,X,_ , _,_,_,X,_ , _,X,X,X,_            // [---][287]
    ,   X,X,X,_,_ , _,X,X,X,_ , _,_,X,X,X , X,X,X,X,X            // [---][287]
    ,   X,X,X,X,X , 6,X,X,X,6 , X,X,X,X,X , X,X,X,X,X            // [---][287]
    ,   X,X,X,_,_ , X,X,_,X,X , _,_,X,X,X , X,X,_,X,X            // [---][287]
    ////                                                         // [---][287]
    ,   X,X,X,_,_ , _,_,_,_,_ , _,_,X,X,X , X,X,6,X,X            // [---][287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , 6,X,X,X,6            // [---][287]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , X,X,X,X,X            // [---][287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , 6,X,X,X,6            // [---][287]
    ,   X,X,X,_,_ , _,_,_,_,_ , _,_,X,X,X , X,X,6,X,X            // [---][287]
    ]);;                                                         // [---][287]
    _=(3);                                                       // [---][287]
    var d_artgola_udesign_any_o08 = new Uint8Array([             // [288][287]
/**9**/                                                          // [---][287]
/**9**/ 1,1,1,1,1 , 1,1,1,1,1 , 1,1,1,1,1 , 1,1,1,1,1            // [---][287]
    ,   1,_,_,_,_ , _,_,1,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,_,1,_,_ , _,_,_,_,_ , _,_,1,_,1 , 1,_,1,_,1            // [---][287]
    ,   1,_,_,_,_ , _,_,1,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,_,_,_,_ , 1,_,_,_,1 , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,1,_,1,_ , _,_,1,_,_ , _,1,_,1,1 , 1,1,_,1,1            // [---][287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,_,_,_,_ , 1,_,_,_,1 , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,_,_,_,_ , _,_,1,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,_,1,_,_ , _,_,_,_,_ , _,_,1,_,1 , 1,_,1,_,1            // [---][287]
    ,   1,_,_,_,_ , _,_,1,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,1,1,1,1 , 1,1,1,1,1 , 1,1,1,1,1 , 1,1,1,1,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,1,1,1,1 , 1,1,1,1,1 , 1,1,1,1,1 , 1,1,1,1,1            // [---][287]
    ,   1,_,_,_,_ , _,_,1,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,_,1,_,_ , _,_,_,_,_ , _,_,1,_,1 , 1,_,1,_,1            // [---][287]
    ,   1,_,_,_,_ , _,_,1,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,1,1,1,1 , 1,1,1,1,1 , 1,1,1,1,1 , 1,1,1,1,1            // [---][287]
    ]);;                                                         // [---][287]
    var d_artgola_udesign_any_o09 =([                            // [288][287]
/*10 */                                                          // [---][287]
/*10 */ 5,5,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,5,5,5,1            // [---][287]
    ,   5,_,_,_,_ , _,_,5,_,_ , _,_,_,_,1 , 1,_,5,_,1            // [---][287]
    ,   1,_,1,_,_ , _,_,_,_,_ , _,_,1,_,1 , 1,_,1,_,1            // [---][287]
    ,   1,_,_,_,_ , _,_,1,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,_,_,_,5 , 5,_,_,_,5 , 5,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,_,_,_,5 , 5,_,_,_,5 , 5,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   5,_,_,_,_ , _,_,_,_,_ , _,_,_,_,5 , 5,_,_,_,5            // [---][287]
    ,   5,5,_,1,_ , _,_,1,_,_ , _,1,_,5,5 , 5,5,_,5,5            // [---][287]
    ,   5,_,_,_,_ , _,_,_,_,_ , _,_,_,_,5 , 5,_,_,_,5            // [---][287]
    ,   1,_,_,_,5 , 5,_,_,_,5 , 5,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,_,_,_,5 , 5,_,_,_,5 , 5,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,_,_,_,_ , _,_,1,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [---][287]
    ,   1,_,1,_,_ , _,_,_,_,_ , _,_,1,_,1 , 1,_,1,_,1            // [---][287]
    ,   5,_,_,_,_ , _,_,5,_,_ , _,_,_,_,5 , 1,_,5,_,1            // [---][287]
    ,   5,5,1,1,1 , 1,5,5,5,1 , 1,1,1,5,5 , 1,5,5,5,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,1,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,5,5,5,1            // [---][287]
    ,   5,_,_,_,_ , _,_,5,_,_ , _,_,_,_,5 , 1,_,5,_,1            // [---][287]
    ,   5,5,1,_,_ , _,_,_,_,_ , _,_,1,5,5 , 1,_,1,_,1            // [---][287]
    ,   5,_,_,_,_ , _,_,5,_,_ , _,_,_,_,5 , 1,_,5,_,1            // [---][287]
    ,   1,1,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,5,5,5,1            // [---][287]
    ]);;                                                         // [---][287]
    var d_artgola_udesign_any_o10 = new Uint8Array([             // [288][287]
/*11 */                                                          // [---][287]
/*11 */ 5,5,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,5,5,5,1            // [---][287]
    ,   5,_,_,1,1 , 1,1,5,1,1 , 1,1,_,_,1 , 1,_,5,_,1            // [---][287]
    ,   1,_,1,_,_ , _,_,_,_,_ , _,_,1,_,1 , 1,1,1,1,1            // [---][287]
    ,   1,1,_,_,_ , _,_,1,_,_ , _,_,_,1,1 , 1,_,_,_,1            // [---][287]
    ,   1,1,_,_,5 , 5,1,1,1,5 , 5,_,_,1,1 , 1,_,_,_,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,1,_,_,5 , 5,_,_,_,5 , 5,_,_,1,1 , 1,1,_,1,1            // [---][287]
    ,   5,1,_,_,1 , 1,_,_,_,1 , 1,_,_,1,5 , 5,_,_,_,5            // [---][287]
    ,   5,5,_,1,1 , 1,1,1,1,1 , 1,1,_,5,5 , 5,5,_,5,5            // [---][287]
    ,   5,1,_,_,1 , 1,_,_,_,1 , 1,_,_,1,5 , 5,_,_,_,5            // [---][287]
    ,   1,1,_,_,5 , 5,_,_,_,5 , 5,_,_,1,1 , 1,1,_,1,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,1,_,_,5 , 5,1,1,1,5 , 5,_,_,1,1 , 1,_,_,_,1            // [---][287]
    ,   1,1,_,_,_ , _,_,1,_,_ , _,_,_,1,1 , 1,_,_,_,1            // [---][287]
    ,   1,_,1,_,_ , _,_,_,_,_ , _,_,1,_,1 , 1,1,1,1,1            // [---][287]
    ,   5,_,_,1,1 , 1,1,5,1,1 , 1,1,_,_,5 , 1,_,5,_,1            // [---][287]
    ,   5,5,1,1,1 , 1,5,5,5,1 , 1,1,1,5,5 , 1,5,5,5,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,1,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,5,5,5,1            // [---][287]
    ,   5,_,1,_,_ , 1,_,5,_,1 , _,_,1,_,5 , 1,_,5,_,1            // [---][287]
    ,   5,5,1,_,_ , _,_,_,_,_ , _,_,1,5,5 , 1,_,1,_,1            // [---][287]
    ,   5,_,1,_,_ , 1,_,5,_,1 , _,_,1,_,5 , 1,_,5,_,1            // [---][287]
    ,   1,1,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,5,5,5,1            // [---][287]
    ]);;                                                         // [---][287]
    var d_artgola_udesign_any_o11 = new Uint8Array([             // [288][287]
/*12 */                                                          // [---][287]
/*12 */ 5,5,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,5,5,5,1            // [---][287]
    ,   5,7,7,7,7 , 7,7,5,7,7 , 7,7,7,7,1 , 1,7,5,7,1            // [---][287]
    ,   1,7,7,_,_ , _,_,_,_,_ , _,_,7,7,1 , 1,1,1,1,1            // [---][287]
    ,   1,7,_,_,_ , _,_,1,_,_ , _,_,_,7,1 , 1,7,_,7,1            // [---][287]
    ,   1,7,_,_,5 , 5,1,1,1,5 , 5,_,_,7,1 , 1,7,_,7,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,7,_,_,5 , 5,_,_,_,5 , 5,_,_,7,1 , 1,1,_,1,1            // [---][287]
    ,   5,7,_,_,1 , 1,_,_,_,1 , 1,_,_,7,5 , 5,7,_,7,5            // [---][287]
    ,   5,5,_,1,1 , 1,1,1,1,1 , 1,1,_,5,5 , 5,5,_,5,5            // [---][287]
    ,   5,7,_,_,1 , 1,_,_,_,1 , 1,_,_,7,5 , 5,7,_,7,5            // [---][287]
    ,   1,7,_,_,5 , 5,_,_,_,5 , 5,_,_,7,1 , 1,1,_,1,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,7,_,_,5 , 5,1,1,1,5 , 5,_,_,7,1 , 1,7,_,7,1            // [---][287]
    ,   1,7,_,_,_ , _,_,1,_,_ , _,_,_,7,1 , 1,7,_,7,1            // [---][287]
    ,   1,7,7,_,_ , _,_,_,_,_ , _,_,7,7,1 , 1,1,1,1,1            // [---][287]
    ,   5,7,7,7,7 , 7,7,5,7,7 , 7,7,7,7,5 , 1,7,5,7,1            // [---][287]
    ,   5,5,1,1,1 , 1,5,5,5,1 , 1,1,1,5,5 , 1,5,5,5,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,1,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,5,5,5,1            // [---][287]
    ,   5,7,1,7,7 , 1,7,5,7,1 , 7,7,1,7,5 , 1,7,5,7,1            // [---][287]
    ,   5,5,1,_,_ , _,_,_,_,_ , _,_,1,5,5 , 1,_,1,_,1            // [---][287]
    ,   5,7,1,7,7 , 1,7,5,7,1 , 7,7,1,7,5 , 1,7,5,7,1            // [---][287]
    ,   1,1,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,5,5,5,1            // [---][287]
    ]);;                                                         // [---][287]
    var d_artgola_udesign_any_o12 = new Uint8Array([             // [288][287]
/*13 */                                                          // [---][287]
/*13 */ 5,5,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,5,5,5,1            // [---][287]
    ,   5,7,7,7,7 , 7,7,5,7,7 , 7,7,7,7,1 , 1,7,5,7,1            // [---][287]
    ,   1,7,7,4,4 , 4,4,5,4,4 , 4,4,7,7,1 , 1,1,1,1,1            // [---][287]
    ,   1,7,4,4,4 , 4,4,4,4,4 , 4,4,4,7,1 , 1,7,4,7,1            // [---][287]
    ,   1,7,4,4,5 , 5,5,4,5,5 , 5,4,4,7,1 , 1,7,4,7,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,7,4,4,5 , 5,5,4,5,5 , 5,4,4,7,1 , 1,4,4,4,1            // [---][287]
    ,   5,7,4,4,4 , 4,4,4,4,4 , 4,4,4,7,5 , 5,7,4,7,5            // [---][287]
    ,   5,5,5,1,1 , 1,1,4,1,1 , 1,1,5,5,5 , 5,5,5,5,5            // [---][287]
    ,   5,7,4,4,4 , 4,4,4,4,4 , 4,4,4,7,5 , 5,7,4,7,5            // [---][287]
    ,   1,7,4,4,5 , 5,5,4,5,5 , 5,4,4,7,1 , 1,4,4,4,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,7,4,4,5 , 5,5,4,5,5 , 5,4,4,7,1 , 1,7,4,7,1            // [---][287]
    ,   1,7,4,4,4 , 4,4,4,4,4 , 4,4,4,7,1 , 1,7,4,7,1            // [---][287]
    ,   1,7,7,4,4 , 4,4,5,4,4 , 4,4,7,7,1 , 1,1,1,1,1            // [---][287]
    ,   5,7,7,7,7 , 7,7,5,7,7 , 7,7,7,7,5 , 1,7,5,7,1            // [---][287]
    ,   5,5,1,1,1 , 1,5,5,5,1 , 1,1,1,5,5 , 1,5,5,5,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,1,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,5,1,5,1            // [---][287]
    ,   5,7,1,7,7 , 4,7,5,7,4 , 7,7,1,7,5 , 1,7,4,7,1            // [---][287]
    ,   5,5,1,4,4 , 4,4,5,4,4 , 4,4,1,5,5 , 1,4,1,4,1            // [---][287]
    ,   5,7,1,7,7 , 4,7,5,7,4 , 7,7,1,7,5 , 1,7,4,7,1            // [---][287]
    ,   1,1,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,5,1,5,1            // [---][287]
    ]);;                                                         // [---][287]
    var d_artgola_udesign_any_o13 = new Uint8Array([             // [288][287]
/*14 */                                                          // [---][287]
/*14 */ 5,5,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,5,5,5,1            // [---][287]
    ,   5,7,7,7,7 , 7,7,5,7,7 , 7,7,7,7,1 , 1,7,7,7,1            // [---][287]
    ,   1,7,_,_,_ , _,_,_,_,_ , _,_,_,7,1 , 1,1,_,1,1            // [---][287]
    ,   1,7,_,4,4 , 4,4,4,4,4 , 4,4,_,7,1 , 1,7,_,7,1            // [---][287]
    ,   1,7,_,4,5 , 5,5,4,5,5 , 5,4,_,7,1 , 1,7,_,7,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,7,_,4,5 , 5,5,4,5,5 , 5,4,_,7,1 , 1,4,_,4,1            // [---][287]
    ,   5,7,_,4,4 , 4,_,_,_,4 , 4,4,_,7,5 , 5,7,_,7,5            // [---][287]
    ,   5,5,_,1,1 , 1,_,4,_,1 , 1,1,_,5,5 , 5,5,_,5,5            // [---][287]
    ,   5,7,_,4,4 , 4,_,_,_,4 , 4,4,_,7,5 , 5,7,_,7,5            // [---][287]
    ,   1,7,_,4,5 , 5,5,4,5,5 , 5,4,_,7,1 , 1,4,_,4,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,7,_,4,5 , 5,5,4,5,5 , 5,4,_,7,1 , 1,7,_,7,1            // [---][287]
    ,   1,7,_,4,4 , 4,4,4,4,4 , 4,4,_,7,1 , 1,7,_,7,1            // [---][287]
    ,   1,7,_,_,_ , _,_,_,_,_ , _,_,_,7,1 , 1,1,_,1,1            // [---][287]
    ,   5,7,7,7,7 , 7,7,5,7,7 , 7,7,7,7,5 , 1,7,7,7,1            // [---][287]
    ,   5,5,1,1,1 , 1,5,5,5,1 , 1,1,1,5,5 , 1,5,5,5,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,1,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,1,1,1,1            // [---][287]
    ,   5,7,1,7,7 , 4,7,5,7,4 , 7,7,1,7,5 , 1,_,4,_,1            // [---][287]
    ,   5,7,_,_,_ , _,_,_,_,_ , _,_,_,7,5 , 1,_,1,_,1            // [---][287]
    ,   5,7,1,7,7 , 4,7,5,7,4 , 7,7,1,7,5 , 1,_,4,_,1            // [---][287]
    ,   1,1,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,1,1,1,1            // [---][287]
    ]);;                                                         // [---][287]
    var d_artgola_udesign_any_o14 = new Uint8Array([             // [288][287]
/*15 */                                                          // [---][287]
/*15 */ 5,5,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,5,5,5,1            // [---][287]
    ,   5,7,7,7,7 , 7,7,5,7,7 , 7,7,7,7,1 , 1,7,7,7,1            // [---][287]
    ,   1,7,_,_,_ , _,_,_,_,_ , _,_,_,7,1 , 1,_,_,_,1            // [---][287]
    ,   1,7,_,4,4 , 4,4,_,4,4 , 4,4,_,7,1 , 1,7,_,7,1            // [---][287]
    ,   1,7,_,4,5 , 5,5,_,5,5 , 5,4,_,7,1 , 1,7,_,7,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,7,_,4,5 , 5,5,_,5,5 , 5,4,_,7,1 , 1,7,_,7,1            // [---][287]
    ,   5,7,_,4,4 , 4,4,4,4,4 , 4,4,_,7,5 , 5,7,_,7,5            // [---][287]
    ,   5,5,_,_,_ , _,4,4,4,_ , _,_,_,5,5 , 5,_,_,_,5            // [---][287]
    ,   5,7,_,4,4 , 4,4,4,4,4 , 4,4,_,7,5 , 5,7,_,7,5            // [---][287]
    ,   1,7,_,4,5 , 5,5,_,5,5 , 5,4,_,7,1 , 1,7,_,7,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,7,_,4,5 , 5,5,_,5,5 , 5,4,_,7,1 , 1,7,_,7,1            // [---][287]
    ,   1,7,_,4,4 , 4,4,_,4,4 , 4,4,_,7,1 , 1,7,_,7,1            // [---][287]
    ,   1,7,_,_,_ , _,_,_,_,_ , _,_,_,7,1 , 1,_,_,_,1            // [---][287]
    ,   5,7,7,7,7 , 7,7,5,7,7 , 7,7,7,7,5 , 1,7,7,7,1            // [---][287]
    ,   5,5,1,1,1 , 1,5,5,5,1 , 1,1,1,5,5 , 1,5,5,5,1            // [---][287]
    ////                                                         // [---][287]
    ,   1,1,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,1,1,1,1            // [---][287]
    ,   5,7,_,7,7 , 7,7,_,7,7 , 7,7,_,7,5 , 1,_,4,_,1            // [---][287]
    ,   5,7,_,_,_ , _,_,_,_,_ , _,_,_,7,5 , 1,_,1,_,1            // [---][287]
    ,   5,7,_,7,7 , 7,7,_,7,7 , 7,7,_,7,5 , 1,_,4,_,1            // [---][287]
    ,   1,1,1,1,1 , 1,5,5,5,1 , 1,1,1,1,1 , 1,1,1,1,1            // [---][287]
    ]);;                                                         // [---][287]
    var d_artgola_udesign_any_o15 = new Uint8Array([             // [288][287]
/*16**/                                                          // [---][287]
/*16**/ 4,4,8,8,8 , 8,8,8,4,4 , 8,8,8,8,8 , 4,4,8,8,8            // [---][287]
    ,   4,_,8,_,8 , _,_,_,_,_ , _,_,_,_,8 , 4,_,8,_,8            // [---][287]
    ,   4,_,8,8,8 , 4,4,8,2,2 , 2,2,2,_,8 , 4,_,8,8,8            // [---][287]
    ,   4,_,2,_,2 , _,_,8,_,_ , 2,_,2,_,8 , 4,_,2,_,2            // [---][287]
    ,   4,_,2,_,2 , 2,2,8,4,4 , 2,_,2,_,8 , 4,_,2,_,2            // [---][287]
    ////                                                         // [---][287]
    ,   4,_,2,_,8 , 8,8,8,4,4 , 4,_,2,_,8 , 8,_,8,_,4            // [---][287]
    ,   4,_,2,_,8 , _,_,_,_,_ , 4,_,2,_,8 , 8,_,8,_,4            // [---][287]
    ,   4,4,4,4,4 , 4,4,4,4,4 , 4,4,4,4,4 , 4,_,8,_,4            // [---][287]
    ,   8,_,2,_,4 , _,_,_,_,_ , 8,_,2,_,4 , 4,_,8,_,8            // [---][287]
    ,   8,_,2,_,4 , 4,4,8,8,8 , 8,_,2,_,4 , 4,_,8,_,8            // [---][287]
    ////                                                         // [---][287]
    ,   8,_,2,_,2 , 4,4,8,2,2 , 2,_,2,_,4 , 2,_,2,_,4            // [---][287]
    ,   8,_,2,_,2 , _,_,8,_,_ , 2,_,2,_,4 , 2,_,2,_,4            // [---][287]
    ,   8,_,2,2,2 , 2,2,8,4,4 , 8,8,8,_,4 , 8,8,8,_,4            // [---][287]
    ,   8,_,_,_,_ , _,_,_,_,_ , 8,_,8,_,4 , 8,_,8,_,4            // [---][287]
    ,   8,8,8,8,8 , 4,4,8,8,8 , 8,8,8,4,4 , 8,8,8,4,4            // [---][287]
    ////                                                         // [---][287]
    ,   8,8,8,4,4 , 8,8,8,4,4 , 4,4,4,4,4 , 4,4,4,4,4            // [---][287]
    ,   8,_,8,_,_ , _,_,_,_,_ , _,_,_,_,4 , 4,_,_,_,4            // [---][287]
    ,   8,8,8,_,4 , 4,4,4,4,4 , 4,_,8,8,8 , 4,_,8,8,8            // [---][287]
    ,   4,_,_,_,_ , _,_,_,_,_ , _,_,8,_,8 , 4,_,8,_,8            // [---][287]
    ,   4,4,4,4,4 , 4,4,8,8,8 , 4,4,8,8,8 , 4,4,8,8,8            // [---][287]
    ]);;                                                         // [---][287]
                                                                 // [287]
    //:=============:#_DEPTH_000_:_SIXTEEN_OUTER_AGOLAS_#://     // [287]
    //:#_DEPTH_001_:_NINE_NESTED_AGOLAS_#:[287]:=========://     // [287]
    //:#_MIDDLE_AGOLA_SETS_#:[287]:======================://     // [287]
                                                                 // [---]
    //: @1ST_ONE@[ any_m01 ]( @ONE_INDEXED_NAMING@ ):::::://     // [288]
                                                                 // [---]
    var d_artgola_udesign_any_m01 = new Uint8Array([             // [287]
/**1**/                                                          // [287]
/**1**/ _,_,_,X,X , X,X,X,X,X , X,X,_,_,_ , X,X,X,X,X            // [287]
    ,   _,X,X,X,X , X,X,X,X,X , X,X,X,X,_ , X,X,X,X,X            // [287]
    ,   _,X,X,X,_ , X,_,_,_,X , _,X,X,X,_ , X,_,_,_,X            // [287]
    ,   X,X,X,X,_ , X,_,_,_,X , _,X,X,X,X , X,_,_,_,X            // [287]
    ,   X,X,_,_,_ , X,X,X,X,X , _,_,_,X,X , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   X,_,_,X,_ , X,X,X,X,X , _,X,_,_,X , X,X,X,X,X            // [287]
    ,   X,X,X,X,_ , X,_,_,_,X , _,X,X,X,X , X,_,_,_,X            // [287]
    ,   _,X,X,X,_ , X,_,_,_,X , _,X,X,X,_ , X,_,_,_,X            // [287]
    ,   X,X,X,X,_ , X,_,_,_,X , _,X,X,X,X , X,_,_,_,X            // [287]
    ,   X,_,_,X,_ , X,X,X,X,X , _,X,_,_,X , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,_,_,_ , X,X,X,X,X , _,_,_,X,X , X,X,X,X,X            // [287]
    ,   X,X,X,X,_ , X,_,_,_,X , _,X,X,X,X , X,_,_,_,X            // [287]
    ,   _,X,X,X,_ , X,_,_,_,X , _,X,X,X,_ , X,_,_,_,X            // [287]
    ,   _,X,X,X,X , X,X,X,X,X , X,X,X,X,_ , X,X,X,X,X            // [287]
    ,   _,_,_,X,X , X,X,X,X,X , X,X,_,_,_ , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , _,_,_,_,_            // [287]
    ,   X,X,_,_,X , X,_,_,_,X , X,_,_,X,X , _,X,X,X,_            // [287]
    ,   X,X,_,_,X , X,_,_,_,X , X,_,_,X,X , _,X,X,X,_            // [287]
    ,   X,X,_,_,X , X,_,_,_,X , X,_,_,X,X , _,X,X,X,_            // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , _,_,_,_,_            // [287]
    ]);;                                                         // [287]
    var d_artgola_udesign_any_m02 = new Uint8Array([             // [288][BUG][287]
/**2**/                                                          // [287]
/**2**/ X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [287]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [287]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,X,X,X , _,_,_,_,_ , X,X,X,X,X , _,_,_,_,_            // [287]
    ,   X,_,_,_,X , _,X,X,X,_ , X,_,_,_,X , _,X,X,X,_            // [287]
    ,   X,_,_,_,X , _,X,1,X,_ , X,_,_,_,X , _,X,1,X,_            // [287]
    ,   X,_,_,_,X , _,X,X,X,_ , X,_,_,_,X , _,X,X,X,_            // [287]
    ,   X,X,X,X,X , _,_,_,_,_ , X,X,X,X,X , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [287]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [287]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,X,X,X , _,_,_,_,_ , X,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,_,_,_,X , _,X,X,X,_ , X,_,_,_,X , X,1,1,1,X            // [287]
    ,   X,_,_,_,X , _,X,1,X,_ , X,_,_,_,X , X,1,_,1,X            // [287]
    ,   X,_,_,_,X , _,X,X,X,_ , X,_,_,_,X , X,1,1,1,X            // [287]
    ,   X,X,X,X,X , _,_,_,_,_ , X,X,X,X,X , X,X,X,X,X            // [287]
    ]);;                                                         // [287]
    var d_artgola_udesign_any_m03 = new Uint8Array([             // [287]
/**3**/                                                          // [287]
/**3**/ X,X,X,X,X , _,_,_,_,_ , X,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,_,_,_,X , _,X,X,X,_ , X,_,_,_,X , X,_,_,_,X            // [287]
    ,   X,_,5,5,X , 5,X,_,X,5 , X,5,5,_,X , X,5,5,5,X            // [287]
    ,   X,_,5,_,X , _,X,X,X,_ , X,_,5,_,X , X,_,5,_,X            // [287]
    ,   X,X,X,X,X , _,_,5,_,_ , X,X,X,X,X , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   _,_,5,_,_ , _,_,5,_,_ , _,_,5,_,_ , X,X,X,X,X            // [287]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , X,_,5,_,X            // [287]
    ,   _,X,_,X,5 , 5,X,_,X,5 , 5,X,_,X,_ , X,_,5,_,X            // [287]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , X,_,5,_,X            // [287]
    ,   _,_,5,_,_ , _,_,5,_,_ , _,_,5,_,_ , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,X,X,X , _,_,5,_,_ , X,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,_,5,_,X , _,X,X,X,_ , X,_,5,_,X , X,_,5,_,X            // [287]
    ,   X,_,5,5,X , 5,X,_,X,5 , X,5,5,_,X , X,5,5,5,X            // [287]
    ,   X,_,_,_,X , _,X,X,X,_ , X,_,_,_,X , X,_,_,_,X            // [287]
    ,   X,X,X,X,X , _,_,_,_,_ , X,X,X,X,X , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,_,5,_,X , X,_,_,_,X , X,_,5,_,X , X,_,5,_,X            // [287]
    ,   X,_,5,5,X , X,5,5,5,X , X,5,5,_,X , X,5,5,_,X            // [287]
    ,   X,_,5,_,X , X,_,_,_,X , X,_,5,_,X , X,_,_,_,X            // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ]);;                                                         // [287]
    var d_artgola_udesign_any_m04 = new Uint8Array([             // [287]
/**4**/                                                          // [287]
/**4**/ _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , X,X,X,X,X            // [287]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , X,_,_,_,X            // [287]
    ,   _,X,_,X,_ , _,X,_,X,_ , _,X,_,X,_ , X,X,X,_,X            // [287]
    ,   _,X,X,X,X , X,X,X,X,X , X,X,X,X,_ , X,X,X,_,X            // [287]
    ,   _,_,_,X,X , 3,3,_,3,3 , X,X,_,_,_ , 3,3,_,3,3            // [287]
    ////                                                         // [287]
    ,   _,_,_,X,2 , 3,3,_,3,3 , 2,X,_,_,_ , 3,3,_,3,3            // [287]
    ,   _,X,X,X,2 , 2,X,X,X,2 , 2,X,X,X,_ , X,X,X,_,X            // [287]
    ,   _,X,_,X,_ , _,X,_,X,_ , _,X,_,X,_ , X,X,X,_,X            // [287]
    ,   _,X,X,X,2 , 2,X,X,X,2 , 2,X,X,X,_ , X,X,X,_,X            // [287]
    ,   _,_,_,X,2 , 3,3,_,3,3 , 2,X,_,_,_ , 3,3,_,3,3            // [287]
    ////                                                         // [287]
    ,   _,_,_,X,X , 3,3,_,3,3 , X,X,_,_,_ , 3,3,_,3,3            // [287]
    ,   _,X,X,X,X , X,X,X,X,X , X,X,X,X,_ , X,X,X,_,X            // [287]
    ,   _,X,_,X,_ , _,X,_,X,_ , _,X,_,X,_ , X,X,X,_,X            // [287]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , X,X,X,_,X            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,X,X,3 , 3,X,X,X,3 , 3,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,_,X,X,2 , 2,X,X,X,2 , 2,X,X,X,X , X,2,2,_,X            // [287]
    ,   X,_,X,X,X , X,X,X,X,X , X,X,X,X,X , X,2,1,3,X            // [287]
    ,   X,_,_,_,2 , 2,_,_,_,2 , 2,_,_,_,X , X,_,3,3,X            // [287]
    ,   X,X,X,X,3 , 3,X,X,X,3 , 3,X,X,X,X , X,X,X,X,X            // [287]
    ]);;                                                         // [287]
    var d_artgola_udesign_any_m05 = new Uint8Array([             // [287]
/**5**/                                                          // [287]
/**5**/ 3,3,3,3,3 , 3,3,3,3,3 , 3,3,3,3,3 , 3,3,3,3,3            // [287]
    ,   3,X,_,X,_ , X,_,_,_,X , _,X,_,X,3 , 3,X,X,X,3            // [287]
    ,   3,X,_,X,_ , X,X,_,X,X , _,X,_,X,3 , 3,_,_,_,3            // [287]
    ,   3,X,X,X,X , X,X,_,X,X , X,X,X,X,3 , 3,X,_,X,3            // [287]
    ,   3,_,_,X,X , X,X,_,X,X , X,X,_,_,3 , 3,X,_,X,3            // [287]
    ////                                                         // [287]
    ,   3,_,_,X,X , X,X,_,X,X , X,X,_,_,3 , 3,X,_,X,3            // [287]
    ,   3,X,X,X,X , X,X,_,X,X , X,X,X,X,3 , 3,X,_,X,3            // [287]
    ,   3,X,_,X,_ , _,_,_,_,_ , _,X,_,X,3 , 3,_,_,_,3            // [287]
    ,   3,X,X,X,X , X,X,_,X,X , X,X,X,X,3 , 3,X,_,X,3            // [287]
    ,   3,_,_,X,X , X,X,_,X,X , X,X,_,_,3 , 3,X,_,X,3            // [287]
    ////                                                         // [287]
    ,   3,_,_,X,X , X,X,_,X,X , X,X,_,_,3 , 3,X,_,X,3            // [287]
    ,   3,X,X,X,X , X,X,_,X,X , X,X,X,X,3 , 3,X,_,X,3            // [287]
    ,   3,X,_,X,_ , X,X,_,X,X , _,X,_,X,3 , 3,_,_,_,3            // [287]
    ,   3,X,_,X,_ , X,_,_,_,X , _,X,_,X,3 , 3,X,X,X,3            // [287]
    ,   3,3,3,3,3 , 3,3,3,3,3 , 3,3,3,3,3 , 3,3,3,3,3            // [287]
    ////                                                         // [287]
    ,   3,3,3,3,3 , 3,3,3,3,3 , 3,3,3,3,3 , 3,3,3,3,3            // [287]
    ,   3,X,_,X,X , X,X,_,X,X , X,X,_,X,3 , 3,X,_,X,3            // [287]
    ,   3,X,_,_,_ , _,_,_,_,_ , _,_,_,X,3 , 3,_,_,_,3            // [287]
    ,   3,X,_,X,X , X,X,_,X,X , X,X,_,X,3 , 3,X,_,X,3            // [287]
    ,   3,3,3,3,3 , 3,3,3,3,3 , 3,3,3,3,3 , 3,3,3,3,3            // [287]
    ]);;                                                         // [287]
    var d_artgola_udesign_any_m06 = new Uint8Array([             // [287]
/**6**/                                                          // [287]
/**6**/ X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [287]
    ,   X,_,X,X,X , X,X,_,X,X , X,X,X,_,X , X,X,_,X,X            // [287]
    ,   X,_,X,X,X , X,X,_,X,X , X,X,X,_,X , X,X,_,X,X            // [287]
    ,   X,X,X,X,X , X,X,_,X,X , X,X,X,X,X , X,X,_,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,X,X,X , X,X,_,X,X , X,X,X,X,X , X,X,_,X,X            // [287]
    ,   X,_,X,X,X , X,X,X,X,X , X,X,X,_,X , X,X,_,X,X            // [287]
    ,   X,_,_,_,_ , _,X,X,X,_ , _,_,_,_,X , X,X,_,X,X            // [287]
    ,   X,_,X,X,X , X,X,X,X,X , X,X,X,_,X , X,X,_,X,X            // [287]
    ,   X,X,X,X,X , X,X,_,X,X , X,X,X,X,X , X,X,_,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,X,X,X , X,X,_,X,X , X,X,X,X,X , X,X,_,X,X            // [287]
    ,   X,_,X,X,X , X,X,_,X,X , X,X,X,_,X , X,X,_,X,X            // [287]
    ,   X,_,X,X,X , X,X,_,X,X , X,X,X,_,X , X,X,_,X,X            // [287]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,_,X,X,X , X,X,X,X,X , X,X,X,_,X , X,_,_,_,X            // [287]
    ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X , X,_,X,_,X            // [287]
    ,   X,_,X,X,X , X,X,X,X,X , X,X,X,_,X , X,_,_,_,X            // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ]);;                                                         // [287]
    var d_artgola_udesign_any_m07 = new Uint8Array([             // [287]
/**7**/                                                          // [287]
/**7**/ X,X,X,_,X , X,X,X,X,X , X,_,X,X,X , X,X,X,X,X            // [287]
    ,   X,X,X,_,_ , X,X,X,X,X , _,_,X,X,X , X,X,_,X,X            // [287]
    ,   X,X,X,X,_ , _,_,_,_,_ , _,X,X,X,X , X,X,_,X,X            // [287]
    ,   _,_,X,X,X , _,_,_,_,_ , X,X,X,_,_ , X,X,X,X,X            // [287]
    ,   X,_,_,X,X , X,_,_,_,X , X,X,_,_,X , X,X,_,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,_,_,X , X,X,_,X,X , X,_,_,X,X , X,X,_,X,X            // [287]
    ,   X,X,_,_,_ , X,X,X,X,X , _,_,_,X,X , X,X,X,X,X            // [287]
    ,   X,X,_,_,_ , _,X,X,X,_ , _,_,_,X,X , X,X,X,X,X            // [287]
    ,   X,X,_,_,_ , X,X,X,X,X , _,_,_,X,X , X,X,X,X,X            // [287]
    ,   X,X,_,_,X , X,X,_,X,X , X,_,_,X,X , X,X,_,X,X            // [287]
    ////                                                         // [287]
    ,   X,_,_,X,X , X,_,_,_,X , X,X,_,_,X , X,X,_,X,X            // [287]
    ,   _,_,X,X,X , _,_,_,_,_ , X,X,X,_,_ , X,X,X,X,X            // [287]
    ,   X,X,X,X,_ , _,_,_,_,_ , _,X,X,X,X , X,X,_,X,X            // [287]
    ,   X,X,X,_,_ , X,X,X,X,X , _,_,X,X,X , X,X,_,X,X            // [287]
    ,   X,X,X,_,X , X,X,X,X,X , X,_,X,X,X , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,_,X,X            // [287]
    ,   X,_,_,X,_ , _,X,X,X,_ , _,X,_,_,X , X,_,4,_,X            // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,_,X,X            // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ]);;                                                         // [287]
    var d_artgola_udesign_any_m08 = new Uint8Array([             // [287]
/**8**/                                                          // [287]
/**8**/ X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,X,X,_,_ , X,X,X,X,X , _,_,X,X,X , X,X,X,X,X            // [287]
    ,   X,X,X,X,X , _,_,_,_,_ , X,X,X,X,X , _,_,_,_,_            // [287]
    ,   X,_,X,X,_ , _,X,X,X,_ , _,X,X,_,X , _,X,X,X,_            // [287]
    ,   X,_,X,_,_ , X,_,_,_,X , _,_,X,_,X , X,_,_,_,X            // [287]
    ////                                                         // [287]
    ,   X,X,_,_,X , X,X,X,X,X , X,_,_,X,X , X,_,_,_,X            // [287]
    ,   X,X,_,X,_ , X,_,_,_,X , _,X,_,X,X , X,X,_,X,X            // [287]
    ,   X,X,_,X,_ , X,_,_,_,X , _,X,_,X,X , X,X,_,X,X            // [287]
    ,   X,X,_,X,_ , X,_,_,_,X , _,X,_,X,X , X,X,_,X,X            // [287]
    ,   X,X,_,_,X , X,X,X,X,X , X,_,_,X,X , X,_,_,_,X            // [287]
    ////                                                         // [287]
    ,   X,_,X,_,_ , X,_,_,_,X , _,_,X,_,X , X,_,_,_,X            // [287]
    ,   X,_,X,X,_ , _,X,X,X,_ , _,X,X,_,X , _,X,X,X,_            // [287]
    ,   X,X,X,X,X , _,_,_,_,_ , X,X,X,X,X , _,_,_,_,_            // [287]
    ,   X,X,X,_,_ , X,X,X,X,X , _,_,X,X,X , X,X,X,X,X            // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,_,_,X , X,X,X,X,X , X,_,_,X,X , X,X,X,X,X            // [287]
    ,   X,X,_,X,_ , _,X,X,X,_ , _,X,_,X,X , X,_,X,_,X            // [287]
    ,   X,X,_,X,_ , _,_,_,_,_ , _,X,_,X,X , X,X,X,X,X            // [287]
    ,   X,X,_,X,_ , _,X,X,X,_ , _,X,_,X,X , X,_,X,_,X            // [287]
    ,   X,X,_,_,X , X,X,X,X,X , X,_,_,X,X , X,X,X,X,X            // [287]
    ]);;                                                         // [287]
    var d_artgola_udesign_any_m09 = new Uint8Array([             // [287]
/**9**/                                                          // [287]
/**9**/ X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,_,X,X,_ , _,_,_,_,_ , _,X,X,_,X , X,_,_,_,X            // [287]
    ,   X,_,X,X,_ , X,X,X,X,X , _,X,X,_,X , X,_,_,_,X            // [287]
    ,   X,_,X,X,_ , X,X,X,X,X , _,X,X,_,X , X,X,X,X,X            // [287]
    ,   X,X,X,X,_ , X,X,X,X,X , _,X,X,X,X , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,X,X,_ , X,X,X,X,X , _,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,_,X,X,_ , X,X,X,X,X , _,X,X,_,X , X,_,_,_,X            // [287]
    ,   X,_,X,X,_ , X,X,X,X,X , _,X,X,_,X , X,_,_,_,X            // [287]
    ,   X,_,X,X,_ , X,X,X,X,X , _,X,X,_,X , X,_,_,_,X            // [287]
    ,   X,X,X,X,_ , X,X,X,X,X , _,X,X,X,X , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,X,X,_ , X,X,X,X,X , _,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,_,X,X,_ , X,X,X,X,X , _,X,X,_,X , X,X,X,X,X            // [287]
    ,   X,_,X,X,_ , X,X,X,X,X , _,X,X,_,X , X,_,_,_,X            // [287]
    ,   X,_,X,X,_ , _,_,_,_,_ , _,X,X,_,X , X,_,_,_,X            // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ////                                                         // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ,   X,_,_,X,X , X,_,_,_,X , X,X,_,_,X , X,_,_,_,X            // [287]
    ,   X,_,_,X,X , X,_,_,_,X , X,X,_,_,X , X,_,_,_,X            // [287]
    ,   X,_,_,X,X , X,_,_,_,X , X,X,_,_,X , X,_,_,_,X            // [287]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [287]
    ]);;                                                         // [287]
                                                                 // [287]
    //:======================:#_MIDDLE_AGOLA_SETS_#:[287]://     // [287]
    //:=========:#_DEPTH_001_:_NINE_NESTED_AGOLAS_#:[287]://     // [287]
    //:#_DEPTH_002_:_NINE_NESTED_AGOLAS_#:[287]:=========://     // [287]
    //:#_TERMINAL_AGOLA_SETS_#:[287]:====================://     // [287]
                                                                 // [---]
    //: @1ST_ONE@[ any_t01 ]( @ONE_INDEXED_NAMING@ ):::::://     // [288]
                                                                 // [---]
    _=( 2 ); //:@D_GRAY@[ 1 | 2 | 3 ]://                         // [287]
    var d_artgola_udesign_any_t01 = new Uint8Array([             // [287]
/**1**/                                                          // [287]
/**1**/ 1,1,1,1,1 , 1,_,_,_,1 , 1,1,1,1,1 , 1,1,1,1,1            // [287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , _,_,_,_,_            // [287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   1,_,_,_,_ , 1,_,_,_,1 , _,_,_,_,1 , _,_,_,_,_            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 1,_,_,_,1            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 1,_,_,_,1            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 1,_,_,_,1            // [287]
    ,   1,_,_,_,_ , 1,_,_,_,1 , _,_,_,_,1 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , _,_,_,_,_            // [287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , _,_,_,_,_            // [287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [287]
    ,   1,1,1,1,1 , 1,_,_,_,1 , 1,1,1,1,1 , 1,1,1,1,1            // [287]
    ////                                                         // [287]
    ,   1,1,1,_,_ , _,1,1,1,_ , _,_,1,1,1 , 1,1,_,1,1            // [287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , _,_,_,_,_            // [287]
    ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1            // [287]
    ,   1,1,1,_,_ , _,1,1,1,_ , _,_,1,1,1 , 1,1,_,1,1            // [287]
    ]);;                                                         // [287]
    _=( 3 ); //:@D_GRAY@[ 1 | 2 | 3 ]://                         // [287]
    var d_artgola_udesign_any_t02 = new Uint8Array([             // [287]
/**2**/                                                          // [287]
/**2**/ 2,2,2,2,2 , 2,_,_,_,2 , 2,2,2,2,2 , 2,2,2,2,2            // [287]
    ,   2,_,_,_,_ , _,_,_,_,_ , _,_,_,_,2 , 2,_,_,_,2            // [287]
    ,   2,_,_,_,_ , _,_,_,_,_ , _,_,_,_,2 , 2,_,_,_,2            // [287]
    ,   2,_,_,_,_ , _,_,_,_,_ , _,_,_,_,2 , _,_,_,_,_            // [287]
    ,   2,_,_,_,_ , _,_,_,_,_ , _,_,_,_,2 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   2,_,_,_,_ , 2,_,_,_,2 , _,_,_,_,2 , _,_,_,_,_            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 2,_,_,_,2            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 2,_,_,_,2            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 2,_,_,_,2            // [287]
    ,   2,_,_,_,_ , 2,_,_,_,2 , _,_,_,_,2 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   2,_,_,_,_ , _,_,_,_,_ , _,_,_,_,2 , _,_,_,_,_            // [287]
    ,   2,_,_,_,_ , _,_,_,_,_ , _,_,_,_,2 , _,_,_,_,_            // [287]
    ,   2,_,_,_,_ , _,_,_,_,_ , _,_,_,_,2 , 2,_,_,_,2            // [287]
    ,   2,_,_,_,_ , _,_,_,_,_ , _,_,_,_,2 , 2,_,_,_,2            // [287]
    ,   2,2,2,2,2 , 2,_,_,_,2 , 2,2,2,2,2 , 2,2,2,2,2            // [287]
    ////                                                         // [287]
    ,   2,2,2,_,_ , _,2,2,2,_ , _,_,2,2,2 , 2,2,_,2,2            // [287]
    ,   2,_,_,_,_ , _,_,_,_,_ , _,_,_,_,2 , 2,_,_,_,2            // [287]
    ,   2,_,_,_,_ , _,_,_,_,_ , _,_,_,_,2 , _,_,_,_,_            // [287]
    ,   2,_,_,_,_ , _,_,_,_,_ , _,_,_,_,2 , 2,_,_,_,2            // [287]
    ,   2,2,2,_,_ , _,2,2,2,_ , _,_,2,2,2 , 2,2,_,2,2            // [287]
    ]);;                                                         // [287]
    _=( 1 ); //:@D_GRAY@[ 1 | 2 | 3 ]://                         // [287]
    var d_artgola_udesign_any_t03 = new Uint8Array([             // [287]
/**3**/                                                          // [287]
/**3**/ 3,3,3,3,3 , 3,_,_,_,3 , 3,3,3,3,3 , 3,3,3,3,3            // [287]
    ,   3,_,_,_,_ , _,_,_,_,_ , _,_,_,_,3 , 3,_,_,_,3            // [287]
    ,   3,_,_,_,_ , _,_,_,_,_ , _,_,_,_,3 , 3,_,_,_,3            // [287]
    ,   3,_,_,_,_ , _,_,_,_,_ , _,_,_,_,3 , _,_,_,_,_            // [287]
    ,   3,_,_,_,_ , _,_,_,_,_ , _,_,_,_,3 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   3,_,_,_,_ , 3,_,_,_,3 , _,_,_,_,3 , _,_,_,_,_            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 3,_,_,_,3            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 3,_,_,_,3            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 3,_,_,_,3            // [287]
    ,   3,_,_,_,_ , 3,_,_,_,3 , _,_,_,_,3 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   3,_,_,_,_ , _,_,_,_,_ , _,_,_,_,3 , _,_,_,_,_            // [287]
    ,   3,_,_,_,_ , _,_,_,_,_ , _,_,_,_,3 , _,_,_,_,_            // [287]
    ,   3,_,_,_,_ , _,_,_,_,_ , _,_,_,_,3 , 3,_,_,_,3            // [287]
    ,   3,_,_,_,_ , _,_,_,_,_ , _,_,_,_,3 , 3,_,_,_,3            // [287]
    ,   3,3,3,3,3 , 3,_,_,_,3 , 3,3,3,3,3 , 3,3,3,3,3            // [287]
    ////                                                         // [287]
    ,   3,3,3,_,_ , _,3,3,3,_ , _,_,3,3,3 , 3,3,_,3,3            // [287]
    ,   3,_,_,_,_ , _,_,_,_,_ , _,_,_,_,3 , 3,_,_,_,3            // [287]
    ,   3,_,_,_,_ , _,_,_,_,_ , _,_,_,_,3 , _,_,_,_,_            // [287]
    ,   3,_,_,_,_ , _,_,_,_,_ , _,_,_,_,3 , 3,_,_,_,3            // [287]
    ,   3,3,3,_,_ , _,3,3,3,_ , _,_,3,3,3 , 3,3,_,3,3            // [287]
    ]);;                                                         // [287]
    _=(5); //:@M_GRAY@[ 4 | 5 | 6 ]://                           // [287]
    var d_artgola_udesign_any_t04 = new Uint8Array([             // [287]
/**4**/                                                          // [287]
/**4**/ 4,4,4,4,4 , 4,_,_,_,4 , 4,4,4,4,4 , 4,4,4,4,4            // [287]
    ,   4,_,_,_,_ , _,_,_,_,_ , _,_,_,_,4 , 4,_,_,_,4            // [287]
    ,   4,_,_,_,_ , _,_,_,_,_ , _,_,_,_,4 , 4,_,_,_,4            // [287]
    ,   4,_,_,_,_ , _,_,_,_,_ , _,_,_,_,4 , _,_,_,_,_            // [287]
    ,   4,_,_,_,_ , _,_,_,_,_ , _,_,_,_,4 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   4,_,_,_,_ , 4,_,_,_,4 , _,_,_,_,4 , _,_,_,_,_            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 4,_,_,_,4            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 4,_,_,_,4            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 4,_,_,_,4            // [287]
    ,   4,_,_,_,_ , 4,_,_,_,4 , _,_,_,_,4 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   4,_,_,_,_ , _,_,_,_,_ , _,_,_,_,4 , _,_,_,_,_            // [287]
    ,   4,_,_,_,_ , _,_,_,_,_ , _,_,_,_,4 , _,_,_,_,_            // [287]
    ,   4,_,_,_,_ , _,_,_,_,_ , _,_,_,_,4 , 4,_,_,_,4            // [287]
    ,   4,_,_,_,_ , _,_,_,_,_ , _,_,_,_,4 , 4,_,_,_,4            // [287]
    ,   4,4,4,4,4 , 4,_,_,_,4 , 4,4,4,4,4 , 4,4,4,4,4            // [287]
    ////                                                         // [287]
    ,   4,4,4,_,_ , _,4,4,4,_ , _,_,4,4,4 , 4,4,_,4,4            // [287]
    ,   4,_,_,_,_ , _,_,_,_,_ , _,_,_,_,4 , 4,_,_,_,4            // [287]
    ,   4,_,_,_,_ , _,_,_,_,_ , _,_,_,_,4 , _,_,_,_,_            // [287]
    ,   4,_,_,_,_ , _,_,_,_,_ , _,_,_,_,4 , 4,_,_,_,4            // [287]
    ,   4,4,4,_,_ , _,4,4,4,_ , _,_,4,4,4 , 4,4,_,4,4            // [287]
    ]);;                                                         // [287]
    _=(6); //:@M_GRAY@[ 4 | 5 | 6 ]://                           // [287]
    var d_artgola_udesign_any_t05 = new Uint8Array([             // [287]
/**5**/                                                          // [287]
/**5**/ 5,5,5,5,5 , 5,_,_,_,5 , 5,5,5,5,5 , 5,5,5,5,5            // [287]
    ,   5,_,_,_,_ , _,_,_,_,_ , _,_,_,_,5 , 5,_,_,_,5            // [287]
    ,   5,_,_,_,_ , _,_,_,_,_ , _,_,_,_,5 , 5,_,_,_,5            // [287]
    ,   5,_,_,_,_ , _,_,_,_,_ , _,_,_,_,5 , _,_,_,_,_            // [287]
    ,   5,_,_,_,_ , _,_,_,_,_ , _,_,_,_,5 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   5,_,_,_,_ , 5,_,_,_,5 , _,_,_,_,5 , _,_,_,_,_            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 5,_,_,_,5            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 5,_,_,_,5            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 5,_,_,_,5            // [287]
    ,   5,_,_,_,_ , 5,_,_,_,5 , _,_,_,_,5 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   5,_,_,_,_ , _,_,_,_,_ , _,_,_,_,5 , _,_,_,_,_            // [287]
    ,   5,_,_,_,_ , _,_,_,_,_ , _,_,_,_,5 , _,_,_,_,_            // [287]
    ,   5,_,_,_,_ , _,_,_,_,_ , _,_,_,_,5 , 5,_,_,_,5            // [287]
    ,   5,_,_,_,_ , _,_,_,_,_ , _,_,_,_,5 , 5,_,_,_,5            // [287]
    ,   5,5,5,5,5 , 5,_,_,_,5 , 5,5,5,5,5 , 5,5,5,5,5            // [287]
    ////                                                         // [287]
    ,   5,5,5,_,_ , _,5,5,5,_ , _,_,5,5,5 , 5,5,_,5,5            // [287]
    ,   5,_,_,_,_ , _,_,_,_,_ , _,_,_,_,5 , 5,_,_,_,5            // [287]
    ,   5,_,_,_,_ , _,_,_,_,_ , _,_,_,_,5 , _,_,_,_,_            // [287]
    ,   5,_,_,_,_ , _,_,_,_,_ , _,_,_,_,5 , 5,_,_,_,5            // [287]
    ,   5,5,5,_,_ , _,5,5,5,_ , _,_,5,5,5 , 5,5,_,5,5            // [287]
    ]);;                                                         // [287]
    _=(4); //:@M_GRAY@[ 4 | 5 | 6 ]://                           // [287]
    var d_artgola_udesign_any_t06 = new Uint8Array([             // [287]
/**6**/                                                          // [287]
/**6**/ 6,6,6,6,6 , 6,_,_,_,6 , 6,6,6,6,6 , 6,6,6,6,6            // [287]
    ,   6,_,_,_,_ , _,_,_,_,_ , _,_,_,_,6 , 6,_,_,_,6            // [287]
    ,   6,_,_,_,_ , _,_,_,_,_ , _,_,_,_,6 , 6,_,_,_,6            // [287]
    ,   6,_,_,_,_ , _,_,_,_,_ , _,_,_,_,6 , _,_,_,_,_            // [287]
    ,   6,_,_,_,_ , _,_,_,_,_ , _,_,_,_,6 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   6,_,_,_,_ , 6,_,_,_,6 , _,_,_,_,6 , _,_,_,_,_            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 6,_,_,_,6            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 6,_,_,_,6            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 6,_,_,_,6            // [287]
    ,   6,_,_,_,_ , 6,_,_,_,6 , _,_,_,_,6 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   6,_,_,_,_ , _,_,_,_,_ , _,_,_,_,6 , _,_,_,_,_            // [287]
    ,   6,_,_,_,_ , _,_,_,_,_ , _,_,_,_,6 , _,_,_,_,_            // [287]
    ,   6,_,_,_,_ , _,_,_,_,_ , _,_,_,_,6 , 6,_,_,_,6            // [287]
    ,   6,_,_,_,_ , _,_,_,_,_ , _,_,_,_,6 , 6,_,_,_,6            // [287]
    ,   6,6,6,6,6 , 6,_,_,_,6 , 6,6,6,6,6 , 6,6,6,6,6            // [287]
    ////                                                         // [287]
    ,   6,6,6,_,_ , _,6,6,6,_ , _,_,6,6,6 , 6,6,_,6,6            // [287]
    ,   6,_,_,_,_ , _,_,_,_,_ , _,_,_,_,6 , 6,_,_,_,6            // [287]
    ,   6,_,_,_,_ , _,_,_,_,_ , _,_,_,_,6 , _,_,_,_,_            // [287]
    ,   6,_,_,_,_ , _,_,_,_,_ , _,_,_,_,6 , 6,_,_,_,6            // [287]
    ,   6,6,6,_,_ , _,6,6,6,_ , _,_,6,6,6 , 6,6,_,6,6            // [287]
    ]);;                                                         // [287]
    _=(8); //:@L_GRAY@[ 7 | 8 | 9 ]://                           // [287]
    var d_artgola_udesign_any_t07 = new Uint8Array([             // [287]
/**7**/                                                          // [287]
/**7**/ 7,7,7,7,7 , 7,_,_,_,7 , 7,7,7,7,7 , 7,7,7,7,7            // [287]
    ,   7,_,_,_,_ , _,_,_,_,_ , _,_,_,_,7 , 7,_,_,_,7            // [287]
    ,   7,_,_,_,_ , _,_,_,_,_ , _,_,_,_,7 , 7,_,_,_,7            // [287]
    ,   7,_,_,_,_ , _,_,_,_,_ , _,_,_,_,7 , _,_,_,_,_            // [287]
    ,   7,_,_,_,_ , _,_,_,_,_ , _,_,_,_,7 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   7,_,_,_,_ , 7,_,_,_,7 , _,_,_,_,7 , _,_,_,_,_            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 7,_,_,_,7            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 7,_,_,_,7            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 7,_,_,_,7            // [287]
    ,   7,_,_,_,_ , 7,_,_,_,7 , _,_,_,_,7 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   7,_,_,_,_ , _,_,_,_,_ , _,_,_,_,7 , _,_,_,_,_            // [287]
    ,   7,_,_,_,_ , _,_,_,_,_ , _,_,_,_,7 , _,_,_,_,_            // [287]
    ,   7,_,_,_,_ , _,_,_,_,_ , _,_,_,_,7 , 7,_,_,_,7            // [287]
    ,   7,_,_,_,_ , _,_,_,_,_ , _,_,_,_,7 , 7,_,_,_,7            // [287]
    ,   7,7,7,7,7 , 7,_,_,_,7 , 7,7,7,7,7 , 7,7,7,7,7            // [287]
    ////                                                         // [287]
    ,   7,7,7,_,_ , _,7,7,7,_ , _,_,7,7,7 , 7,7,_,7,7            // [287]
    ,   7,_,_,_,_ , _,_,_,_,_ , _,_,_,_,7 , 7,_,_,_,7            // [287]
    ,   7,_,_,_,_ , _,_,_,_,_ , _,_,_,_,7 , _,_,_,_,_            // [287]
    ,   7,_,_,_,_ , _,_,_,_,_ , _,_,_,_,7 , 7,_,_,_,7            // [287]
    ,   7,7,7,_,_ , _,7,7,7,_ , _,_,7,7,7 , 7,7,_,7,7            // [287]
    ]);;                                                         // [287]
    _=(9); //:@L_GRAY@[ 7 | 8 | 9 ]://                           // [287]
    var d_artgola_udesign_any_t08 = new Uint8Array([             // [287]
/**8**/                                                          // [287]
/**8**/ 8,8,8,8,8 , 8,_,_,_,8 , 8,8,8,8,8 , 8,8,8,8,8            // [287]
    ,   8,_,_,_,_ , _,_,_,_,_ , _,_,_,_,8 , 8,_,_,_,8            // [287]
    ,   8,_,_,_,_ , _,_,_,_,_ , _,_,_,_,8 , 8,_,_,_,8            // [287]
    ,   8,_,_,_,_ , _,_,_,_,_ , _,_,_,_,8 , _,_,_,_,_            // [287]
    ,   8,_,_,_,_ , _,_,_,_,_ , _,_,_,_,8 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   8,_,_,_,_ , 8,_,_,_,8 , _,_,_,_,8 , _,_,_,_,_            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 8,_,_,_,8            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 8,_,_,_,8            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 8,_,_,_,8            // [287]
    ,   8,_,_,_,_ , 8,_,_,_,8 , _,_,_,_,8 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   8,_,_,_,_ , _,_,_,_,_ , _,_,_,_,8 , _,_,_,_,_            // [287]
    ,   8,_,_,_,_ , _,_,_,_,_ , _,_,_,_,8 , _,_,_,_,_            // [287]
    ,   8,_,_,_,_ , _,_,_,_,_ , _,_,_,_,8 , 8,_,_,_,8            // [287]
    ,   8,_,_,_,_ , _,_,_,_,_ , _,_,_,_,8 , 8,_,_,_,8            // [287]
    ,   8,8,8,8,8 , 8,_,_,_,8 , 8,8,8,8,8 , 8,8,8,8,8            // [287]
    ////                                                         // [287]
    ,   8,8,8,_,_ , _,8,8,8,_ , _,_,8,8,8 , 8,8,_,8,8            // [287]
    ,   8,_,_,_,_ , _,_,_,_,_ , _,_,_,_,8 , 8,_,_,_,8            // [287]
    ,   8,_,_,_,_ , _,_,_,_,_ , _,_,_,_,8 , _,_,_,_,_            // [287]
    ,   8,_,_,_,_ , _,_,_,_,_ , _,_,_,_,8 , 8,_,_,_,8            // [287]
    ,   8,8,8,_,_ , _,8,8,8,_ , _,_,8,8,8 , 8,8,_,8,8            // [287]
    ]);;                                                         // [287]
    _=(7); //:@L_GRAY@[ 7 | 8 | 9 ]://                           // [287]
    var d_artgola_udesign_any_t09 = new Uint8Array([             // [287]
/**9**/                                                          // [287]
/**9**/ 9,9,9,9,9 , 9,_,_,_,9 , 9,9,9,9,9 , 9,9,9,9,9            // [287]
    ,   9,_,_,_,_ , _,_,_,_,_ , _,_,_,_,9 , 9,_,_,_,9            // [287]
    ,   9,_,_,_,_ , _,_,_,_,_ , _,_,_,_,9 , 9,_,_,_,9            // [287]
    ,   9,_,_,_,_ , _,_,_,_,_ , _,_,_,_,9 , _,_,_,_,_            // [287]
    ,   9,_,_,_,_ , _,_,_,_,_ , _,_,_,_,9 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   9,_,_,_,_ , 9,_,_,_,9 , _,_,_,_,9 , _,_,_,_,_            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 9,_,_,_,9            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 9,_,_,_,9            // [287]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 9,_,_,_,9            // [287]
    ,   9,_,_,_,_ , 9,_,_,_,9 , _,_,_,_,9 , _,_,_,_,_            // [287]
    ////                                                         // [287]
    ,   9,_,_,_,_ , _,_,_,_,_ , _,_,_,_,9 , _,_,_,_,_            // [287]
    ,   9,_,_,_,_ , _,_,_,_,_ , _,_,_,_,9 , _,_,_,_,_            // [287]
    ,   9,_,_,_,_ , _,_,_,_,_ , _,_,_,_,9 , 9,_,_,_,9            // [287]
    ,   9,_,_,_,_ , _,_,_,_,_ , _,_,_,_,9 , 9,_,_,_,9            // [287]
    ,   9,9,9,9,9 , 9,_,_,_,9 , 9,9,9,9,9 , 9,9,9,9,9            // [287]
    ////                                                         // [287]
    ,   9,9,9,_,_ , _,9,9,9,_ , _,_,9,9,9 , 9,9,_,9,9            // [287]
    ,   9,_,_,_,_ , _,_,_,_,_ , _,_,_,_,9 , 9,_,_,_,9            // [287]
    ,   9,_,_,_,_ , _,_,_,_,_ , _,_,_,_,9 , _,_,_,_,_            // [287]
    ,   9,_,_,_,_ , _,_,_,_,_ , _,_,_,_,9 , 9,_,_,_,9            // [287]
    ,   9,9,9,_,_ , _,9,9,9,_ , _,_,9,9,9 , 9,9,_,9,9            // [287]
    ]);;                                                         // [287]
    //:====================:#_TERMINAL_AGOLA_SETS_#:[287]://     // [---]
    //:=========:#_DEPTH_002_:_NINE_NESTED_AGOLAS_#:[287]://     // [---]
    //:#_GOLAPACK_2022_#:[288]:==========================://     // [288]
                                                                 // [288]
        //:----------------------------------------------://     // [288]
        //: DESIGN_CHANGE_2022_09_23                     ://     // [288]
        //:@DESIGN_CHANGE@                               ://     // [288]
        //:                                              ://     // [288]
        //: Decided ARTGOLA is not going to be creating  ://     // [288]
        //: decal patterns. Decal patterns are going to  ://     // [288]
        //: be drawn with a different format that is     ://     // [288]
        //: higher density to create better textural     ://     // [288]
        //: information.                                 ://     // [288]
        //:----------------------------------------------://     // [288]
                                                                 // [288]
        //:----------------------------------------------://     // [288]
        //: @au0@ : Array_Udesign(depth:0) ::::::::::::::://     // [288]
        //: @au1@ : Array_Udesign(depth:1) ::::::::::::::://     // [288]
        //: @au2@ : Array_Udesign(depth:2) ::::::::::::::://     // [288]
        //: @i48@ : generic_Index( 48 of them )::::::::::://     // [288]
        //: @i09@ : generic_Index(  9 of them )::::::::::://     // [288]
        //: @au0_i48_udesign@ : ( i48 )===>( udesign )   ://     // [288]
        //: @au1_i09_udesign@ : ( i09 )===>( udesign )   ://     // [288]
        //: @au2_i09_udesign@ : ( i09 )===>( udesign )   ://     // [288]
        //: @key_i09_hex@     : ( i09 )===>( RGBAHex )   ://     // [288]
        //:----------------------------------------------://     // [288]
                                                                 // [288]
        var i48_au0 = "[FIX:au0_i48_udesign]" ;                  // [288]
        var i09_au1 = "[FIX:au1_i09_udesign]" ;                  // [288]
        var i09_au2 = "[FIX:au2_i09_udesign]" ;                  // [288]
                                                                 // [288]
        var           au0_i48_mmi = "[NAMESPACE_ANYONE??]" ;     // [288]
        var               i48_mmi = "[NAMESPACE_ANYONE??]" ;     // [288]
                                                                 // [288]
        var ac4_mmi =   "[NIXING_DECALS_USE::au0_i48_mmi]" ;     // [288]
                                                                 // [288]
        var d_artgola_ac3_mmi = "[#AC3_MMI_NO_CLEAN_DIV#]" ;     // [288]
        var d_artgola_ac3_mmx = "[#AC3_MMX_NO_CLEAN_DIV#]" ;     // [288]
        var d_artgola_ac3_mmy = "[#AC3_MMY_NO_CLEAN_DIV#]" ;     // [288]
                                                                 // [288]
        var  ac3_mmi ="[>d_artgola_au0_i48_mmi<]" ;              // [288]
        var  ac3_mmx ="[>d_artgola_au0_i48_mmi<]" ;              // [288]
        var  ac3_mmy ="[>d_artgola_au0_i48_mmi<]" ;              // [288]
                                                                 // [288]
        var d_artgola_au0_i48_mmi = new Uint8Array([ /////////// // [288]
                                                                 // [288]
            c_mmc  //: i48[ 00 ] v12[ 00 ] la3[_0_] v16[ 00 ]:// // [288]
        ,   c_mmc  //: i48[ 01 ] v12[ 01 ] la3[_0_] v16[ 01 ]:// // [288]
        ,   c_mmc  //: i48[ 02 ] v12[ 02 ] la3[_0_] v16[ 02 ]:// // [288]
        ,   c_mmc  //: i48[ 03 ] v12[ 03 ] la3[_0_] v16[ 03 ]:// // [288]
        ,   c_mmc  //: i48[ 04 ] v12[ 04 ] la3[_0_] v16[ 04 ]:// // [288]
        ,   c_mmc  //: i48[ 05 ] v12[ 05 ] la3[_0_] v16[ 05 ]:// // [288]
        ,   c_mmc  //: i48[ 06 ] v12[ 06 ] la3[_0_] v16[ 06 ]:// // [288]
        ,   c_mmc  //: i48[ 07 ] v12[ 07 ] la3[_0_] v16[ 07 ]:// // [288]
        ,   c_mmc  //: i48[ 08 ] v12[ 08 ] la3[_0_] v16[ 08 ]:// // [288]
        ,   c_mmc  //: i48[ 09 ] v12[ 09 ] la3[_0_] v16[ 09 ]:// // [288]
        ,   c_mmc  //: i48[ 10 ] v12[ 10 ] la3[_0_] v16[ 10 ]:// // [288]
        ,   c_mmc  //: i48[ 11 ] v12[ 11 ] la3[_0_] v16[ 11 ]:// // [288]
        //:                                                  :// // [288]
        ,   c_mmd  //: i48[ 12 ] v12[ 00 ] la3[_0_] v16[ 12 ]:// // [288]
        ,   c_mmd  //: i48[ 13 ] v12[ 01 ] la3[_0_] v16[ 13 ]:// // [288]
        ,   c_mmd  //: i48[ 14 ] v12[ 02 ] la3[_0_] v16[ 14 ]:// // [288]
        ,   c_mmd  //: i48[ 15 ] v12[ 03 ] la3[_0_] v16[ 15 ]:// // [288]
        ,   c_mmd  //: i48[ 16 ] v12[ 04 ] la3[_1_] v16[ 00 ]:// // [288]
        ,   c_mmd  //: i48[ 17 ] v12[ 05 ] la3[_1_] v16[ 01 ]:// // [288]
        ,   c_mmd  //: i48[ 18 ] v12[ 06 ] la3[_1_] v16[ 02 ]:// // [288]
        ,   c_mmd  //: i48[ 19 ] v12[ 07 ] la3[_1_] v16[ 03 ]:// // [288]
        ,   c_mmd  //: i48[ 20 ] v12[ 08 ] la3[_1_] v16[ 04 ]:// // [288]
        ,   c_mmd  //: i48[ 21 ] v12[ 09 ] la3[_1_] v16[ 05 ]:// // [288]
        ,   c_mmd  //: i48[ 22 ] v12[ 10 ] la3[_1_] v16[ 06 ]:// // [288]
        ,   c_mmd  //: i48[ 23 ] v12[ 11 ] la3[_1_] v16[ 07 ]:// // [288]
        //:                                                  :// // [288]
        ,   c_mme  //: i48[ 24 ] v12[ 00 ] la3[_1_] v16[ 08 ]:// // [288]
        ,   c_mme  //: i48[ 25 ] v12[ 01 ] la3[_1_] v16[ 09 ]:// // [288]
        ,   c_mme  //: i48[ 26 ] v12[ 02 ] la3[_1_] v16[ 10 ]:// // [288]
        ,   c_mme  //: i48[ 27 ] v12[ 03 ] la3[_1_] v16[ 11 ]:// // [288]
        ,   c_mme  //: i48[ 28 ] v12[ 04 ] la3[_1_] v16[ 12 ]:// // [288]
        ,   c_mme  //: i48[ 29 ] v12[ 05 ] la3[_1_] v16[ 13 ]:// // [288]
        ,   c_mme  //: i48[ 30 ] v12[ 06 ] la3[_1_] v16[ 14 ]:// // [288]
        ,   c_mme  //: i48[ 31 ] v12[ 07 ] la3[_1_] v16[ 15 ]:// // [288]
        ,   c_mme  //: i48[ 32 ] v12[ 08 ] la3[_1_] v16[ 00 ]:// // [288]
        ,   c_mme  //: i48[ 33 ] v12[ 09 ] la3[_2_] v16[ 01 ]:// // [288]
        ,   c_mme  //: i48[ 34 ] v12[ 10 ] la3[_2_] v16[ 02 ]:// // [288]
        ,   c_mme  //: i48[ 35 ] v12[ 11 ] la3[_2_] v16[ 03 ]:// // [288]
        //:                                                  :// // [288]
        ,   c_mmf  //: i48[ 36 ] v12[ 00 ] la3[_2_] v16[ 04 ]:// // [288]
        ,   c_mmf  //: i48[ 37 ] v12[ 01 ] la3[_2_] v16[ 05 ]:// // [288]
        ,   c_mmf  //: i48[ 38 ] v12[ 02 ] la3[_2_] v16[ 06 ]:// // [288]
        ,   c_mmf  //: i48[ 39 ] v12[ 03 ] la3[_2_] v16[ 07 ]:// // [288]
        ,   c_mmf  //: i48[ 40 ] v12[ 04 ] la3[_2_] v16[ 08 ]:// // [288]
        ,   c_mmf  //: i48[ 41 ] v12[ 05 ] la3[_2_] v16[ 09 ]:// // [288]
        ,   c_mmf  //: i48[ 42 ] v12[ 06 ] la3[_2_] v16[ 10 ]:// // [288]
        ,   c_mmf  //: i48[ 43 ] v12[ 07 ] la3[_2_] v16[ 11 ]:// // [288]
        ,   c_mmf  //: i48[ 44 ] v12[ 08 ] la3[_2_] v16[ 12 ]:// // [288]
        ,   c_mmf  //: i48[ 45 ] v12[ 09 ] la3[_2_] v16[ 13 ]:// // [288]
        ,   c_mmf  //: i48[ 46 ] v12[ 10 ] la3[_2_] v16[ 14 ]:// // [288]
        ,   c_mmf  //: i48[ 47 ] v12[ 11 ] la3[_2_] v16[ 15 ]:// // [288]
        ]);;                                                     // [288]
                                                                 // [288]
        //:@nc4@:#_NETWORK_CHANNEL_# , 4 channels. NBI ::://     // [288]
                                                                 // [288]
        var d_artgola_au0_i48_nc4 = new Uint8Array([             // [288]
                                                                 // [288]
            //:BELOW_MEMORY_CELL[ c_mmc ]::::::::::::::::://     // [288]
                                                                 // [288]
            0,1,2,3  //: <-- layer_0(la3:0) : R,G,B,A :::://     // [288]
        ,   0,1,2,3  //: <-- layer_1(la3:1) : R,G,B,A :::://     // [288]
        ,   0,1,2,3  //: <-- layer_2(la3:2) : R,G,B,A :::://     // [288]
                                                                 // [288]
            //:BELOW_MEMORY_CELL[ c_mmd ]::::::::::::::::://     // [288]
                                                                 // [288]
        ,   0,1,2,3  //: <-- layer_0(la3:0) : R,G,B,A :::://     // [288]
        ,   0,1,2,3  //: <-- layer_1(la3:1) : R,G,B,A :::://     // [288]
        ,   0,1,2,3  //: <-- layer_2(la3:2) : R,G,B,A :::://     // [288]
                                                                 // [288]
            //:BELOW_MEMORY_CELL[ c_mme ]::::::::::::::::://     // [288]
                                                                 // [288]
        ,   0,1,2,3  //: <-- layer_0(la3:0) : R,G,B,A :::://     // [288]
        ,   0,1,2,3  //: <-- layer_1(la3:1) : R,G,B,A :::://     // [288]
        ,   0,1,2,3  //: <-- layer_2(la3:2) : R,G,B,A :::://     // [288]
                                                                 // [288]
            //:BELOW_MEMORY_CELL[ c_mmf ]::::::::::::::::://     // [288]
                                                                 // [288]
        ,   0,1,2,3  //: <-- layer_0(la3:0) : R,G,B,A :::://     // [288]
        ,   0,1,2,3  //: <-- layer_1(la3:1) : R,G,B,A :::://     // [288]
        ,   0,1,2,3  //: <-- layer_2(la3:2) : R,G,B,A :::://     // [288]
        ]);;                                                     // [288]
                                                                 // [288]
        //:@la3:LAyerindex:::::://                               // [288]
                                                                 // [288]
        var d_artgola_au0_i48_la3 = new Uint8Array([             // [288]
                                                                 // [288]
            //:BELOW_MEMORY_CELL[ c_mmc ]::::::::::::::::://     // [288]
                                                                 // [288]
            0,0,0,0  //: <-- layer_0(la3:0)::::::::::::::://     // [288]
        ,   1,1,1,1  //: <-- layer_1(la3:1)::::::::::::::://     // [288]
        ,   2,2,2,2  //: <-- layer_2(la3:2)::::::::::::::://     // [288]
                                                                 // [288]
            //:BELOW_MEMORY_CELL[ c_mmd ]::::::::::::::::://     // [288]
                                                                 // [288]
        ,   0,0,0,0  //: <-- layer_0(la3:0)::::::::::::::://     // [288]
        ,   1,1,1,1  //: <-- layer_1(la3:1)::::::::::::::://     // [288]
        ,   2,2,2,2  //: <-- layer_2(la3:2)::::::::::::::://     // [288]
                                                                 // [288]
            //:BELOW_MEMORY_CELL[ c_mme ]::::::::::::::::://     // [288]
                                                                 // [288]
        ,   0,0,0,0  //: <-- layer_0(la3:0)::::::::::::::://     // [288]
        ,   1,1,1,1  //: <-- layer_1(la3:1)::::::::::::::://     // [288]
        ,   2,2,2,2  //: <-- layer_2(la3:2)::::::::::::::://     // [288]
                                                                 // [288]
            //:BELOW_MEMORY_CELL[ c_mmf ]::::::::::::::::://     // [288]
                                                                 // [288]
        ,   0,0,0,0  //: <-- layer_0(la3:0)::::::::::::::://     // [288]
        ,   1,1,1,1  //: <-- layer_1(la3:1)::::::::::::::://     // [288]
        ,   2,2,2,2  //: <-- layer_2(la3:2)::::::::::::::://     // [288]
        ]);;                                                     // [288]
                                                                 // [288]
        //: d_1234567_1234567  ::::::::::::::::::::::::::://     // [288]
        var d_artgola_golapak ={ //:BEG_GOLAPACK:::::::::://     // [288]
        //: d_123_123_123_123  ::::::::::::::::::::::::::://     // [288]
                                                                 // [288]
            au0_i48_udesign : [ //: @ZERO_INDEXED_ARRAY@ ://     // [288]
                                                                 // [288]
                //:BEG:GEOM_TILE_MMI[    c_mmc && c_mmd ]://     // [288]
                                           //:-----------://     // [288]
                d_artgola_udesign_any_o00  //:@HACKGEOM0@://     // [288]
            ,   d_artgola_udesign_any_o01  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o02  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o03  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o04  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o05  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o06  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o07  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o08  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o09  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o10  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o11  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o12  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o13  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o14  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o15  //:-----------://     // [288]
                                           //:-----------://     // [288]
                //:END:GEOM_TILE_MMI[    c_mmc && c_mmd ]://     // [288]
                //:BEG:BOMB_TILE_MMI[    c_mmd && c_mme ]://     // [288]
                                           //:-----------://     // [288]
            ,   d_artgola_udesign_any_o00  //:@HACKBOMB0@://     // [288]
            ,   d_artgola_udesign_any_o01  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o02  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o03  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o04  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o05  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o06  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o07  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o08  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o09  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o10  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o11  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o12  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o13  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o14  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o15  //:-----------://     // [288]
                                           //:-----------://     // [288]
                //:END:BOMB_TILE_MMI[    c_mmd && c_mme ]://     // [288]
                //:BEG:FADA_TILE_MMI[    c_mme && c_mmf ]://     // [288]
                                           //:-----------://     // [288]
            ,   d_artgola_udesign_any_o00  //:@HACKFADA0@://     // [288]
            ,   d_artgola_udesign_any_o01  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o02  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o03  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o04  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o05  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o06  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o07  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o08  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o09  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o10  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o11  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o12  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o13  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o14  //:-----------://     // [288]
            ,   d_artgola_udesign_any_o15  //:-----------://     // [288]
                                           //:-----------://     // [288]
                //:END:FADA_TILE_MMI[    c_mme && c_mmf ]://     // [288]
            ]                                                    // [288]
            ,                                                    // [288]
            au1_i09_udesign :[  null //: @ONE_INDEXED_ARRAY@ :// // [288]
                                                                 // [288]
            ,   d_artgola_udesign_any_m01                        // [288]
            ,   d_artgola_udesign_any_m02                        // [288]
            ,   d_artgola_udesign_any_m03                        // [288]
            ,   d_artgola_udesign_any_m04                        // [288]
            ,   d_artgola_udesign_any_m05                        // [288]
            ,   d_artgola_udesign_any_m06                        // [288]
            ,   d_artgola_udesign_any_m07                        // [288]
            ,   d_artgola_udesign_any_m08                        // [288]
            ,   d_artgola_udesign_any_m09                        // [288]
            ]                                                    // [288]
            ,                                                    // [288]
            au2_i09_udesign :[  null //: @ONE_INDEXED_ARRAY@ :// // [288]
            ,                                                    // [288]
            ,   d_artgola_udesign_any_t01                        // [288]
            ,   d_artgola_udesign_any_t02                        // [288]
            ,   d_artgola_udesign_any_t03                        // [288]
            ,   d_artgola_udesign_any_t04                        // [288]
            ,   d_artgola_udesign_any_t05                        // [288]
            ,   d_artgola_udesign_any_t06                        // [288]
            ,   d_artgola_udesign_any_t07                        // [288]
            ,   d_artgola_udesign_any_t08                        // [288]
            ,   d_artgola_udesign_any_t09                        // [288]
            ]                                                    // [288]
            ,                                                    // [288]
            key_i09_hex :[  0x00     //: @ONE_INDEXED_ARRAY@ :// // [288]
                                                                 // [288]
            ,   0x111111FF //:[017,017,017]://                   // [288]
            ,   0x222222FF //:[034,034,034]://                   // [288]
            ,   0x2A2A2AFF //:[042,042,042]://                   // [288]
                                                                 // [288]
            ,   0x696969FF //:[069,069,069]://                   // [288]
            ,   0x7A7A7AFF //:[122,122,122]://                   // [288]
            ,   0xA9A9A9FF //:[169,169,169]://                   // [288]
                                                                 // [288]
            ,   0xCACACAFF //:[202,202,202]://                   // [288]
            ,   0xDEDEDEFF //:[222,222,222]://                   // [288]
            ,   0xF2F2F2FF //:[242,242,242]://                   // [288]
            ]                                                    // [288]
        };; //:END_GOLAPACK::::::::::::::::::::::::::::::://     // [288]
                                                                 // [288]
    //:==========================:#_GOLAPACK_2022_#:[288]://     // [288]
                                                                 // [---]
};; //: __ARTGOLA__ ::: DATASEC ::: END ::::::::::::::::::::::// // [285]
if( /** __ARTDUDE__ **/ notnode ){                               // [102][---]
                                                                 // [---]
    let _ =( 0 );  /////////////////////////////////////////     // [238]
    let X =( 1 );  /////////////////////////////////////////     // [238]
                                                                 // [---]
    //:#_SIXTEEN_ANY_UDESIGN_#:==========================://     // [242]
                                                                 // [---]
    var d_artdude_fourset_src_any_000 = new Uint8Array([         // [238]
/**0**/                                                          // [238]
/**0**/ _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ////                                                         // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ////                                                         // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ////                                                         // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ]);;                                                         // [238]
    var d_artdude_fourset_src_any_001 = new Uint8Array([         // [238]
/**1**/                                                          // [238]
/**1**/ X,X,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,X,X            // [238]
    ,   X,_,_,_,X , _,X,_,X,_ , _,X,_,X,_ , X,_,_,_,X            // [238]
    ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X            // [238]
    ,   X,_,_,X,X , X,X,X,_,X , X,_,X,X,X , X,X,_,_,X            // [238]
    ,   X,X,_,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,_,X,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,X,_ , X,X,X,_,X , X,_,X,X,X , _,X,_,_,X            // [238]
    ,   X,X,_,X,_ , X,_,_,_,_ , _,_,_,_,X , _,X,_,X,X            // [238]
    ,   _,_,_,X,_ , X,_,_,_,X , X,_,_,_,X , _,X,_,_,_            // [238]
    ,   X,X,_,_,_ , _,_,_,_,X , X,_,_,_,_ , _,_,_,X,X            // [238]
    ,   X,_,_,X,_ , X,_,X,X,X , X,X,X,_,X , _,X,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,X,_ , X,_,X,X,X , X,X,X,_,X , _,X,_,_,X            // [238]
    ,   X,X,_,_,_ , _,_,_,_,X , X,_,_,_,_ , _,_,_,X,X            // [238]
    ,   _,_,_,X,_ , X,_,_,_,X , X,_,_,_,X , _,X,_,_,_            // [238]
    ,   X,X,_,X,_ , X,_,_,_,_ , _,_,_,_,X , _,X,_,X,X            // [238]
    ,   X,_,_,X,_ , X,X,X,_,X , X,_,X,X,X , _,X,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,X,_,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,_,X,X            // [238]
    ,   X,_,_,X,X , X,X,X,_,X , X,_,X,X,X , X,X,_,_,X            // [238]
    ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X            // [238]
    ,   X,_,_,_,X , _,X,_,X,_ , _,X,_,X,_ , X,_,_,_,X            // [238]
    ,   X,X,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,X,X            // [238]
    ]);;                                                         // [238]
    var d_artdude_fourset_src_any_002 = new Uint8Array([         // [238]
/**2**/                                                          // [238]
/**2**/ _,_,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,_,_            // [238]
    ,   _,_,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,_,_            // [238]
    ,   X,X,X,X,_ , _,_,_,X,X , X,X,_,_,_ , _,X,X,X,X            // [238]
    ,   X,X,X,X,_ , _,_,_,X,X , X,X,_,_,_ , _,X,X,X,X            // [238]
    ,   X,X,_,_,X , X,X,_,_,_ , _,_,_,X,X , X,_,_,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,_,_,X , X,X,_,X,X , X,X,_,X,X , X,_,_,X,X            // [238]
    ,   X,X,_,X,X , _,_,_,X,X , X,X,_,_,_ , X,X,_,X,X            // [238]
    ,   X,_,_,_,X , _,_,_,X,X , X,X,_,_,_ , X,_,_,_,X            // [238]
    ,   X,X,_,X,X , _,X,X,X,X , X,X,X,X,_ , X,X,_,X,X            // [238]
    ,   X,X,_,_,X , _,X,X,X,_ , _,X,X,X,_ , X,_,_,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,_,_,X , _,X,X,X,_ , _,X,X,X,_ , X,_,_,X,X            // [238]
    ,   X,X,_,X,X , _,X,X,X,X , X,X,X,X,_ , X,X,_,X,X            // [238]
    ,   X,_,_,_,X , _,_,_,X,X , X,X,_,_,_ , X,_,_,_,X            // [238]
    ,   X,X,_,X,X , _,_,_,X,X , X,X,_,_,_ , X,X,_,X,X            // [238]
    ,   X,X,_,_,X , X,X,_,X,X , X,X,_,X,X , X,_,_,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,_,_,X , X,X,_,_,_ , _,_,_,X,X , X,_,_,X,X            // [238]
    ,   X,X,X,X,_ , _,_,_,X,X , X,X,_,_,_ , _,X,X,X,X            // [238]
    ,   X,X,X,X,_ , _,_,_,X,X , X,X,_,_,_ , _,X,X,X,X            // [238]
    ,   _,_,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,_,_            // [238]
    ,   _,_,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,_,_            // [238]
    ]);;                                                         // [238]
    var d_artdude_fourset_src_any_003 = new Uint8Array([         // [238]
/**3**/                                                          // [238]
/**3**/ X,X,X,X,X , X,X,_,_,_ , _,_,_,X,X , X,X,X,X,X            // [238]
    ,   X,X,X,X,_ , _,X,X,X,X , X,X,X,X,_ , _,X,X,X,X            // [238]
    ,   X,X,X,X,X , X,X,_,_,_ , _,_,_,X,X , X,X,X,X,X            // [238]
    ,   X,X,_,X,_ , _,_,_,_,_ , _,_,_,_,_ , _,X,_,X,_            // [238]
    ,   _,X,X,X,_ , X,_,X,_,X , X,_,X,_,X , _,X,X,X,_            // [238]
    ////                                                         // [238]
    ,   _,X,X,X,_ , X,X,X,X,X , X,X,X,X,X , _,X,X,X,_            // [238]
    ,   _,X,_,X,_ , X,_,_,X,X , X,X,_,_,X , _,X,_,X,_            // [238]
    ,   _,X,_,X,_ , X,_,_,_,_ , _,_,_,_,X , _,X,_,X,_            // [238]
    ,   _,X,_,X,_ , X,X,_,_,_ , _,_,_,X,X , _,X,_,X,_            // [238]
    ,   _,X,X,X,_ , X,X,_,X,X , X,X,_,X,X , _,X,X,X,_            // [238]
    ////                                                         // [238]
    ,   _,X,X,X,_ , X,X,_,X,X , X,X,_,X,X , _,X,X,X,_            // [238]
    ,   _,X,_,X,_ , X,X,_,_,_ , _,_,_,X,X , _,X,_,X,_            // [238]
    ,   _,X,X,X,_ , X,X,X,X,_ , _,X,X,X,X , _,X,X,X,_            // [238]
    ,   _,_,X,_,_ , X,_,_,X,_ , _,X,_,_,X , _,_,X,_,_            // [238]
    ,   _,_,X,_,_ , X,X,_,X,_ , _,X,_,X,X , _,_,X,_,_            // [238]
    ////                                                         // [238]
    ,   _,_,X,_,_ , _,X,_,X,_ , _,X,_,X,_ , _,_,X,_,_            // [238]
    ,   _,_,X,_,_ , _,X,_,X,_ , _,X,_,X,_ , _,_,X,_,_            // [238]
    ,   _,_,X,_,_ , _,X,_,X,_ , _,X,_,X,_ , _,_,X,_,_            // [238]
    ,   _,_,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,_,_            // [238]
    ,   _,_,_,X,X , X,X,X,X,X , X,X,X,X,X , X,X,_,_,_            // [238]
    ]);;                                                         // [238]
                                                                 // [238]
    var d_artdude_fourset_src_any_004 = new Uint8Array([         // [238]
/**4**/                                                          // [238]
/**4**/ X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X            // [238]
    ,   X,_,_,_,X , _,_,_,_,_ , _,_,_,_,_ , X,_,_,_,X            // [238]
    ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X            // [238]
    ,   X,_,_,_,X , _,_,_,_,_ , _,_,_,_,_ , X,_,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,_,_ , X,X,X,X,X , X,X,X,X,X , _,_,_,_,X            // [238]
    ,   X,X,X,_,X , X,_,_,_,_ , _,_,_,_,X , X,_,X,X,X            // [238]
    ,   X,_,_,_,_ , X,X,_,X,X , X,X,_,X,X , _,_,_,_,X            // [238]
    ,   X,X,X,_,X , X,X,_,X,X , X,X,_,X,X , X,_,X,X,X            // [238]
    ,   X,_,_,_,_ , X,_,_,_,_ , _,_,_,_,X , _,_,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,_,X , X,_,_,_,_ , _,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,_,_,_,_ , X,X,_,X,X , X,X,_,X,X , _,_,_,_,X            // [238]
    ,   X,_,_,_,X , X,X,_,X,X , X,X,_,X,X , X,_,_,_,X            // [238]
    ,   X,_,_,_,_ , X,_,_,_,_ , _,_,_,_,X , _,_,_,_,X            // [238]
    ,   X,_,_,_,X , X,X,X,X,X , X,X,X,X,X , X,_,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,_,X , X,X,X,X,X , X,X,X,X,X , X,_,_,_,X            // [238]
    ,   X,_,_,_,X , X,X,X,X,X , X,X,X,X,X , X,_,_,_,X            // [238]
    ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X            // [238]
    ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X            // [238]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ]);;                                                         // [238]
                                                                 // [238]
    var d_artdude_fourset_src_any_005 = new Uint8Array([         // [238]
/**5**/                                                          // [238]
/**5**/ X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ,   X,X,_,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,_,X,X            // [238]
    ,   X,_,_,_,X , X,X,X,X,X , X,X,X,X,X , X,_,_,_,X            // [238]
    ,   X,X,_,_,X , _,X,_,X,_ , _,X,_,X,_ , X,_,_,X,X            // [238]
    ,   X,X,_,_,X , X,_,X,_,X , X,_,X,_,X , X,_,_,X,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,_,X , X,X,X,X,X , X,X,X,X,X , X,_,_,_,X            // [238]
    ,   X,X,X,_,X , X,_,_,X,X , X,X,_,_,X , X,_,X,X,X            // [238]
    ,   X,_,_,_,X , X,X,_,_,X , X,_,_,X,X , X,_,_,_,X            // [238]
    ,   X,X,X,_,X , X,X,_,_,X , X,_,_,X,X , X,_,X,X,X            // [238]
    ,   X,_,_,_,X , X,X,_,_,_ , _,_,_,X,X , X,_,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,X,X , X,X,_,_,_ , _,_,_,X,X , X,X,_,_,X            // [238]
    ,   X,_,_,X,_ , X,X,_,X,X , X,X,_,X,X , _,X,_,_,X            // [238]
    ,   X,_,_,X,X , X,X,_,X,X , X,X,_,X,X , X,X,_,_,X            // [238]
    ,   X,_,_,X,_ , X,_,_,_,_ , _,_,_,_,X , _,X,_,_,X            // [238]
    ,   X,_,_,X,X , X,X,X,X,X , X,X,X,X,X , X,X,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,X,_,X,X , X,X,X,X,X , X,X,X,X,X , X,X,_,X,X            // [238]
    ,   X,X,_,X,X , X,X,X,X,X , X,X,X,X,X , X,X,_,X,X            // [238]
    ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X            // [238]
    ,   X,X,_,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,_,X,X            // [238]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ]);;                                                         // [238]
    var d_artdude_fourset_src_any_006 = new Uint8Array([         // [238]
/**6**/                                                          // [238]
/**6**/ _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [238]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [238]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ////                                                         // [238]
    ,   _,_,_,_,_ , X,X,X,_,_ , _,_,X,X,X , _,_,_,_,_            // [238]
    ,   _,X,X,X,_ , X,X,X,X,X , X,X,X,X,X , _,X,X,X,_            // [238]
    ,   _,X,X,X,_ , X,X,X,_,_ , _,_,X,X,X , _,X,X,X,_            // [238]
    ,   _,X,X,X,_ , _,X,_,_,_ , _,_,_,X,_ , _,X,X,X,_            // [238]
    ,   _,_,_,_,_ , _,X,_,_,_ , _,_,_,X,_ , _,_,_,_,_            // [238]
    ////                                                         // [238]
    ,   _,_,_,_,_ , _,X,_,_,_ , _,_,_,X,_ , _,_,_,_,_            // [238]
    ,   _,X,X,X,_ , _,X,_,_,_ , _,_,_,X,_ , _,X,X,X,_            // [238]
    ,   _,X,X,X,_ , X,X,X,_,_ , _,_,X,X,X , _,X,X,X,_            // [238]
    ,   _,X,X,X,_ , X,X,X,X,X , X,X,X,X,X , _,X,X,X,_            // [238]
    ,   _,_,_,_,_ , X,X,X,_,_ , _,_,X,X,X , _,_,_,_,_            // [238]
    ////                                                         // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [238]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [238]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [238]
    ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_            // [238]
    ]);;                                                         // [238]
    var d_artdude_fourset_src_any_007 = new Uint8Array([         // [238]
/**7**/                                                          // [238]
/**7**/ _,_,_,X,X , X,X,_,X,X , X,X,_,X,X , X,X,_,_,_            // [238]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [238]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [238]
    ,   X,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,X            // [238]
    ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,_,_ , X,X,X,_,_ , _,_,X,X,X , _,_,_,_,X            // [238]
    ,   X,X,X,X,_ , X,X,X,X,X , X,X,X,X,X , _,X,X,X,X            // [238]
    ,   _,X,X,X,_ , X,X,X,_,_ , _,_,X,X,X , _,X,X,X,_            // [238]
    ,   X,X,X,X,_ , _,X,_,_,_ , _,_,_,X,_ , _,X,X,X,X            // [238]
    ,   X,_,_,_,_ , _,X,_,_,_ , _,_,_,X,_ , _,_,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,_,_ , _,X,_,_,_ , _,_,_,X,_ , _,_,_,_,X            // [238]
    ,   X,X,X,X,_ , _,X,_,_,_ , _,_,_,X,_ , _,X,X,X,X            // [238]
    ,   _,X,X,X,_ , X,X,X,_,_ , _,_,X,X,X , _,X,X,X,_            // [238]
    ,   X,X,X,X,_ , X,X,X,X,X , X,X,X,X,X , _,X,X,X,X            // [238]
    ,   X,_,_,_,_ , X,X,X,_,_ , _,_,X,X,X , _,_,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,X            // [238]
    ,   X,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,X            // [238]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [238]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [238]
    ,   _,_,_,X,X , X,X,_,X,X , X,X,_,X,X , X,X,_,_,_            // [238]
    ]);;                                                         // [238]
    var d_artdude_fourset_src_any_008 = new Uint8Array([         // [238]
/**8**/                                                          // [238]
/**8**/ _,_,_,X,X , X,X,_,X,X , X,X,_,X,X , X,X,_,_,_            // [238]
    ,   _,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,_            // [238]
    ,   _,X,X,X,_ , X,X,X,_,_ , _,_,X,X,X , _,X,X,X,_            // [238]
    ,   X,X,X,X,_ , X,X,X,_,_ , _,_,X,X,X , _,X,X,X,X            // [238]
    ,   X,_,_,X,_ , X,X,X,_,_ , _,_,X,X,X , _,X,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,X,_ , X,X,X,_,_ , _,_,X,X,X , _,X,_,_,X            // [238]
    ,   X,X,X,X,_ , X,X,X,X,X , X,X,X,X,X , _,X,X,X,X            // [238]
    ,   _,X,X,X,_ , X,X,X,_,_ , _,_,X,X,X , _,X,X,X,_            // [238]
    ,   X,X,X,X,_ , X,X,_,_,_ , _,_,_,X,X , _,X,X,X,X            // [238]
    ,   X,_,_,X,_ , X,X,_,_,_ , _,_,_,X,X , _,X,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,X,_ , X,X,_,_,_ , _,_,_,X,X , _,X,_,_,X            // [238]
    ,   X,X,X,X,_ , X,X,_,_,_ , _,_,_,X,X , _,X,X,X,X            // [238]
    ,   _,X,X,X,_ , X,X,X,_,_ , _,_,X,X,X , _,X,X,X,_            // [238]
    ,   X,X,X,X,_ , X,X,X,X,X , X,X,X,X,X , _,X,X,X,X            // [238]
    ,   X,_,_,X,_ , X,X,X,_,_ , _,_,X,X,X , _,X,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,X,_ , _,_,X,_,_ , _,_,X,_,_ , _,X,_,_,X            // [238]
    ,   X,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,X            // [238]
    ,   _,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,_            // [238]
    ,   _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_ , _,X,X,X,_            // [238]
    ,   _,X,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,X,_            // [238]
    ]);;                                                         // [238]
    var d_artdude_fourset_src_any_009 = new Uint8Array([         // [238]
/**9**/                                                          // [238]
/**9**/ X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,X,X            // [238]
    ,   X,_,_,_,X , _,X,X,X,_ , _,X,X,X,_ , X,_,_,_,X            // [238]
    ,   X,_,_,_,X , _,X,_,X,_ , _,X,_,X,_ , X,_,_,_,X            // [238]
    ,   X,_,_,_,X , _,X,X,X,_ , _,X,X,X,_ , X,_,_,_,X            // [238]
    ,   X,X,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,X,X            // [238]
    ,   X,_,_,_,X , _,X,X,X,_ , _,X,X,X,_ , X,_,_,_,X            // [238]
    ,   X,_,_,_,X , _,X,_,X,_ , _,X,_,X,_ , X,_,_,_,X            // [238]
    ,   X,_,_,_,X , _,X,X,X,_ , _,X,X,X,_ , X,_,_,_,X            // [238]
    ,   X,X,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ]);;                                                         // [238]
    var d_artdude_fourset_src_any_010 = new Uint8Array([         // [238]
/**A**/                                                          // [238]
/**A**/ X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,_,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,_,X            // [238]
    ,   X,_,X,_,X , X,_,_,_,X , X,_,_,_,X , X,_,X,_,X            // [238]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,X,X            // [238]
    ,   X,_,X,_,X , _,X,X,X,_ , _,X,X,X,_ , X,_,X,_,X            // [238]
    ,   X,_,X,_,X , _,X,_,X,_ , _,X,_,X,_ , X,_,X,_,X            // [238]
    ,   X,_,X,_,X , _,X,X,X,_ , _,X,X,X,_ , X,_,X,_,X            // [238]
    ,   X,X,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,X,X            // [238]
    ,   X,_,X,_,X , _,X,X,X,_ , _,X,X,X,_ , X,_,X,_,X            // [238]
    ,   X,_,X,_,X , _,X,_,X,_ , _,X,_,X,_ , X,_,X,_,X            // [238]
    ,   X,_,X,_,X , _,X,X,X,_ , _,X,X,X,_ , X,_,X,_,X            // [238]
    ,   X,X,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ,   X,_,X,_,X , X,_,_,_,X , X,_,_,_,X , X,_,X,_,X            // [238]
    ,   X,_,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,_,X            // [238]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ]);;                                                         // [238]
    var d_artdude_fourset_src_any_011 = new Uint8Array([         // [238]
/**B**/                                                          // [238]
/**B**/ X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,_,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,_,X            // [238]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,X,X            // [238]
    ,   X,_,X,X,X , _,X,X,X,_ , _,X,X,X,_ , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , _,X,_,X,_ , _,X,_,X,_ , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , _,X,X,X,X , X,X,X,X,_ , X,X,X,_,X            // [238]
    ,   X,X,X,X,X , _,_,_,X,X , X,X,_,_,_ , X,X,X,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,X,X,X , _,_,_,X,X , X,X,_,_,_ , X,X,X,X,X            // [238]
    ,   X,_,X,X,X , _,X,X,X,X , X,X,X,X,_ , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , _,X,_,X,_ , _,X,_,X,_ , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , _,X,X,X,_ , _,X,X,X,_ , X,X,X,_,X            // [238]
    ,   X,X,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ,   X,_,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,_,X            // [238]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ]);;                                                         // [238]
    var d_artdude_fourset_src_any_012 = new Uint8Array([         // [238]
/**C**/                                                          // [238]
/**C**/ X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,_,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,_,X            // [238]
    ,   X,X,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,X,X            // [238]
    ,   X,_,X,X,X , _,X,_,X,_ , _,X,_,X,_ , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , _,X,_,X,_ , _,X,_,X,_ , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , _,X,X,X,X , X,X,X,X,_ , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , _,_,_,X,X , X,X,_,_,_ , X,X,X,_,X            // [238]
    ////                                                         // [238]
    ,   X,_,X,X,X , _,_,_,X,X , X,X,_,_,_ , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , _,X,X,X,X , X,X,X,X,_ , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , _,X,_,X,_ , _,X,_,X,_ , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , _,X,_,X,_ , _,X,_,X,_ , X,X,X,_,X            // [238]
    ,   X,X,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,X,X            // [238]
    ,   X,_,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,_,X            // [238]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ]);;                                                         // [238]
    var d_artdude_fourset_src_any_013 = new Uint8Array([         // [238]
/**D**/                                                          // [238]
/**D**/ X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,_,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,_,X            // [238]
    ,   X,X,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,X,X            // [238]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,_,X            // [238]
    ,   X,_,X,_,_ , _,X,_,X,_ , _,X,_,X,_ , _,_,X,_,X            // [238]
    ,   X,_,X,_,_ , _,X,X,X,_ , _,X,X,X,_ , _,_,X,_,X            // [238]
    ,   X,_,X,_,_ , _,X,X,X,_ , _,X,X,X,_ , _,_,X,_,X            // [238]
    ////                                                         // [238]
    ,   X,_,X,_,_ , _,X,X,X,_ , _,X,X,X,_ , _,_,X,_,X            // [238]
    ,   X,_,X,_,_ , _,X,X,X,_ , _,X,X,X,_ , _,_,X,_,X            // [238]
    ,   X,_,X,_,_ , X,X,_,X,_ , _,X,_,X,X , _,_,X,_,X            // [238]
    ,   X,_,X,_,_ , X,X,_,X,X , X,X,_,X,X , _,_,X,_,X            // [238]
    ,   X,X,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,X,X            // [238]
    ,   X,_,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,_,X            // [238]
    ,   X,_,X,X,X , X,X,_,X,X , X,X,_,X,X , X,X,X,_,X            // [238]
    ,   X,_,_,_,X , X,_,_,_,X , X,_,_,_,X , X,_,_,_,X            // [238]
    ,   X,X,X,X,X , X,X,X,X,X , X,X,X,X,X , X,X,X,X,X            // [238]
    ]);;                                                         // [238]
    var d_artdude_fourset_src_any_014 = new Uint8Array([         // [238]
/**E**/                                                          // [238]
/**E**/ X,X,X,_,X , X,X,X,X,X , X,X,X,X,X , X,_,X,X,X            // [238]
    ,   X,X,X,_,_ , X,X,X,X,X , X,X,X,X,X , _,_,X,X,X            // [238]
    ,   X,X,X,X,_ , _,_,_,_,_ , _,_,_,_,_ , _,X,X,X,X            // [238]
    ,   _,_,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,_,_            // [238]
    ,   X,_,_,X,X , X,_,_,_,_ , _,_,_,_,X , X,X,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,X,_,_,X , X,X,X,_,_ , _,_,X,X,X , X,_,_,X,X            // [238]
    ,   X,X,_,_,_ , X,X,X,_,_ , _,_,X,X,X , _,_,_,X,X            // [238]
    ,   X,X,_,_,_ , X,X,X,X,_ , _,X,X,X,X , _,_,_,X,X            // [238]
    ,   X,X,_,_,_ , _,_,X,X,X , X,X,X,_,_ , _,_,_,X,X            // [238]
    ,   X,X,_,_,_ , _,_,_,X,X , X,X,_,_,_ , _,_,_,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,_,_,_ , _,_,_,X,X , X,X,_,_,_ , _,_,_,X,X            // [238]
    ,   X,X,_,_,_ , _,_,X,X,X , X,X,X,_,_ , _,_,_,X,X            // [238]
    ,   X,X,_,_,_ , X,X,X,X,_ , _,X,X,X,X , _,_,_,X,X            // [238]
    ,   X,X,_,_,_ , X,X,X,_,_ , _,_,X,X,X , _,_,_,X,X            // [238]
    ,   X,X,_,_,X , X,X,X,_,_ , _,_,X,X,X , X,_,_,X,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,X,X , X,_,_,_,_ , _,_,_,_,X , X,X,_,_,X            // [238]
    ,   _,_,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,_,_            // [238]
    ,   X,X,X,X,_ , _,_,_,_,_ , _,_,_,_,_ , _,X,X,X,X            // [238]
    ,   X,X,X,_,_ , X,X,X,X,X , X,X,X,X,X , _,_,X,X,X            // [238]
    ,   X,X,X,_,X , X,X,X,X,X , X,X,X,X,X , X,_,X,X,X            // [238]
    ]);;                                                         // [238]
    var d_artdude_fourset_src_any_015 = new Uint8Array([         // [238]
/**F**/                                                          // [238]
/**F**/ X,X,X,_,X , X,X,X,X,X , X,X,X,X,X , X,_,X,X,X            // [238]
    ,   X,X,X,_,_ , X,X,X,X,X , X,X,X,X,X , _,_,X,X,X            // [238]
    ,   X,X,X,X,_ , _,_,_,_,_ , _,_,_,_,_ , _,X,X,X,X            // [238]
    ,   _,_,X,X,X , _,X,X,X,X , X,X,X,X,_ , X,X,X,_,_            // [238]
    ,   X,_,_,X,X , X,_,_,_,_ , _,_,_,_,X , X,X,_,_,X            // [238]
    ////                                                         // [238]
    ,   X,X,_,_,X , X,X,X,X,X , X,X,X,X,X , X,_,_,X,X            // [238]
    ,   X,X,_,X,_ , X,X,X,_,_ , _,_,X,X,X , _,X,_,X,X            // [238]
    ,   X,X,_,X,_ , X,X,X,X,X , X,X,X,X,X , _,X,_,X,X            // [238]
    ,   X,X,_,X,_ , X,_,X,X,_ , _,X,X,_,X , _,X,_,X,X            // [238]
    ,   X,X,_,X,_ , X,_,X,_,_ , _,_,X,_,X , _,X,_,X,X            // [238]
    ////                                                         // [238]
    ,   X,X,_,X,_ , X,_,X,_,_ , _,_,X,_,X , _,X,_,X,X            // [238]
    ,   X,X,_,X,_ , X,_,X,X,_ , _,X,X,_,X , _,X,_,X,X            // [238]
    ,   X,X,_,X,_ , X,X,X,X,X , X,X,X,X,X , _,X,_,X,X            // [238]
    ,   X,X,_,X,_ , X,X,X,_,_ , _,_,X,X,X , _,X,_,X,X            // [238]
    ,   X,X,_,_,X , X,X,X,X,X , X,X,X,X,X , X,_,_,X,X            // [238]
    ////                                                         // [238]
    ,   X,_,_,X,X , X,_,_,_,_ , _,_,_,_,X , X,X,_,_,X            // [238]
    ,   _,_,X,X,X , _,X,X,X,X , X,X,X,X,_ , X,X,X,_,_            // [238]
    ,   X,X,X,X,_ , _,_,_,_,_ , _,_,_,_,_ , _,X,X,X,X            // [238]
    ,   X,X,X,_,_ , X,X,X,X,X , X,X,X,X,X , _,_,X,X,X            // [238]
    ,   X,X,X,_,X , X,X,X,X,X , X,X,X,X,X , X,_,X,X,X            // [238]
    ]);;                                                         // [238]
    //:==========================:#_SIXTEEN_ANY_UDESIGN_#://     // [242]
    //:#_ARTDUDE_UNIT_TEST_TILES_#:[242]:================://     // [---]
                                                                 // [---]
    var d_artdude_fourset_utt_udesign_inn_geo =(                 // [242]
    new Uint8Array([                                             // [242]
/*GEO*/                                                          // [242]
/*UTT*/ _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1            // [242]
    ,   _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1            // [242]
    ,   _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1            // [242]
    ,   _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1            // [242]
    ,   _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1            // [242]
    ////                                                         // [242]
    ,   1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_            // [242]
    ,   1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_            // [242]
    ,   1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_            // [242]
    ,   1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_            // [242]
    ,   1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_            // [242]
    ////                                                         // [242]
    ,   _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1            // [242]
    ,   _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1            // [242]
    ,   _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1            // [242]
    ,   _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1            // [242]
    ,   _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1            // [242]
    ////                                                         // [242]
    ,   1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_            // [242]
    ,   1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_            // [242]
    ,   1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_            // [242]
    ,   1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_            // [242]
    ,   1,1,1,1,1 , _,_,_,_,_ , 1,1,1,1,1 , _,_,_,_,_            // [242]
    ]));;                                                        // [242]
                                                                 // [---]
    var d_artdude_fourset_utt_udesign_inn_bom =(                 // [242]
    new Uint8Array([                                             // [242]
/*BOM*/                                                          // [242]
/*UTT*/ 1,_,_,_,1 , 1,1,1,1,1 , 1,1,1,1,1 , 1,_,_,_,1            // [242]
    ,   _,1,_,1,_ , 1,_,_,_,1 , 1,_,_,_,1 , _,1,_,1,_            // [242]
    ,   _,_,1,_,_ , 1,_,_,_,1 , 1,_,_,_,1 , _,_,1,_,_            // [242]
    ,   _,1,_,1,_ , 1,_,_,_,1 , 1,_,_,_,1 , _,1,_,1,_            // [242]
    ,   1,_,_,_,1 , 1,1,1,1,1 , 1,1,1,1,1 , 1,_,_,_,1            // [242]
    ////                                                         // [242]
    ,   1,1,1,1,1 , 1,_,_,_,_ , _,_,_,_,1 , 1,1,1,1,1            // [242]
    ,   1,_,_,_,1 , _,1,_,_,_ , _,_,_,1,_ , 1,_,_,_,1            // [242]
    ,   1,_,_,_,1 , _,_,1,_,_ , _,_,1,_,_ , 1,_,_,_,1            // [242]
    ,   1,_,_,_,1 , _,_,_,1,_ , _,1,_,_,_ , 1,_,_,_,1            // [242]
    ,   1,1,1,1,1 , _,_,_,_,1 , 1,_,_,_,_ , 1,1,1,1,1            // [242]
    ////                                                         // [242]
    ,   1,1,1,1,1 , _,_,_,_,1 , 1,_,_,_,_ , 1,1,1,1,1            // [242]
    ,   1,_,_,_,1 , _,_,_,1,_ , _,1,_,_,_ , 1,_,_,_,1            // [242]
    ,   1,_,_,_,1 , _,_,1,_,_ , _,_,1,_,_ , 1,_,_,_,1            // [242]
    ,   1,_,_,_,1 , _,1,_,_,_ , _,_,_,1,_ , 1,_,_,_,1            // [242]
    ,   1,1,1,1,1 , 1,_,_,_,_ , _,_,_,_,1 , 1,1,1,1,1            // [242]
    ////                                                         // [242]
    ,   1,_,_,_,1 , 1,1,1,1,1 , 1,1,1,1,1 , 1,_,_,_,1            // [242]
    ,   _,1,_,1,_ , 1,_,_,_,1 , 1,_,_,_,1 , _,1,_,1,_            // [242]
    ,   _,_,1,_,_ , 1,_,_,_,1 , 1,_,_,_,1 , _,_,1,_,_            // [242]
    ,   _,1,_,1,_ , 1,_,_,_,1 , 1,_,_,_,1 , _,1,_,1,_            // [242]
    ,   1,_,_,_,1 , 1,1,1,1,1 , 1,1,1,1,1 , 1,_,_,_,1            // [242]
    ]));;                                                        // [242]
                                                                 // [---]
    var d_artdude_fourset_utt_udesign_inn_fad =(                 // [242]
    new Uint8Array([                                             // [242]
/*FAD*/                                                          // [242]
/*UTT*/ _,_,1,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,1,_,_            // [242]
    ,   _,_,1,_,_ , _,1,1,1,_ , _,1,1,1,_ , _,_,1,_,_            // [242]
    ,   1,1,1,1,1 , _,1,1,1,_ , _,1,1,1,_ , 1,1,1,1,1            // [242]
    ,   _,_,1,_,_ , _,1,1,1,_ , _,1,1,1,_ , _,_,1,_,_            // [242]
    ,   _,_,1,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,1,_,_            // [242]
    ////                                                         // [242]
    ,   _,_,_,_,_ , 1,1,1,1,1 , 1,1,1,1,1 , _,_,_,_,_            // [242]
    ,   _,1,1,1,_ , 1,_,_,_,_ , _,_,_,_,1 , _,1,1,1,_            // [242]
    ,   _,1,1,1,_ , 1,_,1,1,1 , 1,1,1,_,1 , _,1,1,1,_            // [242]
    ,   _,1,1,1,_ , 1,_,1,_,_ , _,_,1,_,1 , _,1,1,1,_            // [242]
    ,   _,_,_,_,_ , 1,_,1,_,1 , 1,_,1,_,1 , _,_,_,_,_            // [242]
    ////                                                         // [242]
    ,   _,_,_,_,_ , 1,_,1,_,1 , 1,_,1,_,1 , _,_,_,_,_            // [242]
    ,   _,1,1,1,_ , 1,_,1,_,_ , _,_,1,_,1 , _,1,1,1,_            // [242]
    ,   _,1,1,1,_ , 1,_,1,1,1 , 1,1,1,_,1 , _,1,1,1,_            // [242]
    ,   _,1,1,1,_ , 1,_,_,_,_ , _,_,_,_,1 , _,1,1,1,_            // [242]
    ,   _,_,_,_,_ , 1,1,1,1,1 , 1,1,1,1,1 , _,_,_,_,_            // [242]
    ////                                                         // [242]
    ,   _,_,1,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,1,_,_            // [242]
    ,   _,_,1,_,_ , _,1,1,1,_ , _,1,1,1,_ , _,_,1,_,_            // [242]
    ,   1,1,1,1,1 , _,1,1,1,_ , _,1,1,1,_ , 1,1,1,1,1            // [242]
    ,   _,_,1,_,_ , _,1,1,1,_ , _,1,1,1,_ , _,_,1,_,_            // [242]
    ,   _,_,1,_,_ , _,_,_,_,_ , _,_,_,_,_ , _,_,1,_,_            // [242]
    ]));;                                                        // [242]
    //:================:#_ARTDUDE_UNIT_TEST_TILES_#:[242]://     // [---]
    //:#_BINCLUS_ANSWERS_#:[242]:========================://     // [242]
                                                                 // [242]
        const __answer_key_cluster_patterns__ = "[HACK]" ///     // [242]
                                                                 // [242]
        ,   _zer =( 0x00000000 ) //: AllZeros         :::://     // [242]
        ,   _one =( 0xFFFFFF80 ) //: AllOnes          :::://     // [242]
        ,   _exx =( 0x8A88A880 ) //: X In Box         :::://     // [242]
        ,   _owe =( 0xFC631F80 ) //: O In Box         :::://     // [242]
        ,   _neg =( 0x82082080 ) //: NEGative   slope :::://     // [242]
        ,   _pos =( 0x08888800 ) //: POSitive   slope :::://     // [248][BUG][242]
        ,   _plu =( 0x213E4200 ) //: PLUs sign        :::://     // [242]
        ,   _dot =( 0x039CE000 ) //: big DOT          :::://     // [248][BUG][242]
        ,   _t_l =( 0xFC2F4A80 ) //: Top Left  corner :::://     // [242]
        ,   _t_r =( 0xF87A5A80 ) //: Top Right corner :::://     // [242]
        ,   _b_l =( 0xAD2F0F80 ) //: Bot Left  corner :::://     // [242]
        ,   _b_r =( 0xA97A1F80 ) //: Bot Right corner :::://     // [242]
                                                                 // [242]
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [242]
                                                                 // [---]
        //:#_CORRUPT_SLOPE_#:::::::::::::::::://                 // [247]
        const iamidiot_1 =(( 0x08888800 )>>>0);                  // [248][BUG][247]
        const iamidiot_2 =(( 0x039CE000 )>>>0);                  // [248]
                                                                 // [---]
        var d_artdude_fourset_utt_binclus_out_geo =(             // [242]
        new Uint32Array([                                        // [242]
        //: 0xRRGGBBAA 0xRRGGBBAA 0xRRGGBBAA 0xRRGGBBAA :://     // [242]
            0x00000000,(  _one  ),0x00000000,(  _one  )          // [242]
        ,   (  _one  ),0x00000000,(  _one  ),0x00000000          // [242]
        ,   0x00000000,(  _one  ),0x00000000,(  _one  )          // [242]
        ,   (  _one  ),0x00000000,(  _one  ),0x00000000          // [242]
        ]));;                                                    // [242]
        var d_artdude_fourset_utt_binclus_out_bom =(             // [242]
        new Uint32Array([                                        // [242]
        //: 0xRRGGBBAA 0xRRGGBBAA 0xRRGGBBAA 0xRRGGBBAA :://     // [242]
            (  _exx  ),(  _owe  ),(  _owe  ),(  _exx  )          // [242]
        ,   (  _owe  ),0x82082080,iamidiot_1,(  _owe  )          // [248][BUG][247][242]
        ,   (  _owe  ),iamidiot_1,0x82082080,(  _owe  )          // [248][BUG][247][242]
        ,   (  _exx  ),(  _owe  ),(  _owe  ),(  _exx  )          // [242]
        ]));;                                                    // [242]
                                                                 // [---]
        let bom = d_artdude_fourset_utt_binclus_out_bom ;        // [247]
        ASS(bom[ 6 ] === 0x08888800 , "[CORRUPTION_001]" );      // [248][BUG][247]
        ASS(bom[ 9 ] === 0x08888800 , "[CORRUPTION_002]" );      // [248][BUG][247]
                                                                 // [---]
        var d_artdude_fourset_utt_binclus_out_fad =(             // [242]
        new Uint32Array([                                        // [242]
        //: 0xRRGGBBAA 0xRRGGBBAA 0xRRGGBBAA 0xRRGGBBAA :://     // [242]
            (  _plu  ),(  _dot  ),(  _dot  ),(  _plu  )          // [242]
        ,   (  _dot  ),0xFC2F4A80,0xF87A5A80,(  _dot  )          // [242]
        ,   (  _dot  ),0xAD2F0F80,0xA97A1F80,(  _dot  )          // [242]
        ,   (  _plu  ),(  _dot  ),(  _dot  ),(  _plu  )          // [242]
        ]));;                                                    // [242]
                                                                 // [---]
        let fad = d_artdude_fourset_utt_binclus_out_fad ;        // [248]
        ASS(fad[ 1 ] === iamidiot_2 , "[CORRUPTION_003]" );      // [248]
        ASS(fad[ 2 ] === iamidiot_2 , "[CORRUPTION_004]" );      // [248]
        ASS(fad[ 4 ] === iamidiot_2 , "[CORRUPTION_005]" );      // [248]
        ASS(fad[ 7 ] === iamidiot_2 , "[CORRUPTION_006]" );      // [248]
        ASS(fad[ 8 ] === iamidiot_2 , "[CORRUPTION_007]" );      // [248]
        ASS(fad[11 ] === iamidiot_2 , "[CORRUPTION_008]" );      // [248]
        ASS(fad[13 ] === iamidiot_2 , "[CORRUPTION_009]" );      // [248]
        ASS(fad[14 ] === iamidiot_2 , "[CORRUPTION_010]" );      // [248]
                                                                 // [---]
    //:========================:#_BINCLUS_ANSWERS_#:[242]://     // [242]
    //:#_UDESIGN_TO_BINCLUS_UTT_#:[242]:=================://     // [242]
                                                                 // [242]
        //:#_UTT_DESIGN_INPUTS_#:[242]:------------------://     // [242]
                      //:@utt_inn_la3_udesign@://                // [242]
            var d_artdude_utt_inn_la3_udesign =([                // [242]
                                                                 // [242]
                d_artdude_fourset_utt_udesign_inn_geo            // [242]
            ,   d_artdude_fourset_utt_udesign_inn_bom            // [242]
            ,   d_artdude_fourset_utt_udesign_inn_fad            // [242]
            ]);;                                                 // [242]
        //:------------------:#_UTT_DESIGN_INPUTS_#:[242]://     // [242]
        //:#_UTT_BINARY_ANSWER_KEYS_#:[242]:-------------://     // [242]
                                                                 // [242]
                      //:@utt_out_la3_binclus@://                // [242]
            var d_artdude_utt_out_la3_binclus =([                // [242]
                                                                 // [242]
                d_artdude_fourset_utt_binclus_out_geo            // [242]
            ,   d_artdude_fourset_utt_binclus_out_bom            // [242]
            ,   d_artdude_fourset_utt_binclus_out_fad            // [242]
            ]);;                                                 // [242]
        //:-------------:#_UTT_BINARY_ANSWER_KEYS_#:[242]://     // [242]
    //:=================:#_UDESIGN_TO_BINCLUS_UTT_#:[242]://     // [242]
                                                                 // [---]
    //:#_FOURSET_DESIGN_LOOKUP_TABLES_#:[238]:-----------://     // [238]
                                                                 // [---]
        //:#_TEST_DATA_EMBEDDED_IN_PROD_#:[242]:---------://     // [242]
                                                                 // [242]
            var d_artdude_fourset_src_geo_utt =(                 // [242]
                d_artdude_fourset_utt_udesign_inn_geo );;        // [242]
                                                                 // [242]
            var d_artdude_fourset_src_bom_utt =(                 // [242]
                d_artdude_fourset_utt_udesign_inn_bom );;        // [242]
                                                                 // [242]
            var d_artdude_fourset_src_fad_utt =(                 // [242]
                d_artdude_fourset_utt_udesign_inn_fad );;        // [242]
                                                                 // [242]
        //:---------:#_TEST_DATA_EMBEDDED_IN_PROD_#:[242]://     // [242]
        //:FOURSET_GEO:[238]:----------------------------://     // [---]
                                                                 // [238]
            var d_artdude_fourset_src_geo_arr =([                // [238]
                                                                 // [238]
                d_artdude_fourset_src_any_000                    // [238]
            ,   d_artdude_fourset_src_any_001                    // [238]
            ,   d_artdude_fourset_src_any_002                    // [238]
            ,   d_artdude_fourset_src_any_003                    // [238]
            ,   d_artdude_fourset_src_any_004                    // [238]
            ,   d_artdude_fourset_src_any_005                    // [238]
            ,   d_artdude_fourset_src_any_006                    // [238]
            ,   d_artdude_fourset_src_any_007                    // [238]
            ,   d_artdude_fourset_src_any_008                    // [238]
            ,   d_artdude_fourset_src_any_009                    // [238]
            ,   d_artdude_fourset_src_any_010                    // [238]
            ,   d_artdude_fourset_src_any_011                    // [238]
            ,   d_artdude_fourset_src_any_012                    // [238]
            ,   d_artdude_fourset_src_any_013                    // [238]
            ,   d_artdude_fourset_src_any_014                    // [238]
            ,   d_artdude_fourset_src_any_015                    // [238]
            //- d_artdude_fourset_src_geo_utt < < < < NO!-//     // [246][242]
            ]);;                                                 // [238]
        //:----------------------------:FOURSET_GEO:[238]://     // [238]
        //:FOURSET_BOM:[238]:----------------------------://     // [238]
                                                                 // [238]
            var d_artdude_fourset_src_bom_arr =([                // [238]
                                                                 // [238]
                d_artdude_fourset_src_any_000                    // [238]
            ,   d_artdude_fourset_src_any_001                    // [238]
            ,   d_artdude_fourset_src_any_002                    // [238]
            ,   d_artdude_fourset_src_any_003                    // [238]
            ,   d_artdude_fourset_src_any_004                    // [238]
            ,   d_artdude_fourset_src_any_005                    // [238]
            ,   d_artdude_fourset_src_any_006                    // [238]
            ,   d_artdude_fourset_src_any_007                    // [238]
            ,   d_artdude_fourset_src_any_008                    // [238]
            ,   d_artdude_fourset_src_any_009                    // [238]
            ,   d_artdude_fourset_src_any_010                    // [238]
            ,   d_artdude_fourset_src_any_011                    // [238]
            ,   d_artdude_fourset_src_any_012                    // [238]
            ,   d_artdude_fourset_src_any_013                    // [238]
            ,   d_artdude_fourset_src_any_014                    // [238]
            ,   d_artdude_fourset_src_any_015                    // [238]
            //- d_artdude_fourset_src_bom_utt < < < < NO!-//     // [246][242]
            ]);;                                                 // [238]
        //:----------------------------:FOURSET_BOM:[238]://     // [238]
        //:FOURSET_FAD:[238]:----------------------------://     // [238]
                                                                 // [238]
            var d_artdude_fourset_src_fad_arr =([                // [238]
                                                                 // [238]
                d_artdude_fourset_src_any_000                    // [238]
            ,   d_artdude_fourset_src_any_001                    // [238]
            ,   d_artdude_fourset_src_any_002                    // [238]
            ,   d_artdude_fourset_src_any_003                    // [238]
            ,   d_artdude_fourset_src_any_004                    // [238]
            ,   d_artdude_fourset_src_any_005                    // [238]
            ,   d_artdude_fourset_src_any_006                    // [238]
            ,   d_artdude_fourset_src_any_007                    // [238]
            ,   d_artdude_fourset_src_any_008                    // [238]
            ,   d_artdude_fourset_src_any_009                    // [238]
            ,   d_artdude_fourset_src_any_010                    // [238]
            ,   d_artdude_fourset_src_any_011                    // [238]
            ,   d_artdude_fourset_src_any_012                    // [238]
            ,   d_artdude_fourset_src_any_013                    // [238]
            ,   d_artdude_fourset_src_any_014                    // [238]
            ,   d_artdude_fourset_src_any_015                    // [238]
            //- d_artdude_fourset_src_fad_utt < < < < NO!-//     // [246][242]
            ]);;                                                 // [238]
        //:----------------------------:FOURSET_FAD:[238]://     // [238]
        //:Capacity_Check:[242]:=========================://     // [242]
        {                                                        // [242]
            let A16 =( ASS_LEN_016 );                            // [246][242]
            A16(d_artdude_fourset_src_geo_arr.length,"[G]");     // [246][242]
            A16(d_artdude_fourset_src_bom_arr.length,"[B]");     // [246][242]
            A16(d_artdude_fourset_src_fad_arr.length,"[F]");     // [246][242]
        }                                                        // [242]
        //:=========================:Capacity_Check:[242]://     // [242]
        //:FOURSET_LAY:[238]:============================://     // [238]
                                                                 // [238]
            var d_artdude_fourset_src_til_arr =([                // [238]
                                                                 // [238]
                d_artdude_fourset_src_geo_arr //:GEOMETRY://     // [238]
            ,   d_artdude_fourset_src_bom_arr //:BOMB____://     // [238]
            ,   d_artdude_fourset_src_fad_arr //:FADA____://     // [238]
            ]);;                                                 // [238]
        //:============================:FOURSET_LAY:[238]://     // [238]
    //:------------:#_FOURSET_DESIGN_LOOKUP_TABLES_:[238]://     // [238]
                                                                 // [---][--------]
};;                                                              // [102][--------]
if( /** __ARTGIRL__ **/ notnode ){                               // [---][---][063] 
                                                                 // [---][---][063] 
    var d_artgirl_wgl =( "[FIX:d_gpudata_wgl:NOT:a_g.wgl]" );    // [228][---][063]
                                                                 // [---]
    let neg =(0.0 - 1.0 );                                       // [066]  
    let pos =(0.0 + 1.0 );                                       // [066]  
    let _0_ =(0.0 * 0.0 );                                       // [066] 
                                                                 // [---]
    let min =(0.0) ; //:Min Texture Coordinate Value://          // [083]
    let max =( 1 ) ; //:Max Texture Coordinate Value://          // [083]
                                                                 // [---]
    var d_artgirl_p2k_tex = "[FIX::d_gpudata_p2k_tex]"  ;        // [229][173]
    var d_artgirl_p2k_lot = "[FIX::c_artgirl_p2k_lot]"  ;        // [173]
    var d_artgirl_p2k_sam = "[FIX:GPU_____ONLY:d_p2k]"  ;        // [173]
                                                                 // [---]
    var d_artgirl = STRUCT({  laxcoma : 0                        // [066]  
                                                                 // [---]  
    ,   wgl : "[FIX::d_gpudata_wgl]"  //:@wgl@://                // [228][063]  
    ,   vbo : "[nil][d_artgirl_vbo]"  //:@vbo@://                // [---][067]  
    ,   vao : "[nil][d_artgirl_vao]"  //:@vao@://                // [---][067]  
                                                                 // [---][067]  
    //- ,   tex : "[nil][d_artgirl_tex]" @tex@ #REM_TEX# -//     // [173][067]  
    //- ,   lot : "[nil][d_artgirl_lot]" @lot@ #REM_LOT# -//     // [173][067]  
    //- ,   sam : "[nil][d_artgirl_sam]" @sam@ #REM_SAM# -//     // [173][067]  
                                                                 // [067]  
        /** #_O_P_P_# : One Per Program **/                      // [067]
                                                                 // [---]
    ,   ren_pin : (0-666)  //:AT[ren_pin]://                     // [086]
                                                                 // [---]
    ,arr_pid:F_ARR(c_artgirl_ren_tot +1 ) //: @pid@ #_O_P_P_#:// // [069]
    ,arr_vid:F_ARR(c_artgirl_ren_tot +1 ) //: @vid@ #_O_P_P_#:// // [069]
    ,arr_fid:F_ARR(c_artgirl_ren_tot +1 ) //: @fid@ #_O_P_P_#:// // [069]
                                                                 // [069]
    ,arr_ssv:F_SSA(c_artgirl_ren_tot +1   //: #_1_BASED_ARR_#:// // [069]
            ,      d_artgirl_ssv_bad                             // [070][069]
            ,      d_artgirl_ssv_001                             // [070][069]
            ,      d_artgirl_ssv_002                             // [070][069]
            ,      d_artgirl_ssv_003                             // [070][069]
            ,      d_artgirl_ssv_004                             // [070][069]
            ,      d_artgirl_ssv_005                             // [070][069]
            ,      d_artgirl_ssv_006                             // [070][069]
            ,      d_artgirl_ssv_007                             // [070][069]
            ,      d_artgirl_ssv_008                             // [081]
            ,      d_artgirl_ssv_009                             // [081]
            )      /////////////////                             // [069]
    ,arr_ssf:F_SSA(c_artgirl_ren_tot +1   //: #_1_BASED_ARR_#:// // [069]
            ,      d_artgirl_ssf_bad                             // [070][069]
            ,      d_artgirl_ssf_001                             // [070][069]
            ,      d_artgirl_ssf_002                             // [070][069]
            ,      d_artgirl_ssf_003                             // [070][069]
            ,      d_artgirl_ssf_004                             // [070][069]
            ,      d_artgirl_ssf_005                             // [070][069]
            ,      d_artgirl_ssf_006                             // [070][069]
            ,      d_artgirl_ssf_007                             // [070][069]
            ,      d_artgirl_ssf_008                             // [081]
            ,      d_artgirl_ssf_009                             // [081]
            )      /////////////////                             // [069]
                                                                 // [---]
    ,arr_fsm:F_CAR(c_artgirl_ren_tot + 1  //: #_1_BASED_ARR_#:// // [---][148]
            ,      c_artgirl_fsm_bad         //: [0] ://         // [---][148]
            ,      c_artgirl_fsm_nil         //: [1] ://         // [---][148]
            ,      c_artgirl_fsm_nil         //: [2] ://         // [---][148]
            ,      c_artgirl_fsm_nil         //: [3] ://         // [---][148]
            ,      c_artgirl_fsm_nil         //: [4] ://         // [---][148]
            ,      c_artgirl_fsm_000         //: [5] ://         // [---][148]
            ,      c_artgirl_fsm_per         //: [6] ://         // [252][148]
            ,      c_artgirl_fsm_per         //: [7] ://         // [282][148]
            ,      c_artgirl_fsm_nil         //: [8] ://         // [---][148]
            ,      c_artgirl_fsm_nil         //: [9] ://         // [---][148]
            )      /////////////////                             // [---][148]

    ,   vbl :          c_artgirl_vbd_len //:@vbd@://             // [066] 
    ,   vbd :F_CAR_F32(c_artgirl_vbd_len //:@vbd@://             // [066] 
                                                                 // [066] 
            //:@vcx@ @vcy@ @vcz@        @tcx@ , @tcy@            // [075][066] 
            ,   neg , neg , _0_    ,    (min) , ( 1 )//:#TLO#:// // [083][075][066] 
            ,   pos , neg , _0_    ,    ( 1 ) , ( 1 )//:#TLO#:// // [083][075][066] 
            ,   neg , pos , _0_    ,    (min) , (min)//:#TLO#:// // [083][075][066] 
            ,   pos , pos , _0_    ,    ( 1 ) , (min)//:#TLO#:// // [083][075][066] 
            )  //:#ITS_A_ZEE#://                                 // [075][074] 
    });;                                                         //      [063] 
                                                                 //      [065] 
    if( d_artgirl_gmc >= 1 ){   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
        MSG( "[I_Noticed_Your_Pants_Have_Pockets]" );;;;;;;;     // [236]
        LOG( "[ARTGIRL_STRUCT]:"   ,   d_artgirl   );;;;;;;;     // [236][065] 
    };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
                                                                 //      [065] 
};;                                                              //      [063] 
if( /** __CAMERAH__ **/ notnode ){                               // [108]
                                                                 // [108]
    var d_camerah_use =( 1 ); //:UseHighLevelCamera? ://         // [117][115][108]
    var d_camerah_dir =( 1 ); //:DirtyFlagInitallySet://         // [115]
                                                                 // [---]
    //: @FUCK_YOUR_GARBAGE_COLLECTOR@ ://                        // [---]
    var d_camerah_org = F_ARR_I32( 4 , 0,0,0,0 ); //:@SIGNED@:// // [118][111]
    var d_camerah_vp1 = F_ARR_I32( 4 , 0,0,0,0 ); //:@SIGNED@:// // [118]
                                                                 // [---]
    var d_camerah ={ laxcoma:"[HACK]"                            // [108]
                                                                 // [108]
        ,   zebasis : c_camerah_zeb_dut                          // [108]
        ,   camsnap : 0  //: IsCameraSnapOn?        ://          // [108]
        ,   camdu_x : 0  //: Camera Discrete Unit X ://          // [108]
        ,   camdu_y : 0  //: Camera Discrete Unit Y ://          // [108]
        ,   camzoom : 0.0//: 0 === NEUTRAL ZOOM     ://          // [108]
                                                                 // [108]
            //:#_CIR_CUM_DIAGRAM_#://                            // [108]
                                                                 // [108]
        ,   cir_cum : c_camerah_cir_cum_def                      // [132][108]
                                                                 // [---]
            //: #_WHAT_IS_NOPAN_FOR_# ://                        // [113]
                                                                 // [113]
        ,   nopan_x : 0 //: It is __NOT__ a "lock" ://           // [113]
        ,   nopan_y : 0 //: It is __NOT__ a "lock" ://           // [113]
                                                                 // [---]
    };;                                                          // [108]


    //:temp_circum_vars:[131]:---------------------------://     // [131]
                                                                 // [131]
        let   c_1 = c_camerah_cir_cum_inn ;                      // [131]
        let   c_2 = c_camerah_cir_cum_out ;                      // [131]
        let   c_3 = c_camerah_cir_cum_not ;                      // [131]
                                                                 // [131]
    //:---------------------------:temp_circum_vars:[131]://     // [131]
    //:name_circum_mode:[131]:---------------------------://     // [131]
                                                                 // [131]
        d_camerah_cir_cum_nam =[                                 // [131]
            "[nil][cir_cum_nam]"                                 // [131]
        ,   "CUM_INN"                                            // [131]
        ,   "CUM_OUT"                                            // [131]
        ,   "CUM_NOT"                                            // [131]
        ];;                                                      // [131]
        let  cum_nam = d_camerah_cir_cum_nam ;                   // [131]
        ASS( cum_nam[ c_1 ] === "CUM_INN" );                     // [131]
        ASS( cum_nam[ c_2 ] === "CUM_OUT" );                     // [131]
        ASS( cum_nam[ c_3 ] === "CUM_NOT" );                     // [131]
    //:---------------------------:name_circum_mode:[131]://     // [131]
    //:next_circum_mode:[131]:---------------------------://     // [131]
                                                                 // [131]
        d_camerah_cir_cum_nex = new Uint32Array([                // [131]
            0 //: ( INVALID )===>( INVALID ) :::://              // [131]
        ,   2 //: ( cum_inn )===>( cum_out ) :::://              // [131]
        ,   3 //: ( cum_out )===>( cum_not ) :::://              // [131]
        ,   1 //: ( cum_not )===>( cum_inn ) :::://              // [131]
        ]);                                                      // [131]
        let   arr_cir_cum = d_camerah_cir_cum_nex ;              // [131]
                                                                 // [131]
        ASS(( c_2 )  === arr_cir_cum[ c_1 ]  );;;;;              // [131]
        ASS(( c_3 )  === arr_cir_cum[ c_2 ]  );;;;;              // [131]
        ASS(( c_1 )  === arr_cir_cum[ c_3 ]  );;;;;              // [131]
    //:---------------------------:next_circum_mode:[131]://     // [131]

    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [129]
    //: TAG[ zero_basis_lookup_table | zeb_lookup_table ]://     // [129]
    //: TAG[ zero basis lookup table | zeb lookup table ]://     // [129]
    //: TAG[ zerobasislookuptable    | zeblookuptable   ]://     // [129]
    //: RELATED[ zero_basis_enumerations ]               ://     // [129]
    //: RELATED[ d_sexycam_not_zeb       ]               ://     // [129]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [129]

    ASS( c_dut != c_du1 , "[DUT_EQ_DU1]" );                      // [130]
    ASS( c_du1 != c_du2 , "[DU1_EQ_DU2]" );                      // [130]
    ASS( c_du2 != c_du3 , "[DU2_EQ_DU3]" );                      // [130]
    ASS( c_du3 != c_du4 , "[DU3_EQ_DU4]" );                      // [130]
    ASS( c_du4 != c_du5 , "[DU4_EQ_DU5]" );                      // [130]
    ASS( c_du5 != c_dur , "[DU5_EQ_DUR]" );                      // [130]
    ASS( c_dur != c_duh , "[DUR_EQ_DUH]" );                      // [130]
    ASS( c_duh != c_dum , "[DUH_EQ_DUM]" );                      // [130]
    ASS( c_dum != c_dut , "[DUM_EQ_DUT]" );                      // [130]

    var d_camerah_zeb_zes = F_SHUTARR( F_CAR_U32( 9              // [109]
                                                                 // [109]
    ,   c_dut    //: ZErobasis_Span ( in @D_U@ ) : [dut] ://     // [109]
    ,   c_du1    //: ZErobasis_Span ( in @D_U@ ) : [du1] ://     // [109]
    ,   c_du2    //: ZErobasis_Span ( in @D_U@ ) : [du2] ://     // [109]
    ,   c_du3    //: ZErobasis_Span ( in @D_U@ ) : [du3] ://     // [109]
    ,   c_du4    //: ZErobasis_Span ( in @D_U@ ) : [du4] ://     // [109]
    ,   c_du5    //: ZErobasis_Span ( in @D_U@ ) : [du5] ://     // [109]
    ,   c_dur    //: ZErobasis_Span ( in @D_U@ ) : [dur] ://     // [109]
    ,   c_duh    //: ZErobasis_Span ( in @D_U@ ) : [duh] ://     // [109]
    ,   c_dum    //: ZErobasis_Span ( in @D_U@ ) : [dum] ://     // [109]
    ));;                                                         // [109]
    let            zeb_zes =( d_camerah_zeb_zes );               // [109]
                                                                 // [109]
    if(  c_dut  != zeb_zes[ c_camerah_zeb_dut ] ){               // [109]
                                                                 // [109]
        MSG("");                                                 // [109]
        MSG( "[You_Are_Going_To_Crash]" );                       // [109]
        LOG( "[c_dut]:" , c_dut );                               // [109]
        LOG( "[..zes]:" , zeb_zes[ c_camerah_zeb_dut ] );        // [109]
        MSG("");                                                 // [109]
    };;                                                          // [109]
    ASS( c_dut === zeb_zes[ c_camerah_zeb_dut ],"[ZEB_DUT]" );   // [109]
                                                                 // [109]
    ASS( c_du1 === zeb_zes[ c_camerah_zeb_du1 ],"[ZEB_DU1]" );   // [109]
    ASS( c_du2 === zeb_zes[ c_camerah_zeb_du2 ],"[ZEB_DU2]" );   // [109]
    ASS( c_du3 === zeb_zes[ c_camerah_zeb_du3 ],"[ZEB_DU3]" );   // [109]
    ASS( c_du4 === zeb_zes[ c_camerah_zeb_du4 ],"[ZEB_DU4]" );   // [109]
    ASS( c_du5 === zeb_zes[ c_camerah_zeb_du5 ],"[ZEB_DU5]" );   // [109]
                                                                 // [109]
    ASS( c_dur === zeb_zes[ c_camerah_zeb_dur ],"[ZEB_DUR]" );   // [109]
    ASS( c_duh === zeb_zes[ c_camerah_zeb_duh ],"[ZEB_DUH]" );   // [109]
    ASS( c_dum === zeb_zes[ c_camerah_zeb_dum ],"[ZEB_DUM]" );   // [109]
                                                                 // [---]
};; //:END_OF_DATA_SECTION[ CAMERAH ]:::::::::::::::::::::::::// // [125][108]
if( /** __SEXYCAM__ **/ notnode ){                               // [125]
                                                                 // [125]
    var d_sexycam ={ laxcoma : "[HACK]"                          // [125]
                                                                 // [125]
    ,   but_num : (0-1) //: Button Number Press          ://     // [125]
    ,   but_not : ( 0 ) //: NumberOftimes(in row)Pressed ://     // [125]

    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [135]
    //: NUMPAD ZERO  : Zoom Extents                      ://     // [135]
    //: NUMPAD DOT   : Default d_camera.cir_cum value set://     // [135]
    //: NUMPAD ENTER : Cycle Through    cir_cum values.  ://     // [135]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [135]
    ,   npa_000 : c_sexycam_act_zoomext    //: @zoomext@ ://     // [135]
    ,   npa_dot : c_sexycam_act_cir_def    //: @cir_def@ ://     // [135]
    ,   npa_ent : c_sexycam_act_cir_nex    //: @cir_nex@ ://     // [135]
    ,   npa_num : c_sexycam_act_npa_num    //: @npa_num@ ://     // [135]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [135]

    };;                                                          // [125]
    Object.seal( d_sexycam );                                    // [125]
                                                                 // [---]
    //:--------------------------------------------------://     // [127]
    //:                 c_x:0     c_x:1     c_x:2        ://     // [127]
    //:                   |         |         |          ://     // [127]
    //:               +-------+ +-------+ +-------+      ://     // [127]
    //:               | [_7_] | | [_8_] | | [_9_] |      ://     // [127]
    //:     c_y == 0  |-------| |-------| |-------|      ://     // [127]
    //:               |  hi0  | |  hi1  | |  hi2  |      ://     // [127]
    //:               +-------+ +-------+ +-------+      ://     // [127]
    //:               +-------+ +-------+ +-------+      ://     // [127]
    //:               | [_4_] | | [_5_] | | [_6_] |      ://     // [127]
    //:     c_y == 1  |-------| |-------| |-------|      ://     // [127]
    //:               |  hi3  | |  hi4  | |  hi5  |      ://     // [127]
    //:               +-------+ +-------+ +-------+      ://     // [127]
    //:               +-------+ +-------+ +-------+      ://     // [127]
    //:               | [_1_] | | [_2_] | | [_3_] |      ://     // [127]
    //:     c_y == 2  |-------| |-------| |-------|      ://     // [127]
    //:               |  hi6  | |  hi7  | |  hi8  |      ://     // [127]
    //:               +-------+ +-------+ +-------+      ://     // [127]
    //:--------------------------------------------------://     // [127]
    //:#NUMPAD_TO_HOTEL_CELL_INDEX_LUT#:[127]:-----------://     // [127]
                                                                 // [127]
        const laxcoma_numpad_values ="[HACK]"                    // [127]
        ,   _1_ =( 1 )  , hi0 =( 0 )                             // [127]
        ,   _2_ =( 2 )  , hi1 =( 1 )                             // [127]
        ,   _3_ =( 3 )  , hi2 =( 2 )                             // [127]
        ,   _4_ =( 4 )  , hi3 =( 3 )                             // [127]
        ,   _5_ =( 5 )  , hi4 =( 4 )                             // [127]
        ,   _6_ =( 6 )  , hi5 =( 5 )                             // [127]
        ,   _7_ =( 7 )  , hi6 =( 6 )                             // [127]
        ,   _8_ =( 8 )  , hi7 =( 7 )                             // [127]
        ,   _9_ =( 9 )  , hi8 =( 8 )                             // [127]
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;                             // [127]
                                                                 // [127]
        var d_sexycam_pad_hi9 =[ 0x00                            // [127]
        ,   hi6 //: pad( 1 )===>( hi6 ) , cel[ 0,2 ] ://         // [127]
        ,   hi7 //: pad( 2 )===>( hi7 ) , cel[ 1,2 ] ://         // [127]
        ,   hi8 //: pad( 3 )===>( hi8 ) , cel[ 2,2 ] ://         // [127]
                                                                 // [127]
        ,   hi3 //: pad( 4 )===>( hi3 ) , cel[ 0,1 ] ://         // [127]
        ,   hi4 //: pad( 5 )===>( hi4 ) , cel[ 1,1 ] ://         // [127]
        ,   hi5 //: pad( 6 )===>( hi5 ) , cel[ 2,1 ] ://         // [127]
                                                                 // [127]
        ,   hi0 //: pad( 7 )===>( hi0 ) , cel[ 0,0 ] ://         // [127]
        ,   hi1 //: pad( 8 )===>( hi1 ) , cel[ 1,0 ] ://         // [127]
        ,   hi2 //: pad( 9 )===>( hi2 ) , cel[ 2,0 ] ://         // [127]
        ];;                                                      // [127]
                                                                 // [127]
        let pad_hi9 = d_sexycam_pad_hi9 ;                        // [127]
                                                                 // [127]
        ASS( hi0 === pad_hi9[ _7_ ] , "[hi0]" );                 // [127]
        ASS( hi1 === pad_hi9[ _8_ ] , "[hi1]" );                 // [127]
        ASS( hi2 === pad_hi9[ _9_ ] , "[hi2]" );                 // [127]
                                                                 // [127]
        ASS( hi3 === pad_hi9[ _4_ ] , "[hi3]" );                 // [127]
        ASS( hi4 === pad_hi9[ _5_ ] , "[hi4]" );                 // [127]
        ASS( hi5 === pad_hi9[ _6_ ] , "[hi5]" );                 // [127]
                                                                 // [127]
        ASS( hi6 === pad_hi9[ _1_ ] , "[hi6]" );                 // [127]
        ASS( hi7 === pad_hi9[ _2_ ] , "[hi7]" );                 // [127]
        ASS( hi8 === pad_hi9[ _3_ ] , "[hi8]" );                 // [127]
                                                                 // [127]
    //:-----------:#NUMPAD_TO_HOTEL_CELL_INDEX_LUT#:[127]://     // [---]
    //:#TIMES_PRESSED___TO___ZEB_ENU#:[129]:-------------://     // [---]
                                                                 // [129]
    var d_sexycam_not_zeb = F_SHUTARR( F_CAR_U32( 9+1            // [129]
    ,    0xFFFFFFFF        //: 0 : -------- : Unused  :::://     // [129]
    ,    c_camerah_zeb_dum //: 1 : -------- : THE_DUM :::://     // [129]
    ,    c_camerah_zeb_duh //: 2 : -------- : HOTEL   :::://     // [129]
    ,    c_camerah_zeb_dur //: 3 : te7 == 6 : ROOM    :::://     // [129]
    ,    c_camerah_zeb_du5 //: 4 : te7 == 5 : ------- :::://     // [129]
    ,    c_camerah_zeb_du4 //: 5 : te7 == 4 : ------- :::://     // [129]
    ,    c_camerah_zeb_du3 //: 6 : te7 == 3 : ------- :::://     // [129]
    ,    c_camerah_zeb_du2 //: 7 : te7 == 2 : ------- :::://     // [129]
    ,    c_camerah_zeb_du1 //: 8 : te7 == 1 : ------- :::://     // [129]
    ,    c_camerah_zeb_dut //: 9 : te7 == 0 : ------- :::://     // [129]
    ));;                                                         // [129]
                                                                 // [129]
    //:-------------:#TIMES_PRESSED___TO___ZEB_ENU#:[129]://     // [---]

    //:#_SEXYCAM_MWM_#:[135]:----------------------------://     // [135]
                                                                 // [135]
    var d_sexycam_num_pad_000 =( "[FIX:MEMBER:npa_000]" );       // [135]
    var d_sexycam_num_pad_dot =( "[FIX:MEMBER:npa_dot]" );       // [135]
    var d_sexycam_num_pad_ent =( "[FIX:MEMBER:npa_ent]" );       // [135]
                                                                 // [135]
    var d_sexycam_npa_000     =( "[FIX:MEMBER:npa_000]" );       // [135]
    var d_sexycam_npa_dot     =( "[FIX:MEMBER:npa_dot]" );       // [135]
    var d_sexycam_npa_ent     =( "[FIX:MEMBER:npa_ent]" );       // [135]
                                                                 // [135]
    //:----------------------------:#_SEXYCAM_MWM_#:[135]://     // [135]

                                                                 // [---]
                                                                 // [125]
};; //:END_OF_DATA_SECTION[ SEXYCAM ]:::::::::::::::::::::::::// // [125]
                                                                 // [---]
if( /** __ASERVER__ **/ yesnode ){                               // [---][102]
                                                                 // [---][102]
    //:NO_DATA://                                                // [---][102]
};;                                                              // [---][102]
if( /** __DABITCH__ **/ notnode ){                               // [---][102]
                                                                 // [---][102]
    //: TODO: Move DABITCH SQL STRINGS INTO HERE ://             // [---][102]
};;                                                              // [---][102]
if( /** __HOWORLD__ **/ notnode ){                               // [360]
                                                                 // [360]
    //: No top level global data for Hotel World Yet ://         // [360]
                                                                 // [360]
};; //: __HOWORLD__ ::: DATASEC ::: END ::::::::::::::::::::::// // [360]
if( /** __MIRMAID__ **/ notnode || yesnode ){                    // [453][421]
                                                                 // [453]
    //:NOTE[ #_MIRMAID_DATA_ON_CLIENT_AND_SERVER_# ]:::::://     // [453]
                                                                 // [---]
    var d_mirmaid_ltc = NEW_LTC();                               // [449]
    var d_mirmaid_gtc = NEW_GTC();                               // [449]
                                                                 // [---]
};; //: __MIRMAID__ ::: DATASEC ::: END ::::::::::::::::::::::// // [421]
if( /** __EDIGAME__ **/ notnode ){                               // [102]
                                                                 // [---]
    //:#_WHAT_IS_EDIGAME_#://                                    // [103]
                                                                 // [---]
    var d_edigame_tot_cod =( 0 ); //:@tot_cod@://                // [314]
                                                                 // [---]
    var d_edigame_mod =( c_edigame_edi );                        // [103]
                                                                 // [103]
    var d_edigame_edi ={ laxcoma:"[HACK]"                        // [103]
                                                                 // [103]
        /** Members when acting as EDITOR **/                    // [103]
                                                                 // [---]
        //:#_MIRRORING_BRUSH_#:[422]:--------------------://     // [---][422]
                                                                 // [---][---]
                                //:TAG[    MIR_MOD      ]://     // [427][---]
                                //:TAG[ MIRROR_MODE     ]://     // [427][---]
                                //:TAG[ edi_mir_mod_xyd ]://     // [442][---]
                                                                 // [---][---]
    ,   edi_mod_mir_onn : ( 1 )  //: Mirror Mode ON? ::::://     // [---][422]
    ,   edi_mod_mir_am6 : ( 0 )  //: Mirror_AutoMethodBit://     // [470][428]
    ,   edi_mod_mir_xyd : ( 7 )  //: #_MIR_XYD_SETTINGS_#://     // [---][459][447][446][442][435][427][425]
    ,   edi_mod_mir_iso : ( 0 )  //: #_MIR_ISOLATION_#   ://     // [470][448][---]
                                                                 // [---][422]
        //:--------------------:#_MIRRORING_BRUSH_#:[422]://     // [---][422]
        //:#_RANDOMIZING_BRUSH_#:[314]:------------------://     // [---][314]
        //: TAG[ edi_mod_ran | Randomize Brush Size |RBS]://     // [---][314]
        //: TAG[ Randomize Brush Value | Randomize Brush]://     // [---][314]
        //: TAG[ Randomize Brush Layer | Randomize Layer]://     // [---][314]
                                                                 // [---][314]
    ,   edi_mod_ran_sir : ( 32)     //: #_SAME_IN_ROW_#  ://     // [470][314]
                                                                 // [---][314]
    ,   edi_mod_ran_onn : ( 1 )     //: @_RANDBRUSH_ON_@ ://     // [470][469][---]
    ,   edi_mod_ran_te7 : ( 1 )     //: @_RANDOM_BRUSH_@ ://     // [470][314][---]
    ,   edi_mod_ran_la3 : ( 0 )     //: @_RANDOM_BRUSH_@ ://     // [---][323][314]
    ,   edi_mod_ran_v16 : ( 0 )     //: @_RANDOM_BRUSH_@ ://     // [---][314]
                                                                 // [---][---]
            //:#_RANDOM_BRUSH_RANGES_#:[469]:------------://     // [---][469]
                                                                 // [---][469]
                //:TAG[ edi_ran_min | edi_v16_min ]::://         // [---][469]
                //:TAG[ edi_v16_min | edi_v16_max ]::://         // [---][469]
                //:TAG[ edi_te7_min | edi_te7_max ]::://         // [---][469]
                                                                 // [---][469]
                ,   edi_mod_ran_v16_min :(   1)                  // [---][469]
                ,   edi_mod_ran_v16_max :(16-1)                  // [---][469]
                                                                 // [---][469]
                ,   edi_mod_ran_te7_min :(   0)                  // [---][469]
                ,   edi_mod_ran_te7_max :(   3)                  // [470][469]
                                                                 // [---][469]
                ,   edi_mod_ran_la3_min :"[SEARCH:frequen]"      // [---][469]
                ,   edi_mod_ran_la3_max :"[SEARCH:frequen]"      // [---][469]
                                                                 // [---][469]
            //:------------:#_RANDOM_BRUSH_RANGES_#:[469]://     // [---][469]
            //:#_RANDOM_LAYER_FREQUENCY_#:[469]:---------://     // [469]
                                                                 // [469]
                //:TAG[ edi_mod_ran_la3_min_geo ]::::://         // [469]
                //:TAG[ edi_mod_ran_la3_max_geo ]::::://         // [469]
                //:TAG[ edi_mod_ran_la3_min_bom ]::::://         // [469]
                //:TAG[ edi_mod_ran_la3_max_bom ]::::://         // [469]
                //:TAG[ edi_mod_ran_la3_min_fad ]::::://         // [469]
                //:TAG[ edi_mod_ran_la3_max_fad ]::::://         // [469]
                //:TAG[ edi_mod_ran_la3_min ]::::::::://         // [469]
                //:TAG[ edi_mod_ran_la3_max ]::::::::://         // [469]
                //:TAG[ edi_mod_ran_la3_bit ]::::::::://         // [469]
                //:TAG[ edi_mod_ran_la3_lb3 ]::::::::://         // [469]
                //:@lb3@ : LayerBits - 3 of them ::::://         // [469]
                //:TAG[ edi_mod_ran_la3_geo ]::::::::://         // [469]
                //:TAG[ edi_mod_ran_la3_bom ]::::::::://         // [469]
                //:TAG[ edi_mod_ran_la3_fad ]::::::::://         // [469]
                //:TAG[ edi_mod_ran_la3_geo_frequen ]://         // [469]
                //:TAG[ edi_mod_ran_la3_bom_frequen ]://         // [469]
                //:TAG[ edi_mod_ran_la3_fad_frequen ]://         // [469]
                                                                 // [469]
                ,   edi_mod_ran_la3_frequen_geo :( 1 )           // [469]
                ,   edi_mod_ran_la3_frequen_bom :( 1 )           // [469]
                ,   edi_mod_ran_la3_frequen_fad :( 1 )           // [469]
                                                                 // [469]
            //:---------:#_RANDOM_LAYER_FREQUENCY_#:[469]://     // [469]
                                                                 // [---]
        //:------------------:#_RANDOMIZING_BRUSH_#:[314]://     // [314]
                                                                 // [---]
        //: TAG[ brush-color | brush_color | brushcolor ]://     // [313]
        //: TAG[ brush-value | brush_value | brushvalue ]://     // [313]
        //: TAG[ tile-brush  | tile_brush  | tilebrush  ]://     // [313]
                                                                 // [---]
    ,   edi_te7 :( d_te7 )  //: Tile Size Exponent :-----://     // [155][151]
    ,   edi_la3 :(      0)  //: LAY[0==TIL,1==BOM,2==FAD]://     // [197][170]
    ,   edi_v16 :(      1)  //: TIL_VAL[ 0 -to- (16-1)  ]://     // [268][170]
                                                                 // [---]
                        //:------------------------------://     // [339]
    ,   edi_l_x :( 1 )  //: <---+-------+                ://     // [339]
    ,   edi_l_y :( 1 )  //:     |__AM4  |__AM6           ://     // [339]
    ,   edi_m_x :( 0 )  //:     |       |                ://     // [339]
    ,   edi_m_y :( 0 )  //: <---+       |                ://     // [339]
    ,   edi_ro4 :( 0 )  //: <-----------+                ://     // [339]
                        //:------------------------------://     // [339]
                                                                 // [---]
    //: NOT_ALLOWED_IN_EDITOR_OBJECT[ edi_am4 ] :::::::::://     // [339]
    //: NOT_ALLOWED_IN_EDITOR_OBJECT[ edi_am6 ] :::::::::://     // [339]
                                                                 // [---]
    ,   mou_p_x :(0-1)  //: Last_Mouse_Move Pix_Y @H13@  ://     // [144]
    ,   mou_p_y :(0-1)  //: Last_Mouse_Move Pix_X @H13@  ://     // [144]
                                                                 // [144]
    ,   clk_p_x :(0-1)  //: Last_Clicked    Pix_X @H13@  ://     // [144]
    ,   clk_p_y :(0-1)  //: Last_Clicked    Pix_Y @H13@  ://     // [144]
                                                                 // [---]
    };;                                                          // [103]
    var d_edigame_gam ={ laxcoma:"[HACK]"                        // [103]
                                                                 // [103]
        /** Members when acting as GAME   **/                    // [103]
                                                                 // [103]
    };;                                                          // [103]
                                                                 // [---]
};;                                                              // [102]
if( /** __KONAMIC__ **/ notnode ){ //:::::BEG[ KONAMIC_DATA ]:// // [180]
                                                                 // [---]
    var d_konamic_h3x_h3y_tog =( 1 );  //:#_KON_TOG_#://         // [203][202]
                                                                 // [---]
    var d_konamic_m_i =( "[FIX:c_konamic_m_i:ITS_CONST]" );      // [181]
                                                                 // [181]
    var d_konamic_act =( 0 ); //:Konami Code Activated ? ://     // [181]
    var d_konamic_ptr =( "[#_CARRY_OVER_ISNT_ENOUGH_#]" );       // [187][181]
                                                                 // [---]
    var d_konamic_win = new Uint8Array( 8 );                     // [187]
    var d_konamic_w_p =( 0 ); //: @R_O_E@/@RONIS@ ://            // [187]
                                                                 // [---]
    var d_konamic_ark = new Uint8Array([                         // [181]
                                                                 // [181]
        c_konamic_ark_upp                                        // [181]
    ,   c_konamic_ark_upp                                        // [181]
                                                                 // [181]
    ,   c_konamic_ark_dow                                        // [181]
    ,   c_konamic_ark_dow                                        // [181]
                                                                 // [181]
    ,   c_konamic_ark_lef                                        // [181]
    ,   c_konamic_ark_rig                                        // [181]
                                                                 // [181]
    ,   c_konamic_ark_lef                                        // [181]
    ,   c_konamic_ark_rig                                        // [181]
    ]);;                                                         // [181]
    ASS( 8 === d_konamic_ark.length , "[konamic_ark:001]" );     // [181]
                                                                 // [---]
    var d_konamic_lut =( "[FIX:d_konamic_lut_a_z]"               // [199][182]
                        +"[FIX:d_konamic_lut_pad]" );;           // [199][182]
                                                                 // [--------]
    var d_konamic_lut_pad = new Uint8Array([                     // [199][---]
                                                                 // [199][---]
        c_konamic_dum_000 //: [T_O_G] Levelpack [F_O_E] ://      // [199][---]
    ,   c_konamic_dum_001 //: [B___L] Levelpack [F_O_E] ://      // [199][---]
    ,   c_konamic_dum_002 //: [B___M] Levelpack [F_O_E] ://      // [199][---]
    ,   c_konamic_dum_003 //: [B___R] Levelpack [F_O_E] ://      // [199][---]
    ,   c_konamic_dum_004 //: [C___L] Levelpack [F_O_E] ://      // [199][---]
    ,   c_konamic_dum_005 //: [C___M] Levelpack [F_O_E] ://      // [199][---]
    ,   c_konamic_dum_006 //: [C___R] Levelpack [F_O_E] ://      // [199][---]
    ,   c_konamic_dum_007 //: [T___L] Levelpack [F_O_E] ://      // [199][---]
    ,   c_konamic_dum_008 //: [T___M] Levelpack [F_O_E] ://      // [199][---]
    ,   c_konamic_dum_009 //: [T___R] Levelpack [F_O_E] ://      // [199][---]
    ]);;                                                         // [199][---]
    ASS( 10 === d_konamic_lut_pad.length , "[LUT_PAD]" );        // [202][---]
                                                                 // [---][---]
    var d_konamic_lut_a_z = new Uint8Array([                     // [---][180][---]
                                                                 // [---][180][---]
        c_konamic_dumones     //: ( "A" / 0 ) ://                // [---][180][---]
    ,   c_konamic_dumzero     //: ( "B" / 1 ) ://                // [---][180][---]
    ,   c_konamic_binfont     //: ( "C" / 2 ) ://                // [216][---][---]
                                                                 // [---][---][---]
    ,   c_konamic_savecen_ram //: ( "D" / 3 )  @_D_KEY_@ ://     // [368][366][180]
    ,   c_konamic_loadcen_ram //: ( "E" / 4 )  @_E_KEY_@ ://     // [368][366][180]
    ,   c_konamic_savecen_dsk //: ( "F" / 5 )  @_F_KEY_@ ://     // [368][366][180]
    ,   c_konamic_loadcen_dsk //: ( "G" / 6 )  @_G_KEY_@ ://     // [368][366][180]
                                                                 // [---][---][---]
    ,   c_konamic_pixdump     //: ( "H" / 7 )  @_H_KEY_@ ://     // [465][180][---]
    ,   c_konamic_nothing     //: ( "I" / 8 ) ://                // [---][180][---]
    ,   c_konamic_nothing     //: ( "J" / 9 ) ://                // [---][180][---]
    ,   c_konamic_nothing     //: ( "K" /10 ) ://                // [---][180][---]
    ,   c_konamic_loadcen_web //: ( "L" /11 )  @_L_KEY_@ ://     // [368][366][180] 
    ,   c_konamic_nothing     //: ( "M" /12 ) ://                // [---][180][---]
    ,   c_konamic_nothing     //: ( "N" /13 ) ://                // [---][180][---]
    ,   c_konamic_nothing     //: ( "O" /14 ) ://                // [---][180][---]
    ,   c_konamic_nothing     //: ( "P" /15 ) ://                // [---][180][---]
    ,   c_konamic_nothing     //: ( "Q" /16 ) ://                // [---][180][---]
    ,   c_konamic_nothing     //: ( "R" /17 ) :// TAG[ R_2022 ]  // [366][339][180]
    ,   c_konamic_savecen_web //: ( "S" /18 )  @_S_KEY_@ ://     // [368][366][180] 
    ,   c_konamic_nothing     //: ( "T" /19 ) ://                // [--------][180]
    ,   c_konamic_nothing     //: ( "U" /20 ) ://                // [--------][180]
    ,   c_konamic_nothing     //: ( "V" /21 ) ://                // [--------][180]
    ,   c_konamic_nothing     //: ( "W" /22 ) ://                // [--------][180]
    ,   c_konamic_nothing     //: ( "X" /23 ) ://                // [--------][180]
    ,   c_konamic_nothing     //: ( "Y" /24 ) ://                // [--------][180]
    ,   c_konamic_nothing     //: ( "Z" /25 ) ://                // [--------][180]
                                                                 // [--------][180]
    ]);;                                                         // [--------][180]
    ASS( 26 === d_konamic_lut_a_z.length );                      // [--------][180]
                                                                 // [--------][180]
};; //::::::::::::::::::::::::::::::::::::END[ KONAMIC_DATA ]:// // [--------][180]
if( /** __KEYMAST__ **/ notnode ){                               // [102]
                                                                 // [102]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [114]
    //: TAG[ keymast data | keymastdata | keymast-data ] ://     // [114]
    //: TAG[ keymast_data | keyboard master data       ] ://     // [114]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [114]
                                                                 // [114]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [114]
    //: @ark@ : ARow Key           | @lef@ @rig@: X-Axis ://     // [114]
    //: @dvx@ : Direction Vector X | @upp@ @dow@: Y-Axis ://     // [114]
    //: @dvy@ : Direction Vector Y |                     ://     // [114]
    //:::::::::::::::::::::::::::::::::::::::::::::::::::://     // [114]
                                                                 // [114]
    var d_keymast_ark_dvx = F_CAR_I32(  4                        // [114]
        , ( 0 - 1 )     //: @ark_lef@ : Arrow Key Left   ://     // [114]
        , (   0   )     //: @ark_upp@ : Arrow Key Upward ://     // [114]
        , ( 0 + 1 )     //: @ark_rig@ : Arrow Key Right  ://     // [114]
        , (   0   )     //: @ark_dow@ : Arrow Key Down   ://     // [114]
    );;                                                          // [114]
    var d_keymast_ark_dvy = F_CAR_I32(  4                        // [114]
        , (   0   )     //: @ark_lef@ : Arrow Key Left   ://     // [114]
        , ( 0 - 1 )     //: @ark_upp@ : Arrow Key Upward ://     // [114]
        , (   0   )     //: @ark_rig@ : Arrow Key Right  ://     // [114]
        , ( 0 + 1 )     //: @ark_dow@ : Arrow Key Down   ://     // [114]
    );;                                                          // [114]
                                                                 // [114]
    let k0 =( c_keymast_ark_k_0 );                               // [114]
                                                                 // [114]
    ASS((0-1)===d_keymast_ark_dvx[ c_keymast_ark_lef -k0 ]);     // [114]
    ASS(( 0 )===d_keymast_ark_dvx[ c_keymast_ark_upp -k0 ]);     // [114]
    ASS((0+1)===d_keymast_ark_dvx[ c_keymast_ark_rig -k0 ]);     // [114]
    ASS(( 0 )===d_keymast_ark_dvx[ c_keymast_ark_dow -k0 ]);     // [114]
                                                                 // [114]
    ASS(( 0 )===d_keymast_ark_dvy[ c_keymast_ark_lef -k0 ]);     // [114]
    ASS((0-1)===d_keymast_ark_dvy[ c_keymast_ark_upp -k0 ]);     // [114]
    ASS(( 0 )===d_keymast_ark_dvy[ c_keymast_ark_rig -k0 ]);     // [114]
    ASS((0+1)===d_keymast_ark_dvy[ c_keymast_ark_dow -k0 ]);     // [114]
                                                                 // [---]
};;                                                              // [---][102]
if( /** __KEYEMMA__ **/ notnode ){                               // [219]
                                                                 // [---]
    var d_keyemma_key_pad ={ laxcoma:"[HACK]"                    // [220]
                                                                 // [220]
    ,   "0"   :  96                                              // [220]
    ,   "1"   :  97                                              // [220]
    ,   "2"   :  98                                              // [220]
    ,   "3"   :  99                                              // [220]
    ,   "4"   : 100                                              // [220]
    ,   "5"   : 101                                              // [220]
    ,   "6"   : 102                                              // [220]
    ,   "7"   : 103                                              // [220]
    ,   "8"   : 104                                              // [220]
    ,   "9"   : 105                                              // [220]
                                                                 // [220]
    ,   "*"   : 106 //: Multiply          ://                    // [220]
    ,   "+"   : 107 //: Add               ://                    // [220]
    ,"???????": 108 //: #_SEPERATOR_KEY_# ://                    // [220]
    ,   "-"   : 109 //: Subtract          ://                    // [220]
    ,   "."   : 110 //: Decimal Point     ://                    // [220]
    ,   "/"   : 111 //: Divide            ://                    // [220]
                                                                 // [220]
    };;                                                          // [220]
                                                                 // [---]
};;                                                              // [219]
if( /** __MOUMAST__ **/ notnode ){                               // [---][142]
                                                                 // [---][142]
    var d_moumast_dir =( 0 ); //:MOUSE_MASTER_DIRTY?://          // [169][---]
                                                                 // [---][142]
};;                                                              // [---][142]
if( /** __SERGAME__ **/ yesnode ){                               //      [102]
                                                                 //      [102]
    //:NO_DATA://                                                //      [102]
};;                                                              //      [102]
if( /** __CLIGAME__ **/ notnode ){                               // [102][085]
                                                                 // [102][085]
    /** Frame Rate Control **/                                   // [102][085]
                                                                 // [102][085]
        var   d_cligame_t_0 ; //:TimeStampBeforeWork://          // [102][085]
        var   d_cligame_t_1 ; //:TimeStampAfterWork ://          // [102][085]
        var   d_cligame_mil ; //:ElapsedMilliseconds://          // [102][085]
        ///   d_cligame_tms ; //:Target Millisecs   ://          // [102][085]
        var   d_cligame_ams ; //:Adjusted/LeftoverMS://          // [102][085]
                                                                 // [102][085]
        ASS(  c_cligame_tms === ( 1000 / c_fps ) , "[TMS]" );    // [102][085]
                                                                 // [102][085]
                                                                 // [102][085]
};;                                                              // [102][085]
                                                                 // [---]
//:=====================================:DATA_BY_SYSTEM:[063]:// // [---]
//:MASTER_DECLARATION_FUNC:[035]:============================:// // [---]
                                                                 // [???]
    /** ************************************************ **/     // [???]
    /** This section was a BAD IDEA. Because functions   **/     // [???]
    /** end up too deeply nested. Just give each         **/     // [???]
    /** function it's own unique code section and        **/     // [???]
    /** stack all functions in continguous strip         **/     // [???]
    /** within the sourc code. -KanjiCoder               **/     // [???]
    /** ************************************************ **/     // [???]
                                                                 // [???]
//:============================:MASTER_DECLARATION_FUNC:[035]:// // [---]
//:FUNC_BOILERPLATE:[028]+[035]:=============================:// // [---]
                                                                 // [---]
    function ERR( i_msg ){                                       // [???]
                                                                 // [???]
        if( 1 === 1 ){ console.log( "[ERR]:" + i_msg ); };       // [???]
        if( notnode ){       alert( "[ERR]:" + i_msg ); };       // [???]
        if( notnode ){       throw( "[ERR]:" + i_msg ); };       // [???]
        if( yesnode ){  process.exit( 40 /**[040]**/ ); };       // [???]
    };;                                                          // [???]
    function LOG( i_msg , i_any ){                               // [???]
                                                                 // [???]
        if( undefined != i_any ){                                // [040]
                                                                 // [???]
            console.log( i_msg , ":" , i_any  );                 // [???]
        }else{                                                   // [???]
            console.log( i_msg , ":" , "[UND]" );                // [040] 
        };;                                                      // [???]
    };;                                                          // [???]

    const    LOG_BIN     = "[FIX:LOG _ BIN _ HEX]" ; //://///:// // [333]
    const    LOG_HEX     = "[FIX:LOG _ BIN _ HEX]" ; //://///:// // [333]
    const    LOG_HEX_BIN = "[FIX:LOG _ BIN _ HEX]" ; //://///:// // [333]
    const  F_LOG_BIN     = "[FIX:LOG _ BIN _ HEX]" ; //://///:// // [333]
    const  F_LOG_HEX     = "[FIX:LOG _ BIN _ HEX]" ; //://///:// // [333]
    const  F_LOG_HEX_BIN = "[FIX:LOG _ BIN _ HEX]" ; //://///:// // [333]
    const  F_LOG_HEX_BIN_DEC = "[SEE_ABOVE]"       ; //://///:// // [333]
    const    LOG_HEX_BIN_DEC = "[SEE_ABOVE]"       ; //://///:// // [333]
    function LOG_BIN_HEX( i_str , i_num ){           //://///:// // [333]
                                                                 // [333]
        if( "undefined" === typeof i_num ){                      // [333]
            ERR("[SUPPLY_NUMBER_YOU_FOOL]");                     // [333]
        };;                                                      // [333]
        if( "number" != typeof i_num ){                          // [333]
            ERR("[SERIOUSLY_GIVE_ME_A_NUMBER]");                 // [333]
        };;                                                      // [333]
                                                                 // [333]
        var str_bin =( i_num.toString(  2 ) );                   // [333]
        var str_hex =( i_num.toString( 16 ) );                   // [333]
        var str_dec =( i_num.toString( 10 ) );                   // [333]
                                                                 // [333]
        console.log( i_str + "[AS_BIN]:"+ "(" +str_bin+ ")" );   // [333]
        console.log( i_str + "[AS_HEX]:"+ "(" +str_hex+ ")" );   // [333]
        console.log( i_str + "[AS_DEC]:"+ "(" +str_dec+ ")" );   // [333]
                                                                 // [333]
    };;  //://///////////////////////////////////////////////:// // [333]

    function MSG( i_msg ){                                       // [---][040] 
        if( typeof i_msg != "string" ){                          // [---][040] 
            console.log( "[MSG_IS_FOR_STRINGS]" );               // [---][040] 
        }else{                                                   // [---][040] 
            console.log( i_msg );                                // [---][040] 
        };;                                                      // [---][040] 
    };;                                                          // [---][040] 
                                                                 //
    //:#_NOT_NIL_#:[380]:------------------------------------:// // [380][--------]
                                                                 // [380][--------]
        function HAS( i_obj ){ //:TAG[ F_HAS | HAS_FUNC ]://     // [395][380][182]
                                                                 // [380][---][???]
            var o_has =( 0 );                                    // [380][---][???]
                                                                 // [380][---][???]
            if( null      === i_obj                              // [395][--------]
            ||  undefined === i_obj                              // [395][--------]
            ){                                                   // [395][--------]
                o_has=( 0 );                                     // [395][--------]
            }else                                                // [395][--------]
            if( i_obj.nodeName ){                                // [395][--------]
                                                                 // [395][--------]
                o_has=( 1 );                                     // [395][--------]
            }else                                                // [395][--------]
            if( typeof i_obj === "string" ){                     // [380][---][???]
                                                                 // [380][---][???]
                /** Detect Custom Nil ( "[nil]" ) **/            // [380][---][???]
                                                                 // [380][---][???]
                if( 1                                            // [380][---][???]
                &&   ( "[" === i_obj[0] )                        // [380][---][???]
                &&   ( "n" === i_obj[1] )                        // [380][---][???]
                &&   ( "i" === i_obj[2] )                        // [380][---][???]
                &&   ( "l" === i_obj[3] )                        // [380][---][???]
                &&   ( "]" === i_obj[4] )                        // [380][---][???]
                ){                                               // [380][---][???]
                    o_has =( 0 );                                // [380][---][???]
                }else{                                           // [380][---][???]
                    o_has =( 1 );                                // [380][---][???]
                };;                                              // [380][---][???]
            }else{                                               // [380][---][???]
                if( null      == i_obj                           // [380][---][???]
                ||  undefined == i_obj                           // [380][---][???]
                ||            ( !i_obj )                         // [380][---][???]
                || ""         == i_obj                           // [380][---][???]
                ){                                               // [380][---][???]
                    o_has =( 0 );                                // [380][---][???]
                }else{                                           // [380][---][???]
                    o_has =( 1 );                                // [380][---][???]
                };;                                              // [380][---][???]
            };;                                                  // [380][---][???]
                                                                 // [380][---][???]
            return( o_has );                                     // [380][---][???]
        };;                                                      // [380][---][???]
                                                                 // [380][--------]
    //:------------------------------------:#_NOT_NIL_#:[380]:// // [380][--------]
    //:#_YES_NIL_#:[380]:------------------------------------:// // [380][--------]
                                                                 // [380][--------]
        function NIL( i_obj ){ //:TAG[ NIL_FUNC | F_NIL ]://     // [395][380][040] 
                                                                 // [380][???][---]
            //: ************************************ ://         // [380][???][---]
            //: DONT: return( ! HAS( i_obj ) ) ***** ://         // [380][???][---]
            //: Want INT32 , not bool "true"/"false" ://         // [380][???][---]
            //: *************************************://         // [380][???][---]
                                                                 // [380][???][---]
            var o_nil = ( 666 );                                 // [380][040][---]
            var   has =( HAS( i_obj ) );                         // [380][040][---]
            if( 0 >= has ){ o_nil =( 1 ); }else                  // [380][040][---]
            if( 1 <= has ){ o_nil =( 0 ); }else{                 // [380][040][---]
                                                                 // [380][--------]
                ERR("[EXPECTED_DEAD_CODE_LINE_2022]");           // [380][--------]
            };;                                                  // [380][--------]
                                                                 // [380][040][---]
            return( o_nil );                                     // [380][040][---]
        };;                                                      // [380][???][---]
    //:------------------------------------:#_YES_NIL_#:[380]:// // [380][--------]

                                                                 // [???]
    function YEL( i_msg ){                                       // [098]
                                                                 // [098]
        if( notnode ){ window.alert( i_msg ); };                 // [098]
        console.log( "[YEL_MSG]:" ,  i_msg );                    // [098]
    };;                                                          // [098]
    function ASS( i_obj , i_oem ){                               // [098][071]
                                                                 //      [071]
        if( !HAS( i_obj ) ){                                     //      [071]
                                                                 //      [071]
            MSG( "[MSG:ASSFAIL]"+( i_oem || "" ) );              // [098][071]
            YEL( "[YEL:ASSFAIL]"+( i_oem || "" ) );              // [098]
            ERR( "[ERR:ASSFAIL]"+( i_oem || "" ) );              // [098]
        };;                                                      //      [071]
                                                                 //      [071]
        return(   i_obj );                                       //      [071]
    };;                                                          //      [071]
                                                                 // [---]
    function ASS_PO2( i_num , i_oem ){  //:::::::::::::::://     // [298]
                                                                 // [298]
        if( !(i_num >= 0) ){                                     // [298]
            ERR("[POS_NUMS_ONLY]"+(i_oem||"") );                 // [298]
        };;                                                      // [298]
        if( i_num > 0xFFFFFFFF ){                                // [298]
            ERR("[32_BITS_ONLY_BITCHES]"+(i_oem||"") );          // [298]
        };;                                                      // [298]
                                                                 // [298]
        var nob =( 0 ); //:@nob@:NumberOfBits(set)://            // [298]
        var abi =( 0 ); //:@abi@:Actual_Bit_Index ://            // [298]
                                                                 // [298]
        for( abi = 0 ; abi <=(32-1) ; abi++ ){                   // [298]
                                                                 // [298]
            if(  0x0 != (( i_num >>> abi )&( 0x1 )) ){           // [298]
                nob++ ;                                          // [298]
            };;                                                  // [298]
        };;                                                      // [298]
                                                                 // [298]
        if( 1 != nob ){                                          // [298]
                                                                 // [298]
            ERR("[NOT_POWER_OF_TWO]:"+(i_oem||""));              // [298]
        };;                                                      // [298]
                                                                 // [298]
        return( i_num );                                         // [298]
    };; //:ENDFUNC[ ASS_PO2 :::::::::::::::::::::::::::::://     // [298]
                                                                 // [---]
    function ASS_LEN_017( i_num , i_oem ){  ////////////////     // [242]
                                                        ////     // [242]
        if( 17 !== i_num ){                             ////     // [242]
                                                        ////     // [242]
            MSG( "[MSG:ASS_LEN_017:FAIL]"+( i_oem || "" ) );     // [242]
            YEL( "[YEL:ASS_LEN_017:FAIL]"+( i_oem || "" ) );     // [242]
            ERR( "[ERR:ASS_LEN_017:FAIL]"+( i_oem || "" ) );     // [242]
        };;                                             ////     // [242]
    };; ////////////////////////////////////////////////////     // [242]
                                                                 // [---]
    function ASS_LEN_016( i_num , i_oem ){  ////////////////     // [246]
                                                        ////     // [246]
        if( 16 !== i_num ){                             ////     // [246]
                                                        ////     // [246]
            MSG( "[MSG:ASS_LEN_016:FAIL]"+( i_oem || "" ) );     // [246]
            YEL( "[YEL:ASS_LEN_016:FAIL]"+( i_oem || "" ) );     // [246]
            ERR( "[ERR:ASS_LEN_016:FAIL]"+( i_oem || "" ) );     // [246]
        };;                                             ////     // [246]
    };; ////////////////////////////////////////////////////     // [246]
                                                                 // [---]
    const    ASS_TUP_EQA = "[FIX:EQU:NOT:EQA]" ;                 // [164]
    const    ASS_TUP     = "[COMPARISON_USES:ASS_TUP_EQU]" ;     // [164]
                                                                 // [164]
    function ASS_TUP_EQU( i_tup_000 , i_tup_001 , i_oem ){       // [164]
                                                                 // [164]
        if( (!(Array.isArray( i_tup_000 )))                      // [164]
        ||  (!(Array.isArray( i_tup_001 )))                      // [164]
        ){                                                       // [164]
            ERR("[@I_N_A@:i_oem]:"+(i_oem||""));                 // [164]
        };;                                                      // [164]
        if( 2 !== i_tup_000.length                               // [164]
        ||  2 !== i_tup_001.length                               // [164]
        ){                                                       // [164]
            ERR("[@T_C_E_2_E@]:"+(i_eom||""));                   // [164]
        };;                                                      // [164]
        if( 0                                                    // [164]
        ||  ( i_tup_000[ 0 ] !== i_tup_001[ 0 ] )                // [164]
        ||  ( i_tup_000[ 1 ] !== i_tup_001[ 1 ] )                // [164]
        ){                                                       // [164]
            ERR("[TUPLES_NOT_EQUAL:i_oem]:"+(i_oem||""));        // [164]
        };;                                                      // [164]
        return ; //:return(void)://                              // [164]
    };;                                                          // [164]
                                                                 // [---]
    const    ASS_U32 = "[FIX:ASS_INT:DONT_CARE_ABOUT_BITS]";     // [197]
    function ASS_INT( i_int , i_oem ){                           // [197]
                                                                 // [197]
        var o_k = ( 1 );                                         // [197]
        var msg = "[!]";                                         // [197]
        if( "number" != typeof i_int ){                          // [197]
            o_k =( 0 ); msg =( "[ASS_INT_NAN]" );                // [197]
        };;                                                      // [197]
        var mdf =( Math.floor( i_int ) );                        // [197]
        if( mdf != i_int ){                                      // [197]
            o_k =( 0 ); msg =( "[ASS_INT_FLT]" );                // [197]
        };;                                                      // [197]
        if( o_k <= 0 ){                                          // [197]
                                                                 // [197]
            MSG( "[YOUR_NUMBER]:" + i_int );                     // [197]
            MSG( "[MSG:ASSFAIL]"+(msg)+( i_oem || "" ) );        // [197]
            YEL( "[YEL:ASSFAIL]"+(msg)+( i_oem || "" ) );        // [197]
            ERR( "[ERR:ASSFAIL]"+(msg)+( i_oem || "" ) );        // [197]
        };;                                                      // [197]
                                                                 // [197]
        return( i_int );                                         // [197]
    };;                                                          // [197]
                                                                 // [---]
    //:#_ASSERT_INPUT_IS_A_STING_#:[371]:----------------://     // [371]
                                                                 // [371]
        const F_ASS_STR = "[NO_F_NEEDED:USE:ASS_STR]" ;          // [371]
                                                                 // [371]
        function ASS_STR( i_str , i_oem ){                       // [371]
                                                                 // [371]
            var o_k=( 1 /** @_I_U_P_G_@ **/ );                   // [371]
                                                                 // [371]
            if( "string" != typeof i_str ){                      // [371]
                o_k =( 0 );                                      // [371]
            }else                                                // [371]
            if( i_str.length <= 0 ){                             // [371]
                o_k =( 0 );                                      // [371]
            };;                                                  // [371]
                                                                 // [371]
            if( o_k <= 0 ){                                      // [371]
                                                                 // [371]
                MSG( "[MSG:NOT_STR]"+( i_oem || "" ) );          // [371]
                YEL( "[YEL:NOT_STR]"+( i_oem || "" ) );          // [371]
                ERR( "[ERR:NOT_STR]"+( i_oem || "" ) );          // [371]
            };;                                                  // [371]
            return( i_str );                                     // [371]
        };;                                                      // [371]
    //:----------------:#_ASSERT_INPUT_IS_A_STING_#:[371]://     // [371]
                                                                 // [---][---]
    function ASS_NUM( i_num , i_oem ){                           //      [109]
                                                                 //      [109]
        if( "number" != typeof i_num ){                          //      [109]
                                                                 //      [109]
            MSG( "[MSG:ASSFAIL]"+( i_oem || "" ) );              //      [109]
            YEL( "[YEL:ASSFAIL]"+( i_oem || "" ) );              //      [109]
            ERR( "[ERR:ASSFAIL]"+( i_oem || "" ) );              //      [109]
        };;                                                      //      [109]
                                                                 //      [109]
        return( i_num );                                         //      [109]
    };;                                                          //      [109]
                                                                 // [---]
    function ASS_TRINARY( i_num , i_oem ){                       // [115]
                                                                 // [115]
        if( 1                                                    // [115]
        &&  ((0+1) !== i_num )                                   // [115]
        &&  ((0-1) !== i_num )                                   // [115]
        &&  (( 0 ) !== i_num )                                   // [115]
        ){                                                       // [115]
            MSG( "[MSG:NOT_TRINARY]"+( i_oem || "" ) );          // [115]
            YEL( "[YEL:NOT_TRINARY]"+( i_oem || "" ) );          // [115]
            ERR( "[ERR:NOT_TRINARY]"+( i_oem || "" ) );          // [115]
        };;                                                      // [115]
        return( i_num );                                         // [115]
    };;                                                          // [115]
                                                                 // [---]
    function ASSBYTE( i_num , i_oem ){                           // [183]
                                                                 // [183]
        if( ! (( i_num >= 0 )&&( i_num <= 0xFF )) ){             // [183]
                                                                 // [183]
            MSG( "[MSG:NOTA_BYTE]"+( i_oem || "" ) );            // [183]
            YEL( "[YEL:NOTA_BYTE]"+( i_oem || "" ) );            // [183]
            ERR( "[ERR:NOTA_BYTE]"+( i_oem || "" ) );            // [183]
        };;                                                      // [183]
        return( i_num );                                         // [183]
    };;                                                          // [183]
                                                                 // [---]
    function ASS_NNI( i_num , i_oem ){                           // [122]
                                                                 // [122]
        //:::::::::::::::::::::::::::::::::::::::::::://         // [122]
        //:[ATF]: Assert Non Negative Integer :[ATF] ://         // [122]
        //:::::::::::::::::::::::::::::::::::::::::::://         // [122]
                                                                 // [122]
        var nni =( 1 /**@INNOCENT_UNTIL_PROVEN_GUILTY@**/ );     // [122]
        if(  i_num <  0  ){                  nni =( 0 );  };     // [122]
        if(!(i_num >= 0 )){                  nni =( 0 );  };     // [122]
        if( Math.floor( i_num ) !== i_num ){ nni =( 0 );  };     // [122]
                                                                 // [122]
        if( nni <= 0 ){                                          // [122]
                                                                 // [122]
            MSG( "[MSG:NOT_NNI]"+( i_oem || "" ) );              // [122]
            YEL( "[YEL:NOT_NNI]"+( i_oem || "" ) );              // [122]
            ERR( "[ERR:NOT_NNI]"+( i_oem || "" ) );              // [122]
        };;                                                      // [122]
        return( i_num );                                         // [122]
    };;                                                          // [122]
                                                                 // [---]
    function ASS_CTE( i_n01 , i_n02 , i_oem ){                   // [110]
                                                                 // [110]
        //:::::::::::::::::::::::::::::::::::://                 // [110]
        //: @ASS_CTE@ : ASSert Close_To_Zero ://                 // [110]
        //:::::::::::::::::::::::::::::::::::://                 // [110]
                                                                 // [110]
        var msg =( "[ASS_CTE]" +( i_oem || "" ) );               // [110]
                                                                 // [110]
        if( "number" != typeof i_n01                             // [110]
        ||  "number" != typeof i_n02                             // [110]
        ){                                                       // [110]
            msg =( "[ASS_CTE_NAN]" + msg );                      // [110]
            MSG( msg ); YEL( msg ); ERR( msg );                  // [110]
        };;                                                      // [110]
                                                                 // [110]
        var dif =( i_n01 - i_n02 );                              // [110]
        if( dif < 0 ){ dif = 0 - dif ; };                        // [110]
                                                                 // [110]
        //:----------------------------------------------://     // [110]
        //: 32bits in float32 , 23 bits decimal/mantissa ://     // [110]
        //: 32-23 === 9                                  ://     // [110]
        //: 9 - 1 === 8 , no more than 8 zeros to be safe://     // [110]
        //:----------------------------------------------://     // [110]
                                                                 // [110]
        //:.......0.__ppp : per of per of per of per ....://     // [110]
        if( dif > 0.00001 ){ //:0.00001 === TOLERANCE    ://     // [110]
        //:.......0.12345://                                     // [110]
                                                                 // [110]
            MSG( msg ); YEL( msg ); ERR( msg );                  // [110]
        };;                                                      // [110]
    };;                                                          // [110]
                                                                 // [---]
    function VITALDO( i_msg ){                                   // [109]
                                                                 // [109]
        var  msg_vitaldo =( "[VITALDO]:" + i_msg );              // [109]
        MSG( msg_vitaldo );                                      // [109]
        ASS_NUM( c_crash_on_vital_todo , "[?VITALDO?]" );        // [109]
        if(      c_crash_on_vital_todo >= 1 ){                   // [109]
                                                                 // [109]
            YEL( msg_vitaldo );                                  // [109]
            ERR( msg_vitaldo );                                  // [109]
        };;                                                      // [109]
    };;                                                          // [109]
    function MAYBEDO( i_msg ){                                   // [109]
                                                                 // [109]
        var  msg_maybedo =( "[MAYBEDO]:" + i_msg );              // [109]
        MSG( msg_maybedo );                                      // [109]
        ASS_NUM( c_crash_on_maybe_todo , "[?MAYBEDO?]" );        // [109]
        if(      c_crash_on_maybe_todo >= 1 ){                   // [109]
                                                                 // [109]
            YEL( msg_maybedo );                                  // [109]
            ERR( msg_maybedo );                                  // [109]
        };;                                                      // [109]
    };;                                                          // [109]
                                                                 // [---]   
    function F_M_F( i_num ){                                     // [191]
                                                                 // [191]
        //: @F_M_F@ : Function - Math_Floor ://                  // [191]
                                                                 // [191]
        if( "number" !== typeof i_num ){                         // [191]
                                                                 // [191]
            ERR( "[INPUT_IS_NAN:F_M_F]" );                       // [191]
        };;                                                      // [191]
                                                                 // [191]
        var o_num =( 0-747 );                                    // [191]
        o_num =( Math.floor( i_num ) );                          // [191]
        return( o_num );                                         // [191]
    };;                                                          // [191]


    const F_OOB_MSG_MIN_MAX_VAL = "[DITCH_THE_F_2022]" ; //:::// // [407]
    const   OOB_MSG_MIN_MAX_VAL = function  //::::::::::::::::// // [407]
    PRIVATE_OOB_MSG_MIN_MAX_VAL(   //:::::::::::::::::::::::::// // [407]
                                                                 // [407]
        i_msg  //: @i_msg@ : INNPUT - Message           :://     // [407]
    ,   i_min  //: @i_min@ : INNPUT - Minimum Inclusive :://     // [407]
    ,   i_max  //: @i_max@ : INNPUT - Maximum Inclusive :://     // [407]
    ,   i_val  //: @i_val@ : INNPUT - Value To Check    :://     // [407]
                                                                 // [407]
    ){  //:BOD_BEG[ OOBMMMV ]:::::::::::::::::::::::::::::::::// // [407]
                                                                 // [407]
        if( ( i_min <= i_val )&&( i_val <= i_max ) ){            // [407]
                                                                 // [407]
            /** Okay! Do nothing. **/                            // [407]
        }else{                                                   // [407]
                                                                 // [407]
            //:#_CONCAT_ERROR_MESSAGE_#:[407]:-----------://     // [407]
                                                                 // [407]
                let err_msg =( ""                                // [407]
                +   "[OOB_M_M_M_V_FAIL:i_msg]:"                  // [407]
                +   "("                                          // [407]
                +   i_msg                                        // [407]
                +   ")"                                          // [407]
                );;                                              // [407]
            //:-----------:#_CONCAT_ERROR_MESSAGE_#:[407]://     // [407]
            //:#_USE_ERROR_MESSAGE_#:[407]:--------------://     // [407]
                                                                 // [407]
                ERR( err_msg );                                  // [407]
                                                                 // [407]
            //:--------------:#_USE_ERROR_MESSAGE_#:[407]://     // [407]
        };;                                                      // [407]
                                                                 // [407]
    };; //:BOD_END[ OOBMMMV ]:::::::::::::::::::::::::::::::::// // [407]
                        
//:=============================:FUNC_BOILERPLATE:[028]+[035]://
//:FUNC_RESIZE_VP0_BOXVIEW:[094]:============================://

    const   F_RES_VP0_BOXVIEW = function                        // [094]
    PRIVATE_F_RES_VP0_BOXVIEW(                                  // [094]
        /**NO_ARGS**/                                           // [285][094]
    ){                                                          // [094]
        //:[ATF]:----------------------------------------://    // [094]
        //:                                              ://    // [094]
        //: Take the SHORTER screen dimension and        ://    // [094]
        //: divide it by[ rat (ratio) ], to create a     ://    // [094]
        //: "letter boxxing" effect in our render.       ://    // [094]
        //:                                              ://    // [094]
        //:  VPC : Viewport CANVAS/CLIENT                ://    // [094]
        //:  VP0 : Viewport DEST(inside of VPC)          ://    // [094]
        //:                                              ://    // [094]
        //:----------------------------------------:[ATF]://    // [094]
                                                                // [094]
        var rat =( d_rendopt_boxview_rat );                     // [094]
                                                                // [094]
        var v_wid = d_vpc[x_1]-d_vpc[x_0]+1;   //:vpc_wid://    // [094]
        var v_hig = d_vpc[y_1]-d_vpc[y_0]+1;   //:vpc_hig://    // [094]
                                                                // [094]
        var b_wid =( v_wid );                  //:box_wid://    // [094]
        var b_hig =( v_hig );                  //:box_hig://    // [094]
                                                                // [094]
        if( v_wid > v_hig ){ b_hig=( b_wid / rat ); }else       // [094]
        if( v_hig > v_wid ){ b_wid=( b_hig / rat ); }else       // [094]
        if( v_wid===v_hig ){ b_wid=( v_wid *  1  );             // [094]
                             b_hig=( v_hig / rat ); }else       // [094]
        { ERR("[@EDCL@:2022_07_26]"); };;                       // [094]
                                                                // [094]
        //: #_UNLIKELY_BUT_MATHEMATICALLY_POSSIBLE_# ://        // [094]
        if( b_wid > v_wid ){ b_wid = v_wid ; };                 // [094]
        if( b_hig > v_hig ){ b_hig = v_hig ; };                 // [094]
                                                                // [094]
        var iw2 =( v_wid - b_wid );  //:Inset_Wid * 2://        // [094]
        var ih2 =( v_hig - b_hig );  //:Inset_Hig * 2://        // [094]
        ASS(iw2 >= 0 , "[IW2]"   );                             // [094]
        ASS(ih2 >= 0 , "[IH2]"   );                             // [094]
                                                                // [094]
        var i_w = Math.floor( iw2 / 2.0 ); //: Inset_Wid ://    // [094]
        var i_h = Math.floor( ih2 / 2.0 ); //: Inset_Hig ://    // [094]
                                                                // [094]
        d_vp0[ x_0 ] = ( d_vpc[ x_0 ] + i_w );                  // [094]
        d_vp0[ x_1 ] = ( d_vpc[ x_1 ] - i_w );                  // [094]
        d_vp0[ y_0 ] = ( d_vpc[ y_0 ] + i_h );                  // [094]
        d_vp0[ y_1 ] = ( d_vpc[ y_1 ] - i_h );                  // [094]
    };;                                                         // [094]
//:============================:FUNC_RESIZE_VP0_BOXVIEW:[094]:// // [---]
//:FUNC_RESIZE_CANVAS:[032]+[035]:===========================:// // [---]
                                                                 // [---]
    //:@BAD_DEP_ORD@ #_RES_CAN_BEFORE_CAMERAH_INCLUDED_#://      // [125]
                                                                 // [---]
    const F_RES_CAN = function PRIVATE_F_RES_CAN( ){             // [032]
                                                                 // [---]
        let a_g = d_artgirl ;                                    // [080]
                                                                 // [---]
        var wid =( 0 - 333 /** @cli_wid@ **/ );                  // [063] 
        var hig =( 0 - 666 /** @cli_hig@ **/ );                  // [063] 
        let   W = window ;                                       // [032][031]
        let   D = document.documentElement ;                     // [032][031]
        let   B = document.body            ;                     // [032][031]
                                                                 // [032][031]
        wid =(W.innerWidth ||D.clientWidth ||                    // [032][031]
                             B.clientWidth || 0 );;              // [032][031]
        hig =(W.innerHeight||D.clientHeight||                    // [032][031]
                             B.clientHeight|| 0 );;              // [032][031]
                                                                 // [032][031]
        d_can.width = wid ;                                      // [032][031]
        d_can.height= hig ;                                      // [032][031]
                                                                 // [---]
            d_camerah_dir  =(1) ;                                // [120]
            d_moumast_dir  =(1) ; //:#DIL_001#://                // [169]
        if( d_camerah_use >= 1 ){                                // [120]
                             //:-------------------://           // [120]
            F_CAMERAH_VP1(); //: CAMERAH ==> d_vp1 ://           // [125][120]
        };;                  //:-------------------://           // [120]
                                                                 // [---]
        if( HAS( d_gpudata_wgl ) ){                              // [228][REN][080]
                                                                 // [---]
            d_vpc[ x_0 ]=( 0 );                                  // [---][092]
            d_vpc[ y_0 ]=( 0 );                                  // [---][092]
            d_vpc[ x_1 ]=( wid - 1 /**@INC_REC@**/ );            // [---][092]
            d_vpc[ y_1 ]=( hig - 1 /**@INC_REC@**/ );            // [---][092]
                                                                 // [---][092]
            if( d_log_vpc >= 1 ){   ;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
                LOG("[VPC_UPDATE]");;;;;;;;;;;;;;;;;;;;;;;;;     // [236][092]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]

            d_gpudata_wgl.viewport(                              // [228][REN][080]
                ( d_vpc[ x_0 ]                    )  //:@org@:// // [---][092][080]
            ,   ( d_vpc[ y_0 ]                    )  //:@org@:// // [---][092][080]
            ,   ( d_vpc[ x_1 ] - d_vpc[ x_0 ] + 1 )  //:@wid@:// // [---][092][080]
            ,   ( d_vpc[ y_1 ] - d_vpc[ y_0 ] + 1 )  //:@hig@:// // [---][092][080]
            );;                                                  // [---][080]    
                                                                 // [---]
            //:#_INSET_VP0_WITHIN_VPC_TO_LETTERBOX_#://          // [094]
                                                                 // [094]
            d_vp0[ x_0 ]=( d_vpc[ x_0 ] );                       // [094]
            d_vp0[ y_0 ]=( d_vpc[ y_0 ] );                       // [094]
            d_vp0[ x_1 ]=( d_vpc[ x_1 ] );                       // [094]
            d_vp0[ y_1 ]=( d_vpc[ y_1 ] );                       // [094]
            if( d_rendopt_boxview_onn >= 1 ){                    // [094]
                F_RES_VP0_BOXVIEW();                             // [094]
            };;                                                  // [094]
        };;                                                      // [080]
                                                                 // [---]
        //- TOO LATE TO FLAG HERE : d_camerah_dir =( 1 );-//     // [120]
    };;                                                          // [032]
//:===========================:FUNC_RESIZE_CANVAS:[032]+[035]:// // [---]
//:FUNC_GAME_UPDATE_TICK:[036]:==============================://

    const F_TIK = "[FIX:F_CLIGAME_TIK]" ;            //:[063]://

//:==============================:FUNC_GAME_UPDATE_TICK:[036]://
//:FUNC_GAME_UPDATE_LOOP:[036]:==============================://

    const F_GUL = "[FIX:F_CLIGAME_GUL]" ;            //:[063]://

//:==============================:FUNC_GAME_UPDATE_LOOP:[036]://
//:FUNC_INITIALIZE_CLIENT:[035]:=============================://

    const F_INI_CLI = function PRIVATE_F_INI_CLI(){

    //:client_global_data:[031]:-------------------------://

        const dom_can = "[REFACTORED_TO:d_can:[035]]" ;

        d_tik =( 60 * 60 * 1000 );  //:#_TIK_TIMETRAVEL_#://    // [085]
                                    //:###DTICK_INITED###://    // [090]
       
    //:-------------------------:client_global_data:[031]://
    //:boilerplate:[028]:--------------------------------://

        //:MOVED_TO:FUNC_BOILERPLATE://

    //:--------------------------------:boilerplate:[028]://
    //:function_canvas_resize:[032]:---------------------://

        //:MOVED_TO:FUNC_RESIZE_CANVAS://

    //:---------------------:function_canvas_resize:[032]://
    //:html_dom_setup:[029]:-----------------------------://

        const dom_roo = document.documentElement; 
        var   dom_bod = document.body           ; 

        if( HAS( dom_roo ) ){
                                                
            if( d_log_cli_ini >= 1 ){   ;;;;;;;;;;;;;;;;;;;;     // [236][---]
                LOG( "[dom_roo]" , dom_roo );;;;;;;;;;;;;;;;     // [236][???]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236][---]
        }else{
                ERR( "[dom_roo]" );
        };;
        if( HAS( dom_bod ) ){

            /** Okay. Do nothing. Already Exists. **/
        }else{
            /** Create Document Element **/
            LOG( "[bef:dom_bod]" , dom_bod );
            dom_bod = document.createElement( "body" );
            document.body = dom_bod ;
        };;

        if( d_log_cli_ini >= 1 ){ ;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236][---]
            LOG( "[dom_bod]" , dom_bod );;;;;;;;;;;;;;;;;;;;     // [236][???]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236][---]

    //:-----------------------------:html_dom_setup:[029]://
    //:remove_fucking_scrollbars:[138]:------------------://     // [---]
                                                                 // [138]
        dom_bod.style.padding  = "0"     ;                       // [138]
        dom_bod.style.margin   = "0"     ;                       // [138]
        dom_bod.style.overflow = "hidden";                       // [138]
        dom_bod.style.scroll   = "no"    ;     //:IE_ONLY://     // [138]
                                                                 // [138]
    //:------------------:remove_fucking_scrollbars:[138]://     // [---]
    //:html_dom_setup:[031]:-----------------------------://    
    {
        d_can = document.createElement( "canvas" );
        dom_bod.appendChild( d_can );

        F_RES_CAN( );
    }
    //:-----------------------------:html_dom_setup:[031]://
    //:html_dom_setup:[032]:-----------------------------://

        window.addEventListener( "resize" , F_RES_CAN );

    //:-----------------------------:html_dom_setup:[032]://
    //:webgl_setup:[033]:--------------------------------://

        //:[MOVED][  F_ARTGIRL_INI                ]:[063]://    

    //:--------------------------------:webgl_setup:[033]://
    //:enter_infinite_loop:[036]:------------------------://

        //:[MOVED][       F_GUL( 0.0 );           ]:[063]://    

    //:------------------------:enter_infinite_loop:[036]://

    };;
//:=============================:FUNC_INITIALIZE_CLIENT:[035]://
//:FUNC_DATABASE_CONNECTION_SMOKETEST:[040]:=================://
                                                                
    const F_TDC = function PRIVATE_F_TDC( ){   //:@TDC@:[040]://
                                                     //:[040]://
        d_dcp.connect( ( i_err , i_cli , i_don )=>{  //:[040]://
                                                     //:[040]://
            if( i_err ){                             //:[040]://
                LOG( "[d_dbu...]" , d_dbu );         //:[040]://
                LOG( "[error_is]" , i_err );         //:[040]://
                ERR( "[sorry!!!]"         );         //:[040]://
            };;                                      //:[040]://
            /** Assert Client ( @i_cli@ ) Exists **/ //:[040]://
            if( HAS( i_cli ) ){ LOG( "[exists]" ); };//:[040]://
            if(!HAS( i_cli ) ){ ERR( "[notcli]" ); };//:[040]://
                                                     //:[040]://
            i_don();    //: @don@ : PGSQL Done Function [040]://
        });;                                         //:[040]://
    };;                                              //:[040]://
//:=================:FUNC_DATABASE_CONNECTION_SMOKETEST:[040]://
//:FUNC_NIL_DATABASE_URL_MESSAGE:[040]:======================://
                                                                
    const F_MSG_NIL_DBU = function PRIVATE_F_MSG_NIL_DBU(){     
                                                                
        MSG('[YOU_DONT_HAVE_A_DATABASE!!!!!!]'); //:[040]://    
        MSG('[THE_SOLUTION_IS_BELOW!!!!!!!!!]'); //:[040]://    
        MSG('                                '); //:[040]://    
        MSG('+------------------------------+'); //:[040]://    
        MSG('|  ## BELOW IS ONE LINE! ##    |'); //:[040]://    
        MSG('|                              |'); //:[040]://    
        MSG('|  heroku addons:create        |'); //:[040]://    
        MSG('|  heroku-postgresql:hobby-dev |'); //:[040]://    
        MSG('|  --version=14                |'); //:[040]://    
        MSG('|  --app  "APPNAME"            |'); //:[040]://    
        MSG('|  --name "APPNAME-database"   |'); //:[040]://    
        MSG('|                              |'); //:[040]://    
        MSG('+------------------------------+'); //:[040]://    
    };;                                                         
//:======================:FUNC_NIL_DATABASE_URL_MESSAGE:[040]://
//:FUNC_INITIALIZE_SERVER_DATA:[040]:========================://
                                                                
    const F_ISD = function PRIVATE_F_ISD(){          //:[040]://
                                                                
        MSG( "[BEG:F_ISD]" );                        //:[040]://
                                                                
        if( NIL( d_dbu ) ){                          //:[040]://
            F_MSG_NIL_DBU(); //:NullDatabaseMessage    :[040]://
        }else{                                       //:[040]://
            d_dcp =( new ( l_pg.Pool )( d_cin ) );   //:[040]://
                                                                
            d_dcp.on( "error" , ( i_err , i_cli ) =>{//:[040]://
                                                                
                ERR( "[oh_nooo_bro![040]!]" );       //:[040]://
            });;                                     //:[040]://
        };;                                          //:[040]://
                                                                
        MSG( "[END:F_ISD]" );                        //:[040]://
    };;                                                         
//:========================:FUNC_INITIALIZE_SERVER_DATA:[040]://
//:FUNC_CREATE_TABLE_STATEMENT:[041]:========================://
//:_____C______T_____S_______________________________________://

    const F_CTS = function PRIVATE_F_CTS(            //:[041]://
                                                     //:[041]://
        i_cts ,i_tbm                                 //:[041]://
    ){                                               //:[041]://
        d_dcp                                        //:[041]://
        .query( i_cts )                              //:[041]://
        .then( function( i_res ){                    //:[041]://
                                                     //:[041]://
            LOG( "[cts_o_k:tbm]" , i_tbm );          //:[041]://
        })                                           //:[041]://
        .catch( function( i_err ){                   //:[041]://
                                                     //:[041]://
            LOG( "[cts_err:tbm]" , i_tbm );          //:[041]://
            ERR( "[cts_err:tbm]"         );          //:[041]://
        })                                           //:[041]://
        ;;                                           //:[041]://
    };;                                              //:[041]://
//:__________________________________________________________://
//:______________________________C______T_____S______________://
//:========================:FUNC_CREATE_TABLE_STATEMENT:[041]://
//:FUNC_RANDOM_ZERO_OR_ONE:[044]:============================://

    const F_RANDBIN = function PRIVATE_F_RANDBIN(){  //:[044]://
                                                     //:[044]://
        var o_bin =( 666 );                          //:[044]://
        var dec = Math.random( );                    //:[044]://
        if( dec <  0.5 ){ o_bin =( 0 ); };           //:[044]://
        if( dec >= 0.5 ){ o_bin =( 1 ); };           //:[044]://
        return( o_bin );                             //:[044]://
    };;                                              //:[044]://

//:============================:FUNC_RANDOM_ZERO_OR_ONE:[044]://
//:FUNC_NICEGUY_CANT_HANDLE_REJECTION:[044]:=================://

    const F_NICEGUY = function PRIVATE_F_NICEGUY(    //:[044]://
                                                     //:[044]://
        i_saywhat                                    //:[044]://
    ){                                               //:[044]://
        LOG( "[she_said:i_saywhat]" , i_saywhat );   //:[044]://
        ERR( "[Nice_Guy_Cant_Handle_Rejection]" );   //:[044]://
    };;                                              //:[044]://

//:=================:FUNC_NICEGUY_CANT_HANDLE_REJECTION:[044]://
//:FUNC_PROMISE_TODO:[046]:==================================://
                                                      
    const F_PROTODO = function PRIVATE_F_PROTODO(    //:[046]://
                                                     //:[046]://
        i_todomsg                                    //:[046]://
    ){                                               //:[046]://
        var o_promise =( new Promise( function       //:[046]://
        EXECUTO_F_PROTODO(                           //:[046]://
            o_k_yes                                  //:[046]://
        ,   wontsay                                  //:[046]://
        ){                                           //:[046]://
            o_k_yes( i_todomsg );                    //:[046]://
                                                     //:[046]://
        }));; return( o_promise );                   //:[046]://
    };;                                              //:[046]://

//:==================================:FUNC_PROMISE_TODO:[046]://
//:FUNC_DEEP_COPY_STRING:[047]:==============================://
//:_____D____C____S__________________________________________://

    const F_DCS = function PRIVATE_F_DCS(            //:[047]://
                                                     //:[047]://
        i_str                                        //:[047]://
    ){                                               //:[047]://
        var deep_copy_string =(                      //:[047]://
                                                     //:[047]://
            ( ' ' + i_str).slice(1)                  //:[047]://
        );;                                          //:[047]://
        return( deep_copy_string );                  //:[047]://
    };;                                              //:[047]://
//:____________________________________D____C____S___________://
//:==============================:FUNC_DEEP_COPY_STRING:[047]://
//:FUNC_TEMPLATE_EDit:[047]:=================================://
//:_____T________ED__________________________________________://
                                                     //:[047]://
    const F_TED = function PRIVATE_F_TED(            //:[047]://
                                                     //:[047]://
        i_sql , i_fin , i_rep                        //:[047]://
    ){                                               //:[047]://
        var rep , o_sql ;                            //:[047]://
        rep =( ""+i_rep+"" ); //:@vas@://            //:[047]://
        o_sql = i_sql ;       //:!NDC!://            //:[047]://
        o_sql = o_sql.replaceAll( i_fin , rep );     //:[047]://
        return( o_sql );                             //:[047]://
    };;                                              //:[047]://
                                                     //:[047]://
    const F_TSM =( "[NOT: Template Str Modify]" );   //:[047]://
    const F_TSF =( "[NOT: Template Str Fill  ]" );   //:[047]://
    const F_TSE =( "[NOT: Template Str Edit  ]" );   //:[047]://
                                                     //:[047]://
//:_______________________________________T________ED________://
//:=================================:FUNC_TEMPLATE_EDit:[047]://
//:FUNC_DICT_TO_STRING:[058]:================================://

    const F_DTS = function PRIVATE_F_DTS(            //:[058]://
                                                     //:[058]://
        i_dob  /** @dob@ : Dictionary Object **/     //:[058]://
    ){                                               //:[058]://
                                                     //:[058]://
        var o_str="";                                //:[058]://
                                                     //:[058]://
        o_str += "[dob:end]"+"\n";                   //:[058]://
                                                     //:[058]://
        if( false === !!i_dob ){                     //:[058]://
            o_str += "[Dictionary_Was_Nil]" ;        //:[058]://
        }else{                                       //:[058]://
            var arr_k_v=( Object.entries( i_dob ) ); //:[058]://
                                                     //:[058]://
            for( var k_v of arr_k_v ){               //:[058]://
                                                     //:[058]://
                o_str +=( "[k_v[0]]:" + k_v[ 0 ] );  //:[058]://
                o_str +="\n";                        //:[058]://
                o_str +=( "[k_v[1]]:" + k_v[ 1 ] );  //:[058]://
                o_str +="\n";                        //:[058]://
                o_str +="------------------------";  //:[058]://
                o_str +="\n";                        //:[058]://
            };;                                      //:[058]://
        };;                                          //:[058]://
                                                     //:[058]://
        o_str += "[dob:end]"+"\n";                   //:[058]://
        return( o_str );                             //:[058]://
    };;                                              //:[058]://

//:================================:FUNC_DICT_TO_STRING:[058]://
//:FUNC_XML_HTTP_REQUEST:[061]:==============================:// // [061]
                                                     //:X_H_R:// // [061]
    const F_XHR = function PRIVATE_F_XHR(            //:X_H_R:// // [061]
        i_asktype  /** @asktype@  **/                //:X_H_R:// // [061]
    ,   i_urlpath  /** @urlpath@  **/                //:X_H_R:// // [061]
    ){                                               //:X_H_R:// // [061]
        var o_promise = new Promise( function        //:X_H_R:// // [061]
        EXECUTO_F_XHR( o_k_yes , wontsay ){          //:X_H_R:// // [061]
                                                     //:X_H_R:// // [061]
            var emp , urlfull , xhr_ask ;            //:X_H_R:// // [061]
                                                     //:X_H_R:// // [061]
                emp = "" ; /**EmptyString**/         //:X_H_R:// // [061]
            urlfull = "[REQUEST_URL_NOT_SET]" ;      //:X_H_R:// // [061]
                                                     //:X_H_R:// // [061]
            if( "/" != i_urlpath[ 0 ] ){             //:X_H_R:// // [061]
                                                     //:X_H_R:// // [061]
                urlfull = d_url + "/" + i_urlpath ;  //:X_H_R:// // [061]
            }else{                                   //:X_H_R:// // [061]
                urlfull = d_url + emp + i_urlpath ;  //:X_H_R:// // [061]
            };;                                      //:X_H_R:// // [061]
                                                     //:X_H_R:// // [061]
            xhr_ask = new XMLHttpRequest();          //:X_H_R:// // [061]
            xhr_ask.open( i_asktype , urlfull );     //:X_H_R:// // [061]
            xhr_ask.send();                          //:X_H_R:// // [061]
            xhr_ask.onreadystatechange=(evt_xhr)=>{  //:X_H_R:// // [061]
            if( xhr_ask.readyState === 4 ){          //:X_H_R:// // [061]
                                                     //:X_H_R:// // [061]
                console.log("DONE");                 //:X_H_R:// // [061]
                o_k_yes( xhr_ask.responseText );     //:X_H_R:// // [061]
                                                     //:X_H_R:// // [061]
            };;};;                                   //:X_H_R:// // [061]
                                                     //:X_H_R:// // [061]
        });; return( o_promise );                    //:X_H_R:// // [061]
    };;                                              //:X_H_R:// // [061]
                                                     //:X_H_R:// // [061]
//:==============================:FUNC_XML_HTTP_REQUEST:[061]:// // [061]
                                                                 // [---]
//|30|30|30|30|30|30|30|30|30|SUBS|30|30|30|30|30|30|30|30|30|// // [471][-------------]
//|[ @$$$$$@ ]                                               |// // [471][-------------]
//|__RGBA896__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [471][-------------]
//|[ @$$$$$@ ]                                               |// // [471][-------------]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [471][-------------]
                                                                 // [471][-------------]
    //:--------------------------------------------------://     // [471][-------------]
    //: @DATA_ONLY_SUB_SYSTEM@ :-------------------------://     // [471][-------------]
    //:--------------------------------------------------://     // [471][-------------]
    //:                                                  ://     // [471][-------------]
    //:   Pretty sure I want to use RGBA896 namespace    ://     // [471][-------------]
    //:   for DATA ONLY, NO FUNCTIONS. However, I        ://     // [471][-------------]
    //:   reserve the right to change this in the        ://     // [471][-------------]
    //:   future.                                        ://     // [471][-------------]
    //:                                                  ://     // [471][-------------]
    //:   I think it would be for the best though.       ://     // [471][-------------]
    //:                                                  ://     // [471][-------------]
    //:   If I am going to use this buffer of data       ://     // [471][-------------]
    //:   both for :                                     ://     // [471][-------------]
    //:                                                  ://     // [471][-------------]
    //:   1. Previewable save file format (SEE:FILE896(  ://     // [471][-------------]
    //:   2. An UNDO BUFFER ( 640_x_640 ) middle section ://     // [471][-------------]
    //:      of our 896_x_896 save file format.          ://     // [471][-------------]
    //:      ( 5 * 128 === 640 )                         ://     // [471][-------------]
    //:                                                  ://     // [471][-------------]
    //:   Well, that multi-purpose use for the raw       ://     // [471][-------------]
    //:   data buffer could become spaghetti if we       ://     // [471][-------------]
    //:   also put functions in here.                    ://     // [471][-------------]
    //:                                                  ://     // [471][-------------]
    //:   Q_1 : Why make this a multi-purpose buffer?    ://     // [471][-------------]
    //:                                                  ://     // [471][-------------]
    //:   A_1 : Because the "previewable image" section  ://     // [471][-------------]
    //:       : in the center is "meaningless data"      ://     // [471][-------------]
    //:       : when saved to the hard-disk. So we       ://     // [471][-------------]
    //:       : could re-purpose that section as         ://     // [471][-------------]
    //:       : an UNDO BUFFER. The undo buffer is       ://     // [471][-------------]
    //:       : something I want to do anyways, so       ://     // [471][-------------]
    //:       : I was already anticipating making        ://     // [471][-------------]
    //:       : a static data allocation. With this      ://     // [471][-------------]
    //:       : multi-purpose use, we get                ://     // [471][-------------]
    //:       : conceptually TWO static data allocations ://     // [471][-------------]
    //:       : for the price of one physical data       ://     // [471][-------------]
    //:       : allocation.                              ://     // [471][-------------]
    //:--------------------------------------------------://     // [471][-------------]
                                                                 // [471][-------------]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [471][-------------]
//|                                               [ @$$$$$@ ]|// // [471][-------------]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __RGBA896__|// // [471][-------------]
//|                                               [ @$$$$$@ ]|// // [471][-------------]
//|30|30|30|30|30|30|30|30|30|SUBS|30|30|30|30|30|30|30|30|30|// // [471][-------------]
//|13|13|13|13|13|13|13|13|13|SUBS|13|13|13|13|13|13|13|13|13|// // [---][185][MOV][156]
//|[ @$$$$$@ ]                                               |// // [---][185][MOV][156]
//|__PIX2048__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [---][185][MOV][156]
//|[ @$$$$$@ ]                                               |// // [---][185][MOV][156]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [---][185][MOV][156]
                                                                 // [---][185][MOV][---]
    const   F_PIX2048_TEXPUSH    =( "[FIX:F_ARTGIRL.TEX_PUT]" ); // [---][185][MOV][184]
    const   F_PIX2048_TEXPUSH_ALL=( "[FIX:F_ARTGIRL.TEX_PUT]" ); // [---][185][MOV][184]
    const   F_PIX2048_TEX_PUT    =( "[FIX:F_ARTGIRL.TEX_PUT]" ); // [---][185][MOV][184]
    const   F_PIX2048_TEX_PUT_ALL=( "[FIX:F_ARTGIRL.TEX_PUT]" ); // [---][185][MOV][184]
                                                                 // [---][185][MOV][184]
    const   F_PIX2048_TIK = function                             // [---][185][MOV][184]
    PRIVATE_F_PIX2048_TIK(                                       // [---][185][MOV][184]
                                                                 // [---][185][MOV][184]
        /** VOID **/                                             // [---][185][MOV][184]
    ){                                                           // [---][185][MOV][184]
        ERR( "[#_LET_ARTGIRL_HANDLE_DIRTY_PIX_#]" );             // [---][185][MOV][184]
                                                                 // [---][185][MOV][184]
        //- if( d_pix2048_dir >= 1 ){                    -//     // [---][185][MOV][184]
        //-     d_pix2048_dir =( 0 );;                   -//     // [---][185][MOV][184]
        //-                                              -//     // [---][185][MOV][184]
        //-     //:#_WHY_NO_F_PIX2048_TEX_PUT_# ://      -//     // [---][185][MOV][184]
        //-                 F_ARTGIRL_TEX_PUT();         -//     // [---][185][MOV][184]
        //- };;                                          -//     // [---][185][MOV][184]
    };;                                                          // [---][185][MOV][184]
                                                                 // [---]
    //:#_DIRTY_FLAGGER_DATA_PIXEL_COM_#:[225]:---------------:// // [225]
    const F_PIX2048_DIR_DPC = "[FIX:F_GPUSYNC_DIRTYIT_DPC]" ;    // [230]
    const F_PIX2048_CLR_DPC = "[FIX:F_GPUSYNC_CLEANIT_ALL]" ;    // [230]
    //:---------------:#_DIRTY_FLAGGER_DATA_PIXEL_COM_#:[225]:// // [225]
    //:#_BELONGS_IN_PIX2048_NOT_TILEBOI_#:[225]:-------------:// // [225][--------]
                                                                 // [---]
    const   F_PIX2048_MEM_SET = "[FIX:H3X_H3Y_U32]" ;            // [185][MOV][183]
    const   F_PIX2048_MEMSET  = "[FIX:H3X_H3Y_U32]" ;            // [185][MOV][183]
    const   F_PIX2048_MEM_PUT = "[FIX:H3X_H3Y_U32]" ;            // [185][MOV][183]
    const   F_PIX2048_MEMPUT  = "[FIX:H3X_H3Y_U32]" ;            // [185][MOV][183]
    const   F_PIX2048_FIL     = "[FIX:H3X_H3Y_U32]" ;            // [186][---][---]
                                                                 // [---]
    //:-------------:#_BELONGS_IN_PIX2048_NOT_TILEBOI_#:[225]:// // [225][--------]
    //:#_BELONGS_IN_PIX2048_NOT_TILEBOI_#:[225]:-------------:// // [225][--------]

    const   F_PIX2048_H3X_H3Y_U32 = function                     // [185][MOV][183]
    PRIVATE_F_PIX2048_H3X_H3Y_U32(                               // [185][MOV][183]
                                                                 // [185][MOV][183]
        i_h3x //: [ hotel cell [ 0|1|2 ] Axis - X ] ://          // [185][MOV][183]
    ,   i_h3y //: [ hotel cell [ 0|1|2 ] Axis - Y ] ://          // [185][MOV][183]
    ,   i_u32 //: [ U32 Fill Value For Each Pixel ] ://          // [185][MOV][183]
    ){                                                           // [185][MOV][183]
        if( d_eci >= 1 ){                                        // [185][MOV][183]
            //:::::::( 0x12345678 )::::::::::::::::::::::://     // [185][MOV][183]
            let _m_ =( 0xFFFFFFFF );                             // [185][MOV][183]
            //:::::::( 0xRRGGBBAA )::::::::::::::::::::::://     // [185][MOV][183]
            ASS( i_h3x >= 0 && i_h3x <=(3-1) , "[IH3X]" );       // [185][MOV][183]
            ASS( i_h3y >= 0 && i_h3y <=(3-1) , "[IH3Y]" );       // [185][MOV][183]
            ASS( i_u32 >= 0 && i_u32 <=(_m_) , "[IU32]" );       // [185][MOV][183]
        };;                                                      // [185][MOV][183]
                                                                 // [185][MOV][183]
        var u08_red //:@u08_red@ : BYTE_OF : RED   ::::::://     // [185][MOV][183]
        ,   u08_gre //:@u08_gre@ : BYTE_OF : GREEN ::::::://     // [185][MOV][183]
        ,   u08_blu //:@u08_blu@ : BYTE_OF : BLUE  ::::::://     // [185][MOV][183]
        ,   u08_alp //:@u08_alp@ : BYTE_OF : ALPHA ::::::://     // [185][MOV][183]
        ;;;;;;;;;;;                                              // [185][MOV][183]
        var x00 , x01 , y00 , y01 ; //: Pixel Selection :://     // [185][MOV][183]
        var p_x , p_y , p_i , p_c ; //: Pixel Location  :://     // [185][MOV][183]
        let A_B =( ASSBYTE );       //: Assert_Is_Byte  :://     // [185][MOV][183]
                                                                 // [185][MOV][183]
        u08_red = ( i_u32 >>> 24 )&( 0xFF ); A_B( u08_red );     // [185][MOV][183]
        u08_gre = ( i_u32 >>> 16 )&( 0xFF ); A_B( u08_gre );     // [185][MOV][183]
        u08_blu = ( i_u32 >>>  8 )&( 0xFF ); A_B( u08_blu );     // [185][MOV][183]
        u08_alp = ( i_u32 >>>  0 )&( 0xFF ); A_B( u08_alp );     // [185][MOV][183]
                                                                 // [185][MOV][183]
        x00 = ( i_h3x * 512 )+(       0 );                       // [185][MOV][183]
        x01 = ( i_h3x * 512 )+( 512 - 1 );                       // [185][MOV][183]
                                                                 // [185][MOV][183]
        y00 = ( i_h3y * 512 )+(       0 );                       // [185][MOV][183]
        y01 = ( i_h3y * 512 )+( 512 - 1 );                       // [185][MOV][183]
                                                                 // [185][MOV][183]
        for(p_y = y00 ; p_y <= y01 ; p_y++ ){                    // [185][MOV][183]
        for(p_x = x00 ; p_x <= x01 ; p_x++ ){                    // [185][MOV][183]
                                                                 // [185][MOV][183]
            p_i =( p_x + ( p_y * 2048 ) );  //: PIX_DEX :://     // [185][MOV][183]
            p_c =( p_i * 4 );               //: PIX_COM :://     // [185][MOV][183]
                                                                 // [185][MOV][183]
            d_pix2048[ p_c + 0 ] =( u08_red );                   // [185][MOV][183]
            d_pix2048[ p_c + 1 ] =( u08_gre );                   // [185][MOV][183]
            d_pix2048[ p_c + 2 ] =( u08_blu );                   // [185][MOV][183]
            d_pix2048[ p_c + 3 ] =( u08_alp );                   // [185][MOV][183]
        };;};;                                                   // [185][MOV][183]
                                                                 // [185][MOV][183]
        d_pix2048_dir=( 1 );                                     // [185][MOV][183]
    };;                                                          // [185][MOV][183]
    //:-------------:#_BELONGS_IN_PIX2048_NOT_TILEBOI_#:[225]:// // [225][--------]
                                                                 // [185][MOV][---]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [185][MOV][156]
//|                                               [ @$$$$$@ ]|// // [185][MOV][156]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __PIX2048__|// // [185][MOV][156]
//|                                               [ @$$$$$@ ]|// // [185][MOV][156]
//|13|13|13|13|13|13|13|13|13|SUBS|13|13|13|13|13|13|13|13|13|// // [185][MOV][156]
//|28|28|28|28|28|28|28|28|28|SUBS|28|28|28|28|28|28|28|28|28|// // [464]
//|[ @$$$$$@ ]                                               |// // [464]
//|__PIXDUMP__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [464]
//|[ @$$$$$@ ]                                               |// // [464]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [464]

    const   F_PIXDUMP_RUN = function //:::::::::::::::::[465]:// // [465]
    PRIVATE_F_PIXDUMP_RUN(           //:::::::::::::::::[465]:// // [465]
                                                                 // [465]
        /**VOID**/                                               // [465]
                                                                 // [465]
    ){  //:BOD_BEG[ RUN ]:::::::::::::::::::::::::::::::[465]:// // [465]
                                                                 // [465]
        //:[ATF]:----------------------------------------://     // [465]
        //:                                              ://     // [465]
        //:  You have ONE FUCKING JOB, so just call this ://     // [465]
        //:  function "RUN" because we want to keep this ://     // [465]
        //:  system simple. We may also have a "TIK()"   ://     // [465]
        //:  , "INI()" , "UTM()" function as well. But   ://     // [465]
        //:  those are "stock functions" that all sub    ://     // [465]
        //:  systems are expected to be able to have.    ://     // [465]
        //:----------------------------------------:[ATF]://     // [465]
                                                                 // [---]
        //:[VARNAME]:------------------------------------://     // [466]
        //:                                              ://     // [466]
        //: @elmvoid@ : ELeMent "void" / "non-exist" ? ::://     // [466]
        //: @elmname@ : ELeMent NAME (name===type) ::::::://     // [466]
        //: @elmtype@ : SEE[ elmname ] ::::::::::::::::::://     // [466]
        //: @elmodom@ : ELeMent_On_DOM ::::::::::::::::::://     // [466]
        //: @pngfile@ : .PNG Binary File Data. ::::::::::://     // [466]
        //: @pngblob@ : pngfile converted to a blob :::::://     // [466]
        //: @pngdurl@ : .PNG Download URL :::::::::::::::://     // [466]
        //:                                              ://     // [466]
        //:------------------------------------:[VARNAME]://     // [466]
                                                                 // [466]
        let elmodom =(   ( d_pixdump_elmhack_savebox_dsk ));     // [466]
        let elmvoid =(NIL( d_pixdump_elmhack_savebox_dsk ));     // [466]
        if( elmvoid >= 1 /** "elmvoid" AKA "elm_nil"**/   ){     // [466]
            let elmname =( "a" /**"a"=="Anchor"**/ );;;;;;;;     // [466]
                elmodom = document.createElement( elmname );     // [466]
            elmodom.href     =( "/FILES/2048.PNG"         );     // [466]
            elmodom.download =(        "2048.PNG"         );     // [466]
            d_pixdump_elmhack_savebox_dsk=(       elmodom );     // [466]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [466]
                                                                 // [---]
        //:#_FUCKING_HELL_MAN_2022_11_14_#:[467]:--------://     // [467]
                                                                 // [467]
            const save2048_pngfile = "[FIX:7LET:sav2048_*]";     // [467]
            const save2048_pngblob = "[FIX:7LET:sav2048_*]";     // [467]
            const save2048_pngdurl = "[FIX:7LET:sav2048_*]";     // [467]
                                                                 // [467]
        //:--------:#_FUCKING_HELL_MAN_2022_11_14_#:[467]://     // [467][---]
                                                                 //      [---]
        let sav2048_pngfile = UPNG.encode(                       // [467][466]
                                                                 //      [466]
            [d_pix2048]   //: ArrayOf_Frames ://                 //      [466]
        ,   (    2048 )   //: Width_InPixels ://                 //      [466]
        ,   (    2048 )   //: HeightInPixels ://                 //      [466]
        ,   ( 0+0+0+0 )   //: ZERO==LOSSLESS ://                 //      [466]
        );;                                                      //      [466]
        let sav2048_pngblob=( new Blob(                          // [467][466]
                                    ////                         //      [466]
            [ sav2048_pngfile ]    ////                          // [467][466]
        ,   { type : "image/png" }  ////                         //      [466]
                                    ////                         //      [466]
        ));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;                         //      [466]
        let sav2048_pngdurl=( /////////                          // [467][466]
        window.URL.createObjectURL( ////                         //      [466]
                                    ////                         //      [466]
            sav2048_pngblob        ////                          // [467][466]
                                    ////                         //      [466]
        ));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;                         //      [466]
                                                                 //      [466]
        ASS(elmodom === d_pixdump_elmhack_savebox_dsk            //      [466]
        , "[elmodom_____d_pixdump_elmhack_savebox_dsk]" );;      //      [466]
            elmodom.href=(  sav2048_pngdurl  );                  // [467][466]
            elmodom.click() ; //:#_CLKSPAWN_#://                 //      [466]
                                                                 // [---][---]
        //:#_WHEN_REVOKE_2022_#:-------------------------://     // [467]
                                                                 // [467]
            window.URL.revokeObjectURL( sav2048_pngdurl );       // [467]
                                                                 // [467]
        //:-------------------------:#_WHEN_REVOKE_2022_#://     // [467]
                                                                 // [---]
                                                                 // [---]
    };; //:BOD_END[ RUN ]:::::::::::::::::::::::::::::::[465]:// // [465]
                                                                 // [465]
    const   F_PIXDUMP_TIK = function //:::::::::::::::::[465]:// // [465]
    PRIVATE_F_PIXDUMP_TIK(           //:::::::::::::::::[465]:// // [465]
                                                                 // [465]
        /** VOID **/                                             // [465]
                                                                 // [465]
    ){  //:BOD_BEG[ TIK ]:::::::::::::::::::::::::::::::[465]:// // [465]
                                                                 // [465]
        /** TODO : Update Logic , If Needed **/                  // [465]
                                                                 // [465]
    };; //:BOD_END[ TIK ]:::::::::::::::::::::::::::::::[465]:// // [465]

//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [464]
//|                                               [ @$$$$$@ ]|// // [464]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __PIXDUMP__|// // [464]
//|                                               [ @$$$$$@ ]|// // [464]
//|28|28|28|28|28|28|28|28|28|SUBS|28|28|28|28|28|28|28|28|28|// // [464]
//|18|18|18|18|18|18|18|18|18|SUBS|18|18|18|18|18|18|18|18|18|// // [226]
//|[ @$$$$$@ ]                                               |// // [226]
//|__GPUDATA__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [226]
//|[ @$$$$$@ ]                                               |// // [226]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [226]
                                                                 // [---]
    //:#_INITIALIZE_WEBGL_CONTEXT_#:[229]:-------------------:// // [229]
                                         /////////////////////// // [229]
        const   F_GPUDATA_INI = function /////////////////////// // [229]
        PRIVATE_F_GPUDATA_INI(           /////////////////////// // [229]
                                         /////////////////////// // [229]
            /** VOID **/                 /////////////////////// // [229]
        ){ ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [229]
                                                                 // [229]
            if( HAS(  d_gpudata_wgl ) ){                         // [229]
                ERR( "[WEBGL_CONTEXT_ALREADY_EXISTS]" );         // [229]
            };;                                                  // [229]
                                                                 // [229]
            d_gpudata_wgl =(                                     // [229][MOV][228][REN][074][063]
            d_can.getContext( c_artgirl_wgl_ask ));;             // [229][MOV][228][REN][074][063] 
                                                                 // [229]
            //:#_d_pix2048__on__gpu_#:[229]:-------------://     // [229]
                                                                 // [229]
                d_gpudata_p2k_tex =(                             // [229][MAR][228][REN][173]
                d_gpudata_wgl.createTexture() );;                // [229][MAR][228][REN][173]
                                                                 // [229]
            //:-------------:#_d_pix2048__on__gpu_#:[229]://     // [229]
                                                                 // [229]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [229]
    //:-------------------:#_INITIALIZE_WEBGL_CONTEXT_#:[229]:// // [229]
    //:#_DUMB_BUNNY_TEXTURE_UPLOAD_#:[229]:------------------:// // [229]
                                                                 // [229]
    const   F_GPUDATA_TEX_PUT = function //::::::::::::::://     // [229][MAR][174]
    PRIVATE_F_GPUDATA_TEX_PUT(  //:::::::::::::::::::::::://     // [229][MAR][174]
                                                                 // [229][MOV][174]
        /** VOID **/                                             // [229][MOV][174]
    ){                                                           // [229][MOV][174]
        //:[ATF]:#_F_GPUDATA_TEX_PUT_#:[ATF]:::::::::::::://     // [229][MAR][174]
        //:WEBGL_REFRESHER_SEE[ #_WEB_GL_DEFINITIONS_# ]:://     // [229][MOV][174]
                                                                 // [229][MOV][174]
        let tex_wgl = d_gpudata_wgl     ;//:WebGlContext ://     // [229][MOV][228][REN][174]
        let     t_s = c_gpudata_p2k_lot ;//:TextureSlot  ://     // [229][MOV][---][174]
        let     t_h = d_gpudata_p2k_tex ;//:TextureHandle://     // [229][MOV][---][174]
                                                                 // [229][MOV][---][174]
        ASS( t_s >=  (0) , "[SAME_VALUE_AS::::d_p2k]" );         // [229][MOV][---][174]
        ASS( t_h != null , "[Its_An_Object_In_WEBGL]" );         // [229][MOV][---][174]
                                                                 // [229][MOV][---][174]
        //: #_ACTIVE_TEXTURE____VS____BIND_TEXTURE_# ://         // [229][MOV][---][174]
                                                                 // [229][MOV][---][174]
        tex_wgl.activeTexture( tex_wgl.TEXTURE0   + t_s );       // [229][MOV][228][REN][174]
        tex_wgl.bindTexture(   tex_wgl.TEXTURE_2D , t_h );       // [229][MOV][228][REN][174]
                                                                 // [229][MOV][---][---]
        let t2d = tex_wgl.TEXTURE_2D        ; //: t_2d   ://     // [229][MOV][228][REN][174]
        let _n_ = tex_wgl.NEAREST           ; //: near   ://     // [229][MOV][228][REN][174]
        let _e_ = tex_wgl.CLAMP_TO_EDGE     ; //: edge   ://     // [229][MOV][228][REN][174]
        let min = tex_wgl.TEXTURE_MIN_FILTER; //: min_fil://     // [229][MOV][228][REN][174]
        let mag = tex_wgl.TEXTURE_MAG_FILTER; //: mag_fil://     // [229][MOV][228][REN][174]
        let _s_ = tex_wgl.TEXTURE_WRAP_S    ; //: twrap_s://     // [229][MOV][228][REN][174]
        let _t_ = tex_wgl.TEXTURE_WRAP_T    ; //: twrap_t://     // [229][MOV][228][REN][174]
                                                                 // [229][MOV][---]
        tex_wgl.texParameteri( t2d, min , _n_ ); //::::::://     // [229][MOV][228][REN][174]
        tex_wgl.texParameteri( t2d, mag , _n_ ); //::::::://     // [229][MOV][228][REN][174]
        tex_wgl.texParameteri( t2d, _s_ , _e_ ); //::::::://     // [229][MOV][228][REN][174]
        tex_wgl.texParameteri( t2d, _t_ , _e_ ); //::::::://     // [229][MOV][228][REN][174]
                                                                 // [229][MOV][---][174]
                       //: #_WHAT_IS_ALIGNMENT_# ::::::::://     // [229][MOV][---][174]
        const ALN = 4; //: #_SET_ALN_BEFORE_PUSH_# ::::::://     // [229][MOV][---][174]
        tex_wgl.pixelStorei(tex_wgl.UNPACK_ALIGNMENT, ALN);      // [229][MOV][228][REN][174]
                                                                 // [229][MOV][---][174]
        let pix_wid =(      2048 ); //:FOR_TEXTURE_UPLOAD://     // [229][MOV][---][174]
        let pix_hig =(      2048 ); //:FOR_TEXTURE_UPLOAD://     // [229][MOV][---][174]
        let pix_arr =( d_pix2048 ); //:FOR_TEXTURE_UPLOAD://     // [229][MOV][---][174]
                                                                 // [229][MOV][---][174]
        //:SEE[ #_TEX_IMAGE_2D_NOTES_TXT_# ]:::::::::::::://     // [229][MOV][---][174]
        tex_wgl.texImage2D(  //:-------------------------://     // [229][MOV][228][REN][174]
            tex_wgl.TEXTURE_2D    //: TARGET             ://     // [229][MOV][228][REN][174]
        ,   0                     //: LEVEL              ://     // [229][MOV][---][174]
        ,   tex_wgl.RGBA8UI       //:#INTERNAL_FORMAT#   ://     // [229][MOV][228][REN][174]
            //:------------------------------------------://     // [229][MOV][---][174]
        ,   pix_wid               //: WIDTH  / PIX_WID   ://     // [229][MOV][---][174]
        ,   pix_hig               //: HEIGHT / PIX_HIG   ://     // [229][MOV][---][174]
        ,   0                     //: BORDER             ://     // [229][MOV][---][174]
            //:------------------------------------------://     // [229][MOV][---][174]
        ,   tex_wgl.RGBA_INTEGER  //:#SOURCE_FORMAT#     ://     // [229][MOV][228][REN][174]
        ,   tex_wgl.UNSIGNED_BYTE //:#SOURCE_TYPE#       ://     // [229][MOV][228][REN][174]
        ,   pix_arr               //: ARRAY_BUFFER_VIEW  ://     // [229][MOV][---][174]
        );; //:------------------------------------------://     // [229][MOV][---][174]
                                                                 // [229][MOV][---][174]
        if( d_gpudata_log >= 1 ){    ;;;;;;;;;;;;;;;;;;;;;;;     // [236]
            MSG( "[P_I_X_2_0_4_8:100_PERCENT_PUSHED]" );;;;;     // [236][229][MOV][---][174]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
                                                                 // [229][MOV][---][174]
        //:#_TOO_MANY_COIN_FLIPS_2022_#:[174]:-----------://     // [229][MOV][---][174]
        //:Download_Uploaded_Texture_Check:[174]:--------://     // [229][MOV][---][174]
        if( d_bug >= 1 ){                                        // [229][MOV][---][174]
                                                                 // [229][MOV][---][174]
            if( c_crash_on_maybe_todo >= 1 ){   ;;;;;;;;;;;;     // [236]
                ERR( "[T_O_D_O:PARANOID_SANITY_CHECK]" );;;;     // [236][229][MOV][---][174]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
                                                                 // [229][MOV][---][174]
        };;                                                      // [229][MOV][---][174]
        //:--------:Download_Uploaded_Texture_Check:[174]://     // [229][MOV][---][174]
        //:-----------:#_TOO_MANY_COIN_FLIPS_2022_#:[174]://     // [229][MOV][---][174]
                                                                 // [229][MOV][---][174]
    };; //:ENDFUNC[ F_GPUDATA_TEX_PUT ]::::::::::::::::::://     // [229][MAR][---][174]
                                                                 // [229]
    //:------------------:#_DUMB_BUNNY_TEXTURE_UPLOAD_#:[229]:// // [229]
                                                                 // [229]
    const   F_GPUDATA_TIK = function                             // [229]
    PRIVATE_F_GPUDATA_TIK(                                       // [229]
                                                                 // [229]
        /** VOID **/                                             // [229]
    ){                                                           // [229]
        //:#_update_texture_if_needed_#:[229]:---------------:// // [229]
                                                                 // [229][-------------]
            if( d_gpudata_fum >= 1 ){    //:FORCE_UPDATE_MODE:// // [236][229][MOV][184][---]
                d_pix2048_dir =(         0 - 333 );              // [236][229][MOV][184][---]
                d_pix2048_dir_mem_dum =( 0 - 777 );              // [236]
                d_pix2048_dir_mem_e_e =( 0 - 999 );              // [236]
                                                                 // [229][-------------]
                //:DONE_ISH:#_REFACTOR_GPU_SYNC_CODE_#   ://     // [229][MAE][226][---]
                //:    TODO:#_UPDATE_ONLY_DIRTY_SECTORS_#://     // [229][-------------]
                                                                 // [229][-------------]
                //- F_ARTGIRL_TEX_PUT( );   -//                  // [229][MAE][229][184]
                    F_GPUDATA_TEX_PUT( );                        // [229][MAE][229][184]
                                                                 // [229][-------------]
            };; //:[ Force Update Mode ? ( fum ) ]::::::::::::// // [236][229][MOV][184][---]
        //:---------------:#_update_texture_if_needed_#:[229]:// // [229]
    };;                                                          // [229]
                                                                 // [---]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [226]
//|                                               [ @$$$$$@ ]|// // [226]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __GPUDATA__|// // [226]
//|                                               [ @$$$$$@ ]|// // [226]
//|18|18|18|18|18|18|18|18|18|SUBS|18|18|18|18|18|18|18|18|18|// // [226]
//|17|17|17|17|17|17|17|17|17|SUBS|17|17|17|17|17|17|17|17|17|// // [226]
//|[ @$$$$$@ ]                                               |// // [226]
//|__GPUSYNC__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [226]
//|[ @$$$$$@ ]                                               |// // [226]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [226]
                                                                 // [---]
    //:#_SUB_TEXTURE_PUSH_MY_BITCHES_#:[235]:================:// // [235]
                                                                 // [235]
    const   F_GPUSYNC_BX0_BX1_BY0_BY1 = function                 // [235]
    PRIVATE_F_GPUSYNC_BX0_BX1_BY0_BY1(                           // [235]
                                                                 // [235]
        i_bx0 //: @i_bx0@ : Input - Bounds.x_0 ::::::::::://     // [235]
    ,   i_bx1 //: @i_bx1@ : Input - Bounds.x_1 ::::::::::://     // [235]
    ,   i_by0 //: @i_by0@ : Input - Bounds.y_0 ::::::::::://     // [235]
    ,   i_by1 //: @i_by1@ : Input - Bounds.y_1 ::::::::::://     // [235]
    ){                                                           // [235]
        let i2d_wgl = d_gpudata_wgl ;        //:@i2d_wgl@://     // [235]
        let pix_arr = d_pix2048 ;;;;;                            // [235]
                                                                 // [235]
        //:Calculate_tsi2d_Inputs:[235]:-----------------://     // [235]
                                                                 // [235]
            var laxcoma_i2d="[HACK]" ///////////////////////     // [235]
                                                                 // [235]
                tlo_x_0 =( i_bx0            )//:@tlo_x_0@://     // [235]
            ,   tlo_y_0 =( i_by0            )//:@tlo_y_0@://     // [235]
            ,   rec_wid =( i_bx1 - i_bx0 +1 )//:@rec_wid@://     // [235]
            ,   rec_hig =( i_by1 - i_by0 +1 )//:@rec_hig@://     // [235]
            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [235]
                                                                 // [---]
            //:SEE[#_SOURCE_OFFSET_DOCUMENTATION_NOTES_#]://     // [237]
                                                                 // [---]
            var src_oib =(                                       // [235]
            //: ( ______component_index___________ )     ://     // [235]
                ( 4 * ( i_bx0 + ( i_by0 * 2048 ) ) )  //:://     // [235]
            //:       ( ____pixel_index_________ )       ://     // [235]
            );;                                                  // [235]
        //:-----------------:Calculate_tsi2d_Inputs:[235]://     // [235]
        //:TEX_SUB_IMAGE_2D:[235]:=======================://     // [235]
        //:STOLEN_FROM[ R:\G\A2_JC\_.02._ ]::::::::::::::://     // [235]
                                                                 // [---]
            //:#_TSI2D_PROLOGUE_#:[417]:- - - - - - - - -://     // [417]
            {                                                    // [417]
                //:@symname@ : Symbolic_Name  :::::::::::://     // [417]
                //:@symvalu@ : Symbolic_Value :::::::::::://     // [417]
                                                                 // [417]
                let symname =( i2d_wgl.UNPACK_ROW_LENGTH );      // [417]
                let symvalu =( 2048 );                           // [417]
                                                                 // [417]
                i2d_wgl.pixelStorei( symname , symvalu );        // [417]
            }                                                    // [417]
            //:- - - - - - - - -:#_TSI2D_PROLOGUE_#:[417]://     // [417]
                                                                 // [---]
            i2d_wgl.texSubImage2D(                               // [235]
                                                                 // [235]
                i2d_wgl.TEXTURE_2D //:TARGET           ::://     // [235]
            ,     0                //:LEVEL ( @L_O_D@ )::://     // [235]
                                                                 // [235]
            ,   tlo_x_0 //: < < <[ @DIRTY_SUB_SEL_RECT@ ]://     // [235]
            ,   tlo_y_0 //: < < <[ @DIRTY_SUB_SEL_RECT@ ]://     // [235]
            ,   rec_wid //: < < <[ @DIRTY_SUB_SEL_RECT@ ]://     // [235]
            ,   rec_hig //: < < <[ @DIRTY_SUB_SEL_RECT@ ]://     // [235]
                                                                 // [235]
                //:--------------------------------------://     // [235]
            ,   i2d_wgl.RGBA_INTEGER   //:SOURCE_FORMAT  ://     // [235]
            ,   i2d_wgl.UNSIGNED_BYTE  //:SOURCE_TYPE    ://     // [235]
                //:--------------------------------------://     // [235]
                                                                 // [235]
            ,   pix_arr //: ARRAY_BUFFER_VIEW :::::::::::://     // [235]
            ,   src_oib //: SOURCE_OFFSET     :::::::::::://     // [235]
            );;                                                  // [235]
        //:=======================:TEX_SUB_IMAGE_2D:[235]://     // [235]
    };;                                                          // [235]
    //:================:#_SUB_TEXTURE_PUSH_MY_BITCHES_#:[235]:// // [235]
                                                                 // [---]
    //:#_DIRTY_FLAGGER_DATA_PIXEL_COM_#:[225]:---------------:// // [230][MOV][225]
                                                                 // [230][--------]
    const   F_GPUSYNC_DIR_DPC = "[FIX:GPUSYNC_DIRTYIT_DPC]" ;    // [230][--------]
                                                                 // [230][--------]
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::// // [230][MOV][226]
    //:  @INVERSE_OF@[ F_GPUSYNC_CLEANIT_ALL ]::::::::::::::::// // [230][MAR][226]
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::// // [230][MOV][226]
                                                                 // [230][MOV][225]
    const   F_GPUSYNC_DIRTYIT_DPC = function //:@DIR_DPC@://     // [230][MAR][225]
    PRIVATE_F_GPUSYNC_DIRTYIT_DPC(                               // [230][MAR][225]
                                                                 // [230][MOV][225]
        i_dpc //: @i_dpc@ : Input - DataPixelComponent ://       // [230][MOV][225]
    ){                                                           // [230][MOV][225]
        if( d_eci >= 1 ){                                        // [230][MOV][225]
            ASS( i_dpc >=((          0)  ) , "[NEG_DPC]" );      // [230][MOV][225]
            ASS( i_dpc <=((2048*2048*4)-1) , "[OOB_DPC]" );      // [230][MOV][225]
        };;                                                      // [230][MOV][225]
                                                                 // [230][MOV][225]
        var dpi =(      (i_dpc /    4 ) );//:#DIVIDEFOOL#://     // [230][MOV][225]
        var dpx =(      (  dpi % 2048 ) );                       // [230][MOV][225]
        var dpy =( F_M_F(  dpi / 2048 ) );                       // [230][MOV][225]
                                                                 // [230][MOV][225]
        //:Find_Master_Memory_Cell:[225]:----------------://     // [230][MOV][225]
                                                                 // [230][MOV][225]
            //: SEE[ M_M_C_DIAGRAM ] ::::::::::::::::::::://     // [230][MOV][225]
                                                                 // [230][MOV][225]
            var mmx =F_M_F( dpx / 512 );  //:SEE[ @mmx@ ]://     // [230][MOV][225]
            var mmy =F_M_F( dpy / 512 );  //:SEE[ @mmy@ ]://     // [230][MOV][225]
                                                                 // [230][MOV][225]
            if( d_bug >= 1 ){                                    // [230][MOV][225]
                if(  mmx < 0 || mmx >(4-1)                       // [230][MOV][225]
                ||   mmy < 0 || mmy >(4-1)                       // [230][MOV][225]
                ){                                               // [230][MOV][225]
                    LOG( "[chk:mmx]" , mmx );                    // [230][MOV][225]
                    LOG( "[chk:mmy]" , mmy );                    // [230][MOV][225]
                };;                                              // [230][MOV][225]
                ASS( mmx >= 0 && mmx <= (4-1),"[MMX_OOB]" );     // [230][MOV][225]
                ASS( mmy >= 0 && mmy <= (4-1),"[MMY_OOB]" );     // [230][MOV][225]
            };;                                                  // [230][MOV][225]
        //:----------------:Find_Master_Memory_Cell:[225]://     // [230][MOV][225]
        //:Rough_Partition_Flags:[225]:------------------://     // [230][MOV][225]
                                                                 // [230][MOV][225]
            if( mmx <= (3-1)    //:#_OPTIMIZES_CLEARING_#://     // [230][MOV][225]
            &&  mmy <= (3-1)    //:#_OPTIMIZES_CLEARING_#://     // [230][MOV][225]
            ){                                                   // [230][MOV][225]
                d_pix2048_dir_mem_dum =( 11011 );//:TILES://     // [230][MOV][225]
            }else{                                               // [230][MOV][225]
                d_pix2048_dir_mem_e_e =( 22022 );//: ELSE://     // [230][MOV][225]
            };;                                                  // [230][MOV][225]
        //:------------------:Rough_Partition_Flags:[225]://     // [230][MOV][225]
        //:Calc_Memory_Cell_Index:[225]:-----------------://     // [230][MOV][225]
                                                                 // [230][MOV][225]
            var mmi = ( mmx + ( mmy * 4 ) );                     // [230][MOV][225]
                                                                 // [230][MOV][225]
        //:-----------------:Calc_Memory_Cell_Index:[225]://     // [230][MOV][225]
        //:#_Calc_Cluster_Bit_Index_#:[225]:-------------://     // [230][MOV][225]
                                                                 // [230][MOV][225]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [230][MOV][225]
            //: @dpx_512@ : dpx , but local to 512x512   ://     // [230][MOV][225]
            //: @dpy_512@ : dpy , but local to 512x512   ://     // [230][MOV][225]
            //:     @ccx@ : #_NO_SUCH_THING_AS_CCX_#     ://     // [230][MOV][225]
            //:     @ccy@ : #_NO_SUCH_THING_AS_CCY_#     ://     // [230][MOV][225]
            //:     @cci@ : #_NO_SUCH_THING_AS_CCI_#     ://     // [230][MOV][225]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [230][MOV][225]
                                                                 // [230][MOV][225]
            var dpx_512 = ( dpx - ( mmx * 512 ) );               // [230][MOV][225]
            var dpy_512 = ( dpy - ( mmy * 512 ) );               // [230][MOV][225]
            if( d_bug ){                                         // [230][MOV][225]
                ASS( dpx_512 >= 0 && dpx_512 <=(512-1) );        // [230][MOV][225]
                ASS( dpy_512 >= 0 && dpy_512 <=(512-1) );        // [230][MOV][225]
            };;                                                  // [230][MOV][225]
                                                                 // [230][MOV][225]
            var cbx =F_M_F( dpx_512 / 128 );//:SEE[@cbx@]://     // [230][MOV][225]
            var cby =F_M_F( dpy_512 / 128 );//:SEE[@cby@]://     // [230][MOV][225]
            var cbi =( cbx + ( cby * 4 )  );//:SEE[@cbi@]://     // [230][MOV][225]
                                                                 // [230][MOV][225]
            if( d_bug >= 1 ){                                    // [230][MOV][225]
                ASS( cbx >= 0 && cbx <=( 4-1) ,"[OOB_CBX]");     // [230][MOV][225]
                ASS( cby >= 0 && cby <=( 4-1) ,"[OOB_CBY]");     // [230][MOV][225]
                ASS( cbi >= 0 && cbi <=(16-1) ,"[OOB_CBI]");     // [230][MOV][225]
            };;                                                  // [230][MOV][225]
        //:-------------:#_Calc_Cluster_Bit_Index_#:[225]://     // [230][MOV][225]
        //:Memory_Cell_BitMask:[225]:--------------------://     // [230][MOV][225]
                                                                 // [230][MOV][225]
            //:#_NETWORK_BIT_ORDER_BITMASK_#://                  // [230][MOV][225]
                                                                 // [230][MOV][225]
            var bitmask = d_pix2048_dir_mem_mmi[ mmi ];          // [230][MOV][225]
            var wasadir = 0x0 ; //:WAS_Already_Dirty?://         // [230][MOV][225]
                                                                 // [230][MOV][225]
                wasadir =(  bitmask >>>((16-1)-cbi))&(0x01);     // [230][MOV][225]
                bitmask =(( bitmask                              // [230][MOV][225]
                |   ( 0x1 << ((16-1)-cbi) )  //: @N_B_I@ ://     // [230][MOV][225]
                )>>>0);;                                         // [230][MOV][225]
                                                                 // [230][MOV][225]
            d_pix2048_dir_mem_mmi[ mmi ] =(  bitmask );          // [230][MOV][225]
                                                                 // [-------------]
            if( c_crash_on_vital_todo >= 1 ){ ;;;;;;;;;;;;;;     // [237]
                ERR( "[#_BUGHUNT_WASADIR_FLAGGING_#]" );;;;;     // [237]
                //:::::::::::::::::::::::::::::::::::::::://     // [237]
                //:                                      ://     // [237]
                //:     #_BUGHUNT_WASADIR_FLAGGING_#     ://     // [237]
                //:                                      ://     // [237]
                //:::::::::::::::::::::::::::::::::::::::://     // [237]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [237]
                                                                 // [-------------]
        //:--------------------:Memory_Cell_BitMask:[225]://     // [230][MOV][225]
        //:Grab_That_Dirty_Rect_By_The_Hair:[225]:-------://     // [230][MOV][225]
                                                                 // [230][MOV][225]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [230][MOV][225]
        //: @cso@ ::::: Cluster_Subgrid_Origin           ://     // [230][MOV][225]
        //: @cso_dex@ : Cluster_Subgrid_Origin - INDEX   ://     // [230][MOV][225]
        //: @cso_com@ : Cluster_Subgrid_Origin - COM_DEX ://     // [230][MOV][225]
        //: @ria_loc@ : Rectangle_Index_Address : LOCAL  ://     // [230][MOV][225]
        //: @ria_glo@ : Rectangle_Index_Address : GLOBAL ://     // [230][MOV][225]
        //: @LIKE@::::: The usage is [like/analogous].   ://     // [230][MOV][225]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [230][MOV][225]
                                                                 // [230][MOV][225]
            //:#_CSO_DIAGRAM_#://                                // [230][MOV][225]
                                                                 // [230][MOV][225]
            var cso_dex =(     (mmi*16) ); //:LIKE[ PIX_DEX ]:// // [230][MOV][225]
            var cso_com =( 4 * (mmi*16) ); //:LIKE[ PIX_COM ]:// // [230][MOV][225]
            var ria_loc =(     (cbi* 4) );                       // [230][MOV][225]
            var ria_glo =( cso_com     ///                       // [230][MOV][225]
                         + ria_loc );; ///                       // [230][MOV][225]
                                                                 // [230][MOV][225]
            if( d_bug >=1 ){                                     // [230][MOV][225]
                //:#_RIA_BOUNDS_#://                             // [230][MOV][225]
                ASS( ria_glo >=((    0)  ) , "[@RIA_NEG@]");     // [230][MOV][225]
                ASS( ria_glo <=((256*4)-1) , "[@RIA_OOB@]");     // [230][MOV][225]
            };;                                                  // [230][MOV][225]
                                                                 // [230][MOV][225]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [230][MOV][225]
            //:     @dma@ :    [ Dirty Memory    Array ] ://     // [230][MOV][225]
            //:           : AKA[ Dirty Rectangle Array ] ://     // [230][MOV][225]
            //:                                          ://     // [230][MOV][225]
            //: @dir_x_0@ : Dirty Rectangle - x_0        ://     // [230][MOV][225]
            //: @dir_x_1@ : Dirty Rectangle - x_1        ://     // [230][MOV][225]
            //: @dir_y_0@ : Dirty Rectangle - y_0        ://     // [230][MOV][225]
            //: @dir_y_1@ : Dirty Rectangle - y_1        ://     // [230][MOV][225]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [230][MOV][225]
                                                                 // [230][MOV][225]
            let dma     = d_pix2048_dir_mem_arr ;                // [230][MOV][225]
            var dir_x_0 = dma[ ria_glo + x_0 ]  ; //:@c_x_0@://  // [230][MOV][225]
            var dir_x_1 = dma[ ria_glo + x_1 ]  ; //:@c_x_1@://  // [230][MOV][225]
            var dir_y_0 = dma[ ria_glo + y_0 ]  ; //:@c_y_0@://  // [230][MOV][225]
            var dir_y_1 = dma[ ria_glo + y_1 ]  ; //:@c_y_1@://  // [230][MOV][225]
                                                                 // [230][MOV][225]
        //:-------:Grab_That_Dirty_Rect_By_The_Hair:[225]://     // [230][MOV][225]
        //:Update_Dirty_Rect_Bounds:[225]:---------------://     // [230][MOV][225]
                                                                 // [230][MOV][225]
            if( d_bug >= 1 ){                                    // [230][MOV][225]
                                                                 // [230][MOV][225]
                //:#_DIRTY_RECTANGLE_IS_NOT_LOCAL_#://           // [230][MOV][225]
                                                                 // [230][MOV][225]
                let  dpx_128 = ( dpx_512 % 128 );//:@dpx_128@:// // [230][MOV][225]
                let  dpy_128 = ( dpy_512 % 128 );//:@dpy_128@:// // [230][MOV][225]
                                                                 // [230][MOV][225]
                ASS( dpx_128 >=(    0) ,  "[DPX_128:NEG]" );     // [230][MOV][225]
                ASS( dpy_128 >=(    0) ,  "[DPY_128:NEG]" );     // [230][MOV][225]
                ASS( dpx_128 <=(128-1) ,  "[DPX_128:OOB]" );     // [230][MOV][225]
                ASS( dpy_128 <=(128-1) ,  "[DPY_128:OOB]" );     // [230][MOV][225]
                ASS(dpx_512 === dpx_128+(cbx*128),"[CBX]" );     // [230][MOV][225]
                ASS(dpy_512 === dpy_128+(cby*128),"[CBY]" );     // [230][MOV][225]
            };;                                                  // [230][MOV][225]
                                                                 // [230][MOV][225]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [230][MOV][225]
            //: #_WHY_ARE_DIRTY_RECTS_IN_GLOBAL_COORDS_# ://     // [230][MOV][225]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [230][MOV][225]
                                                                 // [230][MOV][225]
            if( 0 === wasadir /**first_time_dirty:TRUE **/){     // [230][MOV][225]
                                                                 // [230][MOV][225]
                //:#_FIRST_TIME_DIRTY_IS_1X1_RECTANGLE_#://      // [230][MOV][225]
                                                                 // [230][MOV][225]
                dir_x_0 =( dpx /**@GTT@**/ );  //:FTD_1X1:LEF:// // [230][MOV][225]
                dir_x_1 =( dpx /**@GTT@**/ );  //:FTD_1X1:RIG:// // [230][MOV][225]
                dir_y_0 =( dpy /**@GTT@**/ );  //:FTD_1X1:TOP:// // [230][MOV][225]
                dir_y_1 =( dpy /**@GTT@**/ );  //:FTD_1X1:BOT:// // [230][MOV][225]
            }else                                                // [230][MOV][225]
            if( 1 === wasadir /**first_time_dirty:FALSE**/){     // [230][MOV][225]
                                                                 // [230][MOV][225]
            //:LOWER_BOUND_UPDATE://                             // [230][MOV][225]
                                                                 // [230][MOV][225]
                if( dpx < dir_x_0){ dir_x_0 = dpx ; };           // [230][MOV][225]
                if( dpy < dir_y_0){ dir_y_0 = dpy ; };           // [230][MOV][225]
                                                                 // [230][MOV][225]
            //:UPPER_BOUND_UPDATE://                             // [230][MOV][225]
                                                                 // [230][MOV][225]
                if( dpx > dir_x_1){ dir_x_1 = dpx ; };           // [230][MOV][225]
                if( dpy > dir_y_1){ dir_y_1 = dpy ; };           // [230][MOV][225]
            }else{                                               // [230][MOV][225]
                ERR("[OH_FUCK_NO_YOU_DIDNT_YOU_FOOL]");          // [230][MOV][225]
            };;                                                  // [230][MOV][225]
                                                                 // [230][MOV][225]
        //:---------------:Update_Dirty_Rect_Bounds:[225]://     // [230][MOV][225]
        //:Save_Your_Dirty_Rect_Changes:[225]:-----------://     // [230][MOV][225]
                                                                 // [230][MOV][225]
            dma[ ria_glo + x_0 ] = dir_x_0 ;                     // [230][MOV][225]
            dma[ ria_glo + x_1 ] = dir_x_1 ;                     // [230][MOV][225]
            dma[ ria_glo + y_0 ] = dir_y_0 ;                     // [230][MOV][225]
            dma[ ria_glo + y_1 ] = dir_y_1 ;                     // [230][MOV][225]
                                                                 // [230][MOV][225]
        //:-----------:Save_Your_Dirty_Rect_Changes:[225]://     // [230][MOV][225]
                                                                 // [230][MOV][225]
        d_pix2048_dir =( 0+225+0 );  //: #_WHY_DIR_225_# ://     // [230][MOV][225]
                                                                 // [-------------]
    };; //:ENDFUNC[ F_GPUSYNC_DIRTYIT_DPC ]:::::::::::::::::::// // [230][MAE][225]
                                                                 // [230][MOV][225]
    //:---------------:#_DIRTY_FLAGGER_DATA_PIXEL_COM_#:[225]:// // [230][MOV][225]
    //:#_CLEAN_UP_DIRTY_MEMORY_#:[226]:----------------------:// // [230][MOV][226]
                                                                 // [230][MOV][226]
        //: @_ABOVE_MY_PAY_GRADE_REFACTOR_@ ://                  // [230][MOV][226]
        const F_PIX2048_GPUSYNC = "[TODO:F_GPUSYNC_CLEANIT]" ;   // [230][MOV][226]
        const F_PIX2048_DIRTYIT = "[TODO:F_GPUSYNC_DIRTYIT]" ;   // [230][MOV][226]
        const F_GPUSYNC_GPUSYNC = "[FIX::::CLEANIT|DIRTYIT]" ;   // [230][MOV][226]
        const F_GPUSYNC_RUN     = "[FIX::::CLEANIT|DIRTYIT]" ;   // [230][MOV][226]
                                                                 // [230][MOV][226]
    //:----------------------:#_CLEAN_UP_DIRTY_MEMORY_#:[226]:// // [230][MOV][226]
    //:#_CLEAN_ALL_UN_FLAGGER_#:[230]:-----------------------:// // [230][--------]
                                                                 // [230][--------]
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::// // [230][--------]
    //:  @INVERSE_OF@[ F_GPUSYNC_DIRTYIT_DPC ]::::::::::::::::// // [230][--------]
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::// // [230][--------]
                                                                 // [230][--------]
    const   F_GPUSYNC_CLEANIT_ALL = function                     // [230][--------]
    PRIVATE_F_GPUSYNC_CLEANIT_ALL(                               // [230][--------]
                                                                 // [230][--------]
        /**VOID**/                                               // [230][--------]
    ){                                                           // [230][--------]
        if( d_eci >=1 ){                                         // [232]
            if( d_pix2048_dir_mem_dum <= 0                       // [232]
            &&  d_pix2048_dir_mem_e_e <= 0                       // [232]
            ){                                                   // [232]
                MSG("[WARNING:TOP_LEVEL_DIRTY_SECTOR]");         // [232]
                MSG("[WAS_NOT_SPECIFIC::.PUSHING_ALL]");         // [232]
                LOG("[d_pix2048_dir]:", d_pix2048_dir );         // [236]
            };;                                                  // [232]
        };;                                                      // [232]
        if( d_pix2048_dir_mem_dum <= 0 /////////////////////     // [232]
        &&  d_pix2048_dir_mem_e_e <= 0 /////////////////////     // [232]
        ){ /////////////////////////////////////////////////     // [232]
                                                                 // [232]
            F_GPUDATA_TEX_PUT();                                 // [232]
                                                                 // [232]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [232]
                                                                 // [---]
        if( d_pix2048_dir_mem_dum >= 1 /////////////////////     // [234]
        ||  d_pix2048_dir_mem_e_e >= 1 /////////////////////     // [234]
        ){  ////////////////////////////////////////////////     // [234]
            //:@_CON_COM_VAR_DEC_@:[234]:----------------://     // [-------------]
                                                                 // [-------------]
            var mmi ;;;;;;;;;;; //:Master_Memory_Index   ://     // [234][--------]
                                                                 // [-------------]    
            var cbi_016 ;;;;;;; //:#_Cluster_Bit_Index_#:://     // [234][MAR][233]
            var u16_dir ;;;;;;; //:4X4_Array_Of_Bit_Flags://     // [234][MAR][233]
            var isdirty ;;;;;;; //:DirtyBit_Of[ u16_dir ]://     // [234][MAR][233]
                                                                 // [234][MAR][233]
            //: #_DIA_MMI_U16_# && #_DIA_R1K_RB4_# ::::::://     // [234][MAR][233]
            var mmi_u16 =( d_pix2048_dir_mem_mmi );              // [234][MAR][233]
            var r1k_rb4 =( d_pix2048_dir_mem_arr );              // [234][MAR][233]
                                                                 // [234][MAR][233]
            var bx0 , bx1 , by0 , by1 ;  //:@REC_BOU@://         // [234][MAR][233]
                                                                 // [-------------]
            var cso_com ; //:Cluster_Subgrid_Origin  ://         // [234][DAR][233]
            var     r64 ; //:@r64@ , AKA[ ria_loc ]  ://         // [234][DAR][233]
            var     r1k ; //:Base_Address:ONE____RECT://         // [234][DAR][233]
                                                                 // [-------------]
            //:----------------:@_CON_COM_VAR_DEC_@:[234]://     // [-------------]

        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                                                 // [---]
        if( d_pix2048_dir_mem_dum >= 1 ){ //////////////////     // [---][232]
                                                                 // [---]
            ASS( c_xy4 === 4 , "[CXY4_CHK_2_3_2]" );             // [233]
                                                                 // [233]
            let h3x ; //: @h3x@ : HotelCell.X ,3 Values :://     // [233]
            let h3y ; //: @h3y@ : HotelCell.Y ,3 Values :://     // [233]
            let hi9 , exp_mmi ;                                  // [233]
                                                                 // [---]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [234]
            //:MOVED_TO[ COM_COM_VAR_DEC ]ABOVE::::::::::://     // [234]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [234]
                                                                 // [---]
                                                                 // [---][233]
            for(h3y = 0 ; h3y <=(3-1) ; h3y ++ ){                // [---][233]
            for(h3x = 0 ; h3x <=(3-1) ; h3x ++ ){                // [---][233]
                                                                 // [---][233]
                    hi9 = ( h3x + ( h3y * 3 ) );                 // [---][233]
                exp_mmi = ( h3x + ( h3y * 4 ) );                 // [---][233]
                    mmi = d_hi9_mmi[ hi9 ];                      // [---][233]
                ASS(mmi===exp_mmi,"[MMI_EXP_MMI]");;             // [---][233]
                                                                 // [---][233]
                    u16_dir = mmi_u16[ mmi ];                    // [---][233]
                if( u16_dir === 0x0000 /**@4X4_BITS@**/ ){       // [---][233]
                                                                 // [---][233]
                    continue ;//: No Dirty Rectangles    ://     // [---][233]
                              //: In_Current_4X4_Cluster ://     // [---][233]
                };;                                              // [---][233]
                                                                 // [---][233]
                //:Get_4X4_Rectangle_Overlay_Base_Address:::::// // [---][233]
                //:@cso_com@:Base_Address_Of_Rect_Cluster:::::// // [---][233]
                    cso_com =( mmi * c_r16 * c_xy4 );            // [234][233]
                                                                 // [---][233]
                //:Loop_Through_All_Rectangles_In_4X4_Overlay:// // [---][233]
                for(cbi_016  =(   0)                             // [---][233]
                ;   cbi_016 <=(16-1)                             // [---][233]
                ;   cbi_016++                                    // [---][233]
                ){                                               // [---][233]
                    //:Skip_Clean_Rectangles:::::::::::::://     // [---][233]
                    isdirty =(u16_dir>>>((16-1)-cbi_016))&(0x1); // [---][233]
                    if( 0 === isdirty ){ continue ; };           // [---][233]
                                                                 // [---][233]
                    //:@ALIAS_NAME@[ r1k === ria_glo ]://        // [---][233]
                    //: 4 ===[ x_0 , x_1 , y_0 , y_1 ]://        // [---][233]
                                                                 // [---][233]
                    //:Get_Rectangle_Base_Address:::::::::::::// // [---][233]
                    r64 =( c_xy4 * cbi_016    ); //:@REC_LBA@:// // [---][233]
                    r1k =( cso_com   + r64    ); //:@REC_GBA@:// // [---][233]
                    ASS( r64 <=(64-1) , "[R64_OOB]" );;;;;;;;;;; // [---][233]
                                                                 // [---][233]
                    //:Extract_Dirty_Rectangle::::::::::::::::// // [---][233]
                    bx0 = r1k_rb4[ r1k + x_0 ] ; //:BOUND:x_0:// // [---][233]
                    bx1 = r1k_rb4[ r1k + x_1 ] ; //:BOUND:x_1:// // [---][233]
                    by0 = r1k_rb4[ r1k + y_0 ] ; //:BOUND:y_0:// // [---][233]
                    by1 = r1k_rb4[ r1k + y_1 ] ; //:BOUND:y_1:// // [---][233]
                                                                 // [---]
                    F_GPUSYNC_BX0_BX1_BY0_BY1(                   // [235]
                              bx0,bx1,by0,by1 );;                // [235]
                                                                 // [---]
                };; //:NEXT[ cbi : cluster bit index ]:::://     // [---][233]
            };;};;  //:NEXT[ hi9 : hotel  cell index ]:::://     // [---][233]
                                                                 // [---][---]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [---][232]
        if( d_pix2048_dir_mem_e_e >= 1 ){ //////////////////     // [---][232]
                                                                 // [234]
            var ee7 ; //:EverythingElseCellIndex://              // [234]
            mmi=mmi ; //:MasterMemoryCell__Index://              // [234]
                                                                 // [234]
            for( ee7 = 0 ; ee7 <=(7-1) ; ee7 ++ ){  //////////// // [234]
                                                                 // [234]
                mmi = d_ee7_mmi[ ee7 ];                          // [234]
                                                                 // [234]
                //:#_COMMON_CLEANING_CODE_#:[234]:-----------:// // [-------------]
                                                                 // [-------------]
                    u16_dir = mmi_u16[ mmi ];                    // [234][MOV][233]
                if( u16_dir === 0x0000 /**@4X4_BITS@**/ ){       // [234][MOV][233]
                                                                 // [234][MOV][233]
                    continue ;//: No Dirty Rectangles    ://     // [234][MOV][233]
                              //: In_Current_4X4_Cluster ://     // [234][MOV][233]
                };;                                              // [234][MOV][233]
                                                                 // [234][MOV][233]
                //:Get_4X4_Rectangle_Overlay_Base_Address:::::// // [234][MOV][233]
                //:@cso_com@:Base_Address_Of_Rect_Cluster:::::// // [234][MOV][233]
                    cso_com =( mmi * c_r16 * c_xy4 );            // [234][MOV][233]
                                                                 // [-------------]
                //:Loop_Through_All_Rectangles_In_4X4_Overlay:// // [234][MOV][233]
                for(cbi_016  =(   0)                             // [234][MOV][233]
                ;   cbi_016 <=(16-1)                             // [234][MOV][233]
                ;   cbi_016++                                    // [234][MOV][233]
                ){                                               // [234][MOV][233]
                    //:Skip_Clean_Rectangles:::::::::::::://     // [234][MOV][233]
                    isdirty =(u16_dir>>>((16-1)-cbi_016))&(0x1); // [234][MOV][233]
                    if( 0 === isdirty ){ continue ; };           // [234][MOV][233]
                                                                 // [234][MOV][233]
                    //:@ALIAS_NAME@[ r1k === ria_glo ]://        // [234][MOV][233]
                    //: 4 ===[ x_0 , x_1 , y_0 , y_1 ]://        // [234][MOV][233]
                                                                 // [234][MOV][233]
                    //:Get_Rectangle_Base_Address:::::::::::::// // [234][MOV][233]
                    r64 =( c_xy4 * cbi_016    ); //:@REC_LBA@:// // [234][MOV][233]
                    r1k =( cso_com   + r64    ); //:@REC_GBA@:// // [234][MOV][233]
                    ASS( r64 <=(64-1) , "[R64_OOB]" );;;;;;;;;;; // [234][MOV][233]
                                                                 // [234][MOV][233]
                    //:Extract_Dirty_Rectangle::::::::::::::::// // [234][MOV][233]
                    bx0 = r1k_rb4[ r1k + x_0 ] ; //:BOUND:x_0:// // [234][MOV][233]
                    bx1 = r1k_rb4[ r1k + x_1 ] ; //:BOUND:x_1:// // [234][MOV][233]
                    by0 = r1k_rb4[ r1k + y_0 ] ; //:BOUND:y_0:// // [234][MOV][233]
                    by1 = r1k_rb4[ r1k + y_1 ] ; //:BOUND:y_1:// // [234][MOV][233]
                                                                 // [---]
                    F_GPUSYNC_BX0_BX1_BY0_BY1(                   // [235]
                              bx0,bx1,by0,by1 );;                // [235]
                                                                 // [---]
                };; //:NEXT[ cbi : cluster bit index ]:::://     // [234][MOV][233]
                                                                 // [-------------]
                //:-----------:#_COMMON_CLEANING_CODE_#:[234]:// // [-------------]
            };; //:NEXT[ ee7 ( EverythingElseCellIndex ) ]::::// // [234]
                                                                 // [---]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [232]
        //:#_MARK_EVERYTHING_CLEAN_#:[232]:--------------://     // [232]
                                                                 // [232]
            d_pix2048_dir =( 0 ); //: HIGHEST_LEVEL_FLAG ://     // [232]
                                                                 // [232]
            d_pix2048_dir_mem_dum =( 0 ); //:DIRTY_TILES?://     // [232]
            d_pix2048_dir_mem_e_e =( 0 ); //:DIRTY_ELSE??://     // [232]
                                                                 // [232]
            //:#_DMM_ZEROED_#:[232]:---------------------://     // [232]
            //: We only have to zero out the flags ,     ://     // [232]
            //: we don't have to edit the dirty rects.   ://     // [232]
            //: @m16@ : Master Memory Cell[ 0 to (16-1)] ://     // [232]
            //:- - - - - - - - - - -- - - - - - - - - - -://     // [232]
            for( var m16 = 0 ; m16 <= (16-1) ; m16 ++ ){         // [232]
                d_pix2048_dir_mem_mmi[ m16 ]=( 0x0000 );         // [232]
            };;                                                  // [232]
            //:---------------------:#_DMM_ZEROED_#:[232]://     // [232]
                                                                 // [232]
        //:--------------:#_MARK_EVERYTHING_CLEAN_#:[232]://     // [232]
    };; //:ENDFUNC[ F_GPUSYNC_CLEANIT_ALL ]:::::::::::::::::::// // [232][230][---]
    //:-----------------------:#_CLEAN_ALL_UN_FLAGGER_#:[230]:// // [230][--------]
                                                                 // [---][---]
    const   F_GPUSYNC_TIK = function    //////////////////////// // [236][---]
    PRIVATE_F_GPUSYNC_TIK(                                       // [236][---]
                                                                 // [236][---]
        /** VOID **/                                             // [236][---]
    ){                                                           // [236][---]
        if( d_pix2048_dir >= 1 ){                                // [236][---]
                                                                 // [236][---]
            F_GPUSYNC_CLEANIT_ALL( );                            // [236][---]
            ASS( d_pix2048_dir <= 0 , "[G_S_CIA]" );             // [236][---]
        };;                                                      // [236][---]
    };; //////////////////////////////////////////////////////// // [236][---]         
                                                                 // [---][---]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [---][226]
//|                                               [ @$$$$$@ ]|// // [---][226]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __GPUSYNC__|// // [---][226]
//|                                               [ @$$$$$@ ]|// // [---][226]
//|17|17|17|17|17|17|17|17|17|SUBS|17|17|17|17|17|17|17|17|17|// // [---][226]
//|26|26|26|26|26|26|26|26|26|SUBS|26|26|26|26|26|26|26|26|26|// // [402]
//|[ @$$$$$@ ]                                               |// // [402]
//|__HARDTEX__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [402]
//|[ @$$$$$@ ]                                               |// // [402]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [402]
                                                                 // [402]
//::::: SEE[ #_ABOUT_HARDTEX_SYSTEM_# ] ::::::::::::::::::::::// // [402]
                                                                 // [---]
    //: @B00@ : BOL Generator #0 . ( BOL === Boolean ) :::::::// // [408]
    //: @T00@ : TIL Generator #0 . ( TIL === TILE    ) :::::::// // [408]
                                                                 // [408]
    const   F_HARDTEX_B00_C4X_C4Y_L4X_L4Y = function //:::::::// // [408]
    PRIVATE_F_HARDTEX_B00_C4X_C4Y_L4X_L4Y(  //::::::::::::::::// // [408]
                                                                 // [408]
        i_lov_c4x  //: @lov_c4x@ : LevelOVErlay - CELL_4X4 X :// // [408]
    ,   i_lov_c4y  //: @lov_c4x@ : LevelOVErlay - CELL_4X4 Y :// // [408]
                   //:           : SEE_DIAGRAM[  #_LOV_CEL_#]:// // [408]
    ,   i_lov_l4x  //: @lov_l4x@ : LevelOVErlay - LOCA_4X4 X :// // [408]
    ,   i_lov_l4y  //: @lov_l4x@ : LevelOVErlay - LOCA_4X4 Y :// // [408]
                                                                 // [408]
    ){  //:BOD_BEG[ GENERATOR_B00 ]:::::::::::::::::::::::::::// // [408]
                                                                 // [408]
        //:[ATF]:--------------------------------------------:// // [408]
        //:                                                  :// // [408]
        //:    B00 : Boolean generator function #0           :// // [408]
        //:                                                  :// // [408]
        //:--------------------------------------------:[ATF]:// // [408]

        //:#_ONEROOM_DATA_IS_TRUE_#:[411]:-------------------:// // [411]
                                                                 // [411]
            let o_bol =( 0 /** Output Boolean **/ );             // [411]
                                                                 // [411]
            if( i_lov_l4x ){ /**NOOP**/ };                       // [411]
            if( i_lov_l4y ){ /**NOOP**/ };                       // [411]
                                                                 // [411]
            let     r4i =( i_lov_c4x + ( i_lov_c4y * 4 ));       // [411]
            let lov_r4i =( d_lover4x_lover4y_r4i[ r4i ] );       // [411]
            ASS(lov_r4i === r4i , "[ERR_LOV_R4I]"       );       // [411]
                                                                 // [411]
            let              lover4x_lover4y=( lov_r4i );        // [411]
            let lovtype =( d_lover4x_lover4y_lovtype[            // [411]
                             lover4x_lover4y         ]);;        // [411]
                                                                 // [411]
            if( 0 === lovtype ){ o_bol =( 1 ); }else             // [411]
            if( 1 === lovtype ){ o_bol =(0-1); }else             // [411]
            if( 2 === lovtype ){ o_bol =(0-2); }else             // [411]
            if( 3 === lovtype ){ o_bol =(0-3); }else{            // [411]
                                                                 // [411]
                ERR( "[INVALID_LOVTYPE_2022]" );                 // [411]
            };;                                                  // [411]
                                                                 // [411]
            return( o_bol );                                     // [411]
                                                                 // [411]
        //:-------------------:#_ONEROOM_DATA_IS_TRUE_#:[411]:// // [411]

    };; //:BOD_END[ GENERATOR_B00 ]:::::::::::::::::::::::::::// // [408]
                                                                 // [408]
    const   F_HARDTEX_T00_C4X_C4Y_L4X_L4Y = function //:::::::// // [408]
    PRIVATE_F_HARDTEX_T00_C4X_C4Y_L4X_L4Y(  //::::::::::::::::// // [408]
                                                                 // [408]
        i_lov_c4x  //: @lov_c4x@ : LevelOVErlay - CELL 4X4 X :// // [408]
    ,   i_lov_c4y  //: @lov_c4x@ : LevelOVErlay - CELL 4X4 Y :// // [408]
                   //:           : SEE_DIAGRAM[  #_LOV_CEL_#]:// // [408]
    ,   i_lov_l4x  //: @lov_l4x@ : LevelOVErlay - LOCA 4X4 X :// // [408]
    ,   i_lov_l4y  //: @lov_l4x@ : LevelOVErlay - LOCA 4X4 Y :// // [408]
                                                                 // [408]
    ){  //:BOD_BEG[ GENERATOR_T00 ]:::::::::::::::::::::::::::// // [408]
                                                                 // [408]
        //:[ATF]:--------------------------------------------:// // [408]
        //:                                                  :// // [408]
        //:    T00 : TileVal generator function #0           :// // [408]
        //:                                                  :// // [408]
        //:--------------------------------------------:[ATF]:// // [408]

        //:#_GEN_CON_RING_#:[412]:---------------------------:// // [412]
                                                                 // [412]
            let o_til =( 0x00000000 /**OutputTileValue**/ );     // [412]
            let   l_x =( i_lov_l4x        /** Local X **/ );     // [412]
            let   l_y =( i_lov_l4y        /** Local Y **/ );     // [412]
                                                                 // [---]
            let   x64 =( 0 /**l_x in range 0 to (64-1) **/);     // [413]
            let   y64 =( 0 /**l_y in range 0 to (64-1) **/);     // [413]
                                                                 // [---]
            if( d_eci >=1 ){                                     // [412]
                let F_N = OOB_MSG_MIN_MAX_VAL ;                  // [412]
                    F_N( "[L4X_OOB]" ,0,(128-1),l_x );           // [412]
                    F_N( "[L4Y_OOB]" ,0,(128-1),l_y );           // [412]
            };;                                                  // [412]
                                                                 // [412]
            if( i_lov_c4x ){ /** NOOP **/ };                     // [412]
            if( i_lov_c4y ){ /** NOOP **/ };                     // [412]
                                                                 // [412]
            let dcx =( 0 ); //: @dcx@ DistfromCenter - X ://     // [412]
            let dcy =( 0 ); //: @dcy@ DistfromCenter - Y ://     // [412]
                                                                 // [412]
            let e_x =( 0 ); //: @e_x@ distanceto_EDGE- X ://     // [412]
            let e_y =( 0 ); //: @e_y@ distanceto_EDGE- Y ://     // [412]
                                                                 // [412]
            let e_c =( 0 ); //: @e_c@ disttoEdge Closest ://     // [412]
                                                                 // [---]
            //:#_CENIS_2X2_CLUST_OF_4_PIX_#:[413]:-------://     // [413]
                                                                 // [413]
            if( l_x <=63 ){ x64 =( l_x        ); };;             // [413]
            if( l_y <=63 ){ y64 =( l_y        ); };;             // [413]
            if( l_x >=64 ){ x64 =( l_x-(64+0) ); };;             // [413]
            if( l_y >=64 ){ y64 =( l_y-(64+0) ); };;             // [413]
            if( d_bug >=1 ){                                     // [413]
                ASS( x64 === ( l_x % 64 ) , "[L_X_MOD]" );       // [413]
                ASS( y64 === ( l_y % 64 ) , "[L_Y_MOD]" );       // [413]
            };;                                                  // [413]
                                                                 // [413]
            if( l_x < 64 ){ dcx = (64-1)-(x64) ; };;             // [413][BUG][412]
            if( l_y < 64 ){ dcy = (64-1)-(y64) ; };;             // [413][BUG][412]
                                                                 // [413]
            if( l_x >=64 ){ dcx = ( 0  )+(x64) ; };;             // [413][BUG][412]
            if( l_y >=64 ){ dcy = ( 0  )+(y64) ; };;             // [413][BUG][412]
                                                                 // [---]
            //:-------:#_CENIS_2X2_CLUST_OF_4_PIX_#:[413]://     // [413]
                                                                 // [---]
            e_x =( (64-1)-dcx );                                 // [412]
            e_y =( (64-1)-dcy );                                 // [412]
                                                                 // [412]
            if( d_bug >=1 ){                                     // [412]
                                                                 // [---]
                ASS( x64 >= 0     , "[NEG_X64]" ) ;              // [413]
                ASS( y64 >= 0     , "[NEG_Y64]" ) ;              // [413]
                ASS( x64 <=(64-1) , "[POS_X64]" ) ;              // [413]
                ASS( y64 <=(64-1) , "[POS_Y64]" ) ;              // [413]
                                                                 // [---]
                ASS( dcx >= 0     , "[NEG_DCX]" ) ;              // [412]
                ASS( dcy >= 0     , "[NEG_DCY]" ) ;              // [412]
                ASS( dcx <=(64-1) , "[POS_DCX]" ) ;              // [412]
                ASS( dcy <=(64-1) , "[POS_DCX]" ) ;              // [412]
                                                                 // [---]
                ASS( e_x >= 0     , "[NEG_E_X]" ) ;              // [412]
                ASS( e_y >= 0     , "[NEG_E_Y]" ) ;              // [412]
                ASS( e_x <=(64-1) , "[POS_E_X]" ) ;              // [412]
                ASS( e_y <=(64-1) , "[POS_E_Y]" ) ;              // [412]
            };;                                                  // [412]
                                                                 // [412]
            if( e_y >= e_x ){                                    // [412]
                e_c =( e_x );                                    // [412]
            }else                                                // [412]
            if( e_x >= e_y ){                                    // [412]
                e_c =( e_y );                                    // [412]
            }else{                                               // [412]
                ERR("[E_X_E_Y_2022]");                           // [412]
            };;                                                  // [412]
                                                                 // [412]
            if( 0 === ( e_c % 2 ) ){                             // [412]
                                                                 // [412]
                o_til =( 0xFF0000FF );                           // [412]
            }else{                                               // [412]
                o_til =( 0x00000000 );                           // [412]
            };;                                                  // [412]
                                                                 // [412]
            return( o_til /** 32Bit_Binary_Tile_Value **/ );     // [412]
                                                                 // [412]
        //:---------------------------:#_GEN_CON_RING_#:[412]:// // [412]

    };; //:BOD_END[ GENERATOR_T00 ]:::::::::::::::::::::::::::// // [408]

    const   F_HARDTEX_PAT_H3X_H3Y = function //:::::::::::::::// // [406]
    PRIVATE_F_HARDTEX_PAT_H3X_H3Y(           //:::::::::::::::// // [406]
                                                                 // [406]
        i_pat   //: Input - PATtern enumeration :::::::::://     // [406]
    ,   i_h3x   //: Input - Hotel Cell X ( 0 | 1 | 2 ):::://     // [406]
    ,   i_h3y   //: Input - Hotel Cell Y ( 0 | 1 | 2 ):::://     // [406]
                                                                 // [406]
    ){  //:BOD_BEG[ PAT_H3X_H3Y ]:::::::::::::::::::::::::::::// // [406]
                                                                 // [---]
        LOG( "[HARDTEX][h3x,h3y]:" , [i_h3x,i_h3y] );            // [416]
                                                                 // [---]
        //:@_ERROR_CHECK_INPUTS_@:[407]:-----------------://     // [---]
        if( d_eci >= 1 ){                                        // [407]
        let OOBMMMV = OOB_MSG_MIN_MAX_VAL ;                      // [407]
            OOBMMMV( "[OOB_I_PAT]" , 0 ,  0  , i_pat );          // [407]
            OOBMMMV( "[OOB_I_H3X]" , 0 ,(3-1), i_h3x );          // [407]
            OOBMMMV( "[OOB_I_H3Y]" , 0 ,(3-1), i_h3y );          // [407]
        };;                                                      // [407]
        //:-----------------:@_ERROR_CHECK_INPUTS_@:[407]://     // [---]
        //:#_HARDTEX_PAT_VARS_#:[408]:-------------------://     // [408]
                                                                 // [408]
        let org_x =( i_h3x * 512 ); //: Origin_X ::::::::://     // [408]
        let org_y =( i_h3y * 512 ); //: Origin_Y ::::::::://     // [408]
                                                                 // [408]
        let dat_w =( 512 ); //: Dataset_WID_Of_LevelPack ://     // [408]
        let dat_h =( 512 ); //: Dataset_HIG_Of_LevelPack ://     // [408]
                                                                 // [408]
        let xc0 =( org_x +         0 ); //: XCoord - BEG ://     // [408]
        let xc1 =( org_x + dat_w - 1 ); //: XCoord - END ://     // [408]
                                                                 // [408]
        let yc0 =( org_y +         0 ); //: YCoord - BEG ://     // [408]
        let yc1 =( org_y + dat_h - 1 ); //: YCoord - END ://     // [408]
                                                                 // [408]
        let x_c ; //: @x_c@ : X-coordinate ::::::::::::::://     // [408]
        let y_c ; //: @x_c@ : Y-coordinate ::::::::::::::://     // [408]
                  //: @c_x@ : That would mean "Cell X"  :://     // [408]
                  //: @c_y@ : That would mean "Cell Y"  :://     // [408]
                                                                 // [408]
        let x5h ; //: @x5h@ : X coord , 0 to (512-1)  :::://     // [408]
        let y5h ; //: @y5h@ : Y coord , 0 to (512-1)  :::://     // [408]
                                                                 // [408]
        let c4x ; //: @lovec4x@ : LOV_Cell_4X4_X ::::::::://     // [408]
        let c4y ; //: @lovec4y@ : LOV_Cell_4X4_Y ::::::::://     // [408]
                                                                 // [408]
        let l4x ; //: @lovel4x@ : LOV_LOCA_4X4_X ::::::::://     // [408]
        let l4y ; //: @lovel4y@ : LOV_LOCA_4X4_Y ::::::::://     // [408]
                                                                 // [408]
        let bol ; //: @bol@ : Yes, set a tile here  :::::://     // [408]
        let til ; //: @til@ : Tile Value Using All 32Bits://     // [408]
                                                                 // [408]
        /// b32 ; //: @b32@ : Bits, 32 to encode tile. ::://     // [408]
        /// btv ; //: @btv@ ::::: Binary_Tile_Value :::::://     // [408]
                                                                 // [408]
        //:-------------------:#_HARDTEX_PAT_VARS_#:[408]://     // [408]
        //:#_SELECT_GEOBOOL_#:[408]:---------------------://     // [408]
                                                                 // [408]
        let B00 =( F_HARDTEX_B00_C4X_C4Y_L4X_L4Y );              // [408]
        let                  BOL_C4X_C4Y_L4X_L4Y =( null );      // [408]
        if( 0 === i_pat ){   BOL_C4X_C4Y_L4X_L4Y = B00 ; };      // [408]
        ASS(         null != BOL_C4X_C4Y_L4X_L4Y                 // [408]
        , "[OH_NO_YOUR_NILFN:BOL_C4X_C4Y_L4X_L4Y]"    );;;;      // [408]
                                                                 // [408]
        //:---------------------:#_SELECT_GEOBOOL_#:[408]://     // [408]
        //:#_SELECT_GEOTILE_#:[408]:---------------------://     // [408]
                                                                 // [408]
        let T00 =( F_HARDTEX_T00_C4X_C4Y_L4X_L4Y );              // [408]
        let                  TIL_C4X_C4Y_L4X_L4Y =( null );      // [408]
        if( 0 === i_pat ){   TIL_C4X_C4Y_L4X_L4Y = T00 ; };      // [408]
        ASS(         null != TIL_C4X_C4Y_L4X_L4Y                 // [408]
        , "[OH_NO_YOUR_NILFN:TIL_C4X_C4Y_L4X_L4Y]"    );;;;      // [408]
                                                                 // [408]
        //:---------------------:#_SELECT_GEOTILE_#:[408]://     // [408]
        //:#_LEVELPACK_PIXEL_LOOP_#:[408]:---------------://     // [408]
        for( y_c = yc0 ; y_c <= yc1 ; y_c ++ ){                  // [408]
        for( x_c = xc0 ; x_c <= xc1 ; x_c ++ ){                  // [408]
                                                                 // [408]
            x5h = ( x_c - org_x );                               // [408]
            y5h = ( y_c - org_y );                               // [408]
                                                                 // [408]
            c4x = F_M_F( x5h / 128 );                            // [408]
            c4y = F_M_F( y5h / 128 );                            // [408]
                                                                 // [408]
            l4x =( x5h - ( c4x * 128 ) );                        // [408]
            l4y =( y5h - ( c4y * 128 ) );                        // [408]
                                                                 // [408]
            //:#_USE_GENERATORS_#:[408]:-----------------://     // [408]
                if(   1===1  ){                                  // [415][408]
                    bol = BOL_C4X_C4Y_L4X_L4Y(                   // [408]
                              c4x,c4y,l4x,l4y );;                // [408]
                };;                                              // [408]
                if( bol >= 1 ){                                  // [415][BUG][408]
                    til = TIL_C4X_C4Y_L4X_L4Y(                   // [408]
                              c4x,c4y,l4x,l4y );;                // [408]
                                                                 // [---]
                    //:#_SET_TIL_AT_XYC_#:[414]:---------://     // [414]
                    if( 0x00000000 != til ){                     // [414]
                                                                 // [414]
                        let t_r , t_g , t_b , t_a ;;;;;;;;;;     // [414]
                                                                 // [414]
                        t_r =((( til >>> 24 )&( 0xFF )));;;;     // [414]
                        t_g =((( til >>> 16 )&( 0xFF )));;;;     // [414]
                        t_b =((( til >>>  8 )&( 0xFF )));;;;     // [414]
                        t_a =((( til >>>  0 )&( 0xFF )));;;;     // [414]
                                                                 // [414]
                        let p_i =( x_c + ( y_c * 2048 )   );     // [414]
                        let c_i =( p_i * 4                );     // [414]
                        let pix =( d_pix2048              );     // [414]
                                                                 // [414]
                        pix[ c_i+0 ]=( t_r );;;;;;;;;;;;;;;;     // [414]
                        pix[ c_i+1 ]=( t_g );;;;;;;;;;;;;;;;     // [414]
                        pix[ c_i+2 ]=( t_b );;;;;;;;;;;;;;;;     // [414]
                        pix[ c_i+3 ]=( t_a );;;;;;;;;;;;;;;;     // [414]
                                                                 // [414]
                        //:#_DO_NOT_FLAG_PIX2048_DIRTY_# ://     // [414]
                    };;                                          // [414]
                    //:---------:#_SET_TIL_AT_XYC_#:[414]://     // [414]
                };;                                              // [---]
            //:-----------------:#_USE_GENERATORS_#:[408]://     // [408]
        };;};; //:NEXT[ x_c , y_c ]::::::::::::::::::::::://     // [408]
        //:---------------:#_LEVELPACK_PIXEL_LOOP_#:[408]://     // [---]
        //:#_SUB_TEXTURE_UPDATE_#:[415]:-----------------://     // [415]
        {                                                        // [415]
            let bx0 = xc0 ;                                      // [415]
            let bx1 = xc1 ;                                      // [415]
                                                                 // [415]
            let by0 = yc0 ;                                      // [415]
            let by1 = yc1 ;                                      // [415]
                                                                 // [415]
            F_GPUSYNC_BX0_BX1_BY0_BY1(                           // [415]
                      bx0,bx1,by0,by1 );;                        // [415]
                                                                 // [415]
        }                                                        // [415]
        //:-----------------:#_SUB_TEXTURE_UPDATE_#:[415]://     // [415]
                                                                 // [---]
    };; //:BOD_END[ PAT_H3X_H3Y ]:::::::::::::::::::::::::::::// // [406]


//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [---][402]
//|                                               [ @$$$$$@ ]|// // [---][402]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __HARDTEX__|// // [---][402]
//|                                               [ @$$$$$@ ]|// // [---][402]
//|26|26|26|26|26|26|26|26|26|SUBS|26|26|26|26|26|26|26|26|26|// // [---][402]
//|29|29|29|29|29|29|29|29|29|SUBS|29|29|29|29|29|29|29|29|29|// // [471][---]
//|[ @$$$$$@ ]                                               |// // [471][---]
//|__FILE896__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [471][---]
//|[ @$$$$$@ ]                                               |// // [471][---]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [471][---]
                                                                 // [---][471] 
    const __m_o_n_k_e_y__w_r_e_n_c_h__m_a_c_r_o_s__=0 //////     // [---][471] 
    ,   F_FILE896_RGBA896_RGBA512 ="[FIX:RGBA896_PIX2048]"       // [---][471] 
    ,   F_FILE896_RGBA512_RGBA896 ="[FIX:PIX2048_RGBA896]"       // [---][471] 
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [---][471] 
                                                                 // [---][471] 
                                                                 // [---]
    //:#_EITHER_#::::::::[474]:==============================:// // [474]
    //:#_SAVEME_LOADME_#:[474]:==============================:// // [474]
    //:#_LOADME_SAVEME_#:[474]:==============================:// // [474]
    //:                                                      :// // [474]
    //: INDEX :                                              :// // [474]
    //:     L16_EITHER : L16_CHUNK (pix2048)<===>(rgba896)   :// // [474]
    //:     PF8_EITHER : PF8_CHUNK (pix2048)<===>(rgba896)   :// // [474]
    //:     T25_EITHER : T25_CHUNK (pix2048)<===>(rgba896)   :// // [474]
    //:                                                      :// // [474]
    //:- - - - - - - - - - - - - -- - - - - - - - - - - - - -:// // [474]
                                                                 // [474]
        const   F_FILE896_HI9_L16_EITHER = function              // [474]
        PRIVATE_F_FILE896_HI9_L16_EITHER(                        // [474]
                                                                 // [474]
            i_hi9   //: @i_hi9@ : HotelIndex_9of ://             // [474]
        ,   i_l16   //: @i_l16@ : LevelPackChunk ://             // [474]
        ,   i_either    //: [ saveme || loadme ] ://             // [474]
                                                                 // [474]
        ){                                                       // [474]
            ERR( "[TO_FUCKING_DO_MY_BITCHES_2022]" );            // [474]
        };;                                                      // [474]
        const   F_FILE896_HI9_PF8_EITHER = function              // [474]
        PRIVATE_F_FILE896_HI9_PF8_EITHER(                        // [474]
                                                                 // [474]
            i_hi9   //: @i_hi9@ : HotelIndex_9of ://             // [474]
        ,   i_pf8   //: @i_pf8@ : PreFabChunk8of ://             // [474]
        ,   i_either    //: [ saveme || loadme ] ://             // [474]
                                                                 // [474]
        ){                                                       // [474]
            ERR( "[TO_FUCKING_DO_MY_BITCHES_2022]" );            // [474]
        };;                                                      // [474]
        const   F_FILE896_HI9_T25_EITHER = function              // [474]
        PRIVATE_F_FILE896_HI9_T25_EITHER(                        // [474]
                                                                 // [474]
            i_hi9   //: @i_hi9@ : HotelIndex_9of ://             // [474]
        ,   i_t25   //: @i_t25@ : ThumbChunk_25of://             // [474]
        ,   i_either    //: [ saveme || loadme ] ://             // [474]
                                                                 // [474]
        ){                                                       // [474]
            ERR( "[TO_FUCKING_DO_MY_BITCHES_2022]" );            // [474]
        };;                                                      // [474]
    //:==============================:#_LOADME_SAVEME_#:[474]:// // [474]
    //:==============================:#_SAVEME_LOADME_#:[474]:// // [474]
    //:==============================:#_EITHER_#::::::::[474]:// // [474]
    //:#_SAVEME_#:[474]:=====================================:// // [474]
                                                                 // [474]
        const   F_FILE896_HI9_L16_SAVEME = function              // [474]
        PRIVATE_F_FILE896_HI9_L16_SAVEME(                        // [474]
                                                                 // [474]
            i_hi9   //: @i_hi9@ : HotelIndex_9of ://             // [474]
        ,   i_l16   //: @i_l16@ : LevelPackChunk ://             // [474]
                                                                 // [474]
        ){                                                       // [474]
            let hi9   =(i_hi9);;;;;;;;;;;;;;;;;;;;;;             // [474]
            let l16   =(i_l16);;;;;;;;;;;;;;;;;;;;;;             // [474]
            let saveme=(c_file896_saveme_intodsk);;;             // [474]
                                                                 // [474]
                F_FILE896_HI9_L16_EITHER( //////////             // [474]
                          hi9,l16,saveme );;;;;;;;;;             // [474]
        };;                                                      // [474]
        const   F_FILE896_HI9_PF8_SAVEME = function              // [474]
        PRIVATE_F_FILE896_HI9_PF8_SAVEME(                        // [474]
                                                                 // [474]
            i_hi9   //: @i_hi9@ : HotelIndex_9of ://             // [474]
        ,   i_pf8   //: @i_pf8@ : PreFabChunk8of ://             // [474]
                                                                 // [474]
        ){                                                       // [474]
            let hi9   =(i_hi9);;;;;;;;;;;;;;;;;;;;;;             // [474]
            let pf8   =(i_pf8);;;;;;;;;;;;;;;;;;;;;;             // [474]
            let saveme=(c_file896_saveme_intodsk);;;             // [474]
                                                                 // [474]
                F_FILE896_HI9_PF8_EITHER( //////////             // [474]
                          hi9,pf8,saveme );;;;;;;;;;             // [474]
        };;                                                      // [474]
        const   F_FILE896_HI9_T25_SAVEME = function              // [474]
        PRIVATE_F_FILE896_HI9_T25_SAVEME(                        // [474]
                                                                 // [474]
            i_hi9   //: @i_hi9@ : HotelIndex_9of ://             // [474]
        ,   i_t25   //: @i_t25@ : ThumbChunk_25of://             // [474]
                                                                 // [474]
        ){                                                       // [474]
            let hi9   =(i_hi9);;;;;;;;;;;;;;;;;;;;;;             // [474]
            let t25   =(i_t25);;;;;;;;;;;;;;;;;;;;;;             // [474]
            let saveme=(c_file896_saveme_intodsk);;;             // [474]
                                                                 // [474]
                F_FILE896_HI9_T25_EITHER( //////////             // [474]
                          hi9,t25,saveme );;;;;;;;;;             // [474]
        };;                                                      // [474]
    //:=====================================:#_SAVEME_#:[474]:// // [474]
    //:#_LOADME_#:[474]:=====================================:// // [474]
                                                                 // [474]
        const   F_FILE896_HI9_L16_LOADME = function              // [474]
        PRIVATE_F_FILE896_HI9_L16_LOADME(                        // [474]
                                                                 // [474]
            i_hi9   //: @i_hi9@ : HotelIndex_9of ://             // [474]
        ,   i_l16   //: @i_l16@ : LevelPackChunk ://             // [474]
                                                                 // [474]
        ){                                                       // [474]
            let hi9   =(i_hi9);;;;;;;;;;;;;;;;;;;;;;             // [474]
            let l16   =(i_l16);;;;;;;;;;;;;;;;;;;;;;             // [474]
            let loadme=(c_file896_loadme_fromdsk);;;             // [474]
                                                                 // [474]
                F_FILE896_HI9_L16_EITHER( //////////             // [474]
                          hi9,l16,loadme );;;;;;;;;;             // [474]
        };;                                                      // [474]
        const   F_FILE896_HI9_PF8_LOADME = function              // [474]
        PRIVATE_F_FILE896_HI9_PF8_LOADME(                        // [474]
                                                                 // [474]
            i_hi9   //: @i_hi9@ : HotelIndex_9of ://             // [474]
        ,   i_pf8   //: @i_pf8@ : PreFabChunk8of ://             // [474]
                                                                 // [474]
        ){                                                       // [474]
            let hi9   =(i_hi9);;;;;;;;;;;;;;;;;;;;;;             // [474]
            let pf8   =(i_pf8);;;;;;;;;;;;;;;;;;;;;;             // [474]
            let loadme=(c_file896_loadme_fromdsk);;;             // [474]
                                                                 // [474]
                F_FILE896_HI9_PF8_EITHER( //////////             // [474]
                          hi9,pf8,loadme );;;;;;;;;;             // [474]
        };;                                                      // [474]
        const   F_FILE896_HI9_T25_LOADME = function              // [474]
        PRIVATE_F_FILE896_HI9_T25_LOADME(                        // [474]
                                                                 // [474]
            i_hi9   //: @i_hi9@ : HotelIndex_9of ://             // [474]
        ,   i_t25   //: @i_t25@ : ThumbChunk_25of://             // [474]
                                                                 // [474]
        ){                                                       // [474]
            let hi9   =(i_hi9);;;;;;;;;;;;;;;;;;;;;;             // [474]
            let t25   =(i_t25);;;;;;;;;;;;;;;;;;;;;;             // [474]
            let loadme=(c_file896_loadme_fromdsk);;;             // [474]
                                                                 // [474]
                F_FILE896_HI9_T25_EITHER( //////////             // [474]
                          hi9,t25,loadme );;;;;;;;;;             // [474]
        };;                                                      // [474]
    //:=====================================:#_LOADME_#:[474]:// // [474]
    //:#_LETS_FUCKING_DO_THIS_#:[475]:-----------------------:// // [475][---]

    const   F_FILE896_RGBA896_PIX2048_H3X_H3Y = function         // [473][471]
    PRIVATE_F_FILE896_RGBA896_PIX2048_H3X_H3Y(                   // [473][471]
                                                                 // [---][471] 
        i_rgba896                                                // [---][471] 
    ,   i_pix2048                                                // [---][471] 
    ,   i_h3x       //: @h3x : Hotel_Cell_0_1_2_X_axis ::://     // [473][---]
    ,   i_h3y       //: @h3y : Hotel_Cell_0_1_2_X_axis ::://     // [473][---]
                                                                 // [---][471]
    ){                                                           // [---][471]
        ASS( i_rgba896 === d_rgba896 ,"[2022_11_15:254PM]");     // [---][471]
        ASS( i_pix2048 === d_pix2048 ,"[2022_11_15:255PM]");     // [---][471]
                                                                 // [--------]
        //:#_FILE896_H3X_H3Y_VARS_#:[475]:---------------://     // [475][---]
                                                                 // [475][---]
        let  hi9 ; //: @hi9@ : Hotel 3X3 Coord As 1DIndex://     // [475][---]
        let  c49 ; //: @c49@ : Generic Chunk Index ::::::://     // [475][---]
        let  c49kind ; //: @c49kind@ : ChunkKindOf[ c49 ]://     // [475][---]
        let  l16 ; //: @l16@ : LevPak[ c49 ]Chunk_Index  ://     // [475][---]
        let  pf8 ; //: @pf8@ : PreFab[ c49 ]Chunk_Index  ://     // [475][---]
        let  t25 ; //: @t25@ : ThumbN[ c49 ]Chunk_Index  ://     // [475][---]
                                                                 // [475][---]
        //:---------------:#_FILE896_H3X_H3Y_VARS_#:[475]://     // [475][---]
        //:#_REDUNDANT_2022_#:[475]:---------------------://     // [475][---]
        //:#_LOAD_S_BITCHES_#:[475]:---------------------://     // [475][---]
                                                    //pc01//     // [475][---]
            hi9 =( i_h3x + ( i_h3y * 3 ) );         //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
            for( c49 = 0 ; c49 <=(49-1) ; c49++ ){  //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                c49kind = d_c49_c49kind[ c49 ];     //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                if( c_c49_l16 === c49kind ){        //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                    l16 = d_c49_l16[ c49 ];         //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                    F_FILE896_HI9_L16_LOADME(       //pc01//     // [475][---]
                              hi9,l16        );;    //pc01//     // [475][---]
                }else                               //pc01//     // [475][---]
                if( c_c49_pf8 === c49kind ){        //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                    pf8 = d_c49_pf8[ c49 ];         //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                    F_FILE896_HI9_PF8_LOADME(       //pc01//     // [475][---]
                              hi9,pf8        );;    //pc01//     // [475][---]
                }else                               //pc01//     // [475][---]
                if( c_c49_t25 === c49kind ){        //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                    t25 = d_c49_t25[ c49 ];         //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                    F_FILE896_HI9_T25_LOADME(       //pc01//     // [475][---]
                              hi9,t25        );;    //pc01//     // [475][---]
                }else{                              //pc01//     // [475][---]
                    ERR("[@ITC_2022@::LOADME]");    //pc01//     // [475][---]
                };;                                 //pc01//     // [475][---]
            };;                                     //pc01//     // [475][---]
        //:---------------------:#_LOAD_S_BITCHES_#:[475]://     // [475][---]
        //:---------------------:#_REDUNDANT_2022_#:[475]://     // [475][---]
                                                                 // [--------]
    };;                                                          // [---][471]
                                                                 // [---][471]
    const   F_FILE896_PIX2048_RGBA896_H3X_H3Y = function         // [473][471]
    PRIVATE_F_FILE896_PIX2048_RGBA896_H3X_H3Y(                   // [473][471]
                                                                 // [---][471] 
        i_pix2048                                                // [---][471] 
    ,   i_rgba896                                                // [---][471] 
    ,   i_h3x       //: @h3x : Hotel_Cell_0_1_2_X_axis ::://     // [473][---]
    ,   i_h3y       //: @h3y : Hotel_Cell_0_1_2_X_axis ::://     // [473][---]
                                                                 // [---][471] 
    ){                                                           // [---][471] 
        ASS( i_rgba896 === d_rgba896 ,"[2022_11_15:256PM]");     // [---][471] 
        ASS( i_pix2048 === d_pix2048 ,"[2022_11_15:257PM]");     // [---][471] 
                                                                 // [--------]
        //:#_FILE896_H3X_H3Y_VARS_#:[475]:---------------://     // [475][---]
                                                                 // [475][---]
        let  hi9 ; //: @hi9@ : Hotel 3X3 Coord As 1DIndex://     // [475][---]
        let  c49 ; //: @c49@ : Generic Chunk Index ::::::://     // [475][---]
        let  c49kind ; //: @c49kind@ : ChunkKindOf[ c49 ]://     // [475][---]
        let  l16 ; //: @l16@ : LevPak[ c49 ]Chunk_Index  ://     // [475][---]
        let  pf8 ; //: @pf8@ : PreFab[ c49 ]Chunk_Index  ://     // [475][---]
        let  t25 ; //: @t25@ : ThumbN[ c49 ]Chunk_Index  ://     // [475][---]
                                                                 // [475][---]
        //:---------------:#_FILE896_H3X_H3Y_VARS_#:[475]://     // [475][---]
        //:#_REDUNDANT_2022_#:[475]:---------------------://     // [475][---]
        //:#_SAVE_S_BITCHES_#:[475]:---------------------://     // [475][---]
                                                    //pc01//     // [475][---]
            hi9 =( i_h3x + ( i_h3y * 3 ) );         //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
            for( c49 = 0 ; c49 <=(49-1) ; c49++ ){  //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                c49kind = d_c49_c49kind[ c49 ];     //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                if( c_c49_l16 === c49kind ){        //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                    l16 = d_c49_l16[ c49 ];         //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                    F_FILE896_HI9_L16_SAVEME(       //pc01//     // [475][---]
                              hi9,l16        );;    //pc01//     // [475][---]
                }else                               //pc01//     // [475][---]
                if( c_c49_pf8 === c49kind ){        //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                    pf8 = d_c49_pf8[ c49 ];         //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                    F_FILE896_HI9_PF8_SAVEME(       //pc01//     // [475][---]
                              hi9,pf8        );;    //pc01//     // [475][---]
                }else                               //pc01//     // [475][---]
                if( c_c49_t25 === c49kind ){        //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                    t25 = d_c49_t25[ c49 ];         //pc01//     // [475][---]
                                                    //pc01//     // [475][---]
                    F_FILE896_HI9_T25_SAVEME(       //pc01//     // [475][---]
                              hi9,t25        );;    //pc01//     // [475][---]
                }else{                              //pc01//     // [475][---]
                    ERR("[@ITC_2022@::SAVEME]");    //pc01//     // [475][---]
                };;                                 //pc01//     // [475][---]
            };;                                     //pc01//     // [475][---]
        //:---------------------:#_SAVE_S_BITCHES_#:[475]://     // [475][---]
        //:---------------------:#_REDUNDANT_2022_#:[475]://     // [475][---]
                                                                 // [--------]
    };;                                                          // [---][471] 
    //:-----------------------:#_LETS_FUCKING_DO_THIS_#:[475]:// // [475][---]
                                                                 // [---][471] 
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [471][---] 
//|                                               [ @$$$$$@ ]|// // [471][---]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __FILE896__|// // [471][---]
//|                                               [ @$$$$$@ ]|// // [471][---]
//|29|29|29|29|29|29|29|29|29|SUBS|29|29|29|29|29|29|29|29|29|// // [471][---]
//|25|25|25|25|25|25|25|25|25|SUBS|25|25|25|25|25|25|25|25|25|// // [---][361]
//|[ @$$$$$@ ]                                               |// // [---][361]
//|__FILEMOB__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [---][361]
//|[ @$$$$$@ ]                                               |// // [---][361]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [---][361]
                                                                 // [---]

    //:#_MOBTASK_SYSTEM_SECTION_#:[393]:=====================:// // [393][--------]
                                                                 // [393][--------]
        const   F_FILEMOB_TASKILL_TRY = function                 // [393][MOV][391]
        PRIVATE_F_FILEMOB_TASKILL_TRY(                           // [393][MOV][391]
                                                                 // [393][MOV][391]
            /** VOID **/                                         // [393][MOV][391]
        ){  //:BEG_BOD[ TASKILL_TRY ]:::::::::::::::::::::::::// // [393][MOV][391]
                                                                 // [393][MOV][391]
            if( d_filemob_taskhas >= 1 ){                        // [393][MOV][391]
                                                                 // [393][MOV][391]
                let     enu =( d_filemob_taskenu        );       // [393][MOV][391]
                let cankill =( d_filemob_cankill[ enu ] );       // [393][MOV][391]
                                                                 // [393][MOV][391]
                if( cankill >= 1 ){                              // [393][MOV][391]
                                                                 // [393][MOV][391]
                    d_filemob_taskill =( 0 );                    // [393][MOV][391]
                    d_filemob_taskhas =( 0 );                    // [393][MOV][391]
                    d_filemob_taskenu =( 0 );                    // [393][MOV][391]
                    F_FILEMOB_TASKDAT_RES_ALL( );                // [393][MOV][391]
                };;                                              // [393][MOV][391]
            };;                                                  // [393][MOV][391]
        };; //:END_BOD[ TASKILL_TRY ]:::::::::::::::::::::::::// // [393][MOV][391]
                                                                 // [393][--------]
    //:=====================:#_MOBTASK_SYSTEM_SECTION_#:[393]:// // [393][--------]

    //:#_MAKE_COMMAND_STRING_#:[371]:========================:// // [371]
                                                                 // [371]
        const  F_FILEMOB_COMHASH = "[USE_DATA_STRING]";          // [371]
        const    FILEMOB_COMHASH = "[USE_DATA_STRING]";          // [371]
        const            COMHASH = "[USE_DATA_STRING]";          // [371]
                                                                 // [371]
    //:========================:#_MAKE_COMMAND_STRING_#:[371]:// // [371]
    //:#_MAKE_DATA_KIND_STRING_#:[371]:======================:// // [371]
                                                                 // [371]
        const   F_FILEMOB_DATHASH = function                     // [371]
        PRIVATE_F_FILEMOB_DATHASH(                               // [371]
                                                                 // [371]
            i_dathash                                            // [371]
        ){                                                       // [371]
            if( d_eci >= 1 ){                                    // [371]
                ASS_STR( i_dathash , "[NOT_STR:DATHASH]" );      // [371]
            };;                                                  // [371]
                                                                 // [---]
            //: #_DONE_MAKE_DATHASH_PRE_APPROVED_# ://           // [372][371]
            if( c_dathash_png_512 === i_dathash                  // [---][372]
            ||  c_dathash_pix_512 === i_dathash                  // [375][---]
            ||  c_dathash_err_und === i_dathash                  // [---][372] 
            ){                                                   // [---][372] 
                /** Do nothing. Valid Hash **/                   // [---][372] 
            }else{                                               // [---][372] 
                ERR("[FUCK_YOU_AND_YOUR_HASHES_2022]");          // [---][372] 
            };;                                                  // [---][372] 
                                                                 // [---]
            let o_dathash =( i_dathash );                        // [371]
            return(          o_dathash );                        // [371]
        };;                                                      // [371]
                                                                 // [371]
    //:======================:#_MAKE_DATA_KIND_STRING_#:[371]:// // [371]
    //:#_FILE_MOB_ERROR_CHECKERS_#:[363]:====================:// // [---]
                                                                 // [363]
        const   F_FILEMOB_ASS_PIXARRA_512 = function             // [---][363]
        PRIVATE_F_FILEMOB_ASS_PIXARRA_512(                       // [---][363]
                                                                 // [---][363]
            arg_pixarra //: pixarra - Raw Uint8 BufferDat://     // [---][363]
        ,   err_pixarra //: pixarra - Trace_Back_Message ://     // [---][363]
        ){                                                       // [---][363]
            if( F_YES_ARR_U08( arg_pixarra ) ){                  // [369][363]
                /** GOOD_ARRAY_AS_WANTED **/                     // [---][363]
            }else{                                               // [---][363]
                let typestr =( F_TYPESTR( arg_pixarra ) );       // [369][---]
                LOG( "[typestr]:::::::::" , typestr     );       // [369][---]
                LOG( "[arg_pixarra]:::::" , arg_pixarra );       // [369][---]
                ERR( "[err_pixarra:001]:" + err_pixarra );       // [---][363]
            };;                                                  // [---][363]
            if( (512*512*4) !== arg_pixarra.length ){            // [---][363]
                ERR( "[err_pixarra:002]:" + err_pixarra );       // [---][363]
            };;                                                  // [---][363]
        };;                                                      // [---][363]
        const   F_FILEMOB_ASS_BINARRA_512 = function             // [---][363]
        PRIVATE_F_FILEMOB_ASS_BINARRA_512(                       // [---][363]
                                                                 // [---][363]
            arg_binarra //: binarra - Raw Uint8 BufferDat://     // [---][363]
        ,   err_binarra //: binarra - Trace_Back_Message ://     // [---][363]
        ){                                                       // [---][363]
            if( F_YES_ARR_U08( arg_binarra ) ){                  // [369][363]
                /** GOOD_ARRAY_AS_WANTED **/                     // [---][363]
            }else{                                               // [---][363]
                ERR( "[err_binarra:001]:" + err_binarra );       // [---][363]
            };;                                                  // [---][363]
            if( arg_binarra.length < 42 /**#_PNG_042_#**/ ){     // [---][363]
                                                                 // [---][363]
                //:#_WE_DONT_KNOW_EXACT_PNG_FILE_SIZE_#://       // [---][363]
                ERR( "[err_binarra:002]:" + err_binarra );       // [---][363]
            };;                                                  // [---][363]
        };;                                                      // [---][363]
    //:====================:#_FILE_MOB_ERROR_CHECKERS_#:[363]:// // [363]
    //:#_FILE_MOB_PNG_WRAPPERS_#:[363]:======================:// // [363]
                                                                 // [363]
        const   F_FILEMOB_ENC_512 = "[512_PIXARRA_BINARRA]";     // [363]
        const   F_FILEMOB_DEC_512 = "[512_BINARRA_PIXARRA]";     // [363]
        const   F_FILEMOB_512_ENC = "[512_PIXARRA_BINARRA]";     // [363]
        const   F_FILEMOB_512_DEC = "[512_BINARRA_PIXARRA]";     // [363]
                                                                 // [363]
        const   F_FILEMOB_512_PIXARRA_BINARRA = function         // [363]
        PRIVATE_F_FILEMOB_512_PIXARRA_BINARRA(                   // [363]
                                                                 // [363]
            i_pixarra //: INPUT  - PIXel   - ARRay  :::::://     // [363]
        ,   o_binarra //: OUTPUT - BINaray - ARRay  :::::://     // [363]
        ){                                                       // [363]
            F_FILEMOB_ASS_PIXARRA_512( i_pixarra                 // [363]
                                   , "[i_pixarra]" );;           // [363]
            F_FILEMOB_ASS_BINARRA_512( o_binarra                 // [363]
                                   , "[o_binarra]" );;           // [363]
                                                                 // [---]
            //:#_OUTPUT_NUMBER_OF_USED_BYTES_#:[364]:----://     // [364]
                                                                 // [364]
                var o_binarra_len =( 0 );                        // [364]
                                                                 // [364]
            //:----:#_OUTPUT_NUMBER_OF_USED_BYTES_#:[364]://     // [364]
            //:#_UPNG_ENCODE_#:[364]:--------------------://     // [364]
            {                                                    // [364]
                let bytedex_binarra =( 0 );                      // [364]
                let numbyte_binarra =( 0 );                      // [364]
                let trashme_binarra = UPNG.encode(               // [364]
                                                                 // [364]
                    [i_pixarra] //:ArrayOf_Frames://             // [364]
                ,   512         //:Width_InPixels://             // [364]
                ,   512         //:HeightInPixels://             // [364]
                ,   (0)         //:ZERO==LOSSLESS://             // [364]
                );;                                              // [364]

                if( !( trashme_binarra ) ){                      // [369]
                    ERR("[#_UPNG_IS_NOT_ALRIGHT_2022_#]");       // [369]
                }else{                                           // [369]
                    LOG( "[trashme_binarra]"                     // [369]
                    ,      trashme_binarra  );;                  // [369]
                };;                                              // [369]
                                                                 // [---][---]
                //:#_INLINE_UPNG_DEBUG_:[376]:-----------://     //      [376]
                if( !!trashme_binarra      ){ //: TRUTHY ://     //      [376]
                if( d_bugline_3pc_png >= 1 ){ //: _DEBUG ://     //      [376]
                                                                 //      [376]
                    let png_bin ; //: .PNG Binary File   ://     //      [376]
                    let buf_3pc ; //: Buffer - @_3_P_C_@ ://     //      [376]
                    let img_3pc ; //: Image  - @_3_P_C_@ ://     //      [376]
                    let arr_buf ; //: Array_Buffer ::::::://     //      [376]
                    let pix_arr ; //:#_WTF_PIX_ARR_2022_#://     // [377][---]
                                                                 //      [376]
                    png_bin =( trashme_binarra );                //      [376]
                    buf_3pc = UPNG.decode(  png_bin   );         //      [376]
                    img_3pc = UPNG.toRGBA8( buf_3pc );           //      [376]
                    arr_buf =( img_3pc[ 0 ] );                   //      [376]
                    pix_arr =( new Uint8Array( arr_buf ) );      // [377][---]
                                                                 //      [376]
                    ASS( (512*512*4) === pix_arr.byteLength      //      [376]
                    ,  "[ARRAY_BUFFER_IS_FUCKED_2022]"   );;     //      [376]
                                                                 //      [376]
                    let dex ;                                    //      [376]
                    let m_i =( (512*512*4) - 1 );                //      [376]
                    let byteori ; //: Byte_ORIginal ://          //      [376]
                    let bytenew ; //: Byte_NEW      ://          //      [376]
                    for( dex = 0 ; dex <= m_i ; dex ++ ){        //      [376]
                                                                 //      [376]
                            byteori =( i_pixarra[ dex ] );       //      [376]
                            bytenew =(   pix_arr[ dex ] );       // [377][BUG][376]
                        if( byteori                              //      [376]
                        !=  bytenew                              //      [376]
                        ){                                       //      [376]
                            LOG( "[byteori]:" , byteori );       //      [376]
                            LOG( "[bytenew]:" , bytenew );       //      [376]
                            LOG( "[i_pixarra.byteLength]"        //      [376]
                            ,      i_pixarra.byteLength );;      //      [376]
                            LOG( "[..pix_arr.byteLength]"        // [377][376]
                            ,        pix_arr.byteLength );;      // [377][376]
                            ERR("[INLINE_PNG_TEST_FAILED]");     //      [376]
                        };;                                      //      [376]
                    };;                                          //      [376]
                                                                 //      [376]
                };;};;                                           //      [376]
                //:-----------:#_INLINE_UPNG_DEBUG_:[376]://     //      [376]
                //:#_COPY_PNG_BINARY_#:[378]:------------://     // [378][---]
                {                                                // [378][---]
                    let pngbyte =( 0 /** .PNG Byte **/ );        // [378][---]
                    let png_arr =( new Uint8Array(               // [378][---]
                                   trashme_binarra ));;          // [378][---]
                                                                 // [---][---]
                        numbyte_binarra =(                       // [---][364]
                        trashme_binarra.byteLength );;           // [---][369][BUG][364]
                    for(bytedex_binarra = 0                      // [---][364]
                    ;   bytedex_binarra <=(numbyte_binarra-1)    // [---][364]
                    ;   bytedex_binarra ++                       // [---][364]
                    ){                                           // [---][364]
                        pngbyte=( png_arr[                       // [378][---]
                                  bytedex_binarra ]);;           // [378][---]
                                                                 // [378][---]
                        if( d_bug >= 1 ){                        // [378][---]
                            ASS_INT( pngbyte , "[PNGBYTE]" );    // [378][---]
                        };;                                      // [378][---]
                                                                 // [---][---]
                        o_binarra[       bytedex_binarra ]=(     // [---][364]
                                                    pngbyte );;  // [378][BUG][364]
                    };;                                          // [---][364]
                }                                                // [378][---]
                //:------------:#_COPY_PNG_BINARY_#:[378]://     // [378][---]

                delete trashme_binarra ;                         // [---][364]
                                                                 // [---][364]
                o_binarra_len =( numbyte_binarra );              // [---][364]
            }                                                    // [---][364]
            //:--------------------:#_UPNG_ENCODE_#:[364]://     // [---][364]
            //:#_RETURN_NUM_USED_BYTES_#:[364]:----------://     // [---][364]
                                                                 // [364][---]
                if( !(o_binarra_len >= 42 ) ){                   // [369][364]

                    let bin_len=( o_binarra_len );               // [369][---]
                    LOG( "[BIN_LEN]:" , bin_len );               // [369][---]

                    ERR("[B42][OH_FUCK_NUCLEAR_WAR_2022]");      // [369][364]
                };;                                              // [369][364]

                return( o_binarra_len  /**BINLEN_42**/);         // [---][364]
                                                                 // [---][364]
            //:----------:#_RETURN_NUM_USED_BYTES_#:[364]://     // [---][364]
                                                                 // [---]
        };;                                                      // [363]
        const   F_FILEMOB_512_BINARRA_PIXARRA = function         // [373][363]
        PRIVATE_F_FILEMOB_512_BINARRA_PIXARRA(                   // [363]
                                                                 // [363]
            i_binarra     //: INPUT  - BINarray - ARRay :://     // [363]
        ,   i_binarra_len //: INPUT  - BINarray - LEN   :://     // [370]
        ,   o_pixarra     //: OUTPUT - PIXel    - ARRay :://     // [363]
        ){                                                       // [363]
            F_FILEMOB_ASS_BINARRA_512( i_binarra                 // [363]
                                   , "[i_binarra]" );;           // [363]
            F_FILEMOB_ASS_PIXARRA_512( o_pixarra                 // [363]
                                   , "[o_pixarra]" );;           // [363]
                                                                 // [---][---]
            //:#_FILEMOB_DECODER_VARS_#:[370]:-----------://     //      [370]
                                                                 //      [370]
                var o_k=(1) ;                                    //      [370]
                var dex,nob ;                                    //      [370]
                var nob_png =( i_binarra_len             );      //      [370]
                var got_png =( new Uint8Array( nob_png ) );      //      [370]
                                                                 //      [370]
                var buf_3pc ; //: buffer:3rd_party_code :://     //      [370]
                var img_3pc ; //: image::3rd_party_code :://     //      [370]
                var arr_buf ; //: Array_Buffer ::::::::::://     //      [370]
                let pix_arr ; //: #_WTF_PIX_ARR_2022_#   ://     // [377][---]
                                                                 //      [370]
            //:-----------:#_FILEMOB_DECODER_VARS_#:[370]://     //      [370]
            //:#_COPY_USABLE_BYTES_#:[370]:--------------://     //      [370]
            if( o_k >= 1 ){                                      //      [370]
                for(dex = 0 ; dex <=( nob_png-1 ) ; dex++){      //      [370]
                                                                 //      [370]
                    got_png[ dex ]=( i_binarra[ dex ] );         //      [370]
                };;                                              //      [370]
            };;                                                  //      [370]
            //:--------------:#_COPY_USABLE_BYTES_#:[370]://     //      [370]
            //:#_DECODE_THAT_SHIT_#:[370]:---------------://     //      [370]
            if( o_k >= 1 ){                                      //      [370]
                try{                                             //      [370]
                                                                 //      [370]
                    LOG(    "[UPNG.decode]" , "[BEG]" );         //      [370]
                    buf_3pc = UPNG.decode(  got_png   );         //      [370]
                    LOG(    "[UPNG.decode]" , "[END]" );         //      [370]
                                                                 //      [370]
                    img_3pc = UPNG.toRGBA8( buf_3pc );           //      [370]
                    arr_buf =( img_3pc[ 0 ] );                   //      [370]
                    pix_arr =( new Uint8Array( arr_buf ) );      // [377][---]
                                                                 //      [370]
                }catch( i_err ){                                 //      [370]
                                                                 // [---]
                    MSG( "[UPNG_DECODE_FAILURE_OF:got_png]" );   // [375]
                    LOG( "[i_err]:" , i_err     );               // [375]
                    LOG( "[got_png.byteLength]:"                 // [375]
                    ,      got_png.byteLength   );               // [375]
                    LOG( "[nob_png]:" , nob_png );               // [375]
                                                                 // [---][---]
                    o_k=( 0 );                                   // [370][---]
                };;                                              // [370][---]
            };;                                                  // [370][---]
            //:---------------:#_DECODE_THAT_SHIT_#:[370]://     // [370][---]
            //:#_COPY_INTO_OUTPUT_#:[370]:---------------://     //      [370]
            if( o_k >= 1 ){                                      //      [370]
                if( (512*512*4) != pix_arr.byteLength ){         // [377][370]
                                                                 //      [370]
                    YEL( "[BAD_LEN:pix_arr]"            );       // [377][370]
                    LOG( "[LOG_BUF:pix_arr]:" , pix_arr );       // [377][370]
                                                                 //      [370]
                    o_k=( 0 - 404 );                             //      [370]
                }else{                                           //      [370]
                    o_k=( 101 );                                 //      [370]
                    nob=( ((512*512*4)) );                       //      [370]
                    for(dex = 0 ; dex<=(nob-1) ; dex++ ){        //      [370]
                                                                 //      [370]
                        o_pixarra[ dex ]=( pix_arr[ dex ] );     // [377][BUG][370]
                    };;                                          //      [370]
                };;                                              //      [370]
            };;                                                  //      [370]
            //:---------------:#_COPY_INTO_OUTPUT_#:[370]://     //      [370]
            //:#_FUCK_YOU_GARBAGE_MAN_#:[370]:-----------://     //      [370] 
                                                                 //      [370] 
                delete got_png ;                                 //      [370] 
                delete pix_arr ;                                 // [377][---]
                                                                 //      [370] 
            //:-----------:#_FUCK_YOU_GARBAGE_MAN_#:[370]://     //      [370] 
            //:#_RETURN_ZERO_IF_FAILURE_#:[373]:---------://     // [373][---]
            if( o_k <= 0 ){ nob =( 0 ); };                       // [373][---]
            if( o_k >= 1 ){ ASS( nob >= 42,"[NOB_2022]" );};     // [373][---]
            return( nob );                                       // [373][---]
            //:---------:#_RETURN_ZERO_IF_FAILURE_#:[373]://     // [373][---]
                                                                 // [---][---]
        };;                                                      // [363]
    //:======================:#_FILE_MOB_PNG_WRAPPERS_#:[363]:// // [363]
                                                                 // [---]
    const   F_FILEMOB_LOCSAVE = function                         // [362]
    PRIVATE_F_FILEMOB_LOCSAVE(                                   // [362]
                                                                 // [362]
        i_h3x   //: Hotel_Coordinate:To_Save : X_AXIS :::://     // [362]
    ,   i_h3y   //: Hotel_Coordinate:To_Save : Y_AXIS :::://     // [362]
    ){                                                           // [362]
        //:#_ERROR_CHECK_H3X_H3Y_#:----------------------://     // [362]
        if( d_eci >= 1 ){                                        // [362]
            if( !( i_h3x >= 0 && i_h3x <=(3-1) ) ){              // [362]
                ERR("[OOB_H3X:LOCSAVE]");                        // [362]
            };;                                                  // [362]
            if( !( i_h3y >= 0 && i_h3y <=(3-1) ) ){              // [362]
                ERR("[OOB_H3Y:LOCSAVE]");                        // [362]
            };;                                                  // [362]
        };;                                                      // [362]
        //:----------------------:#_ERROR_CHECK_H3X_H3Y_#://     // [362]
        //:#_COPY_MEMORY_INTO_512_X_512_#:[362]:---------://     // [362]
                                                                 // [362]
            let a_0 = d_mp0_512 ;  //:@a_0@ : ARR_DST (0)://     // [362]
                      d_mp0_512_nub =( 512*512*4 );              // [375]
                      d_mp0_512_dathash=( F_FILEMOB_DATHASH(     // [375]
                        "[DATHASH_PIX_512]"                      // [375]
                      ));;                                       // [375]
            let a_1 = d_pix2048 ;  //:@a_1@ : ARR_SRC (1)://     // [362]
                                                                 // [362]
            let pi0 =(0-1); //: @pi0@ : PIXEL____Index_0 ://     // [362]
            let pi1 =(0-1); //: @pi1@ : PIXEL____Index_1 ://     // [362]
                                                                 // [362]
            let ci0 =(0-6); //: @ci0@ : ComponentIndex_0 ://     // [362]
            let ci1 =(0-9); //: @ci1@ : ComponentIndex_1 ://     // [362]
                                                                 // [362]
            let a_0_x ; //: @a_0_x@ : LocalDestination X ://     // [362]
            let a_0_y ; //: @a_0_y@ : LocalDestination Y ://     // [362]
                                                                 // [362]
            let a_1_x ; //: @a_1_x@ : GLOBAL____SOURCE X ://     // [362]
            let a_1_y ; //: @a_1_y@ : GLOBAL____SOURCE Y ://     // [362]
                                                                 // [362]
            for( a_0_y = 0 ; a_0_y <=(512-1) ; a_0_y ++ ){       // [362]
            for( a_0_x = 0 ; a_0_x <=(512-1) ; a_0_x ++ ){       // [362]
                                                                 // [362]
                a_1_x =( (i_h3x*512) + a_0_x );                  // [362]
                a_1_y =( (i_h3y*512) + a_0_y );                  // [362]
                                                                 // [362]
                pi0 =( a_0_x + ( a_0_y * 512  ) );               // [362]
                pi1 =( a_1_x + ( a_1_y * 2048 ) );               // [362]
                                                                 // [362]
                ci0 =( pi0 * 4 );                                // [362]
                ci1 =( pi1 * 4 );                                // [362]
                                                                 // [362]
                a_0[ ci0+0 ]=a_1[ ci1+0 ];                       // [362]
                a_0[ ci0+1 ]=a_1[ ci1+1 ];                       // [362]
                a_0[ ci0+2 ]=a_1[ ci1+2 ];                       // [362]
                a_0[ ci0+3 ]=a_1[ ci1+3 ];                       // [362]
            };;};;                                               // [362]
        //:---------:#_COPY_MEMORY_INTO_512_X_512_#:[362]://     // [---]
        //:#_USE_PNG_ENCODER_#:[363]:--------------------://     // [---][363]
        {                                                        // [---][363]
            let pixarra     =(       a_0 );                      // [---][363]
            let binarra     =( d_mp1_512 );  //:#_G_512_#://     // [364][363]
            let binarra_nob =(      0    );                      // [364][---]
            ASS( pixarra !== binarra , "[SAMEREF2022]" );        // [---][363]
                                                                 // [---][363]
            //: #_TODO_BINARRA_NOB_ZERO_ON_ERROR_# ://           // [371]
                                                                 // [---]
            binarra_nob=(                                        // [364][---]
            F_FILEMOB_512_PIXARRA_BINARRA(                       // [---][363]
                          pixarra,binarra ));;                   // [364][363]
                                                                 // [371]
            //:#_MISC_PIXEL_META_DATA_#:[371]:-----------://     // [371]
            if( binarra_nob >= 1 ){                              // [371]
                d_mp1_512_nub=(        binarra_nob       );      // [371]
                d_mp1_512_dathash =(                             // [372][371]
                F_FILEMOB_DATHASH(                               // [372][---]
                    "[DATHASH_PNG_512]"                          // [372][371]
                ));;                                             // [372][371]
            }else{                                               // [371]
                //: #_DATA_COULD_HAVE_BEEN_CORRUPTED_# ://       // [371]
                d_mp1_512_nub =( 0 );                            // [371]
                d_mp1_512_dathash =(                             // [372][371]
                F_FILEMOB_DATHASH(                               // [372][---]
                    "[DATHASH_EOU]"                              // [372][371]
                ));;                                             // [372][371]
            };;                                                  // [371]
            //:-----------:#_MISC_PIXEL_META_DATA_#:[371]://     // [371]
        }                                                        // [---][363]
        //:--------------------:#_USE_PNG_ENCODER_#:[363]://     // [---][363]

    };;                                                          // [362]
                                                                 // [362]
    const   F_FILEMOB_LOCLOAD = function                         // [362]
    PRIVATE_F_FILEMOB_LOCLOAD(                                   // [362]
                                                                 // [362]
        i_h3x   //: Hotel_Coordinate:To_Load : X_AXIS :::://     // [362]
    ,   i_h3y   //: Hotel_Coordinate:To_Load : Y_AXIS :::://     // [362]
    ){                                                           // [362]
        //:#_ERROR_CHECK_H3X_H3Y_#:[362]:----------------://     // [362]
        if( d_eci >= 1 ){                                        // [362]
            if( !( i_h3x >= 0 && i_h3x <=(3-1) ) ){              // [362]
                ERR("[OOB_H3X:LOCLOAD]");                        // [362]
            };;                                                  // [362]
            if( !( i_h3y >= 0 && i_h3y <=(3-1) ) ){              // [362]
                ERR("[OOB_H3Y:LOCLOAD]");                        // [362]
            };;                                                  // [362]
        };;                                                      // [362]
        //:----------------:#_ERROR_CHECK_H3X_H3Y_#:[362]://     // [---]
        //:#_DECODE_PNG_IN_MP1_512_#:[373]:--------------://     // [---][373]
                                                                 // [---][373]
            if( d_mp1_512_dathash !== "[DATHASH_PNG_512]" ){     // [---][373]
                                                                 // [---][373]
                let Y =( YEL );                                  // [---][373]
                let M =( MSG );                                  // [---][373]
                Y("[#_NO_VALID_DATA_TO_LOAD_OR_DECODE_#]");      // [---][373]
                M("[#_NOT_A_FATAL_ERROR_DO_NOT_CRASH_#]" );      // [---][373]
            }else                                                // [---][373]
            if( d_mp1_512_dathash === "[DATHASH_PNG_512]" ){     // [---][373]
                                                                 // [---][373]
                let binarra     =( d_mp1_512      );             // [---][373]
                let binarra_len =( d_mp1_512_nub  );             // [---][373]
                let pixarra     =( d_mp0_512      );             // [---][373]
                let pixarra_nub =( 0-666          );             // [---][373]
                                                                 // [---][373]
                LOG( "[@N_B_I_T_P_F@AKA@binarra_len@]:"          // [375][---]
                ,                       binarra_len );;          // [375][---]
                                                                 // [--------]
                if( !( binarra_len >= 42 ) ){ ;;;;;;;;;;         // [375][---]
                    LOG("[d_mp1_512_nub]:"                       // [375][---]
                    ,     d_mp1_512_nub );                       // [375][---]
                    LOG("[binarra_len]:" , binarra_len);         // [375][---]
                    YEL("[W_T_F_H_2022]"              );         // [375][---]
                }else{                                           // [375][---]
                    pixarra_nub=(                                // [---][373]
                    F_FILEMOB_512_BINARRA_PIXARRA(  ////         // [---][373]
                                  binarra           ////         // [---][373]
                                 ,binarra_len       ////         // [---][373]
                                 ,        pixarra   ////         // [---][373]
                    ));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         // [---][373]
                };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         // [375][---]
                                                                 // [---][373]
                if( (512*512*4) === pixarra_nub ){               // [---][373]
                //:#____MISCMEM_P_TODO____#:[374]:-------://     // [374][---]
                    //::1234567::::::::::::::::::::::::::://     // [374][---]
                    let read_me =(  pixarra    );  //::::://     // [374][---]
                    let writeme =(  d_pix2048  );  //::::://     // [374][---]
                    let porginx =(  i_h3x*512  );  //::::://     // [374][---]
                    let porginy =(  i_h3y*512  );  //::::://     // [374][---]
                    let w_x , w_y , w_i ; //: WRITE : XYI://     // [374][---]
                    let r_x , r_y , r_i ; //: READ  : XYI://     // [374][---]
                    let _w_ = 0 ; //: Write_Byte_Index  :://     // [374][---]
                    let _r_ = 0 ; //: Read__Byte_Index  :://     // [374][---]
                    let lpx = 0 ; //: @lpx@:LocalPixelX :://     // [374][---]
                    let lpy = 0 ; //: @lpy@:LocalPixelY :://     // [374][---]
                    for(lpy = 0 ; lpy <=(512-1) ; lpy++ ){       // [374][---]
                    for(lpx = 0 ; lpx <=(512-1) ; lpx++ ){       // [374][---]
                                                                 // [374][---]
                        r_x=(       0 + lpx );                   // [374][---]
                        r_y=(       0 + lpy );                   // [374][---]
                                                                 // [374][---]
                        w_x=( porginx + lpx );                   // [374][---]
                        w_y=( porginy + lpy );                   // [374][---]
                                                                 // [374][---]
                        r_i=( r_x + ( r_y *  512 ) );            // [374][---]
                        w_i=( w_x + ( w_y * 2048 ) );            // [374][---]
                                                                 // [374][---]
                        _r_ =( 4 * r_i );                        // [374][---]
                        _w_ =( 4 * w_i );                        // [374][---]
                                                                 // [374][---]
                    //::[ _DIAGRAM[ _FILEMOB_LEVEL_PASTE_ ]:::// // [374][---]
                    //::[ d_pix2048    ]<==[ pixarra      ]:::// // [374][---]
                        writeme[ _w_+0 ] = read_me[ _r_+0 ];     // [374][---]
                        writeme[ _w_+1 ] = read_me[ _r_+1 ];     // [374][---]
                        writeme[ _w_+2 ] = read_me[ _r_+2 ];     // [374][---]
                        writeme[ _w_+3 ] = read_me[ _r_+3 ];     // [374][---]
                    };;};;                                       // [374][---]
                //:-------:#____MISCMEM_P_TODO____#:[374]://     // [374][---]
                //:#_REFRESH_AFTER_LOAD_#:[378]:---------://     // [378][---]
                                                                 // [378][---]
                    if( d_pix2048_dir < 0 ){                     // [378][---]
                        d_pix2048_dir=( 0 ); };;                 // [378][---]
                                                                 // [378][---]
                        d_pix2048_dir++ ;                        // [378][---]
                                                                 // [378][---]
                //:---------:#_REFRESH_AFTER_LOAD_#:[378]://     // [378][---]
                }else                                            // [---][373]
                if( (512*512*4) !== pixarra_nub ){               // [---][373]
                                                                 // [---][373]
                    LOG("[X_X:pixarra_nub]:",pixarra_nub );      // [375][---]
                    YEL("[#_CANT_DECODE_PNGFILE_MEMOR_#]");      // [---][373]
                    MSG("[#_PNG_DECODE_NOT_FATAL_2022_#]");      // [---][373]
                }else{                                           // [---][373]
                    ERR("[EDCL_2022_10_21_515_PM]");             // [---][373]
                };;                                              // [---][373]
                                                                 // [---][373]
            }else{                                               // [---][373]
                ERR("[EDCL_2022_10_21]");                        // [---][373]
            };;                                                  // [---][373]
        //:--------------:#_DECODE_PNG_IN_MP1_512_#:[373]://     // [---][373]
                                                                 // [---]
    };;                                                          // [362]
    //:#_FILE_TO_PNG_BINARY_#:[383]:-------------------------:// // [383]
                                                                 // [383]
        const   F_FILEMOB_BINFILE_PNGFILE = "[_BADPAIR_1_]";     // [383]
        const   F_FILEMOB_PNGFILE_BINFILE = "[_BADPAIR_1_]";     // [383]
                                                                 // [383]
        const   F_FILEMOB_JAVFILE_PNGFILE = "[_BADPAIR_2_]" ;    // [383]
        const   F_FILEMOB_PNGFILE_JAVFILE = "[_BADPAIR_2_]" ;    // [383]
                                                                 // [383]
        const   F_FILEMOB_JAVFILE_BINFILE = "[_BADPAIR_3_]" ;    // [383]
        const   F_FILEMOB_BINFILE_JAVFILE = "[_BADPAIR_3_]" ;    // [383]
                                                                 // [383]
        const   F_FILEMOB_JAVFILE_BINARRA = function             // [383]
        PRIVATE_F_FILEMOB_JAVFILE_BINARRA(                       // [383]
                                                                 // [383]
            i_javfile //: JavaScript "file" type ://             // [383]
        ){                                                       // [383]
            ERR( "[#_JS_SAYS_FUCK_YOUR_SINK_#]");                // [388]
        };;                                                      // [383]
    //:-------------------------:#_FILE_TO_PNG_BINARY_#:[383]:// // [383]
    //:#_FILE_DIALOG_BOXES_#:[379]:--------------------------:// // [379]
                                                                 // [379]
        const   F_FILEMOB_DIAGLOG = "[FIX:.....SEE_BELOW]" ;     // [379]
        const   F_FILEMOB_DIALOG  = "[FIX:.....SEE_BELOW]" ;     // [379]
        const   F_FILEMOB_OPEN    = "[FIX:.....SEE_BELOW]" ;     // [379]
        const   F_FILEMOB_SAVE    = "[TRY....SAVEBOX_DSK]" ;     // [379]
        const   F_FILEMOB_LOAD    = "[TRY....LOADBOX_DSK]" ;     // [379]
        const   F_FILEMOB_SAVE_FILE_DIALOG = "[INCORRECT]" ;     // [379]
        const   F_FILEMOB_LOAD_FILE_DIALOG = "[INCORRECT]" ;     // [379]
                                                                 // [379]

        const   F_FILEMOB_SAVEBOX_DSK_TASKIOS = function    //// // [393]
        PRIVATE_F_FILEMOB_SAVEBOX_DSK_TASKIOS(              //// // [393]
                                                            //// // [393]
            i_taskios                                       //// // [393]
                                                            //// // [393]
        ){  //:BOD_BEG[ F_FILEMOB_SAVEBOX_DSK_TASKIOS ]:::::::// // [393]
          
            //:#_VARDEC_2022_10_28_#:[394]:------------------:// // [394]
                                                                 // [394]
                                                                 // [394]
                let o_iod =( i_taskios );  //:IndexOfDone://     // [394]
                                                                 // [---]
                let elm_dom =(d_filemob_elmhack_savebox_dsk);    // [395]
                let elm_nil =( NIL( elm_dom )              );    // [395]

                let w =( d_filemob_taskdat_savebox_dsk );        // [398]
                                                                 // [---]
            //:------------------:#_VARDEC_2022_10_28_#:[394]:// // [394]
            //:#_SETUP_SAVEBOX_DOM_HACK_#:[394]:-------------:// // [394]
            if( 0 === i_taskios ){                               // [394]
                                                                 // [---]
                //:#_CREATE_INVISIBLE_ANCHOR_#:[395]:----://     // [395]
                if( elm_nil >=1 ){ /////////////////////////     // [395]
                                                                 // [395]
                    let anchor_tag_code =( "a" );                // [395]
                                                                 // [395]
                    elm_dom =( /////////////////////             // [395]
                        document.createElement( ////             // [395]
                                                ////             // [395]
                            anchor_tag_code     ////             // [395]
                                                ////             // [395]
                        ));;;;;;;;;;;;;;;;;;;;;;;;;;             // [395]
                    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;             // [395]
                                                                 // [---]
                    //:#_HREF_DOWNLOAD_#:[396]:----------://     // [396]
                                                                 // [396]
                    elm_dom.href     =( "/FILES/512.PNG" );      // [396]
                    elm_dom.download =(        "512.PNG" );      // [396]
                                                                 // [396]
                    //:----------:#_HREF_DOWNLOAD_#:[396]://     // [396]
                                                                 // [---]
                    d_filemob_elmhack_savebox_dsk=(              // [395]
                              elm_dom );;;;;;;;;;;;;             // [395]
                                                                 // [395]
                };; ////////////////////////////////////////     // [395]
                //:----:#_CREATE_INVISIBLE_ANCHOR_#:[395]://     // [395]
                //:#_ANCHOR_ERROR_#:[395]:---------------://     // [395]
                let are_nil=( NIL( elm_dom ) );                  // [395]
                if( are_nil >=1 ){                               // [395]
                                                                 // [395]
                    LOG( "[are_nil]" , are_nil );                // [395]
                    LOG( "[elm_dom]" , elm_dom );                // [395]
                    LOG( "[d_filemob_elmhack_savebox_dsk]"       // [395]
                    ,      d_filemob_elmhack_savebox_dsk);;      // [395]
                                                                 // [395]
                    ERR("[#_YOUR_ANCHOR_IS_STILL_NIL_#]");       // [395]
                                                                 // [395]
                };;                                              // [395]
                //:---------------:#_ANCHOR_ERROR_#:[395]://     // [395]
                                                                 // [---]
            }else                                                // [394]
            //:-------------:#_SETUP_SAVEBOX_DOM_HACK_#:[394]:// // [---]
            //:#_COPY_PIXELS_TO_MP0_#:[396]:-----------------:// // [396]
            if( 1 === i_taskios ){                               // [396]
                                                                 // [---]
                //:#_HARDCENTER_HOTEL_#:[397]:-----------://     // [397]
                                                                 // [397]
                    let h3x =( 1 );                              // [397]
                    let h3y =( 1 );                              // [397]
                                                                 // [397]
                //:-----------:#_HARDCENTER_HOTEL_#:[397]://     // [397]
                //:--------------------------------------://     // [397]
                //: @x0c@ : X0 - Coordinate ( 0==DEST   )://     // [397]
                //: @y0c@ : Y0 - Coordinate ( 0==DEST   )://     // [397]
                //: @x1c@ : X1 - Coordinate ( 1==SOURCE )://     // [397]
                //: @y1c@ : Y1 - Coordinate ( 1==SOURCE )://     // [397]
                //:--------------------------------------://     // [397]
                                                                 // [397]
                let a_0 =(( d_mp0_512 )  );   //:DEST_ARR://     // [397]
                let a_1 =(( d_pix2048 )  );   //:SRC__ARR://     // [397]
                let mpi =(( 512*512*1 )-1);   //:MAX_PDEX://     // [397]
                let dex_512 ;                                    // [397]
                let x0c , y0c ; //:XY Of DESTINATION://          // [397]
                let x1c , y1c ; //:XY OF SOURCE ::::://          // [397]
                let p_0 , p_1 ; //:Pixel_____Indexes://          // [397]
                let c_0 , c_1 ; //:Component_Indexes://          // [397]
                                                                 // [397]
                for( dex_512  = 0   ////////////////////////     // [397]
                ;    dex_512 <= mpi                              // [397]
                ;    dex_512 ++                                  // [397]
                ){  ////////////////////////////////////////     // [397]
                                                                 // [397]
                    //:#_DST_XY_X0C_Y0C_#:[397]:---------://     // [397]
                                                                 // [397]
                        x0c =(      ( dex_512 % 512 ) );         // [397]
                        y0c =( F_M_F( dex_512 / 512 ) );         // [397]
                                                                 // [397]
                    //:---------:#_DST_XY_X0C_Y0C_#:[397]://     // [397]
                    //:#_SRC_XY_X1C_Y1C_#:[397]:---------://     // [397]
                                                                 // [397]
                        x1c =( ( h3x * 512 ) + x0c );            // [397]
                        y1c =( ( h3y * 512 ) + y0c );            // [397]
                                                                 // [397]
                    //:---------:#_SRC_XY_X1C_Y1C_#:[397]://     // [397]
                    //:#_BYTE_ADDRESS_#:[397]:-----------://     // [397]
                                                                 // [397]
                        p_0 =( x0c + ( y0c * 512  ) );           // [397]
                        p_1 =( x1c + ( y1c * 2048 ) );           // [397]
                                                                 // [397]
                        c_0 =( p_0 * 4 );                        // [397]
                        c_1 =( p_1 * 4 );                        // [397]
                                                                 // [397]
                    //:-----------:#_BYTE_ADDRESS_#:[397]://     // [397]
                    //:#_COPY_OVER_PIXEL_#:[397]:--------://     // [397]
                                                                 // [397]
                        a_0[ c_0+0 ]=( a_1[ c_1+0 ] );           // [397]
                        a_0[ c_0+1 ]=( a_1[ c_1+1 ] );           // [397]
                        a_0[ c_0+2 ]=( a_1[ c_1+2 ] );           // [397]
                        a_0[ c_0+3 ]=( a_1[ c_1+3 ] );           // [397]
                                                                 // [397]
                    //:--------:#_COPY_OVER_PIXEL_#:[397]://     // [397]
                                                                 // [397]
                };; //:NEXT[ dex_512 ]:::::::::::::::::::://     // [397]
                                                                 // [---]
            }else                                                // [396]
            //:-----------------:#_COPY_PIXELS_TO_MP0_#:[396]:// // [396]
            //:#_DYNAMIC_PNG_ALLOC_#:[396]:------------------:// // [396]
            if( 2 === i_taskios ){                               // [396]
                                                                 // [---]
                //:#_HOTEL13_PNGFILE_#:[398]:------------://     // [398]
                                                                 // [398]
                    w.hotel13_pngfile = UPNG.encode(             // [398]
                                                                 // [398]
                        [d_mp0_512]   //: ArrayOf_Frames ://     // [398]
                    ,   512           //: Width_InPixels ://     // [398]
                    ,   512           //: HeightInPixels ://     // [398]
                    ,   (0)           //: ZERO==LOSSLESS ://     // [398]
                    );;                                          // [398]
                //:------------:#_HOTEL13_PNGFILE_#:[398]://     // [398]         
                                                                 // [---]
            }else                                                // [396]
            //:------------------:#_DYNAMIC_PNG_ALLOC_#:[396]:// // [396]
            //:#_CREATE_BLOB_#:[398]:------------------------:// // [398]
            if( 3 === i_taskios ){                               // [398]
                                                                 // [398]
                w.pngblob=( new Blob(                            // [398]
                                                                 // [398]
                    [ w.hotel13_pngfile  ]                       // [398]
                ,   { type : "image/png" }                       // [398]
                                                                 // [398]
                ));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;                 // [398]
                                                                 // [398]
                w.png_url=( ////////////////////                 // [398]
                window.URL.createObjectURL( ////                 // [398]
                                            ////                 // [398]
                    w.pngblob               ////                 // [398]
                                            ////                 // [398]
                ));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;                 // [398]
                                                                 // [---]
                if( w.png_url ){                                 // [399]
                    w.png_url_cou++ ;                            // [399]
                }else{                                           // [399]
                    ERR("[FAILED_TO_CREATE_DOWNLOAD_URL]");      // [399]
                };;                                              // [399]
                                                                 // [---]
            }else                                                // [398]
            //:------------------------:#_CREATE_BLOB_#:[398]:// // [398]
            //:#_OPEN_SAVE_DIALOG_BOX_#:[394]:---------------:// // [---]
            if( 4 === i_taskios ){                               // [398][396][394]

                elm_dom.href=( w.png_url );  //: . . . . . . :// // [398]

                elm_dom.click() ;   //:#_SAVEBOX_CLICKSPAWN_#:// // [395]

            }else                                                // [394]
            //:---------------:#_OPEN_SAVE_DIALOG_BOX_#:[394]:// // [394]
            //:#_SELECT_FOLDER_SPINLOCK_#:[394]:-------------:// // [394]
            if( 5 === i_taskios ){                               // [398][396][394]
                                                                 // [394]
                //:_________TO_FUCKING_DO________________://     // [394]
                                                                 // [394]
            }else                                                // [394]
            //:-------------:#_SELECT_FOLDER_SPINLOCK_#:[394]:// // [394]
            //:#_INITIATE_SAVE_DOWNLOAD_#:[394]:-------------:// // [394]
            if( 6 === i_taskios ){                               // [398][396][394]
                                                                 // [394]
                //:_________TO_FUCKING_DO________________://     // [394]
                                                                 // [394]
            }else                                                // [394]
            //:-------------:#_INITIATE_SAVE_DOWNLOAD_#:[394]:// // [394]
            //:#_FREE_SPOT_#:[394]:--------------------------:// // [394]
            if( 7 === i_taskios ){        //:#_THE_8TH_STEP_#:// // [398][396][394]
                                                                 // [394]
                MSG( "[#_MOCKING_UP_END_OF_SAVE_TASK_#]" );      // [396][394]
                                                                 // [394]
            }else                                                // [394]
            //:--------------------------:#_FREE_SPOT_#:[394]:// // [394]
            //:#_THE_END_OF_DAYS_#:[394]:--------------------:// // [394]
            {/////////////////////////////////////////////////// // [394]
                                                                 // [394]
                ERR("[#_SAVEBOX_DSK_INVALID_TASKIOS_#]");        // [394]
                                                                 // [394]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [394]
            //:--------------------:#_THE_END_OF_DAYS_#:[394]:// // [394]
                                                                 // [394]
            return( o_iod );                                     // [394]

        };; //:BOD_BEG[ F_FILEMOB_SAVEBOX_DSK_TASKIOS ]:::::::// // [393]


        const   F_FILEMOB_SAVEBOX_DSK = function //:@_F_KEY_@:// // [---][379]
        PRIVATE_F_FILEMOB_SAVEBOX_DSK(                           // [---][379]
                                                                 // [---][379]
            /** VOID_FOR_NOW **/                                 // [---][379]
        ){  //:BOD_BEG[ SAVEBOX_DSK ]:::::::::::::::::::::::::// // [393][379]
                                                                 // [393][---]
            //:(enu)===>[ F_FILEMOB_SAVEBOX_DSK_TASKIOS ]://     // [393][---]
            let enu  =( c_filemob_taskenu_savebox_dsk );         // [393][---]
                                                                 // [393][---]
            //:@_KINDEFU_@:[393]:------------------------://     // [393][---]
                                                                 // [393][---]
                //:#_ALWAYS_TASKILL_TRY_#://                     // [393][---]
                F_FILEMOB_TASKILL_TRY();                         // [393][---]
                                                                 // [393][---]
                if( d_filemob_taskhas >= 1 ){                    // [393][---]
                                                                 // [393][---]
                    MSG( "[IGNORED_TASK:SAVEBOX_DSK]" );         // [393][---]
                }else{                                           // [393][---]
                    d_filemob_taskhas =( 1   );                  // [393][---]
                    d_filemob_taskenu =( enu );                  // [393][---]
                    d_filemob_taskiod =( 0-1 );                  // [393][---]
                };;                                              // [393][---]
            //:------------------------:@_KINDEFU_@:[393]://     // [393][---]
                                                                 // [393][---]
        };; //:BOD_END[ SAVEBOX_DSK ]:::::::::::::::::::::::::// // [393][379]

        const   F_FILEMOB_LOADBOX_DSK_TASKIOS = function         // [385][-------------][---]
        PRIVATE_F_FILEMOB_LOADBOX_DSK_TASKIOS(                   // [385][-------------][---]
                                                                 // [385][-------------][---]
            i_taskios //: @ios@ : Index_Of_Step ://              // [385][-------------][---]
                                                                 // [385][-------------][---]
        ){  //:FUNCBOD_BEG[ LOADBOX_DSK_TASKIOS ]:::::::::::::// // [385][-------------][---]
                                                                 // [385][-------------][---]
            //:#_LOADBOX_DSK_VARS_#:[385]:-------------------:// // [385][-------------][---]
                                                                 // [385][-------------][---]
            var o_taskiod =( i_taskios );  //:#_INC_IOS_#://     // [385][-------------][---]
                                                                 // [385][-------------][---]
            var elm_dom =( d_filemob_elmhack_loadbox_dsk );      // [385][MOV][381][---][---]
            var elm_nil =( NIL( elm_dom )                );      // [385][MOV][381][---][---]
            /// pngbarr =( "[nil][.PNG_Binary_Data]"     );      // [386][385][MOV][381][---]

                //:#_I_O_W_#:[386]:----------------------://     // [386][------------------]
                                                                 // [386][------------------]
                var i =( d_filemob_taskdat_loadbox_dsk );        // [386][------------------]
                var o =( d_filemob_taskdat_loadbox_dsk );        // [386][------------------]
                var w =( d_filemob_taskdat_loadbox_dsk );        // [386][------------------]
                ASS( i === o , "[#_I_O_DIFF_ADDRESS_#]");        // [386][------------------]
                ASS( i === w , "[#_I_W_DIFF_ADDRESS_#]");        // [386][------------------]
                                                                 // [386][------------------]
                //:----------------------:#_I_O_W_#:[386]://     // [386][------------------]
                                                                                         
                                                                 // [---][385][--------][---]
            //:-------------------:#_LOADBOX_DSK_VARS_#:[385]:// // [---][385][--------][---]
            //:#_SETUP_DOM_HACK_#:[385]:---------------------:// // [---][385][--------][---]
            if( 0 === i_taskios ){                               // [---][385][--------][---]
            if( elm_nil >=1     ){                               // [---][385][MOV][381][---]
                                                                 // [---][385][MOV][----[---]
                elm_dom = document.createElement("input");       // [---][385][MOV][381][---]
                elm_dom.type = "file" ;                          // [---][385][MOV][381][---]
                                                                 // [---][385][MOV][381][---]
                function F_INLINED_001( i_evt ){                 // [---][385][MOV][381][---]
                                                                 // [---][385][MOV][381][---]
                    w.pngbarr = i_evt.target.files[ 0 ];         // [386][385][MOV][381][---]
                    w.pikfile =( 1 );                            // [387]
                                                                 // [---][385][MOV][--------]
                    MSG( "[?FILE_CHOOSEN?]" );                   // [---][385][MOV][382][381]
                                                                 // [---][385][MOV]     [382]
                    //: SEE[ _MOVED_CODE_AAA_ ]::::::::::://     // [387]
                                                                 // [---][385][MOV][--------]
                    //: SEE[ _MOVED_CODE_BBB_ ]::::::::::://     // [387]
                                                                 // [---][385][MOV][---][---]
                };;                                              // [---][385][MOV][381][---]

                //- ---------------------------------------- -// // [391]
                //+ #_YOU_WISH_IT_WERE_THAT_FUCKING_EASY_#   +// // [391]
                //- ---------------------------------------- -// // [391]
                //- elm_dom.oncancel =( F_INLINED_002 );     -// // [391]
                //- function  F_INLINED_002( i_evt ){        -// // [391]
                //-                                          -// // [391]
                //-     MSG( "[HOW_DARE_YOU_GHOST_ME]" );    -// // [391]
                //-     d_filemob_taskill =( 1 );            -// // [391]
                //- };;                                      -// // [391]
                //- ---------------------------------------- -// // [391]

                elm_dom.onchange =( F_INLINED_001 );             // [---][385][MOV][381][---]
                
                                                                 // [---][385][MOV][381][---]
                d_filemob_elmhack_loadbox_dsk =( elm_dom );      // [---][385][MOV][381][---]
                                                                 // [---][385][--------][---]
            };; //::::::::::::::::::::::::::::[ elm_nil >=1 ]:// // [---][385][MAR][381][---]
            }else                                                // [---][385][--------][---]
            //:---------------------:#_SETUP_DOM_HACK_#:[385]:// // [---][385][--------][---]
            //:#_OPEN_FILE_PICKER_#:[385]:-------------------:// // [385][--------][---][---]
            if( 1 === i_taskios ){                               // [385][--------][---][---]
                                                                 // [385][--------][---][---]
                //:#_DONT_LOAD_BLOCK_ME_#:[381]:-------------:// // [385][MOV][381][---][---]
                                                                 // [385][MOV][381][---][---]
                ASS( elm_dom === d_filemob_elmhack_loadbox_dsk   // [385][MOV][381][---][---]
                ,    "[THESE_SHOULD_BE_THE_SAME_THING_2022]" );; // [385][MOV][381][---][---]
                                                                 // [385][MOV][381][---][---]
                elm_dom.click();                                 // [385][MOV][381][---][---]
                                                                 // [385][MOV][381][---][---]
                //:-------------:#_DONT_LOAD_BLOCK_ME_#:[381]:// // [385][MOV][381][---][---]
            }else                                                // [385][--------][---][---]
            //:-------------------:#_OPEN_FILE_PICKER_#:[385]:// // [385][--------][---][---]
            //:#_WAIT_FOR_USER_TO_PICK_FILE_#:[385]:---------:// // [385][--------][---][---]
            if( 2 === i_taskios ){                               // [385][--------][---][---]
                                                                 // [---]
                if( !( w.pikfile >= 1 ) ){                       // [387]
                     o_taskiod-- ; //: @RESPIN_LOCK@ ://         // [387]
                };;                                              // [387]
            }else                                                // [385][--------][---][---]
            //:---------:#_WAIT_FOR_USER_TO_PICK_FILE_#:[385]:// // [385][--------][---][---]
            //:#_FILE_TO_BYTE_ARRAY_DISBATCH_#:[387]:--------:// // [387]
            if( 3 === i_taskios ){                               // [387]
                                                                 // [387]
                //:_MOVED_CODE_AAA_#:[387]:--------------://     // [387]
                                                                 // [387]
                //- i.binarra =(                         -//     // [388][387][MOV][386][385][MOV][383][382]
                //- F_FILEMOB_JAVFILE_BINARRA(           -//     // [388][387][MOV][---][385][MOV][383][382]
                //- i.pngbarr                       ));; -//     // [388][387][MAE][---][385][MOV][383][382]
                //- i.binanub =(i.binarra.byteLength );; -//     // [388][387][MOV][386][385][MOV][383][382]
                                                                 // [387]
                //:--------------:_MOVED_CODE_AAA_#:[387]://     // [387]
                //:#_JAVFILE_BINARRA_#:[388]:------------://     // [388][--------]
                    w.spinlok =( 1 );                            // [388][MAE][383]
                    w.f_r     = new FileReader();                // [388][MAE][383]
                    w.arr_buf =( "[nil][arr_buf]"   );           // [388][MAE][383]
                    o.binarra =( "[nil][o_binarra]" );           // [388][MAE][383]
                                                                 // [388][MOV][383]
                    w.f_r.onload = function( i_ignored ){        // [389][BUG][388][MOV][383]
                                                                 // [388][MOV][383]
                        w.arr_buf = w.f_r.result ;               // [389][BUG][388][MAE][383]
                        o.binarra=( new Uint8Array(w.arr_buf));  // [389][BUG][388][MAE][383]
                        o.binanub=( o.binarra.byteLength   );    // [388][--------]
                        w.spinlok =( 0 /**@_E_S_L_@**/     );    // [388][MAE][383]
                    };;                                          // [388][MOV][383]
                                                                 // [388][MOV][383]
                    try{                                         // [388][MOV][383]
                                                                 // [-------------]
                        var i_javfile =( i.pngbarr );            // [388][--------]
                        w.f_r.readAsArrayBuffer( i_javfile );    // [389][BUG][388][MOV][383]
                                                                 // [-------------]
                    }catch( i_err ){                             // [388][MOV][383]
                                                                 // [388][MOV][383]
                        YEL( "[#_RAAB_#:i_err]" , i_err );       // [389][388][MOV][383]
                        w.spinlock =( 0 );                       // [388][MAE][383]
                        d_filemob_taskill =( 1 );                // [391]
                    };;                                          // [388][MOV][383]
                                                                 // [388][MOV][383]
                    //- while( spinlok ){  }; - --//             // [388][MAE][383]
                                                                 // [388][MOV][383]
                //:------------:#_JAVFILE_BINARRA_#:[388]://     // [388][--------]
                                                                 // [387]
            }else                                                // [387]
            //:--------:#_FILE_TO_BYTE_ARRAY_DISBATCH_#:[387]:// // [387]
            //:#_FILE_TO_BYTE_ARRAY_SPINLOCK_#:[387]:--------:// // [387]
            if( 4 === i_taskios ){                               // [387]
                                                                 // [387]
                if( !( w.spinlok <= 0 ) ){                       // [387]
                                                                 // [387]
                    o_taskiod-- ; //: @RESPIN_LOCK@ ://          // [387]
                };;                                              // [387]
            }else                                                // [387]
            //:--------:#_FILE_TO_BYTE_ARRAY_SPINLOCK_#:[387]:// // [387]
            //:#_LOAD_INTO_MASTER_#:[387]:-------------------:// // [387]
            if( 5 === i_taskios ){     //:#_ONEDEX_STEP_006_#:// // [389][387]
                                                                 // [387]
                //:_MOVED_CODE_BBB_#:[387]:--------------://     // [387]
                                                                 // [387]
                        o.pixarra =( d_mp0_512           );;     // [387][MOV][386][385][MOV][382][---]
                        o.pixanub =( 0-666               );;     // [387][MOV][386][385][MOV][382][---]
                    o.pixanub=(                     ////////     // [387][MOV][386][385][MOV][382][---]
                    F_FILEMOB_512_BINARRA_PIXARRA(  ////////     // [387][MOV][---][385][MOV][382][---]
                                i.binarra           ////////     // [387][MOV][386][385][MOV][382][---]
                               ,i.binanub           ////////     // [387][MOV][386][385][MOV][382][---]
                               ,        o.pixarra   ////////     // [387][MOV][386][385][MOV][382][---]
                    ));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [387][MOV][---][385][MOV][382][---]
                                                                 // [387][MOV][---][385][MOV][382][---]
                    let mpi =(( o.pixanub / 4)-1);               // [387][MOV][386][385][MOV][382][---]
                    let dex =( 0            );                   // [387][MOV][---][385][MOV][382][---]
                    let o_k =( 0            );                   // [387][MOV][---][385][MOV][382][---]
                    if( ((512*512*4)===o.pixanub)){              // [387][MOV][386][385][MOV][382][---]
                        o_k =( 1 );                              // [387][MOV][---][385][MOV][382][---]
                    };;                                          // [387][MOV][---][385][MOV][382][---]
                                                                 // [387][MOV][---][385][MOV][382][---]
                    let h3x=( 1 /** CENTER LEVEL PACK **/ );     // [387][MOV][---][385][MOV][382][---]
                    let h3y=( 1 /** MIDDLE LEVEL PACK **/ );     // [387][MOV][---][385][MOV][382][---]
                    let p1x ; //:@p1x@ : Pixel SRC(1)- X ://     // [387][MOV][---][385][MOV][382][---]
                    let p1y ; //:@p1y@ : Pixel SRC(1)- Y ://     // [387][MOV][---][385][MOV][382][---]
                    let p0x ; //:@p0x@ : Pixel DST(0)- X ://     // [387][MOV][---][385][MOV][382][---]
                    let p0y ; //:@p0y@ : Pixel DST(0)- Y ://     // [387][MOV][---][385][MOV][382][---]
                                                                 // [387][MOV][---][385][MOV][382][---]
                    /// i_1 ; //: Generic_Index - PIXEL  ://     // [387][MOV][---][385][MOV][382][---]
                    /// i_0 ; //: Generic_Index - PIXEL  ://     // [387][MOV][---][385][MOV][382][---]
                                                                 // [387][MOV][---][385][MOV][382][---]
                    let pi1 ; //: Pixel Index - SRC(1)   ://     // [387][MOV][---][385][MOV][382][---]
                    let pi0 ; //: Pixel Index - DST(1)   ://     // [387][MOV][---][385][MOV][382][---]
                                                                 // [387][MOV][---][385][MOV][382][---]
                    let c_1 ; //: Pixel Component Index  ://     // [387][MOV][---][385][MOV][382][---]
                    let c_0 ; //: Pixel Component Index  ://     // [387][MOV][---][385][MOV][382][---]
                                                                 // [387][MOV][---][385][MOV][382][---]
                    //: @pa@ : Pixel_Array  :::::::::::::://     // [387][MOV][---][385][MOV][382][---]
                    //: @pa1@ : Pixel_Array - SRC(1)     ://     // [387][MOV][---][385][MOV][382][---]
                    //: @pa0@ : Pixel_Array - DST(0)     ://     // [387][MOV][---][385][MOV][382][---]
                    let pa1 =( o.pixarra ); //: SOURCE   ://     // [387][MOV][386][385][MOV][382][---]
                    let pa0 =( d_pix2048 ); //: DESTIN.. ://     // [387][MOV][---][385][MOV][382][---]
                                                                 // [387][MOV][---][385][MOV][382][---]
                    //:#_HOTEL_INTO_DUM_#:[382]:---------://     // [387][MOV][---][385][MOV][382][---]
                                                                 // [387][MOV][---][385][MOV][382][---]
                        for(             ( dex = 0    )          // [387][MOV][---][385][MOV][382][---]
                        ;  ( o_k >= 1 )&&( dex <= mpi )          // [387][MOV][---][385][MOV][382][---]
                        ;                ( dex++      )          // [387][MOV][---][385][MOV][382][---]
                        ){                                       // [387][MOV][---][385][MOV][382][---]
                            p1x =(      ( dex % 512 ) );         // [387][MOV][---][385][MOV][382][---]
                            p1y =( F_M_F( dex / 512 ) );         // [387][MOV][---][385][MOV][382][---]
                            p0x =( h3x*512 )+( p1x );            // [387][MOV][---][385][MOV][382][---]
                            p0y =( h3y*512 )+( p1y );            // [387][MOV][---][385][MOV][382][---]
                                                                 // [387][MOV][---][385][MOV][382][---]
                            pi1 =( p1x + ( p1y *  512 ) );       // [387][MOV][---][385][MOV][382][---]
                            pi0 =( p0x + ( p0y * 2048 ) );       // [387][MOV][---][385][MOV][382][---]
                                                                 // [387][MOV][---][385][MOV][382][---]
                            c_1 =( pi1 * 4 );                    // [387][MOV][---][385][MOV][382][---]
                            c_0 =( pi0 * 4 );                    // [387][MOV][---][385][MOV][382][---]
                                                                 // [387][MOV][---][385][MOV][382][---]
                            pa0[ c_0+0 ]=pa1[ c_1+0 ];           // [387][MOV][---][385][MOV][382][---]
                            pa0[ c_0+1 ]=pa1[ c_1+1 ];           // [387][MOV][---][385][MOV][382][---]
                            pa0[ c_0+2 ]=pa1[ c_1+2 ];           // [387][MOV][---][385][MOV][382][---]
                            pa0[ c_0+3 ]=pa1[ c_1+3 ];           // [387][MOV][---][385][MOV][382][---]
                        };;                                      // [387][MOV][---][385][MOV][382][---]
                    //:---------:#_HOTEL_INTO_DUM_#:[382]://     // [387][MOV][---][385][MOV][382][---]
                                                                 // [387]
                //:--------------:_MOVED_CODE_BBB_#:[387]://     // [387]
                //:#_YOU_DIRTY_BITCH_#:[390]:------------://     // [390]
                                                                 // [390]
                    if( d_pix2048_dir < 0 ){                     // [390]
                        d_pix2048_dir=( 0 );                     // [390]
                    };; d_pix2048_dir++ ;;;;                     // [390]
                                                                 // [390]
                //:------------:#_YOU_DIRTY_BITCH_#:[390]://     // [390]
            }else                                                // [387]
            //:-------------------:#_LOAD_INTO_MASTER_#:[387]:// // [387]
            //:#_INVALID_INDEX_OF_STEP_#:[385]:--------------:// // [---][--------][---][---]
            {                                                    // [385][--------][---][---]
                ERR( "[INVALID_INDEX_OF_STEP_YEAR_2022]" );      // [385][--------][---][---]
            };;                                                  // [385][--------][---][---]
            //:--------------:#_INVALID_INDEX_OF_STEP_#:[385]:// // [---][--------][---][---]
                                                                 // [385][--------][---][---]
            return( o_taskiod );                                 // [385][--------][---][---]
                                                                 // [385][--------][---][---]
        };; //:FUNCBOD_END[ LOADBOX_DSK_TASKIOS ]:::::::::::::// // [385][--------][---][---]

        const   F_FILEMOB_LOADBOX_DSK = function //:@_G_KEY_@:// // [379]
        PRIVATE_F_FILEMOB_LOADBOX_DSK(                           // [379]
                                                                 // [379]
            /** VOID_FOR_NOW **/                                 // [379]
        ){                                                       // [379]
            MSG( "[#_DONT_FUCKING_YELL_AT_ME_2022_#]" );         // [381][380][379]
                                                                 // [---]    
            F_FILEMOB_TASKILL_TRY();   //:#_WHYKILL_LOADBOX_#:// // [391]
                                                                 // [---]
            if( d_filemob_taskhas >= 1 ){                        // [385]
                                                                 // [385]
                MSG( "[I_AM_IGNORING_YOU_FOR_REAL]" );           // [385]
            }else{                                               // [385]
                let taskenu =( c_filemob_taskenu_loadbox_dsk );  // [385]
                let tasknos =( c_filemob_tasknos_loadbox_dsk );  // [385]
                                                                 // [---]
                ASS(tasknos>=1,"[#_ZERO_STEP_PROCESS_#]");       // [389]
                                                                 // [---]
                    d_filemob_taskhas =( 1       );              // [385]
                    d_filemob_taskenu =( taskenu );              // [385]
                //- d_filemob_tasknos =( tasknos ); --//         // [389][BUG][385]
                    d_filemob_taskiod =( 0-1     );              // [385]
            };;                                                  // [385]
                                                                 // [---]
        };;                                                      // [379]
    //:--------------------------:#_FILE_DIALOG_BOXES_#:[379]:// // [379]
    //:#_FILEMOB_TASK_MANAGER_#:[384]:-----------------------:// // [384]
                                                                 // [384]

        const   F_FILEMOB_TASKDAT_RES_ALL = function    //////// // [390]
        PRIVATE_F_FILEMOB_TASKDAT_RES_ALL(              //////// // [390]
            /** VOID **/                                //////// // [390]
        ){  //:BOG_BEG[ TASKDAT_RES_ALL ]:::::::::::::::::::::// // [390]
                                                                 // [390]
            let dat_001 =( d_filemob_taskdat_loadbox_dsk  );     // [390]
            let dat_002 =( d_filemob_taskdat_savebox_dsk  );     // [399]
                                                                 // [390]
                dat_001.pngbarr = "[nil][RESET_TO_NIL_001]";     // [390]
                                                           ;     // [390]
                dat_001.pikfile = "[nil][RESET_TO_NIL_002]";     // [390]
                dat_001.spinlok = "[nil][RESET_TO_NIL_003]";     // [390]
                                                           ;     // [390]
                dat_001.f_r     = "[nil][RESET_TO_NIL_004]";     // [390]
                dat_001.arr_buf = "[nil][RESET_TO_NIL_005]";     // [390]
                                                           ;     // [390]
                dat_001.binarra = "[nil][RESET_TO_NIL_006]";     // [390]
                dat_001.binanub = "[nil][RESET_TO_NIL_007]";     // [390]
                dat_001.pixarra = "[nil][RESET_TO_NIL_008]";     // [390]
                dat_001.pixanub = "[nil][RESET_TO_NIL_009]";     // [390]
                                                                 // [---]
                //:- - - - - - - - - -- - - - - - - - - -://     // [399]
                //:#_DAT_002_CLEANUP_URL_#:[399]:--------://     // [399]
                                                                 // [399]
                    if( NIL(  dat_002.png_url_cou ) ){           // [399]
                        /** Custom Nil Type **/                  // [399]
                        /** Treat Like Zero **/                  // [399]
                    }else                                        // [399]
                    if(       dat_002.png_url_cou >= 1 ){        // [399]
                                                                 // [399]
                        if( dat_002.png_url_cou >= 2 ){          // [399]
                            YEL("[THIS_THIS_PROBLEM_2022]");     // [399]
                        };;                                      // [399]
                                                                 // [399]
                        while( dat_002.png_url_cou >= 1 ){       // [399]
                               dat_002.png_url_cou -- ;          // [399]
                               window.URL.revokeObjectURL(       // [399]
                                                                 // [399]
                                    dat_002.png_url              // [399]
                               );;                               // [399]
                            //:SEE[ @URL_2022_10_29@ ]://        // [399]
                        };;                                      // [399]
                    }else                                        // [399]
                    if( 0 === dat_002.png_url_cou      ){        // [399]
                        /** Do nothing **/                       // [399]
                    }else{                                       // [399]
                        ERR("[BAD_PNG_URL_COU_2022]");           // [399]
                    };;                                          // [399]
                //:--------:#_DAT_002_CLEANUP_URL_#:[399]://     // [399]
                                                                 // [399]
                dat_002.hotel13_pngfile = "[nil][@RTN@010]";     // [399]
                dat_002.pngblob         = "[nil][@RTN@011]";     // [399]
                dat_002.png_url         = "[nil][@RTN@012]";     // [399]
                dat_002.png_url_cou     = "[nil][@RTN@013]";     // [399]
                                                                 // [399]
                //:- - - - - - - - - -- - - - - - - - - -://     // [399]
                                                                 // [---]   
        };; //:BOG_END[ TASKDAT_RES_ALL ]:::::::::::::::::::::// // [390]

        const   F_FILEMOB_TIKCORE = function                     // [384]
        PRIVATE_F_FILEMOB_TIKCORE(                               // [384]
                                                                 // [384]
            /** VOID **/                                         // [384]
        ){  //:BOD_BEG[ TIKCORE ]:::::::::::::::::::::::::::::// // [389][384]
                                                                 // [---][389] 
            let   out_iod =( 0-666 /**OUTPUT.iod**/   );         // [---][389] 
            const enu =( d_filemob_taskenu            );         // [---][389] 
            const nos =( d_filemob_tasknos[ enu ]     );         // [---][389] 
            const ios =( d_filemob_taskiod + 1        );         // [---][389] 
            const msi =( nos - 1 /**Max_Step_Index**/ );         // [---][389] 
                                                                 // [---][389] 
            ASS(  nos >= 1 , "[@_Z_S_P_@:2022_10_27]" );         // [---][389] 
                                                                 // [---][389] 
            if( (ios > msi) || ( d_filemob_taskill >= 1 ) ){     // [391][389]
                                                                 // [---][389] 
                //:#_RENFUNC_DONE_#:[389]:---------------://     // [---][389] 
                                                                 // [---][389] 
                d_filemob_taskill =( 0 );                        // [391][---]
                d_filemob_taskhas =( 0 );                        // [---][389] 
                d_filemob_taskenu =( 0 );                        // [---][389] 
                                                                 // [---][389] 
                //:---------------:#_RENFUNC_DONE_#:[389]://     // [---][389] 
                //:#_RESET_R_E_S_#:[390]:----------------://     // [390][---]
                                                                 // [390][---]
                    F_FILEMOB_TASKDAT_RES_ALL( );                // [390][---]
                                                                 // [390][---]
                //:----------------:#_RESET_R_E_S_#:[390]://     // [390][---]
            }else{                                               // [---][389] 
                let F_N =( "[nil][TASKIOS_FUNCTION]" );          // [---][389] 
                                                                 // [---][389] 
                //:#_RENFUNC_SELECT_#:[389]:-------------://     // [---][389] 
                                                                 // [---][389] 
                if( enu === c_filemob_taskenu_loadbox_dsk ){     // [---][389] 
                    F_N   =(F_FILEMOB_LOADBOX_DSK_TASKIOS );     // [---][389] 
                }else   ////////////////////////////////////     // [394][389]
                                                                 // [---][---]
                if( enu === c_filemob_taskenu_savebox_dsk ){     // [394][---]
                    F_N   =(F_FILEMOB_SAVEBOX_DSK_TASKIOS );     // [394][---]
                }else   ////////////////////////////////////     // [394][---]
                                                                 // [---][---]
                {       ////////////////////////////////////     // [394][389]
                    LOG( "[what_the_enu:enu]" , enu     );;;     // [---][389] 
                    ERR("[#_AINTNO_TASKIEVER_HEARDOF_#]");;;     // [---][389] 
                };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [394][389]
                                                                 // [---][389] 
                //:-------------:#_RENFUNC_SELECT_#:[389]://     // [---][389] 
                //:#_RENFUNC_CALL_#:[389]:---------------://     // [---][389] 
                                                                 // [---][389] 
                    out_iod=( F_N( ios ) );                      // [---][389] 
                                                                 // [---][389] 
                //:---------------:#_RENFUNC_CALL_#:[389]://     // [---][389] 
                //:#_RENFUNC_NEXT_STEP_#:[389]:----------://     // [---][389] 
                                                                 // [---][389] 
                    d_filemob_taskiod=( out_iod );               // [---][389] 
                                                                 // [---][389] 
                    if( 0  //:#_LOOKS_WRONG_BUT_CORRECT_#://     // [394][389] 
                    || ( out_iod+0 === ios  ) //:DID_STEP://     // [394][389] 
                    || ( out_iod+1 === ios  ) //:SPINLOCK://     // [---][389] 
                    || ( out_iod   === ios-1) //:SPINLOCK://     // [394][---]
                    ){                                           // [---][389] 
                        /** Both Cases are OKAY **/              // [---][389] 
                    }else{                                       // [---][389] 
                        ERR("[#_HYDRIC_ACID_OXIDANE_#]");        // [---][389] 
                    };;                                          // [---][389] 
                                                                 // [---][389] 
                //:----------:#_RENFUNC_NEXT_STEP_#:[389]://     // [---][389] 
            };;                                                  // [---][389] 
                                                                 // [---][389] 
        };; //:BOD_END[ TIKCORE ]:::::::::::::::::::::::::::::// // [389][384]

        const   F_FILEMOB_TIK = function                         // [384]
        PRIVATE_F_FILEMOB_TIK(                                   // [384]
                                                                 // [384]
            /** VOID **/                                         // [384]
        ){                                                       // [384]
            if( d_filemob_taskhas >= 1 ){                        // [384]
                F_FILEMOB_TIKCORE();                             // [384]
            };;                                                  // [384]
        };;                                                      // [384]
    //:-----------------------:#_FILEMOB_TASK_MANAGER_#:[384]:// // [384]
                                                                 // [---]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [361]
//|                                               [ @$$$$$@ ]|// // [361]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __FILEMOB__|// // [361]
//|                                               [ @$$$$$@ ]|// // [361]
//|25|25|25|25|25|25|25|25|25|SUBS|25|25|25|25|25|25|25|25|25|// // [361]
//|12|12|12|12|12|12|12|12|12|SUBS|12|12|12|12|12|12|12|12|12|// // [---][185][MOV][156]
//|[ @$$$$$@ ]                                               |// // [---][185][MOV][156]
//|__TILEBOI__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [---][185][MOV][156]
//|[ @$$$$$@ ]                                               |// // [---][185][MOV][156]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [---][185][MOV][156]
                                                                 // [-------------][---]

    //:#_GTC_TO_LTC_#:[449]:=================================:// // [449]
    //:#_LTC_TO_GTC_#:[449]:=================================:// // [449]
                                                                 // [449]
        //: TAG[ _GLOBAL_TILE_COORD__TO__LOCAL_TILE_COORD_ ]::// // [449]
        //: TAG[ _GLOBAL_TO_LOCAL_TILE_COORD_ ]:::::::::::::::// // [449]
                                                                 // [449]
        const   F_TILEBOI_INN_OBJ_GTC_OUT_OBJ_LTC = function     // [449]
        PRIVATE_F_TILEBOI_INN_OBJ_GTC_OUT_OBJ_LTC(               // [449]
                                                                 // [449]
            i_obj_gtc //: INN : Object : Global_Tile_Coord :::// // [449]
        ,   o_obj_ltc //: OUT : Object : Local__Tile_Coord :::// // [449]
                                                                 // [449]
        ){  //:BEG_BOD[ GTC_LTC ]:::::::::::::::::::::::::::::// // [449]
                                                                 // [---]
            let te7 =( i_obj_gtc.m_te7 ); //:TileSize_Exp://     // [451]
            let gtx =( i_obj_gtc.m_gtx ); //:GlobalTile_X://     // [451]
            let gty =( i_obj_gtc.m_gty ); //:GlobalTile_Y://     // [451]
                                                                 // [451]
            //: @locspan@ : Local Span Of One Level  ::::://     // [451]
            //: @hotspan@ : Hotel Span 5levelsAcross ::::://     // [451]
            //: @h3x@ ::::: Hotelcell_capacity3_axis_X ::://     // [451]
            //: @h3y@ ::::: Hotelcell_capacity3_axis_Y ::://     // [451]
            //: @hlx@ ::::: Hotel_Local_X #HLX_NOTE_2022#://     // [451]
            //: @hly@ ::::: Hotel_Local_Y #HLY_NOTE_2022#://     // [451]
                                                                 // [451]
            //:#_CALCULATE_GLOBAL_TO_LOCAL_#:[451]:------://     // [451]
                                                                 // [451]
                let locspan =( d_te7_lat[ te7 ]    );            // [451]
                let hotspan =( locspan * 5         );            // [451]
                let h3x =F_M_F( gtx / hotspan      );            // [451]
                let h3y =F_M_F( gty / hotspan      );            // [451]
                let hlx =(      gtx -(hotspan*h3x) );            // [451]
                let hly =(      gty -(hotspan*h3y) );            // [451]
                let r5x =F_M_F( hlx / locspan      );            // [451]
                let r5y =F_M_F( hly / locspan      );            // [451]
                let ltx =(      hlx -(locspan*r5x) );            // [451]
                let lty =(      hly -(locspan*r5y) );            // [451]
                                                                 // [451]
            //:------:#_CALCULATE_GLOBAL_TO_LOCAL_#:[451]://     // [451]
            //:#_LOAD_SEVEN_MEMBERS_#:[451]:-------------://     // [451]
                                                                 // [451]
                o_obj_ltc.m_te7 =( te7 ); //: MEMBER_001 ://     // [451]
                o_obj_ltc.m_h3x =( h3x ); //: MEMBER_002 ://     // [451]
                o_obj_ltc.m_h3y =( h3y ); //: MEMBER_003 ://     // [451]
                o_obj_ltc.m_r5x =( r5x ); //: MEMBER_004 ://     // [451]
                o_obj_ltc.m_r5y =( r5y ); //: MEMBER_005 ://     // [451]
                o_obj_ltc.m_ltx =( ltx ); //: MEMBER_006 ://     // [451]
                o_obj_ltc.m_lty =( lty ); //: MEMBER_007 ://     // [451]
                                                                 // [451]
            //:-------------:#_LOAD_SEVEN_MEMBERS_#:[451]://     // [451]
                                                                 // [---]
        };; //:END_BOD[ GTC_LTC ]:::::::::::::::::::::::::::::// // [449]
                                                                 // [449]
        //: TAG[ _LOCAL_TILE_COORD__TO__GLOBAL_TILE_COORD_ ]::// // [449]
        //: TAG[ _LOCAL_TO_GLOBAL_TILE_COORD_ ]:::::::::::::::// // [449]
                                                                 // [449]
        const   F_TILEBOI_INN_OBJ_LTC_OUT_OBJ_GTC = function     // [449]
        PRIVATE_F_TILEBOI_INN_OBJ_LTC_OUT_OBJ_GTC(               // [449]
                                                                 // [449]
            i_obj_ltc //: INN : Object : Local__Tile_Coord :::// // [449]
        ,   o_obj_gtc //: OUT : Object : Global_Tile_Coord :::// // [449]
                                                                 // [449]
        ){  //:BEG_BOD[ LTC_GTC ]:::::::::::::::::::::::::::::// // [449]
                                                                 // [---]
            //:#_LTC_SHORTHAND_MACROS_#:[452]:-----------://     // [452]
                                                                 // [452]
                const te7 =( i_obj_ltc.m_te7 );                  // [452]
                const h3x =( i_obj_ltc.m_h3x );                  // [452]
                const h3y =( i_obj_ltc.m_h3y );                  // [452]
                const r5x =( i_obj_ltc.m_r5x );                  // [452]
                const r5y =( i_obj_ltc.m_r5y );                  // [452]
                const ltx =( i_obj_ltc.m_ltx );                  // [452]
                const lty =( i_obj_ltc.m_lty );                  // [452]
                                                                 // [452]
            //:-----------:#_LTC_SHORTHAND_MACROS_#:[452]://     // [452]
            //:#_DO_THE_FUCKING_MATH_#:[452]:------------://     // [452]
                                                                 // [452]
                let gtx ; //: @gtx@ : Global_Tile_X_axis ://     // [452]
                let gty ; //: @gty@ : Global_Tile_Y_axis ://     // [452]
                let lat ; //: @lat@ : LATeral_spanintiles://     // [452]
                                                                 // [452]
                lat = d_te7_lat[ te7 ];                          // [452]
                                                                 // [452]
                gtx=( h3x*(lat*5) )+( r5x*(lat*1) )+(ltx);       // [452]
                gty=( h3y*(lat*5) )+( r5y*(lat*1) )+(lty);       // [452]
                                                                 // [452]
            //:------------:#_DO_THE_FUCKING_MATH_#:[452]://     // [452]
            //:#_PACK_IT_ALL_UP_#:[452]:-----------------://     // [452]
                                                                 // [452]
                o_obj_gtc.m_te7 =( te7 );                        // [452]
                o_obj_gtc.m_gtx =( gtx );                        // [452]
                o_obj_gtc.m_gty =( gty );                        // [452]
                                                                 // [452]
            //:-----------------:#_PACK_IT_ALL_UP_#:[452]://     // [452]
                                                                 // [---]
        };; //:END_BOD[ LTC_GTC ]:::::::::::::::::::::::::::::// // [449]
                                                                 // [449]
    //:=================================:#_LTC_TO_GTC_#:[449]:// // [449]
    //:=================================:#_GTC_TO_LTC_#:[449]:// // [449]
                                                                 // [---]
    const   F_TILEBOI_L_X_L_Y_M_X_M_Y_RO4_AM6 = function         // [340]
    PRIVATE_F_TILEBOI_L_X_L_Y_M_X_M_Y_RO4_AM6(                   // [340]
                                                                 // [340]
        i_l_x  //: @i_l_x@ : INPUT - Latching_X :::::::::://     // [340]
    ,   i_l_y  //: @i_l_y@ : INPUT - Latching_Y :::::::::://     // [340]
    ,   i_m_x  //: @i_m_x@ : INPUT -   Mirror_X :::::::::://     // [340]
    ,   i_m_y  //: @i_m_y@ : INPUT -   Mirror_Y :::::::::://     // [340]
    ,   i_ro4  //: @i_ro4@ : INPUT - Rotation Enumeration://     // [340]
    ){  //:BEGBODY[ F_TILEBOI_AM6 ]::::::::::::::::::::::://     // [340]
                                                                 // [340]
        if( d_eci >= 1 ){                                        // [340]
            if( 1                                                // [340]
            &&  i_l_x >= 0 && i_l_x <= 1                         // [340]
            &&  i_l_y >= 0 && i_l_y <= 1                         // [340]
            &&  i_m_x >= 0 && i_m_x <= 1                         // [340]
            &&  i_m_y >= 0 && i_m_y <= 1                         // [340]
            &&  i_ro4 >= 0 && i_ro4 <=(4-1)                      // [340]
            ){                                                   // [340]
                /** Okay. All Values Valid. **/                  // [340]
            }else{                                               // [340]
                ERR( "[#_WE_VE_GOT_A_WAR_FOR_YOU_2022_#]" );     // [340]
            };;                                                  // [340]
        };;                                                      // [340]
                                                                 // [340]
        var o_am6 =( 0 );                                        // [340]
                                                                 // [340]
        //:             |<---ro4_rb0-->||<---ro4_rb1-->| ://     // [340]
        //: i_ro4 ===BIN[ ___0_orr_1___  ___0_orr_1___ ] ://     // [340]
                                                                 // [340]
        var ro4_rb0 =( ( i_ro4 >>> 1 )&( 0x1 ) );                // [340]
        var ro4_rb1 =( ( i_ro4 >>> 0 )&( 0x1 ) );                // [340]
                                                                 // [340]
        o_am6 =( 0x00 /////////////////                          // [340]
                                                                 // [340]
        |  ( ( i_l_x     & 0x1 ) << 5 )                          // [340]
        |  ( ( i_l_y     & 0x1 ) << 4 )                          // [340]
        |  ( ( i_m_x     & 0x1 ) << 3 )                          // [340]
        |  ( ( i_m_y     & 0x1 ) << 2 )                          // [340]
        |  ( (   ro4_rb0 & 0x1 ) << 1 )                          // [340]
        |  ( (   ro4_rb1 & 0x1 ) << 0 )                          // [340]
                                                                 // [340]
        )>>>( 0 );;;;;;;;;;;;;;;;;;;;;;                          // [340]
                                                                 // [340]
        if( d_eco >= 1 ){                                        // [340]
                                                                 // [340]
            ASS( o_am6 >= (   0) , "[o_am6:TOO_LOW]" );          // [340]
            ASS( o_am6 <= (64-1) , "[o_am6:TOO_BIG]" );          // [340]
            ASS( o_am6 <= (0x3F) , "[o_am6:T__M__B]" );          // [340]
        };;                                                      // [340]
        return( o_am6 );                                         // [340]
                                                                 // [340]
    };; //:ENDBODY[ F_TILEBOI_AM6 ]::::::::::::::::::::::://     // [340]
                                                                 // [---]
    const   F_TILEBOI_L_X_L_Y_M_X_M_Y_AM4 = function //::://     // [339]
    PRIVATE_F_TILEBOI_L_X_L_Y_M_X_M_Y_AM4(           //::://     // [339]
                                                                 // [339]
        i_l_x  //: @i_l_x@ : INPUT - Latching_X :::::::::://     // [339]
    ,   i_l_y  //: @i_l_y@ : INPUT - Latching_Y :::::::::://     // [339]
    ,   i_m_x  //: @i_m_x@ : INPUT -   Mirror_X :::::::::://     // [339]
    ,   i_m_y  //: @i_m_y@ : INPUT -   Mirror_Y :::::::::://     // [339]
    ){                                                           // [339]
        if( d_eci >= 1 ){                                        // [339]
            if( !( i_l_x >= 0 ) ){ERR("[i_l_x:NEGORNAN]");};     // [339]
            if( !( i_l_x <= 1 ) ){ERR("[i_l_x:POSORNAN]");};     // [339]
                                                                 // [339]
            if( !( i_l_y >= 0 ) ){ERR("[i_l_y:NEGORNAN]");};     // [339]
            if( !( i_l_y <= 1 ) ){ERR("[i_l_y:POSORNAN]");};     // [339]
                                                                 // [339]
            if( !( i_m_x >= 0 ) ){ERR("[i_m_x:NEGORNAN]");};     // [339]
            if( !( i_m_x <= 1 ) ){ERR("[i_m_x:POSORNAN]");};     // [339]
                                                                 // [339]
            if( !( i_m_y >= 0 ) ){ERR("[i_m_y:NEGORNAN]");};     // [339]
            if( !( i_m_y <= 1 ) ){ERR("[i_m_y:POSORNAN]");};     // [339]
        };;                                                      // [339]
        var o_am4 =( 0 );                                        // [339]
                                                                 // [339]
        o_am4 =( 0x00 /////////////                              // [339]
                                                                 // [339]
        |  ( ( i_l_x & 0x1 ) << 3 )                              // [339]
        |  ( ( i_l_y & 0x1 ) << 2 )                              // [339]
        |  ( ( i_m_x & 0x1 ) << 1 )                              // [339]
        |  ( ( i_m_y & 0x1 ) << 0 )                              // [339]
                                                                 // [339]
        )>>>( 0 );;;;;;;;;;;;;;;;;;                              // [339]
                                                                 // [339]
        return( o_am4 );                                         // [339]
                                                                 // [339]
    };; //:ENDFUNC[ F_TILEBOI_L_X_L_Y_M_X_M_Y_AM4 ]::::::://     // [339]
                                                                 // [-------------]
    const   F_TILEBOI_LA3_V16_U32 = function                     // [185][MOV][170]
    PRIVATE_F_TILEBOI_LA3_V16_U32(                               // [185][MOV][170]
                                                                 // [185][MOV][170]
        i_la3  //:Data Layer[ 0==TILES,1==BOMBS,2==FADA ]://     // [185][MOV][170]
    ,   i_v16  //:Tile_VALUE[ #_0_TO_15_ALL_LAYERS_#    ]://     // [185][MOV][170]
    ){                                                           // [185][MOV][170]
        var o_u32 =( 0x00000000 );  //: Output_Tile_Data ://     // [185][MOV][170]
        //:::::::::( 0xAARRGGBB )::::::::::::::::::::::::://     // [185][MOV][170]
                                                                 // [185][MOV][---]
        if( d_eci >= 1 ){                                        // [185][MOV][172]
            ASS( i_la3 >= 0 && i_la3 <=( 3-1) , "[I_LA3]" );     // [185][MOV][172]
            ASS( i_v16 >= 0 && i_v16 <=(16-1) , "[I_V16]" );     // [185][MOV][172]
        };;                                                      // [185][MOV][172]
                                                                 // [185][MOV][172]
        if( c_lay_til === i_la3 ){                               // [185][MOV][172]
                                                                 // [185][MOV][172]
            let e_t_i =( 0x00 /**@e_t_i@**/ );                   // [185][MOV][172]
            ASS(e_t_i < 0xF0000000 , "[@E_T_I_TMD@]" );          // [185][MOV][172]
            //:_________0xAARRGGBB__________________://          // [185][MOV][172]
                                                                 // [185][MOV][172]
            o_u32 =(( 0x00                                       // [185][MOV][172]
            |      (  ( i_v16 & 0x0000000F ) << (  28) )         // [185][MOV][172]
            |      (  ( e_t_i & 0x0FFFFFFF ) << (   0) )         // [185][MOV][172]
            )>>>0 );; //::::::::0x12345678:::::::::::://         // [185][MOV][172]
        }else                                                    // [185][MOV][172]
        if( c_lay_bom === i_la3 ){                               // [185][MOV][172]
                                                                 // [185][MOV][172]
            let e_b_i =( 0x00 /**@e_b_i@**/ );                   // [185][MOV][172]
            ASS(e_b_i < 0xF0000000 , "[@E_B_I_TMD@]" );          // [185][MOV][172]
            //:_________0xAARRGGBB__________________://          // [185][MOV][172]
                                                                 // [185][MOV][172]
            o_u32 =(( 0x00                                       // [185][MOV][172]
            |      (  ( i_v16 & 0x0000000F ) << (  28) )         // [185][MOV][172]
            |      (  ( e_b_i & 0x0FFFFFFF ) << (   0) )         // [185][MOV][172]
            )>>>0 );; //::::::::0x12345678:::::::::::://         // [185][MOV][172]
        }else                                                    // [185][MOV][172]
        if( c_lay_fad === i_la3 ){                               // [185][MOV][172]
                                                                 // [185][MOV][172]
            let e_f_i =( d_tik /**@e_f_i@**/ );                  // [185][MOV][172]
            ASS(e_f_i < 0xF0000000 , "[@E_F_I_TMD@]" );          // [185][MOV][172]
            //:_________0xAARRGGBB__________________://          // [185][MOV][172]
                                                                 // [185][MOV][172]
            o_u32 =(( 0x00                                       // [185][MOV][172]
            |      (  ( i_v16 & 0x0000000F ) << (  28) )         // [185][MOV][172]
            |      (  ( e_f_i & 0x0FFFFFFF ) << (   0) )         // [185][MOV][172]
            )>>>0 );; //::::::::0x12345678:::::::::::://         // [185][MOV][172]
                                                                 // [185][MOV][172]
            if( d_bug >= 1 ){                                    // [185][MOV][172]
                                                                 // [185][MOV][172]
                ASS( o_u32 >= 0 , "[VAL_GT0]" );                 // [185][MOV][172]
                //::::::::::::::::::::::::::::0x12345678:://     // [185][MOV][172]
                let v16 =(( o_u32 >>> (28) )&(0x0000000F));      // [185][MOV][172]
                let tik =(( o_u32 >>> ( 0) )&(0x0FFFFFFF));      // [185][MOV][172]
                //::::::::::::::::::::::::::::0xRRGGBBAA:://     // [185][MOV][172]
                if( tik!=d_tik ){                                // [185][MOV][172]
                    YEL("[TICKINFUCKED2022]");                   // [185][MOV][172]
                    ERR("[TICKINFUCKED2022]");                   // [185][MOV][172]
                };;                                              // [185][MOV][172]
                if( v16!=i_v16 ){                                // [185][MOV][172]
                    YEL("[V16_CHECK_FAIL_2022]");                // [185][MOV][172]
                    ERR("[V16_CHECK_FAIL_2022]");                // [185][MOV][172]
                };;                                              // [185][MOV][172]
            };;                                                  // [185][MOV][172]
        }else{                                                   // [185][MOV][172]
            ERR("[NOT:til_bom_fad:2022]");                       // [185][MOV][172]
        };;                                                      // [185][MOV][172]
                                                                 // [185][MOV][---]
        return( o_u32 );                                         // [185][MOV][170]
    };;                                                          // [185][MOV][170]

    const   F_TILEBOI_LA3_V16_AM6_U32 = function  //////////     // [341][CPR][323]
    PRIVATE_F_TILEBOI_LA3_V16_AM6_U32(            //////////     // [341][CPR][323]
                                                                 // [341][--------]
        i_la3  //:Data Layer[ 0==TILES,1==BOMBS,2==FADA ]://     // [341][COP][323]
    ,   i_v16  //:Tile_VALUE[ #_0_TO_15_ALL_LAYERS_#    ]://     // [341][COP][323]
    ,   i_am6  //:Auto_Tiling_Method[ 6 bits total      ]://     // [341][CPR][323]
                                                                 // [341][--------]
    ){  //:FUNCBOD_BEG[ F_TILEBOI_LA3_V16_AM6_U32 ]::::::://     // [341][--------]
                                                                 // [341][--------]
        if( d_eci >= 1 ){                                        // [341][COP][323]
            if( i_am6 < 0x00 ){ ERR("[AM6_0x00]"); };            // [341][CPR][323]
            if( i_am6 > 0x3F ){ ERR("[AM6_0x3F]"); };            // [341][CPR][323]
            //:@GTF@ : Greater_Than_F://                         // [341][COP][323]
        };;                                                      // [341][COP][323]
        var o_u32 ;                                              // [341][COP][323]
                                                                 // [341][COP][323]
        let la3 =( i_la3 );                                      // [341][COP][323]
        let v16 =( i_v16 );                                      // [341][COP][323]
        o_u32 = F_TILEBOI_LA3_V16_U32(                           // [341][COP][323]
                          la3,v16     );;                        // [341][COP][323]
                                                                 // [341][COP][323]
        //: |<---RED--->|<--GREEN-->|<--BLUE--->|<--ALPHA-->|:// // [341][COP][323]
        //: [ 1111 1111 | 11?? ???? | ???? ???? | ???? ???? ]:// // [341][COP][323]
        //: [ _v16 _am4 |           | DONT_CARE | DONT_CARE ]:// // [341][COP][323]
        //: [ 1111 ] <------------- _v16 ___________________ :// // [341][--------]
        //:      [ 1111 | 11 ] <--- _am6 ___________________ :// // [341][--------]
        if( 0 === i_la3 /** #_Extra_Geom_Info_Bits_# **/ ){      // [341][CPR][323]
                                                                 // [341][COP][323]
            o_u32 =( o_u32 | ( i_am6 << 22 ) );                  // [341][CPR][323]
        }else                                                    // [341][--------]
        if( 1 === i_la3 /** #_Extra_Bomb_Info_Bits_# **/ ){      // [341][--------]
                                                                 // [341][--------]
            o_u32 =( o_u32 /** #_NOEXTRA_INFO_BITS_# **/ );      // [341][--------]
        }else                                                    // [341][--------]
        if( 2 === i_la3 /** #_Extra_Fada_Info_Bits_# **/ ){      // [341][--------]
                                                                 // [341][--------]
            o_u32 =( o_u32 /** #_NOEXTRA_INFO_BITS_# **/ );      // [341][--------]
        }else{                                                   // [341][--------]
            ERR( "[HOW_THE_HELL_DID_YOU_GET_IN_MY_HOUSE]" );     // [341][--------]
        };;                                                      // [341][--------]
                                                                 // [341][COP][323]
        return( o_u32 );                                         // [341][COP][323]
                                                                 // [341][--------]
    };; //:FUNCBOD_END[ F_TILEBOI_LA3_V16_AM6_U32 ]::::::://     // [341][--------]
                                              
    const   F_TILEBOI_LA3_V16_AM4_U32 = function    //////////// // [323]
    PRIVATE_F_TILEBOI_LA3_V16_AM4_U32(              //////////// // [323]
                                                                 // [323]
        i_la3  //:Data Layer[ 0==TILES,1==BOMBS,2==FADA ]://     // [323]
    ,   i_v16  //:Tile_VALUE[ #_0_TO_15_ALL_LAYERS_#    ]://     // [323]
    ,   i_am4  //:Auto_Tiling_Method[ 4 bits total      ]://     // [323]
    ){                                                           // [323]
        if( d_eci >= 1 ){                                        // [323]
            if( i_am4 < 0x0 ){ ERR("[AM4_CANT_BE:NEG]"); };      // [323]
            if( i_am4 > 0xF ){ ERR("[AM4_CANT_BE:GTF]"); };      // [323]
            //:@GTF@ : Greater_Than_F://                         // [323]
        };;                                                      // [323]
        var o_u32 ;                                              // [323]
                                                                 // [323]
        let la3 =( i_la3 );                                      // [323]
        let v16 =( i_v16 );                                      // [323]
        o_u32 = F_TILEBOI_LA3_V16_U32(                           // [323]
                          la3,v16     );;                        // [323]
                                                                 // [323]
        //: |<---RED--->|<--GREEN-->|<--BLUE--->|<--ALPHA-->|:// // [323]
        //: [ 1111 1111 | ???? ???? | ???? ???? | ???? ???? ]:// // [323]
        //: [ _v16 _am4 | DONT_CARE | DONT_CARE | DONT_CARE ]:// // [323]
        if( 0 === i_la3 /** #_Geometry_Layer_Only_# **/ ){       // [323]
                                                                 // [323]
            o_u32 =( o_u32 | ( i_am4 << 24 ) );                  // [323]
        };;                                                      // [323]
                                                                 // [323]
        return( o_u32 );                                         // [323]
    };; ////////////////////////////////////////////////////     // [323]

    const _TILEBOI_WRONG_FUNCTION_NAMES_ = "[HACK]" ////////     // [185][MOV][161]
                                                    ////////     // [185][MOV][161]
    //: FTB_ES_PG_U32 == [F_TILEBOI_[E_S]_[P_G]_U32]:::::://     // [185][MOV][161]
    //: FTB ......... == "F_TILEBOI"                :::::://     // [185][MOV][161]
    //: ....ES....... == "EDI" || "SIM"             :::::://     // [185][MOV][161]
    //: .......PG.... == "PUT" || "GET"             :::::://     // [185][MOV][161]
    //: ..........U32 == "U32" (uint32 input)       :::::://     // [185][MOV][161]
                                                    ////////     // [185][MOV][161]
    ,   F_TILEBOI_U32_PUT     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
    ,   F_TILEBOI_PUT_U32     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
    ,   F_TILEBOI_U32_GET     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
    ,   F_TILEBOI_GET_U32     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
                                                    ////////     // [185][MOV][161]
    ,   F_TILEBOI_U32_PUT_ANY = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
    ,   F_TILEBOI_U32_GET_ANY = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
    ,   F_TILEBOI_U32_ANY_GET = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
    ,   F_TILEBOI_U32_ANY_PUT = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
                                                    ////////     // [185][MOV][161]
    ,   F_TILEBOI_PUT_SIM     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
    ,   F_TILEBOI_GET_SIM     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
    ,   F_TILEBOI_PUT_EDI     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
    ,   F_TILEBOI_GET_EDI     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
                                                    ////////     // [185][MOV][161]
    ,   F_TILEBOI_SIM_PUT     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
    ,   F_TILEBOI_SIM_GET     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
    ,   F_TILEBOI_EDI_PUT     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
    ,   F_TILEBOI_EDI_GET     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][161]
                                                                 // [185][MOV][---]
    ,   F_TILEBOI_PUT_TIL_U32 = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][170]
    ,   F_TILEBOI_GET_TIL_U32 = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][170]
    ,   F_TILEBOI_TIL_PUT_U32 = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][170]
    ,   F_TILEBOI_TIL_GET_U32 = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][170]
                                                    ////////     // [185][MOV][170]
    ,   F_TILEBOI_PUT_TIL     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][170]
    ,   F_TILEBOI_GET_TIL     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][170]
    ,   F_TILEBOI_TIL_PUT     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][170]
    ,   F_TILEBOI_TIL_GET     = "[FTB_ES_PG_U32]"   ////////     // [185][MOV][170]
                                                                 // [185][MOV][---]
                                                    ////////     // [185][MOV][161]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [185][MOV][161]
                                                                 // [185][MOV][161]
                                                                 // [185][MOV][---]
    //:Calc_Data_Pixel_Component:[162]:------------------://     // [185][MOV][162]
                                                                 // [185][MOV][162]
    const   F_TILEBOI_HI9_TE7_LA3_TLX_TLY_DPI = "[WRONG]" ;;     // [185][MOV][162]
    const   F_TILEBOI_HI9_TE7_LA3_TLX_TLY_COM = "[WRONG]" ;;     // [185][MOV][162]
                                                                 // [185][MOV][162]
    const   F_TILEBOI_HI9_TE7_LA3_TLX_TLY_DPC = function         // [185][MOV][162]
    PRIVATE_F_TILEBOI_HI9_TE7_LA3_TLX_TLY_DPC(                   // [185][MOV][162]
                                                                 // [185][MOV][162]
        i_hi9       //: Which Of The 9 Hotels Are We In? ://     // [185][MOV][162]
    ,   i_te7       //: What Tile Size Are We Using?     ://     // [185][MOV][162]
    ,   i_la3       //: Data Layer? Tiles,Bombs,Fada?    ://     // [185][MOV][162]
    ,   i_tlx       //: Tile Local X (LevelPackLocal)    ://     // [185][MOV][162]
    ,   i_tly       //: Tile Local Y (LevelPackLocal)    ://     // [185][MOV][162]
    ){                                                           // [185][MOV][162]
        if( d_eci >= 1 ){                                        // [185][MOV][166]
                                                                 // [185][MOV][166]
            ASS( i_hi9 >= 0 && i_hi9 <= (9-1)     );             // [185][MOV][166]
            let    h3x =(           ( i_hi9 % 3 ) );             // [185][MOV][166]
            let    h3y =Math.floor( ( i_hi9 / 3 ) );             // [185][MOV][166]
            ASS(   h3x >= 0 && h3x <= (3-1) );                   // [185][MOV][166]
            ASS(   h3y >= 0 && h3y <= (3-1) );                   // [185][MOV][166]
                                                                 // [185][MOV][166]
            ASS( i_te7 >= 0 && i_te7 <=(7-1) , "[TE7_166]");     // [185][MOV][166]
            ASS( i_la3 >= 0 && i_la3 <=(3-1) , "[LA3_166]");     // [185][MOV][166]
                                                                 // [185][MOV][166]
            let lateral_span_of_dataset = d_te7_lat[ i_te7 ];    // [185][MOV][166]
            let lahotel =( 5 * lateral_span_of_dataset );        // [185][MOV][166]
            ASS( i_tlx >=(    0    ) , "[TLX:VID_162]" );        // [185][MOV][166]
            ASS( i_tly >=(    0    ) , "[TLY:VID_162]" );        // [185][MOV][166]
            ASS( i_tlx <=(lahotel-1) , "[TLX:VID_162]" );        // [185][MOV][166]
            ASS( i_tly <=(lahotel-1) , "[TLY:VID_162]" );        // [185][MOV][166]
        };;                                                      // [185][MOV][166]
        var o_dpc =(0-666); //:@o_dpc@:OutputDataPixelCom://     // [185][MOV][162]
                                                                 // [185][MOV][---]
        var   dpx =(   0 ); //: @dpx@ : DataPixel - X    ://     // [185][MOV][166]
        var   dpy =(   0 ); //: @dpy@ : DataPixel - Y    ://     // [185][MOV][166]
        var   dpi =(   0 ); //: @dpi@ : DataPixel - I    ://     // [185][MOV][166]
        ///   dpc =(   0 ); //: @dpc@ : DataPixel - C    ://     // [185][MOV][166]
                                                                 // [185][MOV][166]
                                                                 // [185][MOV][---]
        //:#_MULTISECTION_LAT_#:[171]:-------------------://     // [185][MOV][---]
            const                                                // [185][MOV][171][---]
                lat = d_te7_lat[ i_te7 ];//:#TAG_TE7_LAT#://     // [185][MOV][171][166]
                                                                 // [185][MOV][---]
        //:-------------------:#_MULTISECTION_LAT_#:[171]://     // [185][MOV][---]
        //:(MEM_CEL):[166]:------------------------------://     // [185][MOV][166]
        //:(HOT_CEL):[167]:------------------------------://     // [185][MOV][---]
                                                                 // [185][MOV][166]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [185][MOV][167]
            //: Get Master Memory Cell Storing Hotel ::::://     // [185][MOV][166]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [185][MOV][167]
            //: A[HOT_CEL] is a[MEM_CEL] but a[MEM_CEL]  ://     // [185][MOV][167]
            //: is not necessarily a[HOT_CEL]            ://     // [185][MOV][167]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [185][MOV][167] 
                                                                 // [185][MOV][166]
            var mmx = d_hi9_mmx[ i_hi9 ]; //: MEM_CEL.X  ://     // [185][MOV][171][FIX][166]
            var mmy = d_hi9_mmy[ i_hi9 ]; //: MEM_CEL.Y  ://     // [185][MOV][171][FIX][166]
                                        //:#DIA_MMX_MMY# ://     // [185][MOV][---][166]
                                                                 // [185][MOV][---][166]
        //:------------------------------:(HOT_CEL):[167]://     // [185][MOV][---][---]
        //:------------------------------:(MEM_CEL):[166]://     // [185][MOV][166][---]
        //:(LEV_CEL):[167]:------------------------------://     // [185][MOV][167][---][166]
        //:(ROM_CEL):[167]:------------------------------://     // [185][MOV][167][---]
                                                                 // [185][MOV][---][166]
            //: Get Cell Storing Room In Hotel([r5x,r5y])://     // [185][MOV][---][166]
                                                                 // [185][MOV][---][166]
            let M_F =( Math.floor );     //:#DIA_ROM_CEL#://     // [185][MOV][167][---][166]
            var r5x =    M_F( i_tlx / lat ); //:#TAG_R5X#://     // [185][MOV][---][166]
            var r5y =    M_F( i_tly / lat ); //:#TAG_R5Y#://     // [185][MOV][---][166]
                                                                 // [185][MOV][---][166]
            if( d_bug >= 1 ){                                    // [185][MOV][---][---][166]
                if( (!( r5x >= 0 && r5x <=(5-1) ))               // [185][MOV][171][---][166]
                ||  (!( r5y >= 0 && r5y <=(5-1) ))               // [185][MOV][171][---][166]
                ){                                               // [185][MOV][171][---][166]
                    if( Number.isNaN( r5x ) ){                   // [185][MOV][171][---][---]
                        console.log("[r5x_is_nan_number]");      // [185][MOV][171][---][---]
                    };;                                          // [185][MOV][171][---][---]
                    if( Number.isNaN( r5y ) ){                   // [185][MOV][171][---][---]
                        console.log("[r5y_is_nan_number]");      // [185][MOV][171][---][---]
                    };;                                          // [185][MOV][171][---][---]
                                                                 // [185][MOV][171][---][---]
                    LOG( "[R5X_VAL]::" , r5x );                  // [185][MOV][171][---][---]
                    LOG( "[R5Y_VAL]::" , r5y );                  // [185][MOV][171][---][---]
                    ERR( "[OOB_R5X_ORR_R5Y]" );                  // [185][MOV][171][---][166]
                };;                                              // [185][MOV][171][---][166]
            };;                                                  // [185][MOV][166]
            var g25 =( r5x +( r5y * 5 ) ); //:(r5i===g25)://     // [185][MOV][166]
                                                                 // [185][MOV][166]
            if( d_bug >= 1 ){                                    // [185][MOV][166]
                ASS( g25 >= 0 && g25 <=(25-1) , "[!G25!]" );     // [185][MOV][166]
            };;                                                  // [185][MOV][166]
                                                                 // [185][MOV][166]
            //:------------------------------------------://     // [185][MOV][166]
            //: SEE[ TAG_R4X_R4Y ]                       ://     // [185][MOV][166]
            //:------------------------------------------://     // [185][MOV][166]
            //: [r4x,r4y] is the [DAT]a   position.      ://     // [185][MOV][166]
            //: [r5x,r5y] is the [REN]der position.      ://     // [185][MOV][166]
            //:---------------------------:              ://     // [185][MOV][166]
                                        //: [DAT]!=[REN] ://     // [185][MOV][166]
            var r4x = d_g25_r4x[ g25 ]; //:  r4x != r5x  ://     // [185][MOV][166]
            var r4y = d_g25_r4y[ g25 ]; //:  r4y != r5y  ://     // [185][MOV][166]
            var rdi = d_g25_r13[ g25 ]; //:--------------://     // [185][MOV][171][FIX][166]
                                                                 // [185][MOV][---]
            if( d_bug >= 1 ){ //:------------------------://     // [185][MOV][171][---]
                                                                 // [185][MOV][171][---]
                let chk =( r4x + ( r4y * 4 ) );                  // [185][MOV][171][---]
                if( chk !== rdi ){                               // [185][MOV][171][---]
                                                                 // [185][MOV][171][---]
                    LOG( "[...:g25]:" , g25 );                   // [185][MOV][171][---]
                    LOG( "[...:r4x]:" , r4x );                   // [185][MOV][171][---]
                    LOG( "[...:r4y]:" , r4y );                   // [185][MOV][171][---]
                    LOG( "[act_rdi]:" , rdi );                   // [185][MOV][171][---]
                    LOG( "[exp_rdi]:" , chk );                   // [185][MOV][171][---]
                    ERR( "[BAD_RDI]"        );                   // [185][MOV][171][---]
                };;                                              // [185][MOV][171][---]
                ASS( r4x + ( r4y * 4 )===rdi,"[RDI_2022]" );     // [185][MOV][---][166]
                                                                 // [185][MOV][---][---]
            };; //:--------------------------------------://     // [185][MOV][171][---]
                                                                 // [185][MOV][166]
        //:------------------------------:(ROO_CEL):[167]://     // [185][MOV][167]
        //:------------------------------:(LEV_CEL):[167]://     // [185][MOV][167][166]
        //:(TIL_SIZ):[166]:------------------------------://     // [185][MOV][---][166]
                                                                 // [185][MOV][---][166]
            var dia = d_te7_dia[ i_te7 ];//:#TAG_TE7_DIA#://     // [185][MOV][---][166]
                                                                 // [185][MOV][---][166]
        //:------------------------------:(TIL_SIZ):[166]://     // [185][MOV][---][166]
        //:(TIL_LAY):[166]:------------------------------://     // [185][MOV][---][166]
                                                                 // [185][MOV][---][166]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [185][MOV][---][166]
            //: Offset Into Correct Layer Of Data        ://     // [185][MOV][---][166]
            //: Offset To Data X === layer_x             ://     // [185][MOV][---][166]
            //: Offset To Data Y === layer_y             ://     // [185][MOV][---][166]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [185][MOV][---][166]
            //: if [lmx,lmy]===[0,0], THEN : TILES layer ://     // [185][MOV][---][166]
            //: if [lmx,lmy]===[1,0], THEN : BOMBS layer ://     // [185][MOV][---][166]
            //: if [lmx,lmy]===[0,1], THEN : FADA  layer ://     // [185][MOV][---][166]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [185][MOV][---][166]
                                                                 // [185][MOV][---][166]
            var lmx = d_la3_lmx[ i_la3 ];//:#TAG_TE7_LMX#://     // [185][MOV][---][166]
            var lmy = d_la3_lmy[ i_la3 ];//:#TAG_TE7_LMY#://     // [185][MOV][---][166]
                                                                 // [185][MOV][---][166]
            var layer_x =( lat * lmx );                          // [185][MOV][---][166]
            var layer_y =( lat * lmy );                          // [185][MOV][---][166]
                                                                 // [185][MOV][---][166]
            if( d_bug >= 1 ){                                    // [185][MOV][---][166]
                                                                 // [185][MOV][---][166]
                ASS( lmx + lmy >= 0 , "[LAYCHK1:LOW]" );         // [185][MOV][171][FIX][166]
                ASS( lmx + lmy <= 1 , "[LAYCHK1:HIG]" );         // [185][MOV][171][FIX][166]
            };;                                                  // [185][MOV][---][166]
        //:------------------------------:(TIL_LAY):[166]://     // [185][MOV][---][166]
        //:(TXY):[166]:----------------------------------://     // [185][MOV][---][166]
                                                                 // [185][MOV][---][166]
            //: Get [ room/level ]local tile( [t_x,t_y] )://     // [185][MOV][---][166]
                                                                 // [185][MOV][---][166]
            var t_x = i_tlx - ( r5x * lat );                     // [185][MOV][---][166]
            var t_y = i_tly - ( r5y * lat );                     // [185][MOV][---][166]
                                                                 // [185][MOV][---][166]
        //:----------------------------------:(TXY):[166]://     // [185][MOV][---][166]
        //:ALL_TOGETHER_NOW:[166]:-----------------------://     // [185][MOV][---][166]
                                                                 // [185][MOV][---][166]
        //:  (MEM_CEL)+(LEV_CEL)+(TIL_SIZ)+(TIL_LAY)+(TXY)://    // [185][MOV][167][166]
        //:  (HOT_CEL)+(ROM_CEL)+(TIL_SIZ)+(TIL_LAY)+(TXY)://    // [185][MOV][167][---]
        dpx =(mmx*512)+(r4x*128)+(  dia  )+(layer_x)+(t_x);      // [185][MOV][166]
        dpy =(mmy*512)+(r4y*128)+(  dia  )+(layer_y)+(t_y);      // [185][MOV][166]
                                                                 // [185][MOV][166]
        //:-----------------------:ALL_TOGETHER_NOW:[166]://     // [185][MOV][166]
        //:MULTIPLY_BY_FOR_YOU_FOOL:[166]:---------------://     // [185][MOV][166]
                                                                 // [185][MOV][166]
            dpi =( dpx + ( dpy * 2048 ) ); //: @PIX_DEX@ ://     // [185][MOV][166]
          o_dpc =( 4 * dpi ); //:< < < < < < < @PIX_COM@ ://     // [185][MOV][166]
                                                                 // [185][MOV][166]
        //:---------------:MULTIPLY_BY_FOR_YOU_FOOL:[166]://     // [185][MOV][166]
                                                                 // [185][MOV][---]
        return( o_dpc );                                         // [185][MOV][162]
                                                                 // [185][MOV][---][---]
    };; //:ENDFUNC[ HI9_TE7_LA3_TLX_TLY_DPC ]::::::::::::://     // [185][MOV][171][162]
                                                                 // [185][MOV][162]
    //:------------------:Calc_Data_Pixel_Component:[162]://     // [185][MOV][162]
                                                                 // [185][MOV][---]
    //:--------------------------------------------------://     // [185][MOV][161]
    //: I didn't like these variable names in HOTEL13.JS ://     // [185][MOV][161]
    //: I found them a bit too ambigious, avoid them.    ://     // [185][MOV][161]
    //:--------------------------------------------------://     // [185][MOV][161]
    //: @i_c_x@ : Used in Hotel13.JS , use[ i_h3x ] :----://     // [185][MOV][161]
    //: @i_c_y@ : Used in Hotel13.JS , use[ i_h3y ] :----://     // [185][MOV][161]
    //: @i_h_x@ : Used in Hotel13.JS , use[ i_r5x ] :----://     // [185][MOV][161]
    //: @i_h_y@ : Used in Hotel13.JS , use[ i_r5y ] :----://     // [185][MOV][161]
    //: @i_t_x@ : USE_SIM[ i_ltx ] USE_EDI[ i_gtx ] :----://     // [185][MOV][161]
    //: @i_t_y@ : USE_SIM[ i_lty ] USE_EDI[ i_gty ] :----://     // [185][MOV][161]
    //:--------------------------------------------------://     // [185][MOV][161]
                                                                 // [185][MOV][161]
    const   F_TILEBOI_EDI_PUT_U32 = function                     // [185][MOV][161]
    PRIVATE_F_TILEBOI_EDI_PUT_U32(    //:TAG[ FTB_ES_PG_U32 ]:// // [185][MOV][161]
                     //:-------------------------------------:// // [185][MOV][161]
        i_te7,i_la3  //:<--TileSize_And_Layer                :// // [185][MOV][161]
    ,   i_gtx,i_gty  //:<--Dum_Global_Coordinate             :// // [185][MOV][161]
    ,   i_u32        //:<--Raw_U32_Tile_Value                :// // [185][MOV][161]
                     //:-------------------------------------:// // [185][MOV][161]
    ){                                                           // [185][MOV][161]
                                                                 // [185][MOV][---]
        var   o_k =( 1 );   //: Don't Continue If Not OK ://     // [185][MOV][168][162]
        var   dpc =( 0 );      //:#_MAYBE_SCOPE_PROBLEM_#://     // [197][--------]
                                                                 // [185][MOV][162]
        const te7 =(            i_te7   );                       // [185][MOV][162]
        const la3 =(            i_la3   );                       // [185][MOV][162]
        const lat =( d_te7_lat[ i_te7 ] );                       // [185][MOV][162]
                                                                 // [185][MOV][162]
        const gmi     =((3*5*lat)-1); //:@gmi@:GlobalMaxIndex:// // [185][MOV][162]
        const lahotel =(   5*lat   ); //:Lateral_Span:HOTEL  :// // [185][MOV][162]
                                                                 // [185][MOV][162]
        if( ( i_gtx < 0 ) || ( i_gtx > gmi )                     // [185][MOV][162]
        ||  ( i_gty < 0 ) || ( i_gty > gmi )                     // [185][MOV][162]
        ){                                                       // [185][MOV][162]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [185][MOV][162]
            //: Do nothing, out of bounds.               ://     // [185][MOV][162]
            //: No failing fast for out of bounds input. ://     // [185][MOV][162]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [185][MOV][162]
            o_k=( 0 );  MSG( "[OOB_GTX_ORR_GTY]" );              // [197][185][MOV][162]
        };;                                                      // [185][MOV][162]
                                                                 // [185][MOV][162]
        if( o_k >= 1 ){                                          // [185][MOV][162]
                                                                 // [185][MOV][162]
            var h3x = ( Math.floor( i_gtx / lahotel ) );         // [185][MOV][162]
            var h3y = ( Math.floor( i_gty / lahotel ) );         // [185][MOV][162]
            var hi9 = ( h3x + ( h3y * 3 ) );                     // [185][MOV][162]
            var tlx = ( i_gtx - (     h3x * lahotel ) );         // [185][MOV][162]
            var tly = ( i_gty - (     h3y * lahotel ) );         // [185][MOV][162]
            var r5x = ( Math.floor(   tlx / lat     ) );         // [185][MOV][162]
            var r5y = ( Math.floor(   tly / lat     ) );         // [185][MOV][162]
            var g25 = ( r5x + ( r5y * 5 ) );                     // [185][MOV][162]
                                                                 // [185][MOV][162]
            ASS( h3x >= 0 && h3x <= (      3-1) , "[E_P:h3x]" ); // [185][MOV][162]
            ASS( h3y >= 0 && h3y <= (      3-1) , "[E_P:h3y]" ); // [185][MOV][162]
            ASS( hi9 >= 0 && hi9 <= (      9-1) , "[E_P:hi9]" ); // [185][MOV][162]
            ASS( tlx >= 0 && tlx <= ((5* 64)-1) , "[E_P_TLX]" ); // [185][MOV][162]
            ASS( tly >= 0 && tly <= ((5* 64)-1) , "[E_P_TLY]" ); // [185][MOV][162]
            ASS( tlx >= 0 && tlx <= ((5*lat)-1) , "[E_P:tlx]" ); // [185][MOV][162]
            ASS( tly >= 0 && tly <= ((5*lat)-1) , "[E_P:tly]" ); // [185][MOV][162]
            ASS( r5x >= 0 && r5x <= (      5-1) , "[E_P:r5x]" ); // [185][MOV][162]
            ASS( r5y >= 0 && r5y <= (      5-1) , "[E_P:r5y]" ); // [185][MOV][162]
            ASS( g25 >= 0 && g25 <= (     25-1) , "[E_P:g25]" ); // [185][MOV][162]
                                                                 // [185][MOV][162]
            var vod = d_g25_vod[ g25 ];                          // [185][MOV][162]
            if( vod ){ o_k =( 0 ); };                            // [185][MOV][162]
            if( vod ){ MSG( "[REFUSE:IN_THE_VOID]" ); };         // [197][--------]
        };;                                                      // [185][MOV][162]
        if( o_k >= 1 ){                                          // [185][MOV][162]
                                                                 // [185][MOV][162]
            //:-------------------------------://                // [185][MOV][162]
            //: @dpc@ : Data_Pixel_Component  ://                // [185][MOV][162]
            //: @dpi@ : Data_Pixel_Index      ://                // [185][MOV][162]
            //:  dpi * 4 === dpc              ://                // [185][MOV][162]
            //:-------------------------------://                // [185][MOV][162]
                                                                 // [185][MOV][162]
            dpc = F_TILEBOI_HI9_TE7_LA3_TLX_TLY_DPC(             // [197][185][MOV][162]
                                hi9,te7,la3,tlx,tly              // [185][MOV][162]
            );;                                                  // [185][MOV][162]
            ASS( dpc >= 0 && dpc <= ((4*2048*2048)-1)            // [185][MOV][162]
            ,   "[EDI_PUT_U32:OOB_DPC]" );;                      // [185][MOV][162]
                                                                 // [-------------]
            //:#_DPC_COORD_CHECK_#:[197]:--------------------:// // [197][--------]
            if( d_bug >= 1 || d_tileboi_log_put >= 1 ){          // [197][--------]
                                                                 // [197][--------]
                ASS_INT( dpc   , "[DPC_NOT_INT]" );              // [197][--------]
                ASS_INT( dpc/4 , "[DV4_NOT_INT]" );              // [197][--------]
                                                                 // [197][--------]
                let dpi = (     ( dpc /    4 ) ); ASS_INT(dpi);  // [197][--------]
                let put_dpx = (     ( dpi % 2048 ) );            // [197][--------]
                let put_dpy = (F_M_F( dpi / 2048 ) );            // [197][--------]
                                                                 // [197][--------]
                let put_h3x =F_M_F(  put_dpx / 512 );            // [197][--------]
                let put_h3y =F_M_F(  put_dpy / 512 );            // [197][--------]
                                                                 // [197][--------]
                let h3x_dpx =( put_dpx - (put_h3x*512) );        // [197][--------]
                let h3y_dpy =( put_dpy - (put_h3y*512) );        // [197][--------]
                                                                 // [197][--------]
                if( d_tileboi_log_put >= 1 ){ ;;;;               // [203]
                                                                 // [203]
                    LOG( "[put_dpx]:" , put_dpx );               // [197][--------]
                    LOG( "[put_dpy]:" , put_dpy );               // [197][--------]
                    LOG( "[put_h3x]:" , put_h3x );               // [197][--------]
                    LOG( "[put_h3y]:" , put_h3y );               // [197][--------]
                    LOG( "[h3x_dpx]:" , h3x_dpx );               // [197][--------]
                    LOG( "[h3y_dpy]:" , h3y_dpy );               // [197][--------]
                };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;               // [203]
                                                                 // [197][--------]
                if( put_h3x < 0 || put_h3x > (3-1)               // [197][--------]
                ||  put_h3y < 0 || put_h3y > (3-1)               // [197][--------]
                ){                                               // [197][--------]
                    ERR("[WTF_YOU_ARE_OUT_OF_BOUNDS]");          // [197][--------]
                };;                                              // [197][--------]
                                                                 // [197][--------]
            };;                                                  // [197][--------]
            //:--------------------:#_DPC_COORD_CHECK_#:[197]:// // [197][--------]
                                                                 // [185][MOV][---]
            //:_P2K_section_has_INVERSE_:[168]:--------------:// // [185][MOV][168]
            let p2k = d_pix2048 ; //:@FOR@:P2K_PUT_U32://        // [185][MOV][168]
                                  //:@REL@:P2K_GET_U32://        // [185][MOV][168]
                                                                 // [185][MOV][168]
            //: #_TILE_PUT_BIT_UN_PACK_DIAGRAM_#  @BITLOGIC@ :// // [185][MOV][168]
                                                                 // [185][MOV][168]
            var i_r =( i_u32 >>> 24 )&(0xFF) ;  //:  RED_BYTE:// // [197][--------]
            var i_g =( i_u32 >>> 16 )&(0xFF) ;  //:GREEN_BYTE:// // [197][--------]
            var i_b =( i_u32 >>>  8 )&(0xFF) ;  //: BLUE_BYTE:// // [197][--------]
            var i_a =( i_u32 >>>  0 )&(0xFF) ;  //:ALPHA_BYTE:// // [197][--------]
                                                                 // [---][--------]
            let A_B = ( ASSBYTE );                               // [197][--------]
                                                                 // [---][--------][---]
            d_pix2048[ dpc+0 ]=( i_r ) ; A_B( i_r,"[@RBS_R@]" ); // [197][185][MOV][168]
            d_pix2048[ dpc+1 ]=( i_g ) ; A_B( i_g,"[@RBS_G@]" ); // [197][185][MOV][168]
            d_pix2048[ dpc+2 ]=( i_b ) ; A_B( i_b,"[@RBS_B@]" ); // [197][185][MOV][168]
            d_pix2048[ dpc+3 ]=( i_a ) ; A_B( i_a,"[@RBS_A@]" ); // [197][185][MOV][168]
                                                                 // [---][--------][---]
                //:#_NO_DIRTY_OFF_#:[225]:---------------://     // [---][225]
                                                                 // [---][225]
                //- F_PIX2048_DIR_DPC( dpc ); -//                // [230][225]
                    F_GPUSYNC_DIRTYIT_DPC( dpc );                // [230][---]
                    ASS( d_pix2048_dir >= 1 , "[@D_D_1@]" );     // [---][225]
                                                                 // [---][225]
                //:---------------:#_NO_DIRTY_OFF_#:[225]://     // [---][225]
                                                                 // [-------------]
            //:--------------:_P2K_section_has_INVERSE_:[168]:// // [185][MOV][168]
            //:#_LOG_IF_TILE_WAS_PUT_#:[197]:----------------:// // [197][--------]
                                                                 // [197][--------]
            if( d_tileboi_log_put >= 1 ){                        // [197][--------]
                MSG("[TILE_PUT!!!!!!!!!!]");                     // [197][--------]
                LOG("[tile.dpc]:" ,   dpc );                     // [197][--------]
                LOG("[tile.u32]:" , i_u32 );                     // [197][--------]
                LOG("[tile.i_r]:" , i_r   );                     // [197][--------]
                LOG("[tile.i_g]:" , i_g   );                     // [197][--------]
                LOG("[tile.i_b]:" , i_b   );                     // [197][--------]
                LOG("[tile.i_a]:" , i_a   );                     // [197][--------]
            };;                                                  // [197][--------]
            //:----------------:#_LOG_IF_TILE_WAS_PUT_#:[197]:// // [197][--------]
        };; //:[ ? o_k ? ]::::::::::::::::::::::::::::::::::::// // [185][MOV][162]
                                                                 // [185][MOV][---]
    };;     //:ENDOF[ EDI_PUT_U32 ]:::::::::::::::::::::::::::// // [185][MOV][162][161]
    const   F_TILEBOI_EDI_GET_U32 = function                     // [185][MOV][161]
    PRIVATE_F_TILEBOI_EDI_GET_U32(    //:TAG[ FTB_ES_PG_U32 ]:// // [185][MOV][161]
                     //:-------------------------------------:// // [185][MOV][161]
        i_te7,i_la3  //:<--TileSize_And_Layer                :// // [185][MOV][161]
    ,   i_gtx,i_gty  //:<--Dum_Global_Coordinate             :// // [185][MOV][161]
    //- i_u32     -////:<--Raw_U32_Tile_Value (#FIX_003#)    :// // [185][MOV][168][161]
                     //:-------------------------------------:// // [185][MOV][161]
    ){                                                           // [185][MOV][161]
                                                                 // [185][MOV][---]
                          //:----------------------------://     // [185][MOV][168]
        var o_u32 =( 0 ); //: Output pixel as U32        ://     // [185][MOV][168]
                          //: If GET Out Of Bounds,      ://     // [185][MOV][168]
                          //: should return ZERO.        ://     // [185][MOV][168]
                          //:____________________________://     // [185][MOV][168]
                                                                 // [185][MOV][---]
        var   o_k =( 1 );   //: Don't Continue If Not OK ://     // [185][MOV][168][162]
                                                                 // [185][MOV][162]
        const te7 =(            i_te7   );                       // [185][MOV][162]
        const la3 =(            i_la3   );                       // [185][MOV][162]
        const lat =( d_te7_lat[ i_te7 ] );                       // [185][MOV][162]
                                                                 // [185][MOV][162]
        const gmi     =((3*5*lat)-1); //:@gmi@:GlobalMaxIndex:// // [185][MOV][162]
        const lahotel =(   5*lat   ); //:Lateral_Span:HOTEL  :// // [185][MOV][162]
                                                                 // [185][MOV][162]
        if( ( i_gtx < 0 ) || ( i_gtx > gmi )                     // [185][MOV][162]
        ||  ( i_gty < 0 ) || ( i_gty > gmi )                     // [185][MOV][162]
        ){                                                       // [185][MOV][162]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [185][MOV][162]
            //: Do nothing, out of bounds.               ://     // [185][MOV][162]
            //: No failing fast for out of bounds input. ://     // [185][MOV][162]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [185][MOV][162]
            o_k =( 0 );                                          // [185][MOV][162]
        };;                                                      // [185][MOV][162]
        if( o_k >= 1 ){                                          // [185][MOV][162]
                                                                 // [185][MOV][162]
            var h3x = ( Math.floor( i_gtx / lahotel ) );         // [185][MOV][162]
            var h3y = ( Math.floor( i_gty / lahotel ) );         // [185][MOV][162]
            var hi9 = ( h3x + ( h3y * 3 ) );                     // [185][MOV][162]
            var tlx = ( i_gtx - (     h3x * lahotel ) );         // [185][MOV][162]
            var tly = ( i_gty - (     h3y * lahotel ) );         // [185][MOV][162]
            var r5x = ( Math.floor(   tlx / lat     ) );         // [185][MOV][162]
            var r5y = ( Math.floor(   tly / lat     ) );         // [185][MOV][162]
            var g25 = ( r5x + ( r5y * 5 ) );                     // [185][MOV][162]
                                                                 // [185][MOV][162]
            ASS( h3x >= 0 && h3x <= (      3-1) , "[E_G:h3x]" ); // [185][MOV][162]
            ASS( h3y >= 0 && h3y <= (      3-1) , "[E_G:h3y]" ); // [185][MOV][162]
            ASS( hi9 >= 0 && hi9 <= (      9-1) , "[E_G:hi9]" ); // [185][MOV][162]
            ASS( tlx >= 0 && tlx <= ((5* 64)-1) , "[E_G_TLX]" ); // [185][MOV][162]
            ASS( tly >= 0 && tly <= ((5* 64)-1) , "[E_G_TLY]" ); // [185][MOV][162]
            ASS( tlx >= 0 && tlx <= ((5*lat)-1) , "[E_G:tlx]" ); // [185][MOV][162]
            ASS( tly >= 0 && tly <= ((5*lat)-1) , "[E_G:tly]" ); // [185][MOV][162]
            ASS( r5x >= 0 && r5x <= (      5-1) , "[E_G:r5x]" ); // [185][MOV][162]
            ASS( r5y >= 0 && r5y <= (      5-1) , "[E_G:r5y]" ); // [185][MOV][162]
            ASS( g25 >= 0 && g25 <= (     25-1) , "[E_G:g25]" ); // [185][MOV][162]
                                                                 // [185][MOV][162]
            var vod = d_g25_vod[ g25 ];                          // [185][MOV][162]
            if( vod ){ o_k =( 0 ); };                            // [185][MOV][162]
                                                                 // [185][MOV][162]
        };;                                                      // [185][MOV][162]
        if( o_k >= 1 ){                                          // [185][MOV][162]
                                                                 // [185][MOV][162]
            //:-------------------------------://                // [185][MOV][162]
            //: @dpc@ : Data_Pixel_Component  ://                // [185][MOV][162]
            //: @dpi@ : Data_Pixel_Index      ://                // [185][MOV][162]
            //:  dpi * 4 === dpc              ://                // [185][MOV][162]
            //:-------------------------------://                // [185][MOV][162]
                                                                 // [185][MOV][162]
            var dpc = F_TILEBOI_HI9_TE7_LA3_TLX_TLY_DPC(         // [185][MOV][162]
                                hi9,te7,la3,tlx,tly              // [185][MOV][162]
            );;                                                  // [185][MOV][162]
            ASS( dpc >= 0 && dpc <= ((4*2048*2048)-1)            // [185][MOV][162]
            ,   "[EDI_GET_U32:OOB_DPC]" );;                      // [185][MOV][162]
                                                                 // [185][MOV][---]
            //:_P2K_section_has_INVERSE_:[168]:--------------:// // [185][MOV][168]
            let p2k = d_pix2048 ;        //:@FOR@:P2K_GET_U32:// // [185][MOV][168]
                                         //:@REL@:P2K_PUT_U32:// // [185][MOV][168]
                                                                 // [185][MOV][168]
            //: #_TILE_GET_BIT____PACK_DIAGRAM_#  @BITLOGIC@ :// // [185][MOV][168]
                                                                 // [185][MOV][168]
            o_u32 =(( 0x00                                       // [185][MOV][168]
            |    ( ( p2k[ dpc+0 ] )<< 24 )//:@LEF_S_R@://        // [185][MOV][168]
            |    ( ( p2k[ dpc+1 ] )<< 16 )//:@LEF_S_G@://        // [185][MOV][168]
            |    ( ( p2k[ dpc+2 ] )<<  8 )//:@LEF_S_B@://        // [185][MOV][168]
            |    ( ( p2k[ dpc+3 ] )<<  0 )//:@LEF_S_A@://        // [185][MOV][168]
            ) >>> 0 );;                                          // [185][MOV][168]
            //:--------------:_P2K_section_has_INVERSE_:[168]:// // [185][MOV][168]
                                                                 // [185][MOV][---]
        };; //:[ ? o_k ? ]::::::::::::::::::::::::::::::::::::// // [185][MOV][162]
                                                                 // [185][MOV][---]
                                                                 // [185][MOV][---]
        return( o_u32 ); //: OUTPUT_PIXEL_AS_U32 ://             // [185][MOV][168]
                                                                 // [185][MOV][---]
    };;     //:ENDOF[ EDI_GET_U32 ]:::::::::::::::::::::::::::// // [185][MOV][162][161]
    const   F_TILEBOI_SIM_PUT_U32 = function                     // [185][MOV][161]
    PRIVATE_F_TILEBOI_SIM_PUT_U32(    //:TAG[ FTB_ES_PG_U32 ]:// // [185][MOV][161]
                     //:-------------------------------------:// // [185][MOV][161]
        i_te7,i_la3  //:<--TileSize_And_Layer                :// // [185][MOV][161]
    ,   i_stx,i_sty  //:<--#_Simulation_Tile_#(coord)[x|y]   :// // [185][MOV][161]
    ,   i_u32        //:<--Raw_U32_Tile_Value                :// // [185][MOV][161]
                     //:-------------------------------------:// // [185][MOV][161]
    ){                                                           // [185][MOV][161]
        ERR("[TODO:CORE_LOGIC]");                                // [185][MOV][161]
    };;                                                          // [185][MOV][161]
    const   F_TILEBOI_SIM_GET_U32 = function                     // [185][MOV][161]
    PRIVATE_F_TILEBOI_SIM_GET_U32(    //:TAG[ FTB_ES_PG_U32 ]:// // [185][MOV][161]
                     //:-------------------------------------:// // [185][MOV][161]
        i_te7,i_la3  //:<--TileSize_And_Layer                :// // [185][MOV][161]
    ,   i_stx,i_sty  //:<---#_Simulation_Tile_#(coord)[x|y]  :// // [185][MOV][161]
    ,   i_u32        //:<--Raw_U32_Tile_Value                :// // [185][MOV][161]
                     //:-------------------------------------:// // [185][MOV][161]
    ){                                                           // [185][MOV][161]
        ERR("[TODO:CORE_LOGIC]");                                // [185][MOV][161]
    };;                                                          // [185][MOV][161]
                                                                 // [185][MOV][---]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [185][MOV][156]
//|                                               [ @$$$$$@ ]|// // [185][MOV][156]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __TILEBOI__|// // [185][MOV][156]
//|                                               [ @$$$$$@ ]|// // [185][MOV][156]
//|12|12|12|12|12|12|12|12|12|SUBS|12|12|12|12|12|12|12|12|12|// // [185][MOV][156]
//|15|15|15|15|15|15|15|15|15|SUBS|15|15|15|15|15|15|15|15|15|// // [207]
//|[ @$$$$$@ ]                                               |// // [207]
//|__BINFONT__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [207]
//|[ @$$$$$@ ]                                               |// // [207]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [207]

    const   F_BINFONT_STAMONE = function                         // [---][209]
    PRIVATE_F_BINFONT_STAMONE(                                   // [---][209]
                                                                 // [---][209]
        i_stamone //: <-- @_BINFONT_ARGLIST:STAMONE_@ :::://     // [---][209]
                  //:     @_BINFONT_ARGLIST_STAMONE_@ :::://     // [---][209]
    ){                                                           // [---][209]
        if( d_eci >= 1 ){                                        // [212][209]
            if( i_stamone !== d_binfont_stamone_arglist ){       // [---][209]
                                                                 // [---][209]
                ERR("[BAD_ARGUMENT_SINGLETON]");                 // [---][209]
            };;                                                  // [---][209]
                                                                 // [--------]
            //:#_ARTIFICIAL_RIGIDITY_#:[212]:------------://     // [212]
            ASS( null != i_stamone.bin_pix , "[NIL_PIX]" );      // [212]
            if( 2048 !== i_stamone.bin_wid                       // [212]
            ||  2048 !== i_stamone.bin_hig                       // [212]
            ){                                                   // [212]
                ERR("[Using_512_x_512_Might_Be_Okay]");          // [212]
                ERR("[But_Hardcoding_For_Pix2048___]");          // [212]
                ERR("[For_Now_Date_Is_2022_08_29___]");          // [212]
            };;                                                  // [212]
            let got_len =( i_stamone.bin_pix.length );           // [212]
            let exp_len =( (4*2048*2048) );                      // [212]
            if( got_len != exp_len ){                            // [212]
                ERR("[HARDCODE_TO_USE_PIX2048_FOR_NOW]");        // [212]
            };;                                                  // [212]
            //:------------:#_ARTIFICIAL_RIGIDITY_#:[212]://     // [212]
                                                                 // [--------]
        };;                                                      // [---][209]
                                                                 // [---][---]
        //:#_C89_STYLE_VARS_TODAY_I_GUESS_#:[210]:-------://     // [---][210]
                                                                 // [---][210]
        var lpx ;;;;; //: @lpx@ ::::: Local Pixel --- X :://     // [---][210]
        var lpy ;;;;; //: @lpy@ ::::: Local Pixel --- Y :://     // [---][210]
                                                                 // [---][210]
        var gpx ;;;;; //: @gpx@ ::::: Global  Pixel - X :://     // [---][210]
        var gpy ;;;;; //: @gpy@ ::::: Global  Pixel - Y :://     // [---][210]
        var gpx_min ; //: @gpx_min@ : Lowest  Coord - X :://     // [---][210]
        var gpx_max ; //: @gpx_max@ : Highest Coord - X :://     // [---][210]
        var gpy_min ; //: @gpy_min@ : Lowest  Coord - Y :://     // [---][210]
        var gpy_max ; //: @gpy_max@ : Highest Coord - Y :://     // [---][210]
        var gpx_wid ; //: @gpx_wid@ : Local Bounds WID  :://     // [---][210]
        var gpy_hig ; //: @gpy_hig@ : Local Bounds HIG  :://     // [---][210]
                                                                 // [---][210]
        var gbx     ; //: @gbx@ : GLYPH( tile/bit )X ::::://     // [---][210]
        var gby     ; //: @gby@ : GLYPH( tile/bit )Y ::::://     // [---][210]
        var gbi     ; //: @gbi@ : GLYPH( tile/bit )I ::::://     // [---][210]
                                                                 // [---][210]
        var wos     ; //: @wos@ : 32 bit Word Offset ::::://     // [---][210]
        var bil     ; //: @bil@ : Bit Index Local    ::::://     // [---][210]
        var b32     ; //: @b32@ : Uint32 As Bitmap   ::::://     // [---][210]
        var bit     ; //: @bit@ : A single bit       ::::://     // [---][210]
                                                                 // [--------]
        var arr_hex ; //: @arr_hex@ : ArrayOfHexValues   ://     // [212][---]
        var rgbahex ; //: @rgbahex@ : RGBA U32 Hex Value ://     // [212][---]
                                                                 // [--------]
        //:-------:#_C89_STYLE_VARS_TODAY_I_GUESS_#:[210]://     // [---][210]
                                                                 // [---][210]
        gpx_min =( i_stamone.bin_x_0 );                          // [---][210]
        gpx_max =( i_stamone.bin_x_1 );                          // [---][210]
        gpy_min =( i_stamone.bin_y_0 );                          // [---][210]
        gpy_max =( i_stamone.bin_y_1 );                          // [---][210]
                                                                 // [---][210]
        gpx_wid =( gpx_max - gpx_min + 1 );                      // [---][210]
        gpy_hig =( gpy_max - gpy_min + 1 );                      // [---][210]
                                                                 // [---][210]
        let strider =( i_stamone.bin_wid );                      // [---][210]
        let bin_wid =( i_stamone.bin_wid );                      // [---][210]
        let bin_hig =( i_stamone.bin_hig );                      // [---][210]
                                                                 // [--------]
        let fourhex = d_binfont_stamone_arglist_fourhex ;        // [212][---]
            fourhex[ 0 ]=( i_stamone.tex_b_g );                  // [212][---]
            fourhex[ 1 ]=( i_stamone.tex_f_g );                  // [212][---]
            fourhex[ 2 ]=( i_stamone.bor_b_g );                  // [212][---]
            fourhex[ 3 ]=( i_stamone.bor_f_g );                  // [212][---]
                                                                 // [--------]
        for(gpy = gpy_min ; gpy <= gpy_max ; gpy ++ ){           // [---][210]
        for(gpx = gpx_min ; gpx <= gpx_max ; gpx ++ ){           // [---][210]
                                                                 // [---][210]
            gpi =( gpx + ( gpy * strider ) );                    // [---][210]
                                                                 // [---][210]
            lpx =( gpx - gpx_min );                              // [---][210]
            lpy =( gpy - gpy_min );                              // [---][210]
                                                                 // [---][210]
            if( d_bug >= 1 ){ //////////////////////////////     // [---][210]
                                                                 // [-------------]
            //: #_MAYBE_GPX_WID_IS_A_BAD_VARIABLE_NAME_# ://     // [212][--------]
            //: #_MAYBE_GPY_HIG_IS_A_BAD_VARIABLE_NAME_# ://     // [212][--------]
                                                                 // [-------------]
            ASS( lpx >= (           0 ) , "[GPX_WID:NEG]" );     // [212][BUG][210]
            ASS( lpx <= ( gpx_wid - 1 ) , "[GPX_WID:POS]" );     // [212][BUG][210]
            ASS( lpy >= (           0 ) , "[GPY_HIG:NEG]" );     // [212][BUG][210]
            ASS( lpy <= ( gpy_hig - 1 ) , "[GPY_HIG:POS]" );     // [212][BUG][210]
                                                                 // [-------------]
            ASS( gpx >= (           0 ) , "[BIN_WID:NEG]" );     // [212][--------]
            ASS( gpx <= ( bin_wid - 1 ) , "[BIN_WID:POS]" );     // [212][--------]
            ASS( gpy >= (           0 ) , "[BIN_HIG:NEG]" );     // [212][--------]
            ASS( gpy <= ( bin_hig - 1 ) , "[BIN_HIG:POS]" );     // [212][--------]
                                                                 // [-------------]
            ASS( gpi >= 0 && gpi <=((2048*2048)-1),"[GPI]");     // [212][--------]
                                                                 // [-------------]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [---][210]
                                                                 // [---][210]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [---][210]
            //: Percentage Approaches 1.0 , but never    ://     // [---][210]
            //: reaches 1.0. Thus last value will be     ://     // [---][210]
            //: something like 7.9999999 , floored       ://     // [---][210]
            //: gets us 7 , the last address within      ://     // [---][210]
            //: our 8x8 glyph tile.                      ://     // [---][210]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [---][210]
                                                                 // [---][210]
            gbx =F_M_F( (lpx/(gpx_wid-0)) * (8-0) );             // [---][210]
            gby =F_M_F( (lpy/(gpy_hig-0)) * (8-0) );             // [---][210]
            gbi =( gbx + ( gby * 8 ) );                          // [---][210]
            ASS( gbi >= 0 && gbi <=(64-1) );                     // [---][210]
                                                                 // [---][210]
            if(  gbi >= 0 && gbi <=(32-1) ){                     // [---][210]
                                                                 // [---][210]
                 wos =( 0 );                                     // [---][210]
            }else                                                // [---][210]
            if(  gbi >=(32-0) && gbi <=(64-1) ){                 // [---][210]
                                                                 // [---][210]
                 wos =( 1 );                                     // [---][210]
            }else{                                               // [---][210]
                ERR("[WHERE_ARE_MY_PHOTOS_OF_SPIDERMAN!]");      // [---][210]
            };;                                                  // [---][210]
                                                                 // [---][210]
            bil =( gbi -( wos * 32 ) );                          // [---][210]
            ASS( bil >= 0 && bil <=(32-1) , "[OH_NO_BILL!]" );   // [---][210]
                                                                 // [---][210]
            b32 =(                                               // [---][210]
            d_binfont_lut[( 2 * i_stamone.bin_asc )+wos ]        // [---][210]
            );;                                                  // [---][210]
                                                                 // [---][210]
            //: #_DIAGRAM_B32_BIL_TO_BIT_# ://                   // [---][211]
            bit =( ( b32 >>>((32-1)-bil) )&( 0x1 ) );            // [---][210]
                                                                 // [--------]
            if( 0 === bit ){ /** #_USE_HEX_LUT_# **/ }else       // [212][210]
            if( 1 === bit ){ /** #_USE_HEX_LUT_# **/ }else       // [212][210]
            {                                                    // [212][210]
                ERR( "[TODO:VIDEO:SWITCH_STATEMENTS_]" );        // [212][210]
                ERR( "[TODO:VIDEO:ARE_FOR_LOOSERS...]" );        // [212][210]
                /** ************************************ **/     // [212]
                /** Spell it incorrectly so that we get  **/     // [212]
                /** more people "bike shedding" to point **/     // [212]
                /** out that we are stupid and we can't  **/     // [212]
                /** even spell "loser" correctly.        **/     // [212]
                /** Create a playlist                    **/     // [212]
                /** "Just For The Views"                 **/     // [212]
                /** and post the video saying what you   **/     // [212]
                /** are about to do before you post your **/     // [212]
                /** troll video so you have proof you    **/     // [212]
                /** are trolling.                        **/     // [212]
                /**                                      **/     // [212]
                /** Make satirical best practices videos **/     // [212]
                /** ************************************ **/     // [212]
            };;                                                  // [---][210]
                                                                 // [212]
            var boarder =( 0 );                                  // [212]
            if( 0+gpy_min+0 === gpy ){ boarder =( 1 ); };        // [212]
            if( 0+gpx_min+0 === gpx ){ boarder =( 1 ); };        // [212]
            if( 0+gpy_max+0 === gpy ){ boarder =( 1 ); };        // [212]
            if( 0+gpx_max+0 === gpx ){ boarder =( 1 ); };        // [212]
                                                                 // [212]
            arr_hex = d_binfont_stamone_arglist_fourhex ;        // [212]
            //: bit === 0 ===> [ tex_b_g | bor_b_g ] ://         // [212]
            //: bit === 1 ===> [ tex_f_g | bor_f_g ] ://         // [212]
            rgbahex = arr_hex[ (boarder*2)+bit ];                // [212]
                                                                 // [212]
            var bin_pix_red =( rgbahex >>> 24 )&(  0xFF  );      // [212]
            var bin_pix_gre =( rgbahex >>> 16 )&(  0xFF  );      // [212]
            var bin_pix_blu =( rgbahex >>>  8 )&(  0xFF  );      // [212]
            var bin_pix_alp =( rgbahex >>>  0 )&(  0xFF  );      // [212]
                                                                 // [212]
            i_stamone.bin_pix[ (4*gpi)+0 ]=( bin_pix_red );      // [212]
            i_stamone.bin_pix[ (4*gpi)+1 ]=( bin_pix_gre );      // [212]
            i_stamone.bin_pix[ (4*gpi)+2 ]=( bin_pix_blu );      // [212]
            i_stamone.bin_pix[ (4*gpi)+3 ]=( bin_pix_alp );      // [212]
                                                                 // [---][210]
        };;};; //:NEXT[ gpx , gpy ]:::::::::::::::::::::::::::// // [212][210]
    };; //::::::::ENDF[ F_BINFONT_STAMONE ]:::::::::::::::::::// // [212][209]

    const   F_BINFONT_STAMTEX = function                         // [---][213]
    PRIVATE_F_BINFONT_STAMTEX(               //:@STAMTEX@://     // [---][213]
                                                                 // [---][213]
        i_pix  //: input bitmap in RGBA format ::::::::::://     // [---][213]
    ,   i_wid  //: width  in pixels.           ::::::::::://     // [---][213]
    ,   i_hig  //: height in pixels.           ::::::::::://     // [---][213]
    ,   i_tex  //: Input Text To Stamp.        ::::::::::://     // [---][213]
    ){                                                           // [---][213]
        if( d_eci >= 1 ){                                        // [---][213]
            if( i_pix != d_pix2048                               // [---][213]
            ||  i_wid != 2048                                    // [---][213]
            ||  i_hig != 2048                                    // [---][213]
            ){                                                   // [---][213]
                ERR("[ARTIFICIAL_CONSTRAINT_2022]");             // [---][213]
            };;                                                  // [---][213]
            ASS( "string" === typeof i_tex /////////////         // [---][213]
                ,"[ROTERSAND_AND_EVENDORFF:::LightGrey]"         // [---][213]
            );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         // [---][213]
        };;                                                      // [---][213]
                                                                 // [---][213]
        //: @san_til@ : Span in glyph tiles on one edge. ://     // [---][213]
        //: @til_wid@ : Width  of tile in pixels.        ://     // [---][213]
        //: @til_hig@ : Height of tile in pixels.        ://     // [---][213]
                                                                 // [---][213]
        var noc    = i_tex.length ; //:NumberOfCharacters://     // [---][213]
        var po2    = F_NEX_PO2( noc ); //:@po2@:PowerOf2 ://     // [---][213]
        var san_til= Math.sqrt( po2 ); //:@san@:SPAN     ://     // [---][213]
        var til_wid=F_M_F( i_wid / san_til );                    // [---][213]
        var til_hig=F_M_F( i_hig / san_til );                    // [---][213]
        var   t_x  ; //: @t_x@ : Tile X ( X-Axis  Coord )://     // [---][213]
        var   t_y  ; //: @t_y@ : Tile Y ( Y-Axis  Coord )://     // [---][213]
        var   t_i  ; //: @t_i@ : Tile I ( 1D IndexCoord )://     // [---][213]
                                                                 // [---][213]
        ASS( til_wid * san_til === i_wid , "[NODIV_WID]" );      // [---][213]
        ASS( til_hig * san_til === i_hig , "[NODIV_HIG]" );      // [---][213]
                                                                 // [---][213]
        //:#_LOAD_STAMONE_#:[213]:-----------------------://     // [---][213]
                                                                 // [---][213]
            let arg =( d_binfont_stamone_arglist );              // [---][213]
                                                                 // [---][213]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [---][213]
            //: White Color On Boarder So Our Rectangles ://     // [---][213]
            //: Are gauranteed to show up in our         ://     // [---][213]
            //: diagnostic shader ( ssf _ 005 ).         ://     // [---][213]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [---][213]
                                                                 // [---][213]
            let OUR_RENDERER_IS_MORE_SOPHISTICATED_NOW=( 0 );    // [216]
            if( OUR_RENDERER_IS_MORE_SOPHISTICATED_NOW ){        // [216]
                                                                 // [---]
                arg.bor_b_g =( 0xFFFFFFFF ); //:WHITE :::://     // [---][213]
                arg.bor_f_g =( 0xFF0000FF ); //:RED   :::://     // [---][213]
                arg.tex_b_g =( 0x00FF00FF ); //:GREEN :::://     // [---][213]
                arg.tex_f_g =( 0x0000FFFF ); //:BLUE  :::://     // [---][213]
            }else{                                               // [216]
                //:#_IDIOT_RENDERER_COLORS_#://                  // [216]
                                                                 // [216]
                arg.bor_b_g =( 0x00000000 ); //:ZERO_FILL://     // [216]
                arg.bor_f_g =( 0xFFFFFFFF ); //:ONE__FILL://     // [216]
                arg.tex_b_g =( 0x00000000 ); //:ZERO_FILL://     // [216]
                arg.tex_f_g =( 0xFFFFFFFF ); //:ONE__FILL://     // [216]
                                                                 // [216]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [216]
                                                                 // [---]
            arg.bin_pix =( i_pix      ); //:PIX_ARR::::::://     // [---][213]
            arg.bin_wid =( i_wid      ); //:PIX_WID::::::://     // [---][213]
            arg.bin_hig =( i_hig      ); //:PIX_HIG::::::://     // [---][213]
                                                                 // [---][213]
        //:-----------------------:#_LOAD_STAMONE_#:[213]://     // [---][213]
                                                                 // [---][213]
        for( t_y = 0 ; t_y <=(san_til-1) ; t_y ++ ){             // [---][213]
        for( t_x = 0 ; t_x <=(san_til-1) ; t_x ++ ){             // [---][213]
                                                                 // [---][213]
            //: #_TILE_XY_AS_1_DIMENSIONAL_INDEX_#:::::::://     // [---][213]
            t_i =( t_x + ( t_y * san_til ) );                    // [---][213]
                                                                 // [---][213]
            //: #_INCLUSIVE_STAMPING_BOUNDS_# :::::::::::://     // [---][213]
            arg.bin_x_0 =( t_x * til_wid )+(           0 ) ;     // [---][213]
            arg.bin_x_1 =( t_x * til_wid )+( til_wid - 1 ) ;     // [---][213]
            arg.bin_y_0 =( t_y * til_hig )+(           0 ) ;     // [---][213]
            arg.bin_y_1 =( t_y * til_hig )+( til_hig - 1 ) ;     // [---][213]
                                                                 // [---][213]
            arg.bin_asc = F_STR_ASC( i_tex[ t_i % noc ] );;;     // [---][213]
                                                                 // [---][213]
            F_BINFONT_STAMONE( arg );                            // [---][213]
        };;};;                                                   // [---][213]
                                                                 // [---][213]
    };; //:ENDFUNC[ F_BINFONT_STAMTEX ]:::::::::::::::::::::::// // [---][213]
                                                                 // [---]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [207]
//|                                               [ @$$$$$@ ]|// // [207]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __BINFONT__|// // [207]
//|                                               [ @$$$$$@ ]|// // [207]
//|15|15|15|15|15|15|15|15|15|SUBS|15|15|15|15|15|15|15|15|15|// // [207]
//|19|19|19|19|19|19|19|19|19|SUBS|19|19|19|19|19|19|19|19|19|// // [239]
//|[ @$$$$$@ ]                                               |// // [239]
//|__FOURSET__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [239]
//|[ @$$$$$@ ]                                               |// // [239]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [239]
                                                                 // [---]

    const   F_FOURSET_LOG_BINCLUS = "[FIX:BINCLUS_LOG]" ;        // [247]
                                                                 // [247]
    const   F_FOURSET_BINCLUS_LOG = function ///////////////     // [247]
    PRIVATE_F_FOURSET_BINCLUS_LOG(           ///////////////     // [247]
                                                                 // [247]
        i_binclus_nam //: @binclus_nam@ : BinClus 's NAME://     // [247]
    ,   i_binclus_dat //: @binclus_dat@ : BinClus 's DATA://     // [247]
    ){                                                           // [247]
        //:[ATF]: ( BINCLUS )===>( LOG ) :[ATF]://               // [247]
                                                                 // [247]
        var _variables_ ="[HACK]"                                // [247]
        ,       f16   //: @f16@ : Fourset Sub Cluster Index  :// // [247]
        ,   b20_bbx   //: @bbx@ : Binclus Bit (GlobalIndex)X :// // [247]
        ,   b20_bby   //: @bby@ : Binclus Bit (GlobalIndex)Y :// // [247]
        ,   b20_bbi   //: @bbi@ : Binclus Bit (GlobalIndex)I :// // [247]
        ,       bx5   //: @bx5@ : Bit X Coord[0-(5-1)]LOCAL  :// // [247]
        ,       by5   //: @by5@ : Bit Y Coord[0-(5-1)]LOCAL  :// // [247]
        ,       bx4   //: @bx4@ : BinClus Tile Coord - X     :// // [247]
        ,       by4   //: @by4@ : BinClus Tile Coord - Y     :// // [247]
        ,   u25clus   //: @u25clus@ :Uint25_5X5_Bit_Cluster  :// // [247]
        ,       bit   //: @bit@ : One Or Zero , On Or Off    :// // [247]
        ,     o_str   //: @o_str@ : Output String            :// // [247]
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [247]
                                                                 // [247]
        o_str =( "" /** Start With Blank Output String **/);     // [247]
                                                                 // [247]
        var nlc_big = "\n\n" ; //:NewLineCharacter: BIG :://     // [247]
        var nlc_lit = "\n";;;; //:NewLindCharacter: LIT :://     // [247]
                                                                 // [247]
        var spc_big = "   "; //: Big___Space ::::::::::::://     // [247]
        var spc_lit = " ";;; //: LittleSpace ::::::::::::://     // [247]
                                                                 // [247]
        //-for( f16 = 0 ; f16 <=(16-1) ; f16 ++ ){ !!!! }-//     // [247]
                                                                 // [247]
        for( b20_bby = 0 ; b20_bby <=((20-1)) ; b20_bby++){      // [247]
        for( b20_bbx = 0 ; b20_bbx <=((20-1)) ; b20_bbx++){      // [247]
                                                                 // [247]
            //:------------------------------------------://     // [247]
            //: Four Tiles with 5x5 Bits In each .       ://     // [247]
            //: Convert To Local XY Tile Pos On 4x4 Grid.://     // [247]
            //:------------------------------------------://     // [247]
            bx4 = F_M_F(  b20_bbx / 5   );                       // [247]
            by4 = F_M_F(  b20_bby / 5   );                       // [247]
                                                                 // [247]
            //:------------------------------------------://     // [247]
            //: Fetch correct 5X5 bitmap from the array  ://     // [247]
            //: of 4x4 u25clus that makes up a[ binclus ]://     // [247]
            //:------------------------------------------://     // [247]
            f16 =( bx4 + ( by4 * 4 ) );         //:@XYTI@://     // [247]
            u25clus = i_binclus_dat[ f16 ];                      // [247]
                                                                 // [247]
            //:------------------------------------------://     // [247]
            //: Get Local Bit Position([0 -to- (5-1) ])  ://     // [247]
            //: Within One of the 16 5x5 sub tile        ://     // [247]
            //: graphics that composes a[ binclus ].     ://     // [247]
            //:------------------------------------------://     // [247]
            bx5 =( b20_bbx -( bx4 * 5 ) );   //: @T_I_C@ ://     // [247]
            by5 =( b20_bby -( by4 * 5 ) );   //: @T_I_C@ ://     // [247]
            b25 =( bx5 +    ( by5 * 5 ) );   //: @T_I_C@ ://     // [247]
                                                                 // [247]
            //:@U25CLUS_BITSHIFT@:[247]:=================://     // [247]
                                                                 // [247]
                //: b25 is in @NETWORK_BIT_ORDER@ :::::::://     // [247]
                                                                 // [247]
                bit =( u25clus >>> ( (32-1)-b25 ) )&(0x1);;;     // [247]
            //+ bit = u25clus[ b25 ] < < <@CONCEPTUALLY@ +//     // [247]
                                                                 // [247]
            //:=================:@U25CLUS_BITSHIFT@:[247]://     // [247]
            //:#_BUILD_BINARY_PRINTOUT_#:[247]:----------://     // [247]
            if( 0 === bit ){ o_str += "_" ; };                   // [247]
            if( 1 === bit ){ o_str += "X" ; };                   // [247]
            if( b20_bbx >=((20-1)) ){                            // [247]
                                                                 // [247]
                //:ADD_NLC:[247]:------------------------://     // [247]
                if( (5-1)===( b20_bby % 5 ) ){                   // [247]
                                                                 // [247]
                    o_str += nlc_big ; //:Newline_BIG://         // [247]
                }else{                                           // [247]
                    o_str += nlc_lit ; //:Newline_LIT://         // [247]
                };;                                              // [247]
                //:------------------------:ADD_NLC:[247]://     // [247]
            }else{                                               // [247]
                //:ADD_SPC:[247]:------------------------://     // [247]
                if( (5-1)===( b20_bbx % 5 ) ){                   // [247]
                                                                 // [247]
                    o_str += spc_big ; //:Big___Space://         // [247]
                }else{                                           // [247]
                    o_str += spc_lit ; //:LittleSpace://         // [247]
                };;                                              // [247]
                //:------------------------:ADD_SPC:[247]://     // [247]
            };;                                                  // [247]
            //:----------:#_BUILD_BINARY_PRINTOUT_#:[247]://     // [247]
        };;};; //:NEXT[ b20_bbx , b20_bby ]::::::::::::::://     // [247]
                                                                 // [247]
        console.log( "[BINCLUS_LOG:NAM]:" , i_binclus_nam );     // [247]
        console.log( "[BINCLUS_LOG:DIA]:\n"+o_str         );     // [247]
                                                                 // [247]
    };; ////////////////////////////////////////////////////     // [247]
                                                                 // [---]
    const   F_FOURSET_BADBITS_U25CLUS = "[U25CLUS_BADBITS]";     // [246]
                                                                 // [246]
    const   F_FOURSET_U25CLUS_BADBITS = function ///////////     // [246]
    PRIVATE_F_FOURSET_U25CLUS_BADBITS(  ////////////////////     // [246]
                        //:::::::::::::::::::::::::::::::://     // [246]
        i_u25clus       //: ( u25clus )===>( badbits ? ) ://     // [246]
    ){                  //:::::::::::::::::::::::::::::::://     // [246]
        var o_badbits=( 0 );                                     // [246]
                                                                 // [246]
        if( !( (i_u25clus >= 0)||(i_u25clus <= 0) ) ){           // [246]
            ERR("[INPUT_PROBABLY_NAN_2022]");                    // [246]
        };;                                                      // [246]
                                                                 // [246]
        if( i_u25clus !== 0 ){                                   // [246]
            if( i_u25clus <= 0x0000007F ){                       // [246]
                o_badbits=( 1 );                                 // [246]
            };;                                                  // [246]
        };;                                                      // [246]
        if( 0 !==( i_u25clus & 0x0000007F ) ){                   // [246]
            MSG("[BITS_SHOULDNT_BE_SET_IN_LSB_007]");            // [246]
            o_badbits=( 1 );                                     // [246]
        };;                                                      // [246]
                                                                 // [246]
        return( o_badbits );                                     // [246]
    };; //:ENDFUNC[ F_FOURSET_U25CLUS_BADBITS ]::::::::::://     // [246]
                                                                 // [---]
    const   F_FOURSET_UDESIGN_F16_U25CLUS = function ///////     // [275][REF][240]
    PRIVATE_F_FOURSET_UDESIGN_F16_U25CLUS(           ///////     // [275][REF][240]
                                                                 // [240]
        i_udesign //: @udesign@ : UN(compressed)DESIGN ::://     // [240]
    ,   i_f16     //: @f16@ ::::: Fourset Cluster Index :://     // [240]
    ){                                                           // [240]
        //:[ATF]:#_UDESIGN_U25CLUS_#:[ATF]:::::::::::::::://     // [275][REF][240]
        if( d_eci >= 1 ){                                        // [240]
            ASS( 400 === i_udesign.length , "[UDESIGN_1]" );     // [240]
            ASS( 400 === (  5*5  )*( 4*4 ), "[UDESIGN_2]" );     // [243][BUG][240]
            ASS( i_f16 >= (   0)          , "[F16_NEG_I]" );     // [241]
            ASS( i_f16 <= (16-1)          , "[F16_OOB_I]" );     // [241]
        };;                                                      // [240]
                                                                 // [240]
        //:::::::::::::( 0xRRGGBBAA )::::::::::::::::::::://     // [240]
        var o_u25clus =( 0x00000000 );                           // [275][REF][240]
                                                                 // [---]
        //:SEE_DIAGRAM[ #_NSC_AND_MSC_# ]::::::::::::::::://     // [241]
        //:@nsc_x@ : Num_________Sub_Clusters - X        ://     // [241]
        //:@nsc_y@ : Num_________Sub_Clusters - Y        ://     // [241]
        //:@msc_w@ : MagnitudeOf_Sub_Cluster  - WID Axis ://     // [241]
        //:@msc_h@ : MagnitudeOf_Sub_Cluster  - HIG Axis ://     // [241]
                                                                 // [241]
        //: [4X4 : FOURSET DEFINITION requires 4X4 here  ://     // [241]
        const fourdef_nsc_x =( 4 ); //:HIG In SubTile(s) ://     // [241]
        const fourdef_nsc_y =( 4 ); //:WID In SubTile(s) ://     // [241]
                                                                 // [241]
        //: [ 5X5 : ARTDUDE'S IMPLEMENTATION OF FOURSET ]://     // [241]
        const fourimp_msc_w =( 5 ); //:WID Of SubTile    ://     // [241]
        const fourimp_msc_h =( 5 ); //:HIG Of SubTile    ://     // [241]
                                                                 // [241]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [241]
        //: SEE_EXPLANATION[ #_FOURDEF_VS_FOURIMP_# ]::::://     // [241]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [241]
                                                                 // [241]
        const fourset_tdu_wid =( 1                               // [241]
                         * fourdef_nsc_x     //:@fourdef@://     // [241]
                         * fourimp_msc_w );; //:@fourimp@://     // [241]
        const fourset_tdu_hig =( 1                               // [241]
                         * fourdef_nsc_y     //:@fourdef@://     // [241]
                         * fourimp_msc_h );; //:@fourimp@://     // [241]
                                                                 // [241]
        let tdu_wid =( fourset_tdu_wid ); ASS(20===tdu_wid);     // [241]
        let tdu_hig =( fourset_tdu_hig ); ASS(20===tdu_hig);     // [241]
                                                                 // [241]
        let msc_w =( fourimp_msc_w ); ASS(5 === msc_w);          // [243][BUG][241]
        let msc_h =( fourimp_msc_h ); ASS(5 === msc_h);          // [243][BUG][241]
                                                                 // [241]
        //:SEE_DIAG[ #DIA_B25# , #DIA_BX5# , #DIA_BY5#  ]://     // [241]
        let b25 ; //: @b25@ : Bit Index[ 0-to-(25-1) ]:::://     // [241]
        let bx5 ; //: @bx5@ : Bit X Coord[ 0-to-(5-1)]:::://     // [241]
        let by5 ; //: @by5@ : Bit Y Coord[ 0-to-(5-1)]:::://     // [241]
                                                                 // [241]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [241]
        //: Calculate F16's XY Value , SEE[ #_DIA_F16_# ]://     // [241]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [241]
        let f4x =(     ( i_f16 % 4 ) ); //:f16's X Value ://     // [275][REF][241]
        let f4y =(F_M_F( i_f16 / 4 ) ); //:f16's Y Value ://     // [275][REF][241]
        ASS(f4x <=(4-1) , "[F4X_OOB:EYE_OF_GOD..]" );            // [275][REF][241]
        ASS(f4y <=(4-1) , "[F4Y_OOB:THE_GOD_HAND]" );            // [275][REF][241]
                                                                 // [241]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [241]
        //: DIAGRAM[ #GBO_X_Y# ]:::::::::::::::::::::::::://     // [241]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [241]
        let gbo_x =( f4x * msc_w );   //:global BIT_ORG X://     // [275][REF][241]
        let gbo_y =( f4y * msc_h );   //:global BIT_ORG Y://     // [275][REF][241]
                                                                 // [241]
        let gbc_x ; //:@gbc_x@ : Global_Bit_Coord : X    ://     // [241]
        let gbc_y ; //:@gbc_y@ : Global_Bit_Coord : Y    ://     // [241]
        let gbc_i ; //:@gbc_i@ : Global_Bit_Coord : I    ://     // [241]
                                                                 // [241]
        let bit   ; //:@bit@ ::: A value, 0 or 1 ::::::::://     // [241]
                                                                 // [241]
        //:#B25_ARTDUDE_FOURSET_LOOP#:[241]:-------------://     // [241]
        for(b25 = 0 ; b25 <=(25-1) ; b25++){                     // [241]
                                                                 // [241]
            bx5 =(     ( b25 % 5 ) );                            // [241]
            by5 =(F_M_F( b25 / 5 ) );                            // [241]
                                                                 // [241]
            gbc_x =( gbo_x + bx5 );                              // [241]
            gbc_y =( gbo_y + by5 );                              // [241]
            gbc_i =( gbc_x + ( gbc_y * tdu_wid ) );              // [241]
                                                                 // [241]
            bit = i_udesign[ gbc_i ];                            // [241]
            if( d_bug >=1 ){                                     // [241]
                ASS(gbc_x >= 0 && gbc_x <(400) , "[GBC_X]");     // [241]
                ASS(gbc_y >= 0 && gbc_y <(400) , "[GBC_Y]");     // [241]
                ASS(gbc_i <=( (400*400)-1 )    , "[GBC_I]");     // [241]
                ASS( 0 === bit || 1 === bit , "[BIT_0_1]" );     // [241]
                                                                 // [241]
                //: If we work backwards do we get       ://     // [241]
                //: the index we started with ?          ://     // [241]
                let c_x =F_M_F( gbc_x / 5    ); //:CELL:X://     // [241]
                let c_y =F_M_F( gbc_y / 5    ); //:CELL:Y://     // [241]
                let c_i =( c_x + ( c_y * 4 ) ); //:CELL:I://     // [241]
                if( c_i !=  i_f16 ){                             // [241]
                    ERR("[WORKING_BACKWARDS_FAILED]");           // [241]
                };;                                              // [241]
            };;                                                  // [241]
                                                                 // [241]
            //:@U25CLUS_BITSHIFT@:[247]:=================://     // [247]
            o_u25clus =(( o_u25clus //////// Bits Are In ///     // [275][REF][241]
                                        //// Network Bit ///     // [241]
            | ( bit << ( (32-1)-b25 ) ) //// Order(NBO). ///     // [241]
                                        //// /////////// ///     // [241]
            )>>>0);; /////////////////////// /////////// ///     // [241]
            //:=================:@U25CLUS_BITSHIFT@:[247]://     // [247]
        };;                                                      // [241]
        //:-------------:#B25_ARTDUDE_FOURSET_LOOP#:[241]://     // [241]
                                                                 // [---]
        if( 0 !== o_u25clus ){ ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [275][REF][243]
            ASS(  o_u25clus > 0x7F , "[#_LSB_007_NIL_#]" );;     // [275][REF][243]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [243]
                                                                 // [---]
        return( o_u25clus /**#_1ST_25_NBO_BITS_ONLY_#**/ );      // [275][REF][241][240]
                                                                 // [---]
    };; ////////////////////////////////////////////////////     // [240]
                                                                 // [---]
    const   F_FOURSET_INI = function                             // [239]
    PRIVATE_F_FOURSET_INI(                                       // [239]
                                                                 // [239]
        /**VOID**/                                               // [239]
    ){                                                           // [239]
        /** ******************************************** **/     // [239]
        /** NOTHING GOES HERE, FOURSET DOES NOT KNOW     **/     // [239]
        /** ABOUT[ ARTDUDE ], so it is[ ARTDUDE ]*s job  **/     // [239]
        /** to run the proper[ FOURSET ]commands to      **/     // [239]
        /** populate fourset binary data correctly.      **/     // [239]
        /** ******************************************** **/     // [239]
    };;                                                          // [239]
                                                                 // [239]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [239]
//|                                               [ @$$$$$@ ]|// // [239]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __FOURSET__|// // [239]
//|                                               [ @$$$$$@ ]|// // [239]
//|19|19|19|19|19|19|19|19|19|SUBS|19|19|19|19|19|19|19|19|19|// // [239]
//|23|23|23|23|23|23|23|23|23|SUBS|23|23|23|23|23|23|23|23|23|// // [296]
//|[ @$$$$$@ ]                                               |// // [296]
//|__MIPWASP__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [296]
//|[ @$$$$$@ ]                                               |// // [296]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [296]
                                                                 // [296]
    const   F_MIPWASP_MMX_MMY = "[FIX:F_MIPWASP_MMI]" ;          // [296]
                                            

    const   F_MIPWASP_SX0_SX1_SY0_SY1_DX0_DX1_DY0_DY1 = function // [298]
    PRIVATE_F_MIPWASP_SX0_SX1_SY0_SY1_DX0_DX1_DY0_DY1( /////     // [298]
                    i_sx0                                 //     // [298]
    ,                   i_sx1                             //     // [298]
    ,                       i_sy0                         //     // [298]
    ,                           i_sy1                     //     // [298]
    ,                               i_dx0                 //     // [298]
    ,                                   i_dx1             //     // [298]
    ,                                       i_dy0         //     // [298]
    ,                                           i_dy1     //     // [298]
    ){  ////////////////////////////////////////////////////     // [298]
                                                                 // [298]
        var s_w ; //: @s_w@ : Source______Width  ::::::::://     // [298]
        var s_h ; //: @s_h@ : Source______Height ::::::::://     // [298]
        var d_w ; //: @d_w@ : Destination_Width  ::::::::://     // [298]
        var d_h ; //: @d_h@ : Destination_Height ::::::::://     // [298]
                                                                 // [298]
        var d_x ; //: @d_x@ : Destination Pixel X :::::::://     // [298]
        var d_y ; //: @d_y@ : Destination Pixel Y :::::::://     // [298]
        var d_i ; //: @d_i@ : Destination Pixel I (INDEX)://     // [299]
        var d_c ; //: @d_c@ : Destination Pixel C (COMP.)://     // [299]
                                                                 // [---]
        const s_x = "[FIX:USE:lsx:OR:gsx]" ; //::::::::::://     // [299]
        const s_y = "[FIX:USE:lsy:OR:gsy]" ; //::::::::::://     // [299]
                                                                 // [299]
        const gdx = "[FIX:JUST_USE:d_x]"   ; //::::::::::://     // [299]
        const gdy = "[FIX:JUST_USE:d_y]"   ; //::::::::::://     // [299]
                                                                 // [299]
        var lsx ; //: @lsx@ : Local__Source_X :::::::::::://     // [299]
        var lsy ; //: @lsx@ : Local__Source_Y :::::::::::://     // [299]
        var gsx ; //: @gsx@ : Global_Source_X :::::::::::://     // [299]
        var gsy ; //: @gsy@ : Global_Source_Y :::::::::::://     // [299]
        var gsi ; //: @gsi@ : Global_Source_I (INDEX)    ://     // [299]
        var gsc ; //: @gsc@ : Global_Source_C (Component)://     // [299]
                                                                 // [299]
        var ldx ; //: @ldx@ : Local__Dest___X :::::::::::://     // [299]
        var ldy ; //: @ldy@ : Local__Dest___Y :::::::::::://     // [299]
                                                                 // [299]
        var gsx_min ; //: @gsx_min@ : GlobalSource_X :MIN://     // [299]
        var gsy_min ; //: @gsy_min@ : GlobalSource_Y :MIN://     // [299]
        var gsx_max ; //: @gsx_max@ : GlobalSource_X :MAX://     // [299]
        var gsy_max ; //: @gsy_max@ : GlobalSource_Y :MAX://     // [299]
                                                                 // [299]
        var t_w ; //: @t_w@ : SampleTile_Width    :::::::://     // [299]
        var t_h ; //: @t_h@ : SampleTile_Height   :::::::://     // [299]
        var tot ; //: @tot@ : Total_To_Average_By :::::::://     // [299]
                                                                 // [299]
        var t_r ; //: @t_r@ : Total___Red   :::::::::::::://     // [299]
        var t_g ; //: @t_g@ : Total___Green :::::::::::::://     // [299]
        var t_b ; //: @t_b@ : Total___Blue  :::::::::::::://     // [299]
        var t_a ; //: @t_a@ : Total___Alpha :::::::::::::://     // [299]
                                                                 // [299]
        var a_r ; //: @a_r@ : Average_Red   :::::::::::::://     // [299]
        var a_g ; //: @a_g@ : Average_Green :::::::::::::://     // [299]
        var a_b ; //: @a_b@ : Average_Blue  :::::::::::::://     // [299]
        var a_a ; //: @a_a@ : Average_Alpha :::::::::::::://     // [299]
                                                                 // [---]
        s_w =( i_sx1 - i_sx0 + 1 );                              // [298]
        s_h =( i_sy1 - i_sy0 + 1 );                              // [298]
        d_w =( i_dx1 - i_dx0 + 1 );                              // [298]
        d_h =( i_dy1 - i_dy0 + 1 );                              // [298]
                                                                 // [298]
        ASS( s_w > d_w , "[S_W:NOT_G_T:D_W]" );                  // [298]
        ASS( s_h > d_h , "[S_H:NOT_G_T:D_H]" );                  // [298]
                                                                 // [298]
        ASS_PO2( s_w , "[NOT_POW2:S_W]" );                       // [298]
        ASS_PO2( s_h , "[NOT_POW2:S_H]" );                       // [298]
        ASS_PO2( d_w , "[NOT_POW2:D_W]" );                       // [298]
        ASS_PO2( d_h , "[NOT_POW2:D_H]" );                       // [298]
                                                                 // [---]
        //:#_CALC_SUPER_SAMPLER_TILE_#:[299]:----------------:// // [299]
                                                                 // [299]
            t_w =( s_w / d_w ); ASS_INT( t_w , "[@SSTW@]" );     // [299]
            t_h =( s_h / d_h ); ASS_INT( t_h , "[@SSTH@]" );     // [299]
            tot =( t_w * t_h ); //:Total_Pixels_In_Tile::://     // [299]
                                                                 // [299]
        //:----------------:#_CALC_SUPER_SAMPLER_TILE_#:[299]:// // [299]
        //:#_MIPWASP_DOWNSAMPLE_LOOP_#:[298]:----------------:// // [---]
                                                                 // [298]
        for(d_y = i_dy0 ; d_y <= i_dy1 ; d_y ++ ){               // [298]
        for(d_x = i_dx0 ; d_x <= i_dx1 ; d_x ++ ){               // [298]
                                                                 // [---]
            d_i =( d_x + ( d_y * 2048 ) );                       // [299]
            d_c =( d_i * 4 );;;;;;;;;;;;;;                       // [299]
                                                                 // [299]
            ldx =( d_x - i_dx0 );                                // [299]
            ldy =( d_y - i_dy0 );                                // [299]
                                                                 // [299]
            if( d_bug >= 1 ){ //:############################:// // [299]
                                                                 // [299]
                gsx_min =i_sx0+( ldx * t_w )+(     0   );        // [299]
                gsy_min =i_sy0+( ldy * t_h )+(     0   );        // [299]
                gsx_max =i_sx0+( ldx * t_w )+( t_w - 1 );        // [299]
                gsy_max =i_sy0+( ldy * t_h )+( t_h - 1 );        // [299]
                                                                 // [299]
            };; //:##########################################:// // [299]
                                                                 // [299]
            t_r =( 0x00 /** Total Red   - Byte **/ );            // [299]
            t_g =( 0x00 /** Total Green - Byte **/ );            // [299]
            t_b =( 0x00 /** Total Blue  - Byte **/ );            // [299]
            t_a =( 0x00 /** Total Alpha - Byte **/ );            // [299]
                                                                 // [299]
            for( lsy = 0 ; lsy <=( t_h - 1 ) ; lsy ++ ){ //:::// // [299]
            for( lsx = 0 ; lsx <=( t_w - 1 ) ; lsx ++ ){ //:::// // [299]
                                                                 // [299]
                gsx =( i_sx0 + (ldx*t_w) + lsx );                // [299]
                gsy =( i_sy0 + (ldy*t_h) + lsy );                // [299]
                                                                 // [299]
                if( d_bug >= 1 ){ //:########################:// // [299]
                    if( 0                                        // [299]
                    ||  gsx < 0                                  // [299]
                    ||  gsy < 0                                  // [299]
                    ||  gsx < i_sx0                              // [299]
                    ||  gsy < i_sy0                              // [299]
                    ||  gsx > i_sx1                              // [299]
                    ||  gsy > i_sy1                              // [299]
                    ){                                           // [299]
                        ERR("[OUT_OF_BOUNDS_DANNY_2022]");       // [299]
                    };;                                          // [299]
                    ASS( gsx >= gsx_min , "[GSX_MIN]" );         // [299]
                    ASS( gsy >= gsy_min , "[GSY_MIN]" );         // [299]
                    ASS( gsx <= gsx_max , "[GSX_MAX]" );         // [299]
                    ASS( gsy <= gsy_max , "[GSY_MAX]" );         // [299]
                                                                 // [299]
                };; //:######################################:// // [299]
                                                                 // [299]
                gsi =( gsx + ( gsy * 2048 ) );                   // [299]
                gsc =( gsi * 4 );;;;;;;;;;;;;;                   // [299]
                                                                 // [299]
                t_r +=(( d_pix2048[ gsc + 0 ] >>> 24 )&(0xFF));  // [299]
                t_g +=(( d_pix2048[ gsc + 1 ] >>> 16 )&(0xFF));  // [299]
                t_b +=(( d_pix2048[ gsc + 2 ] >>>  8 )&(0xFF));  // [299]
                t_a +=(( d_pix2048[ gsc + 3 ] >>>  0 )&(0xFF));  // [299]
                                                                 // [299]
            };;};; //:NEXT[ lsx , lsy ]:::::::::::::::::::::::// // [299]
                                                                 // [299]
            a_r =F_M_F( t_r / tot ); //: Average_Red ::::://     // [299]
            a_g =F_M_F( t_g / tot ); //: Average_Gre ::::://     // [299]
            a_b =F_M_F( t_b / tot ); //: Average_Blu ::::://     // [299]
            a_a =F_M_F( t_a / tot ); //: Average_Alp ::::://     // [299]
                                                                 // [299]
            d_pix2048[ d_c + 0 ]=( a_r ); //:::::::::::::://     // [299]
            d_pix2048[ d_c + 1 ]=( a_g ); //:::::::::::::://     // [299]
            d_pix2048[ d_c + 2 ]=( a_b ); //:::::::::::::://     // [299]
            d_pix2048[ d_c + 3 ]=( a_a ); //:::::::::::::://     // [299]
                                                                 // [---]
        };;};;  //:NEXT[ d_x , d_y ]::::::::::::::::::::::::::// // [299][298]
        //:----------------:#_MIPWASP_DOWNSAMPLE_LOOP_#:[298]:// // [298]
    };; //:ENDFUNC::::::::::::::::::::::::::::::::::::::::::::// // [298]


    const   F_MIPWASP_MMI = function                             // [296]
    PRIVATE_F_MIPWASP_MMI(                                       // [296]
                                                                 // [296]
        i_mmi                                                    // [296]
    ){                                                           // [296]
        var mmx = d_mmi_mmx[ i_mmi ];                            // [296]
        var mmy = d_mmi_mmy[ i_mmi ];                            // [296]
        ASS( (mmx + ( mmy * 4 )) === i_mmi,"[BADLUT2022]" );     // [296]
                                                                 // [---]
        const _256_ =( 256 ); //: Source Block Of Memory ://     // [297]
                              //: Always 256_x_256 ::::::://     // [297]
        const _0_   =(  0  ); //: Orgin Of Outer Mip Map ://     // [297]
                              //: never needs diag offset://     // [297]
                                                                 // [297]
        var sx0 , sx1 , sy0 , sy1 ; //:SOURCE_BLOCK://           // [297]
        var dx0 , dx1 , dy0 , dy1 ; //:DEST___BLOCK://           // [297]
                                                                 // [297]
        var lmx ; //: @lmx@ : LateralMultiplier_X  ://           // [297]
        var lmy ; //: @lmx@ : LateralMultiplier_Y  ://           // [297]
                                                                 // [---]
                  //:------------------------------------://     // [297][BUG][296]
        var me9 ; //: @me9@ : Mipmap Exponent (9 total)  ://     // [297][BUG][296]
                  //: In the context of this             ://     // [297][BUG][296]
                  //: function means "mip map level".    ://     // [297][BUG][296]
        var la3 ; //: @la3@ : LAyer_index[0|1|2]         ://     // [296]
                  //: Also in the context of this        ://     // [296]
                  //: function means :                   ://     // [296]
                  //: "Quad index of master memory cell" ://     // [296]
                  //: "4X4 Partitioning."                ://     // [296]
                  //:------------------------------------://     // [296]
                                                                 // [296]
        //:#_OUTER_MIP_MAP_LOOP_#:[296/297]:=================:// // [---]
                                                                 // [---]
        for( me9 = 1 ; me9 <=(9-1) ; me9++ ){//:@_SKIP_ZERO_@:// // [297][BUG][296]
        for( la3 = 0 ; la3 <=(3-1) ; la3++ ){//:@_USE__ZERO_@:// // [296]
                                                                 // [296]
            ASS( me9 >= 1 && me9 <= (9-1) ); //:@_SKIP_ZERO_@:// // [297][BUG][296]
            ASS( la3 >= 0 && la3 <= (3-1) ); //:@_USE__ZERO_@:// // [296]
                                                                 // [---]
            //:#_DIAG_OFFSET_TO_DEST_CLUST_#:[297]:------://     // [297]
                                                                 // [297]
                dia =( d_mipwasp_me9_dia[ me9 ] );               // [297]
                                                                 // [297]
            //:------:#_DIAG_OFFSET_TO_DEST_CLUST_#:[297]://     // [297]
            //:#_WHAT_LAYER_QUAD_ARE_YOU_IN_#:[297]:-----://     // [297]
                                                                 // [297]
                lmx =( d_la3_lmx[ la3 ] );                       // [297]
                lmy =( d_la3_lmy[ la3 ] );                       // [297]
                                                                 // [297]
            //:-----:#_WHAT_LAYER_QUAD_ARE_YOU_IN_#:[297]://     // [297]
            //:#_LATERAL_SPAN_OF_DEST_#:[297]:-----------://     // [297]
                                                                 // [297]
                lat =( d_mipwasp_me9_lat[ me9 ] );               // [297]
                                                                 // [297]
            //:-----------:#_LATERAL_SPAN_OF_DEST_#:[297]://     // [297]
            //:#_CALC_PIXEL_BLOCK_SOURCE_#:[297]:--------://     // [297]
                                                                 // [297]
                sx0 =( mmx *512 )+_0_+(lmx*_256_)+(   0   );     // [297]
                sy0 =( mmy *512 )+_0_+(lmy*_256_)+(   0   );     // [297]
                sx1 =( mmx *512 )+_0_+(lmx*_256_)+(_256_-1);     // [299][BUG][297]
                sy1 =( mmy *512 )+_0_+(lmy*_256_)+(_256_-1);     // [299][BUG][297]
                                                                 // [297]
            //:--------:#_CALC_PIXEL_BLOCK_SOURCE_#:[297]://     // [297]
            //:#_CALC_PIXEL_BLOCK_DEST_#:[297]:----------://     // [297]
                                                                 // [297]
                dx0 =( mmx *512 )+dia+(lmx* lat )+(   0   );     // [297]
                dy0 =( mmy *512 )+dia+(lmy* lat )+(   0   );     // [297]
                dx1 =( mmx *512 )+dia+(lmx* lat )+( lat-1 );     // [299][BUG][297]
                dy1 =( mmy *512 )+dia+(lmy* lat )+( lat-1 );     // [299][BUG][297]
                                                                 // [297]
            //:----------:#_CALC_PIXEL_BLOCK_DEST_#:[297]://     // [297]
            //:#_DOWNSCALED_COPY_PASTE_#:[297]:----------://     // [297]

                F_MIPWASP_SX0_SX1_SY0_SY1_DX0_DX1_DY0_DY1(       // [298]
                          sx0,sx1,sy0,sy1,dx0,dx1,dy0,dy1        // [298]
                );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [298]

            //:----------:#_DOWNSCALED_COPY_PASTE_#:[297]://     // [297]
                                                                 // [---]
        };;};;  //:NEXT[ me9 , la3 ]::::::::::::::::::::::::::// // [298][296]
        //:=================:#_OUTER_MIP_MAP_LOOP_#:[296/297]:// // [---]
                                                                 // [---]
    };; //:ENDFUNC::::::::::::::::::::::::::::::::::::::::::::// // [298][296]
                                                                 // [296]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [296]
//|                                               [ @$$$$$@ ]|// // [296]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __MIPWASP__|// // [296]
//|                                               [ @$$$$$@ ]|// // [296]
//|23|23|23|23|23|23|23|23|23|SUBS|23|23|23|23|23|23|23|23|23|// // [296]
//|22|22|22|22|22|22|22|22|22|SUBS|22|22|22|22|22|22|22|22|22|// // [292]
//|[ @$$$$$@ ]                                               |// // [292]
//|__GOLA512__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [292]
//|[ @$$$$$@ ]                                               |// // [292]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [292]
                                                                 // [292]
    //: #_ABOUT_GOLA512_# :-------------------------------://    // [292]
    //: Helper code for creating placeholder GOLA512      ://    // [292]
    //: GOLAPIX designs for our master memory             ://    // [292]
    //: sub-sections holding tile graphic pattern data.   ://    // [292]
    //:-------------------------------: #_ABOUT_GOLA512_# ://    // [292]
                                                                 // [---]
    const   F_GOLA512_UDESIGN_UPALKEY_MMI = function             // [295][294]
    PRIVATE_F_GOLA512_UDESIGN_UPALKEY_MMI(                       // [295][294]
                                                                 // [294]
        i_udesign  //: #_UDESIGN_QUICK_SUMMARY_# ::::::::://     // [295][294]
    ,   i_upalkey  //: AKA[ key_i10_hex ]::::::::::::::::://     // [295][294]

    ,   i_mmi      //: Master Memory Cell Index  ::::::::://     // [294]
    ){                                                           // [294]
        var chk_mmx =(     ( i_mmi % 4 ));                       // [294]
        var chk_mmy =(F_M_F( i_mmi / 4 ));                       // [294]
                                                                 // [294]
        var mmx = d_mmi_mmx[ i_mmi ];                            // [294]
        var mmy = d_mmi_mmy[ i_mmi ];                            // [294]
                                                                 // [294]
        //:#_2_9_4_MMX_MMY_CHECK_#:[301]:-----------------://    // [301][---]
                                                                 // [301][---]
            if( i_mmi < 0 ){                                     // [301][---]
                ERR("[NEG_MMI_YOU_ASSHOLE]" );                   // [301][---]
            };;                                                  // [301][---]
            if( chk_mmx != mmx ){ YEL("[BAD_MMX_2022]"); };      // [301][294]
            if( chk_mmy != mmy ){ YEL("[BAD_MMY_2022]"); };      // [301][294]
            if( chk_mmx != mmx                                   // [301][---]
            ||  chk_mmy != mmy                                   // [301][---]
            ){                                                   // [301][---]
                LOG( mmx     , "[ACT_MMX]" );                    // [301][---]
                LOG( chk_mmx , "[CHK_MMX]" );                    // [301][---]
                LOG( mmy     , "[ACT_MMY]" );                    // [301][---]
                LOG( chk_mmy , "[CHK_MMY]" );                    // [301][---]
                                                                 // [301][---]
                ERR( "[AND_NOW_YOU_DIE_2022]" );                 // [301][---]
            };;                                                  // [301][---]
        //:-----------------:#_2_9_4_MMX_MMY_CHECK_#:[301]://    // [301][---]
    
                                                                 // [---]
        //:#_ALL_VARS_EXCEPT_MMX_MMY_#:[295]:------------://     // [295]
                                                                 // [295]
        const ppp =( 256.0 / 20.0 ); //:@ppp@://                 // [295]
                                                                 // [295]
        var  p10 ; //: @p10@ : Pallet Value [0-to-(10-1)]://     // [295]
        var  hex ; //: @hex@ : RGBA Hex Color :::::::::::://     // [295]
        var  upx ; //: @upx@ : Udesign_Palletpoint_X ::::://     // [295]
        var  upy ; //: @upy@ : Udesign_PalletPoint_Y ::::://     // [295]
        var  upi ; //: @upi@ : Udesign_PalletPoint_I ::::://     // [295]
                                                                 // [295]
        var  ucx ; //: @ucx@ : Udesign_Cell_X :::::::::::://     // [295]
        var  ucy ; //: @ucy@ : Udesign_Cell_Y :::::::::::://     // [295]
                                                                 // [295]
        var  lpx ; //: @lpx@ : Local_Pixel_X  :::::::::::://     // [295]
        var  lpy ; //: @lpy@ : Local_Pixel_Y  :::::::::::://     // [295]
                                                                 // [295]
        var  la3 ; //: @la3@ : LAyer_index[0|1|2] :::::::://     // [295]
        var  lmx ; //: @lmx@ : Lateral_Multiplier_X :::::://     // [295]
        var  lmy ; //: @lmy@ : Lateral_Multiplier_Y :::::://     // [295]
                                                                 // [295]
        var  gpx ; //: @gpx@ : Global_Pixel_X :::::::::::://     // [295]
        var  gpy ; //: @gpy@ : Global_Pixel_Y :::::::::::://     // [295]
        var  gpi ; //: @gpi@ : Global_Pixel_I (PIX_INDEX)://     // [295]
        var  gpc ; //: @gpc@ : Global_Pixel_C (COMPONENT)://     // [295]
                                                                 // [295]
        //:------------:#_ALL_VARS_EXCEPT_MMX_MMY_#:[295]://     // [295]
        //:#_256_X_256_PIXEL_BLOCK_LOOP_#:[295]:---------://     // [295]
                                                                 // [295]
        for( lpy = 0 ; lpy <=(256-1) ; lpy++ ){                  // [295]
        for( lpx = 0 ; lpx <=(256-1) ; lpx++ ){                  // [295]
                                                                 // [295]
        //:( upy = 0 ; upy <= (20-1) ; upy++ ){ ... } :::://     // [295]
        //:( upx = 0 ; upx <= (20-1) ; upx++ ){ ... } :::://     // [295]
                                                                 // [295]
            //:#_GET_UPX_UPY_#:[295]:--------------------://     // [295]
                                                                 // [295]
                upx =( F_M_F( lpx / ppp ) );                     // [295]
                upy =( F_M_F( lpy / ppp ) );                     // [295]
                                                                 // [295]
            //:--------------------:#_GET_UPX_UPY_#:[295]://     // [295]
            //:#_GET_RGBA_COLOR_#:[295]:-----------------://     // [295]
                                                                 // [295]
                upi =( upx + ( upy * 20 ) );                     // [295]
                p10 =( i_udesign[ upi ]   );                     // [295]
                hex =( i_upalkey[ p10 ]   );                     // [295]
                                                                 // [295]
            //:-----------------:#_GET_RGBA_COLOR_#:[295]://     // [295]
            //:#_GET_UDESIGN_TILE_CELL_#:[295]:----------://     // [295]
                                                                 // [295]
                ucx =F_M_F( upx / 5 ); //:@_5X5_ELMTILE_@://     // [295]
                ucy =F_M_F( upy / 5 ); //:@_5X5_ELMTILE_@://     // [295]
                                                                 // [295]
            //:----------:#_GET_UDESIGN_TILE_CELL_#:[295]://     // [295]
            //:CHECK_YOUR_MATH:[295]:--------------------://     // [295]
                                                                 // [295]
            ASS( upx >= 0 && upx <= ( 20-1 ) ,"[UPX_OOB]" );     // [295]
            ASS( upy >= 0 && upy <= ( 20-1 ) ,"[UPY_OOB]" );     // [295]
            ASS( upi >= 0 && upi <= ((20*20)-1) , "[UPI]" );     // [295]
            ASS( p10 >= 0 && p10 <= (10-1)      , "[P10]" );     // [295]
            ASS( hex >= 0 && hex <= (0xFFFFFFFF), "[HEX]" );     // [295]
                                                                 // [295]
            ASS( ucx >= 0 && ucx <= (4-1)   , "[BAD_UCX]" );     // [295]
            ASS( ucy >= 0 && ucy <= (4-1)   , "[BAD_UCY]" );     // [295]
                                                                 // [295]
            //:--------------------:CHECK_YOUR_MATH:[295]://     // [295]
            //:#_PASTE_DESIGN_3_TIMES_#:[295]:-----------://     // [295]
            for( la3 = 0 ; la3 <=(3-1) ; la3 ++ ){               // [301][BUG][295]
                                                                 // [295]
                lmx =( d_la3_lmx[ la3 ] );                       // [295]
                lmy =( d_la3_lmy[ la3 ] );                       // [295]
                                                                 // [295]
                gpx =( (mmx*512)+(lmx*256)+( lpx * 1 ) );        // [295]
                gpy =( (mmy*512)+(lmy*256)+( lpy * 1 ) );        // [295]
                                                                 // [295]
                gpi =( gpx + ( gpy * 2048 ) );                   // [295]
                gpc =( gpi * 4 );                                // [295]
                                                                 // [295]
                d_pix2048[ gpc + 0 ]=( hex >>> 24 )&(0xFF);      // [295]
                d_pix2048[ gpc + 1 ]=( hex >>> 16 )&(0xFF);      // [295]
                d_pix2048[ gpc + 2 ]=( hex >>>  8 )&(0xFF);      // [295]
                d_pix2048[ gpc + 3 ]=( hex >>>  0 )&(0xFF);      // [295]
                                                                 // [295]
            };;                                                  // [295]
            //:-----------:#_PASTE_DESIGN_3_TIMES_#:[295]://     // [295]
        };;};;                                                   // [295]
        //:---------:#_256_X_256_PIXEL_BLOCK_LOOP_#:[295]://     // [295]
                                                                 // [---]
        //:#_MIPMAP_POST_PROCESSING_#:[296]:--------------://    // [296]
        //:#_CREATE_MIP_MAP_LEVELS__#:[296]:--------------://    // [296]
                                                                 // [296]
            F_MIPWASP_MMI( i_mmi );                              // [296]
                                                                 // [296]
        //:--------------:#_CREATE_MIP_MAP_LEVELS__#:[296]://    // [296]
        //:--------------:#_MIPMAP_POST_PROCESSING_#:[296]://    // [296]
                                                                 // [---]
    };;                                                          // [294]
                                                                 // [---]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [292]
//|                                               [ @$$$$$@ ]|// // [292]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __GOLA512__|// // [292]
//|                                               [ @$$$$$@ ]|// // [292]
//|22|22|22|22|22|22|22|22|22|SUBS|22|22|22|22|22|22|22|22|22|// // [292]
//|21|21|21|21|21|21|21|21|21|SUBS|21|21|21|21|21|21|21|21|21|// // [289]
//|[ @$$$$$@ ]                                               |// // [289]
//|__ARTDECA__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [289]
//|[ @$$$$$@ ]                                               |// // [289]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [289]
                                                                 // [289]
    //: #_ABOUT_ARTDECA_# ://                                    // [289]
                                                                 // [-------------]
    const F_ARTDECA_INI_MSI_QUALMIN = "[USE:QUALLOW]";           // [302][CPR][301]
    const F_ARTDECA_INI_MSI_QUALBIG = "[USE:QUALMAX]";           // [302][CPR][301]
                                                                 // [-------------]
    const   F_ARTDECA_INI_MSI_QUALMAX = function    //////////// // [302][CPR][301]
    PRIVATE_F_ARTDECA_INI_MSI_QUALMAX(              //////////// // [302][CPR][301]
                                                              // // [302][COP][301]
        /** VOID **/                                          // // [302][COP][301]
    ){                                                        // // [302][COP][301]
        ERR( "[TODO:ARTDECA:@H_Q_G_G_@]" );                   // // [302][CPR][301]
                                                              // // [-------------]
    };; //////////////////////////////////////////////////////// // [302][COP][301]
                                                                 // [-------------]
                                                                 // [-------------]
    const   F_ARTDECA_INI_MSI_QUALLOW = function                 // [302][CPR][301]
    PRIVATE_F_ARTDECA_INI_MSI_QUALLOW(                           // [302][CPR][301]
                                                                 // [302][COP][301]
        /** VOID **/                                             // [302][COP][301]
    ){                                                           // [302][COP][301]
        //:#_INCREMENT_COUNTER_#:[302]:------------------://     // [302][CPR][301]
                                                                 // [302][COP][301]
        ;;;;;;; d_msi_dex_sis++ ;                                // [302][COP][301]
        d_artdeca_msi_dex_sis++ ;   //:@INTERLACE_DETECT@://     // [302][CPR][301]
                                                                 // [302][COP][301]
        //:------------------:#_INCREMENT_COUNTER_#:[302]://     // [302][CPR][301]
        //:@_ERROR_CHECK_INPUTS_@:[302]:-----------------://     // [302][CPR][301]
                                                                 // [302][COP][301]
        if( d_eci >= 1 ){                                        // [302][COP][301]
            if(        d_msi_dex_sis                             // [302][COP][301]
            != d_artdeca_msi_dex_sis                             // [302][CPR][301]
            ){                                                   // [302][COP][301]
                ERR( "[@_OUT_OF_SYNC_@:ARTDECA]" );              // [302][CPR][301]
            };;                                                  // [302][COP][301]
            if( d_msi_ini_one >= 1 ){                            // [302][COP][301]
                ERR( "[@_A_F_A_D_@:ARTDECA]" );                  // [302][CPR][301]
            };;                                                  // [302][COP][301]
        };;                                                      // [302][COP][301]
        //:-----------------:@_ERROR_CHECK_INPUTS_@:[302]://     // [302][CPR][301]
        //:@_VARIABLE_DECLARATION_@:[302]:---------------://     // [302][CPR][301]
                                                                 // [302][COP][301]
            let d__e__x =( d_artdeca_msi_dex_sis );              // [302][CPR][301]
            let udesign = null ;                                 // [302][COP][301]
            let upalkey = null ;                                 // [302][COP][301]
            let     mmi =(0-1) ;                                 // [302][COP][301]
            let     o_k =( 0 ) ; //: @_OK_START_GUILTY_@ ://     // [302][COP][301]
                                                                 // [302][COP][301]
        //:---------------:@_VARIABLE_DECLARATION_@:[302]://     // [302][CPR][301]
        //:#_SELECT_DATA_TO_RENDER_#:[302]:--------------://     // [302][CPR][301]
                                                                 // [302][COP][301]
            if( 0 === d__e__x ){                                 // [302][COP][301]
                                                                 // [302][COP][301]
                udesign =( d_gola512_udesign_artdeca     );      // [302][CPR][301]
                upalkey =( d_gola512_artdeca_key_i10_hex );      // [302][CPR][301]
                mmi     =( c_mmi_artdeca                 );      // [302][CPR][301]
                o_k     =( 1 );                                  // [302][COP][301]
            }else                                                // [302][COP][301]
            if( 1 === d__e__x ){                                 // [302][CPR][301]
                                                                 // [302][COP][301]
                d_msi_ini_one=( 1 );  //:DONE://                 // [302][COP][301]
                o_k=( 0 /**NoWorkToBeDone**/ );                  // [302][COP][301]
            }else{                                               // [302][COP][301]
                ERR("[@OOB_DEX_SIS@:ARTDECA]");                  // [302][CPR][301]
            };;                                                  // [302][COP][301]
        //:--------------:#_SELECT_DATA_TO_RENDER_#:[302]://     // [302][CPR][301]
        //:#_NON_FRACTAL_RENDER_TILES_#:[302]:-----------://     // [302][CPR][301]
        if( o_k >= 1 ){                                          // [302][COP][301]
            F_GOLA512_UDESIGN_UPALKEY_MMI(                       // [302][COP][301]
                      udesign,upalkey,mmi );;                    // [302][COP][301]
        };;                                                      // [302][COP][301]
        //:-----------:#_NON_FRACTAL_RENDER_TILES_#:[302]://     // [302][CPR][301]
        //:@_ERROR_CHECK_OUTPUTS_@:[302]:----------------://     // [302][CPR][301]
                                                                 // [302][COP][301]
            if( d_msi_dex_sis > 1 ){                             // [302][COP][301]
                ERR( "[@C_T_M_T@:ARTDECA]" );                    // [302][CPR][301]
            };;                                                  // [302][COP][301]
        //:----------------:@_ERROR_CHECK_OUTPUTS_@:[302]://     // [302][CPR][301]
    };;                                                          // [302][COP][301]
                                                                 // [-------------]
    const   F_ARTDECA_INI_MSI = function    //:::::::::::://     // [291][--------]
    PRIVATE_F_ARTDECA_INI_MSI(              //:::::::::::://     // [291][--------]
                                            //:::::::::::://     // [291][--------]
        /** VOID **/                        //:::::::::::://     // [291][--------]
    ){  //:::::::::::::::::::::::::::::::::::::::::::::::://     // [291][--------]
                                                                 // [-------------]
        //:@_QUALGEN_RENDER_SELECTION_@:[302]:-----------://     // [302][CPR][301]
                                                                 // [302][COP][301]
            if( "[QUALLOW]" === c_qualgen ){                     // [302][COP][301]
                                                                 // [302][COP][301]
                F_ARTDECA_INI_MSI_QUALLOW();                     // [302][CPR][301]
            }else                                                // [302][COP][301]
            if( "[QUALMAX]" === c_qualgen ){                     // [302][COP][301]
                                                                 // [302][COP][301]
                F_ARTDECA_INI_MSI_QUALMAX();                     // [302][CPR][301]
            }else{                                               // [302][COP][301]
                ERR("@BAD_QUALGEN_STRING@:ARTDECA]");            // [302][CPR][301]
            };;                                                  // [302][COP][301]
        //:-----------:@_QUALGEN_RENDER_SELECTION_@:[302]://     // [302][CPR][301]
                                                                 // [---][--------]
    };; //:::::::::::::::::::::::::::::::::::::::::::::::://     // [291][--------]
                                                                 // [-------------]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [289]
//|                                               [ @$$$$$@ ]|// // [289]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __ARTDECA__|// // [289]
//|                                               [ @$$$$$@ ]|// // [289]
//|21|21|21|21|21|21|21|21|21|SUBS|21|21|21|21|21|21|21|21|21|// // [289]
//|20|20|20|20|20|20|20|20|20|SUBS|20|20|20|20|20|20|20|20|20|// // [285]
//|[ @$$$$$@ ]                                               |// // [285]
//|__ARTGOLA__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [285]
//|[ @$$$$$@ ]                                               |// // [285]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [285]
                                                                 // [285]
                                                                 // [285]
    //: TODO : Artgola rasterization functions and  ://          // [285]
    //:      : whatever other Artgola functionality ://          // [285]
    //:      : we need goes here.                   ://          // [285]
                                                                 // [---]
    const F_ARTGOLA_INI_MSI_QUALMIN = "[USE:QUALLOW]";           // [301]
    const F_ARTGOLA_INI_MSI_QUALBIG = "[USE:QUALMAX]";           // [301]
                                                                 // [301]
    const   F_ARTGOLA_INI_MSI_QUALMAX = function                 // [301]
    PRIVATE_F_ARTGOLA_INI_MSI_QUALMAX(                           // [301]
                                                                 // [301]
        /** VOID **/                                             // [301]
    ){                                                           // [301]
        ERR( "[TODO:HighQualityGraphicsGen]" );                  // [301]
    };;                                                          // [301]
                                                                 // [---]
    const   F_ARTGOLA_INI_MSI_QUALLOW = function                 // [301]
    PRIVATE_F_ARTGOLA_INI_MSI_QUALLOW(                           // [301]
                                                                 // [301]
        /** VOID **/                                             // [301]
    ){                                                           // [301]
        //:#_INCREMENT_COUNTER_#:[301]:------------------://     // [301]
                                                                 // [301]
        ;;;;;;; d_msi_dex_sis++ ;                                // [301]
        d_artgola_msi_dex_sis++ ;                                // [301]
                                                                 // [301]
        //:------------------:#_INCREMENT_COUNTER_#:[301]://     // [301]
        //:@_ERROR_CHECK_INPUTS_@:[301]:-----------------://     // [301]
                                                                 // [301]
        if( d_eci >= 1 ){                                        // [301]
            if(        d_msi_dex_sis                             // [301]
            != d_artgola_msi_dex_sis                             // [301]
            ){                                                   // [301]
                ERR( "[OUT_OF_SYNC]" );                          // [301]
            };;                                                  // [301]
            if( d_msi_ini_one >= 1 ){                            // [301]
                ERR( "[FLAGGED_AS_DONE]" );                      // [301]
            };;                                                  // [301]
        };;                                                      // [301]
        //:-----------------:@_ERROR_CHECK_INPUTS_@:[301]://     // [301]
        //:@_VARIABLE_DECLARATION_@:[301]:---------------://     // [301]
                                                                 // [301]
            let d__e__x =( d_artgola_msi_dex_sis );              // [301]
            let udesign = null ;                                 // [301]
            let upalkey = null ;                                 // [301]
            let     mmi =(0-1) ;                                 // [301]
            let     o_k =( 0 ) ; //: @_OK_START_GUILTY_@ ://     // [301]
                                                                 // [301]
        //:---------------:@_VARIABLE_DECLARATION_@:[301]://     // [301]
        //:#_SELECT_DATA_TO_RENDER_#:[301]:--------------://     // [301]
                                                                 // [301]
            if( 0 === d__e__x ){                                 // [301]
                                                                 // [301]
                udesign =( d_gola512_udesign_artgola     );      // [301]
                upalkey =( d_gola512_artgola_key_i10_hex );      // [301]
                mmi     =( c_mmi_artgola_000_011         );      // [301]
                o_k     =( 1 );                                  // [301]
            }else                                                // [301]
            if( 1 === d__e__x ){                                 // [301]
                                                                 // [301]
                udesign =( d_gola512_udesign_artgola     );      // [301]
                upalkey =( d_gola512_artgola_key_i10_hex );      // [301]
                mmi     =( c_mmi_artgola_012_023         );      // [301]
                o_k     =( 1 );                                  // [301]
            }else                                                // [301]
            if( 2 === d__e__x ){                                 // [301]
                                                                 // [301]
                udesign =( d_gola512_udesign_artgola     );      // [301]
                upalkey =( d_gola512_artgola_key_i10_hex );      // [301]
                mmi     =( c_mmi_artgola_024_035         );      // [301]
                o_k     =( 1 );                                  // [301]
            }else                                                // [301]
            if( 3 === d_msi_dex_sis ){                           // [301]
                                                                 // [301]
                udesign =( d_gola512_udesign_artgola     );      // [301]
                upalkey =( d_gola512_artgola_key_i10_hex );      // [301]
                mmi     =( c_mmi_artgola_036_047         );      // [301]
                o_k     =( 1 );                                  // [301]
            }else                                                // [301]
            if( 4 === d_msi_dex_sis ){                           // [301]
                                                                 // [301]
                d_msi_ini_one=( 1 );  //:DONE://                 // [301]
                o_k=( 0 /**NoWorkToBeDone**/ );                  // [301]
            }else{                                               // [301]
                ERR("[OOB_DEX_SIS]");                            // [301]
            };;                                                  // [301]
        //:--------------:#_SELECT_DATA_TO_RENDER_#:[301]://     // [301]
        //:#_NON_FRACTAL_RENDER_TILES_#:[301]:-----------://     // [301]
        if( o_k >= 1 ){                                          // [301]
            F_GOLA512_UDESIGN_UPALKEY_MMI(                       // [301]
                      udesign,upalkey,mmi );;                    // [301]
        };;                                                      // [301]
        //:-----------:#_NON_FRACTAL_RENDER_TILES_#:[301]://     // [301]
        //:@_ERROR_CHECK_OUTPUTS_@:[301]:----------------://     // [301]
                                                                 // [301]
            if( d_msi_dex_sis > 4 ){                             // [301]
                ERR( "[CALLED_TOO_MANY_TIMES]" );                // [301]
            };;                                                  // [301]
        //:----------------:@_ERROR_CHECK_OUTPUTS_@:[301]://     // [301]
    };;                                                          // [301]
                                                                 // [---]
    const   F_ARTGOLA_INI_MSI = function    ////////////////     // [291]
    PRIVATE_F_ARTGOLA_INI_MSI(                            //     // [291]
                                                          //     // [291]
        /** VOID **/                                      //     // [291]
    ){  ////////////////////////////////////////////////////     // [291]
                                                                 // [---]
        //:@_QUALGEN_RENDER_SELECTION_@:[301]:-----------://     // [301]
                                                                 // [301]
            if( "[QUALLOW]" === c_qualgen ){                     // [301]
                                                                 // [301]
                F_ARTGOLA_INI_MSI_QUALLOW();                     // [301]
            }else                                                // [301]
            if( "[QUALMAX]" === c_qualgen ){                     // [301]
                                                                 // [301]
                F_ARTGOLA_INI_MSI_QUALMAX();                     // [301]
            }else{                                               // [301]
                ERR("[BAD:C_QUALGEN(QUALITY_GENERATION)]");      // [301]
            };;                                                  // [301]
        //:-----------:@_QUALGEN_RENDER_SELECTION_@:[301]://     // [301]
                                                                 // [---]
    };; ////////////////////////////////////////////////////     // [291]
                                                                 // [---]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [285]
//|                                               [ @$$$$$@ ]|// // [285]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __ARTGOLA__|// // [285]
//|                                               [ @$$$$$@ ]|// // [285]
//|20|20|20|20|20|20|20|20|20|SUBS|20|20|20|20|20|20|20|20|20|// // [285]
//|04|04|04|04|04|04|04|04|04|SUBS|04|04|04|04|04|04|04|04|04|// // [???]
//|[ @$$$$$@ ]                                               |// // [???]
//|__ARTDUDE__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [???]
//|[ @$$$$$@ ]                                               |// // [???]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [???]
                                                                 // [???]
    //:--------------------------------------------------://     // [???]
    //:[062]:ARTDUDE Holds Onto Art Assets And Rendering ://     // [???]
    //:[ATS]:Data. Art dude is some guy on the street    ://     // [???]
    //:     :trying to sell paintings and blank canvases.://     // [???]
    //:     :( Storing & Fetching Assets+Levels )        ://     // [???]
    //:     :( Is ArtDude's Job.                )        ://     // [???]
    //:--------------------------------------------------://     // [???]
                                                                 // [---]
    const   F_ARTDUDE_GOT_BINCLUS_EQU_EXP_BINCLUS = function     // [243]
    PRIVATE_F_ARTDUDE_GOT_BINCLUS_EQU_EXP_BINCLUS(               // [243]
                                                                 // [243]
        i_got_binclus                                            // [243]
    ,   i_exp_binclus                                            // [243]
    ){                                                           // [243]
        var o_equ =(1 /**#_Equal_Until_Proven_Guilty_#**/);      // [243]
        var f16 ;                                                // [243]
        var got_bin =( 0x00000000 );                             // [243]
        var exp_bin =( 0x00000000 );                             // [243]
                                                                 // [---]
        //:#_Validate_Before_Compare:[246]:--------------://     // [246]
        for( f16 = 0 ; f16 <=(16-1) ; f16 ++ ){                  // [246]
                                                                 // [246]
            let got_u25clus =( i_got_binclus[ f16 ] );           // [246]
            let exp_u25clus =( i_exp_binclus[ f16 ] );           // [246]
                                                                 // [246]
            let FBU = F_FOURSET_U25CLUS_BADBITS ;                // [246]
            let bad_exp = FBU( exp_u25clus );                    // [246]
            let bad_got = FBU( got_u25clus );                    // [246]
                                                                 // [246]
            if( bad_exp >= 1 ){ MSG("[BADBITS:EXP]");};          // [246]
            if( bad_got >= 1 ){ MSG("[BADBITS:GOT]");};          // [246]
            if( bad_exp >= 1 || bad_got >= 1 ){                  // [246]
                                                                 // [246]
                LOG( "[got_u25clus]:" , got_u25clus     );       // [246]
                LOG( "[exp_u25clus]:" , exp_u25clus     );       // [246]
                ERR( "[INVALID_BINARY_DATA_IN_BINCLUS]" );       // [246]
            };;                                                  // [246]
        };;                                                      // [246]
        //:--------------:#_Validate_Before_Compare:[246]://     // [246]
                                                                 // [---]
        for( f16 = 0 ; f16 <=(16-1) ; f16 ++ ){                  // [243]
                                                                 // [243]
            got_bin = i_got_binclus[ f16 ];                      // [243]
            exp_bin = i_exp_binclus[ f16 ];                      // [243]
                                                                 // [243]
            if( got_bin != exp_bin ){                            // [243]
                o_equ =( 0 );                                    // [243]
                break;                                           // [243]
            };;                                                  // [243]
        };;                                                      // [243]
                                                                 // [243]
        return( o_equ );                                         // [243]
    };;                                                          // [243]
                                                                 // [---]
    const   F_ARTDUDE_LA3_V16_ALL_U25CLUS_ONE_BINCLUS = function // [275][REF][244]
    PRIVATE_F_ARTDUDE_LA3_V16_ALL_U25CLUS_ONE_BINCLUS(           // [275][REF][244]
                                                                 // [244]
        i_la3          //:< < < < < < < < < <  INNPUT::::://     // [244]
    ,   i_v16          //:< < < < < < < < < <  INNPUT::::://     // [244]
    ,   i_all_u25clus  //:AKA[ all_u25clus ]<--INNPUT::::://     // [275][REF][244]
    ,   o_one_binclus  //:AKA[ got_binclus ]<--OUTPUT::::://     // [244]
    ){                                                           // [244]
        //: #_DON_T_MIX_HUNGARIAN_NOTATION_IN_MY_TOWN_#  ://     // [244]
                                                                 // [---]
        if( d_eci >= 1 ){                                        // [245]
            ASS( 16 === o_one_binclus.length , "[BCLEN]" );      // [245]
                                                                 // [245]
            if( ////////////////////////////////////////////     // [245]
                                i_all_u25clus           ////     // [275][REF][245]
            !==                                         ////     // [245]
                d_fourset_la3_v16_f16_u25clus           ////     // [275][REF][245]
            ){                                          ////     // [245]
                ERR("[#_IT_CAN_ONLY_BE_THIS_2022_#]");  ////     // [245]
            };; ////////////////////////////////////////////     // [245]
        };;                                                      // [245]
                                                                 // [245]
        let arr_u25clus = i_all_u25clus;                         // [275][REF][245]
        let     u25clus =( 0x00000000 );                         // [245]
                                                                 // [245]
        for( var f16 = 0 ; f16 <=(16-1) ; f16++ ){               // [245]
                                                                 // [245]
            //:@U25CLUS_ELEMENT_SEEK@:[245]:=============://     // [275][REF][245]
            u25clus = arr_u25clus[ 0   /////////////////////     // [245]
            +    (i_la3 * 256) /// < < < Seek To Layer   ///     // [245]
            +    (i_v16 *  16) /// < < < Seek To Design  ///     // [245]
            +    (  f16 *   1) /// < < < Seek To Cluster ///     // [245]
            ];;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [245]
            //:=============:@U25CLUS_ELEMENT_SEEK@:[245]://     // [275][REF][245]
                                                                 // [245]
            o_one_binclus[ f16 ]=( u25clus );                    // [245]
        };;                                                      // [245]
                                                                 // [245]
        return /** o_one_binclus VIA reference **/ ;;;;;;;;;;    // [245]
                                                                 // [---]
    };; ////////////////////////////////////////////////////     // [244]
                                                                 // [---]

    const   F_ARTDUDE_UTM_U25CLUS = function ///////////////     // [275][REF][244]
    PRIVATE_F_ARTDUDE_UTM_U25CLUS(           ///////////////     // [275][REF][244]
                                             ///////////////     // [244][--------]
        /**VOID**/                           ///////////////     // [244][--------]
                                             ///////////////     // [244][--------]
    ){  ////////////////////////////////////////////////////     // [244][--------]
        
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [244][MOV][243]
        //: @all_u25clus@ : ALL u25clus(u_5x5) data      ://     // [275][REF][244][MOV][243]
        //: @arr_binclus@ : Array of 3 binclus objects   ://     // [244][MOV][243]
        //: @la3@ ::::::::: Layer, 0:TILE,1:GEOM,2:FADA  ://     // [244][MOV][243]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [244][MOV][243]
                                                                 // [244][MOV][243]
        let all_u25clus = d_fourset_la3_v16_f16_u25clus ;        // [275][REF][244][MOV][243]
        let arr_binclus = d_artdude_utt_out_la3_binclus ;        // [244][MOV][243]
                                                                 // [244][MOV][243]
        //: #GCT_001#:@GCT@ / @GARBAGE_COLLECTOR_THREAT@ ://     // [244][MOV][243]
        let got_binclus = new Uint32Array([                      // [244][MOV][243]
                                                                 // [244][MOV][243]
            0x00000000,0x00000000,0x00000000,0x00000000          // [244][MOV][243]
        ,   0x00000000,0x00000000,0x00000000,0x00000000          // [244][MOV][243]
        ,   0x00000000,0x00000000,0x00000000,0x00000000          // [244][MOV][243]
        ,   0x00000000,0x00000000,0x00000000,0x00000000          // [244][MOV][243]
        ]);;                                                     // [244][MOV][243]
        let exp_binclus = null ;                                 // [244][MOV][243]
                                                                 // [244][MOV][243]
        var la3 , equ ;;;;;;;;;;                                 // [244][MOV][243]
                                                                 // [244][MOV][243]
        //:#_ONE_TEST_BINCLUS_PER_LAYER_#:[243]:---------://     // [244][MOV][243]
                                                                 // [244][MOV][243]
        for( la3 = 0 ; la3 <=( 3-1 ) ; la3 ++ ){                 // [244][MOV][243]
                                                                 // [244][MOV][243]
            //:Extract_BinClus:[243]:--------------------://     // [244][MOV][243]
                                                                 // [-------------]
                F_ARTDUDE_LA3_V16_ALL_U25CLUS_ONE_BINCLUS(       // [275][REF][244] 
                          la3,(0),all_u25clus,got_binclus );     // [275][REF][244]
                                                                 // [-------------]
            //:--------------------:Extract_BinClus:[243]://     // [244][MOV][243]
            //:Get_Expected_BinClus:[243]:---------------://     // [244][MOV][243]
                                                                 // [244][MOV][243]
                exp_binclus = arr_binclus[ la3 ];                // [244][MOV][243]
                                                                 // [244][MOV][243]
            //:---------------:Get_Expected_BinClus:[243]://     // [244][MOV][243]
            //:Cross_Check_BinClus:[243]:----------------://     // [244][MOV][243]
                                                                 // [244][MOV][243]
                equ = F_ARTDUDE_GOT_BINCLUS_EQU_EXP_BINCLUS(     // [244][MOV][243]
                                got_binclus  ,  exp_binclus)     // [244][MOV][243]
                                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [244][MOV][243]
                                                                 // [244][MOV][243]
                if( equ <= 0 ){                                  // [244][MOV][243]
                                                                 // [244][MOV][243]
                    LOG("[Your_Layer_Sir:la3]:" , la3   );       // [244][MOV][243]
                                                                 // [-------------]
                    LOG("[exp_binclus]" , exp_binclus   );       // [246][--------]
                    LOG("[got_binclus]" , got_binclus   );       // [246][--------]
                                                                 // [-------------]
                    let B_L =( null /**@FUNC_PTR@**/  );         // [247][--------]
                    B_L=(    F_FOURSET_BINCLUS_LOG    );         // [247][--------]
                    B_L("[exp_binclus]" , exp_binclus );         // [247][--------]
                    B_L("[got_binclus]" , got_binclus );         // [247][--------]
                                                                 // [-------------]
                    ERR("[FUCKING_FAILED_THE_TEST_2022]");       // [244][MOV][243]
                };;                                              // [244][MOV][243]
            //:----------------:Cross_Check_BinClus:[243]://     // [244][MOV][243]
        };;                                                      // [244][MOV][243]
        //:---------:#_ONE_TEST_BINCLUS_PER_LAYER_#:[243]://     // [244][MOV][243]

    };; ////////////////////////////////////////////////////     // [244][--------]

    const   F_ARTDUDE_UTM = function ///////////////////////     // [243]
    PRIVATE_F_ARTDUDE_UTM(                                       // [243]
                                                                 // [243]
        /** VOID **/                                             // [243]
    ){                                                           // [243]
        if( c_artdude_utm <= 0 ){ return ; };    //:@E_R@://     // [244]
                                                                 // [---]
        if( c_artdude_utm_u25clus >= 1 ){ ;;;;;;    ////////     // [275][REF][244]
            F_ARTDUDE_UTM_U25CLUS();      ;;;;;;    ////////     // [275][REF][244]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    ////////     // [244]
                                                                 // [---]
    };; ////////////////////////////////////////////////////     // [243]
                                                                 // [---]
    const   F_ARTDUDE_ZTO = function ///////////////////////     // [244]
    PRIVATE_F_ARTDUDE_ZTO( //: @ZTO@ : Zero_Tile_Override://     // [246][244]
                                                                 // [244]
        /** VOID **/                                             // [244]
    ){                                                           // [244]
                                                                 // [---]
        //:[ATF]:#_ABOUT_ARTDUDE_ZTO_#:[ATF]://                  // [246][244]
                                                                 // [246]
        d_artdude_fourset_src_geo_arr[ 0 ]=(                     // [246]
        d_artdude_fourset_src_geo_utt       );;                  // [246]
                                                                 // [246]
        d_artdude_fourset_src_bom_arr[ 0 ]=(                     // [246]
        d_artdude_fourset_src_bom_utt       );;                  // [246]
                                                                 // [246]
        d_artdude_fourset_src_fad_arr[ 0 ]=(                     // [246]
        d_artdude_fourset_src_fad_utt       );;                  // [246]
                                                                 // [---]
    };; ////////////////////////////////////////////////////     // [244]
                                                                 // [---]
    const   F_ARTDUDE_INI = function ///////////////////////     // [240]
    PRIVATE_F_ARTDUDE_INI(           ///////////////////////     // [240]
                                                                 // [240]
        /** VOID **/                                             // [240]
    ){                                                           // [240]
                                                                 // [---]
        if( c_artdude_utm_u25clus >= 1 ){                        // [275][REF][244]
                                                                 // [244]
            F_ARTDUDE_ZTO();  //: @ZTO@ : Zero_Tile_Override :// // [244]
        };;                                                      // [244]
                                                                 // [---]
        let u32_arr        =( d_fourset_la3_v16_f16_u25clus );   // [275][REF][240] 
        let la3_v16_udesign=( d_artdude_fourset_src_til_arr );   // [240]
        let         udesign = null ; //:Uncompressed Design://   // [240]
        let         u25clus =(0x00000000); //:5x5Graphic ://     // [275][BUG]
                                                                 // [---]
        var la3 ; //: LAyer[ 0 | 1 | 2 ].................://     // [242]
        var v16 ; //: Value( ofTile )     [ 0 to (16-1) ]://     // [242]
        var f16 ; //: Fourset clusterIndex[ 0 to (16-1) ]://     // [242]
                                                                 // [242]
        let utt =( 0 /**#_FUCKING_HELL_DONT_DO_THAT_#**/ );;     // [244][BUG][242]
                                                                 // [242]
        for( la3 = 0 ; la3 <=( 3-1)    ; la3 ++ ){ /////////     // [242][240]
        for( v16 = 0 ; v16 <=(16-1)+utt; v16 ++ ){ /////////     // [242][240]
        for( f16 = 0 ; f16 <=(16-1)    ; f16 ++ ){ /////////     // [242][240]
                                                                 // [240]
            udesign =( la3_v16_udesign[ la3 ][ v16 ] );          // [240]
                                                                 // [240]
            u25clus =( F_FOURSET_UDESIGN_F16_U25CLUS(            // [275][REF][240]
                                 udesign,f16         ));         // [240]
                                                                 // [240]
            //:@U25CLUS_ELEMENT_SEEK@:[245]:-------------://     // [275][REF][245]
            u32_arr[ (la3*256) /// < < < Seek To Layer   ///     // [240]
                    +(v16 *16) /// < < < Seek To Design  ///     // [240]
                    +(f16  *1) /// < < < Seek To Cluster ///     // [240]
            ]=( ////////////////////////////////////////////     // [240]
                                                                 // [240]
                u25clus     //:<--RENAME_TO[ u25clus ]:::://     // [275][REF][245][240]
                                                                 // [240]
            );;  ///////////////////////////////////////////     // [240]
            //:-------------:@U25CLUS_ELEMENT_SEEK@:[245]://     // [275][REF][245]
                                                                 // [240]
        };;};;};; //:NEXT[ la3 , v16 , f16 ]:::::::::::::://     // [240]
                                                                 // [240]
    };; ////////////////////////////////////////////////////     // [240]
                                                                 // [---]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [???]
//|                                               [ @$$$$$@ ]|// // [???]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __ARTDUDE__|// // [???]
//|                                               [ @$$$$$@ ]|// // [???]
//|04|04|04|04|04|04|04|04|04|SUBS|04|04|04|04|04|04|04|04|04|// // [???]
//|05|05|05|05|05|05|05|05|05|SUBS|05|05|05|05|05|05|05|05|05|//
//|[ @$$$$$@ ]                                               |//
//|__ARTGIRL__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |//
//|[ @$$$$$@ ]                                               |//
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|//

    //:--------------------------------------------------://
    //:[062]:ARTGIRL Likes to throw paint at walls.      ://    
    //:[ATS]:She has a paintball gun. She shoots so much ://    
    //:     :paint that some fragments of paint are      ://    
    //:     :never seen because they get covered up by   ://    
    //:     :other paintball shots. Because remember,    ://    
    //:     :a fragment is a "potential pixel".          ://    
    //:     :ARTGIRL does the rendering __WORK__ using   ://    
    //:     :supplies she buys from ARTDUDE.             ://    
    //:     :( OpenGL Pipeline Creation Is ArtGirl's Job)://    
    //:     :( Rendering Loop Calls Are Her Job Too.    )://    
    //:--------------------------------------------------:// 

    const   F_ARTGIRL_TEX_PUT = function //::::::::::::::://     // [---][174]
    PRIVATE_F_ARTGIRL_TEX_PUT(  //:::::::::::::::::::::::://     // [---][174]
                                                                 // [---][174]
        /** VOID **/                                             // [---][174]
    ){                                                           // [---][174]
        ERR( "[REFACTORED:USE:F_GPUDATA_TEX_PUT]" );             // [229][---]
    };;                                                          // [---][174]
    const   F_ARTGIRL_TEX_GET = function //::::::::::::::://     // [---][174]
    PRIVATE_F_ARTGIRL_TEX_GET(                                   // [---][174]
                                                                 // [---][174]
        /** VOID **/                                             // [---][174]
    ){                                                           // [---][174]
        ERR( "[LETS_NOT_DO_THIS.LETS_INLINE_THE_CODE___]" );     // [---][174]
        ERR( "[VERIFYING:TEX_PUT:INSIDE_THE:TEX_PUT____]" );     // [---][174]
        ERR( "[FUNCTION_ITSELF_TO_REDUCE_SPAGHETTI_____]" );     // [---][174]
        ERR( "[CODE_OF_MANY_DIFFERENT_SMALL_FUNCS______]" );     // [---][174]
        ERR( "[ONLY_CALLED_ONCE.RESERVE_RIGHT_TO_______]" );     // [---][174]
        ERR( "[CHANGE_MIND_IN_FUTURE___________________]" );     // [---][174]
    };;                                                          // [---][174]

    const   F_ARTGIRL_UNI_PUT = function                         // [---][---][121]
    PRIVATE_F_ARTGIRL_UNI_PUT(                                   //           [121]
                                                                 //           [121]
        /** VOID **/                                             //           [121]
    ){                                                           //           [121]
        let uni_wgl = d_gpudata_wgl ;                            // [228][REN][121][---]
                                                                 // [---][---][---][---]
        let p2k =(c_artgirl_p2k_lot); //:@COMBO_BREAKER@://      // [---][173][---][---]
                                                                 // [---][121][---][---]
        uni_wgl.uniform1ui(      d_tik_loc , d_tik     );        // [228][REN][121][091]
        uni_wgl.uniform4uiv(     d_vpc_loc , d_vpc     );        // [228][REN][121][091]
        uni_wgl.uniform4uiv(     d_vp0_loc , d_vp0     );        // [228][REN][121][091]
        uni_wgl.uniform4uiv(     d_vp1_loc , d_vp1     );        // [228][REN][121][091]
        uni_wgl.uniform4uiv( d_camwall_loc , d_camwall );        // [228][REN][121][---]
        uni_wgl.uniform1ui(      d_dmx_loc , d_dmx     );        // [228][REN][157][141]
        uni_wgl.uniform1ui(      d_dmy_loc , d_dmy     );        // [228][REN][157][141]
        uni_wgl.uniform1ui(      d_gtx_loc , d_gtx     );        // [228][REN][157][150]
        uni_wgl.uniform1ui(      d_gty_loc , d_gty     );        // [228][REN][157][150]
        uni_wgl.uniform1ui(      d_te7_loc , d_te7     );        // [228][REN][---][150]
        //:@C_B@:COMBO_BREAKER!!!!!!!!!!!!!!!!!!!!!!!!!!!://     // [228][FMT][173][---]
        uni_wgl.uniform1i(       d_p2k_loc ,   p2k     );        // [228][REN][173][---]
        //:!!!!!!!!!!!!!!!!!!!!!!!!!!!@C_B@:COMBO_BREAKER://     // [228][FMT][173][---]
    };;                                                          // [---][121][---][---]
                                                                 // [---]
    const   F_ARTGIRL_RPL = function                             // [068] 
    PRIVATE_F_ARTGIRL_RPL( //:Render Pipeline Load @RPL@ ://     // [068] 
                                                                 // [068] 
        i_ren //: < < < < < < Render Pipeline Number     ://     // [068] 
    ){                                                           // [068] 
        if( i_ren < 1 ){ ERR("[RPL_NEG]") ; };                   // [068] 
        if( i_ren > 9 ){ ERR("[RPL_POS]") ; };                   // [068] 
        if( i_ren > c_artgirl_ren_tot ){                         // [068] 
                                                                 // [068] 
            MSG("[Not_That_Many_Render_Pipelines]");             // [068] 
        };;                                                      // [068] 
                                                                 // [068] 
        if( d_artgirl_gmc >= 1 ){ ;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
            LOG( "[I_Like_Your_Tattoo_What_Style_Is_It?]" );     // [236]
            LOG( "[[RENDER_PIPELINE_LOAD]:RPL]" , i_ren   );     // [082][068]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
                                                                 // [---][---]
        //:LIKE_AND_SUBSCRIBE_YOU_FREELOADER:[082]:------://     //      [082]
                                                                 //      [082]
            let a_g     = d_artgirl     ;      //:@MACRO@://     //      [082]
            let rpl_wgl = d_gpudata_wgl ;      //:@MACRO@://     // [228][REN][082]
            if( NIL( rpl_wgl ) ){                                // [228][REN][082]
                LOG("[CALM_THE_FUCK_DOWN_AND_WAIT]");            //      [082]
            }else{                                               //      [082]
                var pid = a_g.arr_pid[ i_ren ];                  //      [082]
                rpl_wgl.useProgram(      pid );                  // [228][REN][082]
                a_g.ren_pin=( i_ren );                           //      [086]
                                                                 //      [---]
                var act_pid =( a_g.arr_pid[ a_g.ren_pin ] );     //      [091]
                ASS(act_pid === pid , "[XP8:GETAWAY]"     );     //      [091]
                let GUL = rpl_wgl.getUniformLocation.bind(       // [228][REN][091]
                          rpl_wgl );;;;;;;;;;;;;;;;;;;;;;;;;     // [228][REN][091]
                                                                 //      [---]
                F_RES_CAN();    //:#CPU_UPDATE_B4_GPUSYNC#://    //      [092]
                                                                 //      [---]
                d_tik_loc     = GUL(  pid , "d_tik"     );       //      [121][091]
                d_vpc_loc     = GUL(  pid , "d_vpc"     );       //      [121][091]
                d_vp0_loc     = GUL(  pid , "d_vp0"     );       //      [121][091]
                d_vp1_loc     = GUL(  pid , "d_vp1"     );       //      [121][091]
                d_camwall_loc = GUL(  pid , "d_camwall" );       //      [121]
                d_dmx_loc     = GUL(  pid , "d_dmx"     );       // [157][141]
                d_dmy_loc     = GUL(  pid , "d_dmy"     );       // [157][141]
                d_gtx_loc     = GUL(  pid , "d_gtx"     );       // [157][150]
                d_gty_loc     = GUL(  pid , "d_gty"     );       // [157][150]
                d_te7_loc     = GUL(  pid , "d_te7"     );       //      [150]
                d_p2k_loc     = GUL(  pid , "d_p2k"     );       // [173]
                                                                 // [---]
                F_ARTGIRL_UNI_PUT();  //:PUT_ONTO_GPU://         // [121]
            //- F_ARTGIRL_TEX_PUT();    :PUT_ONTO_GPU:   -//     // [229][174]
                F_GPUDATA_TEX_PUT();  //:PUT_ONTO_GPU://         // [229]
                                                                 // [---]
            };;                                                  //      [082]
        //:------:LIKE_AND_SUBSCRIBE_YOU_FREELOADER:[082]://     //      [082]
                                                                 // [---][---]
    };;                                                          // [068] 
                                                                 // [---]
    const   F_ARTGIRL_TIK = function                             // [063] 
    PRIVATE_F_ARTGIRL_TIK(                                       //      [063] 
        /**VOID**/                                               // [085][063]
    ){                                                           //      [063]
        let a_g     = d_artgirl     ;                            //      [063]
        let tik_wgl = d_gpudata_wgl ;                            // [228][REN][086]
                                                                 // [086]
        //:update_frag_shader_uniforms:[086]-------------://     // [086]
                                                                 // [---]
            //:[#NOW_OPTIMIZED#][#PMOITROAE#]://                 // [091][086]
                                                                 // [091]
                F_ARTGIRL_UNI_PUT();  //:PUT_ONTO_GPU://         // [121]
                                                                 // [---]
        //:------------:[086]:update_frag_shader_uniforms://     // [086]
        //:#_update_texture_if_needed_#:[184]:-----------://     // [184]
                                                                 // [---]
            //:@MOVED_TO@[ F_GPUDATA_TIK ]://                    // [229]
                                                                 // [---]
        //:-----------:#_update_texture_if_needed_#:[184]://     // [184]
                                                                 // [---]
        var u_r ; //:uint32  red://                              // [085]
        var f_r ; //:float32 red://                              // [085]
                                                                 // [---]
        var u_r = ( d_tik % 256     ); //:#I32_MOD#://           // [085][063]
        var f_r = ( u_r   / 255     ); //:#FP_NORM#://           // [085]
                                                                 // [---]
        if( f_r > 255.0 ){ ERR("[f_r:big]" ); };                 // [085][063]
        if( f_r <   0.0 ){ ERR("[f_r:low]" ); };                 // [085]
                                                                 // [---]
        tik_wgl.clearColor( f_r , 0.0 , 0.0 , 1.0 );             // [228][REN][063] 
        tik_wgl.clear( tik_wgl.COLOR_BUFFER_BIT );               // [228][REN][063] 
                                                                 // [--------]
        tik_wgl.bindVertexArray( a_g.vao );   /**#GLSNAPSHOT#**/ // [228][REN][078][074]
                                                                 // [--------]
        tik_wgl.drawArrays(                                      // [228][REN][074]
                                                                 // [---][074]
            tik_wgl.TRIANGLE_STRIP //: #TESTYLE# ://             // [228][REN][074]
                                                                 // [---][074]
        ,   0  //: ZERO( 0 ) , IndexOfFirstVert   ://            // [228][FMT][074]
        ,   4  //: FOUR( 4 ) , NumberOfVertsToDraw://            // [228][FMT][074]
        );;                                                      // [---][074]
                                                                 // [--------]
    };; //:ENDFUNC[ F_ARTGIRL_TIK ]:::::::::::::::::::::::::::// // [228][FMT][063] 
                                                                 // [---][---]
    const   F_ARTGIRL_ERR_CHK = function                         // [---][071]
    PRIVATE_F_ARTGIRL_ERR_CHK(                                   // [---][071]
                                                                 // [---][071]
        i_tbm /** @tbm@ : TraceBackMessage **/                   // [---][071]
    ){                                                           // [---][071]
                                                                 // [---][---]
        let a_g     = d_artgirl     ;                            // [---][072]
        let err_wgl = d_gpudata_wgl ;                            // [228][REN][072]
                                                                 // [---][072]
        var err = err_wgl.getError( );                           // [228][REN][072]
        if( err_wgl.NO_ERROR == err ){                           // [228][REN][072]
                                                                 // [---][072]
            if( d_artgirl_gmc >= 1 ){   ;;;;;;;;;;;;;;;;;;;;     // [236]
                LOG( "[ARTGIRL_ERR_CHK:O_K]" , i_tbm );          // [---][072]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
        }else{                                                   // [---][072]
            if( 1 === 1 ){  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
                LOG( "[ARTGIRL_ERR_CHK:BAD]" , i_tbm );          // [073][072]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
                                                                 // [---]
            var d ={       }; /** d for dict **/                 // [---][073]
            var w = err_wgl ; /** w for  wgl **/                 // [228][REN][073]
            d[(""+( w.INVALID_ENUM                  ))]="[FU1]"; // [073]
            d[(""+( w.INVALID_VALUE                 ))]="[FU2]"; // [073]
            d[(""+( w.INVALID_OPERATION             ))]="[FU3]"; // [073]
            d[(""+( w.INVALID_FRAMEBUFFER_OPERATION ))]="[FU4]"; // [073]
            d[(""+( w.OUT_OF_MEMORY                 ))]="[FU5]"; // [073]
            d[(""+( w.CONTEXT_LOST_WEBGL            ))]="[FU6]"; // [073]
                                                                 // [073]
            var err_msg =( d[ ""+err+"" ] );                     // [073]
            LOG( "[ARTGIRL_ERR_CHK:err_msg]" , err_msg );        // [073]
            ERR( "[ARTGIRL_ERR_CHK:err_msg]" + err_msg );        // [073][072]
        };;                                                      // [072]
                                                                 // [---]
    };;                                                          // [071][---]
                                                                 // [--------]

    const   F_ARTGIRL_ARR_U32_GLSLSTR = function ///////////     // [250]
    PRIVATE_F_ARTGIRL_ARR_U32_GLSLSTR(           ///////////     // [250]
                                                    ////////     // [250]
        i_arr_nam //: NameOf[ array / variable ]:// ////////     // [250]
    ,   i_arr_u32 //: Contents Of Array         :// ////////     // [250]
    ){                                              ////////     // [250]
                                                                 // [250]
        var o_glslstr =( "" );  //:  Output GLSL String  ://     // [250]
                                                                 // [250]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [250]
        //: U32 d_la3_dui[ 3 ]=U32[ 3 ]( < < < REFERENCE ://     // [250]
        //:                              < < < REFERENCE ://     // [250]
        //:     U32( ${c_dui_geo} )      < < < REFERENCE ://     // [250]
        //: ,   U32( ${c_dui_bom} )      < < < REFERENCE ://     // [250]
        //: ,   U32( ${c_dui_fad} )      < < < REFERENCE ://     // [250]
        //:                              < < < REFERENCE ://     // [250]
        //: );// @NESC@ //               < < < REFERENCE ://     // [250]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [250]
                                                                 // [250]
        //:@cap@ : capacity , of array in this function. ://     // [250]
        //:@str_hed@ : String HEADER ::::::::::::::::::::://     // [250]
        //:@str_fot@ : String FOOTER ::::::::::::::::::::://     // [250]
        //:@str_bod@ : String BODY   ::::::::::::::::::::://     // [250]
        //:@row_elm@ : RowElementCount ::::::::::::::::::://     // [250]
                                                                 // [250]
        var u32_val ; //: @u32_val@ : A 32 Bit Value     ://     // [250]
        var hex_str ; //: @hex_str@ : Hex literal String ://     // [250]
        var u32_str ; //: @u32_str@ : GLSL Uint32 String ://     // [250]
                                                                 // [250]
        var row_elm =( 0 );                                      // [250]
        var cap =( i_arr_u32.length );                           // [250]
        var str_bod =( "" );                                     // [250]
        var str_hed =(                                           // [250]
                                                                 // [250]
            `U32 ${i_arr_nam}[ ${cap} ]=U32[ ${cap} ](`          // [250]
        );;                                                      // [250]
        var str_fot =( ");// @NESC@ //" );                       // [250]
                                                                 // [250]
                                                                 // [250]
        ASS( cap <=(1024*1024*1024*4) , "[SANITY_2022]" );       // [250]
                                                                 // [250]
        for( var dex = 0 ; dex <=(cap-1) ; dex++ ){              // [250]
                                                                 // [250]
            u32_val =( i_arr_u32[ dex ] );                       // [250]
            hex_str = u32_val.toString( 16 );                    // [250]
            hex_str =( "0x" + hex_str );                         // [250]
            u32_str =( "U32(" + hex_str + ")" );                 // [250]
                                                                 // [250]
            str_bod += u32_str ;                                 // [250]
                                                                 // [250]
            //:#_Pretty_Formatting_#:[250]:--------------://     // [250]
            row_elm++ ;                                          // [250]
            if( row_elm >= 5 ){                                  // [250]
                row_elm = 0 ;                                    // [250]
                str_bod += "\n" ;                                // [250]
            };;                                                  // [250]
            //:--------------:#_Pretty_Formatting_#:[250]://     // [250]
                                                                 // [250]
            if( dex >= (cap-1) ){                                // [250]
                                                                 // [250]
                /** Don't add comma after last item. **/         // [250]
            }else{                                               // [250]
                str_bod +=( "," );                               // [250]
            };;                                                  // [250]
        };;                                                      // [250]
                                                                 // [250]
        o_glslstr =( str_hed + "\n"                              // [250]
                   + str_bod + "\n"                              // [250]
                   + str_fot + "\n"                              // [250]
                   );;;;;;;;;;;;;;;                              // [250]
                                                                 // [250]
        return( o_glslstr );                                     // [250]
                                                                 // [250]
    };; ////////////////////////////////////////////////////     // [250]

    //:TAG[ pre-processor | pre_processor | pre-proc    ]://     // [306]
    //:TAG[ preprocessor  | pre_proc | preproc | ...... ]://     // [306]
    //:TAG[ shader-processor | string-processor | ..... ]://     // [303]
    //:SEE[ F_ARTGIRL_SSF_RAW_SSF_PPS __________________]://     // [306]

    const   F_ARTGIRL_SSF_RAW_SSF_PPS = function ///////////     // [---][249]
    PRIVATE_F_ARTGIRL_SSF_RAW_SSF_PPS(           ///////////     // [---][249]
                                                                 // [---][249]
        i_ssf_raw /** @ssf_raw@:ShaderSourceFragment-RAW **/     // [---][249]
    ){            /** @ssf_pps@:SSF-Pre_Processed_String **/     // [266][249]
                                                                 // [---][249]
        var o_ssf_pps = "" ;                                     // [---][249]
                                                                 // [---]
        var lut_arr ; //:Lookup Table Of U32 Arrays    ::://     // [---][250]
        var lut_nam ; //:Lookup Table Of Var Names     ::://     // [---][250]
        var lut_tok ; //:Lookup Table Of Tokens.       ::://     // [---][250]
                                                                 // [---][250]
        var lut_m_i ; //:Lookup Table Max Valid Index. ::://     // [---][250]
        var lut_len ; //:Lookup Table LENGTH.          ::://     // [---][250]
                                                                 // [---][250]
        var arr ; //:U32 array taken from[ lut_arr ].  ::://     // [---][250]
        var nam ; //:Variable name of array.           ::://     // [---][250]
        var tok ; //:Token in shader to look for.      ::://     // [---][250]
                                                                 // [---][250]
        var dex ; //:Index in all[ lut_*** ]arrays.    ::://     // [---][250]
        var pps ; //:@p_p_str@ To Replace Token.       ::://     // [---][250]
                                                                 // [---][250]
        //: DEPRECATED_NAME[ d_fourset_la3_v16_f16_binfour ] :// // [---][250]
        //: NEW________NAME[ d_fourset_la3_v16_f16_u25clus ] :// // [---][250]
                                                                 // [-----------------------]
        lut_arr =[                                               // [---][250][-------------]
                d_fourset_la3_v16_f16_u25clus                    // [--------][275][REF][250] 
        ,       d_la3_v16_c04_hex                                // [---][266][-------------]
        ,       d_to4_f4x                                        // [283][REF][275][REF][269]
        ,       d_to4_f4y                                        // [283][REF][275][REF][269]
        ,       d_r34_bu3_r10                                    // [276][------------------]
        ,       d_to4_a4x                                        // [286][------------------]
        ,       d_to4_a4y                                        // [286][------------------]
                                                                 // [---]
        ,       d_i21_la3  //: . . . . . . . . . . . . . . . :// // [304]
        ,       d_i21_te7  //: . . . . . . . . . . . . . . . :// // [304]
                                                                 // [---]
        ,       d_g25_r4x  //: . . . . . . . . . . . . . . . :// // [306]
        ,       d_g25_r4y  //: . . . . . . . . . . . . . . . :// // [306]
                                                                 // [---]
        ,       d_i21_lat  //: . . . . . . . . . . . . . . . :// // [309]
        ,       d_i21_dia  //: . . . . . . . . . . . . . . . :// // [309]
                                                                 // [---]
        ,       d_v48_mmi  //: . . . . . . . . . . . . . . . :// // [316]
                                                                 // [---]
        ,       d_to4_4x4  //: . . . . . . . . . . . . . . . :// // [319]
                                                                 // [---]
        ,       d_to4_h02_8x4  //: . . . . . . . . . . . . . :// // [327]
                                                                 // [---]
        ,       d_tog_m_x_to4_to4  //: . . . . . . . . . . . :// // [303]
        ,       d_tog_m_y_to4_to4  //: . . . . . . . . . . . :// // [303]
                                                                 // [---]
        ,       d_rotclok_000_r_x_to4_to2  //: . . . . . . . :// // [338]
        ,       d_rotclok_000_r_y_to4_to2  //: . . . . . . . :// // [338]
                                                                 // [338]
        ,       d_rotclok_090_r_x_to4_to2  //: . . . . . . . :// // [338]
        ,       d_rotclok_090_r_y_to4_to2  //: . . . . . . . :// // [338]
                                                                 // [338]
        ,       d_rotclok_180_r_x_to4_to2  //: . . . . . . . :// // [338]
        ,       d_rotclok_180_r_y_to4_to2  //: . . . . . . . :// // [338]
                                                                 // [338]
        ,       d_rotclok_270_r_x_to4_to2  //: . . . . . . . :// // [338]
        ,       d_rotclok_270_r_y_to4_to2  //: . . . . . . . :// // [338]
        ];;                                                      // [---][250][-------------]
        lut_nam =[                                               // [---][250][-------------]
               "d_fourset_la3_v16_f16_u25clus"                   // [---][250][-------------]
        ,      "d_la3_v16_c04_hex"                               // [---][266][-------------]
        ,      "d_to4_f4x"                                       // [283][REF][275][REF][269]
        ,      "d_to4_f4y"                                       // [283][REF][275][REF][269]
        ,      "d_r34_bu3_r10"                                   // [276][------------------]
        ,      "d_to4_a4x"                                       // [286][------------------]
        ,      "d_to4_a4y"                                       // [286][------------------]
                                                                 // [---]
        ,      "d_i21_la3" //: . . . . . . . . . . . . . . . :// // [304]
        ,      "d_i21_te7" //: . . . . . . . . . . . . . . . :// // [304]
                                                                 // [---]
        ,      "d_g25_r4x" //: . . . . . . . . . . . . . . . :// // [306]
        ,      "d_g25_r4y" //: . . . . . . . . . . . . . . . :// // [306]
                                                                 // [---]
        ,      "d_i21_lat" //: . . . . . . . . . . . . . . . :// // [309]
        ,      "d_i21_dia" //: . . . . . . . . . . . . . . . :// // [309]
                                                                 // [---]
        ,      "d_v48_mmi" //: . . . . . . . . . . . . . . . :// // [316]
                                                                 // [---]
        ,      "d_to4_4x4" //: . . . . . . . . . . . . . . . :// // [319]
                                                                 // [---]
        ,      "d_to4_h02_8x4" //: . . . . . . . . . . . . . :// // [327]
                                                                 // [---]
        ,      "d_tog_m_x_to4_to4" //: . . . . . . . . . . . :// // [303]
        ,      "d_tog_m_y_to4_to4" //: . . . . . . . . . . . :// // [303]
                                                                 // [---]
        ,      "d_rotclok_000_r_x_to4_to2" //: . . . . . . . :// // [338]
        ,      "d_rotclok_000_r_y_to4_to2" //: . . . . . . . :// // [338]
                                                                 // [338]
        ,      "d_rotclok_090_r_x_to4_to2" //: . . . . . . . :// // [338]
        ,      "d_rotclok_090_r_y_to4_to2" //: . . . . . . . :// // [338]
                                                                 // [338]
        ,      "d_rotclok_180_r_x_to4_to2" //: . . . . . . . :// // [338]
        ,      "d_rotclok_180_r_y_to4_to2" //: . . . . . . . :// // [338]
                                                                 // [338]
        ,      "d_rotclok_270_r_x_to4_to2" //: . . . . . . . :// // [338]
        ,      "d_rotclok_270_r_y_to4_to2" //: . . . . . . . :// // [338]
        ];;                                                      // [---][250][-------------]
        lut_tok =[                                               // [---][250][-------------]
            "[[[d_fourset_la3_v16_f16_u25clus]]]"                // [---][250][-------------]
        ,   "[[[d_la3_v16_c04_hex]]]"                            // [---][266][-------------]
        ,   "[[[d_to4_f4x]]]"                                    // [283][REF][275][REF][269]
        ,   "[[[d_to4_f4y]]]"                                    // [283][REF][275][REF][269]
        ,   "[[[d_r34_bu3_r10]]]"                                // [276][------------------]
        ,   "[[[d_to4_a4x]]]"                                    // [286][------------------]
        ,   "[[[d_to4_a4y]]]"                                    // [286][------------------]
                                                                 // [---]
        ,   "[[[d_i21_la3]]]"  //: . . . . . . . . . . . . . :// // [304]
        ,   "[[[d_i21_te7]]]"  //: . . . . . . . . . . . . . :// // [304]
                                                                 // [---]
        ,   "[[[d_g25_r4x]]]"  //: . . . . . . . . . . . . . :// // [306]
        ,   "[[[d_g25_r4y]]]"  //: . . . . . . . . . . . . . :// // [306]
                                                                 // [---]
        ,   "[[[d_i21_lat]]]"  //: . . . . . . . . . . . . . :// // [309]
        ,   "[[[d_i21_dia]]]"  //: . . . . . . . . . . . . . :// // [309]
                                                                 // [---]
        ,   "[[[d_v48_mmi]]]"  //: . . . . . . . . . . . . . :// // [316]
                                                                 // [---]
        ,   "[[[d_to4_4x4]]]"  //: . . . . . . . . . . . . . :// // [319]
                                                                 // [---]
        ,   "[[[d_to4_h02_8x4]]]"  //: . . . . . . . . . . . :// // [327]
                                                                 // [---]
        ,   "[[[d_tog_m_x_to4_to4]]]"  //: . . . . . . . . . :// // [303]
        ,   "[[[d_tog_m_y_to4_to4]]]"  //: . . . . . . . . . :// // [303]
                                                                 // [---]
        ,   "[[[d_rotclok_000_r_x_to4_to2]]]"  //: . . . . . :// // [338]
        ,   "[[[d_rotclok_000_r_y_to4_to2]]]"  //: . . . . . :// // [338]
                                                                 // [338]
        ,   "[[[d_rotclok_090_r_x_to4_to2]]]"  //: . . . . . :// // [338]
        ,   "[[[d_rotclok_090_r_y_to4_to2]]]"  //: . . . . . :// // [338]
                                                                 // [338]
        ,   "[[[d_rotclok_180_r_x_to4_to2]]]"  //: . . . . . :// // [338]
        ,   "[[[d_rotclok_180_r_y_to4_to2]]]"  //: . . . . . :// // [338]
                                                                 // [338]
        ,   "[[[d_rotclok_270_r_x_to4_to2]]]"  //: . . . . . :// // [338]
        ,   "[[[d_rotclok_270_r_y_to4_to2]]]"  //: . . . . . :// // [338]
        ];;                                                      // [---][250][-------------]
                                                                 // [-----------------------]
        lut_m_i =( 25 /** LookupTableMaxValidIndex **/ );        // [338][330][327][319][316][309][306][304][286][276][269][266][250]
        lut_len =( lut_m_i + 1 );                                // [---][250]
        ASS( lut_len === lut_arr.length , "[lut_arr.m_i]" );     // [---][250]
        ASS( lut_len === lut_nam.length , "[lut_nam.m_i]" );     // [---][250]
        ASS( lut_len === lut_tok.length , "[lut_tok.m_i]" );     // [---][250]
                                                                 // [---][250]
        o_ssf_pps =( ""+i_ssf_raw+"" ); //:@STRCOPY@://          // [---][250]
                                                                 // [---][250]
        for( dex = 0 ; dex <= lut_m_i ; dex ++ ){                // [---][250]
                                                                 // [---][250]
            arr = lut_arr[ dex ];                                // [---][250]
            nam = lut_nam[ dex ];                                // [---][250]
            tok = lut_tok[ dex ];                                // [---][250]
                                                                 // [---][250]
            if( o_ssf_pps.includes( tok ) ){                     // [---][250]
                                                                 // [---][250]
                pps = F_ARTGIRL_ARR_U32_GLSLSTR( nam,arr );      // [---][250]
                                                                 // [---][250]
                o_ssf_pps = o_ssf_pps.replaceAll(                // [250][249]
                                                                 // [---][249]
                    tok     //:TOKEN_TO_REPLACE://               // [250][249]
                ,   pps     //:REPLACEMENT_CODE://               // [---][249]
                );;                                              // [---][249]
            };;                                                  // [250]
        };;                                                      // [250]
                                                                 // [---][249]
        return( o_ssf_pps );                                     // [---][249]
                                                                 // [---][249]
    };; ////////////////////////////////////////////////////     // [---][249]
                                                                 // [--------]
    const   F_ARTGIRL_INI = function                             // [---][063] 
    PRIVATE_F_ARTGIRL_INI(  /**AKA[ render pipeline factory ]**/ // [---][071] 
                                                                 // [---][063] 
        /** NO arguments **/                                     // [---][063] 
    ){                                                           // [---][063] 
        let a_g = d_artgirl ;                                    // [---][063] 
                                                                 // [---][---]
        if( NIL(  d_gpudata_wgl ) ){                             // [229][228][---]
            ERR( "[WHERE_THE_FUCK_IS_MY_WEBGL_CONTEXT]" );       // [229][228][---]
        };;                                                      // [---][228][---]  
                                                                 // [---][---]
        let ini_wgl =( d_gpudata_wgl );                          // [228][REN][071] 
                                                                 // [---]
        let a_b = ini_wgl.ARRAY_BUFFER ;                         // [228][REN][078]
                                                                 // [---]
        //:VBO_IS_AI0:[077]:-----------------------------://     // [---][077]
        //:                                              ://     // [---][077]
        //: 1 : Allocate Untyped Buffer & Get It's Handle://     // [---][077]
        //: 2 : Specify Type Of The Buffer (arraybuffer) ://     // [---][077]
        //: 3 : Supply Data To The Buffer.               ://     // [---][077]
        //:- - - - - - - - - - - -- - - - - - - - - - - -://     // [---][077]
        {                                                        // [---][077]
            /** #_OPENGL_VS_WEBGL_PART_002_# **/                 // [---][077]
                                                                 // [---][077]
        //:[STEP_001]://                                         // [---][077]
                                                                 // [---][077]
            /** **************************************** **/     // [---][077]
            /** Allocate Untyped Buffer , Get Handle.    **/     // [---][077]
            /** **************************************** **/     // [---][077]
                                                                 // [---][077]
            a_g.vbo = ini_wgl.createBuffer( );                   // [228][REN][077]
                                                                 // [---][077]
        //:[STEP_002]://                                         // [---][077]
                                                                 // [---][077]
            /** **************************************** **/     // [---][077]
            /** wgl.bindBuffer( ... , a_g.vbo )          **/     // [---][077]
            /** Tell WebGL That[ bufferData ]command     **/     // [---][077]
            /** is to affect[ a_g.vbo ]                  **/     // [---][077]
            /** **************************************** **/     // [---][077]
                                                                 // [---][077]
            ini_wgl.bindBuffer( a_b , a_g.vbo );                 // [228][REN][078][077]
                                                                 // [---][077]
        //:[STEP_003]://                                         // [---][077]
                                                                 // [---][077]
            /** **************************************** **/     // [---][077]
            /** Let GPU know about your raw array.       **/     // [---][077]
            /**                                          **/     // [---][077]
            /** CPU COPY : a_g.vbd                       **/     // [---][077]
            /** GPU COPY : a_g.vbo                       **/     // [---][077]
            /** **************************************** **/     // [---][077]
                                                                 // [---][077]
            ini_wgl.bufferData(                                  // [228][REN][077]
                a_b                  //:[ target   ]://          // [---][078][077]
            ,   a_g.vbd              //:[ srcData  ]://          // [---][077]
            ,   ini_wgl.STATIC_DRAW  //:[ usage    ]://          // [228][REN][077]
            ,   0                    //:[ srcOffset]#GFD_001#:// // [---][078][FIX]  
            ,   a_g.vbl              //:[ length   ]://          // [---][077]
            );;                                                  // [---][077]
        }                                                        // [---][077]
        //:-----------------------------:VBO_IS_AI0:[077]://     // [---][077]
                                                                 // [--------]
        //:VAO_IS_AI1:[078]:-----------------------------://     // [---][078]
        //:                                              ://     // [---][078]
        //:   SEE[ www.tinyurl.com/ANDY-WEBGL2 ]         ://     // [---][078]
        //:                                              ://     // [---][078]
        //:- - - - - - - - - - - -- - - - - - - - - - - -://     // [---][078]
        {                                                        // [---][078]
            //: #_OPENGL_VS_WEBGL_PART_003_# ://                 // [---][078]
                                                                 // [---][078]
            //:function_pointers:[078]:------------------://     // [---][078]
                                                                 // [---][078]
                let w = ini_wgl; let CVA,BVA,A_P,O_N ;;;;;       // [228][REN][078]
                                                                 // [---][078]
                CVA =( w.createVertexArray      ).bind(w);       // [---][078]
                BVA =( w.bindVertexArray        ).bind(w);       // [---][078]
                                                                 // [---][078]
                O_N =( w.enableVertexAttribArray).bind(w);       // [---][078]
                A_P =( w.vertexAttribPointer    ).bind(w);       // [---][078]
                                                                 // [---][078]
            //:------------------:function_pointers:[078]://     // [---][078]
            //:calculations:[078]:-----------------------://     // [---][078]
                                                                 // [---][078]
                let b =( Float32Array.BYTES_PER_ELEMENT );       // [---][078]
                let t =( ini_wgl.FLOAT ); //: t : type   ://     // [228][REN][078]
                let s =( (3+2) * b     ); //: s : stride ://     // [---][078]
                                                                 // [---][078]
                var oib_pos = ( 0 * b );                         // [---][078]
                var oib_tex = ( 3 * b );                         // [---][078]
                                                                 // [---][078]
                let loc_pos = c_artgirl_loc_pos ;                // [---][078]
                let loc_tex = c_artgirl_loc_tex ;                // [---][078]
                                                                 // [---][078]
                if( 0 != loc_pos ){ ERR("[loc_pos]"); };         // [---][078]
                if( 1 != loc_tex ){ ERR("[loc_tex]"); };         // [---][078]
                if( 4 !=      b  ){ ERR("[_4_:-b-]"); };         // [---][078]
                                                                 // [---][078]
            //:-----------------------:calculations:[078]://     // [---][078]
            //:actions:[078]:----------------------------://     // [---][078]
                                                                 // [---][078]
                     a_g.vao =  CVA(  );      //:#SS_BEG#://     // [---][078]
                BVA( a_g.vao );               //:#SS_BEG#://     // [---][078]
                                                                 // [---][078]
                    O_N( loc_pos /**#S_POS#**/ );                // [---][078]
                    O_N( loc_tex /**#S_TEX#**/ );                // [---][078]
                                                                 // [---][078]
                    A_P( loc_pos , 3 , t,0,s , oib_pos );        // [---][078]
                    A_P( loc_tex , 2 , t,0,s , oib_tex );        // [---][078]
                                                                 // [---][078]
                ini_wgl.bindVertexArray( null ); //:#SSE#://     // [228][REN][078]
                ini_wgl.bindBuffer( a_b, null ); //:#SSE#://     // [228][REN][078]
                                                                 // [--------]
            //:----------------------------:actions:[078]://     // [---][078]
        }                                                        // [---][078]
        //:-----------------------------:VAO_IS_AI1:[078]://     // [---][078]
                                                                 
        //:vardec:[071]:---------------------------------://     // [071]
                      //: ------------------------------ ://     // [071]
            var i_0 ; //: RenderPipeline : INDEX ( MIN ) ://     // [071]
            var i_1 ; //: RenderPipeline : INDEX ( MAX ) ://     // [071]
            var i_r ; //: RenderPipeline : INDEX         ://     // [071]
                    ; //: ------------------------------ ://     // [071]
            var ssv ; //: ShaderSource : Vertex          ://     // [071]
            /// ssf ; //: ShaderSource : Fragment        ://     // [249][071]
                      //:---+----------------------------://     // [249]
            var ssf_raw ; //: @raw@ :RAW un-processed    ://     // [249]
            var ssf_pps ; //: @pps@ :Pre_Processed_String://     // [249]
                      //:---+----------------------------://     // [249]
                    ; //: ------------------------------ ://     // [071]
            var vid ; //: ID : Shader : VERT             ://     // [071]
            var fid ; //: ID : Shader : FRAG             ://     // [071]
            var pid ; //: ID : Shader : PROGRAM          ://     // [071]
                    ; //: ------------------------------ ://     // [071]
            var typ ; //: Shader Type                    ://     // [071]
            var o_k ; //: Is everything O_K ?            ://     // [071]
            var msg ; //: Diagnostic Error Message       ://     // [071]
                      //: ------------------------------ ://     // [071]
        //:---------------------------------:vardec:[071]://     // [071]
        //:varini:[071]:---------------------------------://     // [071]
                                                                 // [071]
            i_0 =( 1 );                                          // [071]
            i_1 = c_artgirl_ren_tot ;                            // [071]
            o_k =( 1 );                                          // [071]
                                                                 // [071]
        //:---------------------------------:varini:[071]://     // [071]
        //:compile_all_vertex_shaders:[071]:-------------://     // [071]
                                                                 // [071]
            if( o_k >= 1 ){                                      // [071]
            for( i_r = i_0 ; i_r <= i_1 ; i_r ++ ){              // [071]
                                                                 // [---]
                //: SEE[ #_OPENGL_VS_WEBGL_# ] ://               // [---][072]
                                                                 // [---][072]
                typ = ASS( ini_wgl.VERTEX_SHADER       );        // [228][REN][072]
                ssv = ASS( a_g.arr_ssv[ i_r ]          );        // [---][---][072]
                vid = ASS( ini_wgl.createShader( typ ) );        // [228][REN][072]
                                                                 // [---][---][072]
                ini_wgl.shaderSource(    vid , ssv  );           // [228][REN][072]
                ini_wgl.compileShader(   vid        );           // [228][REN][072]
                                                                 // [---][---][072]
                msg = ini_wgl.getShaderInfoLog( vid );           // [228][REN][072]
                o_k = ( ( msg.length <= 0 ) ? 1 : 0 );           // [---][072]
                                                                 // [---][072]
                if( 1 == o_k ){                                  // [---][072]
                                                                 // [---][072]
                    a_g.arr_vid[ i_r ]=ASS( vid );               // [---][072]
                }else                                            // [---][072]
                if( 0 == o_k ){                                  // [---][072]
                    MSG("[BEG:ssv]\n\n");                        // [---][072]
                                                                 // [---][072]
                    MSG( ssv );                                  // [---][072]
                                                                 // [---][072]
                    MSG( "[END:ssv]\n\n"           );            // [---][072]
                    LOG( "[C_S:INFOLOG:V_S]" , msg );            // [---][072]
                    ERR( "[C_S:VERT_SHADER]"       );            // [---][072]
                }else{                                           // [---][072]
                    ERR("[WTFMAN:VERT]");                        // [---][072]
                };;                                              // [---][072]
                                                                 // [---]
            };;};;                                               // [071]
        //:-------------:compile_all_vertex_shaders:[071]://     // [071]
        //:compile_all_fragment_shaders:[071]:-----------://     // [071]
                                                                 // [071]
            if( o_k >= 1 ){                                      // [071]
            for( i_r = i_0 ; i_r <= i_1 ; i_r ++ ){              // [071]
                                                                 // [---]
                //: SEE[ #_OPENGL_VS_WEBGL_# ] ://               // [---][072]
                                                                 // [---][072]
                typ = ASS( ini_wgl.FRAGMENT_SHADER       );      // [228][REN][072]
            ssf_raw = ASS( a_g.arr_ssf[ i_r ]            );      // [249][072][---]
                fid = ASS( ini_wgl.createShader( typ )   );      // [228][REN][072]
                                                                 // [-------------]
                ssf_pps = F_ARTGIRL_SSF_RAW_SSF_PPS(             // [249][--------]
                                    ssf_raw );;;;;;;             // [249][--------]
                                                                 // [-------------]
                ini_wgl.shaderSource(    fid , ssf_pps );        // [249][228][REN][072]
                ini_wgl.compileShader(   fid           );        // [---][228][REN][072]
                                                                 // [---][---][072]
                msg = ini_wgl.getShaderInfoLog( fid );           // [228][REN][072]
                o_k = ( ( msg.length <= 0 ) ? 1 : 0 );           // [---][072]
                                                                 // [---][072]
                if( 1 == o_k ){                                  // [---][072]
                                                                 // [---][072]
                    a_g.arr_fid[ i_r ]=ASS( fid );               // [---][072]
                }else                                            // [---][072]
                if( 0 == o_k ){                                  // [---][072]
                                                                 // [---]
                    MSG( "[*****************************]\n" );  // [086]
                    MSG("[BEG:ssf_pps]\n\n");                    // [249][072]
                                                                 //      [072]
                    MSG( ssf_pps );                              // [249][072]
                                                                 //      [072]
                    MSG( "[END:ssf_pps]\n\n"            );       // [249][072]
                    console.log( "[fragerr:msg]:" , msg );       // [086]
                    LOG( "[C_S:INFOLOG:F_S]"      , msg );       //      [072]
                    MSG( "[*****************************]\n" );  // [086]
                    ERR( "[C_S:FRAG_SHADER]"       );            //      [072]
                }else{                                           //      [072]
                    ERR("[WTFMAN:FRAG]");                        //      [072]
                };;                                              //      [072]
                                                                 // [---]
            };;};;                                               // [071]
        //:-----------:compile_all_fragment_shaders:[071]://     // [071]
        //:create_all_shader_programs:[071]:-------------://     // [071]
                                                                 // [071]
            if( o_k >= 1 ){                                      // [071]
            for( i_r = i_0 ; i_r <= i_1 ; i_r ++ ){              // [071]
                                                                 // [---]
                pid = ASS( ini_wgl.createProgram( ) );           // [228][REN][072]
                a_g.arr_pid[ i_r ]=( pid );                      // [072]
                if( pid <= 0 ){ ERR("[BAD_PID]"); };             // [072]
                                                                 // [072]
                pid = ASS( a_g.arr_pid[ i_r ] );                 // [072]
                vid = ASS( a_g.arr_vid[ i_r ] );                 // [072]
                fid = ASS( a_g.arr_fid[ i_r ] );                 // [072]
                                                                 // [072]
                let ERR_CHK = F_ARTGIRL_ERR_CHK ;                // [072]
                                                                 // [072]
                ini_wgl.attachShader( pid ,             vid  );  // [228][REN][072]
                ini_wgl.attachShader( pid ,             fid  );  // [228][REN][072]
                ini_wgl.linkProgram(  pid );  ERR_CHK("[L_P]");  // [228][REN][072]
                ini_wgl.useProgram(   pid );  ERR_CHK("[U_P]");  // [228][REN][072]
                                                                 // [---]
                //:error_check:[078]:------------------------:// // [078]
                                                                 // [078]
                    let loc_pos =( c_artgirl_loc_pos );          // [078]
                    let loc_tex =( c_artgirl_loc_tex );          // [078]
                                                                 // [078]
                    let GAL =(ini_wgl.getAttribLocation ////     // [228][REN][078]
                        .bind(ini_wgl));;;;;;;;;;;;;;;;;;;;;     // [228][REN][078]
                                                                 // [---]
                    let chk_pos =( GAL( pid ,"inn_pos"));        // [078]
                    let chk_tex =( GAL( pid ,"inn_tex"));        // [078]
                                                                 // [078]
                    if( chk_pos != loc_pos ){ERR("[c78:pos]");}; // [078]
                    if( chk_tex != loc_tex ){ERR("[c78:tex]");}; // [078]
                                                                 // [078]
                //:------------------------:error_check:[078]:// // [078]
                                                                 // [--------]
            };;};;                                               // [---][071]
        //:-------------:create_all_shader_programs:[071]://     // [---][071]
        //:misc_pipeline_setup_code:[071]:---------------://     // [---][071]
                                                                 // [---][071]
            //:                 _R_ , _G_ , _B_ , _A_  ; ://     // [228][FMT][071][063] 
            ini_wgl.clearColor( 0.0 , 1.0 , 0.0 , 1.0 );         // [228][REN][071][063] 
            ini_wgl.clear(  ini_wgl.COLOR_BUFFER_BIT  );         // [228][REN][071][063] 
                                                                 // [---][071]
        //:---------------:misc_pipeline_setup_code:[071]://     // [---][071]
        //:MASTER_MEMORY_TEXTURE_SETUP:[173]:------------://     // [--------]
        //:#_d_pix2048__on__gpu_#:[173]:-----------------://     // [229][---]
                                                                 // [--------]
            //:@MOVED_TO@[ F_GPUDATA_INI ]://                    // [229][---]
                                                                 // [--------]
        //:-----------------:#_d_pix2048__on__gpu_#:[173]://     // [229][---]
        //:------------:MASTER_MEMORY_TEXTURE_SETUP:[173]://     // [--------]

    };; //:ENDFUNC_ARTGIRL_INI::::::::::::::::::::::::::::::::// // [078][063] 
  
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|//
//|                                               [ @$$$$$@ ]|//
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __ARTGIRL__|//
//|                                               [ @$$$$$@ ]|//
//|05|05|05|05|05|05|05|05|05|SUBS|05|05|05|05|05|05|05|05|05|//
//|09|09|09|09|09|09|09|09|09|SUBS|09|09|09|09|09|09|09|09|09|// // [109]
//|[ @$$$$$@ ]                                               |// // [109]
//|__CAMERAH__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [109]
//|[ @$$$$$@ ]                                               |// // [109]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [109]
    //:LOCAL_INDEX:==========================================:// // [113]
    //:                                                      :// // [113]
    //:     CAMERAH_UPDATE                                   :// // [113]
    //:     CAMERAH_VP1                                      :// // [113]
    //:     CAMERAH_PAN    ( pan  / panning )                :// // [117][113]
    //:     CAMERAH_ZOM    ( zoom / zooming )                :// // [117]
    //:                                                      :// // [113]
    //:==========================================:LOCAL_INDEX:// // [113]

    const     F_CAMERAH_LOG_CIR_CUM = function                   // [131]
    F_PRIVATE_F_CAMERAH_LOG_CIR_CUM(                             // [131]
                                                                 // [131]
        /**VOID**/                                               // [133][131]
    ){                                                           // [131]
        let cir_cum =( d_camerah.cir_cum               );        // [133]
        var nam     =( d_camerah_cir_cum_nam[ cir_cum ]);        // [133][131]
        console.log( "[CIR_CUM:VAL]"    ,     cir_cum  );        // [133][131]
        console.log( "[CIR_CUM:NAM]"    ,     nam      );        // [133][131]
    };;                                                          // [131]

    const   F_CAMERAH_ZOOM = "[FIX:CAMERAH_ZOM]" ;               // [117]

    const     F_CAMERAH_ZOM = function                           // [117]
    F_PRIVATE_F_CAMERAH_ZOM(                                     // [117]
                                                                 // [117]
        i_ioo   //: @ioo@ : In_Or_Out? ://                       // [117]
    ){                                                           // [117]
        if( d_eci >= 1 ){                                        // [117]
                                                                 // [117]
            ASS_TRINARY( i_ioo , "[i_ioo]" );                    // [117]
        };;                                                      // [117]
                                                                 // [117]
        d_camerah_dir =( 1 ); //:@_DIRTY_FLAG_@ ://              // [117]
        d_moumast_dir =( 1 ); //:#DIL_001#      ://              // [169]
                                                                 // [117]
        var perstep = ( 0.01 * i_ioo );                          // [117]
        var per_new =( d_camerah.camzoom + perstep );            // [117]
                                                                 // [117]
        if( per_new < ( 0 - 1.0 ) || per_new > ( 0 + 1.0 ) ){    // [117]
                                                                 // [117]
            //: DO_NOTHING_PERCENT_OUT_OF_BOUNDS ://             // [117]
        }else{                                                   // [117]
                                                                 // [117]
            d_camerah.camzoom = per_new ;                        // [117]
        };;                                                      // [117]
    };;                                                          // [117]

    const   F_CAMERAH_MOV = "[FIX:CAMERAH_PAN]" ;                // [117]

    const     F_CAMERAH_PAN = function                           // [113]
    F_PRIVATE_F_CAMERAH_PAN(                                     // [113]
                                                                 // [113]
        i_pax //: INPUT.Pan.X ://                                // [113]
    ,   i_pay //: INPUT.Pan.Y ://                                // [113]
    ){                                                           // [113]
        if( d_eci >= 1 ){                                        // [113]
                                                                 // [113]
            ASS((0-1)===i_pax                                    // [113]
            ||  (0+1)===i_pax                                    // [113]
            ||  ( 0 )===i_pax , "[I_PAX]" );;                    // [113]
                                                                 // [113]
            ASS((0-1)===i_pay                                    // [113]
            ||  (0+1)===i_pay                                    // [113]
            ||  ( 0 )===i_pay , "[I_PAY]" );;                    // [113]
        };;                                                      // [113]
                                                                 // [---]
        d_camerah_dir =( 1 ); //:@_DIRTY_FLAG_@  ://             // [115]
        d_moumast_dir =( 1 ); //:#DIL_001#       ://             // [169]
                                                                 // [---]
        let     cam =( d_camerah /**@CAM_PAN@**/          );     // [113]
        let     b_0 =( 0 /**LowerDiscreteUnitBound**/     );     // [113]
        let     b_1 =( c_camerah_maxunit /**UpperBou**/   );     // [113]
        var pan_fac =( 1 ); //:SEE[ @pan_fac@ ]://               // [113]
        var zebspan =( d_camerah_zeb_zes[ cam.zebasis ]   );     // [113]
        var n_x,n_y ; //: @n_x@@n_y@ : NewX , NewY       ://     // [113]
        /// n_a     ; //: @n_a@: New[x|y]ABSOLUTEVALUE   ://     // [113]
        /// c_s     ; //: @c_s@: Camera Shake            ://     // [113]
                                                                 // [113]
        //:Calc_Pan_Speed_Factor:[113]:------------------://     // [113]
                                                                 // [113]
            if( cam.camsnap >= 1 ){                              // [113]
                                                                 // [113]
                pan_fac =( zebspan * 1 );                        // [113]
            }else                                                // [113]
            if( cam.camsnap <= 0 ){                              // [113]
                                                                 // [113]
                pan_fac =( zebspan / 8 );                        // [113]
            }else{                                               // [113]
                ERR("[CAMPANPROBLEMS]");                         // [113]
            };;                                                  // [113]
        //:------------------:Calc_Pan_Speed_Factor:[113]://     // [113]
        //:Translate_Camera_Org:[113]:-------------------://     // [113]
                                                                 // [113]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [113]
            //: @nopan_x@ : No Panning Happened X-axis   ://     // [113]
            //: @nopan_y@ : No Panning Happened Y-axis   ://     // [113]
            //:           : 0 : nopan flag === NOT_SET   ://     // [113]
            //:           :0-1: nopan flag === MIN_HIT   ://     // [113]
            //:           :0+1: nopan flag === MAX_HIT   ://     // [113]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [113]
                                                                 // [113]
            let   M_F = Math.floor ;                             // [122]
            n_x = M_F( cam.camdu_x + ( i_pax * pan_fac ) );      // [122][113]
            n_y = M_F( cam.camdu_y + ( i_pay * pan_fac ) );      // [122][113]
                                                                 // [---]
            //:#_CAMERA_STRESS_CODE_DIDNT_BELONG_HERE_#://       // [123]
                                                                 // [---]
            if( n_x < b_0 || n_x > b_1 ){  //:#_OOB_CAM_#://     // [!#!][119][118][113]
                                                                 // [113]
                if( n_x < b_0 ){ cam.nopan_x =( 0 - 1 );  };     // [113]
                if( n_x > b_1 ){ cam.nopan_x =( 0 + 1 );  };     // [113]
            }else{                                               // [113]
                cam.nopan_x =(  0  );                            // [113]
                cam.camdu_x =( n_x );                            // [113]
            };;                                                  // [113]
            if( n_y < b_0 || n_y > b_1 ){  //:#_OOB_CAM_#://     // [!#!][119][118][113]
                                                                 // [113]
                if( n_y < b_0 ){ cam.nopan_y =( 0 - 1 ); };      // [113]
                if( n_y > b_1 ){ cam.nopan_y =( 0 + 1 ); };      // [113]
            }else{                                               // [113]
                cam.nopan_y =(  0  );                            // [113]
                cam.camdu_y =( n_y );                            // [113]
            };;                                                  // [113]
         //:------------------:Translate_Camera_Org:[113]://     // [113]
    };;                                                          // [113]

    const   F_CAMERAH_START       = "[FIX:CAMERAH_HOSTART]" ;    // [117][109]
    const   F_CAMERAH_BEGIN       = "[FIX:CAMERAH_HOSTART]" ;    // [117][109]
    const   F_CAMERAH_TELEPORT    = "[FIX:CAMERAH_HOSTART]" ;    // [117][109]
    const   F_CAMERAH_HOTEL_START = "[FIX:CAMERAH_HOSTART]" ;    // [117][109]

    const   F_CAMERAH_HOSTART = function                         // [109]
    PRIVATE_F_CAMERAH_HOSTART(                                   // [109]
                                                                 // [109]
        /**VOID**/                                               // [109]
    ){                                                           // [109]
        //:[ATF]:----------------------------------------://     // [109]
        //: Eventually Level Packs Will Encode A Default ://     // [109]
        //: start point for when you teleport into one.  ://     // [109]
        //: For now, just arbitrarily hard code a point. ://     // [109]
        //:----------------------------------------:[ATF]://     // [109]
                                                                 // [109]
        d_camerah.camdu_x =Math.floor(  c_dum / 2  );            // [109]
        d_camerah.camdu_y =Math.floor(  c_dum / 2  );            // [109]
    };;                                                          // [109]
                                                                 // [109]
    const F_CAMERAH_UPDATE           = "[FIX:F_CAMERAH_VP1]" ;   // [109]
    const F_CAMERAH_UPDATE_VIEWPORTS = "[FIX:F_CAMERAH_VP1]" ;   // [109]
                                                                 // [109]
    const   F_CAMERAH_VP1 = function                             // [109]
    PRIVATE_F_CAMERAH_VP1(                                       // [109]
                                                                 // [109]
        /**VOID**/                                               // [109]
    ){                                                           // [109]
        //:[ATF]:----------------------------------------://     // [109]
        //:                                              ://     // [109]
        //:     Modifies[ VP1 ]on[ CPU_SIDE_ONLY ]       ://     // [109]
        //:     to make[ VP1 ] reflect the state         ://     // [109]
        //:     of [ d_camerah ].                        ://     // [109]
        //:                                              ://     // [109]
        //:----------------------------------------:[ATF]://     // [109]
        if( d_eci >= 1 ){                                        // [111]
                                                                 // [111]
            if( d_camerah.camdu_x > c_camerah_maxunit            // [111]
            ||  d_camerah.camdu_y > c_camerah_maxunit            // [111]
            ||  d_camerah.camdu_x < (  0  )                      // [111]
            ||  d_camerah.camdu_y < (  0  )                      // [111]
            ){                                                   // [111]
                //: #_OOB_CAM_# ://                              // [118]
                ERR("[CAMERA_ORIGIN_OUT_OF_BOUNDS]");            // [111]
            };;                                                  // [111]
        };;                                                      // [111]
                                                                 // [---]
        var bou_fix =( 0 /**TrueIfBoundCorrectionMade**/ );      // [118]
        let new_vp1 = d_camerah_vp1 ; //:@POINTER@://            // [118]
        let cam_org = d_camerah_org ; //:@POINTER@://            // [118]
                                                                 // [---]
        //:Figure out "ZeroSize" ://                             // [109]
                                                                 // [109]
        var zes =( 0 ); //: @zes@ : zero span in @D_U@   ://     // [109]
        zes = d_camerah_zeb_zes[ d_camerah.zebasis ];            // [109]
                                                                 // [---]
                                                                 // [110]
        var  zom = d_camerah.camzoom ;                           // [110]
        ASS( zom >= (0 - 1.0) ); //:MAX_ZOOM_OUT://              // [110]
        ASS( zom <= (0 + 1.0) ); //:MAX_ZOOM_INN://              // [110]
                                                                 // [110]
                   //:@dun@::::::::::::::::::::::::::://         // [110]
        var  dun ; //:DiscreteUnitsOfMajorOrMinorAxis://         // [110]
                   //:We don't actually know yet.    ://         // [110]
                   //::::::::::::::::::::::::::::::::://         // [110]
                                                                 // [110]
        var  dun_wid =( 0-666 ); //:UNKNOWN://                   // [110]
        var  dun_hig =( 0-666 ); //:UNKNOWN://                   // [110]
                                                                 // [110]
        //:Uknown_VP1_Edge_Length:[110]:-----------------://     // [110]
                                                                 // [110]
            if( 0.0 === zom ){ //:NEUTRAL_ZOOM://                // [110]
                                                                 // [110]
                dun =( zes );                                    // [110]
            }else                                                // [110]
            if( zom > 0.0   ){     //:ZOOM_INN://                // [110]
                                                                 // [110]
                dun =( zes - ( zom * zes ) );                    // [110]
                if( dun <= 0 ){ dun = 2 ; };                     // [110]
            }else                                                // [110]
            if( zom < 0.0   ){     //:ZOOM_OUT://                // [110]
                                                                 // [---]
                //:::::::::::::::::::::::::::::::::::::::://     // [133]
                //: TAG[ max zoom out is calculated    ] ://     // [133]
                //: TAG[ camera max zoom out is dum    ] ://     // [133]
                //: TAG[ 100% zoom out is THE_DUM      ] ://     // [133]
                //:::::::::::::::::::::::::::::::::::::::://     // [133]
                                                                 // [110]
                //:@lov@ : LeftOVer://                           // [110]
                var lov =( c_dum - zes );  //:#_DUM_MAX_#://     // [133][110]
                dun =( zes + ( (0.0-zom) * lov ) );              // [110]
            }else{                                               // [110]
                ERR("[WTF:EDCL:2022_08_05]");                    // [110]
            };;                                                  // [110]
        //:-----------------:Uknown_VP1_Edge_Length:[110]://     // [110]
        //:Inscribe_Circumscribe_None:[110]:-------------://     // [110]
                                                                 // [110]
            let c_c = d_camerah.cir_cum ;                        // [110]
                                                                 // [110]
            var vp0_wid = d_vp0[ x_1 ] - d_vp0[ x_0 ] + 1 ;      // [110]
            var vp0_hig = d_vp0[ y_1 ] - d_vp0[ y_0 ] + 1 ;      // [110]
            var vp0_map =(0-666); //:@vp0_map@://                // [110]
                                                                 // [110]
            if( 0+c_c+0 === c_camerah_cir_cum_inn ){             // [110]
                                                                 // [110]
                //:--------------------------------------://     // [110]
                //:                                      ://     // [110]
                //: The LONGEST AXIS of[ VP0 ] is the    ://     // [110]
                //: axis of[ VP1 ]that will be set       ://     // [110]
                //: to[ dun ].                           ://     // [110]
                //:                                      ://     // [110]
                //: +--------+--------+--------+         ://     // [110]
                //: |                          |         ://     // [110]
                //: |                          |         ://     // [110]
                //: |                          |         ://     // [110]
                //: ++-------+--------+-------++         ://     // [110]
                //: ||       |        |       ||         ://     // [110]
                //: ||       |        |       ||  [HOR]  ://     // [110]
                //: ++-------+--------+-------++         ://     // [110]
                //: ||<-------- dun --------->||         ://     // [110]
                //: ||<-------- zeb --------->||         ://     // [110]
                //: |                          |         ://     // [110]
                //: +--------+--------+--------+         ://     // [110]
                //:                                      ://     // [110]
                //: +--------+--------+--------+         ://     // [110]
                //: |        +--------+ --- ---|         ://     // [110]
                //: |        |        |  ^   ^ |         ://     // [110]
                //: |        |        |  |   | |         ://     // [110]
                //: +        +--------+  |   | +         ://     // [110]
                //: |        |        |  |   | |         ://     // [110]
                //: |        |        | dun zeb|  [VER]  ://     // [110]
                //: +        +--------+  |   | +         ://     // [110]
                //: |        |        |  |   | |         ://     // [110]
                //: |        |        |  V   V |         ://     // [110]
                //: |        +--------+ --- ---|         ://     // [110]
                //: +--------+--------+--------+         ://     // [110]
                //:--------------------------------------://     // [110]
                                                                 // [110]
                if( vp0_wid >= vp0_hig ){   //:HORIZONTAL://     // [110]
                                                 //:[HOR]://     // [110]
                    vp0_map =( vp0_hig / vp0_wid );              // [110]
                    ASS( vp0_map >= 0.0 && vp0_map <= 1.0 );     // [110]
                                                                 // [110]
                    dun_wid = ( dun           );//:@MAJA@://     // [110]
                    dun_hig = ( dun * vp0_map );//:@MINA@://     // [110]
                }else                                            // [110]
                if( vp0_hig  > vp0_wid ){     //:VERTICAL://     // [110]
                                                 //:[VER]://     // [110]
                    vp0_map =( vp0_wid / vp0_hig );              // [110]
                    ASS( vp0_map >= 0.0 && vp0_map <= 1.0 );     // [110]
                                                                 // [110]
                    dun_wid = ( dun * vp0_map );//:@MINA@://     // [110]
                    dun_hig = ( dun           );//:@MAJA@://     // [110]
                }else{                                           // [110]
                    ERR("[EDCL:CIR_CUM_INN]");                   // [110]
                };;                                              // [110]
                                                                 // [110]
            }else                                                // [110]
            if( 0+c_c+0 === c_camerah_cir_cum_out ){             // [110]
                //:----------------+---------------------://     // [110]
                //:                |                     ://     // [110]
                //:                |  +---+              ://     // [110]
                //:                |  |   |              ://     // [110]
                //: +---+---+---+  |  +---+              ://     // [110]
                //: |   |[ ]|   |  |  |[ ]|  [VER]       ://     // [110]
                //: +---+---+---+  |  +---+              ://     // [110]
                //:                |  |   |              ://     // [110]
                //:     [HOR]      |  +---+              ://     // [110]
                //:----------------+---------------------://     // [110]
                                                                 // [110]
                if( vp0_wid >= vp0_hig ){   //:HORIZONTAL://     // [110]
                                                 //:[HOR]://     // [110]
                    let fac ; //:ScaleFactor://                  // [110]
                                                                 // [110]
                    //:::::::::::::::::::::::::::::::::::://     // [110]
                    //: vp0_hig * fac === dun            ://     // [110]
                    //: fac === dun / vp0_hig            ://     // [110]
                    //:                                  ://     // [110]
                    //: vp0_hig * fac === dun_hig        ://     // [110]
                    //: vp0_wid * fac === dun_wid        ://     // [110]
                    //:::::::::::::::::::::::::::::::::::://     // [110]
                                                                 // [110]
                    fac = dun / vp0_hig ;                        // [110]
                                                                 // [110]
                    dun_wid = ( vp0_wid * fac );//:SCALED://     // [110]
                    dun_hig = ( dun           );//:AS__IS://     // [110]
                                                                 // [110]
                    ASS_CTE( vp0_hig * fac , dun_hig ,"[HOR]");  // [110]
                }else                                            // [110]
                if( vp0_hig  > vp0_wid ){     //:VERTICAL://     // [110]
                                                 //:[VER]://     // [110]
                    let fac ; //:ScaleFactor://                  // [110]
                                                                 // [110]
                    //:---------------------------://            // [110]
                    //: vp0_wid * fac === dun     ://            // [110]
                    //: fac === dun / vp0_wid     ://            // [110]
                    //:                           ://            // [110]
                    //: vp0_wid * fac === dun_wid ://            // [110]
                    //: vp0_hig * fac === dun_hig ://            // [110]
                    //:---------------------------://            // [110]
                                                                 // [110]
                    fac = dun / vp0_wid ;                        // [110]
                                                                 // [110]
                    dun_wid = ( dun           );//:AS__IS://     // [110]
                    dun_hig = ( vp0_hig * fac );//:SCALED://     // [110]
                                                                 // [110]
                    ASS_CTE( vp0_wid * fac , dun_wid ,"[VER]");  // [110]
                                                                 // [110]
                }else{                                           // [110]
                    ERR("[EDCL:CIR_CUM_INN]");                   // [110]
                };;                                              // [110]
                                                                 // [---]
                //:#OUT_FIX_ONLY#:[133]:-----------------://     // [133]
                if( d_camerah.camzoom < 0.0                      // [133]
                ||  d_camerah.zebasis === c_camerah_zeb_dum      // [133]
                ){                                               // [133]
                    //: #_OUTSCRIBE_THE_DUM_IS_TROUBLE_# ://     // [133]
                    let m =( c_dum );                            // [133]
                    if( dun_wid > m ){ dun_wid = m ; };          // [133]
                    if( dun_hig > m ){ dun_hig = m ; };          // [133]
                };;                                              // [133]
                //:-----------------:#OUT_FIX_ONLY#:[133]://     // [133]
                                                                 // [---]
            }else                                                // [110]
            if( 0+c_c+0 === c_camerah_cir_cum_not ){             // [110]
                                                                 // [110]
                //:::::::::::::::::::::::::::::::::::::::://     // [110]
                //: VP1 is going to end up perfectly     ://     // [110]
                //: square, and very likely your         ://     // [110]
                //: render will be squashed or           ://     // [110]
                //: stretched.                           ://     // [110]
                //:::::::::::::::::::::::::::::::::::::::://     // [110]
                                                                 // [110]
                dun_wid = dun ;                                  // [110]
                dun_hig = dun ;                                  // [110]
            }else{                                               // [110]
                ERR("[INVALID_CIR_CUM_ENUM]");                   // [110]
            };;                                                  // [110]
        //:-------------:Inscribe_Circumscribe_None:[110]://     // [110]
        //:Camera_Snapping:[111]:------------------------://     // [111]
                                                                 // [111]
            let a_x =( 0-666 ); //: @a_x@ : Adjusted X   ://     // [111]
            let a_y =( 0-666 ); //: @a_y@ : Adjusted Y   ://     // [111]
                                                                 // [111]
            if( d_camerah.camsnap <= 0 ){                        // [111]
                                                                 // [111]
                a_x =( d_camerah.camdu_x );                      // [111]
                a_y =( d_camerah.camdu_y );                      // [111]
            }else                                                // [111]
            if( d_camerah.camsnap >= 1 ){                        // [111]
                //:::::::::::::::::::::::::::::::::::::::://     // [111]
                //: @t_x@@t_y@ : TileX , TileY           ://     // [111]
                //: @h_z@ : Half zes (zerospan)          ://     // [111]
                //: @sox@@soy@ : SnappedOrigin( x|y )    ://     // [111]
                //:::::::::::::::::::::::::::::::::::::::://     // [111]
                                                                 // [111]
                let c_h = d_camerah ;                            // [111]
                let t_x = Math.floor( c_h.camdu_x / zes );       // [111]
                let t_y = Math.floor( c_h.camdu_y / zes );       // [111]
                let h_z = Math.floor(         zes /  2  );       // [111]
                                                                 // [111]
                a_x = ( t_x * zes )+(h_z)-( 1 ); //:@sox@://     // [111]
                a_y = ( t_y * zes )+(h_z)-( 1 ); //:@soy@://     // [111]
                                                                 // [111]
                //:--------------------------------------://     // [111]
                //:                                      ://     // [111]
                //:  |<----- 4 ----->| @EXAMPLE_PROBLEM@ ://     // [111]
                //:  |<---- zes ---->|                   ://     // [111]
                //:  |               |                   ://     // [111]
                //:  +---+---+---+---+                   ://     // [111]
                //:  | 0 | 1 | 2 | 3 |                   ://     // [111]
                //:  +---+---+---+---+                   ://     // [111]
                //:        ^                             ://     // [111]
                //:        |                             ://     // [111]
                //:        +---( 0 * 4 )+( 2 )-( 1 );    ://     // [111]
                //:            (t_x*zes)+(h_z)-( 1 );    ://     // [111]
                //:--------------------------------------://     // [111]
            }else{                                               // [111]
                                                                 // [111]
                ERR("[ONONONONONONO]");                          // [111]
            };;                                                  // [111]
                                                                 // [111]
            //:[ d_camerah_org ]AKA[ cam_org ]://                // [118]
            cam_org[ x_0 ]=( a_x + 0 );                          // [118][111]
            cam_org[ y_0 ]=( a_y + 0 );                          // [118][111]
            cam_org[ x_1 ]=( a_x + 1 );                          // [118][111]
            cam_org[ y_1 ]=( a_y + 1 );                          // [118][111]
                                                                 // [111]
        //:------------------------:Camera_Snapping:[111]://     // [111]
        //:- - - - - - - - - - - -- - - - - - - - - - - -://     // [---][---] 
        //:Put_It_All_Together:[112]:--------------------://     //      [112]
            {                                                    //      [112]
                let m =( c_dum );                                //      [112]
                if( dun_wid <= 0 ){ ERR("[DUN_WID::0]" ); };     //      [112]  
                if( dun_hig <= 0 ){ ERR("[DUN_HIG::0]" ); };     //      [112]
                if( dun_wid  > m ){                              // [131][112]

                    LOG( "[cir_cum]" , d_camerah.cir_cum );      // [133]
                    LOG( "[dun_wid]" , dun_wid           );      // [133][131]
                    LOG( "[_____:m]" ,       m           );      // [133][131]
                    F_CAMERAH_LOG_CIR_CUM( /**VOID**/    );      // [133][131]

                    ERR("[OH_FUCKNO:DUN_WID::m]" );              // [131][112]
                };;                                              // [131][112]
                if( dun_hig  > m ){ ERR("[DUN_HIG::m]" ); };     //      [112]
            }                                                    //      [112]
                                                                 //      [112]
            let h_w =Math.floor( dun_wid / 2 );  //:@h_w@://     //      [112]
            let h_h =Math.floor( dun_hig / 2 );  //:@h_h@://     //      [112]
                                                                 //      [112]
                //:--------------------------------------://     //      [112]
                //:  Example: dun_wid == dun_hig == 04   ://     //      [112]
                //:  Then   : h_w == 2 , h_h == 2 .      ://     //      [112]
                //:                                      ://     //      [112]
                //:         +1         -1                ://     //      [112]
                //:          |          |                ://     //      [112]
                //:      [2][+] [0][ ] [ ][ ]            ://     //      [112]
                //:      [ ][ ] [ ][1] [-][2]            ://     //      [112]
                //:       |  |          |  |             ://     //      [112]
                //:      -2  |          | +2             ://     //      [112]
                //:          |<-- 04 -->|                ://     //      [112]
                //:--------------------------------------://     //      [112]
                                                                 //      [112]
            //:[ d_camerah_org ]AKA[ cam_org ]://                //      [118]
            new_vp1[ x_0 ] =( cam_org[ x_0 ] - h_w+1 );          // [119][118][112]
            new_vp1[ y_0 ] =( cam_org[ y_0 ] - h_h+1 );          // [119][118][112]
            new_vp1[ x_1 ] =( cam_org[ x_1 ] + h_w-1 );          // [119][118][112]
            new_vp1[ y_1 ] =( cam_org[ y_1 ] + h_h-1 );          // [119][118][112]
                                                                 //      [112]
        //:--------------------:Put_It_All_Together:[112]://     //      [112]
        //:#_NOPAN_CAMWALL_MAG_#:[121]:------------------://     //      [121]
        {                                                        //      [122]  
                                                                 // [---]
            let b_0 =(   0   );  //: @b_0@ : INC_BOU_MIN ://     // [123]
            let b_1 =(c_dum-1);  //: @b_1@ : INC_BOU_MAX ://     // [123]
            let c_w = d_camwall; //: @SHORTHAND_MACRO@   ://     // [123][122]
                                                                 // [---]
            c_w[ x_0 ]=( 0 );   ASS(0===d_camwall[ x_0 ]);       // [123][122][121]
            c_w[ x_1 ]=( 0 );   ASS(0===d_camwall[ x_1 ]);       // [123][122][121]
            c_w[ y_0 ]=( 0 );   ASS(0===d_camwall[ y_0 ]);       // [123][122][121]
            c_w[ y_1 ]=( 0 );   ASS(0===d_camwall[ y_1 ]);       // [123][122][121]
                                                                 // [---]
            let e_l =( new_vp1[ x_0 ] );  //:@edg_lef@://        // [123]
            let e_r =( new_vp1[ x_1 ] );  //:@edg_rig@://        // [123]
            let e_t =( new_vp1[ y_0 ] );  //:@edg_top@://        // [123]
            let e_b =( new_vp1[ y_1 ] );  //:@edg_bot@://        // [123]
                                                                 // [---]
            //: @ASS_NNI@ : Assert Non-Negative-Int ://          // [122]
            let A =( ASS_NNI /**[WAI]:CameraStress**/ );         // [123]
                                                                 // [---]
            if( e_l < b_0 ){ c_w[x_0]=A(b_0-e_l);};              // [123][122][121]
            if( e_r > b_1 ){ c_w[x_1]=A(e_r-b_1);};              // [123][122][121]
                                                                 // [---]
            if( e_t < b_0 ){ c_w[y_0]=A(b_0-e_t);};              // [123][122][121]
            if( e_b > b_1 ){ c_w[y_1]=A(e_b-b_1);};              // [123][122][121]
                                                                 // [---]
            //:#_BOUNDCHECK_CAMWALL_#:[134]:-------------://     // [134]
            {                                                    // [134]
                let cam_wal=d_camwall;                           // [134]
                let c_w_lef = cam_wal[ x_0 ];//:@c_w_lef@://     // [134]
                let c_w_rig = cam_wal[ x_1 ];//:@c_w_rig@://     // [134]
                let c_w_top = cam_wal[ y_0 ];//:@c_w_top@://     // [134]
                let c_w_bot = cam_wal[ y_1 ];//:@c_w_bot@://     // [134]
                                                                 // [134]
                //:::::::::::::::::::::::::::::::::::::::://     // [134]
                //: minus 1 BECUZ the 2x2 camera origin  ://     // [134]
                //: CAN_T leak outside of bounds of[VP1].://     // [134]
                //:::::::::::::::::::::::::::::::::::::::://     // [134]
                                                                 // [134]
                let cam_max =Math.floor( c_dum / 2 )-1;          // [134]
                                                                 // [134]
                if( c_w_lef > cam_max ){ ERR("[c_w_lef]");};     // [134]
                if( c_w_rig > cam_max ){ ERR("[c_w_rig]");};     // [134]
                if( c_w_top > cam_max ){ ERR("[c_w_top]");};     // [134]
                if( c_w_bot > cam_max ){ ERR("[c_w_bot]");};     // [134]
            }                                                    // [134]
            //:-------------:#_BOUNDCHECK_CAMWALL_#:[134]://     // [134]
        }                                                        //      [122]
        //:------------------:#_NOPAN_CAMWALL_MAG_#:[121]://     //      [121]
        //:VP1_Out_Of_Bounds_Shift:[112]:----------------://     //      [112]
        {                                                        //      [112]
            let  b_0 =(   0   ); //: @b_0@ : INC_BOU_MIN ://     //      [112]
            let  b_1 =(c_dum-1); //: @b_1@ : INC_BOU_MAX ://     //      [112]
            let  duo =( 0-666 ); //: @duo@ : @D_U@Overflo://     //      [112]
                                                                 //      [112]
            if( new_vp1[ x_0 ] < b_0                             // [119][112]
            &&  new_vp1[ x_1 ] > b_1                             // [119][112]
            ){  ERR("[IM_FUCKING_POSSIBLE:AXIS_X]"); };          //      [112]
            if( new_vp1[ y_0 ] < b_0                             // [119][112]
            &&  new_vp1[ y_1 ] > b_1                             // [119][112]
            ){  ERR("[IM_FUCKING_POSSIBLE:AXIS_Y]"); };          //      [112]
                                                                 //      [112]
            //:VP1_SHIFT:LEF_RIG:[112]:------------------://     //      [112]
                                                                 //      [112]
                if( new_vp1[ x_0 ] < b_0 ){    //:OOB_LEF://     // [119][112]
                                           //:#_OOB_CAM_#://     //      [118]
                    duo =( b_0 - new_vp1[ x_0 ] );               // [119][112]
                    ( new_vp1[ x_0 ] )+=(  duo  );               // [119][112]
                    ( new_vp1[ x_1 ] )+=(  duo  );               // [119][112]
                                                                 //
                    bou_fix=( 1 );                               //      [118]
                }else                                            //      [112]
                if( new_vp1[ x_1 ] > b_1 ){    //:OOB_RIG://     // [119][112]
                                           //:#_OOB_CAM_#://     //      [118]
                    duo =( new_vp1[ x_1 ] - b_1 );               // [119][112]
                    ( new_vp1[ x_0 ] )-=(  duo  );               // [119][112]
                    ( new_vp1[ x_1 ] )-=(  duo  );               // [119][112]
                                                                 //
                    bou_fix=( 1 );                               //      [118]
                }else{                                           //      [112]
                    //: O_K:DO_NOTHING:X_AXIS://                 //      [112]
                };;                                              //      [112]
            //:------------------:[112]:VP1_SHIFT:LEF_RIG://     //      [112]
            //:VP1_SHIFT:TOP_BOT:[112]:------------------://     //      [112]
                                                                 //      [112]
                if( new_vp1[ y_0 ] < b_0 ){    //:OOB_TOP://     // [119][112]
                                           //:#_OOB_CAM_#://     //      [118]
                    duo =( b_0 - new_vp1[ y_0 ] );               // [119][112]
                    ( new_vp1[ y_0 ] )+=(  duo  );               // [119][112]
                    ( new_vp1[ y_1 ] )+=(  duo  );               // [119][112]
                                                                 //
                    bou_fix=( 1 );                               //      [118]
                }else                                            //      [112]
                if( new_vp1[ y_1 ] > b_1 ){    //:OOB_BOT://     // [119][112]
                                           //:#_OOB_CAM_#://     //      [118]
                    duo =( new_vp1[ y_1 ] - b_1 );               // [119][112]
                    ( new_vp1[ y_0 ] )-=(  duo  );               // [119][112]
                    ( new_vp1[ y_1 ] )-=(  duo  );               // [119][112]
                                                                 //      [119]
                    bou_fix=( 1 );                               //      [118]
                }else{                                           //      [112]
                    //: O_K:DO_NOTHING:Y_AXIS://                 //      [112]
                };;                                              //      [112]
            //:------------------:VP1_SHIFT:TOP_BOT:[112]://     //      [112]
        }                                                        //      [112]
        //:----------------:VP1_Out_Of_Bounds_Shift:[112]://     //      [112]
        //:Optional_Logging:[118]:-----------------------://     //      [---]
                                                                 //      [118]
            if( d_camerah_bfm ){    ;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
                if( bou_fix >= 1 ){                              //      [118]
                                                                 //      [118]
                    console.log( "[VP1_BOUNDS_FIXED]" );         //      [118]
                };;                                              //      [118]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
        //:-----------------------:Optional_Logging:[118]://     //      [---]
        //:SAVE_CHANGES_TO_VP1:[119]:--------------------://     // [119]
        {                                                        // [119]
            if( d_bug >= 1 ){                                    // [119]
                let u =( c_dum-1 );  //: U : Upper Bound ://     // [119]
                let E =( ERR );                                  // [119]
                                                                 // [119]
                if( new_vp1[ x_0 ] < 0 ){ E("[NV1:x_0]"); };     // [119]
                if( new_vp1[ y_0 ] < 0 ){ E("[NV1:y_0]"); };     // [119]
                if( new_vp1[ x_1 ] > u ){ E("[NV1:x_1]"); };     // [119]
                if( new_vp1[ y_1 ] > u ){ E("[NV1:y_1]"); };     // [119]
            };;                                                  // [119]
                                                                 // [119]
            d_vp1[ x_0 ]=( new_vp1[ x_0 ] );                     // [119]
            d_vp1[ y_0 ]=( new_vp1[ y_0 ] );                     // [119]
            d_vp1[ x_1 ]=( new_vp1[ x_1 ] );                     // [119]
            d_vp1[ y_1 ]=( new_vp1[ y_1 ] );                     // [119]
        }                                                        // [119]
        //:--------------------:SAVE_CHANGES_TO_VP1:[119]://     // [119]
        //:Sanity_Check:[118]:---------------------------://     //      [118]
                                                                 //      [118]
        ASS(d_camerah_org[ x_0 ]===cam_org[ x_0 ],"[COX0]");     //      [118]
        ASS(d_camerah_org[ x_1 ]===cam_org[ x_1 ],"[COX1]");     //      [118]
        ASS(d_camerah_org[ y_0 ]===cam_org[ y_0 ],"[COY0]");     //      [118]
        ASS(d_camerah_org[ y_1 ]===cam_org[ y_1 ],"[COY1]");     //      [118]
                                                                 //      [---]
        ASS(d_camerah_vp1[ x_0 ]===new_vp1[ x_0 ],"[V_X0]");     // [119]
        ASS(d_camerah_vp1[ x_1 ]===new_vp1[ x_1 ],"[V_X1]");     // [119]
        ASS(d_camerah_vp1[ y_0 ]===new_vp1[ y_0 ],"[V_Y0]");     // [119]
        ASS(d_camerah_vp1[ y_1 ]===new_vp1[ y_1 ],"[V_Y1]");     // [119]
                                                                 //      [118]
        //:---------------------------:Sanity_Check:[118]://     //      [118]
        
        //:#_SHAKE_WHEN_PRESSED_#:[113]:=================://     // [113]
                                                                 // [113]
        //: X_X < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < <   VITALDO( "[Translate_Or_Shake]" );   NOTICE_ME_SENPAI                // [117][113]
                                                                 // [113]
        //:=================:#_SHAKE_WHEN_PRESSED_#:[113]://     // [113]



        //+  "[WE_ARE_FINISHED_WRITING_THIS_FUNCTION!]"  +//     // [112][111][110][109]
    };; //:[F_CAMERAH_VP1]:::::::::::::::::::::::::::::::://     // [113][109]

    const   F_CAMERAH_TIK = function                             // [115]
    PRIVATE_F_CAMERAH_TIK(                                       // [115]
                                                                 // [115]
        /**VOID**/                                               // [115]
    ){                                                           // [115]
        if( d_camerah_dir && d_camerah_use ){                    // [115]
            d_camerah_dir =( 0 );                                // [115]
                                                                 // [115]
            F_CAMERAH_VP1();                                     // [115]
        };;                                                      // [115]
    };;                                                          // [115]

//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [109]
//|                                               [ @$$$$$@ ]|// // [109]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __CAMERAH__|// // [109]
//|                                               [ @$$$$$@ ]|// // [109]
//|09|09|09|09|09|09|09|09|09|SUBS|09|09|09|09|09|09|09|09|09|// // [109]
//|10|10|10|10|10|10|10|10|10|SUBS|10|10|10|10|10|10|10|10|10|// // [125]
//|[ @$$$$$@ ]                                               |// // [125]
//|__SEXYCAM__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [125]
//|[ @$$$$$@ ]                                               |// // [125]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [125]

    const   F_SEXYCAM_TIK = function                             // [135]
    PRIVATE_F_SEXYCAM_TIK(                                       // [135]
        /**VOID**/                                               // [135]
    ){                                                           // [135]
                                                                 // [135]
        ERR( "[I_TAKE_THIS_BACK_I_WAS_WRONG]" );                 // [135]
                                                                 // [135]
        //- if( d_sexycam_dir >= 1 ){                   -//      // [135]
        //-     d_sexycam_dir = (0);  //:@NOW_CLEAN@:// -//      // [135]
        //-     d_camerah_dir = (1);  //:@NOW_DIRTY@:// -//      // [135]
        //- };;                                         -//      // [135]
    };;                                                          // [135]

    const   F_SEXYCAM_ZOOMEXT = function                         // [135]
    PRIVATE_F_SEXYCAM_ZOOMEXT(                                   // [135]
        /**VOID**/                                               // [135]
    ){                                                           // [135]
                                                                 // [---]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [136]
            //: #_BEHAVIORAL_CONSISTENCY_WITH_NEXTEXT_#  ://     // [136]
            //: Pretend it is the first time you are     ://     // [136]
            //: pressing whatever numkey was last pressed://     // [136]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [136]
            //:BEHAVE_CONSISTENTLY:======================://     // [136]
                                                                 // [136]
                d_sexycam.but_not =( 1 );                        // [136]
                var pad_num =( d_sexycam.but_num );              // [136]
                                                                 // [136]
            //:======================:BEHAVE_CONSISTENTLY://     // [136]
                                                                 // [136]
            var hi9 =( d_sexycam_pad_hi9[    pad_num    ] );     // [136]
            ASS(hi9 >= 0 && hi9 <= 8 , "[ZEXT:HI9_OOB]"   );     // [136]
                                                                 // [136]
            var hox =(          ( hi9 % 3 ) );  //:@hox@://      // [136]
            var hoy =(Math.floor( hi9 / 3 ) );  //:@hoy@://      // [136]
                                                                 // [136]
            var dcx = d_hi9_dcx[ hi9 ]; //:DISCRETE_CEN_X://     // [136]
            var dcy = d_hi9_dcy[ hi9 ]; //:DISCRETE_CEN_Y://     // [136]
                                                                 // [136]
            d_camerah.camzoom =( 0.0 );  //:@DEFAULTZOOM@://     // [136]
            d_camerah.camdu_x =( dcx );                          // [136]
            d_camerah.camdu_y =( dcy );                          // [136]
                                                                 // [136]
            var zeb_m_i  =( c_camerah_zeb_m_i + 0 );             // [136]
                                                                 // [136]
            ASS( 1 === d_sexycam.but_not );                      // [136]
            var zeb_enu =( d_sexycam_not_zeb[ 1 ] );             // [136]
            ASS(zeb_enu >= (  0  ) , "[ZEXT:ZEB_ENU:NEG]" );     // [136]
            ASS(zeb_enu <= zeb_m_i , "[ZEXT:ZEB_ENU:OOB]" );     // [136]
                                                                 // [136]
            d_camerah.zebasis =(    zeb_enu   );                 // [136]
            d_camerah_dir =(       1          );                 // [136]
            d_moumast_dir =(       1          ); //:#DIL_001#:// // [169]
            LOG( "[ZEXT:zeb_enu]" , zeb_enu   );                 // [136]
                                                                 // [---]
    };;                                                          // [135]

    const   F_SEXYCAM_NEXTEXT = function                         // [135]
    PRIVATE_F_SEXYCAM_NEXTEXT(                                   // [135]
        i_pad_num                                                // [135]
    ){                                                           // [135]
        //:[ATF]:----------------------------------------://     // [135]
        //:                                              ://     // [135]
        //:  Zoom Extents, but the "NEXT" zero basis.    ://     // [135]
        //:                                              ://     // [135]
        //:----------------------------------------:[ATF]://     // [135]
        if( "number" != typeof i_pad_num ){                      // [135]
            ERR("[BAD_INPUT_TO:NEXTEXT]");                       // [135]
        };;                                                      // [135]
        if(!( (i_pad_num >= 0 )&&(i_pad_num <= 9) ) ){           // [135]
                                                                 // [135]
            ERR("[PAD_NUM_NOT_ZERO_TO_NINE]");                   // [135]
        };;                                                      // [135]

        {   //:BEG:MOVED_CODE://                                 // [135]

            let pad_hi9 = d_sexycam_pad_hi9 ;                    // [127]
                                                                 // [127]
            var hi9 =( pad_hi9[ i_pad_num ] );                   // [129][FIX][127]
            ASS(hi9 >= 0 && hi9 <= 8 , "[HI9_OOB]" );            // [127]
                                                                 // [127]
            //:::::::::::::::::::::::::::::::::::://             // [127]
            //: @hox@ : HOtel cell X : - - - - - ://             // [127]
            //: @hoy@ : HOtel cell Y : - - - - - ://             // [127]
            //:::::::::::::::::::::::::::::::::::://             // [127]
                                                                 // [127]
            var hox =(          ( hi9 % 3 ) );                   // [127]
            var hoy =(Math.floor( hi9 / 3 ) );                   // [127]
                                                                 // [127]
            var dcx = d_hi9_dcx[ hi9 ]; //:DISCRETE_CEN_X://     // [129]
            var dcy = d_hi9_dcy[ hi9 ]; //:DISCRETE_CEN_Y://     // [129]
                                                                 // [129]
            var zeb_m_i =( c_camerah_zeb_m_i + 0 );              // [129]
            var not_m_i =( c_camerah_zeb_m_i + 1 );              // [129]
                                                                 // [129]
            d_camerah.camzoom =( 0.0 );  //:@DEFAULTZOOM@://     // [129]
            d_camerah.camdu_x =( dcx );                          // [129]
            d_camerah.camdu_y =( dcy );                          // [129]
                                                                 // [129]
            //:#_NUMPAD_CYCLE_#:[129]:-------------------://     // [129]
                                                                 // [129]
                if( i_pad_num === d_sexycam.but_num ){           // [129]
                                                                 // [129]
                    d_sexycam.but_not ++ ;                       // [129]
                }else{                                           // [129]
                                                                 // [129]
                    d_sexycam.but_not=( 1 );                     // [129]
                };;                                              // [129]
                d_sexycam.but_num =( i_pad_num );                // [129]
                                                                 // [129]
                if( d_sexycam.but_not > not_m_i ){               // [129]
                    d_sexycam.but_not =( 1 );                    // [129]
                };;                                              // [129]
            //:-------------------:#_NUMPAD_CYCLE_#:[129]://     // [129]
            //:#_SEXYCAM_SETS_ZEROBASIS_#:[129]:---------://     // [129]
                                                                 // [---]
                //- d_sexycam_dir=( 1 );  -//                    // [135]


                var zeb_enu =( d_sexycam_not_zeb[                // [---][129]
                               d_sexycam.but_not                 // [---][129]
                ]);;                                             // [---][129]
                ASS(zeb_enu >= (  0  ) , "[ZEB_ENU:NEG]"  );     // [---][129]
                ASS(zeb_enu <= zeb_m_i , "[ZEB_ENU:OOB]"  );     // [---][129]
                                                                 // [---][---]
                d_camerah.zebasis =( zeb_enu );                  // [---][130]
                d_camerah_dir =(        1    );                  // [---][130]
                d_moumast_dir =(        1    );  //:#DIL_001#:// // [169]

                if( d_sexycam_log_zeb >= 1 ){ ;;;;;;;;;;;;;;     // [236]
                    LOG( "[log_zeb:zeb_enu]" , zeb_enu   );      // [236][130]
                };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]

                //- F_SEXYCAM_TIK(); /**UPDATE_SEXYCAM**/-//     // [135]
                                                                 // [---]
            //:---------:#_SEXYCAM_SETS_ZEROBASIS_#:[129]://     // [129]

        }   //:END:MOVED_CODE://                                 // [135]

    };; //:ENDFUNC[ F_SEXYCAN_NEXTEXT ]::::::::::::::::::://     // [135]

    const   F_SEXYCAM_CIR_NEX = function                         // [137][135]
    PRIVATE_F_SEXYCAM_CIR_NEX(                                   // [137][135]
                                                                 //      [135]
        /** VOID **/                                             //      [135]
    ){                                                           //      [135]
        //:[ F_SEXYCAM_CIR_NEX ]AKA[ F_SEXYCAM_NPE ]://          // [137]
                                                                 // [---]
            LOG( "[OLD:cir_cum]" , d_camerah.cir_cum );          // [131]
                                                                 // [131]
            d_camerah.cir_cum =(d_camerah_cir_cum_nex[           // [131]
            d_camerah.cir_cum                                    // [131]
            ]);;                                                 // [131]
            d_camerah_dir =( 1 );                                // [131]
                                                                 // [131]
            LOG( "[CUR:cir_cum]" , d_camerah.cir_cum );          // [131]
                                                                 // [---]
    };;                                                          // [135]
                                                                 // [---]
    const   F_SEXYCAM_PADCODE = function                         // [132]
    PRIVATE_F_SEXYCAM_PADCODE(                                   // [132]
                                                                 // [132]
        i_padcode                                                // [132]
    ){                                                           // [132]
        if( "number" != typeof i_padcode ){                      // [132]
            ERR("[BAD_INPUT_TYPE]");                             // [132]
        };;                                                      // [132]
        if( i_padcode < 106 ){ ERR("[i_padcode:OOB_LOW]"); };    // [132]
        if( i_padcode > 111 ){ ERR("[i_padcode:OOB_BIG]"); };    // [132]
                                                                 // [132]
        if( 110 === i_padcode /**DECIMALPOINT/"."**/ ){          // [132]
                                 
            //:::::::::::::::::::::::::::::::::::::::::::://     // [135]
            //: #_RESTORE_TO_DEFAULT_CAMERA_BASIS_#      ://     // [135]
            //: This button should be next to our        ://     // [135]
            //: "zoom extents" button.                   ://     // [135]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [135]
                                                                 // [---]
            let  cir_def = c_sexycam_act_cir_def ;               // [137]
            ASS( cir_def === d_sexycam.npa_dot  );               // [137]
                                                                 // [---]
            d_camerah.cir_cum =( c_camerah_cir_cum_def    );     // [132]
            d_camerah_dir =( 1 /**SET_DIRTY_FLAG_TRUE**/  );     // [132]
        };;                                                      // [132]
                                                                 // [132]
    };; //:ENDFUNC[ F_SEXYCAM_PADCODE ]::::::::::::::::::://     // [132]

    const   F_SEXYCAM_PAD_NUM = function                         // [126]
    PRIVATE_F_SEXYCAM_PAD_NUM(                                   // [126]
                                                                 // [126]
        i_pad_num                                                // [126]
    ){                                                           // [126]
        if( d_sexycam_npk >= 1 ){   ;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
            LOG( "[i_pad_num]" , i_pad_num );;;;;;;;;;;;;;;;     // [236][126]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
                                                                 // [---]
        if( i_pad_num === 0 ){                                   // [131]
                                                                 // [---]
            let  zoomext = c_sexycam_act_zoomext ;               // [137]
            ASS( zoomext === d_sexycam.npa_000  );               // [137]
            F_SEXYCAM_ZOOMEXT( );                                // [135]
                                                                 // [---]
        }else                                                    // [131]
        if( i_pad_num >= 1 && i_pad_num <= 9 ){                  // [127]
                                                                 // [127]
            let npa_num = c_sexycam_act_npa_num ;                // [137]
            ASS(npa_num === d_sexycam.npa_num  );                // [137]
            F_SEXYCAM_NEXTEXT( i_pad_num );                      // [135]
        };;                                                      // [127]
                                                                 // [---]
    };; //:ENDFUNC[ F_SEXYCAM_PAD_NUM ]::::::::::::::::::://     // [130][126]

//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [125]
//|                                               [ @$$$$$@ ]|// // [125]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __SEXYCAM__|// // [125]
//|                                               [ @$$$$$@ ]|// // [125]
//|10|10|10|10|10|10|10|10|10|SUBS|10|10|10|10|10|10|10|10|10|// // [125]
//|01|01|01|01|01|01|01|01|01|SUBS|01|01|01|01|01|01|01|01|01|// // [???]
//|[ @$$$$$@ ]                                               |// // [???]
//|__ASERVER__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [???]
//|[ @$$$$$@ ]                                               |// // [???]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [???]

    //:END_serverresponsewith_JSON:==========================://

    const   F_ASERVER_ENDJSON = function             //:[050]://
    PRIVATE_F_ASERVER_ENDJSON(                       //:[050]://
                                                     //:[050]://
        i_sob                                        //:[050]://
    ,   i_saywhat /**Optional**/                     //:[050]://
    ){                                               //:[050]://
        var jso = "{}" ;                             //:[050]://
        var i_say = i_saywhat ;                      //:[050]://
        var o_say = i_saywhat ;                      //:[050]://
                                                     //:[050]://
        if( HAS( i_say ) ){                          //:[050]://
                                                     //:[050]://
            if( i_say.rows        //: #IPR# ://      //:[050]://
            ||  i_say.command     //: #IPR# ://      //:[050]://
            ){                                       //:[050]://
                o_say = { arr_row : [] };            //:[050]://
                o_say.arr_row = i_say.rows    ;      //:[050]://
                o_say.sql_cmd = i_say.command ;      //:[050]://
                o_say.err_msg = i_say.err_msg ;      //:[056]://
            };;                                      //:[050]://
                                                     //:[050]://
            jso = JSON.stringify( o_say );           //:[050]://
        };;                                          //:[050]://
        i_sob.m_giv.writeHead( 200 ,  d_jso  );      //:[050]://
        i_sob.m_giv.write(              jso  );      //:[050]://
        i_sob.m_giv.end(                     );      //:[050]://
    };;                                              //:[050]://

    //:==========================:END_serverresponsewith_JSON://
    //:END_serverresponsewith_OK_status:=====================://

    const   F_ASERVER_END_O_K = function             //:[042]://
    PRIVATE_F_ASERVER_END_O_K(                       //:[042]://
                                                     //:[042]://
        i_sob                                        //:[042]://
    ,   i_saywhat /**Optional**/                     //:[044]://
    ){                                               //:[042]://
        i_sob.m_giv.writeHead( 200 ,  d_txt     );   //:[042]://
                                                     //:[044]://
        if( HAS( i_saywhat ) ){                      //:[044]://
            i_sob.m_giv.write(                       //:[044]://
                "[OH_BTW:i_saywhat]"                 //:[044]://
                       + i_saywhat                   //:[044]://
                       + "\n"                        //:[044]://
            );;                                      //:[044]://
        };;                                          //:[044]://
                                                     //:[044]://
        i_sob.m_giv.end( "[O_K][K_THNX_BYE]" );      //:[044]://
    };;                                              //:[042]://

    //:=====================:END_serverresponsewith_OK_status://
    //:#_SELF_SERVE_ICECREAM_#:[350]:========================:// // [---][350]
                                                                 // [---][350]
        const   F_ASERVER_SERVEME = function                     // [---][350]
        PRIVATE_F_ASERVER_SERVEME(                               // [---][350]
                                                                 // [---][350]
            /** VOID **/                                         // [---][350]
        ){                                                       // [---][350]
            //:------------------------------------------://     // [---][350]
            //: We don't want to serve the file.         ://     // [---][350]
            //: Really we just want to GET AHOLD OF      ://     // [---][350]
            //: the file and serve it later,             ://     // [---][350]
            //: so use[ ASERVER_GETSELF_AIM ]            ://     // [---][350]
            //:------------------------------------------://     // [---][350]
                                                                 // [---][350]
            ERR("[Actually....Use:FINDME]");                     // [---][350]
        };;                                                      // [---][350]
    //:========================:#_SELF_SERVE_ICECREAM_#:[350]:// // [350][---]
    //:#_INSIDE_THE_ICECREAM_MACHINE_#:[351]:================:// // [351][---]
                                                                 // [351][---]
                                                                 // [351][---]
        const   EXECUTO_F_ASERVER_GETSELF =(                     // [351][---]
          "[FIX:PRIVATE_EXECUTO_F_ASERVER_GETSELF_AIM]" );;      // [351][---]
                                                                 // [351][---]
        const   PRIVATE_EXECUTO_F_ASERVER_GETSELF_AIM=function   // [351][---]
        PRIVATE_PRIVATE_EXECUTO_F_ASERVER_GETSELF_AIM(           // [351][---]
                                                                 // [351][---]
            i_accepto //: @accepto@ : Acceptor_Function :://     // [351][---]
        ){                                                       // [351][---]
                                                                 // [---][---]
            let o_cof =( "[nil][o_cof:not_set]" );               // [352][MOV][351] 
                                                                 // [--------]
            let can_get_via_file_system =( 0-666 );              // [356][---]
                                                                 // [--------]
            //:#_WHICH_ENVIRONMENT_#:[352]:------------------:// // [352][---]
            if( yesgoog >= 1 ){                                  // [352][---]
                                                                 // [--------]
                can_get_via_file_system =( 1 );                  // [---][356][---] 
            }else                                                // [---][356][---]
            if( yeshero >= 1 ){                 ////////////     // [358][--------]
                                                ////////////     // [358][--------]
                can_get_via_file_system =( 1 ); ////////////     // [358][--------]
            }else                               ////////////     // [358][--------]
            {                                                    // [---][356][---]
                can_get_via_file_system =( 1 );                  // [---][356][---]
            };;                                                  // [---][356][---]
                                                                 // [-------------]
            if( can_get_via_file_system <= 0 ){                  // [356][--------]
                                                                 // [356][--------]
                o_cof = "[#_REQUEST_YOURSELF_HERE_2022_#]" ;     // [356][MOV][352]
                i_accepto( o_cof      /** @_AIM_COF_@ **/ );     // [356][MOV][352]
            }else                                                // [356][--------]
            if( can_get_via_file_system >= 1 ){                  // [356][352][---]
                                                                 // [--------]
                //: #_PROBABLY_HEROKU_SERVER_# :::::::::::::::// // [352][---]
                                                                 // [---][---]
                //: NOTE[ #_CLIENT_IS_SERVER_# ]::::::::::::::// // [351][---]
                //: NOTE[ #_SERVER_IS_CLIENT_# ]::::::::::::::// // [351][---]
                let client_js =( "./ATOMIC_IVY_MMO.JS" );        // [351][---]
                                                                 // [351][---]
                l_fs.readFile( client_js,(i_err,i_cof)=>{        // [351][---]
                                                                 // [351][---]
                    if( i_err ){                                 // [351][---]
                        o_cof =( "[CANT_GET_AIM_SOURCE_2022]" ); // [351][---]
                    }else{                                       // [351][---]
                        o_cof =( i_cof );                        // [351][---]
                    };;                                          // [351][---]
                                                                 // [351][---]
                    i_accepto( o_cof  /** @_AIM_COF_@ **/ );     // [351][---]
                });;                                             // [351][---]
                                                                 // [---][---]
            };; //::::::::::::::::::::::::::::::::::::::::::::// // [352][---]
            //:------------------:#_WHICH_ENVIRONMENT_#:[352]:// // [352][---]
                                                                 // [--------]
        };;                                                      // [351][---]
    //:================:#_INSIDE_THE_ICECREAM_MACHINE_#:[351]:// // [351][---]
    //:#_FIND_THE_ICECREAM_SHOP_#:[350]:=====================:// // [---][350]
                                                                 // [---][350]
        const  F_ASERVER_FINDAIM = "[USE:GETSELF_AIM]" ;         // [---][350]
        const  F_ASERVER_GET_AIM = "[USE:GETSELF_AIM]" ;         // [---][350]
                                                                 // [---][350]
        const   F_ASERVER_GETSELF_AIM = function                 // [---][350]
        PRIVATE_F_ASERVER_GETSELF_AIM(                           // [---][350]
                                                                 // [---][350]
            /** VOID **/                                         // [---][350]
        ){  //:BEG_FUNCBOD:GETSELF_AIM::::::::::::::::::::::::// // [351][350]
                                                                 // [351][---]
            var o_promise =( F_NEVERNO(                          // [351][---]
                                                                 // [351][---]
                PRIVATE_EXECUTO_F_ASERVER_GETSELF_AIM            // [351][---]
            ));;                                                 // [351][---]
            return( o_promise );                                 // [351][---]
                                                                 // [351][---]
        };; //:END_FUNCBOD:GETSELF_AIM::::::::::::::::::::::::// // [351][350]
                                                                 // [---][350]
    //:=====================:#_FIND_THE_ICECREAM_SHOP_#:[350]:// // [---][350]
    //:#_DO_YOU_HAVE_AMNESIA_#:[359]:========================:// // [359][---]
                                                                 // [359][---]
        const   F_ASERVER_HAS_WEBROOT = function                 // [359][---]
        PRIVATE_F_ASERVER_HAS_WEBROOT(                           // [359][---]
                                                                 // [359][---]
            /** VOID **/                                         // [359][---]
        ){                                                       // [359][---]
            let o_has =( 0 );                                    // [359][---]
            if( yesgoog >= 1 ){ o_has = 1 ; };                   // [359][---]
            if( yeshero >= 1 ){ o_has = 1 ; };                   // [359][---]
            return( o_has );                                     // [359][---]
        };;                                                      // [359][---]
    //:========================:#_DO_YOU_HAVE_AMNESIA_#:[359]:// // [359][---]
    //:#_WHO_THE_FUCK_DO_YOU_THINK_YOU_ARE_#:[357]:==========:// // [---][357]
                                                                 // [---][357]
        const   F_ASERVER_GET_WEBROOT = function                 // [---][357]
        PRIVATE_F_ASERVER_GET_WEBROOT(                           // [---][357]
                                                                 // [---][357]
            /** VOID **/                                         // [---][357]
        ){                                                       // [---][357]
            let o_webroot = "[nil][o_webroot:2022]" ;            // [---][357]
            let   pro_env =( process.env );                      // [---][357]
                                                                 // [---][357]
            if( yesgoog >= 1 ){  //:WEBROOT_GOOGLE://            // [---][357]
                                                                 // [---][357]
                let gae_nam =( pro_env.GAE_APPLICATION           // [---][357]
                             || "d~unknown_webroot" );;;         // [---][357]
                let app_nam =(                                   // [---][357]
                    gae_nam.substring(                           // [---][357]
                        2  //:Skip[ "d~" ]Over://                // [---][357]
                    ,   gae_nam.length                           // [---][357]
                    ));;                                         // [---][357]
                                                                 // [---][357]
                o_webroot =( ""   //////////////                 // [---][357]
                    + "https://"            ////                 // [---][357]
                    +  app_nam              ////                 // [---][357]
                    + ".appspot.com"        ////                 // [---][357]
                );;;;;;;;;;;;;;;;;;;;;;;;;;;////                 // [---][357]
                                                                 // [---][357]
            }else                                                // [---][357]
            if( yeshero >= 1 ){  //:WEBROOT_HEROKU://            // [358][357]
                                                                 // [---][357] 
                let app_nam =( pro_env.HEROKU_APP_NAME );        // [---][357] 
                                                                 // [---][357] 
                o_webroot =( ""   //////////////                 // [---][357] 
                    + "https://"            ////                 // [---][357] 
                    +  app_nam              ////                 // [---][357] 
                    + ".herokuapp.com"      ////                 // [---][357] 
                );;;;;;;;;;;;;;;;;;;;;;;;;;;////                 // [---][357] 
                                                                 // [---][357] 
            }else{                                               // [---][357] 
                o_webroot = "[WWW.UNKNOWN.COM]" ;                // [---][357] 
            };;                                                  // [---][357] 
                                                                 // [---][357] 
            return( o_webroot );                                 // [---][357] 
        };;                                                      // [---][357] 
    //:==========:#_WHO_THE_FUCK_DO_YOU_THINK_YOU_ARE_#:[357]:// // [---][357] 

//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|//
//|                                               [ @$$$$$@ ]|//
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __ASERVER__|//
//|                                               [ @$$$$$@ ]|//
//|01|01|01|01|01|01|01|01|01|SUBS|01|01|01|01|01|01|01|01|01|//
//|02|02|02|02|02|02|02|02|02|SUBS|02|02|02|02|02|02|02|02|02|//
//|[ @$$$$$@ ]                                               |//
//|__DABITCH__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |//
//|[ @$$$$$@ ]                                               |//
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|//

    const   F_DABITCH_RUN_SQL = function             //:[044]://
    PRIVATE_F_DABITCH_RUN_SQL(                       //:[044]://
                                                     //:[044]://
        i_sql                                        //:[044]://
    ,   i_tbm                                        //:[045]://
    ){                                               //:[044]://
        
        var o_promise = "[nil][run_sql_promise]" ;   //:[055]://

        if( notnode ){                               //:[055]://
                                                     //:[055]://
            ERR("[RUN_SQL:SERVER_SIDE_ONLY]");       //:[055]://
        }else                                        //:[055]://
        if( yesnode ){ /**RUN_SQL:Server Side Only**///:[055]://

            if( NIL( i_sql ) ){ ERR("#001#"); };     //:[045]://
            if( NIL( i_tbm ) ){ ERR("#002#"); };     //:[045]://
                                                     //:[045]://
            o_promise = new Promise( function        //:[055]://
            EXECUTO_F_DABITCH_RUN_SQL(               //:[044]://
                                                     //:[044]://
                o_k_yes     //: #RES_NAE# ://        //:[055]://
            ,   wontsay     //: #REJ_NAE# ://        //:[055]://
            ){                                       //:[044]://
                                                     //:[045]://
                d_dcp                                //:[045]://
                .query( i_sql )                      //:[055]://
                .then( function( i_saywhat ){        //:[045]://
                    LOG( "[RUN_S:i_tbm]" , i_tbm );  //:[055]://
                    i_saywhat.err_msg =( "" );       //:[056]://
                    o_k_yes( i_saywhat );            //:[045]://
                })                                   //:[045]://
                .catch( function( i_err ){           //:[045]://
                                                     //:[045]://
                    LOG( "[RUN_S:i_sql]" , i_sql );  //:[055]://
                    LOG( "[RUN_S:i_tbm]" , i_tbm );  //:[055]://
                    LOG( "[RUN_S:i_err]" , i_err );  //:[055]://
                    
                    /** #MUO_RBP# **/                //:[056]://
                                                     //:[056]://
                    var i_saywhat     = { };         //:[056]://
                    i_saywhat.rows    = [ ];         //:[056]://
                    i_saywhat.command = "[SQL_ERR]"; //:[056]://
                    i_saywhat.err_msg =(             //:[056]://
                                                     //:[056]://
                        ""+i_err+""                  //:[056]://
                    );;                              //:[056]://
                    o_k_yes( i_saywhat );            //:[056]://

                })                                   //:[045]://
                ;;                                   //:[045]://
            });;
        };;                                          //:[055]://
        return( o_promise );                         //:[055]://           
    };;                                              //:[044]://                           

    const   F_DABITCH_MAKETAB_TAB_HEX = function     //:[049]://
    PRIVATE_F_DABITCH_MAKETAB_TAB_HEX( ){            //:[049]://
                                                     //:[049]://
        var o_promise =(                             //:[049]://
        F_DABITCH_RUN_SQL(                           //:[049]://
                                                     //:[049]://
              d_cts_tab_hex                          //:[049]://
        ,   "[d_cts_tab_hex]"                        //:[049]://
                                                     //:[049]://
        ));; return( o_promise );                    //:[049]://
    };;                                              //:[049]://

    const   F_DABITCH_DROPTAB_TAB_HEX = function     //:[042]://
    PRIVATE_F_DABITCH_DROPTAB_TAB_HEX(               //:[042]://
                                                     //:[042]://
        i_pas                                        //:[044]://
    ){                                               //:[042]://
        var o_promise = new Promise( function        //:[044]://
        EXECUTO_F_DABITCH_DROPTAB_TAB_HEX(           //:[044]://
                                                     //:[044]://
            o_k_yes //: resolve func , NOT_AN_ERROR  //:[044]://
        ,   wontsay //: reject  func , NOT_AN_ERROR  //:[044]://
        ){                                           //:[044]://
            if( "PLEASE_BITCH" === i_pas ){          //:[044]://
                                                     //:[044]://
                F_DABITCH_RUN_SQL(                   //:[044]://
                                                     //:[045]://
                      d_dts_tab_hex                  //:[045]://
                ,   "[d_dts_tab_hex]"                //:[045]://
                                                     //:[045]://
                ).then(                              //:[044]://
                    (i_saywhat)=>{                   //:[044]://
                        o_k_yes( i_saywhat );        //:[044]://
                    }                                //:[044]://
                    ,                                //:[044]://
                    F_NICEGUY                        //:[044]://
                );;                                  //:[044]://
            }else{                                   //:[044]://
                    o_k_yes( "[Invalid_Password]" ); //:[044]://
            };;                                      //:[044]://
        });;return( o_promise );                     //:[044]://
    };;                                              //:[042]://

    const   F_DABITCH_C_TAB_HEX = function           //:[046]://
    PRIVATE_F_DABITCH_C_TAB_HEX(                     //:[046]://
                                                     //:[046]://
        i_nam           /** [ATF]:SEE_VIDEO[051] **/ //:[051]://
    ,   i_hex           /** [ATF]:SEE_VIDEO[051] **/ //:[051]://
    ){                                               //:[046]://
        var sql ;                                    //:[048]://
        sql = F_DCS( d_dabitch_c_tab_hex );          //:[048]://
        sql = F_TED( sql , "[i_nam]" , i_nam );      //:[048]://
        sql = F_TED( sql , "[i_hex]" , i_hex );      //:[048]://
        var o_promise =(                             //:[051]://
            F_DABITCH_RUN_SQL(                       //:[048]://
                                                     //:[048]://
            sql , "[sql:create]"                     //:[048]://
        ));;                                         //:[048]://
        return( o_promise );                         //:[051]://
    };;                                              //:[046]://
    const   F_DABITCH_R_TAB_HEX = function           //:[046]://
    PRIVATE_F_DABITCH_R_TAB_HEX(                     //:[046]://
                                                     //:[046]://
        i_nam                                        //:[046]://
    ){                                               //:[046]://

        var sql ;  /** #_KISS_BEATS_DRY_# **/        //:[052]://
        sql = F_DCS( d_dabitch_r_tab_hex );          //:[052]://
        sql = F_TED( sql , "[i_nam]" , i_nam );      //:[052]://
        var o_promise =(                             //:[052]://
            F_DABITCH_RUN_SQL(                       //:[052]://
                                                     //:[052]://
            sql , "[sql:read]"                       //:[052]://
        ));;                                         //:[052]://
        return( o_promise );                         //:[052]://

    };;                                              //:[046]://
    const   F_DABITCH_U_TAB_HEX = function           //:[046]://
    PRIVATE_F_DABITCH_U_TAB_HEX(                     //:[046]://
                                                     //:[046]://
        i_nam                                        //:[046]://
    ,   i_hex                                        //:[046]://
    ){                                               //:[046]://

        var sql ;                                    //:[053]://
        sql = F_DCS( d_dabitch_u_tab_hex );          //:[053]://
        sql = F_TED( sql , "[i_nam]" , i_nam );      //:[053]://
        sql = F_TED( sql , "[i_hex]" , i_hex );      //:[053]://
        var o_promise =(                             //:[053]://
            F_DABITCH_RUN_SQL(                       //:[053]://
                                                     //:[053]://
            sql , "[sql:update]"                     //:[053]://
        ));;                                         //:[053]://
        return( o_promise );                         //:[053]://

    };;                                              //:[046]://
    const   F_DABITCH_D_TAB_HEX = function           //:[046]://
    PRIVATE_F_DABITCH_D_TAB_HEX(                     //:[046]://
                                                     //:[046]://
        i_nam                                        //:[046]://
    ){                                               //:[046]://
   
        var sql ;                                    //:[054]://
        sql = F_DCS( d_dabitch_d_tab_hex );          //:[054]://
        sql = F_TED( sql , "[i_nam]" , i_nam );      //:[054]://
        var o_promise =(                             //:[054]://
            F_DABITCH_RUN_SQL(                       //:[054]://
                                                     //:[054]://
            sql , "[sql:delete]"                     //:[054]://
        ));;                                         //:[054]://
        return( o_promise );                         //:[054]://

    };;                                              //:[046]://

//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [???][---]
//|                                               [ @$$$$$@ ]|// // [???][---]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __DABITCH__|// // [???][---]
//|                                               [ @$$$$$@ ]|// // [???][---]
//|02|02|02|02|02|02|02|02|02|SUBS|02|02|02|02|02|02|02|02|02|// // [???][---]
//|24|24|24|24|24|24|24|24|24|SUBS|24|24|24|24|24|24|24|24|24|// // [---][360] 
//|[ @$$$$$@ ]                                               |// // [---][360] 
//|__HOWORLD__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [---][360] 
//|[ @$$$$$@ ]                                               |// // [---][360] 
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [---][360] 

    //: HOWORLD FUNCTIONS GO HERE :::::::::::::::::::::::://     // [---][360]

//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [---][360] 
//|                                               [ @$$$$$@ ]|// // [---][360] 
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __HOWORLD__|// // [---][360] 
//|                                               [ @$$$$$@ ]|// // [---][360] 
//|24|24|24|24|24|24|24|24|24|SUBS|24|24|24|24|24|24|24|24|24|// // [---][360] 
//|27|27|27|27|27|27|27|27|27|SUBS|27|27|27|27|27|27|27|27|27|// // [421]
//|[ @$$$$$@ ]                                               |// // [421]
//|__MIRMAID__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [421]
//|[ @$$$$$@ ]                                               |// // [421]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [421]

    //:#_AUTO_TILE_ROTATING_#:[435]:=========================:// // [435]
                                                                 // [---]
        //:#_BINTILE_AUTO_ROTATE_PICK_#:[455]:===============:// // [455]
                                                                 // [455]
            const   F_MIRMAID_AM6_U32_ROT_PIK =("[WRONG!]");     // [455]
                                                                 // [455]
            const   F_MIRMAID_AM6_U32_ROT_DIR = function         // [455]
            PRIVATE_F_MIRMAID_AM6_U32_ROT_DIR(                   // [455]
                                                                 // [455]
                i_u32                                            // [455]
            ,   i_dir                                            // [455]
                                                                 // [455]
            ){  //:BOD_BEG[ AM6_U32_ROT_DIR ]:::::::::::::::::// // [455]
                                                                 // [--------][455]
                if( d_eci >=1 ){                                 // [--------][455]
                    if((0+1)=== i_dir ){ /**OK**/ }else          // [--------][455]
                    if((0-1)=== i_dir ){ /**OK**/ }else{         // [--------][455]
                                                                 // [--------][455]
                        ERR("[BAD_I_DIR_2022]");                 // [--------][455]
                    };;                                          // [--------][455]
                };;                                              // [--------][455]
                                                                 // [--------][455]
                //:#_INITIAL_ROTOS_#:[462]:------------------:// // [462][--------]
                                                                 // [462][--------]
                    let dir_mg0 =( i_dir );                      // [462][--------]
                    let dir_bg1 =( i_dir );                      // [462][--------]
                    let dir_fg2 =( i_dir );                      // [462][--------]
                                                                 // [462][--------]
                //:------------------:#_INITIAL_ROTOS_#:[462]:// // [462][--------]
                //:#_PASTED_FROM_435_#:[455]:================:// // [--------][455]
                //////////////////////////////////////////////// // [455][--------]
                //:#_ETF_2022_11_11_#:[456]:=============://     // [456][--------]
                let o_u =( i_u32 /**CARRY_OVER**/ );             // [456][MOV][437]
                //:@o_u@ : Output Uint32 ::::::::://             // [456][MOV][437]
                                                                 // [456][MOV][437]
                //:#_RO4_EXTRACTORS_#:[437]:-------------://     // [456][MOV][437]
                                                                 // [456][MOV][437]
                    const ___________bingeom_________ro4=0       // [456][MOV][437]
                    //:            c_bingeom_____bit____ ://     // [456][MOV][437]
                    ,   mg0_msk =( c_bingeom_mg0_bit_ro4 )       // [456][MOV][437]
                    ,   bg1_msk =( c_bingeom_bg1_bit_ro4 )       // [456][MOV][437]
                    ,   fg2_msk =( c_bingeom_fg2_bit_ro4 )       // [456][MOV][437]
                    //:            c_bingeom_____shi____ ://     // [456][MOV][437]
                    ,   mg0_shi =( c_bingeom_mg0_shi_ro4 )       // [456][MOV][437]
                    ,   bg1_shi =( c_bingeom_bg1_shi_ro4 )       // [456][MOV][437]
                    ,   fg2_shi =( c_bingeom_fg2_shi_ro4 )       // [456][MOV][437]
                    //:            c_bingeom_____DEL____ ://     // [456][MOV][437]
                    ,   mg0_del =(~c_bingeom_mg0_bit_ro4 )       // [456][MOV][437]
                    ,   bg1_del =(~c_bingeom_bg1_bit_ro4 )       // [456][MOV][437]
                    ,   fg2_del =(~c_bingeom_fg2_bit_ro4 )       // [456][MOV][437]
                    //:__________________________________://     // [456][MOV][437]
                    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [456][MOV][437]
                //:-------------:#_RO4_EXTRACTORS_#:[437]://     // [456][MOV][437]
                                                                 // [456][MOV][437]
                let mg0_ro4 ; //: ro4_sublayer - ROTATION://     // [456][MOV][437]
                let bg1_ro4 ; //: ro4_sublayer - ROTATION://     // [456][MOV][437]
                let fg2_ro4 ; //: ro4_sublayer - ROTATION://     // [456][MOV][437]
                                                                 // [456][MOV][437]
                //:#_RO4_GET_#:[437]:--------------------://     // [456][MOV][437]
                                                                 // [456][MOV][437]
                    /** Extract[ ro4 ]rotation codes **/         // [456][MOV][437]
                                                                 // [456][MOV][437]
                    mg0_ro4 =(o_u & mg0_msk)>>>( mg0_shi );;     // [456][MOV][437]
                    bg1_ro4 =(o_u & bg1_msk)>>>( bg1_shi );;     // [456][MOV][437]
                    fg2_ro4 =(o_u & fg2_msk)>>>( fg2_shi );;     // [456][MOV][437]
                                                                 // [456][MOV][437]
                //:--------------------:#_RO4_GET_#:[437]://     // [456][MOV][437]
                //:#_NOME_GNOMBE_GNOME_#:[462]:==========://     // [462][--------]

                //:  MORE_CODE_IS_HERE_NOW_IN_VIDEO_462  ://     // [462][461][---]
                //:#_MIR_GET_#:[462]:--------------------://     // [462][--------]
                {                                                // [462][--------]
                    const mg0_dir ="[USE:dir_mg0]";;;;;;;;;;     // [462][--------]
                    const bg1_dir ="[USE:dir_bg1]";;;;;;;;;;     // [462][--------]
                    const fg2_dir ="[USE:dir_fg2]";;;;;;;;;;     // [462][--------]
                                                                 // [462][--------]
                    const mg_m = c_bingeom_mg0_bit_mir  ;;;;     // [462][--------]
                    const bg_m = c_bingeom_bg1_bit_mir  ;;;;     // [462][--------]
                    const fg_m = c_bingeom_fg2_bit_mir  ;;;;     // [462][--------]
                                                                 // [462][--------]
                    const mg_s = c_bingeom_mg0_shi_mir  ;;;;     // [462][--------]
                    const bg_s = c_bingeom_bg1_shi_mir  ;;;;     // [462][--------]
                    const fg_s = c_bingeom_fg2_shi_mir  ;;;;     // [462][--------]
                                                                 // [462][--------]
                    let mir_mg0=( o_u & mg_m )>>>( mg_s );;;     // [462][--------]
                    let mir_bg1=( o_u & bg_m )>>>( bg_s );;;     // [462][--------]
                    let mir_fg2=( o_u & fg_m )>>>( fg_s );;;     // [462][--------]
                                                                 // [462][--------]
                    //:#_INVERT_ROT_MG0_#:---------------://     // [462][--------]
                    if( 1 ===((mir_mg0 >>> 0)&(0x1))){           // [462][--------]
                                                                 // [462][--------]
                        dir_mg0 =( 0 - dir_mg0 );                // [462][--------]
                    };;                                          // [462][--------]
                    if( 1 ===((mir_mg0 >>> 1)&(0x1))){           // [462][--------]
                                                                 // [462][--------]
                        dir_mg0 =( 0 - dir_mg0 );                // [462][--------]
                    };;                                          // [462][--------]
                    //:---------------:#_INVERT_ROT_MG0_#://     // [462][--------]
                    //:#_INVERT_ROT_BG1_#:---------------://     // [462][--------]
                    if( 1 ===((mir_bg1 >>> 0)&(0x1))){           // [462][--------]
                                                                 // [462][--------]
                        dir_bg1 =( 0 - dir_bg1 );                // [462][--------]
                    };;                                          // [462][--------]
                    if( 1 ===((mir_bg1 >>> 1)&(0x1))){           // [462][--------]
                                                                 // [462][--------]
                        dir_bg1 =( 0 - dir_bg1 );                // [462][--------]
                    };;                                          // [462][--------]
                    //:---------------:#_INVERT_ROT_BG1_#://     // [462][--------]
                    //:#_INVERT_ROT_FG2_#:---------------://     // [462][--------]
                    if( 1 ===((mir_fg2 >>> 0)&(0x1))){           // [462][--------]
                                                                 // [462][--------]
                        dir_fg2 =( 0 - dir_fg2 );                // [462][--------]
                    };;                                          // [462][--------]
                    if( 1 ===((mir_fg2 >>> 1)&(0x1))){           // [462][--------]
                                                                 // [462][--------]
                        dir_fg2 =( 0 - dir_fg2 );                // [462][--------]
                    };;                                          // [462][--------]
                    //:---------------:#_INVERT_ROT_FG2_#://     // [462][--------]
                }                                                // [462][--------]
                //:--------------------:#_MIR_GET_#:[462]://     // [462][--------]
                //:==========:#_NOME_GNOMBE_GNOME_#:[462]://     // [462][--------]
                //:RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR://     // [---][456][---]
                //:#_RO4_ROT_ANY_#:[462]:----------------://     // [462][------------------]
                //:                  TAG[ _RO4_ROTCLOK_ ]://     // [462][------------------]
                //:                  TAG[ _RO4_ROTANTI_ ]://     // [462][------------------]
                //:            TAG[ _RO4_ADD_CLOCKWISE_ ]://     // [462][------------------]
                //:            TAG[ _RO4_SUB_ANTICLOCK_ ]://     // [462][------------------]
                //:- - - - - - - - - -- - - - - - - - - -://     // [462][------------------]
                                                                 // [462][------------------]
                    mg0_ro4 +=( dir_mg0 );                       // [462][------------------]
                    bg1_ro4 +=( dir_bg1 );                       // [462][------------------]
                    fg2_ro4 +=( dir_fg2 );                       // [462][------------------]
                                                                 // [462][------------------]
                    if( mg0_ro4 >(4-1) ){ mg0_ro4=( 0 ); };      // [462][MOV][456][MOV][437]
                    if( bg1_ro4 >(4-1) ){ bg1_ro4=( 0 ); };      // [462][MOV][456][MOV][437]
                    if( fg2_ro4 >(4-1) ){ fg2_ro4=( 0 ); };      // [462][MOV][456][MOV][437]
                                                                 // [462][------------------]
                    if( mg0_ro4 <( 0 ) ){ mg0_ro4=(4-1); };      // [462][MOV][456][MAE][437]
                    if( bg1_ro4 <( 0 ) ){ bg1_ro4=(4-1); };      // [462][MOV][456][MAE][437]
                    if( fg2_ro4 <( 0 ) ){ fg2_ro4=(4-1); };      // [462][MOV][456][MAE][437]
                                                                 // [462][------------------]
                //:----------------:#_RO4_ROT_ANY_#:[462]://     // [462][------------------]
                //:RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR://     // [---][456][---]
                //:#_ERASE_OLD_RO4_#:[437]:--------------://     // [456][MOV][437]
                                                                 // [456][MOV][437]
                    /** Erase[ ro4 ]rotation codes **/           // [456][MOV][437]
                                                                 // [456][MOV][437]
                    o_u =( o_u   & mg0_del )>>>0;                // [456][MOV][437]
                    o_u =( o_u   & bg1_del )>>>0;                // [456][MOV][437]
                    o_u =( o_u   & fg2_del )>>>0;                // [456][MOV][437]
                                                                 // [456][MOV][437]
                //:--------------:#_ERASE_OLD_RO4_#:[437]://     // [456][MOV][437]
                //:#_INSERT_NEW_RO4_#:[437]:-------------://     // [456][MOV][437]
                                                                 // [456][MOV][437]
                    o_u =(o_u | (mg0_ro4 << mg0_shi));           // [456][MOV][437]
                    o_u =(o_u | (bg1_ro4 << bg1_shi));           // [456][MOV][437]
                    o_u =(o_u | (fg2_ro4 << fg2_shi));           // [456][MOV][437]
                                                                 // [456][MOV][437]
                //:-------------:#_INSERT_NEW_RO4_#:[437]://     // [456][MOV][437]
                //:=============:#_ETF_2022_11_11_#:[456]://     // [456][--------]
                                                                 // [---]
                //:================:#_PASTED_FROM_435_#:[455]:// // [455]
                //////////////////////////////////////////////// // [455]
                                                                 // [---]
                return( o_u );  //::::::::::::::::::::::::::::// // [456]
                                                                 // [---]
            };; //:BOD_END[ AM6_U32_ROT_DIR ]:::::::::::::::::// // [455]
                                                                 // [455]
        //:===============:#_BINTILE_AUTO_ROTATE_PICK_#:[455]:// // [455]
        //:#_BINTILE_AUTO_ROTATE_DOIT_#:[435]:===============:// // [---]
                                                                 // [---]
            const   F_MIRMAID_AM6_U32_ROT_CCW = function         // [455]
            PRIVATE_F_MIRMAID_AM6_U32_ROT_CCW(                   // [455]
                                                                 // [455]
                i_u32                                            // [455]
            ){                                                   // [455]
                let o_u32 =(F_MIRMAID_AM6_U32_ROT_DIR(           // [455]
                    i_u32                                        // [455]
                ,   (0-1) //:#_NEG_ANTI_CLOCK_#://               // [455]
                ));;                                             // [455]
                return( o_u32 );                                 // [455]
            };;                                                  // [455]
                                                                 // [---]
            const   F_MIRMAID_AM6_U32_ROT_C_W = function         // [435]
            PRIVATE_F_MIRMAID_AM6_U32_ROT_C_W(                   // [435]
                                                                 // [435]
                i_u32                                            // [435]
                                                                 // [---]
            ){  //:BOD_BEG[ AM6_U32_ROT_C_W ]:::::::::::::::::// // [437][435]
                                                                 // [---]
                //:#_ETF_2022_11_11_#:[456]:-------------://     // [456]
                                                                 // [456]
                    let   o_u =(F_MIRMAID_AM6_U32_ROT_DIR(       // [456]
                        i_u32                                    // [456]
                    ,   (0+1) //:#_POS_WISE_CLOCK_#://           // [456]
                    ));;                                         // [456]
                //:-------------:#_ETF_2022_11_11_#:[456]://     // [456]
                //:#_RETURN_CLOCKWISE_ROTATED_RO4_#:[437]://     // [---]
                                                                 // [437]
                    return( o_u );                               // [437]
                                                                 // [437]
                //:#_RETURN_CLOCKWISE_ROTATED_RO4_#:[437]://     // [437]
                                                                 // [437]
            };; //:BOD_BEG[ AM6_U32_ROT_C_W ]:::::::::::::::::// // [437][435]
        //:===============:#_BINTILE_AUTO_ROTATE_DOIT_#:[435]:// // [435]
        //:#_BINTILE_AUTO_ROTATE_NOOP_#:[435]:===============:// // [435]
                                                                 // [435]
            const   F_MIRMAID_AM6_U32_ROT_NOT = function         // [435]
            PRIVATE_F_MIRMAID_AM6_U32_ROT_NOT(                   // [435]
                                                                 // [435]
                i_u32                                            // [435]
            ){                                                   // [435]
                return( i_u32 ); //:JUST_A_CARRY_OVER://         // [435]
            };;                                                  // [435]
        //:===============:#_BINTILE_AUTO_ROTATE_NOOP_#:[435]:// // [435]
                                                                 // [435]
    //:=========================:#_AUTO_TILE_ROTATING_#:[435]:// // [435]
    //:#_AUTO_TILE_MIRRORING_#:[428]:========================:// // [---]
                                                                 // [428]
        //:#_BINTILE_AUTO_MIRROR_DOIT_#:[428]:===============:// // [428]
                                                                 // [428]
            const   F_MIRMAID_AM6_U32_MBX_MBY = function         // [428]
            PRIVATE_F_MIRMAID_AM6_U32_MBX_MBY(                   // [428]
                                                                 // [428]
                i_u32 //: Input 32-bit binary tile value ://     // [428]
            ,   i_mbx //: Mirror_Bit - X ::::::::::::::::://     // [428]
            ,   i_mby //: Mirror_Bit - Y ::::::::::::::::://     // [428]
            ){                                                   // [428]
                                                                 // [---]
                //:#_NONEED_2022_#:[432]:----------------://     // [432]
                if( d_bug >= 1 ){                                // [432]
                    //: #_NOT_BITS_YOU_ARE_LOOKING_FOR_# ://     // [432]
                    let tmx =( c_am4_tog_m_x );                  // [432]
                    let tmy =( c_am4_tog_m_y );                  // [432]
                    ASS( c_am4_0lx !== tmx , "[0LX_2022]" );     // [432]
                    ASS( c_am4_1ly !== tmy , "[1LY_2022]" );     // [432]
                    ASS( c_am4_2mx === tmx , "[2MX_2022]" );     // [432]
                    ASS( c_am4_3my === tmy , "[3MY_2022]" );     // [432]
                };;                                              // [432]
                //:----------------:#_NONEED_2022_#:[432]://     // [432]
                //:#_MIRROR_VARS_NOT_LATCH_#:[432]:------://     // [432]
                                                                 // [432]
                    let o_u32 =( i_u32 );  /** CARRYOVER **/     // [432]
                                                                 // [432]
                    //: @msk_m_x@ : MASK - Mirror X Bit :://     // [432]
                    //: @msk_m_y@ : MASK - Mirror Y Bit :://     // [432]
                    //: @shi_m_x@ : SHIF - Mirror X Bit :://     // [432]
                    //: @shi_m_y@ : SHIF - Mirror Y Bit :://     // [432]
                                                                 // [432]
                    //-  msk_m_x = c_bingten_am6_msk_m_x -//     // [432]
                    //-  msk_m_y = c_bingten_am6_msk_m_y -//     // [432]
                                                                 // [432]
                    //-  shi_m_x = c_bingten_am6_shi_m_x -//     // [432]
                    //-  shi_m_y = c_bingten_am6_shi_m_y -//     // [432]
                                                                 // [432]
                    const             __bingeom_____bit_m__=0    // [432]
                    ,   mg0_msk_m_x = c_bingeom_mg0_bit_m_x      // [432]
                    ,   bg1_msk_m_x = c_bingeom_bg1_bit_m_x      // [432]
                    ,   fg2_msk_m_x = c_bingeom_fg2_bit_m_x      // [432]
                    ////                                         // [432]
                    ,   mg0_msk_m_y = c_bingeom_mg0_bit_m_y      // [432]
                    ,   bg1_msk_m_y = c_bingeom_bg1_bit_m_y      // [432]
                    ,   fg2_msk_m_y = c_bingeom_fg2_bit_m_y      // [432]
                    ////                                         // [432]
                    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [432]
                //:------:#_MIRROR_VARS_NOT_LATCH_#:[432]://     // [432]
                                                                 // [432]
                //:SEE[ _ITS_FUCKING_RAW_NG_ ]:::::::::::://     // [432]
                                                                 // [432]
                //:#_FLIP_MIRROR_BITS_X_#:[432]:---------://     // [432]
                                                                 // [432]
                    if( 1 === i_mbx ){                           // [432]
                        o_u32 =( o_u32 ^ mg0_msk_m_x )>>>0;      // [432]
                        o_u32 =( o_u32 ^ bg1_msk_m_x )>>>0;      // [432]
                        o_u32 =( o_u32 ^ fg2_msk_m_x )>>>0;      // [432]
                    }else                                        // [432]
                    if( 0 === i_mbx ){                           // [432]
                        /** DO_NOTHING_BITCH **/                 // [432]
                    }else{                                       // [432]
                        ERR("[I_MBX_2022]");                     // [432]
                    };;                                          // [432]
                //:---------:#_FLIP_MIRROR_BITS_X_#:[432]://     // [432]
                //:#_FLIP_MIRROR_BITS_Y_#:[432]:---------://     // [432]
                                                                 // [432]
                    if( 1 === i_mby ){                           // [432]
                        o_u32 =( o_u32 ^ mg0_msk_m_y )>>>0;      // [432]
                        o_u32 =( o_u32 ^ bg1_msk_m_y )>>>0;      // [432]
                        o_u32 =( o_u32 ^ fg2_msk_m_y )>>>0;      // [432]
                    }else                                        // [432]
                    if( 0 === i_mby ){                           // [432]
                        /** DO_NOTHING_BITCH **/                 // [432]
                    }else{                                       // [432]
                        ERR("[I_MBY_2022]");                     // [432]
                    };;                                          // [432]
                //:---------:#_FLIP_MIRROR_BITS_Y_#:[432]://     // [432]
                                                                 // [432]
                return( o_u32 );                                 // [432]
                                                                 // [---]
            };;                                                  // [428]
        //:===============:#_BINTILE_AUTO_MIRROR_DOIT_#:[428]:// // [428]
        //:#_BINTILE_AUTO_MIRROR_NOOP_#:[428]:===============:// // [428]
                                                                 // [428]
            const   F_MIRMAID_AM6_U32_IBX_IBY = function         // [428]
            PRIVATE_F_MIRMAID_AM6_U32_IBX_IBY(                   // [428]
                                                                 // [428]
                i_u32 //: Input 32-bit binary tile value ://     // [428]
            ,   i_ibx //: Ignored_Bit - X :::::::::::::::://     // [428]
            ,   i_iby //: Ignored_Bit - Y :::::::::::::::://     // [428]
            ){                                                   // [428]
                var o_u32 =( i_u32 );                            // [428]
                return(      o_u32 );                            // [428]
            };;                                                  // [428]
        //:===============:#_BINTILE_AUTO_MIRROR_NOOP_#:[428]:// // [428]
                                                                 // [428]
    //:========================:#_AUTO_TILE_MIRRORING_#:[428]:// // [---]
    //:#_ISOLATED_MIRRORING_FUNCTIONS_#:[448]:===============:// // [448]
    //:#_ISOLATED_ROTATING_FUNCTIONS_#:[448]:================:// // [448]
                                                                 // [448]
        //////////////////////////////////////////////////////// // [448]
        const   F_MIRMAID_EDI_PUT_U32_SYMBILA_ISO=function       // [448]
        PRIVATE_F_MIRMAID_EDI_PUT_U32_SYMBILA_ISO(               // [448]
                                                                 // [448]
                i_te7 , i_la3   //:#_SIZE_AND_LAYER_#://         // [448]
        ,       i_gtx , i_gty   //:#_GLOBAL_TILE_XY_#://         // [448]
        ,       i_u32 , i_xyd   //:#_BINTILE_MIRROR_#://         // [448]
                                                                 // [448]
        ){  //:BOD_BEG[ SYMBILA_ISO ]:::::::::::::::::::[448]:// // [448]
                                                                 // [---]
            //:#_GET_LOCAL_COORD_BILA_#:[450]:-----------://     // [450]
                                                                 // [450]
                let obj_gtc =( d_mirmaid_gtc ); //:BILA_C://     // [451][BUG][450]
                let obj_ltc =( d_mirmaid_ltc ); //:BILA_C://     // [451][BUG][450]
                                                                 // [450]
                    obj_gtc.m_te7 =(   i_te7 );                  // [450]
                    obj_gtc.m_gtx =(   i_gtx );                  // [450]
                    obj_gtc.m_gty =(   i_gty );                  // [450]
                                                                 // [450]
                F_TILEBOI_INN_OBJ_GTC_OUT_OBJ_LTC(               // [450]
                              obj_gtc  ,  obj_ltc );;            // [450]
                                                                 // [450]
            //:-----------:#_GET_LOCAL_COORD_BILA_#:[450]://     // [---]
            //:#_BIL_COMMON_#:[458]:---------------------://     // [458]
                                                                 // [458]
                let lat  =( d_te7_lat[ i_te7 ]   );              // [458]
                let m_i  =(       lat-1          );              // [458]
                let xyd_x=((i_xyd >>> 2 )&( 0x1 ));              // [458]
                let xyd_y=((i_xyd >>> 1 )&( 0x1 ));              // [458]
                let xyd_d=((i_xyd >>> 0 )&( 0x1 ));              // [458]
                                                                 // [458]
                d_arr_ltx[ 0 ]=( obj_ltc.m_ltx );                // [458]
                d_arr_lty[ 0 ]=( obj_ltc.m_lty );                // [458]
                d_arr_u32[ 0 ]=( i_u32 );                        // [458]
                                                                 // [458]
                d_len_ltc=(1); //:TileBufferLen://               // [458]
                let   lin=(0); //:Loading_Index://               // [458]
                                                                 // [458]
                //:#_MIRROR_INTERNALS_#:[458]:-----------://     // [458]
                let edi=( d_edigame_edi );                       // [458]
                let     MIR =("[nil][am6_mir:2022]");            // [458]
                let am6_mir =( edi.edi_mod_mir_am6 );            // [458]
                                                                 // [458]
                if( am6_mir >= 1 ){                              // [458]
                        MIR=( F_MIRMAID_AM6_U32_MBX_MBY );       // [458]
                }else{                                           // [458]
                        MIR=( F_MIRMAID_AM6_U32_IBX_IBY );       // [458]
                };;                                              // [458]
                //:-----------:#_MIRROR_INTERNALS_#:[458]://     // [458]
                                                                 // [458]
            //:---------------------:#_BIL_COMMON_#:[458]://     // [458]
            //:#_NON_DENSE_KITTY_#:[458]:----------------://     // [458]
            if( 1 === xyd_x                                      // [458]
            &&  1 === xyd_y                                      // [458]
            ){                                                   // [458]
                d_len_ltc++;lin++;                               // [458]
                                                                 // [458]
                d_arr_ltx[lin]=( m_i - d_arr_ltx[0]     );       // [458]
                d_arr_lty[lin]=( m_i - d_arr_lty[0]     );       // [458]
                d_arr_u32[lin]=( MIR(  d_arr_u32[0],1,1));       // [458]
            };;                                                  // [458]
            //:----------------:#_NON_DENSE_KITTY_#:[458]://     // [458]
            //:#_NON_DENSE_AXISX_#:[458]:----------------://     // [458]
            if( 1 === xyd_x ){                                   // [458]
                                                                 // [458]
                d_len_ltc++;lin++;                               // [458]
                                                                 // [458]
                d_arr_ltx[lin]=( m_i - d_arr_ltx[0]     );       // [458]
                d_arr_lty[lin]=(       d_arr_lty[0]     );       // [458]
                d_arr_u32[lin]=( MIR(  d_arr_u32[0],1,0));       // [458]
            };;                                                  // [458]
            //:----------------:#_NON_DENSE_AXISX_#:[458]://     // [458]
            //:#_NON_DENSE_AXISY_#:[458]:----------------://     // [458]
            if( 1 === xyd_y ){                                   // [458]
                                                                 // [458]
                d_len_ltc++;lin++;                               // [458]
                                                                 // [458]
                d_arr_ltx[lin]=(       d_arr_ltx[0]     );       // [458]
                d_arr_lty[lin]=( m_i - d_arr_lty[0]     );       // [458]
                d_arr_u32[lin]=( MIR(  d_arr_u32[0],0,1));       // [458]
            };;                                                  // [458]
            //:----------------:#_NON_DENSE_AXISY_#:[458]://     // [---]
            //:#_DENSE_MODE_VECTORS_#:[459]:-------------://     // [459]
            if( 1 === xyd_d ){                                   // [459]
                                                                 // [459]
                let lin_m_i;  //:@lin_m_i@:LIN.Max__Index://     // [459]
                let lin_ltx;  //:@lin_ltx@:LIN.LocalTileX://     // [459]
                let lin_lty;  //:@lin_lty@:LIN.LocalTileY://     // [459]
                let lin_u32;  //:@lin_u32@:LIN.U32BinTile://     // [459]
                let lin_jot;  //:@lin_jot@:LIN.MID_JOTLOW://     // [459]
                let lin_zen;  //:@lin_zen@:LIN.MID_ZENITH://     // [459]
                                                                 // [459]
                lin_jot=(F_M_F( lat / 2 )-1);                    // [459]
                lin_zen=(F_M_F( lat / 2 )+0);                    // [459]
                                                                 // [459]
                lin_m_i=(lin);                                   // [459]
                let  _l_=( 0 ); //:LIGHT_PLOT_POINTS://          // [459]
                for( _l_ = 0 ; _l_ <= lin_m_i ; _l_ ++ ){        // [459]
                                                                 // [459]
                    lin_ltx=(d_arr_ltx[_l_]);                    // [459]
                    lin_lty=(d_arr_lty[_l_]);                    // [459]
                    lin_u32=(d_arr_u32[_l_]);                    // [459]
                                                                 // [459]
                    //:#_XDM_VECTORS_#:[459]:------------://     // [459]
                    if( lin_ltx < (lin_jot-2) ){                 // [459]
                                                                 // [459]
                        d_len_ltc++;;;lin++;;;;;;;;;;;;;;        // [459]
                            d_arr_ltx[lin]=( lin_ltx+2 );        // [459]
                            d_arr_lty[lin]=( lin_lty+0 );        // [459]
                            d_arr_u32[lin]=( lin_u32   );        // [459]
                    }else                                        // [459]
                    if( lin_ltx > (lin_zen+2) ){                 // [459]
                                                                 // [459]
                        d_len_ltc++;;;lin++;;;;;;;;;;;;;;        // [459]
                            d_arr_ltx[lin]=( lin_ltx-2 );        // [459]
                            d_arr_lty[lin]=( lin_lty-0 );        // [459]
                            d_arr_u32[lin]=( lin_u32   );        // [459]
                    }else{                                       // [459]
                        /** On Midline, Skip **/                 // [459]
                    };;                                          // [459]
                    //:------------:#_XDM_VECTORS_#:[459]://     // [459]
                    //:#_YDM_VECTORS_#:[459]:------------://     // [459]
                    if( lin_lty < (lin_jot-2) ){                 // [459]
                                                                 // [459]
                        d_len_ltc++;;;lin++;;;;;;;;;;;;;;        // [459]
                            d_arr_ltx[lin]=( lin_ltx+0 );        // [459]
                            d_arr_lty[lin]=( lin_lty+2 );        // [459]
                            d_arr_u32[lin]=( lin_u32   );        // [459]
                    }else                                        // [459]
                    if( lin_lty > (lin_zen+2) ){                 // [459]
                                                                 // [459]
                        d_len_ltc++;;;lin++;;;;;;;;;;;;;;        // [459]
                            d_arr_ltx[lin]=( lin_ltx-0 );        // [459]
                            d_arr_lty[lin]=( lin_lty-2 );        // [459]
                            d_arr_u32[lin]=( lin_u32   );        // [459]
                    }else{                                       // [459]
                        /** On Midline, Skip **/                 // [459]
                    };;                                          // [459]
                    //:------------:#_YDM_VECTORS_#:[459]://     // [459]
                };;                                              // [459]
            };;                                                  // [459]
            //:-------------:#_DENSE_MODE_VECTORS_#:[459]://     // [459]
            //:#_UNLOAD_BILMIR_BUFF_#:[458]:-------------://     // [---]
                                                                 // [458]
                let gtx ; //: @gtx@ : Global_Tile_X ://          // [458]
                let gty ; //: @gty@ : Global_Tile_Y ://          // [458]
                let b32 ; //: @b32@ : Binary_32_Bits://          // [458]
                                                                 // [458]
                m_i=(lin);                                       // [458]
                for( lin = 0 ; lin <= m_i ; lin ++ ){            // [458]
                                                                 // [458]
                    obj_ltc.m_ltx=( d_arr_ltx[ lin ] );          // [458]
                    obj_ltc.m_lty=( d_arr_lty[ lin ] );          // [458]
                              b32=( d_arr_u32[ lin ] );          // [458]
                                                                 // [458]
                    F_TILEBOI_INN_OBJ_LTC_OUT_OBJ_GTC(           // [458]
                                  obj_ltc  ,  obj_gtc );;        // [458]
                                                                 // [458]
                    gtx=( obj_gtc.m_gtx );                       // [458]
                    gty=( obj_gtc.m_gty );                       // [458]
                                                                 // [458]
                    F_TILEBOI_EDI_PUT_U32(                       // [458]
                                                                 // [458]
                        i_te7 , i_la3    //: Size&&LAYER ://     // [458]
                    ,     gtx ,   gty    //: GlobalCoord ://     // [458]
                    ,     b32            //: u32_bintile ://     // [458]
                    );;                                          // [458]
                };;                                              // [458]
            //:-------------:#_UNLOAD_BILMIR_BUFF_#:[458]://     // [458]
                                                                 // [---]
        };; //:BOD_END[ SYMBILA_ISO ]:::::::::::::::::::[448]:// // [448]
        //////////////////////////////////////////////////////// // [448]
        const   F_MIRMAID_EDI_PUT_U32_SYMRADI_ISO=function       // [448]
        PRIVATE_F_MIRMAID_EDI_PUT_U32_SYMRADI_ISO(               // [448]
                                                                 // [448]
                i_te7 , i_la3   //:#_SIZE_AND_LAYER_#://         // [448]
        ,       i_gtx , i_gty   //:#_GLOBAL_TILE_XY_#://         // [448]
        ,       i_u32 , i_xyd   //:#_BINTILE_MIRROR_#://         // [448]
                                                                 // [448]
        ){  //:BOD_BEG[ SYMBILA_ISO ]:::::::::::::::::::[448]:// // [448]
                                                                 // [---]
            //:#_GET_LOCAL_COORD_RADI_#:[450]:-----------://     // [450]
                                                                 // [450]
                let obj_gtc =( d_mirmaid_gtc ); //:RADI_C://     // [451][BUG][450]
                let obj_ltc =( d_mirmaid_ltc ); //:RADI_C://     // [451][BUG][450]
                                                                 // [450]
                    obj_gtc.m_te7 =(   i_te7 );                  // [450]
                    obj_gtc.m_gtx =(   i_gtx );                  // [450]
                    obj_gtc.m_gty =(   i_gty );                  // [450]
                                                                 // [450]
                F_TILEBOI_INN_OBJ_GTC_OUT_OBJ_LTC(               // [450]
                              obj_gtc  ,  obj_ltc );;            // [450]
                                                                 // [450]
            //:-----------:#_GET_LOCAL_COORD_RADI_#:[450]://     // [---]
            //:#_RAD_COMMON_#:[454]:---------------------://     // [---][454]
                                                                 // [---][454]
                let ROT_CCW = ( "[nil][rot_ccw:year_2022]");     // [460][456][454]

                //:#_ROTATE_INTERNALS_#:[460]:-----------://     // [460]
                let edi=( d_edigame_edi );                       // [460]
                let mir_am6 =( edi.edi_mod_mir_am6 );            // [460]
                                                                 // [460]
                if( mir_am6 >= 1 ){                              // [460]
                    ROT_CCW=( F_MIRMAID_AM6_U32_ROT_CCW );       // [460]
                }else{                                           // [460]
                    ROT_CCW=( F_MIRMAID_AM6_U32_ROT_NOT );       // [460]
                };;                                              // [460]
                //:-----------:#_ROTATE_INTERNALS_#:[460]://     // [460]

                                                                 // [---][454]
                let lat  =( d_te7_lat[ i_te7 ]   );              // [---][454]
                let m_i  =(       lat-1          );              // [---][454]
                let xyd_d=((i_xyd >>> 0 )&( 0x1 ));              // [---][454]
                                                                 // [---][454]
                d_arr_ltx[ 0 ]=( obj_ltc.m_ltx );                // [---][454]
                d_arr_lty[ 0 ]=( obj_ltc.m_lty );                // [---][454]
                d_arr_u32[ 0 ]=( i_u32 );                        // [---][454]
            //:---------------------:#_RAD_COMMON_#:[454]://     // [---][454]
            //:#_LOAD_TILE_BUFFERS_:#[454]:--------------://     // [---][454]
            if( 1 === xyd_d /**#_FULL_DENSE_RADIAL_#**/ ){       // [457][454]
                                                                 // [---][454]
                d_len_ltc=(4);                                   // [---][454]
                                                                 // [---][454]
                d_arr_ltx[ 1 ]=( m_i - d_arr_lty[ 0 ] );         // [---][454]
                d_arr_lty[ 1 ]=(       d_arr_ltx[ 0 ] );         // [---][454]
                d_arr_u32[ 1 ]=ROT_CCW(d_arr_u32[ 0 ] );         // [456][454]
                                                                 // [---][454]
                d_arr_ltx[ 2 ]=( m_i - d_arr_lty[ 1 ] );         // [---][454]
                d_arr_lty[ 2 ]=(       d_arr_ltx[ 1 ] );         // [---][454]
                d_arr_u32[ 2 ]=ROT_CCW(d_arr_u32[ 1 ] );         // [456][454]
                                                                 // [---][454]
                d_arr_ltx[ 3 ]=( m_i - d_arr_lty[ 2 ] );         // [---][454]
                d_arr_lty[ 3 ]=(       d_arr_ltx[ 2 ] );         // [---][454]
                d_arr_u32[ 3 ]=ROT_CCW(d_arr_u32[ 2 ] );         // [456][454]
                                                                 // [---][454]
            }else                                                // [---][454]
            if( 0 === xyd_d /** #_LIGHT_180_MODE_# **/ ){        // [457][454]
                                                                 // [457][---]
                //:#_ROTATE_TWICE_#:[457]:---------------://     // [457][---]
                                                                 // [457][---]
                    d_len_ltc=(2);                               // [457][---]
                                                                 // [457][---]
                    let tmp_ltx   =( m_i - d_arr_lty[ 0 ] );     // [457][---]
                    let tmp_lty   =(       d_arr_ltx[ 0 ] );     // [457][---]
                    let tmp_u32   =ROT_CCW(d_arr_u32[ 0 ] );     // [457][---]
                                                                 // [457][---]
                    d_arr_ltx[ 1 ]=( m_i -   tmp_lty      );     // [457][---]
                    d_arr_lty[ 1 ]=(         tmp_ltx      );     // [457][---]
                    d_arr_u32[ 1 ]=ROT_CCW(  tmp_u32      );     // [457][---]
                                                                 // [457][---]
                //:---------------:#_ROTATE_TWICE_#:[457]://     // [457][---]
            }else{                                               // [---][454]
                ERR("[WTF:2022_11_10]");                         // [---][454]
            };;                                                  // [---][454]
            //:--------------:#_LOAD_TILE_BUFFERS_:#[454]://     // [---][454]
            //:#_UNLOAD_TILE_BUFFERS_:[454]:-------------://     // [454]
                                                                 // [454]
                    m_i=( d_len_ltc - 1 );   //:@_R_P_V_@://     // [454]
                let l_i ; //: @l_i@ : Local_Index :::::::://     // [454]
                let gtx ; //: @gtx@ : Global_Tile_X :::::://     // [454]
                let gty ; //: @gty@ : GLobal_Tile_Y :::::://     // [454]
                let u32_bintile ; //: BINARY_TILE_VALUE :://     // [454]
                for(l_i = 0 ; l_i <=( m_i ) ; l_i ++ ){          // [454]
                                                                 // [454]
                    obj_ltc.m_ltx=( d_arr_ltx[ l_i ] );          // [454]
                    obj_ltc.m_lty=( d_arr_lty[ l_i ] );          // [454]
                    u32_bintile  =( d_arr_u32[ l_i ] );          // [454]
                                                                 // [454]
                    F_TILEBOI_INN_OBJ_LTC_OUT_OBJ_GTC(           // [454]
                                  obj_ltc  ,  obj_gtc );;        // [454]
                                                                 // [454]
                    gtx=( obj_gtc.m_gtx );                       // [454]
                    gty=( obj_gtc.m_gty );                       // [454]
                                                                 // [454]
                    F_TILEBOI_EDI_PUT_U32(                       // [454]
                                                                 // [454]
                        i_te7 , i_la3                            // [454]
                    ,     gtx ,   gty                            // [454]
                    ,     u32_bintile                            // [454]
                    );;                                          // [454]
                };;                                              // [454]
            //:-------------:#_UNLOAD_TILE_BUFFERS_:[454]://     // [454]
                                                                 // [---]
        };; //:BOD_END[ SYMBILA_ISO ]:::::::::::::::::::[448]:// // [448]
        //////////////////////////////////////////////////////// // [448]
                                                                 // [448]
    //:================:#_ISOLATED_ROTATING_FUNCTIONS_#:[448]:// // [448]
    //:===============:#_ISOLATED_MIRRORING_FUNCTIONS_#:[448]:// // [448]
                                                                 // [---]
    const   F_MIRMAID_EDI_PUT_U32_SYMBILA=function  //:::://     // [425]
    PRIVATE_F_MIRMAID_EDI_PUT_U32_SYMBILA(          //:::://     // [425]
                                                                 // [425]
                    i_te7 , i_la3   //:#_SIZE_AND_LAYER_#://     // [425]
            ,       i_gtx , i_gty   //:#_GLOBAL_TILE_XY_#://     // [425]
            ,       i_u32 , i_xyd   //:#_BINTILE_MIRROR_#://     // [425]
                                                                 // [425]
    ){  //:BOD_BEG[ F_EDI_PUT_U32_SYMBILA ]:::::::::[425]://     // [425]
                                                                 // [425]
        //:SEE_TAG[ #_DIAGRAM_XYD_SYMBILA_# ]::::::::::::://     // [425]
                                                                 // [---]
        //:#_BILATERAL_SETUP_CODE_#:[426]:---------------://     // [---][426]
                                                                 // [---][426]
            //: @loc_lat@ : Local  Lateral Span :::::::::://     // [---][426]
            //: @glo_lat@ : Global Lateral Span :::::::::://     // [---][426]
                                                                 // [---][426]
            const     te7 =(            i_te7   );               // [---][426]
            const     la3 =(            i_la3   );               // [---][426]
            let       u32 ; /**USE_HAS_CHANGED**/                // [428][426]
            const loc_lat =( d_te7_lat[ i_te7 ] );               // [---][426]
            const glo_lat =( ((3*5*loc_lat)+0)  );               // [---][426]
                                                                 // [---]
            const m_i_gtx =( glo_lat - 1 );                      // [427]
            const m_i_gty =( glo_lat - 1 );                      // [427]
            let       lin =( 0 /** Loading_INdex **/ );          // [427]
                                                                 // [---]
            let xyd_x =(( i_xyd >>> 2 )&(0x1));                  // [426]
            let xyd_y =(( i_xyd >>> 1 )&(0x1));                  // [426]
            let xyd_d =(( i_xyd >>> 0 )&(0x1));                  // [426]
                                                                 // [426]
            let putorig=( 0 /** Original Put ? ?**/   );         // [426]
                            /**(NON_TRANSFORMED)**/              // [426]
            let gtx =( 0 /**Transformed[ i_gtx ]**/   );         // [426]
            let gty =( 0 /**Transformed[ i_gty ]**/   );         // [426]
                                                                 // [---]
            let MIR_AM6 =("[nil][Mirror_AutotileMethBits]");     // [428]
            let ROT_AM6 =("[nil][Rotate_AM6_Bits]"        );     // [435]
            if( d_edigame_edi.edi_mod_mir_am6 >= 1 ){            // [428]
                                                                 // [428]
                MIR_AM6 =( F_MIRMAID_AM6_U32_MBX_MBY );          // [428]
                ROT_AM6 =( F_MIRMAID_AM6_U32_ROT_C_W );          // [435]
            }else                                                // [428]
            if( d_edigame_edi.edi_mod_mir_am6 <= 0 ){            // [428]
                                                                 // [428]
                MIR_AM6 =( F_MIRMAID_AM6_U32_IBX_IBY );          // [428]
                ROT_AM6 =( F_MIRMAID_AM6_U32_ROT_NOT );          // [435]
            }else{                                               // [428]
                ERR("[BAD_CASE_YOU_DIRTY_BITCH_2022]");          // [428]
            };;                                                  // [428]
                                                                 // [---]
        //:---------------:#_BILATERAL_SETUP_CODE_#:[426]://     // [426]
        //:#_BILATERAL_MIRRORING_#:[426]:----------------://     // [426]
        for( let _x_ = 0 ; _x_ <= 1 ; _x_ ++ ){                  // [426]
        for( let _y_ = 0 ; _y_ <= 1 ; _y_ ++ ){                  // [426]
        for( let _d_ = 0 ; _d_ <= 1 ; _d_ ++ ){                  // [426]
                                                                 // [426]
            o_k =(      1 );                                     // [426]
            d_len_gtc=( 0 );                                     // [427]
                                                                 // [---]
            //:#_KITTY_CORNER_LIGHT_#:[427]:-------------://     // [427]
            if( ( 1 === _x_ )&&( 1 === xyd_x )                   // [427]
            &&  ( 1 === _y_ )&&( 1 === xyd_y )                   // [427]
            &&  ( 0 === _d_ )&&( 1 === ( 1 ) )                   // [427]
            ){                                                   // [427]
                //:#_MIR_MOD_XY_#:[427]:-----------------://     // [427]
                                                                 // [427]
                    lin=( d_len_gtc );                           // [427]
                          d_len_gtc++;                           // [427]
                                                                 // [427]
                    d_arr_gtx[lin]=( m_i_gtx - i_gtx    );       // [427]
                    d_arr_gty[lin]=( m_i_gty - i_gty    );       // [427]
                    d_arr_u32[lin]=MIR_AM6(i_u32,_x_,_y_);       // [428]
                                                                 // [427]
                //:[427]:-----------------:#_MIR_MOD_XY_#://     // [427]
            };;                                                  // [433][427]
            //:-------------:#_KITTY_CORNER_LIGHT_#:[427]://     // [427]
            //:#_KITTY_CORNER_DENSE_#:[427]:-------------://     // [427]
            if( ( 1 === _x_ )&&( 1 === xyd_x )                   // [427]
            &&  ( 1 === _y_ )&&( 1 === xyd_y )                   // [427]
            &&  ( 1 === _d_ )&&( 1 === xyd_d )                   // [427]
            ){                                                   // [427]
                                                                 // [---]
                //:#_K_C_DENSE_ROT_#:[435]:--------------://     // [435]
                                                                 // [435]
                    //: @k_x@ : Kittycorner_X ::::::://          // [435]
                    //: @k_y@ : Kittycorner_Y ::::::://          // [435]
                    //: @rkx@ : k_x rotated counter ://          // [435]
                    //: @rky@ : k_y rotated counter ://          // [435]
                    let k_x = m_i_gtx - i_gtx ;                  // [435]
                    let k_y = m_i_gty - i_gty ;                  // [435]
                                                                 // [435]
                    let rkx =( m_i_gty - k_y );                  // [435]
                    let rky =( (  0  ) + k_x );                  // [435]
                                                                 // [435]
                    lin=( d_len_gtc );                           // [435]
                          d_len_gtc++;                           // [435]
                                                                 // [435]
                    d_arr_gtx[lin]=(   rkx    );                 // [435]
                    d_arr_gty[lin]=(   rky    );                 // [435]
                    d_arr_u32[lin]=ROT_AM6(i_u32);               // [435]
                                                                 // [435]
                //:--------------------------------------://     // [435]
                //:  +----------+---------+              ://     // [435]
                //:  |       [d]|[m]      | [d]:DrawPoint://     // [435]
                //:  |    [_]   |   [_]   | [m]:@MIR_PTS@://     // [435]
                //:  +----------+---------+ [_]:@ROT_PTS@://     // [435]
                //:  |    [r]   |   [_]   |              ://     // [435]
                //:  |       [m]|[m]      | [r]:[rkx,rky]://     // [435]
                //:  +----------+---------+              ://     // [435]
                //:--------------------------------------://     // [435]
                                                                 // [435]
                                                                 // [435]
                //:--------------:#_K_C_DENSE_ROT_#:[435]://     // [435]
                                                                 // [---]
            };;                                                  // [433][427]
            //:-------------:#_KITTY_CORNER_DENSE_#:[427]://     // [427]
            //:#_BILATERAL_X_LIGHT_#:[426]:--------------://     // [426]
            if( ( 1 === _x_ )&&( 1 === xyd_x )                   // [426]
            &&  ( 0 === _y_ )&&( 1 === ( 1 ) )                   // [433][BUG][NIL]
            &&  ( 0 === _d_ )&&( 1 === ( 1 ) )                   // [426]
            ){                                                   // [426]
                                                                 // [---]
                //:#_MIR_MOD_X_#:[427]:------------------://     // [427]
                                                                 // [427]
                    lin=( d_len_gtc );                           // [427]
                          d_len_gtc++;                           // [427]
                                                                 // [427]
                    d_arr_gtx[lin]=( m_i_gtx - i_gtx    );       // [427]
                    d_arr_gty[lin]=( (  0  ) + i_gty    );       // [427]
                    d_arr_u32[lin]=MIR_AM6(i_u32,_x_,_y_);       // [428]
                                                                 // [427]
                //:[427]:------------------:#_MIR_MOD_X_#://     // [427]
                                                                 // [---]
            };;                                                  // [433][426]
            //:--------------:#_BILATERAL_X_LIGHT_#:[426]://     // [426]
            //:#_BOTH_BILATERAL_X_DENSE_#:[426]:---------://     // [426]
            if( ( 1 === _x_ )&&( 1 === xyd_x )                   // [426]
            &&  ( 0 === _y_ )&&( 1 === xyd_y )                   // [442][433][BUG][NIL]
            &&  ( 1 === _d_ )&&( 1 === xyd_d )                   // [426]
            ){  //:BOD_BEG[_B_X_D_]::::::::::::::::::::::://     // [438][426]
                                                                 // [438]
                //: @obm_x : Original_Bilateral_Mirror_X ://     // [438]
                //: @obm_y : Original_Bilateral_Mirror_Y ://     // [438]
                let  obm_x = ( m_i_gtx - i_gtx    );             // [438]
                let  obm_y = ( (  0  ) + i_gty    );             // [438]
                                                                 // [438]
                //: @rbm_x@ : Rotated_Bilateral_Mirror_X ://     // [438]
                //: @rbm_y@ : Rotated_Bilateral_Mirror_Y ://     // [438]
                let  rbm_x = ( m_i_gty - obm_y );                // [438]
                let  rbm_y = ( (  0  ) + obm_x );                // [438]
                                                                 // [438]
                let  bintile =( i_u32 );                         // [438]
                     bintile =MIR_AM6(bintile,_x_,_y_);          // [438]
                     bintile =ROT_AM6(bintile        );          // [438]
                                                                 // [438]
                //:#_LOAD_PLOT_POINT_#:[438]:------------://     // [439][438]
                                                                 // [438]
                    lin=( d_len_gtc );  //:Get_Load_Index://     // [438]
                          d_len_gtc++;  //:Adjust_ARR_LEN://     // [438]
                                                                 // [438]
                    d_arr_gtx[lin]=(   rbm_x    );               // [438]
                    d_arr_gty[lin]=(   rbm_y    );               // [438]
                    d_arr_u32[lin]=(   bintile  );               // [438]
                                                                 // [438]
                //:------------:#_LOAD_PLOT_POINT_#:[438]://     // [439][438]
                //:#_WAYDSB_#:[439]:---------------------://     // [439]
                                                                 // [439]
                //:--------------------------------------://     // [439]
                //:  +-------+-------+                   ://     // [439]
                //:  |    [d]|[m]    | [d]:DrawPoint     ://     // [439]
                //:  | [_]   |   [_] | [m]:@MIR_PTS@     ://     // [439]
                //:  +-------+-------+ [_]:@ROT_PTS@     ://     // [439]
                //:  | [_]   |   [r] |                   ://     // [439]
                //:  |    [m]|[m]    | [r]:[rbm_x,rbm_y] ://     // [439]
                //:  +-------+-------+                   ://     // [439]
                //:--------------------------------------://     // [439]
                                                                 // [439]
                //:---------------------:#_WAYDSB_#:[439]://     // [439]
                                                                 // [438]
            };; //:BOD_END[_B_X_D_]::::::::::::::::::::::://     // [438][433][426]
            //:---------:#_BOTH_BILATERAL_X_DENSE_#:[426]://     // [426]
            //:#_BILATERAL_Y_LIGHT_#:[426]:--------------://     // [426]
            if( ( 0 === _x_ )&&( 1 === ( 1 ) )                   // [433][BUG][426]
            &&  ( 1 === _y_ )&&( 1 === xyd_y )                   // [433][BUG][426]
            &&  ( 0 === _d_ )&&( 1 === ( 1 ) )                   // [426]
            ){                                                   // [426]
                                                                 // [---]
                //:#_MIR_MOD_Y_#:[427]:------------------://     // [427]
                                                                 // [427]
                    lin=( d_len_gtc );                           // [427]
                          d_len_gtc++;                           // [427]
                                                                 // [427]
                    d_arr_gtx[lin]=( (  0  ) + i_gtx    );       // [427]
                    d_arr_gty[lin]=( m_i_gty - i_gty    );       // [427]
                    d_arr_u32[lin]=MIR_AM6(i_u32,_x_,_y_);       // [428]
                                                                 // [427]
                //:[427]:------------------:#_MIR_MOD_Y_#://     // [427]
                                                                 // [---]
            };;                                                  // [433][426]
            //:--------------:#_BILATERAL_Y_LIGHT_#:[426]://     // [426]
            //:#_BOTH_BILATERAL_Y_DENSE_#:[426]:---------://     // [442][426]
            if( ( 0 === _x_ )&&( 1 === xyd_x )                   // [442][433][BUG][426]
            &&  ( 1 === _y_ )&&( 1 === xyd_y )                   // [433][BUG][426]
            &&  ( 1 === _d_ )&&( 1 === xyd_d )                   // [426]
            ){  //:BOD_BEG[_B_Y_D_]::::::::::::::::::::::://     // [439][426]
                                                                 // [439]
                //: @obm_x : Original_Bilateral_Mirror_X ://     // [439]
                //: @obm_y : Original_Bilateral_Mirror_Y ://     // [439]
                let  obm_x =( (  0  ) + i_gtx    );              // [439]
                let  obm_y =( m_i_gty - i_gty    );              // [439]
                                                                 // [439]
                //: @rbm_x@ : Rotated_Bilateral_Mirror_X ://     // [439]
                //: @rbm_y@ : Rotated_Bilateral_Mirror_Y ://     // [439]
                let  rbm_x = ( m_i_gty - obm_y );                // [439]
                let  rbm_y = ( (  0  ) + obm_x );                // [439]
                                                                 // [439]
                let  bintile =( i_u32 );                         // [439]
                     bintile =MIR_AM6(bintile,_x_,_y_);          // [439]
                     bintile =ROT_AM6(bintile        );          // [439]
                                                                 // [439]
                //:#_LOAD_PLOT_POINT_#:[439]:------------://     // [439]
                                                                 // [439]
                    lin=( d_len_gtc );  //:Get_Load_Index://     // [439]
                          d_len_gtc++;  //:Adjust_ARR_LEN://     // [439]
                                                                 // [439]
                    d_arr_gtx[lin]=(   rbm_x    );               // [439]
                    d_arr_gty[lin]=(   rbm_y    );               // [439]
                    d_arr_u32[lin]=(   bintile  );               // [439]
                                                                 // [439]
                //:------------:#_LOAD_PLOT_POINT_#:[439]://     // [439]
                //:#_WAYDSB_#:[439]:---------------------://     // [439]
                                                                 // [439]
                //:--------------------------------------://     // [439]
                //:  +-------+-------+                   ://     // [439]
                //:  |    [d]|[m]    | [d]:DrawPoint     ://     // [439]
                //:  | [r]   |   [_] | [m]:@MIR_PTS@     ://     // [439]
                //:  +-------+-------+ [_]:@ROT_PTS@     ://     // [439]
                //:  | [_]   |   [_] |                   ://     // [439]
                //:  |    [m]|[m]    | [r]:[rbm_x,rbm_y] ://     // [439]
                //:  +-------+-------+                   ://     // [439]
                //:--------------------------------------://     // [439]
                                                                 // [439]
                //:---------------------:#_WAYDSB_#:[439]://     // [439]
                                                                 // [439]
            };; //:BOD_BEG[_B_Y_D_]::::::::::::::::::::::://     // [439][433][426]
            //:---------:#_BOTH_BILATERAL_Y_DENSE_#:[426]://     // [442][426]
            //:#_SINGLE_AXIS_MIRROR_DENSE_#:[442]:-------://     // [442]
            if( 1             //::::::::::[SAM_DENSE:442]://     // [442]
            &&( 1 === _d_   ) //::::::::::[SAM_DENSE:442]://     // [442]
            &&( 1 === xyd_d ) //::::::::::[SAM_DENSE:442]://     // [442]
            ){                //::::::::::[SAM_DENSE:442]://     // [442]
            ////////////////////////////////////////////////     // [442]
                                                                 // [---]
                //:--------------------------------------://     // [443]
                //: @o_k_sadense_lpp@ : LoadPlotPoint? ::://     // [443]
                //: @mid_jot@ : MIDline -[ JOT(minside) ]://     // [443]
                //: @mid_zen@ : MIDline -[ ZEN(maxside) ]://     // [443]
                //: @jot@ ::::: JOT == SynonymFor: MIN ::://     // [443]
                //: @zen@ ::::: ZEN == Zenith ==== MAX ::://     // [443]
                //: @dfa@ ::::: Distance_From_Axis ::::::://     // [443]
                //: @bes@ ::::: Box_Edge_Span            ://     // [443]
                //: @haf@ ::::: Half                     ://     // [443]
                //: @jmp@ ::::: Jump                     ://     // [443]
                //:--------------------------------------://     // [443]
                                                                 // [---]
                let o_k_sadense_lpp =( 0 );                      // [442]
                let mid_jot =(( glo_lat / 2)-1);                 // [443]
                let mid_zen =(( glo_lat / 2)+0);                 // [443]
                let     dfa ;                                    // [443]
                let     bes ;                                    // [443]
                let     haf ;                                    // [443]
                let     jmp ;                                    // [443]
                                                                 // [---]
                let     pp1_x ; //:ProjectionPoint1_X://         // [444]
                let     pp1_y ; //:ProjectionPoint1_Y://         // [444]
                let     pp1_u ; //:ProjectionPoint1_U://         // [445]
                                                                 // [---]
                let     pp2_x ; //:ProjectionPoint2_X://         // [444]
                let     pp2_y ; //:ProjectionPoint2_Y://         // [444]
                let     pp2_u ; //:ProjectionPoint2_U://         // [445]
                                                                 // [---]
            ////////////////////////////////////////////////     // [442]
                if( ( 0 === xyd_x )&&( 0 === xyd_y ) ){          // [442]
                    ERR( "[YOU_DIDNT_CALL_RADIAL_CODE?]" );      // [442]
                }else                                            // [442]
                if( ( 1 === xyd_x )&&( 1 === xyd_y ) ){          // [442]
                    /** IGNORE : Not a SINGLE_AXIS **/           // [442]
                }else                                            // [442]
                if( ( 1 === xyd_x )&&( 0 === xyd_y ) ){          // [442]
                //:#_SINGLE_AXIS_X_DENSE_#:[442]:--------://     // [442]
                //:#_BOXXY_PLOT_:#[443]:-----------------://     // [443]
                if( (1 === _x_) ){  ////////////////////////     // [442]
                                                                 // [---]
                    let dir_y =( 0 );   //: Direction-Y :://     // [443]
                                                                 // [443]
                    //:#_GET_DIRECTION_#:[443]:----------://     // [443]
                    if( i_gty <= mid_jot ){   //:@ABOVAX@://     // [443]
                        dir_y  =(0-1); //:@DIR_TOP@://           // [443]
                    }else                                        // [443]
                    if( i_gty >= mid_zen ){   //:@BELVAX@://     // [443]
                        dir_y  =(0+1); //:@DIR_BOT@://           // [443]
                    }else{                                       // [443]
                        ERR("[JOT_ZEN:#_DIST_FROM_HOR_#]");      // [443]
                    };;                                          // [443]
                    //:----------:#_GET_DIRECTION_#:[443]://     // [443]
                    //:#_GET_BOXSPAN_#:[443]:------------://     // [443]
                    if( i_gtx <= mid_jot ){  //:@LEF_MID@://     // [443]
                                                                 // [443]
                        haf =( mid_jot - i_gtx + 1 );            // [443]
                        bes =( haf * 2 );                        // [443]
                        jmp =( bes - 1 );                        // [443]
                    }else                                        // [443]
                    if( i_gtx >= mid_zen ){  //:@RIG_MID@://     // [443]
                                                                 // [443]
                        haf =( i_gtx - mid_zen + 1 );            // [443]
                        bes =( haf * 2 );                        // [443]
                        jmp =( bes - 1 );                        // [443]
                    }else{                                       // [443]
                        LOG( "[i_gtx]:" , i_gtx );               // [444]
                        LOG( "[i_gty]:" , i_gty );               // [444]
                        ERR("[BOXSPAN_USING_GTX:2022]");         // [443]
                    };;                                          // [443]
                    //:------------:#_GET_BOXSPAN_#:[443]://     // [443]
                    //:#_SQUARE_MIRROR_#:[443]:----------://     // [443]
                    //:#_SQMIR_TOP_BOT_#:[443]:----------://     // [443]
                                                                 // [---]
                        //:DONE_SQUARE_MIRROR:(TOP/BOT)::://     // [444][443]
                                                                 // [---]
                        jmp =(F_M_F( jmp / 2 ) );                // [445]
                                                                 // [---]
                        //:#_OCD_____________2022_11_08_#://     // [444]
                        //:====(___i_gtc_+_(jmp*dir_c)_)=://     // [444]
                        pp1_x =(   i_gtx + (   0     ) );        // [444]
                        pp1_y =(   i_gty + (jmp*dir_y) );        // [444]
                                                                 // [444]
                        pp2_x =( m_i_gtx - (    i_gtx) );        // [444]
                        pp2_y =(   i_gty + (jmp*dir_y) );        // [444]
                        //:====(___i_gtc_+_(jmp*dir_c)_)=://     // [444]
                                                                 // [---]
                        pp1_u =( MIR_AM6( i_u32 ,0,1 ) );;;;     // [445]
                        pp2_u =( MIR_AM6( i_u32 ,1,1 ) );;;;     // [445]
                                                                 // [---]
                        //:SingleAxisDense__LoadPlotPoint://     // [444]
                        o_k_sadense_lpp=( 1 );                   // [444]
                                                                 // [---]
                    //:----------:#_SQMIR_TOP_BOT_#:[443]://     // [443]
                    //:----------:#_SQUARE_MIRROR_#:[443]://     // [443]
                                                                 // [---]
                };; ////////////////////////////////////////     // [442]
                //:-----------------:#_BOXXY_PLOT_#:[443]://     // [443]
                //:--------:#_SINGLE_AXIS_X_DENSE_#:[442]://     // [442]
                }else                                            // [442]
                if( ( 0 === xyd_x )&&( 1 === xyd_y ) ){          // [442]
                //:#_SINGLE_AXIS_Y_DENSE_#:[442]:--------://     // [442]
                //:#_BOXXY_PLOT_:#[443]:------------------://    // [443]
                if( (1 === _y_) ){  ////////////////////////     // [442]
                                                                 // [---]
                    let dir_x =( 0 );   //: Direction-X :://     // [443]
                                                                 // [443]
                    //:#_GET_DIRECTION_#:[443]:----------://     // [443]
                    if( i_gtx <= mid_jot ){   //:@LEFOYA@://     // [443]
                        dir_x=(0-1); //:@DIR_LEF@://             // [443]
                    }else                                        // [443]
                    if( i_gtx >= mid_zen ){   //:@RIGOYA@://     // [443]
                        dir_x=(0+1); //:@DIR_RIG@://             // [443]
                    }else{                                       // [443]
                        ERR("[JOT_ZEN:#_DIST_FROM_VER_#]");      // [443]
                    };;                                          // [443]
                    //:----------:#_GET_DIRECTION_#:[443]://     // [443]
                    //:#_GET_BOXSPAN_#:[443]:------------://     // [443]
                    if( i_gty <= mid_jot ){  //:@ABO_MID@://     // [443]
                                                                 // [443]
                        haf =( mid_jot - i_gty + 1 );            // [443]
                        bes =( haf * 2 );                        // [443]
                        jmp =( bes - 1 );                        // [443]
                    }else                                        // [443]
                    if( i_gty >= mid_zen ){  //:@BEL_MID@://     // [443]
                                                                 // [443]
                        haf =( i_gty - mid_zen + 1 );            // [443]
                        bes =( haf * 2 );                        // [443]
                        jmp =( bes - 1 );                        // [443]
                    }else{                                       // [443]
                        LOG( "[i_gtx]:" , i_gtx );               // [444]
                        LOG( "[i_gty]:" , i_gty );               // [444]
                        ERR("[BOXSPAN_USING_GTY:2022]");         // [443]
                    };;                                          // [443]
                    //:------------:#_GET_BOXSPAN_#:[443]://     // [443]
                    //:#_SQUARE_MIRROR_#:[443]:----------://     // [443]
                    //:#_SQMIR_LEF_RIG_#:[443]:----------://     // [443]
                                                                 // [443]
                        //:DONE_SQUARE_MIRROR:(LEF/RIG)::://     // [444][443]
                                                                 // [---]
                        jmp =(F_M_F( jmp / 2 ) );                // [445]
                                                                 // [---]
                        //:#_OCD_____________2022_11_08_#://     // [444]
                        //:====(___i_gtc_+_(jmp*dir_c)_)=://     // [444]
                        pp1_x =(   i_gtx + (jmp*dir_x) );        // [444]
                        pp1_y =(   i_gty + (   0     ) );        // [444]
                                                                 // [444]
                        pp2_x =(   i_gtx + (jmp*dir_x) );        // [444]
                        pp2_y =( m_i_gty - (    i_gty) );        // [444]
                        //:====(___i_gtc_+_(jmp*dir_c)_)=://     // [444]
                        //:#_OCD_____________2022_11_08_#://     // [444]
                                                                 // [---]
                        pp1_u =( MIR_AM6( i_u32 ,1,0 ) );;;;     // [445]
                        pp2_u =( MIR_AM6( i_u32 ,1,1 ) );;;;     // [445]
                                                                 // [---]
                        //:SingleAxisDense__LoadPlotPoint://     // [444]
                        o_k_sadense_lpp=( 1 );                   // [444]
                                                                 // [---]
                    //:----------:#_SQMIR_LEF_RIG_#:[443]://     // [443]
                    //:----------:#_SQUARE_MIRROR_#:[443]://     // [443]
                                                                 // [---]
                };; ////////////////////////////////////////     // [442]
                //:-----------------:#_BOXXY_PLOT_#:[443]://     // [443]
                //:--------:#_SINGLE_AXIS_Y_DENSE_#:[442]://     // [442]
                }else{                                           // [442]
                    ERR( "[NOT_ALL_COMBOS_???_2022]");           // [442]
                };;                                              // [442]
                //:#_SAD_LPP_#:[442]:--------------------://     // [442]
                if( o_k_sadense_lpp >= 1 ){ ////////////////     // [442]
                                                                 // [---]
                    lin=( d_len_gtc );  //:Get_Load_Index://     // [444]
                          d_len_gtc++;  //:Adjust_ARR_LEN://     // [444]
                                                                 // [444]
                    d_arr_gtx[lin]=(   pp1_x    );               // [444]
                    d_arr_gty[lin]=(   pp1_y    );               // [444]
                    d_arr_u32[lin]=(   pp1_u    );               // [445][444]
                                                                 // [444]
                    lin=( d_len_gtc );  //:Get_Load_Index://     // [444]
                          d_len_gtc++;  //:Adjust_ARR_LEN://     // [444]
                                                                 // [444]
                    d_arr_gtx[lin]=(   pp2_x    );               // [444]
                    d_arr_gty[lin]=(   pp2_y    );               // [444]
                    d_arr_u32[lin]=(   pp2_u    );               // [445][444]
                                                                 // [---]
                };; ////////////////////////////////////////     // [442]
                //:--------------------:#_SAD_LPP_#:[442]://     // [442]
            };; //::::::::::::::::::::::::[SAM_DENSE:442]://     // [442]
            //:-------:#_SINGLE_AXIS_MIRROR_DENSE_#:[442]://     // [442]
            //:#_PUT_NON_TRANSFORMED_#:[426]:------------://     // [426]
            if( putorig <= 0 ){                                  // [426]
                putorig =( 1 );                                  // [426]
                                                                 // [---]
                //:#_LOAD_NON_TRANS_#:[427]:-------------://     // [427]
                                                                 // [427]
                    lin=( d_len_gtc );                           // [427]
                          d_len_gtc++;                           // [427]
                                                                 // [427]
                    d_arr_gtx[lin]=(( i_gtx ));                  // [427]
                    d_arr_gty[lin]=(( i_gty ));                  // [427]
                    d_arr_u32[lin]=MIR_AM6(i_u32,(0),(0));       // [428]
                                                                 // [427]
                //:-------------:#_LOAD_NON_TRANS_#:[427]://     // [427]
                                                                 // [---]
            };;                                                  // [433][426]
            //:------------:#_PUT_NON_TRANSFORMED_#:[426]://     // [---]
            //:#_NON_TRANSFORMED_DENSE_#:[440]:----------://     // [440]
            if( ( 1 === _d_ )&&( 1 === xyd_d ) ){//:[NTD]://     // [440]
                                                                 // [440]
                let tdx ; //: @tdx@ : TransformedDense_X ://     // [440]
                let tdy ; //: @tdy@ : TransformedDense_Y ://     // [440]
                let tdu ; //: @tdu@ : TransformedDense_U ://     // [440]
                                                                 // [440]
                let o_k_lpp ; //:Okay? Load Plot Point?  ://     // [440]
                    o_k_lpp =( 0 );                              // [440]
                                                                 // [440]
                //:#_NTD_ALL_#:[440]:--------------------://     // [440]
                if( ( 1 === _x_ )&&( 1 === xyd_x )               // [440]
                &&  ( 1 === _y_ )&&( 1 === xyd_y )               // [440]
                ){                                               // [440]
                                                                 // [440]
                    //: @ntd_x@ : NonTransDense - X ://          // [440]
                    //: @ntd_y@ : NonTransDense - Y ://          // [440]
                    let  ntd_x =( (  0  ) + i_gtx    );          // [440]
                    let  ntd_y =( (  0  ) + i_gty    );          // [440]
                                                                 // [440]
                    //: CLOCK_WISE : (x,y)===>(y,-x) ::::://     // [440]
                    //: ANTI_CLOCK : (x,y)===>(-y,x) ::::://     // [440]
                                                                 // [440]
                    //: ROTATE_PLOT : CLOCK_WISE ::::::::://     // [440]
                    //: ROTATE_TILE : COUNTER_CW ::::::::://     // [440]
                    //:#_WTF_ROTATION_#:[440]:-----------://     // [440]
                                                                 // [440]
                        const  _______=( 0 );                    // [440]
                        tdx =(  m_i_gty - ntd_y  );              // [440]
                        tdy =(            ntd_x  );              // [440]
                        tdu =( i_u32             );              // [440]
                        tdu =( ROT_AM6(    tdu ) );              // [440]
                        tdu =( ROT_AM6(    tdu ) );              // [440]
                        tdu =( ROT_AM6(    tdu ) );              // [440]
                    //:-----------:#_WTF_ROTATION_#:[440]://     // [440]
                    //:#_WTF_ROT_DIA_#:[440]:------------://     // [440]
                    //:  +-------+-------+               ://     // [440]
                    //:  |    [d]|[m]    | [d]:DrawPoint ://     // [440]
                    //:  | [_]   |   [r] | [m]:@MIR_PTS@ ://     // [440]
                    //:  +-------+-------+ [_]:@ROT_PTS@ ://     // [440]
                    //:  | [_]   |   [_] |               ://     // [440]
                    //:  |    [m]|[m]    | [r]:[tdx,tdy] ://     // [440]
                    //:  +-------+-------+               ://     // [440]
                    //:------------:#_WTF_ROT_DIA_#:[440]://     // [440]
                                                                 // [440]
                    o_k_lpp=( 1 );                               // [440]
                                                                 // [440]
                }else                                            // [440]
                //:--------------------:#_NTD_ALL_#:[440]://     // [440]
                //:#_NTD_O_X_#:[440]:--------------------://     // [440]
                if( ( 1 === _x_ )&&( 1 === xyd_x )               // [440]
                &&  ( 0 === _y_ )&&( 0 === xyd_y )               // [440]
                ){                                               // [440]
                                                                 // [440]
                    //:#_I_DONT_KNOW_IF_STUFF_GOES_HERE_#://     // [440]
                                                                 // [440]
                }else                                            // [440]
                //:--------------------:#_NTD_O_X_#:[440]://     // [440]
                //:#_NTD_O_Y_#:[440]:--------------------://     // [440]
                if( ( 0 === _x_ )&&( 0 === xyd_x )               // [440]
                &&  ( 1 === _y_ )&&( 1 === xyd_y )               // [440]
                ){                                               // [440]
                                                                 // [440]
                    //:#_I_DONT_KNOW_IF_STUFF_GOES_HERE_#://     // [440]
                                                                 // [440]
                }else                                            // [440]
                //:--------------------:#_NTD_O_Y_#:[440]://     // [440]
                //:#_NTD_NOT_#:[440]:--------------------://     // [440]
                {                                                // [440]
                    /** OK : DO NOTHING **/                      // [440]
                };;                                              // [440]
                //:--------------------:#_NTD_NOT_#:[440]://     // [440]
                ////////////////////////////////////////////     // [440]
                //:#_LOAD_PLOT_POINT_#:[440]:------------://     // [440]
                if( o_k_lpp >= 1 ){                              // [440]
                                                                 // [440]
                    lin=( d_len_gtc );  //:Get_Load_Index://     // [440]
                          d_len_gtc++;  //:Adjust_ARR_LEN://     // [440]
                                                                 // [440]
                    d_arr_gtx[lin]=(   tdx    );                 // [440]
                    d_arr_gty[lin]=(   tdy    );                 // [440]
                    d_arr_u32[lin]=(   tdu    );                 // [440]
                };;                                              // [440]
                //:------------:#_LOAD_PLOT_POINT_#:[440]://     // [440]
                ////////////////////////////////////////////     // [440]
            };; //::::::::::::::::::::::::::::::::::[NTD]://     // [440]
            //:----------:#_NON_TRANSFORMED_DENSE_#:[440]://     // [440]
            //:#_SKIP_THIS_ITERATION_#:[426]:------------://     // [---]
            if( 1 === 1 ){                                       // [433][426]
                if( d_len_gtc <= 0 ){                            // [433][---]
                    o_k =( 0 ); //:AKA[ continue ]::::::::::::// // [433][426]
                };;                                              // [433][---]
            };;                                                  // [433][426]
            //:------------:#_SKIP_THIS_ITERATION_#:[426]://     // [426]
            //:#_PUT_TILE_IF_OKAY_#:[426]:---------------://     // [426]
            if( o_k >=1 ){                                       // [426]
                                                                 // [---]
                //:#_UNLOAD_TILE_BUFFER_#:[427]:---------://     // [---][427]
                let  dex =(             0 );                     // [---][427]
                let  m_i =( d_len_gtc - 1 );                     // [---][427]
                for( dex = 0 ; dex <= m_i ; dex ++ ){            // [---][427]
                                                                 // [---][427]
                    gtx=( d_arr_gtx[ dex ] );                    // [---][427]
                    gty=( d_arr_gty[ dex ] );                    // [---][427]
                    u32=( d_arr_u32[ dex ] );                    // [428][---]
                                                                 // [---][427]
                    F_TILEBOI_EDI_PUT_U32(                       // [---][427]
                                                                 // [---][427]
                        te7,la3 //:<--[_TE7_AND_LA3_]://         // [---][427]
                    ,   gtx,gty //:<--[_GTX_AND_GTY_]://         // [---][427]
                    ,   u32     //:<--[_U32_BINTILE_]://         // [---][427]
                    );;                                          // [---][427]
                };;                                              // [---][427]
                //:---------:#_UNLOAD_TILE_BUFFER_#:[427]://     // [---][427]
                                                                 // [---]
            };;                                                  // [426]
            //:---------------:#_PUT_TILE_IF_OKAY_#:[426]://     // [426]
                                                                 // [426]
        };;};;};; //:NEXT[ _x_,_y_,_d_ ]:::::::::::::::::://     // [426]
        //:----------------:#_BILATERAL_MIRRORING_#:[426]://     // [426]
                                                                 // [---]
    };; //:BOD_END[ F_EDI_PUT_U32_SYMBILA ]:::::::::[425]://     // [425]
    const   F_MIRMAID_EDI_PUT_U32_SYMRADI=function  //:::://     // [425]
    PRIVATE_F_MIRMAID_EDI_PUT_U32_SYMRADI(          //:::://     // [425]
                                                                 // [425]
                    i_te7 , i_la3   //:#_SIZE_AND_LAYER_#://     // [425]
            ,       i_gtx , i_gty   //:#_GLOBAL_TILE_XY_#://     // [425]
            ,       i_u32 , i_xyd   //:#_BINTILE_MIRROR_#://     // [425]
                                                                 // [425]
    ){  //:BOD_BEG[ F_EDI_PUT_U32_SYMRADI ]:::::::::[425]://     // [425]
                                                                 // [425]
        //:SEE_TAG[ #_DIAGRAM_XYD_SYMRADI_# ]::::::::::::://     // [425]

        //:#_DENSEBIT_GTC_BINTILE_#:[446]:---------------://     // [446]
                                                                 // [446]
            let xyd_d =(( i_xyd >>> 0 )&(0x1));                  // [446]
            let   gtx =(  i_gtx );                               // [446]
            let   gty =(  i_gty );                               // [446]
            let   u32 =(  i_u32 );                               // [446]
                                                                 // [446]
            let   new_gtx=( gtx );  //: @TEMP_VARS@ :::::://     // [446]
            let   new_gty=( gty );  //: @TEMP_VARS@ :::::://     // [446]
                                                                 // [446]
        //:---------------:#_DENSEBIT_GTC_BINTILE_#:[446]://     // [446]
        //:#_MAX_GTC_AND_LIN_#:[446]:--------------------://     // [446]
                                                                 // [446]
            const loc_lat =( d_te7_lat[ i_te7 ] );               // [446]
            const glo_lat =( ((3*5*loc_lat)+0)  );               // [446]
                                                                 // [446]
            const m_i_gtx =( glo_lat - 1 );                      // [446]
            const m_i_gty =( glo_lat - 1 );                      // [446]
            let       lin =( 0 /** Loading_INdex **/ );          // [446]
                                                                 // [446]
        //:--------------------:#_MAX_GTC_AND_LIN_#:[446]://     // [446]
        //:#_RESET_TRIPLEPARA_#:[446]:-------------------://     // [446]
                                                                 // [446]
            d_len_gtc=(0); lin=(0-1);                            // [446]
                                                                 // [446]
        //:-------------------:#_RESET_TRIPLEPARA_#:[446]://     // [446]
        //:#_TILE_INTERNAL_ROTATION_FUNC_#:[446]:--------://     // [446]
                                                                 // [446]
            const ROT_C_W =( F_MIRMAID_AM6_U32_ROT_C_W );        // [446]
                                                                 // [446]
        //:--------:#_TILE_INTERNAL_ROTATION_FUNC_#:[446]://     // [446]
        //:#_LOOP_FOR_ME_BITCH_#:[446]:------------------://     // [446]
        for( let _d_ = 0 ; _d_ <= ( 1 ) ; _d_ ++ ){              // [446]
                                                                 // [446]
            if( ( 0 === _d_ )&&( 0 === xyd_d ) ){                // [447][446]
                                                                 // [446]
                for( let rot = 0 ; rot <=(4-1); rot++ ){         // [446]
                                                                 // [446]
                    lin=( d_len_gtc );                           // [446]
                          d_len_gtc++;                           // [446]
                                                                 // [446]
                    d_arr_gtx[ lin ]=( gtx );                    // [446]
                    d_arr_gty[ lin ]=( gty );                    // [446]
                    d_arr_u32[ lin ]=( u32 );                    // [446]
                                                                 // [446]
                    //: ANTIC : (x,y)===>(-y,x) :::::://         // [446]
                    //: CLOCK : (x,y)===>(y,-x) :::::://         // [446]
                    new_gtx =( (  0  ) + gty );                  // [446]
                    new_gty =( m_i_gtx - gtx );                  // [446]
                        gtx =( new_gtx       );                  // [446]
                        gty =( new_gty       );                  // [446]
                        u32 =ROT_C_W(    u32 );                  // [446]
                                                                 // [446]
                    /**$_LAST_GTX_GTY_DISCARDED_$**/             // [446]
                };;                                              // [446]
            };;                                                  // [446]
            if( ( 1 === _d_ )&&( xyd_d >= 1 ) ){                 // [446]
                                                                 // [---]
                //:#_16_POINT_ROTATION_BRUSH_#:[447]:----://     // [447]
                //:#_COPYPASTE_ROTATION_CODE_#:[447]:----://     // [447]
                for( let rot = 0 ; rot <=(4-1); rot++ ){         // [447]
                                                                 // [447]
                    //:#_FOURPRONG_BRUSH_#:[447]:--------://     // [447]
                    //:#_4PRONG_BRUSH_#:[447]:-----------://     // [447]
                        lin=( d_len_gtc );                       // [447]
                              d_len_gtc+=4 ;                     // [447]
                                                                 // [447]
                        d_arr_gtx[ lin+0 ]=( gtx-1 );            // [447]
                        d_arr_gty[ lin+0 ]=( gty-1 );            // [447]
                        d_arr_u32[ lin+0 ]=( u32   );            // [447]
                                                                 // [447]
                        d_arr_gtx[ lin+1 ]=( gtx+1 );            // [447]
                        d_arr_gty[ lin+1 ]=( gty-1 );            // [447]
                        d_arr_u32[ lin+1 ]=( u32   );            // [447]
                                                                 // [447]
                        d_arr_gtx[ lin+2 ]=( gtx-1 );            // [447]
                        d_arr_gty[ lin+2 ]=( gty+1 );            // [447]
                        d_arr_u32[ lin+2 ]=( u32   );            // [447]
                                                                 // [447]
                        d_arr_gtx[ lin+3 ]=( gtx+1 );            // [447]
                        d_arr_gty[ lin+3 ]=( gty+1 );            // [447]
                        d_arr_u32[ lin+3 ]=( u32   );            // [447]
                                                                 // [447]
                    //:-----------:#_4PRONG_BRUSH_#:[447]://     // [447]
                    //:--------:#_FOURPRONG_BRUSH_#:[447]://     // [447]
                                                                 // [447]
                    //: ANTIC : (x,y)===>(-y,x) :::::://         // [447]
                    //: CLOCK : (x,y)===>(y,-x) :::::://         // [447]
                    new_gtx =( (  0  ) + gty );                  // [447]
                    new_gty =( m_i_gtx - gtx );                  // [447]
                        gtx =( new_gtx       );                  // [447]
                        gty =( new_gty       );                  // [447]
                        u32 =ROT_C_W(    u32 );                  // [447]
                                                                 // [447]
                    /**$_LAST_GTX_GTY_DISCARDED_$**/             // [447]
                };;                                              // [447]
                //:----:#_COPYPASTE_ROTATION_CODE_#:[447]://     // [447]
                //:----:#_16_POINT_ROTATION_BRUSH_#:[447]://     // [447]
                                                                 // [---]
            };;                                                  // [446]
        };;                                                      // [446]
        //:------------------:#_LOOP_FOR_ME_BITCH_#:[446]://     // [446]
        //:#_UNLOAD_RADMIR_TILE_BUFFER_#:[446]:----------://     // [446]
        let  dex =(             0 );                             // [446]
        let  m_i =( d_len_gtc - 1 );                             // [446]
        for( dex = 0 ; dex <= m_i ; dex ++ ){                    // [446]
                                                                 // [446]
            gtx=( d_arr_gtx[ dex ] );                            // [446]
            gty=( d_arr_gty[ dex ] );                            // [446]
            u32=( d_arr_u32[ dex ] );                            // [446]
                                                                 // [446]
            if( gtx < 0 || gtx > m_i_gtx ){                      // [447]
                /**OKAY, skip, out of bounds.**/                 // [447]
            }else                                                // [447]
            if( gty < 0 || gty > m_i_gty ){                      // [447]
                /**OKAY, skip, out of bounds.**/                 // [447]
            }else
            if( gtx >= 0 && gtx <= m_i_gtx
            &&  gty >= 0 && gty <= m_i_gty
            )
            {  //::::::::::::::::::::::INBOUND?[447]://     // [447]
                                                                 // [---]
                F_TILEBOI_EDI_PUT_U32(                           // [446]
                                                                 // [446]
                    i_te7,i_la3 //:<--[_TE7_AND_LA3_]://         // [446]
                ,     gtx,  gty //:<--[_GTX_AND_GTY_]://         // [446]
                ,           u32 //:<--[_U32_BINTILE_]://         // [446]
                );;                                              // [446]
            }   //::::::::::::::::::::::::::INBOUND?[447]://     // [447]
            else//::::::::::::::::::::::::::::::::::[447]://     // [447]
            {   //::::::::::::::::::::::::::::::OOB?[447]://     // [447]
                LOG( "[gtx]:" , gtx );
                LOG( "[gty]:" , gty );
                ERR("[WTF_OUT_OF_BOUND_2022]");
            };; //::::::::::::::::::::::::::::::OOB?[447]://     // [447]
        };;                                                      // [446]
        //:----------:#_UNLOAD_RADMIR_TILE_BUFFER_#:[446]://     // [446]

    };; //:BOD_END[ F_EDI_PUT_U32_SYMRADI ]:::::::::[425]://     // [425]

    const   F_MIRMAID_EDI_PUT_U32 = function  //::::::::::::::// // [423]
    PRIVATE_F_MIRMAID_EDI_PUT_U32(    //:TAG[ FTB_ES_PG_U32 ]:// // [423]
                     //:-------------------------------------:// // [423]
        i_te7,i_la3  //:<--TileSize_And_Layer                :// // [423]
    ,   i_gtx,i_gty  //:<--Dum_Global_Coordinate             :// // [423]
    ,   i_u32        //:<--Raw_U32_Tile_Value @BINTILE@      :// // [423]
                     //:-------------------------------------:// // [423]
    ){  //:BOD_BEG[ F_EDI_PUT_U32 ]:::::::::::::::::::::::::::// // [423]

        let o_k=( 1 /**@INNOCENT_UNTIL_PROVEN_GUILTY@**/ );      // [424]
                                                                 // [424]
        const te7 =(            i_te7   );                       // [424]
        const la3 =(            i_la3   );                       // [424]
        const lat =( d_te7_lat[ i_te7 ] );                       // [424]
                                                                 // [424]
        const gmi     =((3*5*lat)-1); //:@gmi@:GlobalMaxIndex:// // [424]
        const m_i_gtx =(     gmi   ); //:TAG[ #_GTX_M_I_# ]:::// // [424]
        const m_i_gty =(     gmi   ); //:TAG[ #_GTY_M_I_# ]:::// // [424]
        const lahotel =(   5*lat   ); //:Lateral_Span:HOTEL  :// // [424]
                                                                 // [424]
        if( ( i_gtx >= 0 ) && ( i_gtx <= m_i_gtx )               // [424]
        &&  ( i_gty >= 0 ) && ( i_gty <= m_i_gty )               // [424]
        ){                                                       // [424]
            o_k =( 0+2 ); //:#_STILL_WITHIN_DUM_BOUNDS_#://      // [424]
        }else                                                    // [424]
        if( ( i_gtx <  0 ) || ( i_gtx >  m_i_gtx )               // [424]
        ||  ( i_gty <  0 ) || ( i_gty >  m_i_gty )               // [424]
        ){                                                       // [424]
            o_k =( 0-2 ); //:#_NOT_WITHIN_DUM_BOUNDS_#://        // [424]
                          //:@_NON_FATAL_CODE_BRANCH_@://        // [424]
        }else{                                                   // [424]
            ERR("[INVALID_MERMAID_BRANCH_2022]");                // [424]
        };;                                                      // [424]
                                                                 // [424]
        //:#_MIRROR_LOOP_#:[424]:------------------------://     // [424]
        if( o_k >=1 ){ //:::::::::::::::::::::::[O_K:424]://     // [424]
                                                                 // [---]
            let xyd = d_edigame_edi.edi_mod_mir_xyd ;            // [425]
            let xyd_x =( xyd >> 2 )&( 0x1 );                     // [425]
            let xyd_y =( xyd >> 1 )&( 0x1 );                     // [425]
            let xyd_d =( xyd >> 0 )&( 0x1 );                     // [425]
                                                                 // [425]
            let xyd_symbila =( 0 );                              // [425]
            let xyd_symradi =( 0 );                              // [425]
                                                                 // [425]
            //:#_BILATERAL_OR_RADIAL_#:[425]:------------://     // [425]
            //:#_RADIAL_OR_BILATERAL_#:[425]:------------://     // [425]
                                                                 // [425]
                if( (1 === xyd_x) || (1 === xyd_y) ){            // [425]
                                                                 // [425]
                    xyd_symbila =( 1 );                          // [425]
                }else                                            // [425]
                if( (0 === xyd_x) && (0 === xyd_y) ){            // [425]
                                                                 // [425]
                    xyd_symradi =( 1 );                          // [425]
                }else{                                           // [425]
                    ERR("[BAD_BRANCHY_BOI_2022]");               // [425]
                };;                                              // [425]
                                                                 // [425]
            //:------------:#_RADIAL_OR_BILATERAL_#:[425]://     // [---]
            //:------------:#_BILATERAL_OR_RADIAL_#:[425]://     // [---]
            //:#_ISOLATED_OR_GLOBAL_#:[448]:-------------://     // [448][---]
            //:#_GLOBAL_OR_ISOLATED_#:[448]:-------------://     // [448][---]
                                                                 // [448][---]
                let XYD_SYMBILA =( "[nil][xyd_symbila]" );       // [448][---]
                let XYD_SYMRADI =( "[nil][xyd_symradi]" );       // [448][---]
                                                                 // [448][---]
                if( d_edigame_edi.edi_mod_mir_iso >= 1 ){        // [448][---]
                                                                 // [448][---]
                                      XYD_SYMBILA=(              // [448][---]
                    F_MIRMAID_EDI_PUT_U32_SYMBILA_ISO );;        // [448][---]
                                                                 // [448][---]
                                      XYD_SYMRADI=(              // [448][---]
                    F_MIRMAID_EDI_PUT_U32_SYMRADI_ISO );;        // [448][---]
                }else                                            // [448][---]
                if( d_edigame_edi.edi_mod_mir_iso <= 0 ){        // [448][---]
                                                                 // [448][---]
                                      XYD_SYMBILA=(              // [448][---]
                    F_MIRMAID_EDI_PUT_U32_SYMBILA );             // [448][---]
                                                                 // [448][---]
                                      XYD_SYMRADI=(              // [448][---]
                    F_MIRMAID_EDI_PUT_U32_SYMRADI );             // [448][---]
                }else{                                           // [448][---]
                    ERR("[INVALID_ISOLATION_MODE_2022]");        // [448][---]
                };;                                              // [448][---]
            //:-------------:#_GLOBAL_OR_ISOLATED_#:[448]://     // [448][---]
            //:-------------:#_ISOLATED_OR_GLOBAL_#:[448]://     // [448][---]
            //:#_BILATERAL_OR_RADIAL_#:[448]:------------://     // [448][---]
            //:#_RADIAL_OR_BILATERAL_#:[448]:------------://     // [448][---]
                                                                 // [448][---]
                if( 1 ===         xyd_symbila ){                 //      [425]
                                  XYD_SYMBILA(                   // [448][425]
                    i_te7 , i_la3   //:#_SIZE_AND_LAYER_#://     //      [425]
                ,   i_gtx , i_gty   //:#_GLOBAL_TILE_XY_#://     //      [425]
                ,   i_u32 ,   xyd   //:#_BINTILE_MIRROR_#://     //      [425]
                );;                                              //      [425]
                }else                                            //      [425]
                if( 1 ===         xyd_symradi ){                 //      [425]
                                  XYD_SYMRADI(                   // [448][425]
                    i_te7 , i_la3   //:#_SIZE_AND_LAYER_#://     //      [425]
                ,   i_gtx , i_gty   //:#_GLOBAL_TILE_XY_#://     //      [425]
                ,   i_u32 ,   xyd   //:#_BINTILE_MIRROR_#://     //      [425]
                );;                                              //      [425]
                }else{  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     //      [425]
                    ERR("[NOT_SYMRADI_NOT_SYMBILA_2022]");;;     //      [425]
                };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     //      [425]
                                                                 // [448]
            //:------------:#_BILATERAL_OR_RADIAL_#:[448]://     // [448]
            //:------------:#_RADIAL_OR_BILATERAL_#:[448]://     // [448]
                                                                 // [---]
        };; //::::::::::::::::::::::::::::::::::[O_K:424]://     // [424]
        //:------------------------:#_MIRROR_LOOP_#:[424]://     // [424]

    };; //:BOD_END[ F_EDI_PUT_U32 ]:::::::::::::::::::::::::::// // [423]

//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [421]
//|                                               [ @$$$$$@ ]|// // [421]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __MIRMAID__|// // [421]
//|                                               [ @$$$$$@ ]|// // [421]
//|27|27|27|27|27|27|27|27|27|SUBS|27|27|27|27|27|27|27|27|27|// // [421]
//|08|08|08|08|08|08|08|08|08|SUBS|08|08|08|08|08|08|08|08|08|// // [---][102]
//|[ @$$$$$@ ]                                               |// // [---][102]
//|__EDIGAME__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [---][102]
//|[ @$$$$$@ ]                                               |// // [---][102]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [---][102]

    const   F_EDIGAME_MGX_TGX     = "[FIX:TE7_DUX_GTX]" ;        // [153][152]
    const   F_EDIGAME_MGX_DTX     = "[FIX:TE7_DUX_GTX]" ;        // [153][152]
    const   F_EDIGAME_DUX_TGX     = "[FIX:TE7_DUX_GTX]" ;        // [153][152]
    const   F_EDIGAME_DUX_DTX     = "[FIX:TE7_DUX_GTX]" ;        // [153][152]
    const   F_EDIGAME_DUX_TE7_GTX = "[FIX:TE7_DUX_GTX]" ;        // [153][---]
    const   F_EDIGAME_DUX_GTX_TE7 = "[FIX:TE7_DUX_GTX]" ;        // [153][---]
    const   F_EDIGAME_DUX_GTX     = "[FIX:TE7_DUX_GTX]" ;        // [153][---]
                                                                 // [---]
    const   F_EDIGAME_TE7_DUX_GTX = function                     // [153][152]
    PRIVATE_F_EDIGAME_TE7_DUX_GTX(    //: [DUX]===>[GTX] ://     // [153][152]
                                                                 //      [152]
        i_te7 //: @i_te7@ : Input - Tile Exponent[0-7]   ://     // [153]
    ,   i_dux //: @i_dux@ : Input - DiscreteUnit X :-----://     //      [152]
    ){                                                           //      [152]
        //:[ATF]:  DiscreteUnit_X => GlobalTile_X  :[ATF]://     //      [152]

        var   dunspan = d_te7_dun[ i_te7 ];                      // [154][153]
        var     o_gtx =Math.floor( i_dux / dunspan );               [154]
        return( o_gtx );                                         // [154][152]
    };;                                                          // [152]
                                                                 // [---]
    const   F_EDIGAME_MGY_TGY     = "[FIX:TE7_DUY_GTY]" ;        // [153][152]
    const   F_EDIGAME_MGY_DTY     = "[FIX:TE7_DUY_GTY]" ;        // [153][152]
    const   F_EDIGAME_DUY_TGY     = "[FIX:TE7_DUY_GTY]" ;        // [153][152]
    const   F_EDIGAME_DUY_DTY     = "[FIX:TE7_DUY_GTY]" ;        // [153][152]
    const   F_EDIGAME_DUY_TE7_GTX = "[FIX:TE7_DUY_GTY]" ;        // [153][---]
    const   F_EDIGAME_DUY_GTX_TE7 = "[FIX:TE7_DUY_GTY]" ;        // [153][---]
    const   F_EDIGAME_DUY_GTY     = "[FIX:TE7_DUY_GTY]" ;        // [153][---]
                                                                 // [---]
    const   F_EDIGAME_TE7_DUY_GTY = function                     // [153][152]
    PRIVATE_F_EDIGAME_TE7_DUY_GTY(                               // [153][152]
                                                                 //      [152]
        i_te7 //: @i_te7@ : Input - Tile Exponent[0-7]   ://     // [153]
    ,   i_duy //: @i_duy@ : Input - DiscreteUnit Y :-----://     //      [152]
    ){                                                           //      [152]
        //:[ATF]:  DiscreteUnit_Y => GlobalTile_Y  :[ATF]://     //      [152]

        var   dunspan = d_te7_dun[ i_te7 ];                      // [154][153]
        var     o_gty =Math.floor( i_duy / dunspan );               [154]
        return( o_gty );                                         // [154][152]
    };;                                                          // [152]

    const   F_EDIGAME_MOD_LOG = function                         // [103]
    PRIVATE_F_EDIGAME_MOD_LOG(                                   // [103]
                                                                 // [103]
        i_edigame_mod                                            // [103]
    ){                                                           // [103]
        if( c_edigame_edi === i_edigame_mod ){                   // [103]
                                                                 // [103]
            MSG("[EDIGAME:Acting_As:EDITOR]"  );                 // [103]
        }else                                                    // [103]
        if( c_edigame_gam === i_edigame_mod ){                   // [103]
                                                                 // [103]
            MSG("[EDIGAME:Acting_As:GAME]"    );                 // [103]
        }else{                                                   // [103]
            MSG("[EDIGAME:Acting_As:UNKNOWN]" );                 // [103]
        };;                                                      // [103]
    };;                                                          // [103]

//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [---][102]
//|                                               [ @$$$$$@ ]|// // [---][102]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __EDIGAME__|// // [---][102]
//|                                               [ @$$$$$@ ]|// // [---][102]
//|08|08|08|08|08|08|08|08|08|SUBS|08|08|08|08|08|08|08|08|08|// // [---][102]
//|14|14|14|14|14|14|14|14|14|SUBS|14|14|14|14|14|14|14|14|14|// // [180]
//|[ @$$$$$@ ]                                               |// // [180]
//|__KONAMIC__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [180]
//|[ @$$$$$@ ]                                               |// // [180]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [180]
                                                                 // [---]   

    //:#_KONAMIC_SAVECEN_#:[367]:----------------------------:// // [367]
    //:                                                      :// // [367]
    //:     Local_Index:                                     :// // [367]
    //:     1 : [ F _ KONAMIC _ SAVECEN_RAM ]( @_D_KEY_@ )   :// // [368][367]
    //:     2 : [ F _ KONAMIC _ LOADCEN_RAM ]( @_E_KEY_@ )   :// // [368][367]
    //:     3 : [ F _ KONAMIC _ SAVECEN_DSK ]( @_F_KEY_@ )   :// // [368][367]
    //:     4 : [ F _ KONAMIC _ LOADCEN_DSK ]( @_G_KEY_@ )   :// // [368][367]
    //:     5 : [ F _ KONAMIC _ SAVECEN_WEB ]( @_S_KEY_@ )   :// // [368][367]
    //:     6 : [ F _ KONAMIC _ LOADCEN_WEB ]( @_L_KEY_@ )   :// // [368][367]
    //:                                                      :// // [367]
    //:#_KONAMIC_SAVECEN_#:[367]:----------------------------:// // [367]
                                                                 // [367]
        const   F_KONAMIC_SAVECEN_RAM = function                 // [---][367]
        PRIVATE_F_KONAMIC_SAVECEN_RAM(                           // [---][367]
            /**VOID**/                                           // [---][367]
        ){  //:BEG_F_BOD[ SAVECEN_RAM ]:::::::::::::::::::::::// // [368][367]
                                                                 // [368][---]
            LOG( "[BEG:F_KONAMIC.SAVECEN_RAM]" );                // [368][---]
            {                                                    // [368][---]
                let cen_h3x =( 1 ); //: @_CENTER_H3X_@ ::://     // [368][---]
                let cen_h3y =( 1 ); //: @_CENTER_H3Y_@ ::://     // [368][---]
                F_FILEMOB_LOCSAVE( cen_h3x , cen_h3y );          // [368][---]
            }                                                    // [368][---]
            LOG( "[END:F_KONAMIC.SAVECEN_RAM]" );                // [368][---]
                                                                 // [368][---]
        };; //:END_F_BOD[ SAVECEN_RAM ]:::::::::::::::::::::::// // [368][367]                                      
                                                                 // [--------]
        const   F_KONAMIC_LOADCEN_RAM = function                 // [---][367]
        PRIVATE_F_KONAMIC_LOADCEN_RAM(                           // [---][367]
            /**VOID**/                                           // [---][367]
        ){  //:BEG_F_BOD[ LOADCEN_RAM ]:::::::::::::::::::::::// // [368][367]
                                                                 // [368][---]
            LOG( "[BEG:F_KONAMIC.LOADCEN_RAM]" );                // [368][---]
            {                                                    // [368][---]
                let cen_h3x =( 1 ); //: @_CENTER_H3X_@ ::://     // [368][---]
                let cen_h3y =( 1 ); //: @_CENTER_H3Y_@ ::://     // [368][---]
                F_FILEMOB_LOCLOAD( cen_h3x , cen_h3y );          // [368][---]
            }                                                    // [368][---]
            LOG( "[END:F_KONAMIC.LOADCEN_RAM]" );                // [368][---]
                                                                 // [368][---]
        };; //:END_F_BOD[ LOADCEN_RAM ]:::::::::::::::::::::::// // [368][367]

        const   F_KONAMIC_SAVECEN_DSK = function //:@_F_KEY_@:// // [379][367]
        PRIVATE_F_KONAMIC_SAVECEN_DSK(                           // [367]
            /**VOID**/                                           // [367]
        ){                                                       // [367]
            LOG( "[DOING:F_KONAMIC_SAVECEN_DSK]" );              // [379][367]

            F_FILEMOB_SAVEBOX_DSK();                             // [379]

        };;                                                      // [367]
        const   F_KONAMIC_LOADCEN_DSK = function //:@_G_KEY_@:// // [379][367]
        PRIVATE_F_KONAMIC_LOADCEN_DSK(                           // [367]
            /**VOID**/                                           // [367]
        ){                                                       // [367]
                                                                 // [367]
            LOG( "[DOING:F_KONAMIC_LOADCEN_DSK]" );              // [379][367]

            F_FILEMOB_LOADBOX_DSK();                             // [379]

        };;                                                      // [367]
        const   F_KONAMIC_SAVECEN_WEB = function                 // [367]
        PRIVATE_F_KONAMIC_SAVECEN_WEB(                           // [367]
            /**VOID**/                                           // [367]
        ){                                                       // [367]
                                                                 // [367]
            LOG( "[TODO:F_KONAMIC_SAVECEN_WEB]" );               // [367]
        };;                                                      // [367]
        const   F_KONAMIC_LOADCEN_WEB = function                 // [367]
        PRIVATE_F_KONAMIC_LOADCEN_WEB(                           // [367]
            /**VOID**/                                           // [367]
        ){                                                       // [367]
                                                                 // [367]
            LOG( "[TODO:F_KONAMIC_LOADCEN_WEB]" );               // [367]
        };;                                                      // [367]
    //:----------------------------:#_KONAMIC_SAVECEN_#:[367]:// // [367]
    //:#_LEVELPACK_BINARY_FLOOD_FILL_#:[403]:----------------:// // [403][---]
                                                                 // [403][---]
        const   F_KONAMIC_H3X_H3Y_TOG = function                 //      [202]
        PRIVATE_F_KONAMIC_H3X_H3Y_TOG(                           //      [202]
                                                                 //      [202]
            i_h3x                                                //      [202]
        ,   i_h3y                                                //      [202]
                                                                 //      [202]
        ){  //:BOD_BEG[ H3X_H3Y_TOG ]:::::::::::::::::::::::::// // [403][202]
                                                                 //      [202]
            if( 0 === d_konamic_h3x_h3y_tog ){                   //      [202]
                                                                 //      [202]
                let _z_ =( 0x00000000 );  //:#_ZEROFILL_#://     // [403][---]
                F_PIX2048_H3X_H3Y_U32( i_h3x , i_h3y , _z_ );    // [403][202]
            }else                                                //      [202]
            if( 1 === d_konamic_h3x_h3y_tog ){                   //      [202]
                                                                 //      [202]
                let _1_ =( 0xFFFFFFFF );                         // [403][---]
                F_PIX2048_H3X_H3Y_U32( i_h3x , i_h3y , _1_ );    // [403][202]
            }else{                                               //      [202]
                ERR("[BAD_KONAMIC_TOG]");                        //      [202]
            };;                                                  //      [202]
            d_pix2048_dir =( 1 ); //:MarkPix2048AsDirty://       //      [203]
            MSG( "[CALLED:KONAMIC_H3X_H3Y_TOG]" );               //      [203]
        };; //:BOD_END[ H3X_H3Y_TOG ]:::::::::::::::::::::::::// // [403][202]
                                                                 // [---]
    //:----------------:#_LEVELPACK_BINARY_FLOOD_FILL_#:[403]:// // [403]
    //:#_KEYPAD_3X3_DEBUG_FUNCS_#:[404]:---------------------:// // [404]
    //:                                                      :// // [404]
    //:     SUB_FUNCTION_INDEX :                             :// // [404]
    //:                                                      :// // [404]
    //:         1. PAD_TOG : Zero Fill Or One Fill LevelPack.:// // [404]
    //:                                                      :// // [404]
    //:         2. PAD_TEX : SubTexturePush debug  LevelPack.:// // [404]
    //:                                                      :// // [404]
    //:#_KEYPAD_3X3_DEBUG_FUNCS_#:[404]:- - - - - - - - - - -:// // [404]
                                                                 // [404]
        const   F_KONAMIC_PAD_TOG = function //:::::::::::::::// // [404]
        PRIVATE_F_KONAMIC_PAD_TOG(           //:::::::::::::::// // [404]
                                                                 // [404]
            i_enuproc //: @i_enuproc@ : INN - Enum_Procedure :// // [404]
                                                                 // [404]
        ){  //:BOD_BEG[ PAD_TOG ]:::::::::::::::::::::::::::::// // [404]
                                                                 // [---]
            let enuproc =( i_enuproc );                          // [405]
                                                                 // [405]
            //:#_MOV_2022_10_31_AT_12_AM_#:[405]:------------:// // [405][----------------------------]
                                                                 // [405][----------------------------]
                    //:#_INTERDU_#:[403]:--------------------:// // [405][MOV][403][------------------]
                    if( _think_you_are_so_fucking_smart_ ){      // [405][MOV][403][------------------]
                                                                 // [405][MOV][403][------------------]
                        let dum_lut=[                            // [405][MOV][403][------------------]
                            0,0  //: IGNORED ::::::::::::://     // [405][MOV][403][------------------]
                                                                 // [405][MOV][403][------------------]
                        ,   0,2  //: ROW_BOT : dum_001 ::://     // [405][MOV][403][------------------]
                        ,   1,2  //: ROW_BOT : dum_002 ::://     // [405][MOV][403][------------------]
                        ,   2,2  //: ROW_BOT : dum_003 ::://     // [405][MOV][403][------------------]
                                                                 // [405][MOV][403][------------------]
                        ,   0,1  //: ROW_MID : dum_004 ::://     // [405][MOV][403][------------------]
                        ,   1,1  //: ROW_MID : dum_005 ::://     // [405][MOV][403][------------------]
                        ,   2,1  //: ROW_MID : dum_006 ::://     // [405][MOV][403][------------------]
                                                                 // [405][MOV][403][------------------]
                        ,   0,0  //: ROW_TOP : dum_007 ::://     // [405][MOV][403][------------------]
                        ,   1,0  //: ROW_TOP : dum_008 ::://     // [405][MOV][403][------------------]
                        ,   2,0  //: ROW_TOP : dum_009 ::://     // [405][MOV][403][------------------]
                        ];;                                      // [405][MOV][403][------------------]
                        let i =( enuproc-c_konamic_dum_001+1);   // [405][MOV][403][------------------]
                        let x =( dum_lut[ (i*2)+0 ] );           // [405][MOV][403][------------------]
                        let y =( dum_lut[ (i*2)+1 ] );           // [405][MOV][403][------------------]
                                                                 // [405][MOV][403][------------------]
                        F_KONAMIC_H3X_H3Y_TOG(x,y);              // [405][MOV][403][------------------]
                                                                 // [405][MOV][403][------------------]
                        ERR( "[DONT_FUCKING_DO_THIS]");          // [405][MOV][403][------------------]
                    };;                                          // [405][MOV][403][------------------]
                    //:--------------------:#_INTERDU_#:[403]:// // [405][MOV][403][------------------]
                                                                 // [405][MOV][403][------------------]
                    //:#_FOE_#:[403]:------------------------:// // [405][MOV][403][------------------]
                    if( c_konamic_dum_001 === enuproc ){ /////// // [405][MOV][403][MOV][202][--------]
                                                                 // [405][MOV][403][MOV][202][--------]
                        F_KONAMIC_H3X_H3Y_TOG(0,2);;             // [405][MOV][403][MAE][202][--------]
                                    //:_@B____L@_://             // [405][MOV][403][MAE][202][--------]
                    }else                                        // [405][MOV][403][MOV][202][--------]
                    if( c_konamic_dum_002 === enuproc ){ /////// // [405][MOV][403][MOV][202][--------]
                                                                 // [405][MOV][403][MOV][202][--------]
                        F_KONAMIC_H3X_H3Y_TOG(1,2);;             // [405][MOV][403][MAE][202][--------]
                                    //:_@B____M@_://             // [405][MOV][403][MAE][202][--------]
                    }else                                        // [405][MOV][403][MOV][202][--------]
                    if( c_konamic_dum_003 === enuproc ){ /////// // [405][MOV][403][MOV][202][--------]
                                                                 // [405][MOV][403][MOV][202][--------]
                        F_KONAMIC_H3X_H3Y_TOG(2,2);;             // [405][MOV][403][MAE][202][--------]
                                    //:_@B____R_@://             // [405][MOV][403][MAE][202][--------]
                    }else                                        // [405][MOV][403][MOV][202][--------]
                    if( c_konamic_dum_004 === enuproc ){ /////// // [405][MOV][403][MOV][202][--------]
                                                                 // [405][MOV][403][MOV][202][--------]
                        F_KONAMIC_H3X_H3Y_TOG(0,1);;             // [405][MOV][403][MAE][202][--------]
                                    //:_@C____L@_://             // [405][MOV][403][MAE][202][--------]
                    }else                                        // [405][MOV][403][MOV][202][--------]
                    if( c_konamic_dum_005 === enuproc ){ /////// // [405][MOV][403][MOV][202][--------]
                                                                 // [405][MOV][403][MOV][202][--------]
                        F_KONAMIC_H3X_H3Y_TOG(1,1);;             // [405][MOV][403][MAE][202][--------]
                                    //:_@C____M@_://             // [405][MOV][403][MAE][202][--------]
                    }else                                        // [405][MOV][403][MOV][202][--------]
                    if( c_konamic_dum_006 === enuproc ){ /////// // [405][MOV][403][MOV][202][--------]
                                                                 // [405][MOV][403][MOV][202][--------]
                        F_KONAMIC_H3X_H3Y_TOG(2,1);;             // [405][MOV][403][MAE][202][--------]
                                    //:_@C____R@_://             // [405][MOV][403][MAE][202][--------]
                    }else                                        // [405][MOV][403][MOV][202][--------]
                    if( c_konamic_dum_007 === enuproc ){ /////// // [405][MOV][403][MOV][202][--------]
                                                                 // [405][MOV][403][MOV][202][--------]
                        F_KONAMIC_H3X_H3Y_TOG(0,0);;             // [405][MOV][403][MAE][202][--------]
                                    //:_@T____L@_://             // [405][MOV][403][MAE][202][--------]
                    }else                                        // [405][MOV][403][MOV][202][--------]
                    if( c_konamic_dum_008 === enuproc ){ /////// // [405][MOV][403][MOV][202][--------]
                                                                 // [405][MOV][403][MOV][202][--------]
                        F_KONAMIC_H3X_H3Y_TOG(1,0);;             // [405][MOV][403][MAE][202][--------]
                                    //:_@T____M@_://             // [405][MOV][403][MAE][202][--------]
                    }else                                        // [405][MOV][403][MOV][202][--------]
                    if( c_konamic_dum_009 === enuproc ){ /////// // [405][MOV][403][MOV][202][--------]
                                                                 // [405][MOV][403][MOV][202][--------]
                        F_KONAMIC_H3X_H3Y_TOG(2,0);;             // [405][MOV][403][MAE][202][--------]
                                    //:_@T____R@_://             // [405][MOV][403][MAE][202][--------]
                                                                 // [405][MOV][403][MOV][202][--------]
                    }else{                                       // [405][MOV][403][--------][--------]
                        ERR("[INVALID_BRANCH_2022]");            // [405][MOV][403][--------][--------]
                    };;                                          // [405][MOV][403][--------][--------]
                    //:------------------------:#_FOE_#:[403]:// // [405][MOV][403][------------------]
                                                                 // [405][----------------------------]
            //:------------:#_MOV_2022_10_31_AT_12_AM_#:[405]:// // [405][----------------------------]
                                                                 // [---]
        };; //:BOD_END[ PAD_TOG ]:::::::::::::::::::::::::::::// // [404]
                                                                 // [404]
        const   F_KONAMIC_PAD_TEX = function //:::::::::::::::// // [404]
        PRIVATE_F_KONAMIC_PAD_TEX(           //:::::::::::::::// // [404]
                                                                 // [404]
            i_enuproc //: @i_enuproc@ : INN - Enum_Procedure :// // [404]
                                                                 // [404]
        ){  //:BOD_BEG[ PAD_TEX ]:::::::::::::::::::::::::::::// // [404]
                                                                 // [---]
            //:#_NPK_ALIAS_#:[406]:----------------------://     // [406]
                                                                 // [406]
                let npk_b_l =(  c_konamic_dum_001  );            // [406]
                let npk_b_c =(  c_konamic_dum_002  );            // [406]
                let npk_b_r =(  c_konamic_dum_003  );            // [406]
                                                                 // [406]
                let npk_m_l =(  c_konamic_dum_004  );            // [406]
                let npk_m_c =(  c_konamic_dum_005  );            // [406]
                let npk_m_r =(  c_konamic_dum_006  );            // [406]
                                                                 // [406]
                let npk_t_l =(  c_konamic_dum_007  );            // [406]
                let npk_t_c =(  c_konamic_dum_008  );            // [406]
                let npk_t_r =(  c_konamic_dum_009  );            // [406]
                                                                 // [406]
            //:----------------------:#_NPK_ALIAS_#:[406]://     // [406]
            //:#_NPK_X_Y_ETC_#:[406]:--------------------://     // [406]
                                                                 // [406]
                let enu=( i_enuproc /**ENUM_PROCEDURE**/ );      // [406]
                let _p_=( 0 /** PATTERN_ZERO **/         );      // [406]
                                                                 // [406]
                const PAT_H3X_H3Y =( F_HARDTEX_PAT_H3X_H3Y );    // [406]
                                                                 // [406]
                const _b_ =( 2 /** BOTTOM ON Y AXIS **/ );       // [406]
                const _m_ =( 1 /** MIDDLE ON Y AXIS **/ );       // [406]
                const _t_ =( 0 /** TOP    ON Y AXIS **/ );       // [406]
                                                                 // [406]
                const _l_ =( 0 /** LEFT   ON X AXIS **/ );       // [406]
                const _c_ =( 1 /** CENTER ON X AXIS **/ );       // [406]
                const _r_ =( 2 /** RIGHT  ON X AXIS **/ );       // [406]
                                                                 // [406]
            //:----------------------:_NPK_X_Y_ETC_:[406]://     // [406]
            //:#_NPK_BOT_#:[406]:------------------------://     // [406]
                                                                 // [406]
                if( npk_b_l===enu ){ PAT_H3X_H3Y(                // [406]
                                     _p_,_l_,_b_ );; }else       // [416][BUG][406]
                                                                 // [406]
                if( npk_b_c===enu ){ PAT_H3X_H3Y(                // [406]
                                     _p_,_c_,_b_ );; }else       // [416][BUG][406]
                                                                 // [406]
                if( npk_b_r===enu ){ PAT_H3X_H3Y(                // [406]
                                     _p_,_r_,_b_ );; }else       // [416][BUG][406]
                                                                 // [406]
            //:------------------------:#_NPK_BOT_#:[406]://     // [406]
            //:#_NPK_MID_#:[406]:------------------------://     // [406]
                                                                 // [406]
                if( npk_m_l===enu ){ PAT_H3X_H3Y(                // [406]
                                     _p_,_l_,_m_ );; }else       // [416][BUG][406]
                                                                 // [406]
                if( npk_m_c===enu ){ PAT_H3X_H3Y(                // [406]
                                     _p_,_c_,_m_ );; }else       // [416][BUG][406]
                                                                 // [406]
                if( npk_m_r===enu ){ PAT_H3X_H3Y(                // [406]
                                     _p_,_r_,_m_ );; }else       // [416][BUG][406]
                                                                 // [406]
            //:------------------------:#_NPK_MID_#:[406]://     // [406]
            //:#_NPK_TOP_#:[406]:------------------------://     // [406]
                                                                 // [406]
                if( npk_t_l===enu ){ PAT_H3X_H3Y(                // [406]
                                     _p_,_l_,_t_ );; }else       // [416][BUG][406]
                                                                 // [406]
                if( npk_t_c===enu ){ PAT_H3X_H3Y(                // [406]
                                     _p_,_c_,_t_ );; }else       // [416][BUG][406]
                                                                 // [406]
                if( npk_t_r===enu ){ PAT_H3X_H3Y(                // [406]
                                     _p_,_r_,_t_ );; }else       // [416][BUG][406]
                                                                 // [406]
            //:------------------------:#_NPK_TOP_#:[406]://     // [406]
            //:#_OH_NO_YOU_DIDNT_#:[406]:----------------://     // [406]
            {;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [406]
                                                                 // [406]
                ERR( "[YOU_DONE_FUCKED_YOURSELF_2022]" );        // [406]
                                                                 // [406]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [406]
            //:----------------:#_OH_NO_YOU_DIDNT_#:[406]://     // [406]
            //:#_NPK_LOGGING_#:[416]:--------------------://     // [416]
                                                                 // [416]
                if( enu===npk_b_l ){ MSG( "[NPK_B_L]" ); };      // [416]
                if( enu===npk_b_c ){ MSG( "[NPK_B_C]" ); };      // [416]
                if( enu===npk_b_r ){ MSG( "[NPK_B_R]" ); };      // [416]
                                                                 // [416]
                if( enu===npk_m_l ){ MSG( "[NPK_M_L]" ); };      // [416]
                if( enu===npk_m_c ){ MSG( "[NPK_M_C]" ); };      // [416]
                if( enu===npk_m_r ){ MSG( "[NPK_M_R]" ); };      // [416]
                                                                 // [416]
                if( enu===npk_t_l ){ MSG( "[NPK_T_L]" ); };      // [416]
                if( enu===npk_t_c ){ MSG( "[NPK_T_C]" ); };      // [416]
                if( enu===npk_t_r ){ MSG( "[NPK_T_R]" ); };      // [416]
                                                                 // [416]
            //:--------------------:#_NPK_LOGGING_#:[416]://     // [416]
                                                                 // [---]
        };; //:BOD_END[ PAD_TEX ]:::::::::::::::::::::::::::::// // [404]
                                                                 // [404]
    //:---------------------:#_KEYPAD_3X3_DEBUG_FUNCS_#:[404]:// // [404]
                                                                 // [---] 
    const   F_KONAMIC_EVT_ASC = "[FIX:KONAMIC_EVT_KEY]" ;        // [180]
                                                                 // [180]
    const   F_KONAMIC_EVT_KEY = function                         // [180]
    PRIVATE_F_KONAMIC_EVT_KEY(                                   // [180]
                                                                 // [180]
        i_evt_key                                                // [180]
    ){                                                           // [180]
        //:[ATF]:----------------------------------------://     // [180]
        //:                                              ://     // [180]
        //:       Read keyboard event and decide         ://     // [180]
        //:       if we should execute debug code.       ://     // [180]
        //:                                              ://     // [180]
        //:----------------------------------------:[ATF]://     // [180]
                                                                 // [---]
        let o_did_akonami =( 0 );                                // [420]
                                                                 // [---]
        var kon_act =( 0 /** Konamic Just Activated?**/ );       // [187]
        var enuproc =( 0 /** ENUmeration - PROCedure**/ );       // [202]
                                                                 // [---]
        //:#_CIRCULAR_SCROLL_WIN_#:[188]:----------------://     // [188]
        //:                                                      // [188]
        //: arr_ark = [ U , U , D , D , L , R , L , R ]  ://     // [188]
        //: arr_win = [ L , R , U , U , D , D , L , R ]  ://     // [188]
        //:                                                      // [188]
                                                                 // [188]
            let arr_ark = d_konamic_ark ;  //: @arr_ark@ ://     // [188]
            let arr_win = d_konamic_win ;  //: @arr_win@ ://     // [188]
                                                                 // [188]
            let ptr_ark   ; //:Arrow Key Pointer         ://     // [188][MOV][187]
            let ptr_win   ; //:Scrolling Window Pointer  ://     // [188][MOV][187]
                                                                 // [188]
            let a_0 =(             0 );                          // [188]
            let a_1 =( c_konamic_m_i );                          // [188]
            let a_i ; //: a_i ==[ a_0 to a_1 ]inclusive  ://     // [188]
                                                                 // [188]
            let w_0 =(( d_konamic_w_p + 1 )%(8));                // [188]
            let w_1 =(  d_konamic_w_p ); //: #_WNCIATB_# ://     // [188]
            let w_i ; //: w_i ==[ w_0 to w_1 ]inclusive  ://     // [188]
                                                                 // [188]
            ASS( 8 ===( c_konamic_m_i + 1 ) , "[KMI+1]" );       // [188]
                                                                 // [188]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [188]
        //:                                              ://     // [188]
        //:             a_0 <------ ptr_ark ------> a_1  ://     // [188]
        //:              V                           V   ://     // [188]
        //:  arr_ark = [ U , U , D , D , L , R , L , R ] ://     // [188]
        //:                                              ://     // [188]
        //:      a_0                 w_0                 ://     // [188]
        //:       V                   V                  ://     // [188]
        //:      [U][U][D]           [U][U][D]           ://     // [188]
        //:  a_1>[R]   [D]  ===  w_1>[R]   [D]           ://     // [188]
        //:      [L][R][L]           [L][R][L]           ://     // [188]
        //:                                              ://     // [188]
        //:  arr_win = [ L , R , U , U , D , D , L , R ] ://     // [188]
        //:                  ^   ^                       ://     // [188]
        //:               [ w_1 w_0  ]<--- ptr_win       ://     // [188]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [188]
                                                                 // [188]
        //:----------------:#_CIRCULAR_SCROLL_WIN_#:[188]://     // [188]
                                                                 // [---]
        var ark_raw =( 0x00 );  //: ARrow_Key:eNUM       ://     // [187][181]
        var ark_exp =( 0xFF );  //: ARrow_Key:EXPECTED   ://     // [187][181]
        var ark_got =( 0x99 );  //: ARrow_Key:GOTTEN     ://     // [187][---]
        ASS( c_konamic_ark_k_0 === 37 ,  "[@KONAMIC_K_0@]");     // [187][181]
        ASS( c_konamic_ark_k_1 === 40 ,  "[@KONAMIC_K_1@]");     // [187][181]
        if( i_evt_key.keyCode  >=  37    //: @ARK_LEF@   ://     // [187][181]
        &&  i_evt_key.keyCode  <=  40    //: @ARK_DOW@   ://     // [187][181]
        ){                                                       // [187][181]
            const NO_OFFSET =( 0 );                              // [---][181]
            ark_raw=( i_evt_key.keyCode + NO_OFFSET );           // [187][181]
        };;                                                      // [187][181]
        if( 1 === 1 ){                                           // [187][181]
            //:#_ADD_NEXT_CHARACTER_TO_SCROLLING_WINDOW_#://     // [187]
            ASS( d_konamic_w_p >= 0             , "[KWP:LOW]" ); // [187]
            ASS( d_konamic_w_p <= c_konamic_m_i , "[KWP:HIG]" ); // [187]
            d_konamic_win[ d_konamic_w_p ]=( ark_raw );          // [187]
                           d_konamic_w_p ++ ;                    // [187]
            if(            d_konamic_w_p > c_konamic_m_i ){      // [187]
                           d_konamic_w_p =( 0 );                 // [187]
            };;                                                  // [187]
                                                                 // [187]
            //:Check_Scrolling_Window_For_Konami_Code://         // [187]
            let dex , din , inv ;                                // [187]
                kon_act =( 1 /**Until_Proven_Not**/ );           // [187]
            for( dex = 0 ; dex <= c_konamic_m_i ; dex ++ ){      // [187]
                                                                 // [187]
                inv =( c_konamic_m_i - dex );//:@INV_STP@://     // [187]
                                                                 // [187]
                din =( d_konamic_w_p - 1 )-( dex );              // [187]
                if( din < 0 ){                                   // [187]
                    din =( ( c_konamic_m_i+1 )+din );            // [187]
                };;                                              // [187]
                ASS( din >= 0 , "[DINNEG]" );                    // [187]
                                                                 // [187]
                ptr_ark = inv ;                                  // [187]
                ptr_win = din ;                                  // [187]
                                                                 // [---]
                //:#_CIRCULAR_SCROLL_WIN_#:[188]:------------:// // [188]
                if( d_bug >= 1 ){                                // [188]
                                                                 // [188]
                    a_i =( a_1 - dex ); //:AKA[ ptr_ark ]://     // [188]
                    w_i =( w_1 - dex ); //:AKA[ ptr_win ]://     // [188]
                                                                 // [188]
                    if( w_i < 0 ){ w_i = 8 + w_i ; };            // [188]
                    ASS( a_i >= 0 && a_i <=(8-1) );              // [188]
                    ASS( w_i >= 0 && w_i <=(8-1) );              // [188]
                                                                 // [188]
                    if( a_i != ptr_ark                           // [188]
                    ||  w_i != ptr_win                           // [188]
                    ){                                           // [188]
                        ERR("[DOESNT_MATCH_DIAGRAM]");           // [188]
                    };;                                          // [188]
                };;                                              // [188]
                //:------------:#_CIRCULAR_SCROLL_WIN_#:[188]:// // [188]
                                                                 // [---][187]
                ark_exp =( arr_ark[ptr_ark] ); //:konamic_ark:// // [188][187]
                ark_got =( arr_win[ptr_win] ); //:konamic_win:// // [188][187]
                                                                 // [---][187]
                if( ark_exp != ark_got ){                        // [---][187]
                                                                 // [---][187]
                    kon_act =( 0 );                              // [---][187]
                    break;                                       // [---][187]
                };;                                              // [---][187]
            };;                                                  // [---][187]
        };; //: #_BUT_NO_ELSE_IF_WE_ALWAYS_CHECK_# :::::::::::// // [187][181]

        if(      kon_act  >= 1 ){                                // [187]
                                                                 // [187]
            d_konamic_act =( 1 ); //:#_KONAMIC_J_ACTIVE_#://     // [187]
                                                                 // [187]
        }else                                                    // [187]
        if( d_konamic_act <= 0 ){                                //      [181]
            /** DO NOTHING **/                                   //      [181]
        }else                                                    //      [181]
        if( d_konamic_act >= 1 /** Konami code Active ? **/ ){   //      [181]
            d_konamic_act =( 0 );                                //      [181]
                                                                 //      [181]
            var asc_key =( 0 ); /** ASCII 0 to 127   **/         // [182][---]
            var asc_has =( 0 ); /** ASCII Exists ?   **/         // [182][---]
                                                                 // [---]
            var k26_has =( 0 ); /** A-Z   Ascii ?    **/         // [---][182]
            var k26     =( 0 ); /** Zero Indexed A-Z **/         // [---][182]
                                                                 // [---]
            var n10_has =( 0 ); /** 0-9 Numpad ?     **/         // [202]
            var n10     =( 0 ); /** Zero Indexed 0-9 **/         // [202]
                                                                 // [---]
            var str_key =(                                       // [182][181]
                String.prototype.toUpperCase.call(               // [182][181]
                    ( i_evt_key.key || "[nil][str_key]" )        // [182][181]
                                                                 // [182][181]
                ));;                                             // [182][181]
            if( 0 //:::::::::::::::[#_KONAMIC_ZEROFIX_#][419]:// // [419]
            ||  ( str_key === "ARROWLEFT"  )                     // [419]
            ||  ( str_key === "ARROWRIGHT" )                     // [419]
            ||  ( str_key === "ARROWUP"    )                     // [419]
            ||  ( str_key === "ARROWDOWN"  )                     // [419]
            ||  ( str_key.length !== 1     )                     // [419]
            ){ //::::::::::::::::::[#_KONAMIC_ZEROFIX_#][419]:// // [419]
                                                                 // [419]
                /** ************************************ **/     // [419]
                /** Do Nothing. Not A Valid Key To Press **/     // [419]
                /** After Activating The Konami Code     **/     // [419]
                /** Shortcuts Via The Arrow Key !!!!!!!! **/     // [419]
                /** ************************************ **/     // [419]
                                                                 // [419]
            }else //:::::::::::::::[#_KONAMIC_ZEROFIX_#][419]:// // [419]
            if( HAS( str_key ) ){                                // [---][182]
                                                                 // [---][182]
                var str_upp = str_key.toUpperCase();             // [---][182]
                asc_key =( str_upp.charCodeAt( 0 ) );            // [---][182]
                if( asc_key >= 0 && asc_key <= 127 ){            // [---][182]
                                                                 // [---][182]
                    asc_has =( 1 );                              // [---][182]
                    if( asc_key >= c_konamic_az0                 // [---][182]
                    &&  asc_key <= c_konamic_az1                 // [---][182]
                    ){                                           // [---][182]
                                                                 // [---][182]
                        k26_has =( 1 );                          // [---][182]
                        k26     =( asc_key - c_konamic_az0 );    // [---][182]
                        ASS( k26 >=  0   , "[K26_LOW]" );        // [---][182]
                        ASS( k26 <=(26-1), "[K26_HIG]" );        // [---][182]
                    };;                                          // [---][182]
                };;                                              // [---][182]
            };;                                                  // [---][182]
            let konamic_listening_to_numpad =( 203 );            // [203]
            if( konamic_listening_to_numpad  ){                  // [203]
                                                                 // [203]
                n10 = F_EVT_N10( i_evt_key );                    // [205][203]
                if( n10 >= 0 ){ n10_has =( 777 );  };            // [203]
            };;                                                  // [203]
                                                                 // [---][182]
            if( (!k26_has)&&(!n10_has) ){                        // [202][182]
                                                                 // [---][182]
                MSG( "[U_U_D_D_L_R_L_R]THEN[ 'A' - 'Z' ]" );     // [---][182]
                MSG( "[******( OR_NUMPAD[ '0' - '9' ] )]" );     // [202][---]
            }else                                                // [---][182]
            if( n10_has ){                                       // [202]
                                                                 // [202]
                enuproc =( d_konamic_lut_pad[ n10 ] );           // [202][---]
            }else                                                // [202]
            if( k26_has ){                                       // [---][182]
                                                                 // [---][182]
                enuproc =( d_konamic_lut_a_z[ k26 ] );           // [202][182]
            }else{                                               // [---][182]
                                                                 // [---]
                ERR("[SILENT_HILL_SLOT_MACHINES_ARE_LAME]");     // [---][182]
                                                                 // [---]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [202][182][---]
                                                                 // [-------------]
                                                                 // [---][202][---]
            if( (k26_has)||(n10_has) ){                          // [---][202][---]
                                                                 // [---]
                o_did_akonami=( 1 );                             // [420]
                                                                 // [---] 
                let _i_ = c_konamic_invalid ;                    // [---][202][---]
                if( enuproc <=  0 ){ ERR("[ENUPROC_NPI]");};     // [---][202][---]
                if( enuproc ===_i_){ ERR("[ENUPROC_INV]");};     // [---][202][---]
                                                                 // [---][202][---]
                if( c_konamic_pixdump === enuproc ){ //:[465]:// // [465][--------]
                                                                 // [465][--------]
                    F_PIXDUMP_RUN(); /** @Y_H_O_F_J@ **/         // [465][--------]
                                                                 // [465][--------]
                }else //::::::::::::::::::::::::::::::::[465]:// // [465][--------]
                if( 0 //::::::::::::::::::::::::::::::::[367]:// // [367][--------]
                ||  c_konamic_savecen_ram == enuproc             // [367][--------]
                ||  c_konamic_loadcen_ram == enuproc             // [367][--------]
                ||  c_konamic_savecen_dsk == enuproc             // [367][--------]
                ||  c_konamic_loadcen_dsk == enuproc             // [367][--------]
                ||  c_konamic_savecen_web == enuproc             // [367][--------]
                ||  c_konamic_loadcen_web == enuproc             // [367][--------]
                ||  0                                            // [367][--------]
                ){  //::::::::::::::::::::::::::::::::::[367]:// // [367][--------]
                                                                 // [367][--------]
                    let e_0 =( c_konamic_ram_dsk_web_000  );     // [367][--------]
                    let e_1 =( c_konamic_ram_dsk_web_001  );     // [367][--------]
                    ASS(e_1-e_0+1 === 6 , "[BAD_RNG_2022]");     // [367][--------]
                    let epi =( enuproc - e_0 );                  // [367][--------]
                                                                 // [367][--------]
                    let epi_lut = "[#_DECIDED_NO_EPI_LUT_#]" ;   // [367][--------]
                                                                 // [367][--------]
                    if( enuproc === c_konamic_savecen_ram ){     // [367][--------]
                                    F_KONAMIC_SAVECEN_RAM();     // [367][--------]
                    }else                                        // [367][--------]
                    if( enuproc === c_konamic_loadcen_ram ){     // [367][--------]
                                    F_KONAMIC_LOADCEN_RAM();     // [367][--------]
                    }else                                        // [367][--------]
                    if( enuproc === c_konamic_savecen_dsk ){     // [367][--------]
                                    F_KONAMIC_SAVECEN_DSK();     // [367][--------]
                    }else                                        // [367][--------]
                    if( enuproc === c_konamic_loadcen_dsk ){     // [367][--------]
                                    F_KONAMIC_LOADCEN_DSK();     // [367][--------]
                    }else                                        // [367][--------]
                    if( enuproc === c_konamic_savecen_web ){     // [367][--------]
                                    F_KONAMIC_SAVECEN_WEB();     // [367][--------]
                    }else                                        // [367][--------]
                    if( enuproc === c_konamic_loadcen_web ){     // [367][--------]
                                    F_KONAMIC_LOADCEN_WEB();     // [367][--------]
                    }else{                                       // [367][--------]
                        ERR("[INVALID_RAM_DSK_WEB_2022]");       // [367][--------]
                    };;                                          // [367][--------]
                }else   //::::::::::::::::::::::::::::::[367]:// // [367][--------]
                if( c_konamic_dum_000 === enuproc ){ /////////// // [---][202][---]
                                                                 // [---][202][---]
                    let tog = d_konamic_h3x_h3y_tog   ;          // [---][202][---]
                    if(  0 === tog ){ tog = 1 ; }else            // [---][202][---]
                    if(  1 === tog ){ tog = 0 ; }else            // [---][202][---]
                    { ERR("[YOUVE_BEEN_A_BAD_TOG]"); };          // [---][202][---]
                                                                 // [---][202][---]
                    d_konamic_h3x_h3y_tog =( tog );              // [---][202][---]
                }else                                            // [---][202][---]
                //:DIV_1_OF_3[_KONAMIC_3X3_NUMPAD_]:::::::::::// // [403][--------]
                if(                                              // [403][--------]
                0x00                                             // [403][--------]
                ||  c_konamic_dum_001 === enuproc                // [403][--------]
                ||  c_konamic_dum_002 === enuproc                // [403][--------]
                ||  c_konamic_dum_003 === enuproc                // [403][--------]
                ||  c_konamic_dum_004 === enuproc                // [403][--------]
                ||  c_konamic_dum_005 === enuproc                // [403][--------]
                ||  c_konamic_dum_006 === enuproc                // [403][--------]
                ||  c_konamic_dum_007 === enuproc                // [403][--------]
                ||  c_konamic_dum_008 === enuproc                // [403][--------]
                ||  c_konamic_dum_009 === enuproc                // [403][--------]
                )                                                // [403][--------]
                //:DIV_2_OF_3[_KONAMIC_3X3_NUMPAD_]:::::::::::// // [403][--------]
                {   //////////////////////////////////////////// // [403]
                                                                 // [---]
                    //:#_FLOOD_OR_PUSH_#:[404]:--------------:// // [404]
                    //:#_PUSH_OR_FLOOD_#:[404]:--------------:// // [404]
                    {                                            // [404]
                        let tog_tex =(  d_bug_konamic_pad );     // [404]
                                                                 // [404]
                        if( "[TOG]" === tog_tex ){               // [404]
                                                                 // [404]
                            F_KONAMIC_PAD_TOG( enuproc );        // [404]
                        }else                                    // [404]
                        if( "[TEX]" === tog_tex ){               // [404]
                                                                 // [404]
                            F_KONAMIC_PAD_TEX( enuproc );        // [404]
                        }else{                                   // [404]
                            ERR("[NOT_TOG_OR_TEX_2022]");        // [404]
                        };;                                      // [404]
                    }                                            // [404]
                    //:--------------:#_PUSH_OR_FLOOD_#:[404]:// // [404]
                    //:--------------:#_FLOOD_OR_PUSH_#:[404]:// // [404]
                                                                 // [---]
                    //:#_MOV_2022_10_31_AT_12_AM_#://            // [405]
                                                                 // [403][--------][--------]
                }/////////////////////////////////////////////// // [202][--------][--------]
                //:DIV_3_OF_3[_KONAMIC_3X3_NUMPAD_]:::::::::::// // [403][--------][--------]
                                                                 // [-------------]
                      //:--------------------------------://     // [202][--------]
                else  //: IF_ELSE_WHAT_BITCH?MAKE_MY_DAY ://     // [202][--------]
                      //:--------------------------------://     // [202][--------]
                if( c_konamic_dumones === enuproc ){             // [202][MOV][182]
                                                                 // [202][MOV][---]
                    F_PIX2048_H3X_H3Y_U32(0,0,0xFFFFFFFF);       // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(1,0,0xFFFFFFFF);       // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(2,0,0xFFFFFFFF);       // [202][MOV][186]
                                                                 // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(0,1,0xFFFFFFFF);       // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(1,1,0xFFFFFFFF);       // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(2,1,0xFFFFFFFF);       // [202][MOV][186]
                                                                 // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(0,2,0xFFFFFFFF);       // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(1,2,0xFFFFFFFF);       // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(2,2,0xFFFFFFFF);       // [202][MOV][186]
                                                                 // [202][MOV][186]
                    MSG( "[DONE:c_konamic_dumones]" );           // [202][MOV][186]
                                                                 // [202][MOV][---]
                }else                                            // [202][MOV][182]
                if( c_konamic_dumzero === enuproc ){             // [202][MOV][182]
                                                                 // [202][MOV][---]
                    F_PIX2048_H3X_H3Y_U32(0,0,0x00000000);       // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(1,0,0x00000000);       // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(2,0,0x00000000);       // [202][MOV][186]
                                                                 // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(0,1,0x00000000);       // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(1,1,0x00000000);       // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(2,1,0x00000000);       // [202][MOV][186]
                                                                 // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(0,2,0x00000000);       // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(1,2,0x00000000);       // [202][MOV][186]
                    F_PIX2048_H3X_H3Y_U32(2,2,0x00000000);       // [202][MOV][186]
                                                                 // [202][MOV][186]
                    MSG( "[DONE:c_konamic_dumzero]" );           // [202][MOV][186]
                                                                 // [202][MOV][---]
                }else                                            // [202][MOV][182]
                if( c_konamic_binfont === enuproc ){             // [216][--------]
                                                                 // [216][--------]
                    let bin_tex =("" /////////////////////////// // [216][--------]
                    +   "KANJI CODER IS A 9000X PROGRAMMER!!!!!" // [216][--------]
                    +   "NO CAP MY ZOOMERS!!!!!!!!!!!!!!!!!!!!!" // [216][--------]
                    +   "I KNOW WHAT'S GOOD AND IT STARTS !!!!!" // [216][--------]
                    +   "WITH A 'P' AND ENDS WITH A 'G'   !!!!!" // [216][--------]
                    +   "ONE TIME I ALMOST DIED. WELL.....!!!!!" // [216][--------]
                    +   "ACTUALLY MANY TIMES. KANJI CODER !!!!!" // [216][--------]
                    +   "IS SO POWERFULL BECAUSE EVERY      !!!" // [216][--------]
                    +   "TIME HE KILLS ONE OF HIS DOUBLES   !!!" // [216][--------]
                    +   "IN AN ALTERNATE UNIVERSE HE GAINS  !!!" // [216][--------]
                    +   "THEIR POWER. DON'T BE CONFUSED     !!!" // [216][--------]
                    +   "THOUGH, IT ISN'T MURDER OR SUICIDE.!!!" // [216][--------]
                    +   "ITS JUST THAT IF I AM SO LUCKY TO  !!!" // [216][--------]
                    +   "STILL BE ALIVE RIGHT NOW THAT      !!!" // [216][--------]
                    +   "MEANS MANY OF MY DOUBLES IN THE    !!!" // [216][--------]
                    +   "OTHER UNIVERSES WEREN'T SO LUCKY.  !!!" // [216][--------]
                    +   "BUT THEIR LOSS IS MY GAIN.         !!!" // [216][--------]
                    );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [216][--------]
                                                                 // [216][--------]
                    F_BINFONT_STAMTEX( ///////////////////////// // [216][--------]
                                                                 // [216][--------]
                        d_pix2048                                // [216][--------]
                    ,        2048                                // [216][--------]
                    ,        2048                                // [216][--------]
                    ,     bin_tex    //:AKA[ ai_prompt_text ]:// // [216][--------]
                    );; //////////////////////////////////////// // [216][--------]
                                                                 // [216][--------]
                    d_pix2048_dir=( 1 /**We_Are_Dirty_Now**/ );  // [216][--------]
                                                                 // [216][--------]
                    MSG("[(C)===>(BINFONT_STAMTEX)]");           // [216][--------]
                                                                 // [216][--------]
                }else                                            // [216][--------]
                if( c_konamic_nothing === enuproc ){             // [202][MOV][182]
                                                                 // [202][MOV][182]
                    MSG("[O_K:AVAILABLE_FOR_BINDING!!]");        // [202][MOV][182]
                                                                 // [---]
                    o_did_akonami=( 0+o_did_akonami+0 );         // [420]
                                                                 // [---]
                }else                                            // [202][MOV][182]
                if( c_konamic_invalid === enuproc ){             // [202][MOV][182]
                                                                 // [202][MOV][182]
                    ERR("[ERR:NOT_ALLOWED_TO_USE_THIS]");        // [202][MOV][182]
                }else{                                           // [202][MOV][182]
                    ERR("[ERR:FORGOT_TO_ADD_PROCEDURE]");        // [202][MOV][182]
                };;                                              // [202][MOV][182]
            };;                                                  // [202][--------]
                                                                 // [---]
        }else{                                                   // [181]
            ERR("[INVALID_KONAMIC_CASE_2022]");                  // [181]
        };;                                                      // [181]
                                                                 // [---]
        return( o_did_akonami /** Did Konami Shortcut? **/ );    // [420]
                                                                 // [---]
    };; //:::::::::::::::::::::::ENDFUNC[ F_KONAMIC_EVT_KEY ]:// // [186][180]
                                                                 // [180]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [180]
//|                                               [ @$$$$$@ ]|// // [180]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __KONAMIC__|// // [180]
//|                                               [ @$$$$$@ ]|// // [180]
//|14|14|14|14|14|14|14|14|14|SUBS|14|14|14|14|14|14|14|14|14|// // [180]
//|03|03|03|03|03|03|03|03|03|SUBS|03|03|03|03|03|03|03|03|03|// // [---][???]
//|[ @$$$$$@ ]                                               |// // [---][???]
//|__KEYMAST__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [---][???]
//|[ @$$$$$@ ]                                               |// // [---][???]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [---][???]

    //:------------------------------------------------------://
    //: @_G_@ : Generally                                    :// // [068] 
    //: @_S_@ : Specifically                                 :// // [068] 
    //: @a_k@ : @asc_key@ : Ascii(_G_) Key(_S_)              :// // [068] 
    //: @e_k@ : @evt_key@ : Event(_G_) Key(_S_)              :// // [068] 
    //:------------------------------------------------------://

    const   F_KEYMAST_EVT_ASC = function                        // [068] 
    PRIVATE_F_KEYMAST_EVT_ASC(                                  // [068] 
                                                                // [068] 
        i_evt_key //:( i_evt_key )=>( o_asc_key )://            // [068] 
    ){                                                          // [068] 
                                                                // [---]
        //:#_OLD_EVT_ASC_LOGIC_DOESNT_WORK_FOR_PLUS_MINUS_#://  // [093]
                                                                // [093]
        var o_asc_key =(                                        // [093]
            String.prototype.toUpperCase.call(                  // [093]
            (                                                   // [093]
                i_evt_key.key                                   // [093]
                                                                // [093]
            )||"[nil][o_asc_key]" ));;                          // [093]
                                                                // [---]
        return( o_asc_key );                                    // [068] 
    };;                                                         // [068] 
                                                                // [---]

    const   F_KEYMAST_ZOM = function                             // [115]
    PRIVATE_F_KEYMAST_ZOM(                                       // [115]
                                                                 // [115]
        i_ioo //: @ioo@ : In_Or_Out? ://                         // [115]
    ){                                                           // [115]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [115]
        //: use <= 0 : Raw Low Level VP1 Direct Control  ://     // [115]
        //: use >= 1 : High Level Camera Modifies VP1    ://     // [115]
        //:::::::::::::::::::::::::::::::::::::::::::::::://     // [115]
                                                                 // [115]
        if( d_camerah_use <= 0 ){   //: #_LOW_L_CAM_C_#  ://     // [115]
                                                                 // [115]
            if( (0+1) === i_ioo ){                               // [115]
                                                                 // [---]
                //:::::::::::::::::::::::::::::::::::://         // [115][093]
                //: ZOOM_INN ===> MAKE[ VP1 ]SMALLER ://         // [115][093]
                //:::::::::::::::::::::::::::::::::::://         // [115][093]
                                                                 // [115][093]
                //:    [x_0] > > > [+] < < < [x_1]   ://         // [115][093]
                //:    [y_0] > > > [+] < < < [y_1]   ://         // [115][093]
                                                                 // [115][093]
                let new_x_0 = d_vp1[ x_0 ] + c_dut ;             // [115][093]
                let new_x_1 = d_vp1[ x_1 ] - c_dut ;             // [115][093]
                let new_y_0 = d_vp1[ y_0 ] + c_dut ;             // [115][093]
                let new_y_1 = d_vp1[ y_1 ] - c_dut ;             // [115][093]
                                                                 // [115][093]
                if( ( new_x_0 > new_x_1 )                        // [115][093]
                ||  ( new_y_0 > new_y_1 )                        // [115][093]
                ){  //:::::::::::::::::::::::::::::::::::://     // [115][093]
                    //: DO_NOTHING. Viewport Is Max      ://     // [115][093]
                    //: Smallness. Any smaller and we    ://     // [115][093]
                    //: enter the upside  down world.    ://     // [115][093]
                    //:::::::::::::::::::::::::::::::::::://     // [115][093]
                    console.log("[CANNOT_ZOOM_IN_ANYMORE]");     // [115][093]
                }else{                                           // [115][093]
                    d_vp1[ x_0 ]=( new_x_0 );                    // [115][093]
                    d_vp1[ x_1 ]=( new_x_1 );                    // [115][093]
                    d_vp1[ y_0 ]=( new_y_0 );                    // [115][093]
                    d_vp1[ y_1 ]=( new_y_1 );                    // [115][093]
                };;                                              // [115][093]
            }else                                                // [115]
            if( (0-1) === i_ioo ){                               // [115]
                                                                 // [---]
                //:::::::::::::::::::::::::::::::::::://         // [115][093]
                //: ZOOM_OUT ===> MAKE[ VP1 ]BIGGER  ://         // [115][093]
                //:::::::::::::::::::::::::::::::::::://         // [115][093]
                                                                 // [115][093]
                //:    [x_0] < < < [-] > > > [x_1]   ://         // [115][093]
                //:    [y_0] < < < [-] > > > [y_1]   ://         // [115][093]
                                                                 // [115][093]
                let new_x_0 = d_vp1[ x_0 ] - c_dut ;             // [115][093]
                let new_x_1 = d_vp1[ x_1 ] + c_dut ;             // [115][093]
                let new_y_0 = d_vp1[ y_0 ] - c_dut ;             // [115][093]
                let new_y_1 = d_vp1[ y_1 ] + c_dut ;             // [115][093]
                                                                 // [115][093]
                if( ( new_x_0 < 0 || new_x_1 > (c_dum-1) )       // [115][093]
                ||  ( new_y_0 < 0 || new_y_1 > (c_dum-1) )       // [115][093]
                ){  //:::::::::::::::::::::::::::::::::::://     // [115][093]
                    //: DO_NOTHING. Viewport is Max      ://     // [115][093]
                    //: Bigness. Any larger and we       ://     // [115][093]
                    //: we will have integer overlow.    ://     // [115][093]
                    //: Nothing lays beyond[ THE_DUM ].  ://     // [115][093]
                    //:::::::::::::::::::::::::::::::::::://     // [115][093]
                    console.log("[CANNOT_ZOOM_OUT_ANYMORE]");    // [115][093]
                }else{                                           // [115][093]
                    d_vp1[ x_0 ]=( new_x_0 );                    // [115][093]
                    d_vp1[ x_1 ]=( new_x_1 );                    // [115][093]
                    d_vp1[ y_0 ]=( new_y_0 );                    // [115][093]
                    d_vp1[ y_1 ]=( new_y_1 );                    // [115][093]
                };;                                              // [115][093]
                                                                 // [---]
            }else{                                               // [115]
                ERR("[NOT_ZOOM_IN_OR_OUT]");                     // [115]
            };;                                                  // [115]
        }else                                                    // [115]
        if( d_camerah_use >= 1 ){   //: #_HIG_L_CAM_C_#  ://     // [115]
                                                                 // [---]
            F_CAMERAH_ZOM( i_ioo );                              // [117]
                                                                 // [---]
        }else{                                                   // [115]
            ERR("[INVALID_CAMERA_SETTING]");                     // [115]
        };;                                                      // [115]
    };;                                                          // [115]

    const   F_KEYMAST_PAN = function                             // [115]
    PRIVATE_F_KEYMAST_PAN(                                       // [115]
                                                                 // [115]
        i_dvx                                                    // [115]
    ,   i_dvy                                                    // [115]
    ){                                                           // [115]
        if( d_eci >= 1 ){                                        // [115]
            ASS_TRINARY( i_dvx , "[i_dvx]" );                    // [115]
            ASS_TRINARY( i_dvy , "[i_dvy]" );                    // [115]
        };;                                                      // [115]
                                                                 // [115]
        if( d_camerah_use <= 0 ){   //: #_LOW_L_CAM_C_#  ://     // [115]
                                                                 // [---]
            let o_x =( i_dvx * c_dut );  //:#_1TILE_PAN_#://     // [116]
            let o_y =( i_dvy * c_dut );  //:#_1TILE_PAN_#://     // [116]
                                                                 // [116]
            var new_x_0 =( d_vp1[ x_0 ] + o_x );                 // [116]
            var new_x_1 =( d_vp1[ x_1 ] + o_x );                 // [116]
            var new_y_0 =( d_vp1[ y_0 ] + o_y );                 // [116]
            var new_y_1 =( d_vp1[ y_1 ] + o_y );                 // [116]
                                                                 // [116]
            if( new_x_0 < 0 || new_x_1 >( c_dum - 1 ) ){         // [116]
                                                                 // [116]
                //:DO_NOTHING_BECAUSE_OUT_OF_BOUNDS://           // [116]
                console.log( "[REFUSE_TO_PAN:VP1.X]" );          // [116]
            }else{                                               // [116]
                                                                 // [116]
                d_vp1[ x_0 ]= new_x_0 ;                          // [116]
                d_vp1[ x_1 ]= new_x_1 ;                          // [116]
            };;                                                  // [116]
            if( new_y_0 < 0 || new_y_1 >( c_dum - 1 ) ){         // [116]
                                                                 // [116]
                //:DO_NOTHING_BECAUSE_OUT_OF_BOUNDS://           // [116]
                console.log( "[REFUSE_TO_PAN:VP1.Y]" );          // [116]
            }else{                                               // [116]
                                                                 // [116]
                d_vp1[ y_0 ]= new_y_0 ;                          // [116]
                d_vp1[ y_1 ]= new_y_1 ;                          // [116]
            };;                                                  // [116]
                                                                 // [---]
        }else                                                    // [115]
        if( d_camerah_use >= 1 ){   //: #_HIG_L_CAM_C_#  ://     // [115]
                                                                 // [115]
            F_CAMERAH_PAN( i_dvx , i_dvy );                      // [115]
        }else{                                                   // [115]
            ERR("[INVALID_FLAG_2022_08_06:1125PM]");             // [115]
        };;                                                      // [115]
    };;                                                          // [115]

    const   F_KEYMAST_PAD_NUM = function                         // [126]
    PRIVATE_F_KEYMAST_PAD_NUM(                                   // [126]
                                                                 // [126]
        i_pad_num                                                // [126]
    ){                                                           // [126]

        var did_a_thing =( 0 );                                  // [131]
                                                                 // [131]
        if( d_camerah_use >= 1 ){                                // [131]
            //:::::::::::::::::::::::::::::::::::::::://         // [131]
            //: #_Now_Handles_Its_Own_Number_Range_# ://         // [131]
            //:::::::::::::::::::::::::::::::::::::::://         // [131]
            F_SEXYCAM_PAD_NUM( i_pad_num );                      // [131]
            did_a_thing++;                                       // [131]
        }else                                                    // [131]
        if( i_pad_num >= 1 && i_pad_num <= 9 ){                  // [126][105]
                                                                 // [126]
            if( d_camerah_use >= 1 ){                            // [126]
                                                                 // [126]
                /**ALREADY_CALLED_THIS**/                        // [131][126]
            }else                                                // [126]
            if( d_camerah_use <= 0 ){                            // [126]
                                                                 // [---]
                did_a_thing++;                                   // [131]
                                                                 // [105]
                const laxcoma="[HACK]" /////////////////         // [105]
                                                                 // [105]
                ,   t_l =( 7 ) , top =( 8 ) , t_r =( 9 )         // [105]
                ,   m_l =( 4 ) , mid =( 5 ) , m_r =( 6 )         // [105]
                ,   b_l =( 1 ) , bot =( 2 ) , b_r =( 3 )         // [105]
                                                                 // [105]
                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         // [105]
                                                                 // [105]
                let cel =[ 0x00 , 0x00 //:@camsnap_cel@://       // [105]
                                                                 // [105]
                ,   0 , 2  //:[ B_L ]( 1 )://                    // [105]
                ,   1 , 2  //:[ BOT ]( 2 )://                    // [105]
                ,   2 , 2  //:[ B_R ]( 3 )://                    // [105]
                                                                 // [105]
                ,   0 , 1  //:[ M_L ]( 4 )://                    // [105]
                ,   1 , 1  //:[ MID ]( 5 )://                    // [105]
                ,   2 , 1  //:[ M_R ]( 6 )://                    // [105]
                                                                 // [105]
                ,   0 , 0  //:[ T_L ]( 7 )://                    // [105]
                ,   1 , 0  //:[ TOP ]( 8 )://                    // [105]
                ,   2 , 0  //:[ T_R ]( 9 )://                    // [105]
                ];;                                              // [105]
                                                                 // [105]
                let c_x =( cel[ (i_pad_num*2)+0 ] );             // [126][105]
                let c_y =( cel[ (i_pad_num*2)+1 ] );             // [126][105]
                                                                 // [105]
                ASS( c_duh * 3 === c_dum , "[!DUH_DUM!]" );      // [105]
                                                                 // [105]
                d_vp1[ x_0 ]=( c_x * c_duh )+(    0    );        // [105]
                d_vp1[ y_0 ]=( c_y * c_duh )+(    0    );        // [105]
                d_vp1[ x_1 ]=( c_x * c_duh )+( c_duh-1 );        // [105]
                d_vp1[ y_1 ]=( c_y * c_duh )+( c_duh-1 );        // [105]
            }else{                                               // [126]
                ERR( "[WTF_PAD_NUM_SWITCH]" );                   // [126]
            };;                                                  // [126]
                                                                 // [126]
        };;                                                      // [105]
                                                                 // [---]
        if( did_a_thing >= 2 ){ ERR("[DID_TOO_MUCH]"); };        // [131]
                                                                 // [---]
    };; //:END[ F_KEYMAST_PAD_NUM ]:::::::::::::::::::::::::::// // [126]
                                                                 // [---]
    const   F_KEYMAST_EVT_KEY_PAD_N10 = "[FIX:EVT_N10]" ;        // [---][203]
    const   F_KEYMAST_EVT_N10         = "[FIX:@N_N_S@]" ;        // [205][---]
                                                                 // [---][203]
    const   F_KEYMAST_DOW_EDI = function                         // [104]
    PRIVATE_F_KEYMAST_DOW_EDI(                                   // [104]
                                                                 // [104]
        i_evt_key                                                // [104]
    ){                                                           // [104]
        //:#_DOWN_HANDLER_WHEN_BEHAVING_AS_AN_EDITOR_#://        // [104]

        //:#_NOTHERE_#[ i_evt_key.preventDefault(); ]:://        // [468]
                                                                 
        var asc_key = F_KEYMAST_EVT_ASC( i_evt_key );            // [104] 
        let a_k     =( asc_key /** Key Down **/ );               // [104] 
                                                                 
        var keyheld_shi =( i_evt_key.shiftKey );                 // [151]
        var keyheld_con =( i_evt_key.ctrlKey  );                 // [151]
                      
        //:#_KONAMI_BRAND_MAXI_PADS_#:[203]:-----------------:// // [--------]
                                                                 // [--------]
            var oh_my_god_its_the_numpad=( 0 );                  // [---][105]
            var pad_num=( 0-1 );                                 // [---][105]
            pad_num =( F_EVT_N10( i_evt_key ) );                 // [205][203]
            if( pad_num >= 0 ){                                  // [203][---]
                oh_my_god_its_the_numpad=( 1 );                  // [203][---]
            };;                                                  // [203][---]
        //:-----------------:#_KONAMI_BRAND_MAXI_PADS_#:[203]:// // [--------]
                                                                 
        var pad_key =( "[USE_NON_ZERO_BASED:padcode]" );         // [132]
                                                                 // [132]
        var oh_my_god_its_the_numpad_but_not_a_number=( 0 );     // [132]
        var padcode=( 0-1 );                                     // [132]
        if( i_evt_key.keyCode >= 106 //:MULTIPLY://              // [132]
        &&  i_evt_key.keyCode <= 111 //:DIVIDE  ://              // [132]
        ){                                                       // [132]
            oh_my_god_its_the_numpad_but_not_a_number=( 1 );     // [132]
            padcode =( i_evt_key.keyCode );                      // [132]
        };;                                                      // [132]

        var oh_my_god_its_the_arrow_keys=( 0 );                  //      [114]
        var ark_num =( 0-1 );   //:@ark_num@:ArrowKeyEnum://     //      [114]
        ASS( c_keymast_ark_k_0 === 37 ,    "[@ARK_K_0@]"  );     //      [114]
        ASS( c_keymast_ark_k_1 === 40 ,    "[@ARK_K_1@]"  );     //      [114]
        if( i_evt_key.keyCode  >=  37    //: @ARK_LEF@   ://     //      [114]
        &&  i_evt_key.keyCode  <=  40    //: @ARK_DOW@   ://     //      [114]
        ){                                                       //      [114]
            oh_my_god_its_the_arrow_keys=( 1 );                  //      [114]
            ark_num=( i_evt_key.keyCode - 37 );                  //      [114]
        };;                                                      //      [114]
                                                                 //      [114]
        var oh_my_god_it_is_number_pad_enter_key=(  0 );         // [135]
        if( 1                                                    // [135]
        &&  i_evt_key.keyCode  ===  13 /**ENTER **/              // [135]
        &&  i_evt_key.location ===   3 /**NUMPAD**/              // [135]
        ){                                                       // [135]
            oh_my_god_it_is_number_pad_enter_key=(  1 );         // [135]
        };;                                                      // [135]
        if(                                                      // [135]
            i_evt_key.keyCode  === 176 /**NUMPADENTER**/         // [135]
        ){                                                       // [135]
            oh_my_god_it_is_number_pad_enter_key=(  1 );         // [135]
        };;                                                      // [135]
                                                                 // [135]
        if( oh_my_god_it_is_number_pad_enter_key >= 1 ){         // [135]
                                                                 // [135]
            let cir_nex = c_sexycam_act_cir_nex ;                // [137]
            ASS(cir_nex === d_sexycam.npa_ent  );                // [137]
            F_SEXYCAM_CIR_NEX();                                 // [135]
                                                                 // [135]
        }else                                                    // [135]
        if( oh_my_god_its_the_arrow_keys ){                      //      [114]
                                                                 //      [114]
            //: @dvx@ : Direction_Vector.X  ://                  //      [114]
            //: @dvy@ : Direction_Vector.Y  ://                  //      [114]
                                                                 //      [114]
            ASS( ark_num >= 0 && ark_num <=(4-1) );              //      [114]
            let dvx = d_keymast_ark_dvx[ ark_num ];              //      [114]
            let dvy = d_keymast_ark_dvy[ ark_num ];              //      [114]
                                                                 // [---]
            F_KEYMAST_PAN( dvx , dvy );                          // [115]
                                                                 // [---]
        }else                                                    // [114]
        if( oh_my_god_its_the_numpad ){                          // [105]
                                                                 // [105]
            F_KEYMAST_PAD_NUM( pad_num );                        // [126]
        }else                                                    // [105]
        if( oh_my_god_its_the_numpad_but_not_a_number ){         // [132]
                                                                 // [132]
            F_SEXYCAM_PADCODE( padcode );                        // [132]
        }else                                                    // [132]
        if(  0          //:----------------------------------:// // [068]
        ||  "0" == a_k  //:                             [068]:// // [068]
        ||  "1" == a_k  //:  Select the shader pipeline to   :// // [068]
        ||  "2" == a_k  //:  use via the number keys.        :// // [068]
        ||  "3" == a_k  //:                             [068]:// // [068]
        ||  "4" == a_k  //:  0 == default pipeline.     [068]:// // [068]
        ||  "5" == a_k  //:                             [068]:// // [068]
        ||  "6" == a_k  //:  More than 9 pipelines ?    [068]:// // [068]
        ||  "7" == a_k  //:  Future me problem.         [068]:// // [068]
        ||  "8" == a_k  //:                             [068]:// // [068]
        ||  "9" == a_k  //:----------------------------------:// // [068]
        ){                                                       // [068]
            //:RPL__RenderPipelineLoad:[068]:----------------:// // [068]
            //:                                              :// // [068]
            //: #NOKISS#[ F_ARTGIRL_RPL( parseInt( a_k ) ] ) :// // [068]
            //:                                              :// // [068]
            let RPL = F_ARTGIRL_RPL ;                     //::// // [068]
            if( "0" == a_k ){ RPL( c_artgirl_ren_def ); };//::// // [068]
            if( "1" == a_k ){ RPL( 1 );};//:c_artgirl_ren_001:// // [068]
            if( "2" == a_k ){ RPL( 2 );};//:c_artgirl_ren_002:// // [068]
            if( "3" == a_k ){ RPL( 3 );};//:c_artgirl_ren_003:// // [068]
            if( "4" == a_k ){ RPL( 4 );};//:c_artgirl_ren_004:// // [068]
            if( "5" == a_k ){ RPL( 5 );};//:c_artgirl_ren_005:// // [068]
            if( "6" == a_k ){ RPL( 6 );};//:c_artgirl_ren_006:// // [068]
            if( "7" == a_k ){ RPL( 7 );};//:c_artgirl_ren_007:// // [068]
            if( "8" == a_k ){ RPL( 8 );};//:c_artgirl_ren_008:// // [068]
            if( "9" == a_k ){ RPL( 9 );};//:c_artgirl_ren_009:// // [068]
            //:                                              :// // [068]
            //:----------------:RPL__RenderPipelineLoad:[068]:// // [068]
        }else                                                    // [104]
        if( "Z" == a_k   //: AM4___1000___TOGGLE ://             // [---][324]
        ||  "X" == a_k   //: AM4___0100___TOGGLE ://             // [---][324]
        ||  "C" == a_k   //: AM4___0010___TOGGLE ://             // [---][324]
        ||  "V" == a_k   //: AM4___0001___TOGGLE ://             // [---][324]
        ||  "R" == a_k   //: AM6___000011__CYCLE ://             // [339][---]
        ){      //: : : : : : : : : : :::: : : : : : : : : : :// // [---][324]
                                                                 // [---][324]
            let edi =( d_edigame_edi );                          // [---][324]
                                                                 // [--------]
            //:REFACTOR_NOTE_2022_10_12:[339]:-----------://     // [339][---]
            //:                                          ://     // [339][---]
            //:    REMOVE[    edi_am4 ]( As_Member_Vars )://     // [339][---]
            //:    DIS_ALLOW[ edi_am6 ]( As_Member_Vars )://     // [339][---]
            //:                                          ://     // [339][---]
            //:          ADD[ edi_l_x ]( As_Member_Var  )://     // [339][---]
            //:          ADD[ edi_l_y ]( As_Member_Var  )://     // [339][---]
            //:          ADD[ edi_m_x ]( As_Member_Var  )://     // [339][---]
            //:          ADD[ edi_m_y ]( As_Member_Var  )://     // [339][---]
            //:          ADD[ edi_ro4 ]( As_Member_Var  )://     // [339][---]
            //:-----------:REFACTOR_NOTE_2022_10_12:[339]://     // [339][---]
                                                                 // [339][---]
            //:#_AM4_AND_AM6_EDITING_#:[339]:------------://     // [339][---]
            if( "Z" == a_k  /** LATCHING_ON_AXIS : X **/ ){      // [339][324]
                                                                 // [339][---]
                edi.edi_l_x =( edi.edi_l_x ^ 0x1 ); ////////     // [339][---]
                                                                 // [339][---]
            }else  /////////////////////////////////////////     // [339][324]
            if( "X" == a_k  /** LATCHING_ON_AXIS : Y **/ ){      // [339][324]
                                                                 // [339][---]
                edi.edi_l_y =( edi.edi_l_y ^ 0x1 ); ////////     // [339][---]
                                                                 // [339][---]
            }else  /////////////////////////////////////////     // [339][324]
            if( "C" == a_k  /** MIRROR___ON_AXIS : X **/ ){      // [339][324]
                                                                 // [339][---]
                edi.edi_m_x =( edi.edi_m_x ^ 0x1 ); ////////     // [339][---]
                                                                 // [339][---]
            }else  /////////////////////////////////////////     // [339][324]
            if( "V" == a_k  /** MIRROR___ON_AXIS : Y **/ ){      // [339][324]
                                                                 // [339][---]
                edi.edi_m_y =( edi.edi_m_y ^ 0x1 ); ////////     // [339][---]
                                                                 // [339][---]
            }else  /////////////////////////////////////////     // [339][324]
            if( "R" == a_k  /** R : ROTATE_AUTOTILES **/ ){      // [339][---]
                                                                 // [339][---]
                    edi.edi_ro4 =( edi.edi_ro4 + 1 );            // [339][---]
                if( edi.edi_ro4 > (4-1) ){                       // [339][---]
                    edi.edi_ro4 = ( 0 );                         // [339][---]
                };;                                              // [339][---]
            }else{                                               // [339][---]
                ERR("[HOW_THE_FUCK_YOU_GET_HERE_2022]");         // [339][---]
            };;                                                  // [339][---]
            //:------------:#_AM4_AND_AM6_EDITING_#:[339]://     // [339][---]
                                                                 // [---][---]
        }else   //: : : : : : : : : : :::: : : : : : : : : : :// // [324]                  
        if( "[#REFACTOR_ME_TO_USE_KONAMI_CODE_2022#]" == a_k ){  // [339][068][104]
                                                                 // [104]
            //:[061]:----------------------------------------:// // [104]
            F_XHR( "GET" , "DABITCH/R/TAB_HEX/RED" )             // [104]
            .then((i_saywhat)=>{                                 // [104]
                                                                 // [104]
                console.log( "[what?]:" + i_saywhat );           // [104]
            });;                                                 // [104]
            //:----------------------------------------:[061]:// // [104]
        }else                                                    // [093][068] 
        //:MINUS_THEN_PLUS_LIKE_A_SANE_PERSON:[151]:---------:// // [151]

        if( "-" === a_k || "_" === a_k ){                        // [093]
                                                                 // [---]
            if( keyheld_shi ){                                   // [151]
                                                                 // [---]
                F_KEYMAST_ZOM( 0-1 ); //: ZOOM OUT ://           // [115]
                                                                 // [---]
            }else{                                               // [151]
                let edi = d_edigame_edi ;                        // [151]
                edi.edi_te7 -- ;             //:@TE7_BAK@://     // [151]
                if( edi.edi_te7 < ( 0 ) ){                       // [151]
                    edi.edi_te7 = ( 0 ) ;                        // [151]
                };;                                              // [151]
                d_te7 = edi.edi_te7 ;                            // [151]
                d_moumast_dir =( 1 ); //:#DIL_002#://            // [169]
            };;                                                  // [151]
                                                                 // [---]
        }else                                                    // [093]

        if( "+" === a_k || "=" === a_k ){                        // [093]
                                                                 // [---]
            if( keyheld_shi ){                                   // [151]
                                                                 // [---]
                F_KEYMAST_ZOM( 0+1 ); //: ZOOM IN  ://           // [115]
                                                                 // [---]
            }else{                                               // [151]
                let edi = d_edigame_edi ;                        // [151]
                edi.edi_te7 ++ ;             //:@TE7_NEX@://     // [151]
                if( edi.edi_te7 > (7-1) ){                       // [151]
                    edi.edi_te7 = (7-1) ;                        // [151]
                };;                                              // [151]
                d_te7 = edi.edi_te7 ;                            // [151]
                d_moumast_dir =( 1 ); //:#DIL_002#://            // [169]
            };;                                                  // [151]
                                                                 // [---]
        }else                                                    // [093]

        //:---------:MINUS_THEN_PLUS_LIKE_A_SANE_PERSON:[151]:// // [151]

        if( "[" === a_k || "{" === a_k ){                        // [155][151]
                                                                 //      [151]
            if( keyheld_shi ){                                   //      [151]
                                                                 //      [151]
                //:TODO: Fast Shift BAK , tile value             //      [151]
            }else                                                //      [151]
            if( keyheld_con ){                                   //      [151]
                                                                 //      [151]
                //:TODO: Fast shift to next category://          //      [151]
                //:      of tiles. BACKWARDS        ://          //      [151]
            }else{                                               //      [151]
                //:#_PREV_TILE_BRUSH_VALUE_#:[268]:------://     // [268]
                let edi = d_edigame_edi ;                        // [268]
                    edi.edi_v16 -- ;                             // [268]
                if( edi.edi_v16  <( 0   ) ){                     // [268]
                    edi.edi_v16  =( 0   );;                      // [268]
                };;                                              // [268]
                //:------:#_PREV_TILE_BRUSH_VALUE_#:[268]://     // [268]
            };;                                                  //      [151]
        }else                                                    //      [151]
        if( "]" === a_k || "}" === a_k ){                        // [155][151]
                                                                 //      [151]
            if( keyheld_shi ){                                   //      [151]
                                                                 //      [151]
                //:TODO: Fast Shift FWD , tile value             //      [151]
            }else                                                //      [151]
            if( keyheld_con ){                                   //      [151]
                                                                 //      [151]
                //:TODO: Fast shift to next category://          //      [151]
                //:      of tiles. FORWARD          ://          //      [151]
            }else{                                               //      [151]
                //:#_NEXT_TILE_BRUSH_VALUE_#:[268]:------://     // [268]
                let edi = d_edigame_edi ;                        // [268]
                    edi.edi_v16 ++ ;                             // [268]
                if( edi.edi_v16 >=( 16   ) ){                    // [268]
                    edi.edi_v16  =( 16-1 );;                     // [268]
                };;                                              // [268]
                //:------:#_NEXT_TILE_BRUSH_VALUE_#:[268]://     // [268]
            };;                                                  //      [151]
        }else                                                    //      [151]
        if( "<" === a_k || "," === a_k ){                        //      [151]
                                                                 // [441][---]
            let edi =( d_edigame_edi );                          // [441][---]
            let bak =( F_BAK( edi.edi_mod_mir_xyd , 0,7  ));     // [441][---]
                              edi.edi_mod_mir_xyd=(( bak ));     // [441][---]
        }else                                                    //      [151]
        if( ">" === a_k || "." === a_k ){                        //      [151]
                                                                 // [441][---]
            let edi =( d_edigame_edi );                          // [441][---]
            let nex =( F_NEX( edi.edi_mod_mir_xyd , 0,7  ));     // [441][---]
                              edi.edi_mod_mir_xyd=(( nex ));     // [441][---]
        }else                                                    //      [151]
        if( "A" === a_k || "a" === a_k ){ //::::::::::::[469]:// // [469]
                                                                 // [469]
            let edi =( d_edigame_edi );                          // [469]
            if( edi.edi_mod_ran_onn >= 1 ) {                     // [469]
                edi.edi_mod_ran_onn=(  0 );                      // [469]
            }else{                                               // [469]
                edi.edi_mod_ran_onn=(  1 );                      // [469]
                                                                 // [469]
                if( 1                                            // [469]
                && ( edi.edi_mod_ran_te7 <= 0 )                  // [469]
                && ( edi.edi_mod_ran_la3 <= 0 )                  // [469]
                && ( edi.edi_mod_ran_v16 <= 0 )                  // [469]
                ){                                               // [469]
                    //:#_DEFAULT_RANDOM_CONFIG_#://              // [469]
                    edi.edi_mod_ran_te7=( 1 );                   // [469]
                    edi.edi_mod_ran_la3=( 0 );                   // [469]
                    edi.edi_mod_ran_v16=( 0 );                   // [469]
                }else                                            // [469]
                if( 0                                            // [469]
                ||  edi.edi_mod_ran_te7 >= 1                     // [469]
                ||  edi.edi_mod_ran_la3 >= 1                     // [469]
                ||  edi.edi_mod_ran_v16 >= 1                     // [469]
                ){                                               // [469]
                    /** Okay. Do nothing. **/                    // [469]
                }else{                                           // [469]
                    ERR( "[Invalid_Flag_Found]" );               // [469]
                };;                                              // [469]
            };;                                                  // [469]
                                                                 // [469]
        }else //::::::::::::::::::::::::::::::::::::::::[469]:// // [469]
        if( "?" === a_k || "/" === a_k ){ //::::::::::::[468]:// // [468]
                                                                 // [468]
            let obj_edi =( d_edigame_edi /**edi_obj**/ );        // [468]
            let edi_iso =( obj_edi.edi_mod_mir_iso     );        // [468]
            ASS(  (1===edi_iso)||(0===edi_iso)                   // [468]
            ,   "[(1===edi_iso)||(0===edi_iso)]" );;             // [468]
                                                                 // [468]
            obj_edi.edi_mod_mir_iso =( 1 - edi_iso );            // [468]
                                                                 // [468]
            i_evt_key.preventDefault(); //:#_SO_7893972_#://     // [468]
                                                                 // [468]
        }else   //::::::::::::::::::::::::::::::::::::::[468]:// // [468]
        if( "L" == a_k ){                                        // [---][096]
                                                                 // [---][096]
            F_TOG( window , "d_rendopt_boxview_onn" );           // [---][096]
            F_RES_CAN(); //:UpdateViewportSizes://               // [---][096]
        }else                                                    // [---][096]
        //////////////////////////////////////////////////////// // [422]
        if( "N" === a_k ){ //:::::::::::::::#_MTI_TOG_#:[434]:// // [434]
                                                                 // [434]
            //:#_TOGGLE_MIR_AM6_#:[434]:-----------------://     // [434]
                                                                 // [434]
                    d_edigame_edi.edi_mod_mir_am6 =(             // [434]
                ( 1-d_edigame_edi.edi_mod_mir_am6 ) );;          // [434]
                                                                 // [434]
                if( 1 != d_edigame_edi.edi_mod_mir_am6           // [434]
                &&  0 != d_edigame_edi.edi_mod_mir_am6           // [434]
                ){                                               // [434]
                    ERR("[BAD_VAL_EDI_MOD_MIR_AM6]");            // [434]
                };;                                              // [434]
                                                                 // [434]
            //:-----------------:#_TOGGLE_MIR_AM6_#:[434]://     // [434]
                                                                 // [434]
        }else //::::::::::::::::::::::::::::#_MTI_TOG_#:[434]:// // [434]
        if( "M" === a_k ){ //:::::::::::::::#_MIR_TOG_#:[422]:// // [422]
                                                                 // [422]
            //:TAG[ d_edigame_edi.edi_mod_mir_onn ]::::::://     // [422]
            //:TAG[ @_M_KEY_@ / @M_KEY@ _________ ]::::::://     // [422]
                                                                 // [422]
            let edi=(  d_edigame_edi                );           // [422]
            let onn=(  edi.edi_mod_mir_onn          );           // [422]
                       edi.edi_mod_mir_onn =( 1-onn );           // [422]
                                                                 // [422]
            let OOB=(  OOB_MSG_MIN_MAX_VAL          );           // [422]
                OOB( "[edi.edi_mod_mir_onn]" , 0,1  //           // [422]
                ,      edi.edi_mod_mir_onn         );;           // [422]
                                                                 // [422]
        }else //::::::::::::::::::::::::::::#_MIR_TOG_#:[422]:// // [422]
        //////////////////////////////////////////////////////// // [422]
        {                                                        // [068] 
            if( d_keymast_ukm >= 1 ){                            // [236]
                LOG( "[UNBOUND_KEY]" , a_k );                    // [068] 
            };;                                                  // [236]
        };;                                                      // [068] 
    };;                                                          // [104]
    const   F_KEYMAST_DOW_GAM = function                         // [104]
    PRIVATE_F_KEYMAST_DOW_GAM(                                   // [104]
                                                                 // [104]
        i_evt_key                                                // [104]
    ){                                                           // [104]
        //:#_DOWN_HANDLER_WHEN_BEHAVING_AS_A_GAME_#://           // [104]
                                                                 // [104]
        console.log("[no_game_control_bindings_yet]");           // [104]
    };;                                                          // [104]
                                                                 
    const   F_KEYMAST_DOW = function                             // [057] 
    PRIVATE_F_KEYMAST_DOW(                                       // [057] 
        i_evt_key                                                // [068] 
    ){                                                           // [057] 
        //:#_HIGHEST_LEVEL_KEYBOARD_DOWN_HANDLER_#://            // [104]
                                                                 // [---]
        let did_akonami =(                                       // [420][---]
            F_KONAMIC_EVT_KEY( i_evt_key ));;                    // [420][181]
                                                                 // [420][---]
        //:#_NO_KONAMI_CODE_#:[420]:---------------------://     // [420][---]
                                                                 // [420][---]
        if( did_akonami <= 0 ){  //:::[ did_akonami <= 0]://     // [420][---]
        //: 123_123_123 :::::::::::::::::::::::::::::::::://     // [420][---]
                                                                 // [---]
            var asc_key = F_KEYMAST_EVT_ASC( i_evt_key );        // [068] 
            let a_k     =( asc_key /** Key Down **/ );           // [068] 
                                                                 // [---]
            ASS( "~" === c_edigame_tog_001 );                    // [103]
            ASS( "`" === c_edigame_tog_002 );                    // [103]
            if( 0                                                // [103]
            ||  c_edigame_tog_001 === a_k                        // [103]
            ||  c_edigame_tog_002 === a_k                        // [103]
            ){                                                   // [103]
                //:::::::::::::::::::::::::::::::::::://         // [103]
                //: Are controls behaving like an    ://         // [103]
                //: __EDITOR__ or like a __GAME__ ?  ://         // [103]
                //:::::::::::::::::::::::::::::::::::://         // [103]
                                                                 // [103]
                F_CYC( window , "d_edigame_mod"                  // [103]
                ,   [                                            // [103]
                        c_edigame_edi //:#enu_edi#://            // [103]
                    ,   c_edigame_gam //:#enu_gam#://            // [103]
                    ]                                            // [103]
                );;                                              // [103]
                F_EDIGAME_MOD_LOG( d_edigame_mod );              // [103]
            };;                                                  // [103]
                                                                 // [---]
            if( c_edigame_edi === d_edigame_mod ){               // [104]
                F_KEYMAST_DOW_EDI( i_evt_key );                  // [104]
            }else                                                // [104]
            if( c_edigame_gam === d_edigame_mod ){               // [104]
                F_KEYMAST_DOW_GAM( i_evt_key );                  // [104]
            }else{                                               // [104]
                ERR("[INVALID_EDIGAME_MODE]");                   // [104]
            };;                                                  // [104]
                                                                 // [---]
        };; //::::::::::::::::::::::::[ did_akonami <= 0]://     // [420]
        //:---------------------:#_NO_KONAMI_CODE_#:[420]://     // [420]

    };; //:[F_KEYMAST_DOW]:----------------------------:[057]://

    const   F_KEYMAST_UPP = function                             // [057] 
    PRIVATE_F_KEYMAST_UPP(                                       // [057] 
        i_evt_key                                                // [068] 
    ){                                                           // [057] 
        if( d_keymast_log_upp >= 1 ){                            // [118]
            console.log( "[LOG_UPP]:" + i_evt_key );             // [118][068] 
        };;                                                      // [118]
    };;                                                          // [057] 

    const   F_KEYMAST_INI = function                             // [057] 
    PRIVATE_F_KEYMAST_INI(                                       // [057] 
        /** No Arguments **/                                     // [057] 
    ){                                                           // [057] 
                                                                 // [057] 
        var ADD = document.addEventListener ;                    // [057] 
                                                                 // [057] 
        ADD( "keyup"   , F_KEYMAST_UPP );                        // [057] 
        ADD( "keydown" , F_KEYMAST_DOW );                        // [057] 
    };;                                                          // [057] 
                                                                 // [---]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [---][???]
//|                                               [ @$$$$$@ ]|// // [---][???]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __KEYMAST__|// // [---][???]
//|                                               [ @$$$$$@ ]|// // [---][???]
//|03|03|03|03|03|03|03|03|03|SUBS|03|03|03|03|03|03|03|03|03|// // [---][???]
//|16|16|16|16|16|16|16|16|16|SUBS|16|16|16|16|16|16|16|16|16|// // [219]
//|[ @$$$$$@ ]                                               |// // [219]
//|__KEYEMMA__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [219]
//|[ @$$$$$@ ]                                               |// // [219]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [219]

    const F_EMMAKEY_HASDATA = "[FIX:KEYEMMA_HASDATA]" ;          // [221][---]
    const F_EMMAKEY_HOMEROW = "[FIX:KEYEMMA_HOMEROW]" ;          // [221][---]
    const F_EMMAKEY_KEY_PAD = "[FIX:KEYEMMA_KEY_PAD]" ;          // [221][---]
    const F_KEYEMMA_HASKEYS = "[FIX:HASDATA]"         ;          // [---][220]
                                                                 // [---][220]
    const   F_KEYEMMA_HASDATA = function                         // [---][220]
    PRIVATE_F_KEYEMMA_HASDATA(                                   // [---][220]
                                                                 // [---][220]
        i_obj                                                    // [---][220]
    ){                                                           // [---][220]
        var o_has=( (Object.keys( i_obj ).length === 0)          // [---][220]
                                                                 // [---][220]
            ? 0  //: <-- does __NOT__ have any data ://          // [---][220]
            : 1  //: <-- contains useful data.      ://          // [---][220]
        );;                                                      // [---][220]
        return( o_has );                                         // [---][220]
    };;                                                          // [---][220]
    const   F_KEYEMMA_HOMEROW = function                         // [---][220]
    PRIVATE_F_KEYEMMA_HOMEROW(                                   // [---][220]
                                                                 // [---][220]
        i_str_key                                                // [---][220]
    ,   i_key_mod                                                // [---][220]
    ){                                                           // [---][220]
        if( "string" !== typeof i_str_key                        // [---][220]
        ||  "object" !== typeof i_key_mod                        // [---][220]
        ){ ERR("[EMMA_HOMEROW:INVALID_INPUT]"); };               // [---][220]
                                                                 // [---][220]
        var evt_key = { };                                       // [---][220]
            evt_key.key      =( i_str_key );                     // [---][220]
            evt_key.shiftKey =(      0    );                     // [---][220]
            evt_key.ctrlKey  =(      0    );                     // [---][220]
                                                                 // [---][220]
        if( F_KEYEMMA_HASDATA( i_key_mod ) ){                    // [---][220]
                                                                 // [---][220]
            ERR( "[NO_MODIFIER_SUPPORT:HOMEROW]" );              // [---][220]
            //: Add_Modifier_Key_Support_If_Needed ://           // [---][220]
        };;                                                      // [---][220]
        F_KEYMAST_DOW( evt_key );                                // [---][220]
    };;                                                          // [---][220]
    const   F_KEYEMMA_KEY_PAD = function                         // [---][220]
    PRIVATE_F_KEYEMMA_KEY_PAD(                                   // [---][220]
                                                                 // [---][220]
        i_str_key                                                // [---][220]
    ,   i_key_mod                                                // [---][220]
    ){                                                           // [---][220]
        if( "string" !== typeof i_str_key                        // [---][220]
        ||  "object" !== typeof i_key_mod                        // [---][220]
        ){ ERR("[EMMA_KEY_PAD:INVALID_INPUT]" ); };              // [---][220]
                                                                 // [---][220]
        var evt_key = { };                                       // [---][220]
            evt_key.key      =( i_str_key );                     // [---][220]
            evt_key.shiftKey =(      0    );                     // [---][220]
            evt_key.ctrlKey  =(      0    );                     // [---][220]
                                                                 // [---][220]
            evt_key.keyCode  =(                                  // [---][220]
                                                                 // [---][220]
                d_keyemma_key_pad[ i_str_key ]                   // [---][220]
            );;                                                  // [---][220]
                                                                 // [---][220]
        if( F_KEYEMMA_HASDATA( i_key_mod ) ){                    // [---][220]
                                                                 // [---][220]
            ERR( "[NO_MODIFIER_SUPPORT:KEY_PAD]" );              // [---][220]
            //: Add_Modifier_Key_Support_If_Needed ://           // [---][220]
        };;                                                      // [---][220]
        F_KEYMAST_DOW( evt_key );                                // [---][220]
    };;                                                          // [---][220]

//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [219]
//|                                               [ @$$$$$@ ]|// // [219]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __KEYEMMA__|// // [219]
//|                                               [ @$$$$$@ ]|// // [219]
//|16|16|16|16|16|16|16|16|16|SUBS|16|16|16|16|16|16|16|16|16|// // [219]
//|11|11|11|11|11|11|11|11|11|SUBS|11|11|11|11|11|11|11|11|11|// // [---][142]
//|[ @$$$$$@ ]                                               |// // [---][142]
//|__MOUMAST__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [---][142]
//|[ @$$$$$@ ]                                               |// // [---][142]
//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [---][142]

    const   F_MOUMAST_PIX_DUN = "[FIX:...P_X_DUX()|P_Y_DUY]" ;   // [145]
    const   F_MOUMAST_P_X_DUN = "[FIX:...P_X_DUX()]"         ;   // [145]
    const   F_MOUMAST_P_Y_DUN = "[FIX:...P_X_DUY()]"         ;   // [145]
                                                                 // [145]

    const   F_EDIGAME_P_X_DUX = "[FIX:MOUMAST_NOT_EDIGAME]" ;    // [148]

    const   F_MOUMAST_P_X_DMX = "[DOESNT_HAVE_TO_BE_MOUSE]" ;    // [152]
    const   F_MOUMAST_P_X_DCX = "[DOESNT_HAVE_TO_BE_CLICK]" ;    // [152]
    const   F_MOUMAST_P_X_DUX = function                         // [145]
    PRIVATE_F_MOUMAST_P_X_DUX(                                   // [145]
                                                                 // [145]
        i_p_x //: Input Pixel X Coordinate ://                   // [145]
    ){                                                           // [145]
        //:::::::::::::::::::::::::::::::::::::::::::://         // [145]
        //:[ATF]: Pixel_X ===> DiscreteUnits X :[ATF]://         // [145]
        //:::::::::::::::::::::::::::::::::::::::::::://         // [145]
        var o_dux =( c_dum /**OUTOFBOUNDSBYONE**/ );             // [145]
                                                                 // [---]
        //:[enu_fsm]AKA[ fragren ]://                            // [148]
        var enu_fsm = d_artgirl.arr_fsm[                         // [148]
                      d_artgirl.ren_pin ];;                      // [148]
                                                                 // [---]
        if( i_p_x < d_vp0[ x_0 ]  //: #vp0_is_on_screen# ://     //      [146]
        ||  i_p_x > d_vp0[ x_1 ]  //: #vp0_is_on_screen# ://     //      [146]
        ||  i_p_x < 0             //: #PT_OOB_OF_CANVAS# ://     //      [146]
        ||  i_p_x >= d_can.width  //: #PT_OOB_OF_CANVAS# ://     //      [146]    
        ){                                                       //      [146]
            o_dux =( c_dum /**OUT_OF_BOUNDS**/ );                //      [146]
        }else                                                    // [148][146]
        if( enu_fsm === c_artgirl_fsm_per ){                     // [148]
                                                                 // [---]
            //: @RELATED@[ _LPC_LOCAL_PERCENT_COORD_ ]:::://     // [252]
            //: @RELATED@[ ssf_006 Uses This Mapping ]:::://     // [252]
                                                                 // [---] 
            //: @f_x@ : Float/Percentage - X axis :------://     //      [146]
                                                                 //      [146]
            //: @DO_CALC_FORWARD_WITH@[ vp0 ] ://                //      [146]
                                                                 //      [146]
                var vp0_wid =( d_vp0[ x_1 ]-d_vp0[ x_0 ]+1 );    //      [146]
                var vp0_pos =( i_p_x       -d_vp0[ x_0 ]   );    //      [146]
                var f_x =( vp0_pos / ( vp0_wid - 1 )       );    //      [146]
                                                                 //      [146]
            //: @DO_CALC_BAKWARD_WITH@[ vp1 ] ://                //      [146]
                                                                 //      [146]
                var vp1_wid =( d_vp1[ x_1 ]-d_vp1[ x_0 ]+1 );    //      [146]
                var vp1_pos =( ( vp1_wid - 1 ) * f_x       );    //      [146]
                      o_dux =( d_vp1[ x_0 ] + vp1_pos      );    //      [146]
                                                                 // [---]
            //: @BOUNDS_CHECK_OUR_CALCULATIONS@ ://              // [148]
                                                                 // [148]
                if( o_dux < d_vp1[ x_0 ]                         // [148]
                ||  o_dux > d_vp1[ x_1 ]                         // [148]
                ){                                               // [148]
                    LOG( "[d_vp1[ x_0 ]]:" , d_vp1[ x_0 ] );     // [148]
                    LOG( "[d_vp1[ x_1 ]]:" , d_vp1[ x_1 ] );     // [148]
                    LOG( "[o_dux:......]:" , o_dux        );     // [148]
                    ERR("[OUT_OF_FUCKING_BOUNDS:DUX]");          // [148]
                };;                                              // [148]
                                                                 // [---]
        }else                                                    // [148]
        if( enu_fsm === c_artgirl_fsm_000 ){                     // [148]
 
            //:::::::::::::::::::::::::::::::::::::::::::://     // [149]
            //: @v0w@ : vp0_wid (VP0 WIDTH)              ://     // [149]
            //: @v1w@ : vp1_wid (VP1 WIDTH)              ://     // [149]
            //: @D_U@ : Discrete Units (plank units)     ://     // [149]
            //: @s_w@ : Sample Tile  WID In @D_U@        ://     // [149]
            //: @h_w@ : Half Discreet Sample Tile Width  ://     // [149]
            //: @t_x@ : Tile X In WORLD , PixelX Canvas  ://     // [149]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [149]
                                                                 // [149]
            var  v0w = ( d_vp0[ x_1 ]-d_vp0[ x_0 ]+1 );          // [149]
            var  v1w = ( d_vp1[ x_1 ]-d_vp1[ x_0 ]+1 );          // [149]
            ASS( v1w > v0w , "[V1W_V0W]" );                      // [149]
            var  s_w = Math.floor( v1w / v0w )  ;                // [149]
            var  h_w = Math.floor( s_w / 2   )-1; //:#T_L_MID#://// [149]
            var  t_x =( i_p_x - d_vp0[ x_0 ] )  ;                // [149]
                                                                 // [149]
            o_dux =( d_vp1[ x_0 ] + h_w )+( t_x * s_w );         // [149]

        }else                                                    // [148]
        if( enu_fsm === c_artgirl_fsm_001 ){                     // [148]
                                                                 // [148]
            o_dux = d_vp1[ x_0 ];                                // [148]
        }else{                                                   // [148]
                                                                 // [148]
            o_dux = d_vp1[ x_0 ];                                // [148]
        };;                                                      // [148]
                                                                 // [---]
        return( o_dux );                                         // [145]
    };;                                                          // [145]


    const   F_EDIGAME_P_Y_DUY = "[FIX:MOUMAST_NOT_EDIGAME]" ;    // [148]

    const   F_MOUMAST_P_Y_DMY = "[DOESNT_HAVE_TO_BE_MOUSE]" ;    // [152]
    const   F_MOUMAST_P_Y_DCY = "[DOESNT_HAVE_TO_BE_CLICK]" ;    // [152]
    const   F_MOUMAST_P_Y_DUY = function                         // [145]
    PRIVATE_F_MOUMAST_P_Y_DUY(                                   // [145]
                                                                 // [145]
        i_p_y //: Input Pixel Y Coordinate ://                   // [145]
    ){                                                           // [145]
        //:::::::::::::::::::::::::::::::::::::::::::://         // [145]
        //:[ATF]: Pixel_Y ===> DiscreteUnits Y :[ATF]://         // [145]
        //:::::::::::::::::::::::::::::::::::::::::::://         // [145]
        var o_duy =( c_dum /**OUTOFBOUNDSBYONE**/ );             // [145]
                                                                 // [---] 
        //:[enu_fsm]AKA[ fragren ]://                            // [148]
        var enu_fsm = d_artgirl.arr_fsm[                         // [148]
                      d_artgirl.ren_pin ];;                      // [148]
                                                                 // [---]
        if( i_p_y < d_vp0[ y_0 ]  //: #vp0_is_on_screen# ://     //      [146]
        ||  i_p_y > d_vp0[ y_1 ]  //: #vp0_is_on_screen# ://     //      [146]
        ||  i_p_y < 0             //: #PT_OOB_OF_CANVAS# ://     //      [146]
        ||  i_p_y >= d_can.height //: #PT_OOB_OF_CANVAS# ://     //      [146]
        ){                                                       //      [146]
            o_duy =( c_dum /**OUT_OF_BOUNDS**/ );                //      [146]
        }else                                                    // [148][146]
        if( enu_fsm === c_artgirl_fsm_per ){                     // [148] 
                                                                 // [---]
            //: @RELATED@[ _LPC_LOCAL_PERCENT_COORD_ ]:::://     // [252]
            //: @RELATED@[ ssf_006 Uses This Mapping ]:::://     // [252]
                                                                 // [---] 
            //: @f_y@ : Float/Percentage - Y axis :------://     //      [146]
                                                                 //      [146]
            //: @DO_CALC_FORWARD_WITH@[ vp0 ] ://                //      [146]
                                                                 //      [146]
                var vp0_hig =( d_vp0[ y_1 ]-d_vp0[ y_0 ]+1);     //      [146]
                var vp0_pos =( i_p_y       -d_vp0[ y_0 ]  );     //      [146]
                var f_y =( vp0_pos / ( vp0_hig - 1 )      );     //      [146]
                                                                 //      [146]
            //: @DO_CALC_BAKWARD_WITH@[ vp1 ] ://                //      [146]
                                                                 //      [146]
                var vp1_hig =( d_vp1[ y_1 ]-d_vp1[ y_0 ]+1);     //      [146]
                var vp1_pos =( ( vp1_hig - 1 ) * f_y      );     //      [146]
                      o_duy =( d_vp1[ y_0 ] + vp1_pos     );     //      [146]
                                                                 // [---]
            //: @BOUNDS_CHECK_OUR_CALCULATIONS@ ://              // [148]
                                                                 // [148]
                if( o_duy < d_vp1[ y_0 ]                         // [148]
                ||  o_duy > d_vp1[ y_1 ]                         // [148]
                ){                                               // [148]
                    LOG( "[d_vp1[ y_0 ]]:" , d_vp1[ y_0 ] );     // [148]
                    LOG( "[d_vp1[ y_1 ]]:" , d_vp1[ y_1 ] );     // [148]
                    LOG( "[o_duy:......]:" , o_duy        );     // [148]
                    ERR("[OUT_OF_FUCKING_BOUNDS:DUY]");          // [148]
                };;                                              // [148]
                                                                 // [---]
        }else                                                    // [148]
        if( enu_fsm === c_artgirl_fsm_000 ){                     // [148]

            //:::::::::::::::::::::::::::::::::::::::::::://     // [149]
            //: @v0h@ : vp0_hig (VP0 HEIGHT)             ://     // [149]
            //: @v1h@ : vp1_hig (VP1 HEIGHT)             ://     // [149]
            //: @D_U@ : Discrete Units (plank units)     ://     // [149]
            //: @s_h@ : Sample Tile  HIG In @D_U@        ://     // [149]
            //: @h_h@ : Half Discreet Sample Tile HEIGHT ://     // [149]
            //: @t_y@ : Tile Y || Pixel Y On Canvas      ://     // [149]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [149]
                                                                 // [149]
            var  v0h = ( d_vp0[ y_1 ]-d_vp0[ y_0 ]+1 );          // [149]
            var  v1h = ( d_vp1[ y_1 ]-d_vp1[ y_0 ]+1 );          // [149]
            ASS( v1h > v0h , "[V1H_V0H]" );                      // [149]
            var  s_h = Math.floor( v1h / v0h ) ;                 // [149]
            var  h_h = Math.floor( s_h / 2 )-1 ;  //:#T_L_MID#://// [149]
            var  t_y =( i_p_y - d_vp0[ y_0 ] ) ;                 // [149]
                                                                 // [149]
            o_duy =( d_vp1[ y_0 ] + h_h )+( t_y * s_h );         // [149]

        }else                                                    // [148]
        if( enu_fsm === c_artgirl_fsm_001 ){                     // [148]
                                                                 // [148]
            o_duy = d_vp1[ y_0 ];                                // [148]
        }else{                                                   // [148]
                                                                 // [148]
            o_duy = d_vp1[ y_0 ];                                // [148]
        };;                                                      // [148]
                                                                 // [---]
        return( o_duy );                                         // [145]
    };;                                                          // [145]

    const   F_MOUMAST_FUP = function         //:@FUP@://         // [222][169]
    PRIVATE_F_MOUMAST_FUP(                                       // [169]
                                                                 // [169]
    //- WRONG: i_mou_p_x : Mouse Pixel Y On Canvas ---//         // [169]
    //- WRONG: i_mou_p_y : Mouse Pixel X On Canvas ---//         // [169]
    ){                                                           // [169]
                                                                 // [169]
        //:[ATF] : Force Update Function : [ATF]://              // [169]
                                                                 // [169][---]
        //:::::::::::::::::::::::::::::::::::::::://             // [169][157]
        //: @REFACTOR_DONE@  :  d_m_x ==> d_dmx  ://             // [169][157][152]
        //: @REFACTOR_DONE@  :  d_m_y ==> d_dmy  ://             // [169][157][152]
        //: @REFACTOR_DONE@  :  d_t_x ==> d_gtx  ://             // [169][157][152]
        //: @REFACTOR_DONE@  :  d_t_y ==> d_gty  ://             // [169][157][152]
        //:::::::::::::::::::::::::::::::::::::::://             // [169][157]
                                                                 // [169][---]
        //:vars:[169]:-----------------------------------://     // [169]
        var o_k =( 1     );                                      // [169]
        var te7 =( 0-666 );                                      // [169]
        var m_x =( 0-666 ); //: Mouse_X ://                      // [169]
        var m_y =( 0-666 ); //: Mouse_Y ://                      // [169]
        //:-----------------------------------:vars:[169]://     // [169]
        //:which_mode:[169]:-----------------------------://     // [169]
        if( c_edigame_edi === d_edigame_mod ){                   // [169]
                                                                 // [169]
            te7 =( d_edigame_edi.edi_te7 );                      // [169][---][153]
            m_x =( d_edigame_edi.mou_p_x );                      // [169]
            m_y =( d_edigame_edi.mou_p_y );                      // [169]
                                                                 // [169]
            o_k =( 1 );                                          // [169]
        }else                                                    // [169]
        if( c_edigame_gam === d_edigame_mod ){                   // [169]
                                                                 // [169]
            o_k =( 0 );                                          // [169]
        }else{                                                   // [169]
            ERR("[INVALID_GAME_MODE_2022]");                     // [169]
        };;                                                      // [169]
        //:-----------------------------:which_mode:[169]://     // [169]
        //:perform_update:[169]:-------------------------://     // [169]
        if( o_k >= 1 ){                                          // [169]
                                                                 // [169]
            d_dmx =( F_MOUMAST_P_X_DUX( m_x ) );                 // [169][157][145]
            d_dmy =( F_MOUMAST_P_Y_DUY( m_y ) );                 // [169][157][145]
                                                                 // [169]     [---]
            d_gtx =( F_EDIGAME_TE7_DUX_GTX( te7 , d_dmx ) );     // [169][157][153][152]
            d_gty =( F_EDIGAME_TE7_DUY_GTY( te7 , d_dmy ) );     // [169][157][153][152]
        }else{                                                   // [169]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [169]
            //: I don't know how game mode will handle   ://     // [169]
            //: this yet. Put a message as a reminder.   ://     // [169]
            //:::::::::::::::::::::::::::::::::::::::::::://     // [169]
            YEL( "[WHAT_LOGIC_FOR_GAME_MODE_I_DONT_KNOW]" );     // [169]
        };;                                                      // [169]
        //:-------------------------:perform_update:[169]://     // [169]
        return; //:RETURN_VOID://                                // [169]
    };;                                                          // [169]
                                                                 // [---]
    const   F_MOUMAST_EDI_PUT_U32 = function                     // [223][--------][---][---]
    PRIVATE_F_MOUMAST_EDI_PUT_U32(                               // [223][--------][---][---]
                                                                 // [223][--------][---][---]
        i_mou_p_x                                                // [223][--------][---][---]
    ,   i_mou_p_y                                                // [223][--------][---][---]
    ,   i_clidrag                                                // [223][--------][---][---]
    ){                                                           // [223][--------][---][---]
        //:#_STORE_MOUSE_POS_IN_EDIGAME_#:[223]:---------://     // [223][--------][---][---]
                                                                 // [223][--------][---][---]
            if( c_crash_on_vital_todo >= 1 ){   ////////////     // [236][------------------]
                ERR( "[#_NEED_E_G_GETTER_#]" );                  // [236][223][---][---][---]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236][------------------]
                                                                 // [---][------------------]
            let e_g =( d_edigame_edi );                          // [223][MOV][170][---][---]
                                                                 // [223][MOV][170][---][---]
            if( 0+c_moumast_clidrag_clk+0 === i_clidrag ){       // [223][-------------][---]
                                                                 // [223][-------------][---]
                e_g.clk_p_x =( i_mou_p_x );                      // [223][MAE][170][144][---]
                e_g.clk_p_y =( i_mou_p_y );                      // [223][MAE][170][144][---]
            }else                                                // [223][-------------][---]
            if( 0+c_moumast_clidrag_mid+0 === i_clidrag ){       // [223][-------------][---]
                                                                 // [223][-------------][---]
                e_g.mou_p_x =( i_mou_p_x );                      // [223][CAE][170][144][---]
                e_g.mou_p_y =( i_mou_p_y );                      // [223][CAE][170][144][---]
            }else{                                               // [223][-------------][---]
                ERR("[NOT_CLICKING_AND_NOT_DRAGGING]");          // [223][-------------][---]
            };;                                                  // [223][-------------][---]
        //:---------:#_STORE_MOUSE_POS_IN_EDIGAME_#:[223]://     // [223][-------------][---]
        //:#_FORCE_UPDATE_MAT_GLOBALS_#:[223]:-----------://     // [223][-------------][---]
                                                                 // [223][-------------][---]
            e_g.mou_p_x =( i_mou_p_x );                          // [223][-------------][---]
            e_g.mou_p_y =( i_mou_p_y );                          // [223][-------------][---]
            F_MOUMAST_FUP(); //: UPDATE[ d_dmx , d_dmy ]:://     // [223][-------------][---]
                             //: UPDATE[ d_gtx , d_gty ]:://     // [223][-------------][---]
                                                                 // [223][-------------][---]
        //:-----------:#_FORCE_UPDATE_MAT_GLOBALS_#:[223]://     // [223][-------------][---]
        //:#_CALL_EDITOR_TILE_PUTTER_#:[223]:------------://     // [223][-------------][---]
                                                                 // [223][-------------][---]
            let te7 =( e_g.edi_te7 );                            // [223][MOV][170][---][---]
            let la3 =( e_g.edi_la3 );                            // [223][MOV][170][---][---]
            let v16 =( e_g.edi_v16 );                            // [223][MOV][170][---][---]
            /// am4 =( e_g.edi_am4 );                            // [339][323][--------][---]
            let am4 =( 0 );                                      // [339][-------------][---]
            let am6 =( 0 );                                      // [340][-------------][---]
            //:#_BIT_PACK_AM4_OR_AM6_#:[339]:------------://     // [339][-------------][---]
            {                                                    // [339][-------------][---]
                let l_x , l_y , m_x , m_y , ro4 ;                // [340][-------------][---]
                                                                 // [------------------][---]
                l_x =( e_g.edi_l_x );                            // [340][339][--------][---]
                l_y =( e_g.edi_l_y );                            // [340][339][--------][---]
                m_x =( e_g.edi_m_x );                            // [340][339][--------][---]
                m_y =( e_g.edi_m_y );                            // [340][339][--------][---]
                ro4 =( e_g.edi_ro4 );                            // [340][339][--------][---]
                                                                 // [339][-------------][---]
                am4 =( F_TILEBOI_L_X_L_Y_M_X_M_Y_AM4(            // [339][-------------][---]
                                 l_x,l_y,m_x,m_y        ));;     // [339][-------------][---]
                                                                 // [340][-------------][---]
                am6 =( F_TILEBOI_L_X_L_Y_M_X_M_Y_RO4_AM6(        // [340][-------------][---]
                                 l_x,l_y,m_x,m_y,ro4    ));;     // [340][-------------][---]
                                                                 // [340][-------------][---]
                ASS( (am6>>>2)===(am4>>>0) , "[ERR_AM64]" );     // [340][-------------][---]
                                                                 // [340][-------------][---]
            }                                                    // [339][-------------][---]
            //:------------:#_BIT_PACK_AM4_OR_AM6_#:[339]://     // [339][-------------][---]
                                                                 // [---][-------------][---]
            let gtx =(       d_gtx );                            // [223][MOV][170][---][---]
            let gty =(       d_gty );                            // [223][MOV][170][---][---]
            let u32 =( F_TILEBOI_LA3_V16_AM6_U32(                // [341][323][223][MOV][170]
                                 la3,v16,am6     ));;            // [341][323][223][MOV][170]
                                                                 // [223][MOV][170][---][---]
            //:#_PUT_TILE_#:[423]:-----------------------://     // [423][------------------]
            //:#_SET_TILE_#:[423]:-----------------------://     // [423][------------------]
                                                                 // [423][------------------]
            if( d_edigame_edi.edi_mod_mir_onn >= 1 ){            // [423][------------------]
                                                                 // [423][------------------]
                //:#_MIRROR_TILE_PUT_#:[423]:------------://     // [423][------------------]
                                                                 // [423][------------------]
                F_MIRMAID_EDI_PUT_U32(                           // [423][------------------]
                                                                 // [423][------------------]
                    te7,la3 //:<--[ TSIZE , LAY[0|1|2]  ]://     // [423][------------------]
                ,   gtx,gty //:<--[ Global Tile X & Y   ]://     // [423][------------------]
                ,   u32     //:<--[ Bit_Packed_Tile_Data]://     // [423][------------------]
                );;                                              // [423][------------------]
                                                                 // [423][------------------]
                //:------------:#_MIRROR_TILE_PUT_#:[423]://     // [423][------------------]
            }else                                                // [423][------------------]
            if( d_edigame_edi.edi_mod_mir_onn <= 0 ){            // [423][------------------]
                                                                 // [423][------------------]
                //:#_STANDARD_TILE_PUT_#:[423]:----------://     // [423][------------------]
                                                                 // [423][------------------]
                F_TILEBOI_EDI_PUT_U32(                           // [423][223][MOV][170][---]
                                                                 // [423][223][MOV][170][---]
                    te7,la3 //:<--[ TSIZE , LAY[0|1|2]  ]://     // [423][223][MOV][170][---]
                ,   gtx,gty //:<--[ Global Tile X & Y   ]://     // [423][223][MOV][170][---]
                ,   u32     //:<--[ Bit_Packed_Tile_Data]://     // [423][223][MOV][170][---]
                );;                                              // [423][223][MOV][170][---]
                //:----------:#_STANDARD_TILE_PUT_#:[423]://     // [423][------------------]
            }else{                                               // [423][------------------]
                ERR("[BAD_MIRROR_MODE_FLAG_2022]");;;;;;;;;;     // [423][------------------]
            };;                                                  // [423][------------------]
            //:-----------------------:#_SET_TILE_#:[423]://     // [423][------------------]
            //:-----------------------:#_PUT_TILE_#:[423]://     // [423][------------------]

        //:------------:#_CALL_EDITOR_TILE_PUTTER_#:[223]://     // [223][--------][---][---]
    };;                                                          // [223][--------][---][---]
                                                         
    const   F_MOUMAST_CLIKOLD = "[FIX:CLIDRAG]" ;                // [---][222]
                                                                 // [---][222]
    const   F_MOUMAST_CLIDRAG = function //:::@CLIDRAG@::://     // [---][222]
    PRIVATE_F_MOUMAST_CLIDRAG(                                   // [---][222]
                                                                 // [---][222]
        i_mou_w_x //: @mou_w_x@ : Mouse_Whatever_X ::::::://     // [---][222]
    ,   i_mou_w_y //: @mou_w_y@ : Mouse_Whatever_Y ::::::://     // [---][222]
    ,   i_clidrag //: @clidrag@ : Clicking Or Dragging? :://     // [---][222]
    ){                                                           // [---][222]
    "use strict"                                                 // [314]
                                                                 // [--------]
        if( c_moumast_clidrag_clk === i_clidrag ){               // [---][222]
                                                                 // [---][222]
            //: MOUSE CLICK ONLY CODE HERE   ://                 // [223][222]
        }else                                                    // [---][222]
        if( c_moumast_clidrag_mid === i_clidrag ){               // [---][222]
                                                                 // [---][---]
            //: MOUSE IS DOWN ONLY CODE HERE ://                 // [223][222]
        }else{                                                   // [223][222]
            ERR("[INVALID_CLIDRAG]");                            // [223][222]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [223][222]
                                                                 // [--------]
        if( c_moumast_clidrag_clk === i_clidrag                  // [223][---]
        ||  c_moumast_clidrag_mid === i_clidrag                  // [223][---]
        ){                                                       // [223][---]
            //:#_CLICK_OR_DRAG_CODE_HERE_#:[223]:--------://     // [223][---]
                                                                 // [--------]
                d_edigame_tot_cod ++ ; //: Click_Or_Drag ://     // [314][---]
                                                                 // [314][---]
                //:#_RANDOMIZING_BRUSH_#:[314]:----------://     // [314][---]
                if( d_edigame_tot_cod                            // [---][314]
                %   d_edigame_edi.edi_mod_ran_sir                // [---][314]
                === 0                                            // [---][314]
                ){                                               // [---][314]
                    ///  rin =( 0 ); //:@rin@:RandINteger://     // [---][314]
                    ///  rin_te7 =( /** DONT_DO_THIS **/ );      // [---][314]
                    ///  rin_la3 =( /** DONT_DO_THIS **/ );      // [---][314]
                    ///  rin_v16 =( /** DONT_DO_THIS **/ );      // [---][314]
                    let edi =( d_edigame_edi );                  // [---][314]
                    let   e =( d_edigame_edi );                  // [---][314]
                    let RIS =( F_RANDINT_SKIPVAL );  //:@RIS@:// // [---][314]
                    let MMC =( F_RANDINT_SKIPVAL_MIN_MAX_CUR );  // [470][---]
                                                                 // [---][314]
                    if( 1 <=edi.edi_mod_ran_onn ){  //:::://     // [---][369]
                                                                 // [---][---]
                        if( edi.edi_mod_ran_te7 >=1 ){           // [---][314]
                                                                 // [---][314]
                            edi.edi_te7 =( MMC(                  // [470][314]
                    /**--**/  e.edi_mod_ran_te7_min              // [470][---]
                            , e.edi_mod_ran_te7_max              // [470][---]
                            , e.edi_te7   ));;;;;;;;;;;          // [---][314]
                        };;                                      // [---][314]
                        if( edi.edi_mod_ran_la3 >=1 ){           // [---][314]
                                                                 // [---][314]
                            edi.edi_la3 =( RIS( ( 3-1 )          // [---][314]
                            , e.edi_la3   ));;;;;;;;;;;          // [---][314]
                        };;                                      // [---][314]
                        if( edi.edi_mod_ran_v16 >=1 ){           // [---][314]
                                                                 // [---][314]
                            edi.edi_v16 =( MMC(                  // [470][314]
                    /**--**/  e.edi_mod_ran_v16_min              // [470][---]
                            , e.edi_mod_ran_v16_max              // [470][---]
                            , e.edi_v16   ));;;;;;;;;;;          // [---][314]
                        };;                                      // [---][314]
                    };; //::::::::::::::::::::::::::[369]://     // [---][369]
                };;                                              // [---][314]
                //:----------:#_RANDOMIZING_BRUSH_#:[314]://     // [314][---]
                                                                 // [--------]
            F_MOUMAST_EDI_PUT_U32(      ////////////////////     // [223](170)
                i_mou_w_x               ////////////////////     // [223](170)
            ,   i_mou_w_y               ////////////////////     // [223](170)
            ,   c_moumast_clidrag_mid   ////////////////////     // [223](170)
            );;;;;;;;;;;;;;;;;;;;;;;;   ////////////////////     // [223](170)
                                                                 // [223][---]
            //:--------:#_CLICK_OR_DRAG_CODE_HERE_#:[223]://     // [223][---]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [223][---]
    };; //:ENDFUNC[ F_MOUMAST_CLIDRAG ]:::::::::::::::::::::::// // [223][222]

    const   F_MOUMAST_MOV = function                             // [143]
    PRIVATE_F_MOUMAST_MOV(                                       // [143]
                                                                 // [143]
        i_evt_mou                                                // [143]
    ){                                                           // [143]
                                                                 // [---]
        var mov_p_x = i_evt_mou.offsetX ;                        // [144]
        var mov_p_y = i_evt_mou.offsetY ;                        // [144]
                                                                 // [144]
        d_edigame_edi.mou_p_x =( mov_p_x );                      // [144]
        d_edigame_edi.mou_p_y =( mov_p_y );                      // [144]
                                                                 // [---]
        F_MOUMAST_FUP( /**FORCE_UPDATE**/ );                     // [169](157)(153)(152)(145)
                                                                 // [---]
        //: TAG[ mouse down | mousedown | mouse-down  ]::://     // [222]
        //: TAG[ mouse_down | is-mouse-down | imd_chk ]::://     // [222]
                                                                 // [222]
        var butmask = i_evt_mou.buttons ; //: @PLURAL@ ::://     // [222]
                                                                 // [222]
        if( (butmask & c_moumast_001) > 0 ){ //:@PRIMARY@://     // [222]
                                                    ////////     // [222]
            F_MOUMAST_CLIDRAG(                      ////////     // [222] 
                mov_p_x  //:argname[ mou_w_x ]://   ////////     // [222] 
            ,   mov_p_y  //:argname[ mou_w_y ]://   ////////     // [222] 
            ,   c_moumast_clidrag_mid //:@mid@://   ////////     // [222] 
            );;                                     ////////     // [222] 
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [222] 
                                                                 // [---]
    };;                                                          // [---][143]
                                                                 // [---]
    const   F_MOUMAST_CLK = function                             // [---][143]
    PRIVATE_F_MOUMAST_CLK(                                       // [---][143]
                                                                 // [---][143]
        i_evt_mou                                                // [---][143]
    ){                                                           // [---][143]
                                                                 // [---]
        var clk_p_x = i_evt_mou.offsetX ;                        // [144]
        var clk_p_y = i_evt_mou.offsetY ;                        // [144]
                                                                 // [144]
        if( c_edigame_edi === d_edigame_mod ){                   // [---][170]
                                                                 // [---][170]
            F_MOUMAST_CLIDRAG(          ////////////////////     // [223][---]
                clk_p_x                 ////////////////////     // [223][---]
            ,   clk_p_y                 ////////////////////     // [223][---]
            ,   c_moumast_clidrag_clk   ////////////////////     // [223][---]
            );;;;;;;;;;;;;;;;;;;;;;;;   ////////////////////     // [223][---]
        }else                                                    // [---][170]
        if( c_edigame_gam === d_edigame_mod ){                   // [---][170]
                                                                 // [---][170]
            YEL("[I_DONT_KNOW_WHAT_GOES_HERE_YET_2022]");        // [---][170]
        }else{                                                   // [---][170]
            ERR("[WHO_DO_YOU_THINK_YOU_ARE_2022]");              // [---][170]
        };;                                                      // [---][170]
                                                                 // [---]
        if( d_moumast_lcp >= 1 ){   ;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
            LOG( "[clk_pxy]:" , [clk_p_x,clk_p_y] );             // [236][144]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [236]
                                                                 // [---]
    };;                                                          // [143]
                                                                 // [---]
    const   F_MOUMAST_INI = function                             // [143] 
    PRIVATE_F_MOUMAST_INI(                                       // [143] 
        /** No Arguments **/                                     // [143] 
    ){                                                           // [143] 
                                                                 // [143] 
        var ADD = document.addEventListener ;                    // [143] 
                                                                 // [143] 
        ADD( "mousemove", F_MOUMAST_MOV );                       // [143] 
        ADD( "click"    , F_MOUMAST_CLK );                       // [143] 
    };;                                                          // [143] 

    const   F_MOUMAST_TIK = function                             // [169]
    PRIVATE_F_MOUMAST_TIK(                                       // [169]
        /** No Arguments **/                                     // [169]
    ){                                                           // [169]
                                                                 // [169]
        if( d_moumast_dir >= 1 ){                                // [169]
            d_moumast_dir  =(0);                                 // [169]
                                                                 // [169]
            F_MOUMAST_FUP(); //:ForceUpdate://                   // [169]
        };;                                                      // [169]
    };;                                                          // [169]


//|--|--|--|--|--|--|--|--|--|SUBS|--|--|--|--|--|--|--|--|--|// // [142]
//|                                               [ @$$$$$@ ]|// // [142]
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __MOUMAST__|// // [142]
//|                                               [ @$$$$$@ ]|// // [142]
//|11|11|11|11|11|11|11|11|11|SUBS|11|11|11|11|11|11|11|11|11|// // [142]
//|06|06|06|06|06|06|06|06|06|SUBS|06|06|06|06|06|06|06|06|06|//
//|[ @$$$$$@ ]                                               |//
//|__SERGAME__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |//
//|[ @$$$$$@ ]                                               |//
//|--|--|--|--|--|--|--|--|--|0064|--|--|--|--|--|--|--|--|--|//

    //:--------------------------------------------------://    
    //: __SERGAME__ first because server will never [064]://    
    //: call client, but client might call server.  [064]://    
    //: ...Maybe with sockets? That's a later issue.[064]://    
    //:--------------------------------------------------://    

//|--|--|--|--|--|--|--|--|--|0064|--|--|--|--|--|--|--|--|--|//
//|                                               [ @$$$$$@ ]|//
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __SERGAME__|//
//|                                               [ @$$$$$@ ]|//
//|06|06|06|06|06|06|06|06|06|SUBS|06|06|06|06|06|06|06|06|06|//
//:#_WEIRD_SPOT_ABOVE_CLIGAME_FUNCS_#:[291]:=================:// // [291]
//:#_INIT_CLIENT_FRONTEND_MSI_#:[291]:=======================:// // [291]
//:#_FUNC_MSI_INI_TIK_#:[291]:===============================:// // [291]
                                                                 // [---]
    const   F_MSI_INI_TIK = function                             // [291]
    PRIVATE_F_MSI_INI_TIK(                                       // [291]
                                                                 // [291]
        /**VOID**/                                               // [291]
    ){                                                           // [291]
        if( d_msi_ini_all <= 0 ){                                // [291]
                                                                 // [291]
            if( d_msi_ini_one >= 1 ){   ////////////////////     // [291]
                d_msi_ini_one=(  0  );  ////////////////////     // [291]
                d_msi_dex_sub ++ ;      ////////////////////     // [291]
                d_msi_dex_sis=( 0-1 );  ////////////////////     // [291]
                                        ////////////////////     // [291]
            };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [291]
                                                                 // [291]
            let s_u_b =( d_msi_dex_sub );                        // [291]
                                                                 // [291]
            if( 0   > d_msi_dex_sub ){                           // [291]
                      d_msi_dex_sub =( 0 );                      // [291]
                      d_msi_dex_sis =(0-1);                      // [291]
            }else                                                // [291]
            if( 0 === s_u_b ){ F_ARTDECA_INI_MSI( ); }else       // [291]
            if( 1 === s_u_b ){ F_ARTGOLA_INI_MSI( ); }else       // [291]
            if( 2 === s_u_b ){                                   // [291]
                                                                 // [291]
                d_msi_ini_all =( 1 );                            // [291]
            }else{                                               // [291]
                ERR("[OOB_BITCHES_2022]");                       // [291]
            };;                                                  // [291]
        };;                                                      // [291]
    };;                                                          // [291]
                                                                 // [---]
//:===============================:#_FUNC_MSI_INI_TIK_#:[291]:// // [291]
//:=======================:#_INIT_CLIENT_FRONTEND_MSI_#:[291]:// // [291]
//:=================:#_WEIRD_SPOT_ABOVE_CLIGAME_FUNCS_#:[291]:// // [291]
//|07|07|07|07|07|07|07|07|07|SUBS|07|07|07|07|07|07|07|07|07|// // [???]
//|[ @$$$$$@ ]                                               |// // [???]
//|__CLIGAME__ VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV |// // [???]
//|[ @$$$$$@ ]                                               |// // [???]
//|--|--|--|--|--|--|--|--|--|0064|--|--|--|--|--|--|--|--|--|// // [???]
                                                                 // [---][---]
    const   F_CLIGAME_TIK = function                             //      [063]
    PRIVATE_F_CLIGAME_TIK(                                       //      [063]
                                                                 //      [063] 
        /** VOID **/                                             // [085][063]
    ){                                                           //      [063]
        //:[ATF]:------------------------------------://         // [085][063]
        //: Games "Main" loop that updates both      ://         // [085][063]
        //: rendering and game logic.                ://         // [085][063]
        //:------------------------------------:[ATF]://         // [085][063]
        //:Incriment_Simulation_Ticker:--------------://         // [085][---]
                                                                 // [---][---]
        d_tik ++ ; //:[ GlobalSimulationTicker      ]://         //      [085]
                   //:[ d_tik is the rule of law    ]://         //      [085]
                   //:[ No more[ i_tim ]            ]://         // [086][085]
                   //:TAG[ d_tik++|d_tik ++|tik++   ]://         // [086][085]
                                                                 // [---]
        //:--------------:Incriment_Simulation_Ticker://         // [085]
        //:Do_Work_And_Adjust_Frame_Delay:-----------://         // [085]
                                                                 // [085]
            d_cligame_t_0 = performance.now();                   // [085]
                                                                 // [---]
                if( d_msi_ini_all <= 0 ){ ;;;;;;                 // [291]
                F_MSI_INI_TIK( /**VOID**/ );;;;;                 // [291]
                };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;                 // [291]
                                                                 // [---]
                F_PIXDUMP_TIK( /**VOID**/ );                     // [465][---]
                F_GPUDATA_TIK( /**VOID**/ );                     // [---][229]
                F_GPUSYNC_TIK( /**VOID**/ );                     // [---][236]
                F_FILEMOB_TIK( /**VOID**/ );                     // [---][384]
            //- F_SEXYCAM_TIK( /**VOID**/ ); -//                 // [---][135]
                F_CAMERAH_TIK( /**VOID**/ );   //:<--@WTF_229@   // [229][115] WHY THE FUCK IS THIS GETTING UPDATED BEFORE ARTGIRL ?
                F_ARTGIRL_TIK( /**VOID**/ );                     // [---][085][063]
                F_MOUMAST_TIK( /**VOID**/ );                     // [---][169]
                                                                 // [---]
            d_cligame_t_1 = performance.now();                   // [085]
                                                                 // [085]
            d_cligame_mil =(  d_cligame_t_1                      // [085]
                             -d_cligame_t_0 );;                  // [085]
                                                                 // [085]
            d_cligame_ams =(  c_cligame_tms                      // [085]
                            - d_cligame_mil );;                  // [085]
                                                                 // [085]
        //:-----------:Do_Work_And_Adjust_Frame_Delay://         // [085]
                                                                 // [---]
    };;                                                          //      [063] 
                                                                 //      [063] 
    const   F_CLIGAME_GUL = function                             //      [063] 
    PRIVATE_F_CLIGAME_GUL(                                       //      [063] 
                                                                 //      [063] 
        /** VOID **/                                             // [085][063] 
    ){                                                           //      [063] 
        F_CLIGAME_TIK( /** VOID **/ );                           // [085][063] 
                                                                 //      [063] 
        //:#_SCRAPPED_REQUEST_ANIMATION_FRAME_#://               // [085]
                                                                 // [085]
        //:----------------------------------------------://     // [085]
        //: To achieve the desired frame rate, we need   ://     // [085]
        //: to call our loop function AFTER ALLOTED TIME ://     // [085]
        //: SLOT RUNS OUT! "ams" is the milliseconds     ://     // [085]
        //: that are left-over in our frame after        ://     // [085]
        //: we run all the code that needs to run        ://     // [085]
        //: via[ F_CLIGAME_TIK ].                        ://     // [085]
        //:                                              ://     // [085]
        //: ams == adjusted milli-seconds                ://     // [085]
        //:----------------------------------------------://     // [085]
        window.setTimeout(                                       // [085]
            ( F_CLIGAME_GUL )   //:@RECURSIVE@ ://               // [085]
        ,   ( d_cligame_ams )   //:LeftoverTime://               // [085]
        );;                                                      // [085]
    };;                                                          //      [063] 

//|--|--|--|--|--|--|--|--|--|0064|--|--|--|--|--|--|--|--|--|//
//|                                               [ @$$$$$@ ]|//
//| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ __CLIGAME__|//
//|                                               [ @$$$$$@ ]|//
//|07|07|07|07|07|07|07|07|07|SUBS|07|07|07|07|07|07|07|07|07|//
//:#_UNIT_TESTS_ON_ANY_ENVIRONMENT_#:[214]:==================://
if( notnode || yesnode /** ANY_FUCKING_ENVIRONMENT **/ ){ ;;;;;; // [---][214]
                                                                 // [---][214]
    //:TAG[  unit-test-section | unit_test_section  ]://         // [215]
    //:TAG[  unit test section | unittestsection    ]://         // [215]
    //:TAG[  unit-tests | unit_tests | unittests    ]://         // [480]
                                                                 // [---]
    //:#_GUESS_I_LL_DIE_#:[480]:-------------------------://     // [480]
    {                                                            // [480]
        let c49_got =( 0 );  //:-------------------------://     // [480]
        let c49     =( 0 );  //:                         ://     // [480]
        let l16     =( 0 );  //:                         ://     // [480]
        let pf8     =( 0 );  //:                         ://     // [480]
        let t25     =( 0 );  //:-------------------------://     // [480]
                                                                 // [480]
        for(    c49 = 0 ; c49 <=(49-1) ;  c49++ ){               // [480]
                                                                 // [480]
            //:#____L16____TO____C49____________#://             // [480]
                    l16     =( d_c49_l16[ c49 ] );               // [480]
            if(     l16 < 0xFF                  ){               // [480]
                    c49_got =( d_l16_c49[ l16 ] );               // [480]
            if(   0+c49_got+0 !=     c49        ){               // [480]
                                                                 // [480]
                ERR("[OH_FUCKING_NO:L16]");                      // [480]
            };;};;                                               // [480]
                                                                 // [480]
            //:#____PF8____TO____C49____________#://             // [480]
                    pf8     =( d_c49_pf8[ c49 ] );               // [480]
            if(     pf8 < 0xFF                  ){               // [480]
                    c49_got =( d_pf8_c49[ pf8 ] );               // [480]
            if(   0+c49_got+0 !=     c49        ){               // [480]
                                                                 // [480]
                ERR("[OH_FUCKING_NO:PF8]");                      // [480]
            };;};;                                               // [480]
                                                                 // [480]
            //:#____T25____TO____C49____________#://             // [480]
                    t25     =( d_c49_t25[ c49 ] );               // [480]
            if(     t25 < 0xFF                  ){               // [480]
                    c49_got =( d_t25_c49[ t25 ] );               // [480]
            if(   0+c49_got+0 !=     c49        ){               // [480]
                                                                 // [480]
                ERR("[OH_FUCKING_NO:T25]");                      // [480]
            };;};;                                               // [480]
        };;                                                      // [480]
    }                                                            // [480]
    //:-------------------------:#_GUESS_I_LL_DIE_#:[480]://     // [480]
    //:#_UTM_LTC_GTC_#:[453]:----------------------------://     // [---]
    //:#_UTM_GTC_LTC_#:[453]:----------------------------://     // [453]
    {                                           //:::::::://     // [453]
        //: GLOBAL ===> LOCAL ===> GLOBAL ://   //:::::::://     // [453]
                                                //:::::::://     // [453]
        let obj_gtc =( d_mirmaid_gtc );         //:::::::://     // [453]
        let obj_ltc =( d_mirmaid_ltc );         //:::::::://     // [453]
        let got_gtc =( NEW_GTC()     );         //:::::::://     // [453]
                                                //:::::::://     // [453]
                                                                 // [453]
        if( undefined === obj_gtc ){ ERR("[UND:obj_gtc]");};     // [453]
        if( undefined === obj_ltc ){ ERR("[UND:obj_ltc]");};     // [453]
        if( undefined === got_gtc ){ ERR("[UND:got_gtc]");};     // [453]
                                                                 // [453]
        //:@utt@ : Unit_Test_Table:::::::::::::::::::::::://     // [453]
        let utt =( new Uint32Array([    //:::::::::::::::://     // [453]
                                        //:::::::::::::::://     // [453]
        //: ( te7 ) , ( gtx ) , ( gty ) :::::::::::::::::://     // [453]
            (  0  ) , (  0  ) , (960-1) //:::::::::::::::://     // [453]
        ,   (  1  ) , (480-1) , (  0  ) //:::::::::::::::://     // [453]
        ,   (  2  ) , (  0  ) , (240-1) //:::::::::::::::://     // [453]
        ,   (  3  ) , (120-1) , (  0  ) //:::::::::::::::://     // [453]
        ,   (  4  ) , (  0  ) , ( 60-1) //:::::::::::::::://     // [453]
        ,   (  5  ) , ( 30-1) , (  0  ) //:::::::::::::::://     // [453]
        ,   (  6  ) , (  0  ) , ( 15-1) //:::::::::::::::://     // [453]
        ]));;  //::::::::::::::::::::::::::::::::::::::::://     // [453]
                                                    //:::://     // [453]
        for( let dex = 0 ; dex <=(7-1) ; dex ++ ){  //:::://     // [453]
                                                    //:::://     // [453]
            obj_gtc.m_te7 =( utt[ (dex*3)+0 ] );    //:::://     // [453]
            obj_gtc.m_gtx =( utt[ (dex*3)+1 ] );    //:::://     // [453]
            obj_gtc.m_gty =( utt[ (dex*3)+2 ] );    //:::://     // [453]
                                                    //:::://     // [453]
            //::::::::::::GLOBAL=======>LOCAL :::::::::::://     // [453]
            F_TILEBOI_INN_OBJ_GTC_OUT_OBJ_LTC(      //:::://     // [453]
                          obj_gtc  ,  obj_ltc );;   //:::://     // [453]
                                                    //:::://     // [453]
            //::::::::::::LOCAL=======>GLOBAL :::::::::::://     // [453]
            F_TILEBOI_INN_OBJ_LTC_OUT_OBJ_GTC(      //:::://     // [453]
                          obj_ltc  ,  got_gtc );;   //:::://     // [453]
                                                    //:::://     // [453]
            if( 0                                   //:::://     // [453]
            ||  ( obj_gtc.m_te7 != got_gtc.m_te7 )  //:::://     // [453]
            ||  ( obj_gtc.m_gtx != got_gtc.m_gtx )  //:::://     // [453]
            ||  ( obj_gtc.m_gty != got_gtc.m_gty )  //:::://     // [453]
            ){                                      //:::://     // [453]
                ERR("[@_U_T_F_@:GTC_LTC_GTC:2022]");//:::://     // [453]
            };;                                     //:::://     // [453]
        };;                                         //:::://     // [453]
                                                    //:::://     // [453]
    }                                               //:::://     // [453]
    //:----------------------------:#_UTM_LTC_GTC_#:[453]://     // [453]
    //:----------------------------:#_UTM_GTC_LTC_#:[453]://     // [453]
                                                                 // [---]
    {                                                            // [215]
        let F_N =( F_STR_ASC /** Str To Asc Tests**/  );         // [215]
                                                                 // [215]
        if(  65 != F_N( "A" ) ){ ERR("[OHFUCKNO:A]"); };         // [215]
        if(  90 != F_N( "Z" ) ){ ERR("[OHFUCKNO:Z]"); };         // [215]
                                                                 // [215]
        if(  97 != F_N( "a" ) ){ ERR("[OHFUCKNO:a]"); };         // [215]
        if( 122 != F_N( "z" ) ){ ERR("[OHFUCKNO:b]"); };         // [215]
                                                                 // [215]
        if(  48 != F_N( "0" ) ){ ERR("[OHFUCKNO:0]"); };         // [215]
        if(  57 != F_N( "9" ) ){ ERR("[OHFUCKNO:9]"); };         // [215]
    }                                                            // [215]
    {                                                            // [215]
        let F_N =( F_NEX_PO2 /** Next POW2 Tests **/  );         // [215][214]
        if(  1 !== F_N( 0 ) ){ ERR("[NEX_PO2_F01]" ); };         // [---][214]
        if(  2 !== F_N( 1 ) ){ ERR("[NEX_PO2_F02]" ); };         // [---][214]
        if(  4 !== F_N( 3 ) ){ ERR("[NEX_PO2_F03]" ); };         // [---][214]
        if(  8 !== F_N( 7 ) ){ ERR("[NEX_PO2_F04]" ); };         // [---][214]
        if( 32 !== F_N(23 ) ){ ERR("[NEX_PO2_F05]" ); };         // [---][214]
        if( 64 !== F_N(42 ) ){ ERR("[NEX_PO2_F06]" ); };         // [---][214]
        if(128 !== F_N(69 ) ){ ERR("[NEX_PO2_F07]" ); };         // [---][214]
    }                                                            // [215]
                                                                 // [---][214]
};;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; // [---][214]
//:==================:#_UNIT_TESTS_ON_ANY_ENVIRONMENT_#:[214]://
//:INIT_CLIENT_FRONTEND:[035]:===============================://
if( notnode ){  window.onload = function( /** [030] **/ ){

    if( "[NOT_O_K]" === d_urlsite_o_k ){                         // [059] 
        ERR( d_msgkill_001 );                                    // [059] 
    };;                                                          // [059] 
                                                                 // [059]
    F_LUT_UTM();    //: Lookup_Tables_UnitTestMain ::::::://     // [332]
    F_INI_CLI();    //:INIt: CLIent :--------------------://     // [???] 
                                                                 // [063]
    F_GPUDATA_INI();//:BARE BONES WEBGL INIT :-----------://     // [229]
                                                                 // [---]
    F_ARTDUDE_INI(); //: #_INTERLACED_INIT_AND_TEST_# :::://     // [243]
    F_ARTDUDE_UTM(); //: #_INTERLACED_INIT_AND_TEST_# :::://     // [243]
                                                                 // [---]
    F_ARTGIRL_INI();//:Init Webgl And Frag Shader :------://     // [063] 
    F_KEYMAST_INI();//:INIt: Client Keyboard Handler     ://     // [???] 
    F_MOUMAST_INI();//:INIt: Master Mouse Input Handler  ://     // [143]
                                                                 // [071]
    F_ARTGIRL_RPL( c_artgirl_ren_def );                          // [071]
                                                                 // [071]
    F_CLIGAME_GUL( 0.0 );   //:Enter_Game_Loop ://               // [063] 

    //:#_STARTUP_MODE_MODIFICATIONS_#:[218]:-------------://     // [218]
    if( "[SUM_TUT]" === c_sum ){                                 // [218]
                                                                 // [---]
        F_KEYEMMA_HOMEROW( "5" , {} );                           // [221]
        F_KEYEMMA_KEY_PAD( "5" , {} );                           // [221]
        F_KEYEMMA_KEY_PAD( "5" , {} );                           // [221]
        F_KEYEMMA_KEY_PAD( "5" , {} );                           // [221]
                                                                 // [---]
    }else                                                        // [218]
    if( "[SUM_REL]" === c_sum ){                                 // [218]
                                                                 // [218]
        /** Nothing here yet. 2022_08_30 **/                     // [218]
    }else{                                                       // [218]
        ERR("[ATOMIC_IVY_MMO:INVALID_STARTUP_MODE]");            // [218]
    };;                                                          // [218]
    //:-------------:#_STARTUP_MODE_MODIFICATIONS_#:[218]://     // [218]
};; };;                                                          // [???]
//:===============================:INIT_CLIENT_FRONTEND:[035]:// // [035]
//:INIT_SERVER_BACKEND:[035]:================================://
if( yesnode ){                                                   // [140][026]

    F_LUT_UTM(); //: Lookup_Tables_UnitTestMain :::::::::://     // [332]

    if( NIL( d_dbu ) ){                        //: [040] ://      
        F_MSG_NIL_DBU();                       //: [040] ://      
    }else{                                     //: [040] ://      
        F_ISD();     //:Initialize_Server_Data   : [040] ://          
        F_TDC();     //:Test_Database_Connection : [040] ://   

        //:< < < < < < < < < < < < < < < < < < < < < < < < < < < < < < : NOTICE_ME_SENPAI : These operations should be using promises. Dangerous race condition stuff is happening here.
        
        //:Create_Table_Statements:[041]:----------------://    
                                                                
            F_CTS( d_cts_tab_hex , "[tab_hex]" );//:[041]://    
                                                                
        //:----------------:Create_Table_Statements:[041]://    
    };;                                                         

require( "http" ).createServer( function( i_ask , i_giv ){       // [139][017]

    const   sob ={  //:----------------------------------://    
        m_ask : "[nil][!s!:m_ask]"  //: < < < < < < [042]://    
    ,   m_giv : "[nil][!s!:m_giv]"  //: < < < < < < [042]://    
    ,   m_url : "[nil][!s!:m_url]"  //: < < < < < < [042]://    
    ,   m_pam : "[nil][!s!:m_pam]"  //: < < < < < < [042]://    
    ,   m_seg : "[nil][!s!:m_seg]"  //: < < < < < < [042]://    
    };; //:----------------------------------------------://    
    //:load_state_object_bundle:-------------------------://
                                                         ;;;     // [139][019]
    sob.m_ask = i_ask                                    ;;;     // [139][019]
    sob.m_giv = i_giv                                    ;;;     // [139][019]
    sob.m_url = l_url.parse( i_ask.url , 1 ).pathname    ;;;     // [139][019]
    sob.m_pam = l_qs .parse( i_ask.url , 1 ).query       ;;;     // [139][019]
    sob.m_seg = [ "URLPATH_SEGMENTS_NOT_LOADED]" ]       ;;;     // [139][019]
                                                         ;;;     // [139][019]
    //:-------------------------:load_state_object_bundle://
    //:load_state_object_bundle:[043]:-------------------://

    sob.m_url =( sob.m_url.toUpperCase() );      //!#MRI#!//     // [139][019]
	sob.m_seg =( sob.m_url.split( "/" ).filter( n => n ) );

    //:-------------------:load_state_object_bundle:[043]://
 
    if( sob.m_url == "/HELLO" ){                                 // [139][024]
                                                                 // [139][024]
        sob.m_giv.end( "WORLD" );                                // [139][024]
    }else                                                        // [139][024]
    if( sob.m_url == "/ENV" ){                       //:[058]://
                                                     //:[058]://
        var str_env = F_DTS( process.env );          //:[058]://
        sob.m_giv.writeHead( 200 , d_txt );          //:[058]://
        sob.m_giv.end( str_env );                    //:[058]://

    }else
    if( sob.m_url === "/WEBROOT"        ){ //:@PHONEHOME@://     // [357][--------]
                                                 //:[357]://     // [357][--------]
        let webroot = F_ASERVER_GET_WEBROOT( );  //:[357]://     // [357][--------]
        sob.m_giv.writeHead( 200 ,    d_txt  );  //:[357]://     // [357][--------]
        sob.m_giv.end(              webroot  );  //:[357]://     // [357][--------]
                                                 //:[357]://     // [357][--------]
    }else //::::::::::::::::::::::::::::::::::::::::[357]://     // [357][--------]
    if( sob.m_url ==  "/ATOMIC_IVY_MMO" ){ //:#SELFSERVE#://     // [140][027][025]

        //:NOTE[ #_CLIENT_AND_SERVER_ARE_SAME_FILE_# ]:::://     // [---][346][--------]
        //: TAG[ ./server.js === ./ATOMIC_IVY_MMO.JS ]:::://     // [---][346][--------]
        //: TAG[ ./client.js === ./ATOMIC_IVY_MMO.JS ]:::://     // [---][346][--------]
        //-        client_js =( "./ATOMIC_IVY_MMO.JS" ); -//     // [351][346][---][---]

        //: #_MORE_FLEXIBLE_SELF_SERVE_HERE_#:[TODO]:::::://     // [350]

        //- l_fs.readFile( client_js,(i_err,i_cof)=>{...}-//     // [351][346][140][025]

        let o_typ ="[nil][o_typ:was_never_set_fool:2022]";       // [354]

        F_ASERVER_GETSELF_AIM().then((                           // [351][-------------]
                                                                 // [351][-------------]
            i_cof //: @_AIM_COF_@ ://                            // [351][-------------]
        )=>{                                                     // [351][-------------]
                                                                 // [351][-------------]
            let o_k   =( 1 );  //:#_IAM_NOT_ALWAYS_OKAY_#://     // [354][351][--------]
                               //:#_MAYBE_IAM_ALWAYS_OK_#://     // [354][-------------]
                                                                 // [------------------]
            o_typ =F_TYPESTR( i_cof );                           // [354][-------------]
                                                                 // [354][-------------]
            if( "string" != o_typ ){  //////////////////////     // [354][-------------]
            ///               //:------------------------://     // [354][-------------]
                o_k = o_k ;   //: From observation, some ://     // [354][-------------]
            ///               //: types that we treat    ://     // [354][-------------]
            ///               //: like strings are not   ://     // [354][-------------]
            ///               //: actually strings.      ://     // [354][-------------]
            ///               //:------------------------://     // [354][-------------]
            };; ////////////////////////////////////////////     // [354][-------------]

                                                                 // [---][-------------]
            if( o_k <= 0 ){                                      // [354][140][---][025]
                sob.m_giv.writeHead( 200 , d_txt );              // [353][-------------]
                i_cof = "[I_COF_IS_NOT_A_STRING_2022]" ;         // [354][351][140][025]
            }else{                                               // [---][140][---][025]
                sob.m_giv.writeHead( 200 , d_js );               // [---][140][---][025]
                                                                 // [---][-------------]

                //:get_app_domain:[059]:---------------------:// // [---][059]
                var n =( "\n" );                                 // [---][059]
                                                                 // [--------]
                let has_webroot =( F_ASERVER_HAS_WEBROOT() );    // [359][---]
                let str_webroot =( F_ASERVER_GET_WEBROOT() );    // [359][---]
                                                                 // [--------]
                if( 0 === has_webroot ){                         // [359][059]
                                                                 // [---][059]
                    d_urlsite_o_k =( "[NOT_O_K]" );              // [---][059]
                    d_urlsite =( ""                              // [---][059]
                                                                 // [---][059]
                    +"[SEE:d_msgkill_001]"                       // [---][059]
                                                                 // [---][059]
                    );;                                          // [---][059]
                }else                                            // [---][059]
                if( 1 === has_webroot ){                         // [359][059]
                                                                 // [--------]
                    d_urlsite_o_k =( "[YES_O_K]" );              // [---][059]
                    d_urlsite     =( str_webroot );              // [359][059]
                }else{                                           // [359][059]
                                                                 // [359][059]
                    ERR("[#_EXPECTED_EDCL_2022_10_17_#]");       // [359][059]
                };;                                              // [359][059]
                //:---------------------:get_app_domain:[059]:// // [---][059]

                //:#MYSBSYS#:[058]:--------------------------:// // [---][058] 
                                                                 // [---][058] 
                i_cof = ""+i_cof+"";                             // [---][058] 
                i_cof = F_REPLACE_BOD_FIN_REP(                   // [355][058]
                i_cof                                            // [355][---]
                ,   "[BLACK_MAGIC:d_urlsite]"                    // [355][059]
                ,                 d_urlsite                      // [---][059] 
                );;                                              // [---][058] 
                i_cof = F_REPLACE_BOD_FIN_REP(                   // [355][059]
                i_cof                                            // [355][---]
                ,   "[BLACK_MAGIC:d_urlsite_o_k]"                // [355][059]
                ,                 d_urlsite_o_k                  // [---][059] 
                );;                                              // [---][059] 
                //:--------------------------:#MYSBSYS#:[058]:// // [---][058] 
            };;
            sob.m_giv.end( i_cof , "utf-8" );                    // [140][---][025]

        }).catch( (i_err)=>{ //:::::::::::::::::::::::::::::::// // [353]
                                                                 // [353]
            let o_tag =("[YOUVE_GOT_ISSUES_DUDE_2022]");         // [354][353]
            let o_env =("[YESGOOG]===(" + yesgoog     );         // [354][---]
                o_typ =( o_typ                        );         // [354][---]
            let o_err =( ""+i_err+""                  );         // [354][---]
            let o_msg =(   o_tag        ////////////////         // [354][353]
            +   "o_env:("+ o_env + ")"  ////////////////         // [354][---]
            +   "o_typ:("+ o_typ + ")"  ////////////////         // [354][---]
            +   "o_err:("+ o_err + ")"  ////////////////         // [354][---]
            );;;;;;;;;;;;;;;;;;;;;;;;;  ////////////////         // [354][353]
            sob.m_giv.end( o_msg , "utf-8"            );         // [353][---]
                                                                 // [--------]
        });;   //:::::::::::::::::::::::::::::::::::::::::::::// // [351]
        //- });; -//  //::::::::::::::::::::::::::::::::::::::// // [351]
    }else
    //:dabitch_crud:[046]:-----------------------------------://
    if(  1                                                       // [046] 
    &&   "DABITCH" === sob.m_seg[ 0 ]                            // [046] 
                                                                 // [046] 
    &&      (  0                                                 // [046] 
            || "C" === sob.m_seg[ 1 ]  //: DABITCH/C/TAB_HEX ://
            || "R" === sob.m_seg[ 1 ]  //: DABITCH/R/TAB_HEX ://
            || "U" === sob.m_seg[ 1 ]  //: DABITCH/U/TAB_HEX ://
            || "D" === sob.m_seg[ 1 ]  //: DABITCH/D/TAB_HEX ://
            )                                                    // [046] 
    &&   "TAB_HEX" === sob.m_seg[ 2 ]                            // [046] 
    ){                                                           // [046] 
        var     nam = sob.m_seg[ 3 ];                            // [046] 
        var     hex = sob.m_seg[ 4 ];                            // [046] 
        var c_r_u_d = sob.m_seg[ 1 ];                            // [046] 
        var crud ={                                              // [046] 
            "C" : F_DABITCH_C_TAB_HEX  //: DABITCH/C/TAB_HEX ://
        ,   "R" : F_DABITCH_R_TAB_HEX  //: DABITCH/R/TAB_HEX ://
        ,   "U" : F_DABITCH_U_TAB_HEX  //: DABITCH/U/TAB_HEX ://
        ,   "D" : F_DABITCH_D_TAB_HEX  //: DABITCH/D/TAB_HEX ://
        };;                                                      // [046] 
        (crud[ c_r_u_d ])(                                       // [046] 
            nam                                                  // [046] 
        ,   hex                                                  // [046] 
        ).then( ( i_saywhat )=>{                                 // [046] 
                                                                 // [046] 
            F_ASERVER_ENDJSON( sob , i_saywhat );                // [046] 
                                                                 // [046] 
        }, F_NICEGUY );;                                         // [046] 
    }else                                                        // [046] 
    //:-----------------------------------:dabitch_crud:[046]://
    if(  1                                                      
    &&   "DABITCH" === sob.m_seg[ 0 ] //: < < < < < < < [049]:// // [049]
    &&   "MAKETAB" === sob.m_seg[ 1 ] //: < < < < < < < [049]:// // [049]
    &&   "TAB_HEX" === sob.m_seg[ 2 ] //: < < < < < < < [049]:// // [049]
    ){   //: PATH :   DABITCH/MAKETAB/TAB_HEX < < < < < [049]:// // [049]
         //: FUNC : F_DABITCH_MAKETAB_TAB_HEX < < < < < [049]:// // [049]
                                                                
        F_DABITCH_MAKETAB_TAB_HEX(  )                            // [049] 
        .then( ( i_saywhat )=>{                                  // [049] 
                                                                 // [049] 
            F_ASERVER_ENDJSON( sob , i_saywhat );                // [049] 
                                                                 // [049] 
        }, F_NICEGUY );;                                         // [049] 
    }else
    if(  1
    &&   "DABITCH" === sob.m_seg[ 0 ] //: < < < < < < < [042]:// // [042]
    &&   "DROPTAB" === sob.m_seg[ 1 ] //: < < < < < < < [042]:// // [042]
    &&   "TAB_HEX" === sob.m_seg[ 2 ] //: < < < < < < < [042]:// // [042]
    ){   //: PATH :   DABITCH/DROPTAB/TAB_HEX < < < < < [042]:// // [042]
         //: FUNC : F_DABITCH_DROPTAB_TAB_HEX < < < < < [042]:// // [042]
                                                                 // [---]
        F_DABITCH_DROPTAB_TAB_HEX(                               // [042] 
                                                                 //      [044] 
            sob.m_seg[ 3 ] //:Password://                        //      [044] 
                                                                 //      [044] 
        ).then( ( i_saywhat )=>{                                 //      [044] 
                                                                 //      [044] 
            F_ASERVER_ENDJSON( sob , i_saywhat );                //      [044] 
                                                                 //      [044] 
        }, F_NICEGUY );;                                         //      [044] 
    }else{                                                       // [140][027]
                                                                 // [140][027]
        sob.m_giv.writeHead( 200 ,  d_htm  );                    // [140][027]
        sob.m_giv.end( d_webpage , "utf-8" );                    // [140][027]
    };;                                                          // [140][027]

}).listen(process.env.PORT); //:ENDFUNC[ SERVER ]::::::::://     // [139][017]

};; //:END_ENVIRONMENT_GAURD[ yesnode ]:::::::::::::::::::::::// // [140][026]
//:================================:INIT_SERVER_BACKEND:[035]://
//:TODO_SECTION:[270]:=======================================:// // [270]
/** TODO *************************************************** *** // [270]

    TAG[ todo-section | todo_section | todosection ]             // [271]

                                                                 // [270]
    TODO001 : <REMOVED,IT WAS A BULLSHIT NOTION>                 // [118][067]
                                                                 // [---]
    TODO002 : Finish reading :                                   // [118][067]
            : http://learnwebgl.brown37.net                      // [118][067]
            :       /the_big_picture/3d_rendering.html           // [118][067]
                                                                 // [---]
    TODO003 : SEE[ DONE003 ]                                     // [283][REF][270]
    TODO004 : SEE[ DONE004 ]                                     // [291][271]
    TODO005 : SEE[ DONE005 ]                                     // [283][282]
                                                                 // [---]
    TODO006 : Stub in MSI Function Code                          // [291]
    TODO007 : ARTGOLA - Non fractal graphics render.             // [291]
    TODO008 : Get Shader #7 displaying ARTGOLA graphics          // [291]
    TODO009 : ARTGOLA - Fractal graphics render                  // [291]
    TODO010 : Make sure shader #7 is still correct.              // [291]
    TODO011 : ARTDECA - Non fractal graphics render.             // [291]
    TODO012 : Get Shader #7 displaying ARTDECA graphics          // [291]
    TODO013 : ARTDECA - Fractal graphics render.                 // [291]
    TODO014 : Make sure shader #7 is still correct.              // [291]
    TODO015 : IMPLEMENT[ USE_ATH ]In Shader #7                   // [291]
    TODO016 : IMPLEMENT[ USE_BVS ]In Shader #7                   // [291]
                                                                 // [---]
*** *************************************************** TODO **/ // [270]
//:=======================================:TODO_SECTION:[270]:// // [270]
/** TAG_SECTION ******************************************** *** // [088]
*** CTRL_F_HELP ******************************************** *** // [088]
TAG[ tag_section | tag-section | tag_section ]BEG -------------- // [088]
TAG[ tag section | tagsection | tagsec | tag-sec | tag_sec ]---- // [109]

    TAG[ F_MIRMAID_ROT_C_W ][ ____________ ][ ______________ ]   // [454]
    SEE[ F _ MIRMAID _ AM6 _ U32 _ ROT_C_W ][ ______________ ]   // [454]

    TAG[ mod_mod_mir_onn | modmodmironn | mod-mod-mir-onn    ]   // [446]
    TRY[ edi _ mod _ mir _ onn ][ __________________________ ]   // [446]
                                                                 // [446]
    TAG[ symbilat | sym_bilat | sym-bilat | ________________ ]   // [446]
    TAG[ symbilatia | sym-bilatia | sym_bilatia | __________ ]   // [446]
    TAG[ bilasym | bila_sym | bila-sym | bilat-sym | _______ ]   // [446]
    TAG[ bilatsym | bilateral-sysystematic-problematic | ___ ]   // [446]
    SEE[ F _ MIRMAID _ EDI _ PUT _ U32 _ SYMBILA ][ ________ ]   // [446]
                                                                 // [446]
    TAG[ symbadi | sym_radi | sym-radi | symradial  | ______ ]   // [446]
    TAG[ sym_radial | sym-radial | symmetric-radial | ______ ]   // [446]
    TAG[ symradia | sym-radia | sym_radia | ________________ ]   // [446]
    SEE[ F _ MIRMAID _ EDI _ PUT _ U32 _ SYMRADI ][ ________ ]   // [446]

    TAG[ partial-texture-update | partial_texture_update     ]   // [415]
    TAG[ partialtextureupdate | partial_texture_push | ptp   ]   // [415]
    TAG[ partial-texture-push | partialtexturepush | p_t_p   ]   // [415]
    TAG[ sub-texture-push | sub_texture_push | subtexpush    ]   // [415]
    TAG[ subtexturepush | sub_tex_push | sub-tex-push | stp  ]   // [415]
    SEE[ i2d_wgl.texSubImage2D ][ __________________________ ]   // [415]

    TAG[ konamic_a_z | konamic-a-z | konamicaz | kona-a-z    ]   // [403]
    TAG[ konamic-alphabetical | konamic-alphabet | konami-az ]   // [403]
    SEE[ d _ konamic_lut_a_z ][ ___ youtu.be/C3JLpvt9X6M ___ ]   // [403]

    TAG[ custom_nil_type | custom nil type | cust nil  ] ::::::  // [380]
    TAG[ custom-nil-type | cuustom nil     | cust null ] ::::::  // [380]
    TAG[ where the fuck is my custom nil type check    ] ::::::  // [380]
    TAG[ where_the_fuck_is_my_custom_nil_type_check    ] ::::::  // [380]
    TAG[ where-the-fuck-is-my-custom-nil-type-check    ] ::::::  // [380]
    SEE[ YES_NIL ]OR[ NOT_NIL ]FUNCTION_SECTIONS[______] ::::::  // [380]


    TAG[ new-promise | new_promise | newpromise | makeprom ]     // [350]
    TAG[ newprom | new_prom | new-prom | promise-construct ]     // [350]
    TAG[ make-promise | make_promise | makepromise | prom  ]     // [350]
    SEE[ F_NEVERNO ]( ___ A promise that never says no ___ )     // [350]

    TAG[ purple-math | purple_math | purplemath ]                // [331]
    TRY[ HOT_MATH (tag in bottom of file comments ) ]            // [331]

    TAG[ touching-am4 | touching_am4 | touchingam4 | am4-to4 ]   // [329]
    TAG[ am4-touching | am4_touching | am4touching | am4_to4 ]   // [329]
    TAG[ to4_am4 | to4-am4 | to4am4 | am4to4 | auto-mask     ]   // [329]
    TAG[ auto_mask | automask | am4-test-bits | am4_test_bits]   // [329]
    TAG[ auto tile test bits | auto_tile_test_bits | amtest  ]   // [329]
    SEE[ [ c _ vff_latches_hor ]OR[ c _ vff_latches_ver ]    ]   // [329]
    SEE[ [ c _ vff_mirrors_hor ]OR[ c _ vff_mirrors_ver ]    ]   // [329]

    TAG[ tile-types | tile_types | tiletypes                 ]   // [285]
    TAG[ material-types | material_types | materialtypes     ]   // [285]
    SEE[ __material_colors__ ][(Colors Named By What They Do)]   // [285]

    TAG[ frag shader use section | frag shader options ] [---]   // [282]
    TAG[ frag-shader-use-section | frag-shader-options ] [---]   // [282]
    TAG[ frag_shader_use_section | frag_shader_options ] [---]   // [282]
    TAG[ fragshaderusesection    | fragshaderoptions   ] [---]   // [282]
    TAG[ compile-options | compile options ][ ________ ] [---]   // [282]
    TAG[ compile_options | compileoptions  ][ ________ ] [---]   // [282]
    SEE[ d ____ artgirl ____ use ]@ONE_WAY_COMMENT_LINK@ [---]   // [282]

    TAG[ slated shaders | shader coding plan | shader agenda ]   // [282]
    TAG[ slated_shaders | shader_coding_plan | shader_agenda ]   // [282]
    TAG[ slated-shaders | shader-coding-plan | shader-agenda ]   // [282]
    TAG[ slatedshaders  | shadercodingplan   | shaderagenda  ]   // [282]
    SEE[ __super_secret_shader_waterfall_agenda__ ][ _______ ]   // [282]

    TAG[ camera mode | rendering mode | rendering method ___ ]   // [282]
    TAG[ camera_mode | rendering_mode | rendering_method ___ ]   // [282]
    TAG[ camera-mode | rendering-mode | rendering-method ___ ]   // [282]
    SEE[ __fragment_shader_rendering_modes__ (FSM) _____ ___ ]   // [282]

    : MOVED_FROM_CTRL_F_SECTION_2022_09_19 :------------------:  // [282][MOV][---]
                                                              :  // [282][MOV][---]
        shader numbers | shadernumbers | shader_numbers       :  // [282][MOV][084]
        shader number | shadernumber | shader_number          :  // [282][MOV][084]
        shader index | shaderindex | shader_index             :  // [282][MOV][084]
        SEE[ c_artgirl_ren_001 ]TO[ c_artgirl_ren_009 ]       :  // [282][MOV][084]
        PASTE_LINE                                            :  // [282][MOV][---]
                                                              :  // [282][MOV][---]
        load program | use program | load-program             :  // [282][MOV][082]
        load_program | use_program |                          :  // [282][MOV][082]
        use-program  | use that one gl program                :  // [282][MOV][082]
        USE[ wgl.useProgram ]                                 :  // [282][MOV][082]
        PASTE_LINE                                            :  // [282][MOV][082]
                                                              :  // [282][MOV][---]
        slated render pipelines | slated renderers            :  // [282][MOV][081]
        slated-render renderes-slated | rendereres slated     :  // [282][MOV][081]
        renderers-slated | renderers slated | render eneums   :  // [282][MOV][081]
        render enums | renderer eneums | renderer enums       :  // [282][MOV][081]
        SEE[ c_artgirl_ren_001 -to- c_artgirl_ren_007 ]       :  // [282][MOV][081]
                                                              :  // [282][MOV][???]
        template edit | template_edit | template string edit  :  // [282][MOV][???]
        finds and replaces tokens | find and replace          :  // [282][MOV][???]
        TRY[ F_TED ]( Template_EDit , for sql strings )       :  // [282][MOV][???]
                                                              :  // [282][MOV][???]
        serve youself | serve_yourself | serve this file      :  // [282][MOV][???]
        self serve | self serve icecream                      :  // [282][MOV][???]
        SEE[ #SELFSERVE# ]                                    :  // [282][MOV][???]
                                                              :  // [282][MOV][???]
        xml http request | xmlhttprequest | httprequest       :  // [282][MOV][???]
        httpreq                                               :  // [282][MOV][???]
        SEE[ FUNC_XML_HTTP_REQUEST      ]                     :  // [282][MOV][???]
        SEE[ XMLHTTPREQUEST_WIREUP_HACK ]                     :  // [282][MOV][???]
                                                              :  // [282][MOV][???]
        event to key | event to ascii key                     :  // [282][MOV][???]
        keyboard event to key                                 :  // [282][MOV][???]
        turn keyboard event into keypress                     :  // [282][MOV][???]
        evt_cto_key | evt_key                                 :  // [282][MOV][???]
        SEE[ F_KEYMAST_EVT_ASC ][068]                         :  // [282][MOV][???]
                                                              :  // [282][MOV][???]
        F_ARTGIRL_REN_SEL | REN_SEL | render pipeline select  :  // [282][MOV][068]
        render select | select render pipeline                :  // [282][MOV][068]
        load pipeline                                         :  // [282][MOV][068]
        load render pipeline | artgirl pipeline load          :  // [282][MOV][068]
        F_ARTGIRL_RPS | ARTGIRL_RPS | render pipeline load    :  // [282][MOV][068]
        load render pipeline | select pipeline                :  // [282][MOV][068]
        SEE[ F_ARTGIRL_RPL ]( Render_Pipeline_Load )          :  // [282][MOV][068]
                                                              :  // [282][MOV][---]
    :------------------: MOVED_FROM_CTRL_F_SECTION_2022_09_19 :  // [282][MOV][---]

    TAG[ hard-coded-fourset-graphics | fourset-graphics      ]   // [270]
    TAG[ fourset-graphic | hardcoded-graphics | hard-map     ]   // [270]
    TAG[ hard-coded-graphics | hard-graphics | hardmap       ]   // [270]
    SEE[ d_fourset_la3_v16_f16_binfour ]@ALIAS_NAME_VARS@[   ]   // [270]
    SEE[ d_fourset_la3_v16_f16_u25clus ]@ALIAS_NAME_VARS@[   ]   // [270]
    SEE[ RELATED_DIAGRAM[ _TQI_F16_DIAGRAM_ ] ______________ ]   // [270]

    TAG[ mark tile dirty by using byte index of pixel        ]   // [226]
    TAG[ mark pixel dirty by using byte index of pixel       ]   // [226]
    TAG[ mark section of texture dirty using pixel component ]   // [226]
    SEE[ F_PIX2048_DIR_DPC _________________________________ ]   // [226]
                                                                 
    TAG[ set-tile | settile | set_tile | set tile ]              // [197]
    TAG[ put-tile | puttile | put_tile | put tile ]              // [197]
    TAG[ tile-set | tileset | tile_set | tile set ]              // [197]
    TAG[ tile-put | tileput | tile_put | tile put ]              // [197]
    SEE[ F_MOUMAST_CLK | F_TILEBOI_EDI_PUT_U32    ]              // [197]

    TAG[ _konami_ | __konami__ | ___konami___ ]FIX[_ konamic _]  // [187]
    TAG[ _KONAMI_ | __KONAMI__ | ___KONAMI___ ]FIX[_ konamic _]  // [187]

    TAG[ tex_han | tex-han | texhan | han_tex | han-tex    ]     // [174]
    TAG[ hantex | texture-handle | texture_handle | handle ]     // [174]
    TRY[ d_artgirl_p2k_tex ]                                     // [174]

    TAG[ fs_001 | frag_001 | ssf_001 ]FIX[  d_artgirl_ssf_001 ]  // [123]
    TAG[ fs_002 | frag_002 | ssf_002 ]FIX[  d_artgirl_ssf_002 ]  // [123]
    TAG[ fs_003 | frag_003 | ssf_003 ]FIX[  d_artgirl_ssf_003 ]  // [123]
    TAG[ fs_004 | frag_004 | ssf_004 ]FIX[  d_artgirl_ssf_004 ]  // [123]
    TAG[ fs_005 | frag_005 | ssf_005 ]FIX[  d_artgirl_ssf_005 ]  // [123]
    TAG[ fs_006 | frag_006 | ssf_006 ]FIX[  d_artgirl_ssf_006 ]  // [123]
    TAG[ fs_007 | frag_007 | ssf_007 ]FIX[  d_artgirl_ssf_007 ]  // [123]
    TAG[ fs_008 | frag_008 | ssf_008 ]FIX[  d_artgirl_ssf_008 ]  // [123]
    TAG[ fs_009 | frag_009 | ssf_009 ]FIX[  d_artgirl_ssf_009 ]  // [123]
                                                   
    TAG[ out of bounds camera corrections | oob-cam | cam-oob ]  // [118]
    TAG[ out_of_bounds_camera_corrections | oob_cam | cam_oob ]  // [118]
    TAG[ out_of_bounds|camera_corrections | oob cam | cam oob ]  // [118]
   GOTO[ #_OOB_CAM_# ]RELATED[ c_camerah_maxunit ]               // [118]


    TAG[ error check inputs | error-check-inputs ]               // [109]
    TAG[ error_check_inputs | errorcheckinputs   ]               // [109]
    FIX[ d_eci ]ALSO_SEE[ d_eco && d_bug ]                       // [109]
                                                                 // [109]
    TAG[ error check outputs | error-check-outputs ]             // [109]
    TAG[ error_check_outputs | errorcheckoutputs   ]             // [109]
    FIX[ d_eco ]ALSO_SEE[ d_eci && d_bug ]                       // [109]
                                                                 // [109]
    TAG[ debug mode | debug_mode | debugmode | debugflag ]       // [109]
    TAG[ debug_flag | debug-flag | debug flag | dbgflag  ]       // [109]
    FIX[ d_bug ]                                                 // [109]
         
    TAG[ d_cam | d-cam | camera variable | camera var ]          // [088]
    FIX[ d_vp0 | d_vp1 | d_vpc | c_dum | d_dut ]                 // [088]
                                                                 // [088]
    TAG[ plank_units | plankunit | plank-units | plank units ]   // [088]
    FIX[ c_dum | c_dut ]                                         // [088]

    TAG[ canvas-resize | canvas_resize | canvasresize ]          // [092]
    TAG[ resize-canvas | resize_canvas | resizecanvas ]          // [092]
   GOTO[ F_RES_CAN ]( Function _ RESize _ CANvas )               // [092]
                                                                 // [092]
    TAG[ glViewport ]FIX[ wgl.viewport ]                         // [092]

                                                                 // [088]
                                                                 // [088]
TAG[ tag_section | tag-section | tag_section ]END -------------- // [088]
*** ******************************************** CTRL_F_HELP *** // [088]
*** ******************************************** TAG_SECTION **/ // [088]
/** SNAPSHOT_REPOS ***************************************** ***

    github.com/KanjiCoder/AIM_035    ( end of tutorial 35 code )

*** ***************************************** SNAPSHOT_REPOS **/
/** WEIRD_CODING_CONVENTIONS ******************************* ***

       var          |
       var_var      |  All tokens ( variables & functions )
       varavar      |             ( & namespaces          )
       var_var_var  |  Are clusters of 3 joined by "_"
       varavaravar  |  or an alphanumeric character.
       123_123_123  |
       123_1234567  |  Exception is 1 letter hungarian
                    |  notation prefixes. 
                    +------------------------------------------+
   


*** ******************************* WEIRD_CODING_CONVENTIONS **/
/** PREFIXES *********************************************** ***
    
    GLOBAL SCOPE PREFIXES :

        d_    : data        ( GLOBAL data  )
        f_    : function    ( GLOBAL func  )
        l_    : library     ( GLOBAL lib   )

    LOCAL SCOPE PREFIXES :

        m_    : member variable prefix.
        i_    : formal parameter argument ( i == input  )
        o_    : output argument from func ( o == output )

*** ******************************************************** **/
/** DONT_USE_THESE_AS_PREFIXES ***************************** ***

    LIB_  : any library we got by using require function
          : ( use l_ instead of LIB_ for terseness )
    
    s_    : Structs get the [ d_ ] for data prefix!        [065]
    v_    : global are[ d_ ] local is[ i_ ]or[ o_ ]or[NONE][065]
    c_    : client - only 
    s_    : server - only
    b_    : BOTH ( known by both client and server )
    g_    : global ( see[ d_ and F_ ] )

  ( D_ UPPERCASE ) : Impossible, data is lowercase(d_)     [068]
  ( f_ lowercase ) : Impossible, func is uppercase(F_)     [068]

    m_    : macro       NO MACROS IN JAVASCRIPT , simplify.
    t_    : type        TRY_NOT_TO_USE_THIS
    u_    : unit test   Unit tests are functions ( f_ )

    dat_  : Too verbose for this coarse grain category.
          : use "d_" prefix for "data".

    fun_  : Too verbose for this coarse grain category.
          : use "f_" prefix for "functions"

    lib_  : Too verbose for this coarse grain category.
          : use "l_" prefix for "libraries"

*** ******************************************************** **/
/** @ATTED_COMMENTS@ *************************************** ***

    //:--------------------------------------------------://    // [069]
    //: @'s used to describe a variable or phase. [069]  ://    // [069]
    //: Something that can appear multiple times. [069]  ://    // [069]
    //:--------------------------------------------------://    // [069]
    //: TAG[ AT_SECTION | ATSECTION | atsection | atsec ]://    // [069]
    //:--------------------------------------------------://    // [069]
                                                                // [069]

    @MACRO@   : "let" keyword is to be used like a              // [082]
              : temporary macro to shorten the length           // [082]
              : of variables. __NOT__ used for                  // [082]
              : block scope vs function scope unless            // [082]
              : absolutely necessary.                           // [082]

    @inn_pos@ : INNPUT:VertexPosition                           // [074]
    @inn_tex@ : INNPUT:TextureCoord                             // [074]
    @out_tex@ : OUTPUT:TextureCoord                             // [074]
    @out_f_c@ : OUTput_FragColor                                // [074]
    @i_o_tex@ : [ inn/out ] TextureCoord                        // [074]

    @SSA@ : Shader String Array ( array of [ssv]or[ssf] )       // [069]
    @ssv@ : Shader Source ( vertex   shader       )             // [069]
    @ssf@ : Shader Source ( fragment shader       )             // [069]
    @vss@ : WRONG , use general to specific ( ssv )             // [069]
    @fss@ : WRONG , use general to specific ( ssf )             // [069]

    @LIB_URL@ : LIBRARY : Universal Resource Locator
    @LIB_Q_S@ : LIBRARY : QueryString

    @sob@ : State Object Bundle
    @ask@ : What client is asking for ( request  / req )
    @giv@ : What server is giving  us ( response / res )
    @url@ : /URL/NOT/INCLUDING/ROOT/DOMAIN
    @pam@ : query parameters dictionary
    @seg@ : @url@ parts packed into an array
    @has@ : Has as in "does object exist" ?
    @any@ : Any type
    @obj@ : An object type. So NOT a number or BOOL or STRING.
    @wid@ : The WIDTH  (usually pixels) of something.
    @hig@ : The HEIGHT (usually pixels) of something.
    @wgl@ : Web_GL ( context object )
    @dbu@ : Data_Base_URL
    @cin@ : Connection_INformation
    @err@ : Error
    @cli@ : Client ( postgres )
    @don@ : Done   ( postgres "done" function pointer )
    @c_s@ : ConnectionString
    @ssl@ : Secure_Sockets_Layer
    @cts@ : Create_Table[ Statement | Source ]
    @dts@ : Drop___Table[ Statement | Source ]
    @tbm@ : Trace_Back_Message
    @dbs@ / @d_dbs@ : WRONG[ data_base_string ]FIX[ dbu ]
    @pas@ / @i_pas@ : PASsword
    @vas@ : Value_As_String
    @dcp@ : @d_dcp@ : Database_Client_Pool ( d_ == global data ) 
    @dcp@ : Database_Connection_Pool

    @vbd@ : Vertex_Buffer_Data                             [066]
                                                           [066]
    @vcx@ : Vertex  Coord .X                               [066]
    @vcy@ : Vertex  Coord .Y                               [066]
    @vcz@ : Vertex  Coord .Z                               [066]
                                                           [066]
    @tcx@ : Texture Coord .X                               [066]
    @tcy@ : Texture Coord .Y                               [066]
    @tcz@ : Texture Coord .Z ( NO FUCKING SUCH THING )     [066]

    @TIK@ : TICK ( as in update tick )                           // [???]
    @GUL@ : Game_Update_Loop                                     // [???]
    @TDC@ : Test_Database_Connection                             // [???]
    @ATF@ : About_This_Fuction , Used as [ATF] within function.  // [???]
                                                                 // [???]
    @o_k_yes@ : Resolver function for promise.                   // [???]
    @okbutno@ : Reject   function for promise.                   // [???]
    @wontsay@ : Reject   function for promise. (NEVER CALLED)    // [???]
    @cantsay@ : Mistake, I meant[ wontsay ]                      // [???]
    @dom_roo@ : DomainObjectModel - Root                         // [???]
    @dom_bod@ : DomainObjectModel - Body                         // [???]
    @doc_bod@ : Means[ document body ]USE[ dom_bod ]             // [???]
    @dom_can@ : DomainObjectModel - Canvas                       // [???]
    @cmd_nam@ : You Mean[ sql_cmd ]                              // [???]
    @nam_cmd@ : You Mean[ sql_cmd ]                              // [???]
    @bla_bla@ : Someone is speaking, I am not listening.         // [???]
    @asktype@ : EXAMPLE[ "GET" , "POST" ]ETC                     // [???]
    @urlpath@ : URL ( relative ) path EX[ API/WHATEVER ]         // [???]
    @laxcoma@ : Lax Comma , a hack for style.                    // [???]

    @HEXASET@ : A fourset, but encoded as 16 uint32s.      [064]
              : Each uint32 encoding a 5x5 array of pixels.[064]
                                                           [064]
    @HEXASET1STAMP@ : Stamping hexaset graphic WITHOUT     [064]
                    : any auto-tile like rendering. This   [064]
                    : render pipeline ignores all layers   [064]
                    : and only pays attention to the main  [064]
                    : game layer.                          [064]
                    : #_ONLY_RENDERS_THE_MAIN_GAME_LAYER_# [064]
                                                           [064]
    @HEXASET1AUSET@ : Stamping hexaset graphic using       [064]
                    : auto-tiling algorithm. Specifically  [064]
                    : the FOURSET algorithm.               [064]
                    : SEE[ https://imgur.com/9nMmX2F ]     [064]
                    : #_ONLY_RENDERS_THE_MAIN_GAME_LAYER_# [064]
                        

    @cli_wid@ : Client Width 
    @cli_hig@ : Client Height

    @RES_CAN@ : RESize_CANvas
    

    @DODS@ : Data_Oriented_Design'S

    @F_INI_SER@ : Initialize Server ( SEE[ F_ISD ] )
    @F_ISD@     : Initialize Server Data
    @F_CTS@     : Create_Table_Statement ( run the statement )
    @F_IST@     : Init_SQL_Table

     1234567
    @DROPTAB@   : Means "Drop Table"


    @m_ask@ : ask  == request     
    @m_giv@ : give == response    
    @m_url@ : path(relative_url)  
    @m_pam@ : query params dict   
    @m_seg@ : url segments array  

    @PROTODO@ : A promise used as a todo message.
    @MWM@ : Really should be #MWM# not @MWM@
    @ATS@ : About_This[ Struct / System / Section ]        [062]

    @_pid_@ : @pid@ : Program________ID                    [067]
    @_vid_@ : @vid@ : Vertexshader___ID                    [067]
    @_fid_@ : @fid@ : FragmentShader_ID                    [067]
                                                           [067]
    @_vbo_@ : @vbo@ : Vertex_Buffer_Object (iid)           [067]
    @_vao_@ : @vao@ : Vertex_Array__Object (iid)           [067]
    @_tex_@ : @tex@ : Texture Handle/Location              [067]
    @_lot_@ : @lot@ : Texture Slot (Where @tex@ GPU_Bound?)[067]
    @_sam_@ : @sam@ : Texture SAMPLER Handle/Location      [067]
    @_iid_@ : @iid@ : Integer_ID (AKA: "name" in OpenGL)   [067]

*** *************************************** @ATTED_COMMENTS@ **/
/** #HASH_TAGGED_COMMENTS# ********************************* ***

    #_EMPTY_OUT_THE_HASH_TAGGED_COMMENTS_SECTION_#               // [271]

    //:--------------------------------------------------://     // [069]
    //: #'s are used to describe a comment that has [069]://     // [069]
    //: been EXTRACTED from the code somewhere.     [069]://     // [069]
    //: This may be a 1-line comment, multi-line    [069]://     // [069]
    //: comment, __OR__ an abbreviated error msg.   [069]://     // [069]
    //:--------------------------------------------------://     // [069]
    //: TAG[ hashsec | poundsec | octosec | hashtagsec ] ://     // [069]
    //: TAG[ hashtag | hashtagsec | hash-tag-sec | hts ] ://     // [069]
    //: TAG[ hashnotes | hash-notes | hash notes       ] ://     // [074]
    //: TAG[ hashsect | hash-section | hashnotes       ] ://     // [075]
    //: TAG[ has-section | has-sect | hassect          ] ://     // [077]
    //:--------------------------------------------------://     // [069]
                                                                 
    #TLO# : Top Left Origin Hack. The mapping of Y-axis          // [083]
          : from vertex position to texture coord value          // [083]
          : is intentionally inverted so that we can             // [083]
          : write our shader logic with a __SANE__               // [083]
          : top-left graphical origin.                           // [083]
          :                                                      // [083]
          : Specifically the mapping from VERTEX-Y to            // [083]
          : TEXTURE-COORD-Y has been [flipped/inverted]          // [083]
                                                                 
    #VBO_IS_AI0# : I am full of shit see[ GLSNAPSHOT ]           // [078]
    #VAO_IS_AI1# : I am full of shit see[ GLSNAPSHOT ]           // [078]
                                                                 // [078]
    #GFD_001# : GOD_FUCKING_DAMINT ( number 1 of #TBD# )         // [078]
    #TBD#     : To Be Determined                                 // [078]
                                                                 // [078]
    #GLSNAPSHOT# : A VAO is basically a "snapshot" of            // [078]
                 : configured VBO state. My idea of              // [078]
                 : analogy of VI0 & VI1 is totally               // [078]
                 : wrong. I am full of shit. Go                  // [078]
                 : watch this guy if you want to be              // [078]
                 : taught WebGL2 by someone who knows            // [078]
                 : what they are doing. I am....                 // [078]
                                                                 // [078]
                 : a jack of all trades is a master of none,     // [078]
                 : but oftentimes better than a master of one    // [078]
                 :                                               // [078]
                 : www.youtube.com/watch?v=0nZn5YPNf5k           // [078]
                 : ( Good WebGL2 Tutorial )                      // [078]
    #SS_BEG# : SnapShotBegin                                     // [078]
    #SS_END# : SnapShotEnd                                       // [078]
    #SSE#    : SnapShotEnd , But Written Shorter.                // [228]
    @SSE@    : SnapShotEnd , but with "AT" symbol instead.       // [228]
                                                                 // [078]
    #S_POS# : Slot Index Of POSITION Attribute data.             // [078]
    #S_TEX# : Slot Index Of TEXTURE  Attribute data.             // [078]
                                                                 
    #KFNFR# : Keep Function Name For Readability                 // [075]
                                                                 // [075]
    #_DRY_INSTEAD_OF_KISS_WARNING_BECAUSE_LAZY_# :               // [075]
                                                                 // [075]
        I decided on D_R_Y instead of K_I_S_S because            // [075]
        I am lazy and don't want to type more. Also              // [075]
        wanted to have fun and mess around with some             // [075]
        javascript. Let's see if it bytes me later.              // [075]
        -KanjiCoder                                              // [075]
                                                                 // [075]
    #YSMITF# : You Shot Marvin In The Face                       // [075]
                                                                 // [075]
    #FAS# : Fixed_Array_Size ( Object.seal( myArray ) );         // [075]
                                                                 
    #TESTYLE# : Tesselation Style , how to  +--------------+     // [074]
              : connect verts  to create polygons.         |     // [074]
              |                                            |     // [074]
              |     TRIANGLE_STRIP :     TRIANGLE_FAN :    |     // [074]
              |                                            |     // [074]
              |     [0]-------[1]        [1]-------[2]     |     // [074]
              |      |        /|          | \     / |      |     // [074]
              |      |       / |          |  \   /  |      |     // [074]
              |      |      /  |          |   [0]   |      |     // [074]
              |      |     /   |          |  /   \  |      |     // [074]
              |      |    /    |          | /     \ |      |     // [074]
              |      |   /     |         [4]-------[3]     |     // [074]
              |      |  /      |                           |     // [074]
              |      | /       |                           |     // [074]
              |      |/        |                           |     // [074]
              |     [2]-------[3]                          |     // [074]
              |     #ITS_A_ZEE#                            |     // [074]
              +--------------------------------------------+     // [074]
                                                                 // [---]
                                                                 // [069]
    #IAI# : Improper_Array_Initialization                        // [069]
    #_1_BASED_ARR_# : Array index 0 not used for anything.       // [069]
                                                                 // [---]
    #IPR# : Is_Postgres_Response , we want to get rid            // [???]
          : of all the bloat and return the[ rows ]              // [???]
          : member as { arr_rows : [ ... ] } response.           // [???]
          : TUTORIAL [050]                                       // [???]
                                                                 // [???]
    #MRI# : Make Routing ( case ) Insensitive                    // [???]
    #MWM# : Monkey Wrench Macros                                 // [???]
    #_P_N_C_# : Paranoid_Null_Check                              // [???]
                                                                 // [---]         
    #_KISS_BEATS_DRY_# : #KISS# Beats #DRY#                      // [052]
    #KISS# : Keep_It_Simple_Stupid                               // [052]
    #DRY#  : Dont_Repeat_Yourself                                // [052]
                                                                 // [---]  
    #RES_NAE# : resolve func , NOT_AN_ERROR                      // [055]
    #REJ_NAE# : reject  func , NOT_AN_ERROR                      // [055]
                                                                 // [---]  
    #MUO_RBP# : Mock_Up(sql)Obj_Returned_By_PG(lib)              // [056]
                                                                 // 
    #MYSBSYS# : ModifyYourSelf _ Before _ ServingYourSelf        // [058]
                                                                 // [---]  
    #_ONLY_RENDERS_THE_MAIN_GAME_LAYER_# :                       // [064]
                                                                 // [064]
        A render pipeline like this does __NOT__                 // [064]
        render all level data. It only renders                   // [064]
        the main gameplay layer. The layer with                  // [064]
        the geometry [ IVY ] interacts with.                     // [064]
        This layer is the main layer of                          // [064]
        destructable geometry.                                   // [064]
                                                                 // [064]
        ( We probably will have a BG and FG    )                 // [064]
        ( game layer that is also destructable )                 // [064]
        ( but is only for ASTHETICS, and does  )                 // [064]
        ( __NOT__ affect gameplay. Thus __NOT__)                 // [064]
        ( considered part of the main game     )                 // [064]
        ( layer .                              )                 // [064]
                                                                 // [---]  
    #NOKISS# : NO, dont do this. Keep It Simple Stupid.          // [068]
                                                                 // [---]
                                                                 // [---]
    #_OPENGL_VS_WEBGL_#                                          // [071]
        ----------------------------------------------------     // [071]
                                                                 // [071]
        OGL : Open GL                                            // [071]
        WGL : Web  GL                                            // [071]
                                                                 // [071]
        0x8B81 : GL_COMPILE_STATUS                               // [071]
        0x8B30 : GL_FRAGMENT_SHADER                              // [071]
        0x8B84 : GL_INFO_LOG_LENGTH                              // [071]
                                                                 // [071]
        OGL : glGetShaderiv( vid , 0x8B84 , &( res ));           // [071]
        WGL : NO SUCH EQUIVALENT IN WEBGL                        // [071]
                                                                 // [071]
        OGL : glGetShaderiv(    vid , 0x8B81)                    // [071]
        WGL : getShaderInfoLog( vid         )                    // [071]
                                                                 // [071]
        OGL : glCreateShader( 0x8B30 )                           // [071]
        WGL : wgl.createShader( wgl.FRAGMENT_SHADER )            // [071]
                                                                 // [071]
        OGL : glShaderSource(   vid , 1 , &(ssv) , 0 )           // [071]
        WGL : wgl.shaderSource( vid     ,   ssv      )           // [071]
                                                                 // [071]
        OGL : glCompileShader(    vid );                         // [071]
        WGL : wgl.compileShader(  vid );                         // [071]
                                                                 // [071]
        ----------------------------------------------------     // [071]
                                                                 // [---]
    #_OPENGL_VS_WEBGL_PART_002_#                                 // [077]
                                                                 // [077]
        0x8892 : GL_ARRAY_BUFFER                                 // [077]
        0x88E4 : GL_STATIC_DRAW                                  // [077]
                                                                 // [077]
        OGL : glGenBuffers( 1      , &( a3d_ledit64_vbo )  );    // [077]
        WGL : a_g.vbo = createBuffer( );                         // [077]
                                                                 // [077]
        OGL : glBindBuffer( 0x8892 ,  a3d_ledit64_vbo    );      // [077]
        WGL : wgl.bindBuffer( wgl.ARRAY_BUFFER , a_g.vbo );      // [077]
                                                                 // [077]
        OGL : siz = VBL * sizeof( VBD[ 0 ] );                    // [077]
            : glBufferData( 0x8892 , siz , VBD ,0x88E4 );        // [077]
        WGL : wgl.bufferData(                                    // [077]
                wgl.ARRAY_BUFFER                                 // [077]
              , a_g.vbd                                          // [077]
              , wgl.STATIC_DRAW                                  // [077]
              , 20                                               // [077]
              );;                                                // [077]
                                                                 // [???]
    #_OPENGL_VS_WEBGL_PART_003_#                                 // [???]
                                                                 // [???]
        OGL : glGenVertexArrays( 1 , &( a3d_ledit64_vao )  );    // [???]
        WGL : vao = wgl.createVertexArray( );                    // [???]
                                                                 // [???]
        OGL : OGL.glBindVertexArray(    a3d_ledit64_vao    );    // [???]
        WGL : wgl.bindVertexArray( vao )                         // [???]
                                                                 // [???]
*** ********************************* #HASH_TAGGED_COMMENTS# **/ // [???]
/** !EXCLAIMED_COMMENTS! *********************************** *** // [???]
                                                                 // [???]
    !MWM! : Or we could do this, doxygen style comment.          // [???]
    !NDC! : Not_Deep_Copy ( Not a deep copy )                    // [???]
                                                                 // [???]
*** *********************************** !EXCLAIMED_COMMENTS! **/ // [???]
/** CONCEPTUAL_SUB_SYSTEM_NAMESPACES *********************** *** // [???]
                                                                 // [???]
    Just because the physical structure of the code is           // [???]
    "just dump it all in one file" doesn't mean we can't         // [???]
    have a conceptual structure of how the project is            // [???]
    organized.                                                   // [???]
                                                                 // [???]
    1234567                                                      // [???]
    DABITCH : DAtabase BITCH , anything that involves            // [???]
   @DABITCH@: database access goes through her. Because          // [???]
            : she is a gossipy bitch and collects                // [???]
            : all information she hears.                         // [???]
                                                                 // [???]
    1234567                                                      // [???]
    SOCREEP : SOcket CREEP , you say one god damned nice         // [???]
   @SOCREEP@: thing to him in passing and he gets the            // [???]
            : wrong idea and keeps talking to you.               // [???]
            : He will keep talking to you until you              // [???]
            : bluntly cut him off and tell him to                // [???]
            : stop talking to you. Because, that is              // [???]
            : how SOCKETs are.                                   // [???]              
                                                                 // [???]
    @$$$$$@ : Sub-system marker for seeking between different    // [???]
            : systems by using CTRL+F. (2022_06_26)              // [???]
                                                                 // [???]
*** *********************** CONCEPTUAL_SUB_SYSTEM_NAMESPACES **/ // [???]
/** I_TAKE_IT_BACK ***************************************** *** // [???]
                                                                 // [???]
    @col@ : col_ , use c_ for column prefix instead.             // [???]
                                                                 // [???]
    @fid@ : fid_ : Foriegn_Key ( id ) , use "k_" instead.        // [???]
                                                                 // [???]
    DATA_BOTHENDS       : Section deleted in [042]               // [???]
    DATA_SERVER_BACKEND : Section deleted in [042]               // [???]
                                                                 // [???]
    @d_dbp@ : No Such Thing As Data_Base_Pool                    // [???]
            : Probably_Looking_For[ d_dcp ]                      // [???]
            : dcp == Database_Client_Pool                        // [???]
                                                                 // [???]
                                                                 // [???]
*** ***************************************** I_TAKE_IT_BACK **/ // [???]
/** ERRORS ************************************************* *** // [063]
                                                                 // [063]
    Errors should :                                              // [063]
                                                                 // [063]
        1. Crash the program.                                    // [063]
        2. l_e_t us know exactly where the offending code is.    // [063]
                                                                 // [063]
    Errors should not :                                          // [063]
                                                                 // [063]
        1. Be detailed human-readable messages describing        // [063]
           the problem. Java may have led you to believe         // [063]
           this is the job of an error, it is not.               // [063]
                                                                 // [063]
        -KanjiCoder ( 2022_06_27 )                               // [063]
                                                                 // [063]
*** ************************************************* ERRORS **/ // [063]
/** CTRL_F_HELP ******************************************** *** // [???]
                                                                 // [???]
    TAGS[ CTRL_F | CTRL_F_SECTION | ctrl-f-section        ]      // [081]
    TAGS[ ctrl f section | ctrl f help | ctrl eff  ctrl f ]      // [081]
    TAGS[ CTRLF_HELP | ctrl-f-help | ctrl f help          ]      // [081]
    TAGS[ control f help | hackish google search          ]      // [081]
                                                                 // [---]
    DONT_USE_THIS_SECTION_ANYMORE , USE[   TAG _ SECTION  ]      // [282]
                                                                 // [---]
*** ******************************************************** **/ // [???]
/** FEATURE_CREEP ****************************************** *** // [???]
                                                                 // [---]
    DEATHMATCH_CREW / DEATHMATCH_OVERLOAD :                      // [074]
                                                                 // [074]
        When too many people are in the server, everyone is      // [074]
        teleported to the DEATHMATCH room. The deathmatch does   // [074]
        __NOT__ end until __HALF__ of the people in the server   // [074]
        are __KILLED__ by other people in the deathmatch room.   // [074]
                                                                 // [074]
        Deatmatch room will be in the very center of the         // [074]
        worldmap.                                                // [074]
                                                                 // [074]
        The level will be designed as a funnel, forcing          // [074]
        people to have multiple 1:1 battles with each other.     // [074]
                                                                 // [074]
        There is an event-box over the mini rooms. A gate in     // [074]
        the floor will __OPEN__ when event-area detects          // [074]
        only one player.                                         // [074]
                                                                 // [074]
        There are explosive timer_boxes (TIMER) above            // [074]
        each room. When they explode, the ceiling caves          // [074]
        in and kills BOTH PLAYERS within the room.               // [074]
                                                                 // [074]
            [ --------- LONGEST_TIMER ---------- ]               // [074]
            [ LONGER_TIMER  ]   [ LONGER_TIMER   ]               // [074]
            [TIMER]   [TIMER]   [TIMER]    [TIMER]               // [074]
            [ A B ]   [ C D ]   [ E F ]    [ G H ]               // [074]
            |               |   |                |               // [074]
            |               |   |                |               // [074]
            +---------------+   +----------------+               // [074]
            |                                    |               // [074]
            |                                    |               // [074]
            +------------------------------------+               // [074]
                                                                 // [074]
        If you are killed, you are booted from the               // [074]
        server and lose items or something. Not sure             // [074]
        if you end up teleported back to same room               // [074]
        you were in or if you are forced to start                // [074]
        at beginning.                                            // [074]
                                                                 // [074]
        People will be added to deathmatch CELLS in the          // [074]
        deathmatch LEVEL in a round-robin style.                 // [074]
        SO hypothetically, if you build a crew of HALF           // [074]
        the MAXIMUM server capacity, you could all join          // [074]
        a server, and kill everyone in that server like          // [074]
        vikings, because you will __NOT__ be pitted against      // [074]
        another member of YOUR CREW because of the               // [074]
        round-robin assignment of deathmatch cells.              // [074]
                                                                 // [074]
        Possibly there should be a warning message when          // [074]
        the server is getting too full. Anyone can switch        // [074]
        servers at ANY TIME. ( encouraged to manage              // [074]
        server load on their own ). But once deathmatch          // [074]
        from server overload starts, you are not allowed         // [074]
        to leave the server. If you leave the server             // [074]
        during deathmatch via "disconnect" or "rage quit"        // [074]
        it is as if you __LOST__. Sorry if you have              // [074]
        bad internet, you are fucked.                            // [074]
                                                                 // [074]
        Timer boxes can be sprites generated by using            // [074]
        special region rectangle tiles. We will need             // [074]
        to reserve 2 tile types to create these region           // [074]
        rects that spawn sprites.                                // [074]
                                                                 // [074]
        Timer box can be a binary pattern inside the             // [074]
        region rect that tells us how long to set                // [074]
        timer for. Thus larger timerboxes can have               // [074]
        larger time durations because they literally             // [074]
        can encode larger binary bit patterns.                   // [074]
                                                                 // [074]
        Normal gameplay does not allow you to set bombs.         // [074]
        But in deathmatch, you can.                              // [074]
                                                                 // [074]
        Offical server needs to encode a list of other           // [074]
        servers in it's source code to help distribute load.     // [074]
                                                                 // [074]
        If GOD is editing a level, warning needs to be made      // [074]
        that "blocks" may appear or dissapear out of nowhere.    // [074]
        If a block appears where you exist, you die.             // [074]
                                                                 // [074]
        GOD is whoever has level editing priviledges.            // [074]
                                                                 // [---]
    Let people extend my code : ( 2022_06_24 ) :                 // [???]
                                                                 // [???]
        We should make it so that people can extend the game     // [???]
        simply by loading JSONP ( application/javascript )       // [???]
        into the game.                                           // [???]
                                                                 // [???]
        Or maybe allow people to... extend the code base by      // [???]
        including "ATOMIC_IVY_MMO" javasscript and then          // [???]
        using it as a library ?                                  // [???]
                                                                 // [???]
        application/javascript <<< Runnable JavaScript Response  // [???]
                                                                 // [???]
        Inspired by:                                             // [???]
        https://stackoverflow.com/questions/477816               // [???]
                                                                 // [---]
*** ****************************************** FEATURE_CREEP **/ // [???]
/** SNIPING_FACEBOOK_ADVERTISMENTS_LIKE_NINJA:[307]: ******* *** // [307]
                                                                 // [307]
    TAG[ ad-sniping | adsniping | ad_sniping ]                   // [307]
    TAG[ add-sniping | addsniping | add_sniping ]                // [307]
                                                                 // [307]
    NOTE: I think the people managing these adds are onto        // [307]
          me and removing my comments. Going to keep             // [307]
          on doing it though.                                    // [307]
                                                                 // [307]
    --------------------------------------------------------     // [307]
    --------------------------------------------------------     // [307]
                                                                 // [307]
        Garbage In ===> Garbage Out.                             // [307]
        Is very true! The opposite is true as well.              // [307]
        "Awesome In ==> Awesome Out".                            // [307]
        For example, if you use hentai with good line            // [307]
        quality as input data to generate a fractal, the         // [307]
        resulting line quality will still be present in          // [307]
        the final output. While I think showing you hentai       // [307]
        on facebook might violate TOS, here is a preview of      // [307]
        a destructible fractal geometry game I am working on.    // [307]
                                                                 // [307]
        https://imgur.com/gallery/9ih0Shd                        // [307]
                                                                 // [307]
    --------------------------------------------------------     // [307]
                                                                 // [307]
        I swear I've seen this advertisement before...           // [307]
        I am making a web application. It's called an MMO.       // [307]
        I'll show you how to program. My code is open source     // [307]
        and I have a free video series on it.                    // [307]
        https://imgur.com/gallery/9ih0Shd                        // [307]
                                                                 // [307]
    --------------------------------------------------------     // [307]
                                                                 // [307]
    I am making an MMO in JavaScript with fully                  // [307]
    destructible fractal geometry. The client & server           // [307]
    are written in the same file, making it IMPOSSIBLE           // [307]
    for the API contract between "Client And Server" from        // [307]
    ever being "out of date" or                                  // [307]
    "disagreeing with each other". Which if you've ever          // [307]
    written your own front and back end, know the problem        // [307]
    this can sometimes be. I'll show you how if you ask.         // [307]
    But I warn you, my methods are... unconventional.            // [307]
                                                                 // [307]
    https://imgur.com/gallery/9ih0Shd                            // [307]
                                                                 // [307]
    --------------------------------------------------------     // [307]
                                                                 // [307]
        I know a bit about computers. I will show you            // [307]
        how to make an engine that renders fully                 // [307]
        destructible fractal geometry. Any takers?               // [307]
                                                                 // [307]
        https://imgur.com/gallery/9ih0Shd                        // [307]
                                                                 // [307]
    --------------------------------------------------------     // [307]
                                                                 // [307]
    I know a thing or two about computer science.                // [307]
                                                                 // [307]
    https://imgur.com/gallery/9ih0Shd                            // [307]
                                                                 // [307]
    Check out this game engine I wrote from scratch.             // [307]
    I decided to open source it. GNU license is a bit            // [307]
    complex for me, so it's filed under a "Do whatever           // [307]
    the fuck you want" license. Can you imagine getting          // [307]
    lawyers together before little Timmy can mow your            // [307]
    neighbor's grass for 20 bucks? I feel like GNU               // [307]
    licenses are digital equivalent of that.                     // [307]
                                                                 // [307]
    --------------------------------------------------------     // [307]
                                                                 // [307]
    I've been using HEROKU for an MMO I am writing.              // [307]
    But it's not going to be free anymore. I was                 // [307]
    considering moving to either FIREBASE or VERCEL.             // [307]
    "Render" is also a good one... But the name turns            // [307]
    me off. A name can kill a brand. Doesn't matter              // [307]
     how good  something is if no one can find it.               // [307]
    Speaking of that, here is what I am working on:              // [307]
                                                                 // [307]
    https://imgur.com/gallery/9ih0Shd                            // [307]
                                                                 // [307]
    --------------------------------------------------------     // [307]
                                                                 // [307]
    I don't know why I am being served this advert...            // [307]
    I make video games. But while I am here...                   // [307]
                                                                 // [307]
    https://imgur.com/gallery/9ih0Shd                            // [307]
                                                                 // [307]
    I do a lot of C99 though. Hackers love their                 // [307]
    C for some reason. I learned how to call                     // [307]
    "LoadLibraryA" without "Windows.H" by loading                // [307]
    the base address of the "Peb File".                          // [307]
                                                                 // [307]
    Don't listen to those people who say you                     // [307]
    "Can't de-reference a null pointer".                         // [307]
                                                                 // [307]
    Bitch, yes the fuck I can.                                   // [307]
                                                                 // [307]
    --------------------------------------------------------     // [307]
                                                                 // [307]
    Hello [[[UNIVERSITY_NAME_HERE]]], how much money             // [307]
    do I have to make to get an honorary business degree?        // [307]
    I am working on a game engine. I am going to enact           // [307]
    phase 1 of business plan right here.                         // [307]
                                                                 // [307]
    https://imgur.com/gallery/9ih0Shd                            // [307]
                                                                 // [307]
    I kid, I kid. I wrote this by hand.                          // [307]
    Watch... PERDUE. See?                                        // [307]
                                                                 // [307]
    Or did I?                                                    // [307]
                                                                 // [307]
    @1:47:42 , in unscripted video #3_0_7                        // [307]
                                                                 // [307]
    --------------------------------------------------------     // [307]
                                                                 // [307]
    I know a bit about "API".                                    // [307]
    (Application Programming Interface)                          // [307]
                                                                 // [307]
    I am writing an MMO in JavaScript using Node.JS.             // [307]
    With a bit of unconventional coding I have managed to        // [307]
    write the CLIENT AND SERVER in the same file. This allows    // [307]
    me to tightly-couple the API-contract between the client     // [307]
    and server.                                                  // [307]
                                                                 // [307]
    Tight coupling is NOT BAD. Unintentional tight coupling is.  // [307]
                                                                 // [307]
    Remove all coupling from a system and you no longer          // [307]
    have a system.                                               // [307]
                                                                 // [307]
    Preview of my engine I am writing:                           // [307]
    https://imgur.com/gallery/9ih0Shd                            // [307]
                                                                 // [307]
    --------------------------------------------------------     // [307]
        Agile is good. Data oriented design is good.             // [307]
        Spaces are better than tabs. OOP Sucks.                  // [307]
        I said what I said.                                      // [307]
                                                                 // [307]
        I am working on a game engine:                           // [307]
        https://imgur.com/gallery/9ih0Shd                        // [307]
    --------------------------------------------------------     // [307]
        Dear facebook , just because I am a programmer           // [307]
        doesn't mean I am that kind of programmer.               // [307]
                                                                 // [307]
        -Signed : Some Random Game Designer                      // [307]
                                                                 // [307]
        Check Out My Work:                                       // [307]
        https://imgur.com/gallery/9ih0Shd                        // [307]
    --------------------------------------------------------     // [307]
        Data Driven? I don't know what that means. But           // [307]
        I know a bit about "Data Oriented Design". Been          // [307]
        working on a game engine in Node.js. Going to            // [307]
        migrate to either FireBase or Vercel soon.               // [307]
                                                                 // [307]
        If you are interested in either of those                 // [307]
        technologies, I can probably show you the                // [307]
        basics.                                                  // [307]
                                                                 // [307]
        https://imgur.com/gallery/9ih0Shd                        // [307]
    --------------------------------------------------------     // [307]
    --------------------------------------------------------     // [307]
                                                                 // [307]
*** ******* SNIPING_FACEBOOK_ADVERTISMENTS_LIKE_NINJA:[307]: **/ // [307]
/** PLACES_TO_POST_YOUR_CONTENT **************************** *** // [330]
                                                                 // [330]
    www.imgur.com                                                // [330]
                                                                 // [330]
    Arts and crafts post in : "But where do my flaps go?"        // [330]
                                                                 // [330]
*** **************************** PLACES_TO_POST_YOUR_CONTENT **/ // [330]
/** PEOPLE_ON_YOUTUBE_KANJI_CODER_IS_STALKING:[257]: ******* *** // [257]
*** YOUTUBE_DEVELOPERS:[257]: ****************************** *** // [257]
                                                                 // [---]
    TAG[ stalking-section | stalking_section | stalk-sec  ]      // [461]
    TAG[ stalkingsection | stalksec | stalk_sec | stlksec ]      // [461]
    TAG[ stalking-on-youtube | stalking_on_youtube        ]      // [415]
    TAG[ stalkingonyoutube | yt_devs | ytdevs | yt_devs   ]      // [415]
    TAG[ stalking | list-of-devs | dev-stalking | stalker ]      // [258]
    TAG[ dev stalking | list of devs | beginners          ]      // [259]
    TAG[ devs-to-stalk | devs_to_stalk | devstostalk      ]      // [259]
    TAG[ dev stalk | dev_stalk | devstalk | devstalker    ]      // [259]
    TAG[ dev_stalker | dev-stalker | dev stalker          ]      // [259]
    TAG[ people-iam-stalking | people_iam_stalking        ]      // [306]
    TAG[ peopleiamstalking | stalking-peeps | stalkingpeep]      // [306]
    TAG[ stalking_peeps | stalking peeps ________________ ]      // [306]
    TAG[ devs to stalk | DevsToStalk ____________________ ]      // [307]
                                                                 // [306]
    REDDIT : https://www.reddit.com/user/Saondberg/              // [306]
                                                                 // [258]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [259]
    SUBS:::: [ 6.23 M ]( 335,131 )                               // [259]
    TITLE::: JavaScript Game Development Course for Beginners    // [259]
    VIDEO::: https://www.youtube.com/watch?v=GFO_txvwK_c         // [259]
    CHANNEL: https://www.youtube.com/c/Freecodecamp              // [259]
    LINKED:: LINK_FRANK_AND_CODE_CAMP @PAIRED_COMMENT@           // [259]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [258]
    SUBS:::: [ 1.94 M ]( 73,563 )                                // [258]
    TITLE::: Why Developers Should Have a YouTube Channel        // [258]
    VIDEO::: https://www.youtube.com/watch?v=oAoYFZvMQEs         // [258]
    CHANNEL: https://www.youtube.com/c/TraversyMedia             // [258]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [258]
    SUBS:::: [ 776K ]( 91,105 )                                  // [258]
    TITLE::: Top Developer Youtube Channels I Follow!            // [258]
    VIDEO::: https://www.youtube.com/watch?v=66SDKzLAM0I         // [258]
    CHANNEL: https://www.youtube.com/c/DevEd                     // [258]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [258]
    SUBS:::: [ 718K ]( 1,063,227 )                               // [258]
    TITLE::: YouTube is Killing Twitch                           // [258]
    VIDEO::: https://www.youtube.com/watch?v=Wj1X99yEG_I         // [258]
    CHANNEL: https://www.youtube.com/watch?v=Wj1X99yEG_I         // [258]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [258]
    SUBS:::: [ 204K ]( 76,696 )                                  // [258]
    TITLE::: Overhauling the Graphics in my Game Engine          // [258]
    VIDEO::: https://www.youtube.com/watch?v=3CVpTPyQFmY         // [258]
    CHANNEL: https://www.youtube.com/c/ThinMatrix                // [258]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [---]
    SUB::::: [ 112K ]( 184K Views )                              // [415]
    TITLE::: Technique for Creating Beautiful Level Design       // [415]
    VIDEO::: https://www.youtube.com/watch?v=qNACGP98b6c         // [415]
    CHANNEL: https://www.youtube.com/c/PixelArchitect            // [415]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [---]
    SUBS:::: [ 145K ]( 181,784 Views )                           // [287]
    TITLE::: The Perfect Pixel Art Parallax Tutorial             // [287]
    TITLE::: [and Unity script!]                                 // [287]
    VIDEO::: https://www.youtube.com/watch?v=tMXgLBwtsvI         // [287]
    CHANNEL: https://www.youtube.com/c/AdamCYounis               // [287]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [---]
    SUBS:::: [ 140K ]( 652,559 Views )                           // [257]
    TITLE::: I Turned Manhunt Into a Multiplayer Game!           // [257]
    VIDEO::: https://www.youtube.com/watch?v=HgrFyitP4bo         // [257]
    CHANNEL: https://www.youtube.com/c/BarjiGames                // [257]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [257]
    NAME:::: Pixel Architect (NOT:Pixel Architecht)              // [461]
    SUB::::: [ 115K ]( 62K Views , video below )                 // [461]
    TITLE::: How I Created a Ghibli Style Bathhouse              // [461]
    TITLE::: for My Indie Game                                   // [461]
    VIDEO::: https://www.youtube.com/watch?v=1gmU5Fxwh24         // [461]
    CHANNEL: https://www.youtube.com/c/PixelArchitect            // [461]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [257]
    SUBS:::: [ 034K ]( 228,712 Views )                           // [257]
    TITLE::: I HAND-CRAFTED a WORLD for my RPG Game              // [257]
    VIDEO::: https://www.youtube.com/watch?v=gfgeHXk6BJY         // [257]
    CHANNEL: https://www.youtube.com/c/AIAdev                    // [257]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [258]
    SUBS:::: [ 20K ]( 6,143,096 )                                // [258]
    TITLE::: I built a 1Hz Redstone Computer...                  // [258]
    VIDEO::: https://www.youtube.com/watch?v=tDxKhiJfgYk         // [258]
    CHANNEL: youtube.com/channel/UC2bWoD1AHvZM80cEkRx3Rmw        // [258]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [257]
    SUBS:::: [ 52K ]( 139,246 )                                  // [284][259]
    TITLE::: Javascript Side Scroller Game Tutorial              // [259]
    VIDEO::: https://www.youtube.com/watch?v=7JtLHJbm0kA         // [259]
    CHANNEL: https://www.youtube.com/c/Frankslaboratory          // [259]
    LINKED:: LINK_FRANK_AND_CODE_CAMP @PAIRED_COMMENT@           // [259]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [---]
    NAME:::: Tantan                                              // [287]
    SUBS:::: [ 25K ]( 33,906 views , video below )               // [287]
    TITLE::: Making my Voxel Engine faster                       // [287]
    VIDEO::: https://www.youtube.com/watch?v=bGN445_2NSw         // [287][MOV][285]
    CHANNEL: https://www.youtube.com/c/Tantandev                 // [287]
                                                                 // [287]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [---]
    NAME:::: Emergent Garden                                     // [284]
    SUBS:::: [ 23K ]( 75,741 views , video below )               // [284]
    TITLE::: Putting YOUR creations in the Life Engine           // [284]
    VIDEO::: https://www.youtube.com/watch?v=ozNCUQ1v4uA         // [284]
    CHANNEL: https://www.youtube.com/c/EmergentGarden            // [284]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [---]
    SUBS:::: [ 789 ]                               @badduck@     // [259]
    TITLE::: RULE TILE tutorial - UNITY ( 2020 )                 // [259]
    VIDEO::: https://www.youtube.com/watch?v=dd4KrKCa3Yg         // [259]
    CHANNEL: youtube.com/channel/UCD7su0UF7u8qApkLJEO-Iqw        // [259]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [---]
    NAME:::: Misho Dev                                           // [284]
    SUBS:::: [ 170 ]( 4,544 Views )                              // [284]
    TITLE::: Making a sci-fi action game on a                    // [284]
    _____::: corrupted planet - Devlog 01                        // [284]
    VIDEO::: https://www.youtube.com/watch?v=NhCb8etzgbI         // [284]
    CHANNEL: https://www.youtube.com/c/MischavanderGoes          // [284]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [---]
    NAME:::: Dannycopo42                                         // [284]
    SUBS:::: [ 754 ]( 27,169 view , in video below )             // [284]
    TITLE::: Why does your indie game not FEEL good?             // [284]
    _____::: (No art needed)                                     // [284]
    VIDEO::: https://www.youtube.com/watch?v=wZUPCSuqklM         // [284]
    CHANNEL: www.youtube.com/channel/UCq_cC7L-66h6ylLbA6Nzplw    // [284]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [---]
    NAME:::: Tilengine (NOT:TileEngine, NOT: Tile Engine)        // [461]
    SUBS:::: [ 275 ]( 1K views , in video below )                // [461]
    TITLE::: Tilengine vertical scroll barrel demo               // [461]
    VIDEO::: https://www.youtube.com/shorts/c9i1SLyuSEA          // [461]
    CHANNEL: www.youtube.com/channel/UCaINjGQpQut4MW30rSQjlXg    // [461]
    WEBSITE: https://www.tilengine.org/                          // [461]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [---]
    NAME:::: OatCube                                             // [284]
    SUBS:::: [   64 ](  36 views , in video below )              // [259]
    TITLE::: TILEMAP System From Scratch in UNITY ...            // [259]
    VIDEO::: https://www.youtube.com/watch?v=gxtrC1Zimvo         // [259]
    CHANNEL: youtube.com/channel/UC0fZn0XcjRZNxakHUXC277A        // [259]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [---]
    NAME:::: KANJICODER                                          // [284]
    SUBS:::: [ 31 ]                                              // [284]
    CHANNEL: www.youtube.com/channel/UC4LGGffxX6hZ3Fu0Kv7hUsw    // [284]
    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::     // [---]
                                                                 // [---]
*** ****************************** YOUTUBE_DEVELOPERS:[257]: *** // [257]
*** ******* PEOPLE_ON_YOUTUBE_KANJI_CODER_IS_STALKING:[257]: **/ // [257]
/** MISC_DELTA_NOTES *************************************** *** // [???]
*** CHANGE_HISTORY _ *************************************** *** // [088]
*** CHANGE_LOG _____ *************************************** *** // [088]
                                                                 // [---]
    TAG[ CHANGE_HISTORY | MISC_DELTA_NOTES ]                     // [088]
    TAG[ LOG_SECTION | change-log | changelog ]                  // [169][097]
                                                                 // [---]
    [018] : TUTORIAL PART 018                                    // [088]
          : https://pastebin.com/ZCFNxebJ                        // [088]
          : tinyurl.com/SERVER-JS-PART-18                        // [088]
          : git@github.com:KanjiCoder/AIM_018.git                // [088]
          : https://github.com/KanjiCoder/AIM_018                // [088]
                                                                 // [---]
    [044] : Will crash randomly if you supply correct            // [044]
          : password. This is by design. We will fix it          // [044]
          : in future deltas.                                    // [044]
                                                                 // [---]
    [048] : This snapshot can be difficult to get started        // [048]
          : without crashing server because it requires us       // [048]
          : to re-build the schema/table for[ tab_hex ]          // [048]
          : before the api call[ DABITCH/C/TAB_HEX/red/40 ]      // [048]
          :                    [ DABITCH/C/TAB_HEX/blue/69 ]     // [048]
          : will work. We will make it easier by adding          // [048]
          : helper api to re-create table in [049]               // [048]
                                                                 // [---]
    [049] : Added helper : <yourappurl>/DABITCH/MAKTAB/TAB_HEX   // [049]
                                                                 // [---]
    [052] : Noticed that: <app>/DABITCH/C/TAB_HEX/blue           // [052]
          : will crash the sever with a "missing column"         // [052]
          : error.                                               // [052]
          :                                                      // [052]
          : If argument is undefined, we should use an           // [052]
          : "empty" name.                                        // [052]
          :                                                      // [052]
          : null string ==> "[NIL][SQL_NIL]"                     // [052]
          : null number ==> 0                                    // [052]
          :                                                      // [052]
                                                                 // [---]
    [056] : Return[ err_msg ]object from JSON response always.   // [056]
          : If error in SQL , rather than crash server,          // [056]
          : we pack meaningful error message into[ err_msg ].    // [056]
          : If no error , [ err_msg == "" ].                     // [056]
          : ADDED_DATE[ 2022_06_25 ]                             // [056]
                                                                 // [---]
    [057] : KEYMAIN - Politically Correct Version Of             // [057]
          : KEYMAST ( Key Master )                               // [057]
                                                                 // [---]
    [059] : Added helpful message to help you configure          // [059]
          : your heroku installation properly if you             // [059]
          : cannot get access to your application name.          // [059]
          : RUN:                                                 // [059]
                                                                 // [059]
        heroku labs:enable runtime-dyno-metadata --app APPNAME   // [059]
                                                                 // [---]
    [060] : We didn't change any source code here.               // [060]
          : (except this comment message)                        // [060]
          : I Ran :                                              // [060]
                                                                 // [---]
    heroku labs:enable runtime-dyno-metadata --app "aim-kanji"   // [063]
          :                                                      // [063]
          : You might need to use :                              // [063]
          :                                                      // [063]
          git commit --allow-empty -m "[EMPTY_COMMIT]"           // [063]
          :                                                      // [063]
          : To force server to restart after adding              // [063]
          : "runtime-dyno-metadata"                              // [063]
                                                                 // [063]
    [063] : Refactored project a bit to give ARTGIRL the         // [063]
          : things she rightfully owns and has                   // [063]
          : jurisdiction over.                                   // [063]
                                                                 // [---]
    [064] : Waterfalled some design by adding render             // [064]
          : pipeline constants. This is literally our            // [064]
          : ______ nth draft.                                    // [064]
          :                                                      // [064]
          : 1st draft : Atomic Alice (newgrounds)                // [064]
          : 2nd draft : M128.JS  (still japanese)                // [064]
          : 3rd draft : A2_JC (for josh project   2020)          // [064]
          : 4rd draft : A2_JS (repo. Tile editor? 2021)          // [064]
          :           : Tilde("~") + 2 to get to                 // [064]
          :           : interesting stuff.                       // [064]
          : 5rd draft : AAC2020                                  // [064]
          : 6th draft : A3 's CPU world map render.              // [064]
          : 7th draft : A3 's LEDIT64 system.                    // [064]
          : 8th draft : This source code. Atomic Ivy MMO         // [064]
          :                                                      // [077]
          : #_LIST_OF_TRIES_2022_07_02_#                         // [077]
                                                                 // [---] 
    [065] : J++ , Previously known as                            // [065]
          : "JavaScript With Structs".                           // [065]
          :                                                      // [065]
          : NinjaCoder Title: "JavaScript With Structs"          // [065]
          : KanjiCoder Title: "JavaScript Struct Keyword"        // [065]
                                                                 // [---] 
    [066] : Added hardcoded vertex buffer data for               // [066]
          : the shader quad needed for creating                  // [066]
          : 2D graphics pipeline in WebGL.                       // [066]
          :                                                      // [066]
          : Also created nifty const-array                       // [066]
          : constructor function for immutable                   // [066]
          : arrays of a fixed size to mimmick                    // [066]
          : C99 behavior.                                        // [066]
                                                                 // [---] 
    [067] : Added all ( I think ) member variables               // [067]
          : needed by[ ARTGIRL ]to setup our OpenGL              // [067]
          : rendering quad and display it on screen.             // [067]
          :                                                      // [067]
          : Created an[ ARR ]function so that we dont            // [067]
          : have to type[ new Array( len ) ]and can              // [067]
          : instead type[     F_ARR( len ) ].                    // [069][067]
                                                                 // [---]
    [073] : 1 : More robust error checking.                      // [073]
          : 2 : Updated deployment documentation.                // [073]
                                                                 // [---]
    [076] : Created Uint8 Array Constructor Functions.           // [076]
          : F_ARR_U08 & F_CAR_U08                                // [076]
                                                                 // [---]
    [077] : Created "Vertex Buffer Object" ( VBO )         :     // [077]
          : VBO is just a GPU copy of a raw array          :     // [077]
          : that we give to WebGL. The name makes          :     // [077]
          : no fucking sense.                              :     // [077]
          :                                                :     // [077]
          : I am going to think of VBO == AI0              :     // [077]
          : AI0 == Array Indirect 0                        :     // [077]
          : ( zero indirection because raw array without ) :     // [077]
          : ( any interpretation yet )                     :     // [077]
          :                                                :     // [077]
          : ---------------------------------------------- :     // [077]
          : ALSO... created constants for the array        :     // [077]
          :         attribute slots.                       :     // [077]
          : c_artgirl_loc_pos <-- slot location : pos      :     // [077]
          : c_artgirl_loc_tex <-- slot location : tex      :     // [077]
          :                                                :     // [077]
          : ---------------------------------------------- :     // [077]
                                                                 // [---]
    [078] : Vertex fetch requires 4, but attribs only supply 0   // [078]
          : ------------------------------------------------     // [078]
          : Fuckyou WebGl. How many times have I fucking         // [078]
          : done this in my life? And I still can't get          // [078]
          : it right the first time? This part is                // [078]
          : easier in C99 because in WEBGL there are             // [078]
          : multiple overrides for functions.                    // [078]
          :                                                      // [078]
          : I say this because I don't get stuck like            // [078]
          : this when I am doing this in C99.                    // [078]
          :                                                      // [078]
          : SILENTFAIL : wgl.bufferData( a1,a2,a3,a4    );       // [078]
          : THE____FIX : wgl.bufferData( a1,a2,a3,a4,a5 );       // [078]
                                                                 // [---]
    [079] : No code changes. Just demonstrated the end           // [079]
          : result of tutorial [078] . We didn't have            // [079]
          : enough time to go over the end-result                // [079]
          : in the previous video.                               // [079]
                                                                 // [---]
    [080] : 1: gl.viewport changes when canvas size changed now. // [080]
          : 2: Retroactively added some video number tags        // [080]
                                                                 // [---]
    [081] : Getting Ready For Pipeline Swapping. Added           // [081]
          : A "Flat Lime" color shader.                          // [081]
          :                                                      // [081]
          : Made "Flat Cyan" color shader an official            // [081]
          : shader in our shader enums.                          // [081]
                                                                 // [---]
    [082] : Gradient Quad With TOP-LEFT origin. This is __NOT__  // [082]
          : the origin standard to [ OPENGL || WEBGL ] ,         // [082]
          : we were "clever" with our texture coord values       // [082]
          : so that we could get [hack] a __SANE__ top-left      // [082]
          : graphical origin.                                    // [082]
                                                                 // [---]
    [084] : We are delirious right now. I wrote this off         // [084]
          : camera. We are too tired to do more tutorial.        // [084]
          : You only have so much mental strength.               // [084]
          : SEARCH_FOR[ FLASH_GRAD ]And pick this back           // [084]
          : up on camera later.                                  // [084]
                                                                 // [---] 
    [085] : Setting up the simulation ticker before we can       // [085]
          : setup the flashing shader code.                      // [085]
                                                                 // [---]      
    [086] : Now uploading[ d_tik ]value to shader uniform        // [087][086]
          : variable of same name every frame.                   // [087][086]
          :                                                      // [087][086]
          : Numkey 4 ==> Gradient Shader. Got a bit fancy        // [087][086]
          : with making tiles with modulus so it is              // [087][086]
          : visually distinct enough from Numkey 3.              // [087][086]
                                                                 // [---]
    [087] : 1 : Calculated the "shape" of nothingness.        :  // [088][087]
          : 2 : Figured out addressing space for rendering.   :  // [088][087]
          :::::                                               :  // [088][087]
              : c_dum ( 0x7F_FFFF ) : DiscreteUnits - THE_DUM :  // [088][087]
              : c_dut ( 0x2222    ) : DiscreteUnits -  G_TILE :  // [088][087]
                                                                 //
    [088] : Added Variables For Camera & Plank Units             // [089][088]
          : ( Plank Units == Discrete Units )                    // [089][088]
                                                                 // 
    [089] : Added Camera Vars [ vp0 , vp1 , vpc ]                // [090][089]
          : to shader code, but have not wired them              // [090][089]
          : up in the CPU code yet.                              // [090][089]
                                                                 // 
    [090] : Added variables for uniform locations of             // [091][090]
          : [ d_tik , d_vp0 , d_vp1 , d_vpc ]                    // [091][090]
          : [ d_tik_loc , d_vp0_loc , d_vp1_loc , d_vpc_loc ]    // [091][090]
                                                                 // 
    [091] : GPU/CPU sync of [ d_tik , d_vp0 , d_vp1 , d_vpc ]    // [092][091]
                                                                 // 
    [092] : [ d_vpc ]is now size of wgl.viewport , and resizes   // [093][092]
          : correctly when user resizes the window.              // [093][092]
                                                                 // 
    [093] : Added the logic for zooming in and out.              // [094][093]
          : HOWEVER... Nothing can be observed yet,              // [094][093]
          : because the fragment shader code does                // [094][093]
          : __NOT__ make use of[ d_vp1 ]yet.                     // [094][093]
          : ( d_vp1 === Data Selection Viewport Rectangle )      // [094][093]
                                                                 // 
    [094] : Added letter boxing math so that we can              // [095][094]
          : verify rendering code uses[ vp0 ]and[ vpc ]          // [095][094]
          : correctly.                                           // [095][094]
                                                                 // 
    [095] : Added letter boxing to shader code.                  // [096][095]
                                                                 //
    [096] : "L" Key To Toggle Letter Boxing.                     // [097][096]
                                                                 //
    [097] : Figured Out Sample Coordinate For Data Set.          // [098][097]
          : HOWEVER:                                             // [098][097]
          : 1. Not using sample coord yet.                       // [098][097]
          : 2. Don't have any data yet.                          // [098][097]
          : Next thing to do: Use sample coord to                // [098][097]
          : visualize the space we are in.                       // [098][097]
                                                                 //
    [098] : 1 : _____FIXED_____  "Discrete_Unit" constants.      // [099][098]
          : 2 : Added  __MORE__  "Discrete_Unit" constants.      // [099][098]
                                                                 //
    [099] : Basic space visualization coded, however the         // [100][099]
          : camera math is __NOT__ 100% correct. Seems the       // [100][099]
          : bottom-right corner of the camera is "pinned".       // [100][099]
          :                                                      // [100][099]
          : Suspect error is in [GLSL/GPU] code , and            // [100][099]
          : __NOT__ cpu code.                                    // [100][099]
          :                                                      // [100][099]
          : TODO:                                                // [100][099]
          : Make a CPU debug button that                         // [100][099]
          : snaps camera exactly onto a 1 tile in the            // [100][099]
          : game to help diagnose problem.                       // [100][099]
                                                                 //
    [100] : GO TO THE NEXT PLAYLIST FOR VIDEO # 101 :            // [101][100]
          : www.tinyurl.com/BOMB-PLAYLIST-002                    // [101][100]
                                                                 //
    [101] : No code changes. The first video of each playlist    // [102][101]
          : will be used to DEMO/PREVIEW all of the work done    // [102][101]
          : in that playlist. So video 101 summarizes            // [102][101]
          : videos[ 101 - to - 200 ].                            // [102][101]
                                                                 //
    [102] : Organizing code before we stubb in                   // [103][102]
          : EDIGAME container which will contain high            // [103][102]
          : level camera controls. (among other things )         // [103][102]
          :                                                      // [103][102]
          : Will use these high level camera controls            // [103][102]
          : to help debug the incorrect rendering code.          // [103][102]
                                                                 //
    [103] : Stubbed in EDIGAME controls. Pressing                // [104][103]
          : [ tilde(~) / backtick(`) ] switches between          // [104][103]
          : "editor mode" and "game mode" style                  // [104][103]
          : controls.                                            // [104][103]
          :                                                      // [104][103]
          : Will be plagerizing parts of                         // [104][103]
          : HOTEL13.JS('s)[ d_hotel13_sam ]object to             // [104][103]
          : populate[ d_edigame_edi ], so updated                // [104][103]
          : HOTEL13.JS snapshot to be latest revision.           // [104][103]
                                                                 //
    [104] : Trivial refactoring, keyboard down handler           // [105][104]
          : now split into two sub functions. One for            // [105][104]
          : when[ AIM ]is behaving as an __EDITOR__ ,            // [105][104]
          : the other for when[ AIM ]is behaving as              // [105][104]
          : a __GAME__.                                          // [105][104]

    [105] : Numpad keys snap camera to respective levelpacks     // [106][105]
          : of @THE_DUM@. We are doing this to figure out        // [106][105]
          : where bug is in our RENDERING(GLSL) code.            // [106][105]
          : ( BUG NOT FOUND YET , 2022_08_03 )                   // [106][105]
                                                                 
    [106] : Sample points outside of[ THE_DUM ]are now           // [107][106]
          : darkened. This greatly helps diagnose the            // [107][106]
          : error in our fragment shader code.                   // [107][106]
                                                                 
    [107] : Found bug in our renderer, our code for              // [108][107]
          : calculating[ u_mv1 ]was... [TRASH/WRONG/INCORRECT].  // [108][107]

    [108] : Created "CameraH" struct and supporting              // [109][108]
          : constants. Also wrote some diagrams to               // [109][108]
          : explain how the camera will be used.                 // [109][108]
          :                                                      // [109][108]
          : NO FUNCTIONS WERE WRITTEN THIS VIDEO ,               // [109][108]
          : just focusing on the data structures                 // [109][108]
          : because a problem well defined is a                  // [109][108]
          : problem half solved. 2022_08_03                      // [109][108]

    [109] : 1 : Wrote a VERY SMALL chunk of high level           // [110][109]
          :   : camera FUNCTION code.                            // [110][109]
          : 2 : A LOOKUP TABLE for high level camera             // [110][109]
          :   : [ zebasis ==> @D_U@ Span ].                      // [110][109]
          : 3 : Boiler plate configuration section.              // [110][109]
          : 4 : Boiler plate: MAYBEDO , VITALDO , ASS_NUM        // [110][109]
          : 5 : F_ARR_U32 , F_CAR_U32 helper functions.          // [110][109]

    [110] : 1 : Added Assert Close To Equal Function             // [111][110]
          : 2 : Camera Zoom Code Calculates Final VP1 Size       // [111][110]
          NEXT: Figure out translation of VP1                    // [111][110]

    [111] : Added Camera Snapping Calculations to                // [112][111]
          : function that uses[ d_camerah ]to alter[ vp1 ].      // [112][111]
          : ( F_CAMERAH_VP1 )                                    // [112][111]

    [112] : F_CAMERAH_VP1 function is DONE!                      // [113][112]
          : 1. Alters VP1 Size And Translation                   // [113][112]
          : 2. Makes sure VP1 within[ c_dum ]bounds.             // [113][112]

    [113] : Camera Panning Function                              // [114][113]
          : ( F_CAMERAH_PAN )                                    // [114][113]

          :---:--------------------------------------------:     // [115][114]
    [114] : 1 :  Added Arrow Key Detection To KEYMAST ,    :     // [115][114]
          :---:--------------------------------------------:     // [115][114]
          :   : 1.1 :  ARR_I32 , CAR_I32                   :     // [115][114]
          :   : 1.2 :  c_keymast_ark_[lef|rig|upp|dow]     :     // [115][114]
          :   : 1.3 :  ark_dvx , ark_dvy lookup tables     :     // [115][114]
          :   : 1.4 :  oh_my_god_its_the_arrow_keys        :     // [115][114]
          :---:--------------------------------------------:     // [115][114]
          : # : __NOT__YET__ : ArrowKey ==> PanFunc( )     :     // [115][114]
          :---:--------------------------------------------:     // [115][114]

    [115] : 1 : Turned off CAMERAH usage ( d_camerah_use )       // [116][115]
          : 2 : F_KEYMAST_ZOM ( keymaster - zoom    )            // [116][115]
          : 3 : F_KEYMAST_PAN ( keymaster - panning )            // [116][115]
          : 4 : ASS_TRINARY                                      // [116][115]
          : 5 : F_CAMERAH_TIK                                    // [116][115]

    [116] : Low Level Panning Code Finished.                     // [117][116]

    [117] : DONE : Added High Level Camera Zoom Function.        // [118][117]
          : ---- :                                               // [118][117]
          : NEXT : Dirty Flag When Toggle Letterboxing           // [118][117]
          : NEXT : Fix bugs in camera code, currently we         // [118][117]
          : ---- : are rendering out of bounds.                  // [118][117]

    [118] : Misc Code In Lots Of Random Spots To Identify        // [119][118]
          : why[ VP1 ]bounds correction code is not              // [119][118]
          : working properly.                                    // [119][118]
          : FOUND_PROBLEM : d_vp1 is UNSIGNED and thus the       // [119][118]
          : [ vp1 < 0 ]check can never be true.                  // [119][118]

    [119] : DONE : Camera No Longer Renders Out Of Bounds.       // [120][119]
          : NEXT : Larger Camera Corrections === Stronger        // [120][119]
          :      : screen shaking or something...                // [120][119]
          :      : ORRRR..... Larger and larger red              // [120][119]
          :      : boarder around screen for how far the         // [120][119]
          :      : camera was leaking off a given edge!!!        // [120][119]

    [120] : DONE : Letterboxing toggle no longer distorts.       // [121][120]
          : NEXT : Red Boarder Feedback For Camera Correction.   // [121][120]

    [121] : Preparing shader uniforms on CPU-side to give        // [122][121]
          : us feedback in shader for how strongly               // [122][121]
          : "pressed into the wall" the high level camera        // [122][121]
          : is. DATE[ 2022_08_08 ]KANJICODER( 539AM )            // [122][121]

    [122] : Camera Out Of Bound Feedback is PARTIALLY            // [123][122]
          : written on both[ CPU ]and[ GPU ]side.                // [123][122]
          :                                                      // [123][122]
          : The[ CPU ]side code is INCORRECT and in              // [123][122]
          : the wrong location. But it is __CLOSE__              // [123][122]
          : to being CORRECT.                                    // [123][122]

          :---:                                                  // [124][123]
    [123] : 1 : d_camwall calculations are correct now.          // [124][123]
          : 2 : d_camwall calcs in the correct location.         // [124][123]
          : 3 : d_camwall code tints MONOCHROME RED in shader.   // [124][123]
          :---:                                                  // [124][123]
          : 4 : SHADER code is __NOT__ using d_camwall           // [124][123]
          : . : values correctly. Specifically , shader          // [124][123]
          : . : logic is mixing "frag coord" units and           // [124][123]
          : . : "discrete plank units" together.                 // [124][123]
          :---:                                                  // [124][123]

          :---------------------------------------------------:  // [125][124]
    [124] : DONE : Edited Shader Code To Show Camera Stress.  :  // [125][124]
          :      : It appears to "sort of work" but doesn't   :  // [125][124]
          :      : feel like code is 100% correct yet..       :  // [125][124]
          :------:                                            :  // [125][124]
          : NEXT : Add Camera Snapping Code for high level    :  // [125][124]
          :      : camera that is wired to NUMPAD.            :  // [125][124]
          :      : Save fixing camera stress code for         :  // [125][124]
          :      : AFTER WE HAVE NUMPAD CAMERA CONTROLS.      :  // [125][124]
          :      : Because we are wasting lots of time        :  // [125][124]
          :      : trying to navigate camera into position.   :  // [125][124]
          :---------------------------------------------------:  // [125][124]

    [125] : Stubbing In[ SEXYCAM ]Hotkey System.                 // [126][125]

    [126] : Added : F_KEYMAST_PAD_NUM                            // [127][126]
          : Added : F_SEXYCAM_PAD_NUM                            // [127][126]
          : NEXT  : Body/Logic of F_SEXYCAM_PAD_NUM              // [127][126]

    [127] : 1 : Added Lookup Table Mapping Numkeys To            // [128][127]
          :   : Hotel Index.                                     // [128][127]
          : 2 : Derived Hotel Cell X & Y In SEXYCAM_PAD_NUM      // [128][127]

    [128] : 1 : Added Consts For Discrete Centers Of Hotels      // [129][128]
          : 2 : Added hi9 ===> discrete center x , L.U.T.        // [129][128]
          : 3 : Added hi9 ===> discrete center y , L.U.T.        // [129][128]

          :---------------------------------------------------:  // [130][129]
    [129] : 1 : Detect Times In Row For Numpad Press          :  // [130][129]
          : 2 : Get Correct ZeroBasis                         :  // [130][129]
          : 3 : Focus Camera Into Center Of Levelpack         :  // [130][129]
          : . : with ZERO zoom , but create punchy            :  // [130][129]
          : . : zoom-effect by cycling to more coarse         :  // [130][129]
          : . : zero basis enums with each successive         :  // [130][129]
          : . : press of the same number key.                 :  // [130][129]
          : 4 : d_sexycam_not_zeb lookup table to help        :  // [130][129]
          : . : with item #3 in this list.                    :  // [130][129]
          :---------------------------------------------------:  // [130][129]

    [130] : Finished F_SEXYCAM_PAD_NUM , smaller zero            // [131][130]
          : basis values seem to make the render SHAKE,          // [131][130]
          : especially while holding the zoom("+"/"-")           // [131][130]
          : keys.... Figure that out sometime, it looks          // [131][130]
          : horrible. DATE[ 2022_08_09 ]TIME[10:20]AM            // [131][130]

    [131] : Numpad zero cycles through[ cir_cum ]modes           // [132][131]
          : of high level camera ( d_camerah )                   // [132][131]
          :                                                      // [132][131]
          : NEXT : "." key on numpad to default to               // [132][131]
          :      : inscribed camera mode.                        // [132][131]
          : NEXT : Find bug in camera when hitting numpad 0      // [132][131]

    [132] : The decimal key on number pad now makes              // [133][132]
          : high level camera use the default                    // [133][132]
          : "scribing" mode. ( cir_cum )                         // [133][132]

    [133] : Outscribing when zerobasis is "THE_DUM"(c_dum)       // [134][133]
          : no longer causes an out of bounds camera.            // [134][133]
          : The camera will get SQUASHED, but better to          // [134][133]
          : squash the camera than to get ZERO FEEDBACK          // [134][133]
          : when zooming in and out.                             // [134][133]

    [134] : Fixed bug in camera stress. We were using            // [135][134]
          : VP1 when it should have been VP0.                    // [135][134]
          :                                                      // [135][134]
          : NEXT : Numpad ENTER to cycle[ cir_cum ]modes.        // [135][134]
          : NEXT : Numpad ZERO  to "zoom extents"                // [135][134]

          :---------------------------------------------------:  // [136][135]
    [135] : Jumbled things around to get ready to write       :  // [136][135]
          : the "zoom extents" behavior for "sexycam"         :  // [136][135]
          :                                                   :  // [136][135]
          : Turns out the refactor is not as trivial as       :  // [136][135]
          : I expected.                                       :  // [136][135]
          :                                                   :  // [136][135]
          : ADDED : number pad action constants.              :  // [136][135]
          : ADDED : key set behaviors (npa) in d_sexycam      :  // [136][135]
          :       : struct.                                   :  // [136][135]
          :---------------------------------------------------:  // [136][135]

    [136] : Zoom Extents now happens when you press              // [137][136]
          : the zero key on the number pad.                      // [137][136]
                                                                 // [137][136]
          : NEXT : sexycam action bindings maybe?                // [137][136]

    [137] : Key bindings are not actually changeable, but        // [138][137]
          : now using asserts to help "self document" the        // [138][137]
          : code and make[ sexycam ]function calls easier        // [138][137]
          : to find.                                             // [138][137]

    [138] : Removed Scrollbars , Padding , Margin                // [139][138]

    [139] : Retro-active commentary for vids 17,19,24            // [140][139] 

    [140] : Retro-Active Commentary : 25,26,27,42                // [141][140]

    [141] : Added Mouse Uniform Vars : d_dmx , d_dmx_loc         // [157][142][141]
          :::::::::::::::::::::::::::: d_dmy , d_dmy_loc         // [157][142][141]

    [142] : Stubbed In "MOUMAST" (Mouse Master) System.          // [143][142]

    [143] : Stubbed In Mouse Master Functions.                   // [144][143]

    [144] : Mouse listeners load mouse position into             // [145][144]
          : the edigame_edi object now.                          // [145][144]

    [145] : Stubbed In Pixel To DiscreteUnit Conversion Funcs.   // [146][145]

    [146] : 1 : FINISHED MATH FOR : F_MOUMAST_P_X_DUX            // [147][146]
          : 2 : FINISHED MATH FOR : F_MOUMAST_P_Y_DUY            // [147][146]

    [147] : Rendering crosshairs for cursor position, but        // [148][147]
          : the math seems SLIGHTLY OFF. Cursor drifts           // [148][147]
          : the further away from VP0 origin you are.            // [148][147]

    [148] : Added fragment shader rendering modes ( fsm )        // [149][148]
          : that will declare my "intention" of the              // [149][148]
          : way the fragment shader gets pixels onto screen.     // [149][148]
          :                                                      // [149][148]
          : Different[ enu_fsm ]values will require              // [149][148]
          : different math to map mouse canvas coord to          // [149][148]
          : discrete unit world space (THE_DUM) coord.           // [149][148]

    [149] : Implemented[ FSM_000 ]in canvas mouse position       // [150][149]
          : to world mouse position methods.                     // [150][149]
          : ( MOUMAST_P_X_DUX && MOUMAST_P_Y_DUY )               // [150][149]

    [150] : 1 : Added : te7_tmi lookup table                     //      [151][150]
          : 2 : Added : te7_lat lookup table                     //      [151][150]
          : 3 : Added : tmi_### constants                        //      [151][150]
          : 4 : Added : lat_### constants                        //      [151][150]
          : 5 : Added : d_gtx   uniform (Not In Shader Yet)      // [157][151][150]
          : 6 : Added : d_gty   uniform (Not In Shader Yet)      // [157][151][150]
          : 7 : Added : d_te7   uniform (Not In Shader Yet)      //      [151][150]

    [151] : Shift held down to zoom. Otherwise cycle through     // [152][151]
          : tile size exponents.                                 // [152][151]
          : NEXT: Render Tile Size In SHADER CODE.               // [152][151]

    [152] : Figured out function names and variable names.       // [153][152]
          : Also added annoying code to remind myself to         // [153][152]
          : refactor one functions are finished.                 // [153][152]

    [153] : Added_Lookup_Table : d_te7_dun                       // [154][153]
          : Added_Lookup_Table : d_te7_peb                       // [154][153]
          : REFACTORED[ DUX_GTX ]===>[ TE7_DUX_GTX ]             // [154][153]
          : REFACTORED[ DUY_GTY ]===>[ TE7_DUY_GTY ]             // [154][153]
          :                                                      // [154][153]
          : NEXT[ CORE_LOGIC_OF[ TE7_DUX_GTX ] ]                 // [154][153]
          : NEXT[ CORE_LOGIC_OF[ TE7_DUY_GTY ] ]                 // [154][153]

    [154] : Finished Math For DiscreteUnits ==> GlobalTile       // [155][154]
          : NEXT : Render active tile in GPU code.               // [155][154]

    [155] : Added shader code to render the active tile          // [156][155]
          : that user's mouse is over. Lights up red.            // [156][155]

    [156] : Stubbed in: TILEBOI , PIX2048 , PIX0512              // [157][156]
          : NEXT : Refactoring I forgot About.                   // [157][156]
          : NEXT NEXT : Explain Data Layouts                     // [157][156]

    [157] : Finished_A_Refactor_Of_Four_Variables :              // [158][157]
                                                                 // [158][157]
              d_m_x ==> d_dmx                                    // [158][157]
              d_m_y ==> d_dmy                                    // [158][157]
              d_t_x ==> d_gtx                                    // [158][157]
              d_t_y ==> d_gty                                    // [158][157]
                                                                 // [158][157]
          : TWO @NMS@ Messages Remain.                           // [158][157]

    [158] : Went over diagram [_PIX2048_BASIC_LAYOUT_].          // [159][158]

    [159] : [_VIDEO_159_TILE_DATA_LAYOUT_EXPLAINED_]             // [160][159]
          :      :                                               // [160][159]
    : WASNT_NEXT : Add constants that appear in COMMENT          // [160][159]
          :      : diagrams to the CODE sections.                // [160][159]

    [160] : Diagarammed Master Memory Layout In Comments.        // [161][160]


    [161] : 1. Added Constants For :               :::::::::     // [162][161]
          :     1.1 : Master Memory Layout         :::::::::     // [162][161]
          :     1.2 : Room Indexes                 :::::::::     // [162][161]
          :     1.3 : Layer Constants              :::::::::     // [162][161]
          :                                        :::::::::     // [162][161]
          : 2. Stubbed In Four TILEBOI Functions.  :::::::::     // [162][161]
          :     2.1 : F _ TILEBOI _ EDI_PUT _ U32  :::::::::     // [162][161]
          :     2.2 : F _ TILEBOI _ EDI_GET _ U32  :::::::::     // [162][161]
          :     2.3 : F _ TILEBOI _ SIM_PUT _ U32  :::::::::     // [162][161]
          :     2.4 : F _ TILEBOI _ SIM_GET _ U32  :::::::::     // [162][161]

    [162] : Added Code To Body Of : TILEBOI _ EDI _ PUT          // [163][162]
          : Added Code To Body Of : TILEBOI _ EDI _ GET          // [163][162]
          : Added L__U__T : ( g25 )===>( vod )                   // [163][162]
          : Created Helper Function To Get The Pixel             // [163][162]
          : CHANNEL COMPONENT (of red because it is first)       // [163][162]
          : SEE[ TILEBOI _ HI9 _ TE7 _ LA3 _ TLX _ TLY _ DPC     // [163][162]

    [163] : A lot of lookup tables were added so that we         // [164][163]
          : hopefully have all the lookup tables needed for      // [164][163]
          : [ F _ TILEBOI _ HI9 _ TE7 _ LA3 _ TLX _ TLY _ DPC ]  // [164][163]
          :                                                      // [164][163]
          : Also added supporting symbolic constants to          // [164][163]
          : help create afformentioned lookup tables.            // [164][163]

    [164] : 1 : Added ASS_TUP_EQU function.                      // [165][164]
          : 2 : Error Checked r4x & r4y lookup tables.           // [165][164]

    [165] : More lookup tables for going from the                // [166][165]
          : [RENDERING_LAYOUT] of levelpack to the               // [166][165]
          : [DATA______LAYOUT].                                  // [166][165]

    [166] : Finally Wrote Conversion From Tile Coordinate        // [167][166]
          : on levelpack to data location within our             // [167][166]
          : master memory bitmap. ( d_pix2048 ).                 // [167][166]
          : [ F_TILEBOI _ HI9 _ TE7 _ LA3 _ TLX _ TLY _ DPC ]    // [167][166]

    [167] : 1 : Fixed bug in comments.                           // [168][167]
          : 2 : Added annotations for comments.                  // [168][167]

    [168] : Added bit UN-packing logic for TILE_PUT              // [169][168]
          : Added bit    PACKING logic for TILE_GET              // [169][168]

    [169] : Tile cursor now updates correctly when :             // [170][169]
                                                                 // [170][169]
          : 1 : Panning                                          // [170][169]
          : 2 : Zooming                                          // [170][169]
          : 3 : Changing Tile Size Exponent Loaded Into Brush    // [170][169]

    [170] :DONE:1: Mouse Click Logic For Tile Setting            // [171][170]
          :DONE:2: Stubbed In Tile To U32 Converter Func         // [171][170]
          :NEXT:1: Finish Tile ==> U32 Function                  // [171][170]
          :NEXT_NEXT: Maybe Texture Push ?                       // [171][170]
          :NEXT_NEXT: Maybe Texture Uniform Setup ?              // [171][170]

    [171] : 1 : BugFix In : F_TILEBOI _                          // [172][171]
          :   :             HI9 _ TE7 _ LA3 _ TLX _ TLY _ DPC    // [172][171]

    [172] : Conversion of tile value and layer to a              // [173][172]
          : uint32 pixel value that encodes tile value           // [173][172]
          : AND whatever meta data we need.                      // [173][172]
          : [ F _ TILEBOI _ LA3 _ V16 _ U32 ]                    // [173][172]

    [173] : Wired Up Texture Sampler Uniform                :::  // [174][173]
          : NEXT :----: Initial Texture Push On             :::  // [174][173]
          :      :----: Render_Pipeline_Load                :::  // [174][173]
          : NEXT_NEXT : Dirty 128x128 Blocks Of LevelPacks. :::  // [174][173]
          :-----------: SubTexturePush levels where tiles   :::  // [174][173]
          :-----------: have changed.                       :::  // [174][173]

    [174] : When render pipeline loads , we now push up          // [175][174]
          : d_pix2048 CPU Side Texture to GPU Side Texture.      // [175][174]
          :                                                      // [175][174]
          : NEXT : Shader code so we can see tiles put           // [175][174]
          : NEXT_NEXT : Confirm texture upload with download     // [175][174]
          : NEXT_NEXT_NEXT : Sub Texture Push When Put Tiles     // [175][174]

    [175] : Began work on layer rendering function   ::::::::::  // [176][175]
          : that will take all tile sizes of a given ::::::::::  // [176][175]
          : type and composite them together into a  ::::::::::  // [176][175]
          : IV4 normalized color pixel.              ::::::::::  // [176][175]
          :                                          ::::::::::  // [176][175]
          : Rendering will be back-to-front          ::::::::::  // [176][175]
          : so we can support transparency.          ::::::::::  // [176][175]    

    [176] : 1 : Discrete Unit Constants At Top Level Of          // [177][176]
          :   : shader #5 being worked on.                       // [177][176]
          :   : SEE[ DUN_NOW_TOP_LEVEL ].                        // [177][176]
          : 2 : R4 Enumerations Added To Shader #5               // [177][176]
          :   : SEE[ R4_ENUMS ]                                  // [177][176]
          : 3 :[ d___g25___r4x ]&&[ d___g25___r5y ]LUT(S)        // [177][176]
          :   : SEE[ G25_R4C_TABLES ]                            // [177][176]
          : 4 :[ p2k_______x_y ]calculations are half finished.  // [177][176]

    [177] : 1 : Added diagonal offset L_U_T to shader code.      // [178][177]
          : 2 : Added lateral multiplier L_U_T to shader code.   // [178][177]
          : 3 : Pixel Holding Tile Data Fully Calculated         // [178][177]
          : 4 : Replaced hard coded TILDE with "96"              // [178][177]

    [178] : 1 : GLSL's [ GET _ LA3 _ FV4 ] function is      :::  // [179][178]
          :   : __NOT__ finished yet, but FINISHED_ENOUGH   :::  // [179][178]
          :   : to start using it to get valuable feedback. :::  // [179][178]
          :   :                                             :::  // [179][178]
          : 2 : Used[ obi_wan ]to avoid infinite loop       :::  // [179][178]
          :   : in our GLSL shader code.                    :::  // [179][178]
          :   :                                             :::  // [179][178]
          :NEX: _COMPOSITE_GBF_LAYERS_                      :::  // [179][178]

    [179] : Stubbed in where compositing logic will go,          // [180][179]
          : but... not doing that yet... We have a bug...        // [180][179]
          : I cannot get any feedback to see that a tile         // [180][179]
          : was set. Next video will populate all levelpacks     // [180][179]
          : with 0xFFFFFFFF for every pixel to help narrow       // [180][179]
          : down where problem is.                               // [180][179]

    [180] : Stubbed in Konami_Code system that will be           // [181][180]
          : used to help debug. UPUPDOWNDOWNLEFTRIGHTLEFTRIGHT   // [181][180]
          : and then a letter "A" - "Z" to execute               // [181][180]
          : debug code.                                          // [181][180]
          :                                                      // [181][180]
          : Why so fancy? Because we are quickly running         // [181][180]
          : out of key bindings. Debug stuff doesn't             // [181][180]
          : need to be called all the time , so doing            // [181][180]
          : a fancy little [ jig / dance ] with our              // [181][180]
          : fingers every time shouldn't be a big deal.          // [181][180]

    [181] : DONE : Console will log a message           :::::::  // [182][181]
          :      : when we type the konami code.        :::::::  // [182][181]
          : NEXT : Perform function when konami code    :::::::  // [182][181]
          :      : is typed and then [A-Z] is pressed.  :::::::  // [182][181]

    [182] : DONE : Konami code procedure detection is done.      // [183][182]
          : NEXT : Fill in procedure code for 1-filling          // [183][182]
          :      : and 0-filling the region of                   // [183][182]
          :      : [ d _ pix 2048 ]that contains @THE_DUM@.      // [183][182]

    [183] : Created Pix2048 MemSet Command For Filling           // [184][183]
          : [ Hotel(s) / LevelPacks(s) ]with arbitrary           // [184][183]
          : Uint32 byte sequence in each pixel.                  // [184][183]
          :                                                      // [184][183]
          : We will pick-up Konami-C-Part-4 in video #1_8_5      // [184][183]
          : ( not a guarantee but a PROBABLY )                   // [184][183]

    [184] : Texture push if master memory is dirty.              // [185][184]

    [185] : Moved ( SYSTEM_PIX2048 )and( SYSTEM_TILEBOI )        // [186][185]
          : to the very fucking __TOP__ of the dependency        // [186][185]
          : chain.                                               // [186][185]

    [186] : [ konami_code + "A" ] ===> Binary 1 Fills Hotels     // [187][186]
          : [ konami_code + "B" ] ===> Binary 0 Fills Hotels     // [187][186]
          : ( Actually , just the arrow part of konamicode )     // [187][186]

    [187] : Konamic now uses a scrolling window.         ::::::  // [188][187]
          : Basically a small 8 character key-logger     ::::::  // [188][187]
          : of previous keys pressed.                    ::::::  // [188][187]
          :                                              ::::::  // [188][187]
          : Reason : Konami code was not activating      ::::::  // [188][187]
          :        : consistently. It wasn't a bug.      ::::::  // [188][187]
          :        : More like... Highly user unfriendly ::::::  // [188][187]
          :        : behavior we had coded.              ::::::  // [188][187]

    [188] : Added more code and diagrams to help further ::::::  // [189][188]
          : explain how our scrolling window for         ::::::  // [189][188]
          : konami code detection works.                 ::::::  // [189][188]
          :                                              ::::::  // [189][188]
          : Code changes are to help easily connect      ::::::  // [189][188]
          : the diagrams with the related code.          ::::::  // [189][188]

    [189] : Do __NOT__ draw tiles in void rooms, because         // [190][189]
          : tile(s) __CANNOT__ ever exist in void rooms.         // [190][189]
          :                                                      // [190][189]
          : Any tile data we have for void room locations        // [190][189]
          : is some bogus sample point that should be            // [190][189]
          : [ discarded / overridden to zero ].                  // [190][189]

    [190] : Void room cells now render as VERY_DARK_RED on       // [191][190]
          : [THE_DUM]. Entertaining the thought of               // [191][190]
          : also rendering a neon grid in these sections...      // [191][190]
          :                                                      // [191][190]
          : But is that useful feedback to progressing           // [191][190]
          : the game forward, or just WASTED_TIME?               // [191][190]
          :                                                      // [191][190]
          : My vote is on WASTED_TIME , right now.               // [191][190]

    [191] : 1 : Added constants to tell us how much we           // [192][191]
          :---: should inset for each layer type.                // [192][191]
          : 2 : Added CPU-SIDE LUT : ( la3 )==>( dui )           // [192][191]
          : 3 : Added GPU-SIDE LUT : ( la3 )==>( dui )           // [192][191]

    [192] : DONE : 1/7th based insets are rendering.             // [193][192]
          : NEXT : Create 1/3 of [ c _ dut ] based               // [193][192]
          : ---- : configuration to make absolutely sure         // [193][192]
          : ---- : our inset rendering logic really works.       // [193][192]

    [193] : Added denominator configuration macro for   :::::::  // [194][193]
          : how much to inset different tile layers by. :::::::  // [194][193]
          : Can now boot up with (1/3) or (1/7) of      :::::::  // [194][193]
          : [ c _ dut ]based insets.                    :::::::  // [194][193]
          :                                             :::::::  // [194][193]
          : NEXT : Color Different Layers Different     :::::::  // [194][193]
          :      : Colors. White Blob Isn't Much        :::::::  // [194][193]
          :      : information.                         :::::::  // [194][193]

    [194] : Added lookup tables that will help us render         // [195][194]
          : different tiles different colors, so we can          // [195][194]
          : further debug tile setting code that has             // [195][194]
          : bugs in it. NO VISIBLE CHANGES TO RENDERER           // [195][194]
          : IN THIS DELTA, JUST LOOKUP TABLES AND CONSTS.        // [195][194]

    [195] : Hackish Alpha Compositing. Tile Colors Returned      // [196][195]
          : strobe between green and orange.                     // [196][195]

    [196] : UP+UP+DOWN+DOWN+LEFT+RIGHT+LEFT+RIGHT+A  (1 fill) :  // [197][196]
          :                                                   :  // [197][196]
          : Now we see all the tiles that have been set       :  // [197][196]
          : when we binary 1 fill all of the levelpacks.      :  // [197][196]
          :                                                   :  // [197][196]
          : UP+UP+DOWN+DOWN+LEFT+RIGHT+LEFT+RIGHT+B  (0 fill) :  // [197][196]

    [197] : Added debug checks to tile setting code on           // [198][197]
          : the CPU-side. Everything looks correct.              // [198][197]
          : I am suspecting that we CANNOT SEE a tile            // [198][197]
          : unless tile exists on ALL_3_LAYERS with how          // [198][197]
          : the current GPU-side code hackishly composites       // [198][197]
          : things together. Next video will attempt             // [198][197]
          : more sophisticated layer compositing in our          // [198][197]
          : GPU-rendering code.                                  // [198][197]

    [198] : Proper alpha compositing for the three tile   :::::  // [199][198]
          : layers that exist on our tilemaps.            :::::  // [199][198]
          : I say proper, but I am just guessing at what  :::::  // [199][198]
          : I think alpha compositing should be.          :::::  // [199][198]
          : -KanjiCoder , 2022.08.26 : 844AM , Tired.     :::::  // [199][198]

    [199] : 1 : Added [ CONST(S) ] for numpad debug funcs.       // [200][199]
          : 2 : Added [ L_U_T(1) ] for numpad debug funcs.       // [200][199]

    [200] : We are moving to the next playlist of videos.        // [201][200]
          : FROM[ BOMB_PLAYLIST_002 ]                            // [201][200]
          :   TO[ BOMB_PLAYLIST_003 ]                            // [201][200]

    [201] : Video #2_0_1 is a summary video of what was done     // [202][201]
            in videos #2_0_1 -to- #3_0_0 . As such, no           // [202][201]
            code changes (besides commentary) have been          // [202][201]
            made for delta #2_0_1.                               // [202][201]
                                                                 // [202][201]
            WAIT!! 1 code change, the auto commit script         // [202][201]
            ( AIM/VIP/001/###.SH )has been updated with          // [202][201]
            the new playlist for it's commit message.            // [202][201]

    [202] : 1 : Added Enum Selection Block For  :::::::::::::::  // [203][202]
          :   : Konami Code Numpad Procedures.  :::::::::::::::  // [203][202]
          :   :                                 :::::::::::::::  // [203][202]
          : 2 : Created Konami Levelpack        :::::::::::::::  // [203][202]
          :   : Fill Toggle helper function.    :::::::::::::::  // [203][202]
          :   :                                 :::::::::::::::  // [203][202]
          NEXT: Numpad Key Detection In Konamic.:::::::::::::::  // [203][202]

    [203] :---:                                       :::::::::  // [204][203]
          : 1 : Refactored numpad detection in        :::::::::  // [204][203]
          :   : KEYMAST into re-usable function.      :::::::::  // [204][203]
          :   :                                       :::::::::  // [204][203]
          : 2 : Konamic uses KEYMAST numpad detection :::::::::  // [204][203]
          :   : function to listen for [ 0 - 9 ]on    :::::::::  // [204][203]
          :   : numpad after KONAMI_ARROW_CODE has    :::::::::  // [204][203]
          :___: been typed.                           :::::::::  // [204][203]
          :   :                                                  // [204][203]
          :[!]: Only "7" key on numpad works.            ::::::  // [204][203]
          :   : !!!!!!!!! THIS IS A CLUE !!!!!!!!!!!     ::::::  // [204][203]
          :   : Tile setting sort of works on the first  ::::::  // [204][203]
          :   : level of the levelpack associate with    ::::::  // [204][203]
          :   : the "7" key. The top left levelpack.     ::::::  // [204][203]
          :   : INDICATIVE OF FORGETTING TO TRANSLATE.   ::::::  // [204][203]
          :   : My guess is the __SHADER__ code is not   ::::::  // [204][203]
          :   : sampling correctly from[ d _ pix2048 ].  ::::::  // [204][203]

    [204] : My guess was correct. Problem was in the      :::::  // [205][204]
          : GLSL shader and was not translating to        :::::  // [205][204]
          : correct location in texture sample.           :::::  // [205][204]
          :                                               :::::  // [205][204]
          : I thought I was calculating hotel offset      :::::  // [205][204]
          : incorrectly, but turned out I was BLOWING     :::::  // [205][204]
          : AWAY THOSE CALCULATIONS by writing            :::::  // [205][204]
          :                                               :::::  // [205][204]
          :     "+" instead of "+=".                      :::::  // [205][204]
          :                                               :::::  // [205][204]
          : Wrote it in a more verbose way to             :::::  // [205][204]
          : prevent things hinging on a single character. :::::  // [205][204]

    [205] : Numpad detection function is now a top-level         // [206][205]
          : function. Whoooo!                                    // [206][205]

    [206] : Cut+Pasted .PNG encoding and decoding library        // [207][206]
          : into this code base. It is fucking huge.             // [207][206]
          :                                                      // [207][206]
          : NEXT : Write a simple unit test to make sure         // [207][206]
          :      : this code is correct. Throw in a              // [207][206]
          :      : hex-dump of a few .PNG hex dumps and          // [207][206]
          :      : make sure they can be decoded and             // [207][206]
          :      : encoded.                                      // [207][206]

    [207] : Re-used some old C99 code that I used for ::::::     // [208][207]
          : bit-packing numbers into 64-bit unsigned  ::::::     // [208][207]
          : ints. ( creates an 8x8 grid ).            ::::::     // [208][207]
          :                                           ::::::     // [208][207]
          : Refactored the data to use TWO 32-bit     ::::::     // [208][207]
          : integers per letter, since I don't want   ::::::     // [208][207]
          : to use 64-bit numbers in my shader code.  ::::::     // [208][207]

    [208] : Create ascii lookup table that stores the            // [209][208]
          : bit packed ascii glyphs. Ascii values go             // [209][208]
          : from [ 0 -to- 255 ]inclusive for a total of          // [209][208]
          : 256 values, but we have TWO U32(s) per               // [209][208]
          : ascii glyph, so we need array to be 512              // [209][208]
          : entries long, __NOT__ 256 entries.                   // [209][208]

    [209] : Stubbed in the stamping method and the               // [210][209]
          : argument object singleton it will use.               // [210][209]
          : ( Binary Font Stamping Method )                      // [210][209]

    [210] : Put more logic into glyph stamping function,         // [211][210]
          : but have __NOT__ finished it yet.                    // [211][210]

    [211] : Added diagaram to help explain what I call ::::::::  // [212][211]
          : [ NETWORK BIT ORDER ]. Basically same idea ::::::::  // [212][211]
          : as [ NETWORK BYTE ORDER ], using array     ::::::::  // [212][211]
          : index values on a U32's bit indexes where  ::::::::  // [212][211]
          : MSB === 0  and LSB === 1                   ::::::::  // [212][211]
          :                                            ::::::::  // [212][211]
          : MSB: Most  significant bit                 ::::::::  // [212][211]
          : LSB: Least significant bit                 ::::::::  // [212][211]
          :                                            ::::::::  // [212][211]
          :                                            ::::::::  // [212][211]
          : MSB 0 0 0 0 . . . 0 0 0 0 LSB              ::::::::  // [212][211]
          :     ^                                      ::::::::  // [212][211]
          :     |                                      ::::::::  // [212][211]
          :    31 in "bitshift order"   .              ::::::::  // [212][211]
          :     0 in "network bit order".              ::::::::  // [212][211]


    [212] : Finished the glyph stamping helper function          // [213][212]
          : for our binary font sub-system.                      // [213][212]
          : ( B_I_N____F_O_N_T )                                 // [213][212]

    [213] : Created Hex Stamper Function , which takes    :::::  // [214][213]
          : arbitrary text and stamps it to a bitmap.     :::::  // [214][213]
          :                                               :::::  // [214][213]
          : Will use in future to:                        :::::  // [214][213]
          :                                               :::::  // [214][213]
          :     1. Test U_P_N_G encode/decode methods.    :::::  // [214][213]
          :     2. Hackishly procedurally generate levels :::::  // [214][213]
          :        using a text prompt. The output will   :::::  // [214][213]
          :        probably be completely useless , but   :::::  // [214][213]
          :        it will be fun to see what the         :::::  // [214][213]
          :        results look like.                     :::::  // [214][213]
          :                                               :::::  // [214][213]
          :@FAR_FUTURE_NEXT@: Load Kyootbot image as      :::::  // [214][213]
          :                 : a levelpack and see what    :::::  // [214][213]
          :                 : happens.                    :::::  // [214][213]

    [214] : 1 : Added "Next power of two(2) function"            // [215][214]
          : 2 : Added unit tests for next power 2 func           // [215][214]
          NEXT: String to ascii helper converter function.       // [215][214]
                ( ascii value and char not interchangable )      // [215][214]
                ( in JavaScript. This isn't C99 people.   )      // [215][214]

    [215] : 1 : Added[ string/char ]to ascii char code func.     // [216][215]
          : 2 : Added tests for (char)==>(asc) function.         // [216][215]

    [216] : 1 : Fixed Bug                                        // [217][216]
          : 2 : Added idiot renderer glyph pixel colors.         // [217][216]
          : 3 : Konamic "C" key now uses glyph stamping code     // [217][216]
          :---: to paste ascii text rasterization to             // [217][216]
          :---: the master memory bitmap ( d _ pix 2048 ).       // [217][216]

    [217] : Created "NeverNo" helper function, which             // [218][217]
          : creates promises that are NEVER REJECTED.            // [218][217]

    [218] +---+                                                  // [219][218]
          : 1 : Added Startup Mode Constant To ::::::::::::::::  // [219][218]
          :   : Configuration section of file. ::::::::::::::::  // [219][218]
          :   :                                ::::::::::::::::  // [219][218]
          : 2 : Stubbed in code for changing   ::::::::::::::::  // [219][218]
          :   : behavior on startup depending  ::::::::::::::::  // [219][218]
          :   : on startup mode selection.     ::::::::::::::::  // [219][218]
          +---+                                                  // [219][218]

    [219] : Stubbed in keyboard emulator system (keyemma).       // [220][219]

    [220] : 1 : Added keyboard emulator numpad lookup table      // [221][220]
          : 2 : Added keyboard emulator functions                // [221][220]

    [221] : Game now starts up zoomed in at a decent level       // [222][221]
          : for setting player-sized tiles.                      // [222][221]

    [222] : 1 : Added constants for button keys.      :::::::::  // [223][222]
          : 2 : Added click or drag state constants.  :::::::::  // [223][222]
          : 3 : Added click or drag function.         :::::::::  // [223][222]
          : 4 : Added detection for if primary mouse  :::::::::  // [223][222]
          :   : button is down when mouse is moving.  :::::::::  // [223][222]
          :   : AKA[ added click+drag detection ].    :::::::::  // [223][222]

    [223] : Can now set tiles by clicking or dragging            // [224][223]
          : with the primary mouse button held down.             // [224][223]
          : Main work was done creating tileboi wrapper          // [224][223]
          : function[ F _ MOUMAST _ EDI _ PUT _ U32 ]            // [224][223]
          :                                                      // [224][223]
          : NEXT : Tile Setting Optimizations                    // [224][223]

    [224] : Added dirty rectangle regions and dirty :::::::::::  // [225][224]
          : bitmasks to help us optimize partial    :::::::::::  // [225][224]
          : texture pushes when tiles are set.      :::::::::::  // [225][224]

    [225] : Finished Dirty Rectangle FLAGGING code.( TURN_ONN )  // [226][225]
          :                                                      // [226][225]
          : TOOK ME 4 FUCKING HOURS TO WRITE THIS.               // [226][225]
          : 2 HOURS TO WRITE FIRST DRAFT                         // [226][225]
          : 2 HOURS TO CLEAN UP COMMENTARY + ERROR CHECK         // [226][225]
          : ( not looking forward to condensing this into )      // [226][225]
          : ( one(1) minute video.........................)      // [226][225]
          :                                                      // [226][225]
          : NEXT : Dirty Rectangle   CLEARING code.( TURN_OFF )  // [226][225]

    [226] : We have stubbed in systems                     ::::  // [227][226]
          :[ GPUSYNC ]&[ GPUDATA ]so that we can have a    ::::  // [227][226]
          : more organized (less-spaghetti-code) way of    ::::  // [227][226]
          : syncing GPU-Side texture ([ d _ pix _ 2048 ]). ::::  // [227][226]
          :                                                ::::  // [227][226]
          : Also, added crashing code where we are doing   ::::  // [227][226]
          : GPU-SYNC currently in[ ARTGIRL ]. Won't crash  ::::  // [227][226]
          : unless[ crash on vital todo ]is turned on.     ::::  // [227][226]
          :                                                ::::  // [227][226]
          : @SEPERATION_OF_CONCERNS@                       ::::  // [227][226]
          :                                                  ::  // [227][266]
          :     JOB_STACK :                                  ::  // [227][266]
          :         [0] : UNIT TESTING UPNG                  ::  // [227][266]
          :         [1] : Glyph Stamping To Texture Code     ::  // [227][266]
          :         [2] : Dirty Flagging + Cleaning Memory   ::  // [227][266]
          :         [3] : Spaghetti Code Cleanup Refactoring ::  // [227][266]

    [227] :------------------------------------------------::::  // [228][227]
          : SOME (not all) artgirl constants have been     ::::  // [228][227]
          : refactored and put into[ GPUDATA ].            ::::  // [228][227]
          : We have __NOT__ removed the artgirl constants, ::::  // [228][227]
          : but they are now setup by referencing the      ::::  // [228][227]
          : [ GPUDATA ] constants of the same name.        ::::  // [228][227]
          :                                                ::::  // [228][227]
          : Constant belongs in GPUDATA if :               ::::  // [228][227]
          :                                                ::::  // [228][227]
          :     1. Required to create WebGL Context        ::::  // [228][227]
          :     2. Required to do texture upload to GPU    ::::  // [228][227]
          :      ( Required to do texture push   to GPU )  ::::  // [228][227]
          :     3. Required by texture sampler setup    )  ::::  // [228][227]
          :                                                ::::  // [228][227]
          :     Hmmm... #3 is a bit dicy. But I put it     ::::  // [228][227]
          :     here because if it is directly related     ::::  // [228][227]
          :     to pix2048 texture , it somewhat makes     ::::  // [228][227]
          :     sense here... But #3 stuff could logically ::::  // [228][227]
          :     stay in artgirl.                           ::::  // [228][227]
          :------------------------------------------------::::  // [228][227]

    [228] : REFACTORING WebGl Context                            // [229][228]
          :                                                      // [229][228]
          : [ a_g.wgl ] ===> [ d_gpudata_wgl     ]               // [229][228]
          : [   wgl   ] ===> [ tex_wgl | ini_wgl ]               // [229][228]
          : [   wgl   ] ===> [ tik_wgl | err_wgl ]               // [229][228]

    [229] : 1 : Created:::::[ F _ GPUDATA _ INI ] :::::::::::::  // [230][229]
          : 2 : RENAMED: OLD[ ARTGIRL _ TEX_PUT ] :::::::::::::  // [230][229]
          ::::: RENAMED: NEW[ GPUDATA _ TEX_PUT ] :::::::::::::  // [230][229]
          : 3 : REFAC::: OLD[ d_artgirl_p2k_tex ] :::::::::::::  // [230][229]
          :   : REFAC::: NEW[ d_gpudata_p2k_tex ] :::::::::::::  // [230][229]
          : 4 : CALLING :                         :::::::::::::  // [230][229]
          :   :         : 1ST[ GPUDATA_TIK ]      :::::::::::::  // [230][229]
          :   :         : 2ND[ ARTGIRL_TIK ]      :::::::::::::  // [230][229]

    [230] : Dirty flagger code that was in[ PIX2048 ]  ::::::::  // [231][230]
          : system has been moved to[ GPUSYNC ].       ::::::::  // [231][230]
          :                                            ::::::::  // [231][230]
          : NEXT : Back to optimized tile setting      ::::::::  // [231][230]
          :      : code by manipulating dirty sectors. ::::::::  // [231][230]

    [231] : Fixed the error message that pops up when you :::::  // [232][231]
          : do not have access to                         :::::  // [232][231]
          : process.env[ "HEROKU_APP_NAME" ] because you  :::::  // [232][231]
          : did not enable[ runtime-dyno-metadata ]       :::::  // [232][231]

    [232] : Stubbed in basic sections for             :::::::::  // [233][232]
          : master memory dirty section cleaning.     :::::::::  // [233][232]
          :                                           :::::::::  // [233][232]
          : Completed the flag resetting function of  :::::::::  // [233][232]
          : [ F _ GPUDATA _ CLEANIT _ ALL ]           :::::::::  // [233][232]

    [233] : Wrote VISITING code for dirty hotel memory cells.    // [234][233]
          : Texture Pushes Will Be Done In Video #2_3_6          // [234][233]

    [234] : Added dirty cell visiting code for our ::::::::::::  // [235][234]
          : "ee7 cells" ( Everything Else Cells).  ::::::::::::  // [235][234]
          :                                        ::::::::::::  // [235][234]
          : NEXT : Sub Texture Push                ::::::::::::  // [235][234]
          ::::::::( Partial Texture Update )       ::::::::::::  // [235][234]

    [235] : Sub Texture Push Code Finished.              ::::::  // [236][235]
          : NEXT : Clean up loose ends and fully         ::::::  // [236][235]
          : ---- : implement our cache friendly quad-ish ::::::  // [236][235]
          : ---- : tree used for partial texture updates ::::::  // [236][235]
          : ---- : when setting tiles.                   ::::::  // [236][235]

    [236] : 1 : Created gpu sync tick function           ::::::  // [237][236]
          : 2 : gpu data tick function body wrapped      ::::::  // [237][236]
          :   : with "force update mode" flag.           ::::::  // [237][236]
          : 3 : A lot of misc logging flags to clean up  ::::::  // [237][236]
          :   : the output in the javascript console.    ::::::  // [237][236]

    [237] :::::::::::::::::::::::::::::::::::::::::::::::::::::  // [238][237]
          : No code changes , observing that laying a        ::  // [238][237]
          : HORIZONTAL stroke of tiles works , but a         ::  // [238][237]
          : VERITCAL stroke of tiles has holes in it.        ::  // [238][237]
          :                                                  ::  // [238][237]
          : When turing force update mode off                ::  // [238][237]
          : ( d_gpudata_fum = 0 ) , the problem goes away.   ::  // [238][237]
          :                                                  ::  // [238][237]
          : Looking at all my code, the possible problem     ::  // [238][237]
          : in the order of suspect :                        ::  // [238][237]
          :                                                  ::  // [238][237]
          : 1. texSubImage2D src_oib value is incorrect      ::  // [238][237]
          : 2. texSubImage2D rec_wid value is incorrect      ::  // [238][237]
          : 3. DIRTYIT_DPC for some reason is forgetting     ::  // [238][237]
          :    about it's dirty flag ledger and              ::  // [238][237]
          :    [ wasadir ] never ends up true, meaning       ::  // [238][237]
          :    the dirty rectangle is ALWAYS 1x1 .           ::  // [238][237]
          :                                                  ::  // [238][237]
          : NOTE : Going over tiles that have ALREADY BEEN   ::  // [238][237]
          :      : [ SET / PUT ]appears to occassionally     ::  // [238][237]
          :      : erase them. Making different graphical    ::  // [238][237]
          :      : patterns for differnet tile values will   ::  // [238][237]
          :      : help debug the issue, because then we     ::  // [238][237]
          :      : can differentiate tile types and see      ::  // [238][237]
          :      : when data is getting corrupted if we      ::  // [238][237]
          :      : have a brush setting designed to set      ::  // [238][237]
          :      : down a CHECKERBOARD pattern of            ::  // [238][237]
          :      : tile values.                              ::  // [238][237]
          :      :                                           ::  // [238][237]
          :::::::::::::::::::::::::::::::::::::::::::::::::::::  // [238][237]
          : NEXT ::::::::::::::::::::::::::::::::::::::::::::::  // [238][237]
          :                                                  ::  // [238][237]
          :     Create uint32 bit-packed tiles to be         ::  // [238][237]
          :     used with our auto-tiling method that        ::  // [238][237]
          :     we wrote for the unreal engine grant         ::  // [238][237]
          :     paper. Diagrams explaining how this          ::  // [238][237]
          :     method works should be in the[ AA3 ]repo.    ::  // [238][237]
          :                                                  ::  // [238][237]
          :      NEXT_NEXT : Render Those Patterns           ::  // [238][237]
          : NEXT_NEXT_NEXT : Checker Mode Brush              ::  // [238][237]
          :                                                  ::  // [238][237]
          :::::::::::::::::::::::::::::::::::::::::::::::::::::  // [238][237]

    [238] : DONE :                                         ::::  // [239][238]
          :      : Stubbed in 16 FOURSET designs for       ::::  // [239][238]
          :      : FOURSET auto-tiling algorithm.          ::::  // [239][238]
          :      :                                         ::::  // [239][238]
          : FUTU : Going to implement                      ::::  // [239][238]
          :      : a NON-auto tiling algorithm in the      ::::  // [239][238]
          :      : shader using some , but not all of the  ::::  // [239][238]
          :      : fourset data. ( Tile always renders as  ::::  // [239][238]
          :      : touching nothing tile ) And then maybe  ::::  // [239][238]
          :      : implement full auto tiling later.       ::::  // [239][238]

    [239] : Stubbed In Fourset System                   :::::::  // [240][239]
          : Stubbed In Fourset Lookup Table             :::::::  // [240][239]
          : NEXT : Stub In Population Of Fourset L.U.T. :::::::  // [240][239]

    [240] : 1 : Stubbed In Initialization Logic For ARTDUDE      // [241][240]
          : 2 : Stubbed In [ udesign ]==>[ u25clus ]Function.    // [275][REF][241][240]

    [241] : DONE[ F _ FOURSET _ UDESIGN _ F16 _____ U25CLUS ]    // [275][REF][242][241]
          :  AKA[             ( UDESIGN , F16 )==>( U25CLUS )    // [275][REF][242][241]

    [242] : Created Test Data For ArtDude FourSet                // [243][242]
          : ( udesign ) ==> ( binclus )                          // [243][242]

    [243] : Added Basic Test Loop , but missing extraction       // [244][243]
          : logic to get our "got_binclus" to compare            // [244][243]
          : against "exp_binclus"                                // [244][243]

    [244] : Unit test for[ ARTDUDE ]as written would have  ::::  // [245][244]
          : corrupted our data , not only causing tests    ::::  // [245][244]
          : to fail, but also causing renders to look      ::::  // [245][244]
          : wrong.                                         ::::  // [245][244]
          :                                                ::::  // [245][244]
          : HACKISH_SOLUTION : Instead of increasing       ::::  // [245][244]
          : [ u25clus ]array to accomidate extra data,     ::::  // [275][REF][245][244]
          : override ZERO TILE values with test patterns   ::::  // [245][244]
          : if[ c_artdude_utm ]is turned on.               ::::  // [245][244]

    [245] : Finished Function :---------------------:   :::::::  // [246][245]
          :                                         :   :::::::  // [246][245]
          : (LA3,V16,ALL_U25CLUS)==>( ONE_BINCLUS ) :   :::::::  // [275][REF][246][245]
          :-----------------------------------------:   :::::::  // [246][245]

    [246] : 1 : Finished "Zero Tile Override" (ZTO).             // [247][246]
          : 2 : Added Extra Assertion Code Because Tests         // [247][246]
          : - : are failing.                                     // [247][246]

    [247] : Added logging to print out human readable version    // [248][247]
          : of[ binclus ]as a big string grid of "X" and "_".    // [248][247]
          : Discovered our TEST DATA seems slightly              // [248][247]
          : corrupted. I do not know why.                        // [248][247]

    [248] : I was the idiot. The u32 value I got out of the :::  // [249][248]
          : calculator gave me a hex digit with LESS THAN   :::  // [249][248]
          : 8 nybles, so I zero padded it. But I zero       :::  // [249][248]
          : padded on the RIGHT when I should have been     :::  // [249][248]
          : zero padding on the LEFT. Zero padding on the   :::  // [249][248]
          : wrong side led to a BIT SHIFT. Hence why the    :::  // [249][248]
          : printout of the expected value had the correct  :::  // [249][248]
          : number of set buts, but had them in the         :::  // [249][248]
          : WRONG LOCATIONS.                                :::  // [249][248]

    [249] : Stubbed In The Rough Pipeline For     :::::::::::::  // [250][249]
          : The Pre-Processing Of Shader Strings. :::::::::::::  // [250][249]  

    [250] : Injecting large uint32 array into shader ::::::::::  // [251][250]
          : string using pre-processing functions.   ::::::::::  // [251][250]

    [251] : 1 : Created Shader Macros Code Injection Source      // [252][251]
          : 2 : Created Uniform Vars  Code Injection Source      // [252][251]
          : 3 : Added a bit of code to shader # 6.               // [252][251]
          ( SEE[ d _ artgirl _ ( s m a c r o s ) ] )             // [252][251]
          ( SEE[ d _ artgirl _ ( u n i f o r m ) ] )             // [252][251]

    [252] Modifed : ShaderSourceFragment # 6 With : :::::::::::  // [253][252]
          : 1 ::::: Added Letter Boxing             :::::::::::  // [253][252]
          : 2 ::::: Added Local Percentage Coords.  :::::::::::  // [253][252]

    [253] : 1 : Added Constants For Geometric Element Types      // [254][253]
          : 2 : Added Constants For Geometric Element Sizes      // [254][253]
          : 3 : Added Lookup Table That Takes Geometric          // [254][253]
          :   : Element Type And Spits Out Geometric             // [254][253]
          :   : Element Size ( in discrete units ).              // [254][253]
          : 4 : Lookup tables exists on GPU and CPU side.        // [254][253]
          : 5 : Added "shader lookup table" section.             // [254][253]
          : 6 : Calculated[ dug ]in our shader #6.               // [254][253]
          :   : DUG == Discrete_Unit_Global (coord)              // [254][253]

    [254] : Shader #6 now renders shilloutte  :::::::::::::::::  // [255][254]
          : of it's 3x3 grid of levelpacks.   :::::::::::::::::  // [255][254]

    [255] : I have discovered "Binary Smash Coords"(BSC).  ::::  // [256][255]
          : I am sure it's nothing new to math maticians,  ::::  // [256][255]
          : but it's new to me and I am calling the        ::::  // [256][255]
          : concept "Binary_Smash_Coords".                 ::::  // [256][255]
          : -KanjiCoder : 2022_09_09 , 12:44AM             ::::  // [256][255]

    [256] : Calculated the internal discrete           ::::::::  // [257][256]
          : ( units / coordinates ) for all of the     ::::::::  // [257][256]
          : different tile sizes that current sample   ::::::::  // [257][256]
          : coord is on.                               ::::::::  // [257][256]
          :                                            ::::::::  // [257][256]
          : The goal is to create a :                  ::::::::  // [257][256]
          : "Bathroom Tile Anti-Grid" that will signal ::::::::  // [257][256]
          : to player an "empty NON-void" space.       ::::::::  // [257][256]
          :                                            ::::::::  // [257][256]
          : ( An empty space where tiles can exist ).  ::::::::  // [257][256]
          :                                                 :::  // [257][256]
          : This is IMPORTANT to know. Because jumping into :::  // [257][256]
          : a large EMPTY ROOM is __SAFE__. Jumping into    :::  // [257][256]
          : the void will draw you into the abyss and       :::  // [257][256]
          : kill you.                                       :::  // [257][256]
          :                                                 :::  // [257][256]
          : http://www.newkabbalah.com/einsof.html          :::  // [257][256]
          : https://fma.fandom.com/wiki/Eye_of_God          :::  // [257][256]
          :                                                 :::  // [257][256]
          : NOTE : I still like the idea of having bombs    :::  // [257][256]
          :      : that create tiles rather than destroy    :::  // [257][256]
          :      : tiles. But we are a long time away       :::  // [257][256]
          :      : from having to think about if we         :::  // [257][256]
          :      : should implement that or not.            :::  // [257][256]

    [257] : 1 : LOD Coloring Of Tile Internal Coordinates   :::  // [258][257]
          :   : to create our "Anti-Grid" / "Lego-Grid"     :::  // [258][257]
          :   : for where tiles can be placed.              :::  // [258][257]
          :   :                                             :::  // [258][257]
          : 2 : Selection of correct LOD tile internal      :::  // [258][257]
          :   : coordinates based on the density of         :::  // [258][257]
          :   : discrete units within one pixel on screen.  :::  // [258][257]

    [258] : We have a nice clean grid on which to start   :::::  // [259][258]
          : laying tiles now. The grid can signify        :::::  // [259][258]
          : a space with "No tiles" without being         :::::  // [259][258]
          : confused for "Void Space" which can kill you. :::::  // [259][258]

    [259] : Stubbing in some of the logic for auto-tile          // [260][259]
          : rendering of the GEOMETRY LAYER ONLY in              // [260][259]
          : shader_source_fragment_six ( ssf _ 006 )             // [260][259]
          : We have a bug in our texture sample call,            // [260][259]
          : so commented out that line of code for now till      // [260][259]
          : I figure out what is wrong.                          // [260][259]

    [260] : Fixed bug in art girl macro section.      :::::::::  // [261][260]
          : [IV2,IV3,IV4] were float vectors instead  :::::::::  // [261][260]
          : of integer vectors.                       :::::::::  // [261][260]
          : FLOATS ===========[ vec2 | vec3 | vec4 ]  :::::::::  // [261][260]
          : SIGNED_INTEGERS ==[ivec2 |ivec3 |ivec4 ]  :::::::::  // [261][260]

    [261] : Collected adjacent geometry tile values ,  ::::::::  // [262][261]
          : ready to calculate touching value for      ::::::::  // [262][261]
          : auto tiling.                               ::::::::  // [262][261]

    [262] : 1 : Blocked in geometry tile rendering.  ::::::::::  // [263][262]
          : 2 : Fixed Mal-Alignment Of Tile Grid.    ::::::::::  // [263][262]
          :   : SEE_TAG[ FIX_004 ]                   ::::::::::  // [263][262]
          : 3 : Macros to swap between BACK_TO_FRONT ::::::::::  // [263][262]
          :   : and FRONT_TO_BACK rendering.         ::::::::::  // [263][262]
          :   : ( IMF_BTF & IMF_FTB )                ::::::::::  // [263][262]

    [263] : Calculating the "touching value" of tiles so         // [264][263]
          : we can implement auto tiling. No visual changes      // [264][263]
          : since the last [ delta/video ].                      // [264][263]

    [264] : Stubbed in more auto tiling code. We should   :::::  // [265][264]
          : now be rendering tiles with dark green        :::::  // [265][264]
          : edges. But __NO_AUTO_TILE_VISUALS_YET__       :::::  // [265][264]
          :                                               :::::  // [265][264]
          : Everything is "Hermit_Auto_Tiling" visually.  :::::  // [265][264]
          :                                               :::::  // [265][264]
          : NEXT : #2_6_5 : Fully implement rudimentary   :::::  // [265][264]
          :               : auto tile shading.            :::::  // [265][264]

    [265] : Rudimentary Auto Tiling Fully Implemented.  :::::::  // [266][265]
          : NEXT : Finish_lookup_tables for[ fourset ]  :::::::  // [266][265]
          :      : style auto-tiling.                   :::::::  // [266][265]

    [266] : Added Color Scheme For All Geometry Tiles.     ::::  // [267][266]
          : BOMB & FADA tiles just have placeholder grey   ::::  // [267][266]
          : in them. Because right now we are focusing     ::::  // [267][266]
          : ONLY ON GEOMETRY_TILE(GEOM_TILE,geo)Rendering. ::::  // [267][266]

    [267] : Tile's render with configured body and edge :::::::  // [268][267]
          : colors in both the SIMPLE and FOURSET       :::::::  // [268][267]
          : rendering modes.                            :::::::  // [268][267]
          :                                             :::::::  // [268][267]
          : Simple  ===> ( USE_ATF <= 0 )               :::::::  // [268][267]
          : Fourset ===> ( USE_ATF >= 1 )               :::::::  // [268][267]
          :                                             :::::::  // [268][267]
          : USE_ATF : USE____AutoTilingFourset          :::::::  // [268][267]

    [268] : 1 : Square bracket keys to change tile value.        // [269][268]
          : 2 : Tweeked the [geometry tile][color pallet.]       // [269][268]

    [269] : Fourset Slicing And Remixing      :::::::::::::::::  // [270][269]
          : Tables Have been finished.        :::::::::::::::::  // [270][269]
          :                                   :::::::::::::::::  // [270][269]
          : SEE : https://imgur.com/a/zHKteUO :::::::::::::::::  // [270][269]

    [270] : Renderer is now picking the correct              ::  // [271][270]
          : 5X5 graphic encoded in a U32 value.              ::  // [271][270]
          :                                                  ::  // [271][270]
          : NEXT : 1 : Take the QUAD the sample point is     ::  // [271][270]
          :          : and divide it into 5THS on X & Y.     ::  // [271][270]
          :          : Figure out which of the 25 5TH_CELLS  ::  // [271][270]
          :          : sample point is in, and shift out     ::  // [271][270]
          :          : the associated bit.                   ::  // [271][270]

    [271] : Before we get the correct binary-pixel-bit   ::::::  // [272][271]
          : of our u_5x5 graphic, we need a lookup table ::::::  // [272][271]
          : to help us partition discrete internal       ::::::  // [272][271]
          : local coords of current tile into cells.     ::::::  // [272][271]

    [272] : We are rendering[ u_5x5 ]bitmaps. But they look :::  // [273][272]
          : scrambled. This is why we added[ USE_RIN ].     :::  // [273][272]
          : Because we want to layer on transformations     :::  // [273][272]
          : ONE AT A TIME BECAUSE GOD HELP YOU IF YOU       :::  // [273][272]
          : END UP WITH TWO BUGS COMPOUNDED ON TOP OF       :::  // [273][272]
          : EACH OTHER. ( I am an atheist by the way )      :::  // [273][272]
          :             ( so it's even worse because )      :::  // [273][272]
          :             ( god will not help you.     )      :::  // [273][272]

    [273] : Auto tiles now render as                       ::::  // [274][273]
          : 10x10 binary pixel graphics.                   ::::  // [274][273]
          :                                                ::::  // [274][273]
          : NEXT : Fix[ Fourset_Remix_Table ]              ::::  // [274][273]
          :      : (A few things look wrong, but mapping)  ::::  // [274][273]
          :      : (Is mostly correct)                     ::::  // [274][273]

    [274] : Fixed Fourset Remix Table. Two entries      :::::::  // [275][274]
          : were inverted. They are fixed now.          :::::::  // [275][274]
          : The engine is starting to look cool. After  :::::::  // [275][274]
          : 2_7_4 videos I am now starting to get       :::::::  // [275][274]
          : pretty excited about this.                  :::::::  // [275][274]

    [275] :::::::::::::::::::::::::::::::::::::::::::::::::::::  // [276][275]
    ||                                                       ::  // [276][275]
    ||  A long overdue refactoring of names for better       ::  // [276][275]
    ||  consistency. A problem well defined is a problem     ::  // [276][275]
    ||  half solved. And consistent variable names are       ::  // [276][275]
    ||  key to clearly defining a problem.                   ::  // [276][275]
    ||                                                       ::  // [276][275]
    ||  REFACTORING[ d_tou_s4x ] ===> [ d_tou_f4x ]DONE      ::  // [276][275]
    ||  REFACTORING[ d_tou_s4y ] ===> [ d_tou_f4y ]DONE      ::  // [276][275]
    ||  REFACTORING[       s4x ] ===> [       f4x ]DONE      ::  // [276][275]
    ||  REFACTORING[       s4y ] ===> [       f4y ]DONE      ::  // [276][275]
    ||  REFACTORING[ s4i ] ===> [ f16 ] DONE (no changes)    ::  // [276][275]
    ||  REFACTORING[ fx4 ] ===> [ f4x ] DONE                 ::  // [276][275]
    ||  REFACTORING[ fy4 ] ===> [ f4y ] DONE                 ::  // [276][275]
    ||  REFACTORING[ fi4 ] ===> [ f16 ] DONE (no changes)    ::  // [276][275]
    ||                                                       ::  // [276][275]
    ||  REFACTOR_FROM[ d_fourset_la3_v16_f16_binfour ] DONE  ::  // [276][275]
    ||  REFACTOR___TO[ d_fourset_la3_v16_f16_u25clus ] DONE  ::  // [276][275]
    ||                                                       ::  // [276][275]
    ||  REFACTOR_FROM[ i_binfour   ] DONE                    ::  // [276][275]
    ||  REFACTOR___TO[ i_u25clus   ] DONE                    ::  // [276][275]
    ||                                                       ::  // [276][275]
    ||  REFACTOR_FROM[ all_binfour ] DONE                    ::  // [276][275]
    ||  REFACTOR___TO[ all_u25clus ] DONE                    ::  // [276][275]
    ||                                                       ::  // [276][275]
    ||  REFACTOR_FROM[ ALL_BINFOUR ] DONE                    ::  // [276][275]
    ||  REFACTOR___TO[ ALL_U25CLUS ] DONE                    ::  // [276][275]
    ||                                                       ::  // [276][275]
    ||  REFACTOR[ binfour ] ===> [ u25clus ]DONE             ::  // [276][275]
    ||                                                       ::  // [276][275]
    ||  LOOK_FOR_MISTAKE[ u25clust ]===>[ u25clus ]DONE      ::  // [276][275]
    ||  LOOK_FOR_MISTAKE[ binclust ]===>[ u25clus ]DONE      ::  // [276][275]
    :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  // [276][275]

    [276] : Linear Ring Mapping To Create Square Bulge   ::::::  // [277][276]
          : has been added. 4 hours and change of work.  ::::::  // [277][276]
          : most was figuring out variable names.        ::::::  // [277][276]
          : But some of it was the details. Like having  ::::::  // [277][276]
          : 3-mappings so we can composite them together ::::::  // [277][276]
          : or animate them if we want.                  ::::::  // [277][276]
          :                                              ::::::  // [277][276]
          : ALSO : Added documentation to this post :    ::::::  // [277][276]
          : https://imgur.com/a/zHKteUO                  ::::::  // [277][276]

    [277] : 1 : Added : ( te7 )===>( d34 ) lookup table. ::::::  // [278][277]
          : 2 : Turned On [ USE _ RIN ] feature , shader ::::::  // [278][277]
          :   : six is __NOT__ rendering tiles now       ::::::  // [278][277]
          :   : because we need to fill out the GLSL     ::::::  // [278][277]
          :   : body for the [ USE _ RIN ] feature.      ::::::  // [278][277]
          :   :                                          ::::::  // [278][277]
          : NEXT : Ring Map Rendering Shader Code.   ::::::::::  // [278][277]

    [278] : :::::::::::::::::::::::::::::::::::::::::::::::::::  // [279][278]
          : DONE:::::::::::::::::::::::::::::::::::::::::::::::  // [279][278]
          : Shader hard coded for "bulging in" mode.   ::::::::  // [279][278]
          :                                            ::::::::  // [279][278]
          : NOTE ::::::::::::::::::::::::::::::::::::::::::::::  // [279][278]
          : REMEMBER!!! This is on a "per-tile" basis. ::::::::  // [279][278]
          : So when you put down a 2x2 cluster of      ::::::::  // [279][278]
          : the same tile on the tilemap, the OVERALL  ::::::::  // [279][278]
          : EMERGENT AUTO TILED PATTERN IS NOT GOING   ::::::::  // [279][278]
          : TO BULGE. _NOT_GOING_TO_BULGE_             ::::::::  // [279][278]
          :                                            ::::::::  // [279][278]
          : SEE[ _USE_RIN_IS_NOT_META_BULGE_ ]         ::::::::  // [279][278]
          : :::::::::::::::::::::::::::::::::::::::::::::::::::  // [279][278]

    [279] : Animated the bulging effect on tiles for fun. :::::  // [280][279]

    [280] : Composited :...:                     ::::::::::::::  // [281][280]
          : :::::::::::: 1 : Bluge Out ( base image      ) ::::  // [281][280]
          : :::::::::::: 2 : No Bulge  ( Darken Layer #1 ) ::::  // [281][280]
          : :::::::::::: 3 : Bluge In  ( Darken Layer #2 ) ::::  // [281][280]
          :                                      ::::::::::::::  // [281][280]
          : All on top of each other. Used       ::::::::::::::  // [281][280]
          : "BulgeOut" for base colors.          ::::::::::::::  // [281][280]
          : Resultant tiles have an interesting  ::::::::::::::  // [281][280]
          : "inner drop shadow" look to them.    ::::::::::::::  // [281][280]
          :                                      ::::::::::::::  // [281][280]
          : NEXT: Shader Optimizations.          ::::::::::::::  // [281][280]

    [281] : Formalized constants for memory cells    ::::::::::  // [282][281]
          : that will store pre-rendered auto tiles. ::::::::::  // [282][281]
          :                                          ::::::::::  // [282][281]
          : [ c_g64 , c_b64 , c_f64 , c_d64 ]        ::::::::::  // [282][281]
          : @VIDNAME@[ "Simpler Auto Tile Shader - Part 1" ]     // [282][281]
          : @VID_URL@[ XXXX_SET_HERE_WHEN_UPLOADED_XXXXXXX ]     // [282][281]

    [282] : Refactoring/Organizing Our Thoughts.                 // [283][282]
          :   :                                                  // [283][282]
          : 1 : Fragment Shader Rendering Modes Enums Cleanup.   // [283][282]
          : 2 : Shader Seven(7) Now Uses Mode[ fsm _ per ].      // [283][282]
          : 3 : Updated Our Super Secret Shader Agenda           // [283][282]
          : 4 : "CTRL+F" section now deprecated. Use TagSec.     // [283][282]
          :   :                                                  // [283][282]
          : NEXT_1X : TODO005                                    // [283][282]
          : NEXT_2X : Draw Optimized Empty Tile Space Grid       // [283][282]
          : NEXT_3X : Active Tile Highlight. USE_ATH             // [283][282]
          : NEXT_4X : Brush Value Symbol.    USE_BVS             // [283][282]

    [283]::::::::::::::::::::::::::::::::::::::::::::::::::::::  // [284][283][--------]
    ::::                                                :::::::  // [284][283][--------]
    ::::    A HORRIBLE HORRIBLE CASCADE OF REFACTORING. :::::::  // [284][283][--------]
    ::::    DATE[ 2022_09_19 , 537PM ]                  :::::::  // [284][283][--------]
    ::::    -KanjiCoder                                 :::::::  // [284][283][--------]
    ::::                                                :::::::  // [284][283][--------]
    DONE003 : "AM4" Auto_Tile_Mask needs to be 4 bits.  :::::::  // [284][283][REF][270]
    ::::                                                :::::::  // [284][283][MOV][270]
    ::::       SYM[  L_X  L_Y  M_X  M_Y ]               :::::::  // [284][283][MOV][270]
    ::::       BIN[  _1_  _1_  _1_  _1_ ]               :::::::  // [284][283][MOV][270]
    ::::                                                :::::::  // [284][283][MOV][270]
    ::::       @L_X@ : Latch  X                         :::::::  // [284][283][MOV][270]
    ::::       @L_Y@ : Latch  Y                         :::::::  // [284][283][MOV][270]
    ::::       @M_X@ : Mirror X                         :::::::  // [284][283][MOV][270]
    ::::       @M_Y@ : Mirror Y                         :::::::  // [284][283][MOV][270]
    ::::                                 ::::::::::::::::::::::  // [284][283][MOV][282]
    ::::       #_ITS_FUCKING_HERE_2022_# ::::::::::::::::::::::  // [284][283][MOV][282]
    ::::                                                    :::  // [284][-------------]
    DONE005 : REFACTOR[ USE_ATM ]===>[ USE_AM4 ] (DONE)     :::  // [284][283][MOV][282]
    ::::    : REFACTOR[     ATM ]===>[     AM4 ] (DONE)     :::  // [284][283][--------]
    ::::    : REFACTOR[   A_T_M ]===>[   A_M_4 ] (DONE)     :::  // [284][283][--------]
    ::::    : REFACTOR[   u_v64 ]===>[   u_vff ] (DONE)     :::  // [284][283][--------]
    ::::    : REFACTOR[   u_atm ]===>[   u_am4 ] (DONE)     :::  // [284][283][--------]
    ::::    : REFACTOR[   u_tou ]===>[   u_to4 ] (DONE)     :::  // [284][283][--------]
    ::::                                                    :::  // [284][283][--------]
    ::::    : REFACTOR[ d_tou_f4x ]=>[ d_to4_f4x ](DONE)    :::  // [284][283][--------]
    ::::    : REFACTOR[ d_tou_f4y ]=>[ d_to4_f4y ](DONE)    :::  // [284][283][--------]
    ::::                                                    :::  // [284][283][--------]
    ::::    : REFACTOR[ c_tou_lef ]===>[ c_to4_lef ](DONE)  :::  // [284][283][--------]
    ::::    : REFACTOR[ c_tou_rig ]===>[ c_to4_rig ](DONE)  :::  // [284][283][--------]
    ::::    : REFACTOR[ c_tou_top ]===>[ c_to4_top ](DONE)  :::  // [284][283][--------]
    ::::    : REFACTOR[ c_tou_bot ]===>[ c_to4_bot ](DONE)  :::  // [284][283][--------]
    ::::                                                    :::  // [284][283][--------]
    ::::    : REFACTOR [ c_bit_hor ]===>[ c_am4_0lx ](DONE) :::  // [284][283][--------]
    ::::    : REFACTOR [ c_bit_ver ]===>[ c_am4_1ly ](DONE) :::  // [284][283][--------]
    ::::    :     MAKE .................[ c_am4_2mx ](DONE) :::  // [284][283][--------]
    ::::    :     MAKE .................[ c_am4_3my ](DONE) :::  // [284][283][--------]
    ::::                                                    :::  // [284][283][--------]
    ::::    : REFACTOR [ c_notouch_x ]==>[ c_to4_del_x ]    :::  // [284][283][--------]
    ::::    : REFACTOR [ c_notouch_y ]==>[ c_to4_del_y ]    :::  // [284][283][--------]
    ::::                                                    :::  // [284][283][--------]
    :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  // [284][283][--------]

    [284] : Started work on shader #7 ,         :::::::::::::::  // [285][284]
          : an optimized re-write of shader #6. :::::::::::::::  // [285][284]
          : Calculated "dug" and out of bounds  :::::::::::::::  // [285][284]
          : bit for letter boxing region.       :::::::::::::::  // [285][284]

    [285] : Took a shower, thought about things for an   ::::::  // [286][285]
          : hour or so... Decided on a concept called    ::::::  // [286][285]
          : "AGOLA". ( AGOLA == A GOLAng (set) )         ::::::  // [286][285]
          :                                              ::::::  // [286][285]
          : Going to pre-render[ AAC2020 ]style graphics ::::::  // [286][285]
          : into old GoLang project auto tile set, which ::::::  // [286][285]
          : is just a FLIXEL-STYLE 16-subtile auto tile  ::::::  // [286][285]
          : set laid out into a 4x4 sub-tile             ::::::  // [286][285]
          : artist-friendly grid instead of a long       ::::::  // [286][285]
          : 1x16 sub-tile strip.                         ::::::  // [286][285]
          :                                              ::::::  // [286][285]
          : Unscripted Video Time : 3 Hours 45 Minutes   ::::::  // [286][285]
          :  UVT[ 3H_30M ]( Rounded to nearest 30min )   ::::::  // [286][285]
          : @UVT@=== Unscripted_Video_Time               ::::::  // [286][285]
          :::::::::::::::::::::::::::::::::::::::::::::::::::::  // [286][285]

    [286] : Touching Value To Agola_Set X-Y Cell Coord ::::::::  // [287][286]
          : ( to4 )===>( a4x || a4y )                  ::::::::  // [287][286]

    [287] : Added "udesign"(s) for "artgola".     :::::::::::::  // [288][287]
          : These udesign(s) are converted into   :::::::::::::  // [288][287]
          : "GolaSet"(s) instead of "FourSet"(s). :::::::::::::  // [288][287]

    [288] : Finalized[ artgola ]data layouts.        ::::::::::  // [289][288]
          : NEXT : Stub in decal system and some of  ::::::::::  // [289][288]
          :      : it's data before you forget the   ::::::::::  // [289][288]
          :      : stuff you wrote down at hospital. ::::::::::  // [289][288]
          :      :                                         ::::  // [289][288]
          :      : Yes, we are a bit "all over the place". ::::  // [289][288]
          :      : but it isn't a "lack of focus" it is    ::::  // [289][288]
          :      : a giant barrage of "clear vision"       ::::  // [289][288]
          :      : where my typing speed literally cannot  ::::  // [289][288]
          :      : keep up with the speed at which my      ::::  // [289][288]
          :      : vision develops.                        ::::  // [289][288]

    [289] : Stubbed In "ARTDECA" system. That will    :::::::::  // [290][289]
          : generate 192 decals to be overlayed       :::::::::  // [290][289]
          : over the tilemap.                         :::::::::  // [290][289]
          :                                           :::::::::  // [290][289]
          : Decals should only ever be stamped at     :::::::::  // [290][289]
          : the[ c_du0 ]level. This helps re-enforce  :::::::::  // [290][289]
          : proper senses of scale.                   :::::::::  // [290][289]

    [290] : Stubbed In Multi-Step-Initializer( MSI )vars. :::::  // [291][290]
                                                             ::  // [291][290]
        AGENDA_2022_09_23 :--------------------------------: ::  // [291][290]
        :                                                  : ::  // [291][290]
        :   1. Stub in MSI Function Code                   : ::  // [291][290]
        :   2. ARTGOLA - Non fractal graphics render.      : ::  // [291][290]
        :   3. Get Shader #7 displaying ARTGOLA graphics   : ::  // [291][290]
        :   4. ARTGOLA - Fractal graphics render           : ::  // [291][290]
        :   5. Make sure shader #7 is still correct.       : ::  // [291][290]
        :   6. ARTDECA - Non fractal graphics render.      : ::  // [291][290]
        :   7. Get Shader #7 displaying ARTDECA graphics   : ::  // [291][290]
        :   8. ARTDECA - Fractal graphics render.          : ::  // [291][290]
        :   9. Make sure shader #7 is still correct.       : ::  // [291][290]
        :  10. ARE[ USE_ATH ]AND[ USE_BVS ]Done ?          : ::  // [291][290]
        :      If so, @SATS_SUB_SERIES@ is done.           : ::  // [291][290]
        :--------------------------------------------------: ::  // [291][290]
                                                             ::  // [291][290]
    :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  // [291][290]

    [291] : MSI Code Stubbed In But Not Finished. :::::::::::::  // [292][291]

    [292] : 1. Stubbed in GOLA512 system. :::::::::::::::::::::  // [293][292]
          : 2. Refactored Some AgolaSet Variable Names. :::::::  // [293][292]
          :    ( AgolaSet === Informal Name For "GOLASET"    )   // [293][292]
          :    ( AgolaSet === "A GO-LAng SET" But 8 letters. )   // [293][292]
          :    ( WE DON'T USE 8 LETTER IDENTIFIERS !!!!!!!!! )   // [293][292]

    [293] : GOLA512 patterns created.                            // [294][293]

    [294] : 1 : Added lookup tables to help with           ::::  // [295][294]
          :   : rasterization of GOLA512 graphics.         ::::  // [295][294]
          : 2 : Stubbed in GOLA512 rasterization function  ::::  // [295][294]
          :   : and added a very small bit of body code.   ::::  // [295][294]


    [295] : 1 : Core rasterization code for               :::::  // [296][295]
          :   : GOLA512 is __PROBABLY__ done.             :::::  // [296][295]
          :NEXT_1X: Figure out call site for rasterizing. :::::  // [296][295]
          :NEXT_2X : Stub in "MIPWASP" system.            :::::  // [296][295]

    [296] : 1 : Stubbed in MIPWASP mip-map-maker system. ::::::  // [297][296]
          : 2 : Added call-site to MIPWASP from GOLA512. ::::::  // [297][296]

    [297] : 1 : Finished Most Of Main MIPWASP function. :::::::  // [298][297]
          : 2 : Helper Func Call Site In MIPWASP found. :::::::  // [298][297]
          : 3 : Lookup table: ( me9 )===>( lat )  made. :::::::  // [298][297]
          : 4 : Lookup table: ( me9 )===>( dia )  made. :::::::  // [298][297]
          : NEXT : Bilinear Down-Scaling Helper Function         // [298][297]
          :      : To Be Added To MIPWASP.                       // [298][297]

    [298] : 1 : Began work on pixel downscaling function. :::::  // [299][298]
          :   : NOT FINISHED WITH IT YET.                 :::::  // [299][298]
          : 2 : Created "Assert Power Of Two" helper func.:::::  // [299][298]
          :   :         "Assert Power Of 2  " :::::::::::::::::  // [299][298]

    [299] : 1 : Finished Downscaling Function            ::::::  // [300][299]
          : 2 : BugFix , searchfor[ [299][BUG] ]To Find. ::::::  // [300][299]


    [300] : Videos #3_0_1 to #4_0_0 are in playlist #4       ::  // [301][300]
          : Kinda like how "2000s" === "21st century"        ::  // [301][300]
          : 0_0_0 -to- 1_0_0 === playlist #1                 ::  // [301][300]
          : 1_0_1 -to- 2_0_0 === playlist #2                 ::  // [301][300]
          : 2_0_1 -to- 3_0_0 === playlist #3                 ::  // [301][300]
          : 3_0_1 -to- 4_0_0 === playlist #4 <--YourNextStop ::  // [301][300]

    [301] : Mutli-Step-Initialization for                ::::::  // [302][301]
          : ARTGOLA placeholder graphics is finished.    ::::::  // [302][301]
          : The lag at beginning of game is god aweful   ::::::  // [302][301]
          : 3-to-5 FPS , but the general concept is      ::::::  // [302][301]
          : working. We could refine this with a         ::::::  // [302][301]
          : "ReEntrant" state object to make the code    ::::::  // [302][301]
          : more granular in the future. Then smack on   ::::::  // [302][301]
          : a low-bandwidth loading screen to seal the   ::::::  // [302][301]
          : deal.                                        ::::::  // [302][301]

    [302] : ARTDECA low quality initialization code done.   :::  // [303][302]
          : ARTDECA right now is just a cut+paste job of    :::  // [303][302]
          : ARTGOLA , but only in charge of decal patterns. :::  // [303][302]
          :                                                 :::  // [303][302]
          : ARTGOLA : Rasterized[ BOMB , GEOM , FADA ]      :::  // [303][302]
          : ARTDECA : Rasterizes[ DECA (DECALS) ONLY ]      :::  // [303][302]

    [303] : Problem_Well_Stated_Is_A_Problem_Half_Solved_002 ::  // [304][303]
          :                                                  ::  // [304][303]
          : We laid down an index of variables I think I     ::  // [304][303]
          : will need in shader #7 and made some diagrams    ::  // [304][303]
          : for them. This leads me to realize that we       ::  // [304][303]
          : have mip-map levels that are USELESS...          ::  // [304][303]
          : SEE[ #_WHICH_ME9_LEVELS_ARE_USELESS_# ]          ::  // [304][303]
          :                                                  ::  // [304][303]
          : THINK_ABOUT : #_UN_USABLE_ME9_PROBLEM_#          ::  // [304][303]
          : 1. How does it change variable names  ?          ::  // [304][303]
          : 2. Is pre-existing math correct still ?          ::  // [304][303]

    [304] : 1 : Stubbed in front to back                :::::::  // [305][304]
          :---: rendering loop for shader #7.           :::::::  // [305][304]
          :---:                                         :::::::  // [305][304]
          : 2 : Created ( i27 )===>( te7 ) L.U.T.       :::::::  // [305][304]
          : 3 : Created ( i27 )===>( la3 ) L.U.T.       :::::::  // [305][304]
          : 4 : Created[ FRAGOPTS ]Include_File         :::::::  // [305][304]
          : 5 : Injected Lookup Tables Into[ FRAGOPTS ] :::::::  // [305][304]

    [305]: 1 : Calculated [ HOTEL / LEVELPACK ] Coord   :::::::  // [306][305]
         : 2 : Calculated Room Render Coord             :::::::  // [306][305]
         : 3 : Determining if room is void or not.      :::::::  // [306][305]
         : 4 : Early exit red-color on void room.       :::::::  // [306][305]
         : 5 : Optimization Macro #2                    :::::::  // [306][305]
                                                        :::::::  // [306][305]
         ..... Fuck... This is too much stuff ....      :::::::  // [306][305]
         ..... Lets hope short video isn't a  ....      :::::::  // [306][305]
         ..... pain in my ass to finish ..........      :::::::  // [306][305]
                                                        :::::::  // [306][305]
    NEXT_N1 : Calculated Room Data Layout Coord         :::::::  // [306][305]
    NEXT_N2 : Dynamically Inject[ d_g25_rxy ]           :::::::  // [306][305]
    NEXT_N3 : Use[ d_g25_rxy ]WITH[ u_ro4 ]CALCS        :::::::  // [306][305]
    NEXT_N4 : VoidMimic data. "vodmime"                 :::::::  // [306][305]
            : When in a void cell, steal data from      :::::::  // [306][305]
            : adjacent non-void rooms to seed the       :::::::  // [306][305]
            : chaotic design in "the-void".             :::::::  // [306][305]

    [306] :                                               :::::  // [307][306]
        1. Shader #5 Uses Re-usable lookup_table file     :::::  // [307][306]
        2. [ d _ ( te7 )==>( dia ) ]REMOVED_FROM_SHADER_5 :::::  // [307][306]
        3. [ d _ ( te7 )==>( lat ) ]REMOVED_FROM_SHADER_5 :::::  // [307][306]
        4. [ d _ ( te7 )==>( dun ) ]REMOVED_FROM_SHADER_5 :::::  // [307][306]
        5. [ d _ ( g25 )==>( vod ) ]REMOVED_FROM_SHADER_5 :::::  // [307][306]
        6. [ d _ ( g25 )==>( r4x ) ]INJECTED_INTO_SHADLUT :::::  // [307][306]
        7. [ d _ ( g25 )==>( r4y ) ]INJECTED_INTO_SHADLUT :::::  // [307][306]

    [307] : Created Optimized Bitpacked Lookup Tables :::::::::  // [308][307]
          : and created test code to make sure the    :::::::::  // [308][307]
          : hex values we calculated from binary      :::::::::  // [308][307]
          : string are correct.                       :::::::::  // [308][307]

    [308] : Crazy Crazy Bit Packed Optimizations.                // [309][308]

    [309] : Added @FLUFFY_LOOKUP_TABLES@ :  :::::::::::::::::::  // [310][309]
          : 1 : [ d _ ( te7 )===>( lat ) ]  :::::::::::::::::::  // [310][309]
          : 2 : [ d _ ( te7 )===>( dia ) ]  :::::::::::::::::::  // [310][309]

    [310] : The fucking beats are sick. I am a millenial,    ::  // [311][310]
          : I don't know zoomer slang. All my techno songs   ::  // [311][310]
          : are 10 years old.                                ::  // [311][310]
          : https://www.youtube.com/watch?v=shTUtO_MOIM      ::  // [311][310]
          : @IDEA@ : Sick Beats section of this source code. ::  // [311][310]
          :                                                  ::  // [311][310]
          : What did we do here?                             ::  // [311][310]
          :                                                  ::  // [311][310]
          : Calculated discrete unit size of current         ::  // [311][310]
          : tile in focus in our "i21 loop". In both         ::  // [311][310]
          : non-optimized lookup table method and            ::  // [311][310]
          : bit-shifted power of 2 multiplication method.    ::  // [311][310]

    [311] : 1 : Figured out current local tile coordinate. ::::  // [312][311]
          : 2 : Fetched Tile Value From Tilemap.           ::::  // [312][311]
          : 3 : Put down red-grey if tile exists.          ::::  // [312][311]

    [312] : Slight shader tweeks to shader #7 to get ready ::::  // [313][312]
          : for rendering the specifics of the [ SFMT ].   ::::  // [313][312]

    [313] : Debug Color Block-In For Shader #7.  ::::::::::::::  // [314][313]

    [314] : Randomizing TileLayer, Tilesize , and TileValue. ::  // [315][314]
          : So that we have more feedback when confirming    ::  // [315][314]
          : that renderer #7 is written correctly.           ::  // [315][314]
          : NOTE : Committed code with only TileLayer        ::  // [315][314]
          :      : randomization on. But confirmed the       ::  // [315][314]
          :      : others do work properly.                  ::  // [315][314]

    [315] : Figuring out which master memory cell contains ::::  // [316][315]
          : our monochrome tile graphic. (ShaderSevenWork) ::::  // [316][315]

    [316] : Adding lookup table to non-optimized code :::::::::  // [317][316]
          : branch ( FRAGOPT_005 ) used in shader #7. :::::::::  // [317][316]

    [317] : Calculated[ AM4_STYLE_TO4 ]IN_SHADER_SEVEN  :::::::  // [318][317]

    [318] : Bit Packed Auto Tile Values that include     ::::::  // [319][318]
          : "lighting information" but it's really just  ::::::  // [319][318]
          : another layer of detail to make the tiles    ::::::  // [319][318]
          : assymetrical so we can see the effects of    ::::::  // [319][318]
          : the mirroring bits in our "AM4" values.      ::::::  // [319][318]

    [319] : 4x4 auto tile sub-tile designs are now ....  ::::::  // [320][319]
          :   1 : Loaded Into An Array                   ::::::  // [320][319]
          :   2 : Injected Into Shader #7                ::::::  // [320][319]

    [320] : Something is wrong with[ d _ to4 _ 4x4 ] ::::::::::  // [321][320]
          : lookup table. I have absolutely zero     ::::::::::  // [321][320]
          : fucking clue what that is.               ::::::::::  // [321][320]
          :                                          ::::::::::  // [321][320]
          : On the plus side , our bit-packed tile   ::::::::::  // [321][320]
          : graphic values seem to be correct...     ::::::::::  // [321][320]
          : It's just retrieving them from a lookup  ::::::::::  // [321][320]
          : table fails. Even when we hard code the  ::::::::::  // [321][320]
          : lookup index.                            ::::::::::  // [321][320]

    [321] : Bug in lookup table has been fixed.        ::::::::  // [322][321]
          : As with most bugs , the problem was        ::::::::  // [322][321]
          : me being an idiot. -KanjiCoder , Year2022  ::::::::  // [322][321]

    [322] : A little bit of cleanup , because I don't :::::::::  // [323][322]
          : want to nickle-and-dime myself to death   :::::::::  // [323][322]
          : in the shorter KanjiCoder channel videos. :::::::::  // [323][322]

    [323] : Editor supports setting tiles with       ::::::::::  // [324][323]
          : different Auto_Tiling_Method(AM4) bits.  ::::::::::  // [324][323]

    [324] : "ZXCV" now toggles auto tiling method bits on/off.   // [325][324]

    [325] : Added 8x4 bitpacked tile cap designs to help  :::::  // [326][325]
          : make renderer #7's tiles more asymmetric.     :::::  // [326][325]
          : ( So keys "____C____" and "____V____" will    :::::  // [326][325]
          : have a noticable effect when editing.         :::::  // [326][325]

    [326] : Created lookup table on CPU-side for our      :::::  // [327][326]
          : assymmetrical capping graphics for shader #7. :::::  // [327][326]

    [327] : Injected ::::::::::::::::::::::::::::::::::::::::::  // [328][327]
          : [ asymmetric_tile_design_lookup_table ] :::::::::::  // [328][327]
          : into [ shader_seven (#7) ]              :::::::::::  // [328][327]

    [328] : Capper Graphics Are Now Rendering In Shader #7. :::  // [329][328]
          : NEXT : Auto Tiling Mirroring Flags Should       :::  // [329][328]
          :      : Affect The Result Of The Render.         :::  // [329][328]
                                                            :::  // [329][328]
          : NOTE : This note only exists because previous   :::  // [329][328]
          :      : commit to master repo was tagged [327]   :::  // [329][328]
          :      : when it should have been tagged  [328]   :::  // [329][328]

    [329] : We applied mirroring of the discrete internal :::::  // [330][329]
          : local coords when the mirroring flags of      :::::  // [330][329]
          : auto tiling method are turned on.             :::::  // [330][329]
          :                                               :::::  // [330][329]
          : IT DOES NOT RENDER CORRECTLY AND I KNOW WHY.  :::::  // [330][329]
          :                                               :::::  // [330][329]
          : NEXT[ next_task_touching_mirror ]             :::::  // [330][329]
          : FUCK[ _ITS_WORSE_THAN_I_THOUGHT_]             :::::  // [330][329]

    [330] : "____C____" & "____V____" keys now correctly  :::::  // [331][330]
          : mirror tiles on "X" and "Y" axis.             :::::  // [331][330]

    [331] : Created Lookup Tables For Mirroring Touching  :::::  // [332][331]
          : values. NEXT: Test For lookup tables.         :::::  // [332][331]
          : NEXT_NEXT : Add tables to our GLSL shader.    :::::  // [332][331]

    [332] : Test code for rotation of      ::::::::::::::::::::  // [333][332]
          : touching values lookup tables. ::::::::::::::::::::  // [333][332]

    [333] : Fixing bugs in our test code. :::::::::::::::::::::  // [334][333]

    [334] : More test code for my test code. ::::::::::::::::::  // [335][334]

    [335] : Still not done with our tests for rotating    :::::  // [336][335]
          : touching values. We have one helper function  :::::  // [336][335]
          : we need to finish, then we are done.          :::::  // [336][335]
          : We will finish helper function in the         :::::  // [336][335]
          : next video.                                   :::::  // [336][335]
          : HELPER____FUNCTION === F_TO4_RO4_TO4          :::::  // [336][335]
          :              ( TO4 && RO4 )===>( TO4 )        :::::  // [336][335]

    [336] : We fucked up BIG_TIME.                     ::::::::  // [337][336]
          : SEE[ TAG[ _WE_FUCKED_UP_BIG_TIME_2022_ ] ] ::::::::  // [337][336]
          : SEE[ TAG[ NOA_FUCKUP_EXAMPLE  ] ________ ] ::::::::  // [337][336]

    [337] : Fixing the touching value lookup tables.   ::::::::  // [338][337]
          : Also, renamed touching value lookup tables ::::::::  // [338][337]
          : to[ d_rotclok_###_r_[x|y]_to4_to2 ]        ::::::::  // [338][337]

    [338] : Injecting touching value rotation tables ::::::::::  // [339][338]
          : into shader #7 so that we can implement  ::::::::::  // [339][338]
          : rotation bits in our auto-tiling-method  ::::::::::  // [339][338]
          : masks that are bit packed into the       ::::::::::  // [339][338]
          : "bintile". ( bintile == Binary_Tile )    ::::::::::  // [339][338]

    [339] : Refactored[ edigame_editor ]object to use       :::  // [340][339]
          : individual flag variables instead of            :::  // [340][339]
          : bitpacked[ auto_tile_method_4bits ]field.       :::  // [340][339]
          :                                                 :::  // [340][339]
          : Reason : The flexibility of this makes it       :::  // [340][339]
          :        : easier to switch from[ am4 ]to[ am6 ]. :::  // [340][339]

    [340] : Rotation Code Bit Packing Work. :::::::::::::::::::  // [341][340]

    [341] : Final CPU-side editor changes to support        :::  // [342][341]
          : [ AM6 ]bit-packed auto-tile-method flags.       :::  // [342][341]
          : AM6 ===BINARY[ l_x,l_y,m_x,m_y,rb0,rb1 ]        :::  // [342][341]
          : AM6 ===BINARY[  0___0___0___0___0___0  ]( MIN ) :::  // [342][341]
          : AM6 ===BINARY[  1___1___1___1___1___1  ]( MIN ) :::  // [342][341]

    [342] :::::                                                  // [343][342]
          : 1 : REFACTORED_IN_SHADER_7 : [ u_ro4 ]===>[ u_r4i ]  // [343][342]
          : 2 : Rotation of touching values is now present       // [343][342]
          :   : in shader #7.                                    // [343][342]
          NEXT: Rotate the discrete internal coordinates         // [343][342]
                COUNTER_CLOCKWISE by the same number of          // [343][342]
                degrees CLOCKWISE that the touching values       // [343][342]
                of tiles were rotated by.                        // [343][342]

    [343] : SIMPLER AUTO TILE SHADER IS _almost_ DONE!!!!    ::  // [344][343]
          : Okay... Well, we had other things we wanted      ::  // [344][343]
          : to do... But this is a good stopping point...    ::  // [344][343]
          : Well... A bit of cleanup in next video would     ::  // [344][343]
          : be good... Like making certain DEBUG modes       ::  // [344][343]
          : PERMANENT features.                              ::  // [344][343]
          :                                                  ::  // [344][343]
          : DONE : "R" key rotates auto tiles                ::  // [344][343]
          :      : in 90 degree increments.                  ::  // [344][343]
          : NEXT : Different degrees should                  ::  // [344][343]
          :      : not latch with each other.                ::  // [344][343]
          : NEXT : Turn debug modes into permanent features. ::  // [344][343]

    [344] : Tiles with DIFFERING rotation codes (u_ro4 ) ::::::  // [345][344]
          : will no longer latch to each other.          ::::::  // [345][344]

    [345] : Maybe we make things go flashy flashy? ::::::::::::  // [346][345]

    [346] : Renamed this file .                             :::  // [347][346]
          : RENAMED[ "server.js" ]TO[ "ATOMIC_IVY_MMO.JS" ] :::  // [347][346]
          : Edited[ package.json ]So It Can Deploy New Name :::  // [347][346]
          : SEE[ _CONTENTS_OF_PACKAGE_DOT_JSON_2022_10_13_ ]:::  // [347][346]

    [347] : Refresher On Deploying To Heroku Using Terminal.:::  // [348][347]

    [348] : Deployed[ Atomic-Ivy-MMO ]to[ GCloud ]        :::::  // [350][349][348]
    [349] : But file system access , and thus serving     :::::  // [350][349][348]
          : of files, seems broken. This could be         :::::  // [350][349][348]
          : because .                                     :::::  // [350][349][348]
          :                                               :::::  // [350][349][348]
          : 1 : App is no longer self-aware of it's root  :::::  // [350][349][348]
          :   : URL like it was when deployed on heroku.  :::::  // [350][349][348]
          :   :                                           :::::  // [350][349][348]
          : 2 : Files are now on a WINDOWS instead of     :::::  // [350][349][348]
          :   : LINUX machine. And this changes how       :::::  // [350][349][348]
          :   : we can write valid relative URLS.         :::::  // [350][349][348]
          :   :                                           :::::  // [350][349][348]
          : 3 : Folder where "ATOMIC_IVY_MMO.JS" was      :::::  // [350][349][348]
          :   : copied to on google servers is __NOT__    :::::  // [350][349][348]
          :   : the working directory of NODE.JS program. :::::  // [350][349][348]
          :-----------------------------------------------:::::  // [350][349][348]
          :   This video used this slide show :           :::::  // [350][349][348]
          :                                               :::::  // [350][349][348]
          :   PART_001 :  https://imgur.com/a/OyYRxBo     :::::  // [350][349][348]
          :   PART_002 :  https://imgur.com/a/oKMEW8S     :::::  // [350][349][348]
          :-----------------------------------------------:::::  // [350][349][348]

    [350] : We don't do "Pretty Priviledge" here. We've got  ::  // [351][350]
          : some ugly hacks. And those ugly hacks are the    ::  // [351][350]
          : only way to get this going, so lets do it.       ::  // [351][350]
          :                                                  ::  // [351][350]
          : Getting READY to serve (self/this/AIM.JS)        ::  // [351][350]
          : NOTE: AIM.JS === ATOMIC_IVY_MMO.JS === server.js ::  // [351][350]
          :                                                  ::  // [351][350]
          : NOTE: Imgur.com post seen in this video :        ::  // [351][350]
          :       [ https://imgur.com/gallery/ie9h1Cf ]      ::  // [351][350]

    [351] : Still broken on GOOGLE_APP_ENGINE ,              ::  // [352][351]
          : but the refactor of serving_self (AIM.JS)        ::  // [352][351]
          : should work on HEROKU_SERVER .                   ::  // [352][351]
          :                                                  ::  // [352][351]
          : Refactors done in this video are                 ::  // [352][351]
          : "setting us up" to get the code working on       ::  // [352][351]
          : both "GOOGLE_APP_ENGINE" and "HEROKU_SERVER".    ::  // [352][351]
          :                                                  ::  // [352][351]
          : "setting_us_up" as in an "assist" in basketball  ::  // [352][351]
          : or soccer. I don't watch sports, but this is     ::  // [352][351]
          : a good analogy for what we are doing right now.  ::  // [352][351]

    [352] : Google_App_Engine (G.A.E.) is STILL_BROKEN, :::::::  // [353][352]
          : but hoping changes in this video prevent    :::::::  // [353][352]
          : a "Request Timeout" or "502 Bad Gateway"    :::::::  // [353][352]
          : error from occuring when we try to request  :::::::  // [353][352]
          : "<APP_ROOT_URL>/ATOMIC_IVY_MMO"             :::::::  // [353][352]
          :                                             :::::::  // [353][352]
          : NOTE : There is no ".JS" extension at the   :::::::  // [353][352]
          :        end of that, and for a good reason.  :::::::  // [353][352]
          :                                             :::::::  // [353][352]
          :        It is a pre-processed version of     :::::::  // [353][352]
          :        the file you are currently reading.  :::::::  // [353][352]
          :                                                 :::  // [353][352]
          : NOTE : If you have the money, use HEROKU        :::  // [353][352]
          :      : instead of GOOGLE_APP_ENGINE.            :::  // [353][352]
          :      :                                          :::  // [353][352]
          :      : 1. HEROKU deploys FASTER                 :::  // [353][352]
          :      : 2. HEROKU tools can be used it GIT BASH  :::  // [353][352]

    [353] : I didn't want to use a "Catch" with my promise, :::  // [354][353]
          : but I think it's the only way to get a          :::  // [354][353]
          : response back from[ google_app_engine ]         :::  // [354][353]
          : so we can get enough feeback to move forward.   :::  // [354][353]

    [354] : Created a "safe typeof" function that won't  ::::::  // [355][354]
          : crash when we get "evil types" back from     ::::::  // [355][354]
          : a function. Evil types being types that are  ::::::  // [355][354]
          : so evil, you can't even ask them what        ::::::  // [355][354]
          : type they are without crashing.              ::::::  // [355][354]
          :                                              ::::::  // [355][354]
          : ( typeof EVIL_TYPE ) ===> EXCEPTION()        ::::::  // [355][354]
          : ( typeof EVILTYP   ) ===> EXCEPTION()        ::::::  // [355][354]

    [355] : String.replaceAll helper function , hopefully    ::  // [356][355]
          : this will de-mystify whatever the fuck is        ::  // [356][355]
          : going wrong with our "google_app_engine" deploy. ::  // [356][355]
          :::::::::::::::::::::: (GOOGLE APP ENGINE)         ::  // [356][355]

    [356] :                                           :::::::::  // [357][356]
          : 1 : Finished[ F _ REPLACE _ BOD_FIN_REP ] :::::::::  // [357][356]
          : 2 : Refactored :                          :::::::::  // [357][356]
          :   :[ EXECUTO _ F _ ASERVER_GETSELF_AIM  ] :::::::::  // [357][356]

    [357] : Edits to make it so application is able to     ::::  // [358][357]
          : "phone home" on "google app engine".           ::::  // [358][357]
          : (Source code needs to be self-aware of server) ::::  // [358][357]
          : (url it is hosted on so that the client file ) ::::  // [358][357]
          : (is able to make requests back to the server.) ::::  // [358][357]
          :                                                 :::  // [358][357]
          : We are not finished, but created a wrapper      :::  // [358][357]
          : function[ F _ ASERVER _ GET_WEBROOT ]that       :::  // [358][357]
          : will make it easier to abstract between         :::  // [358][357]
          : "GoogleAppEngine" and "HerokuServer" platforms. :::  // [358][357]

    [358] : More robust[ server_environment ]detection. :::::::  // [359][358]
          : More robust[ server-environment ]detection. :::::::  // [359][358]
          : More robust[ server environment ]detection. :::::::  // [359][358]
          : More robust[ serverenvironment  ]detection. :::::::  // [359][358]
          :                                                  ::  // [359][358]
          : REFERENCE :                                      ::  // [359][358]
          : https://stackoverflow.com/questions/10185353     ::  // [359][358]
          : /what-are-the-other-heroku-environment-variables ::  // [359][358]

    [359] : Platform detection refactoring. :::::::::::::::::::  // [360][359]

    [360] : Stubbed in the "[Hotel World]" sub-system. ::::::::  // [361][360]
          ::::::::                                       ::::::  // [361][360]
          : NOTE : I am currently researching how to get ::::::  // [361][360]
          :      : procedural access to[ imgur.com ].    ::::::  // [361][360]
          :      : My findings will be posted into this  ::::::  // [361][360]
          :      : imgur gallery below :                 ::::::  // [361][360]
          :      :                                       ::::::  // [361][360]
          :::::::: [ https://imgur.com/a/X52liVX ]       ::::::  // [361][360]

    [361] : What we did in this [ delta / video ] :    ::::::::  // [362][361]
          :                                            ::::::::  // [362][361]
          :     1 . Stubbed In "FILEMOB" system.       ::::::::  // [362][361]
          :                                            ::::::::  // [362][361]
          : EVENTUALLY_NEXT :                          ::::::::  // [362][361]
          :                                            ::::::::  // [362][361]
          :     1. Something to do with imgur images.  ::::::::  // [362][361]

    [362] : Working on LOCAL file-save and LOCAL file-load. :::  // [363][362]
          : Specificially : Isolating memory into 512x512  ::::  // [363][362]

    [363] : Stubbed in wrapper functions for  :::::::::::::::::  // [364][363]
          : UPNG encode and decode functions. :::::::::::::::::  // [364][363]

    [364] : Called "UPNG.encode" and did some bullshit to  ::::  // [365][364]
          : hopefully protect us from the ravages of the   ::::  // [365][364]
          : ... "GARBAGE COLLECTOR" *dun* *dun* *dun*      ::::  // [365][364]

    [365] : Added constants to identify our debug procs :  ::::  // [366][365]
          : 1 : "save centeral level pack"                 ::::  // [366][365]
          : 2 : "load centeral level pack"                 ::::  // [366][365]

    [366] : Realized that I need THREE SETS of      :::::::::::  // [367][366]
          : "load/save" debug procedures if I want  :::::::::::  // [367][366]
          : to [ slowly / sanely ] work up to my    :::::::::::  // [367][366]
          : final goal of [ saving || loading ]     :::::::::::  // [367][366]
          : files to somewhere on the internet.     :::::::::::  // [367][366]

    [367] : Stubbed In Konamic Save+Load     ::::::::::::::::::  // [368][367]
          : Centeral Level_Pack debug funcs. ::::::::::::::::::  // [368][367]

    [368] : Finished function bodies for :    :::::::::::::::::  // [369][368]
          : 1 : [ F _ KONAMIC _ SAVECEN_RAM ]( KONAMI+"_D_" )::  // [369][368]
          : 2 : [ F _ KONAMIC _ LOADCEN_RAM ]( KONAMI+"_E_" )::  // [369][368]
          : NEXT : FINISH_BODY[ F _ FILEMOB _ LOCLOAD ] :::::::  // [369][368]

    [369] : 1 : Fixed some bugs in our code. ::::::::::::::::::  // [370][369]
          : 2 : Created helper function to tell us if       :::  // [370][369]
          :   : an input is a[ Uint8Array ]or not because   :::  // [370][369]
          :   : [ Array.isArray ]has dishonored our family. :::  // [370][369]

    [370] : Core .PNG Decoder Wrapper Finished. :::::::::::::::  // [371][370]

    [371] : What I __THOUGHT__ I was going to do :          :::  // [372][371]
          :     Something something .PNG ram load/save ...  :::  // [372][371]
          :     Worked_On[ F _ FILEMOB _ LOCLOAD ]          :::  // [372][371]
          :                                                 :::  // [372][371]
          : What I __ACTUALLY__ Did :                       :::  // [372][371]
          :                                                 :::  // [372][371]
          :     1. Created "Data String" Command.           :::  // [372][371]
          :     2. Misc Memory "NUB" global.                :::  // [372][371]
          :     3. Misc Memory "DATHASH" global.            :::  // [372][371]

    [372] : Working on save+load to random access memory still.  // [373][372]
          : Added code to check and make sure that the           // [373][372]
          : data-hash is from a pre-approved [ list / set ]      // [373][372]
          : of names we use to identify the "kind" of data.      // [373][372]

    [373] : Still working on in-memory (to-ram) save+load. ::::  // [374][373]

    [374] : We decoded the .PNG binary into a raw   :::::::::::  // [375][374]
          : RGBA byte array previously. Now we are  :::::::::::  // [375][374]
          : going to copy that memory into a        :::::::::::  // [375][374]
          : hotel cell within[ d _ pix 2048 ]       :::::::::::  // [375][374]

    [375] : Looking for bug... I think it might be that :::::::  // [376][375]
          : we corrupted the .PNG library we are using  :::::::  // [376][375]
          : when we tried to add cosmetic refactoring.  :::::::  // [376][375]
          : NEXT[ #_ENCODE_DEBUG_FEATURE_# ]:::::::::::::::::::  // [376][375]

    [376] : Working on inline debug code for 3rd party  :::::::  // [377][376]
          : UPNG library. I fear I may have corrupted   :::::::  // [377][376]
          : the library code when re-formatting some    :::::::  // [377][376]
          : of it to obey my 64-column limit in this    :::::::  // [377][376]
          : source code file. If that ends up being     :::::::  // [377][376]
          : the case, cut+paste from[ HOTEL13.JS ]      :::::::  // [377][376]
          : to get a fresh start with[ UPNG_LIBRARY ].  :::::::  // [377][376]

    [377] : 1 : Inlined Unit Test Of .PNG Encoder Passing. ::::  // [378][377]
          : 2 : Fixed some bugs in our code as I realized  ::::  // [378][377]
          :   : I was not using UPNG_library correctly.    ::::  // [378][377]
          :   : Array buffer you get back from             ::::  // [378][377]
          :   : UPNG_library needs to be used in           ::::  // [378][377]
          :   : Uint8Array constructor.                    ::::  // [378][377]
          :NEXT: Storing .PNG file in Uint8Array is        ::::  // [378][377]
          :    : probably corrupting it. We can fix        ::::  // [378][377]
          :    : this but have to be more careful          ::::  // [378][377]
          :    : about how we handle[ trashme_binarra ]    ::::  // [378][377]

    [378] : We got load+save [ to _AND_ from ] R.A.M. works. ::  // [379][378]

    [379] : Stubbed in save+load file dialog for disk. ::::::::  // [380][379]

    [380] : We need to re-visit some old friends. :::::::::::::  // [381][380]

    [381] : Sir, you can't do that here. ::::::::::::::::::::::  // [382][381]
          : Actually, you can if you hurry the fuck up. :::::::  // [382][381]

    [382] : The "Load From Disk" __MIGHT__ be done.  ::::::::::  // [383][382]
          : We don't know for sure yet.              ::::::::::  // [383][382]

    [383] : Convert JavaScript's "File" type to a :::::::::::::  // [384][383]
          : Uint8Array that we can do stuff with. :::::::::::::  // [384][383]
          : ( We Tried The Above And Failed ^^^^ ) ::::::::::::  // [384][383]
          : FUCKING HELL WE NEED A RUDIMENTARY EVENT QUEUE  :::  // [384][383]
          : OWNED BY FILEMOB SUB SYSTEM.                    :::  // [384][383]

    [384] : Simple Task Queue That Can Only Hold ONE TASK :::::  // [385][384]
          : Added To FILEMOB so that we can re-linearize  :::::  // [385][384]
          : the async file loading operations that don't  :::::  // [385][384]
          : need to be async.                             :::::  // [385][384]

    [385] : In the midst of a refactor. If you know what   ::::  // [386][385]
          : is good for you, you wont press                ::::  // [386][385]
          : [ up up down down left right left right 'G' ]  ::::  // [386][385]
          : ( This is not a joke, we are in the middle  )  ::::  // [386][385]
          : ( of a messy pain in the ass refactor.      )  ::::  // [386][385]

    [386] : More refactoring. Created a task specific   :::::::  // [387][386]
          : struct for the current[ FILEMOB ]task we    :::::::  // [387][386]
          : are working on.                             :::::::  // [387][386]
          : MUSIC_TAG[ unitcode:machine - Drift Away ]  :::::::  // [387][386]

    [387] : I fucking hate this. It's not that this         :::  // [388][387]
          : refactor is hard. It's that doing the           :::  // [388][387]
          : refactor in discrete steps that can be          :::  // [388][387]
          : easy to follow from video to video              :::  // [388][387]
          : is fucking hard.                                :::  // [388][387]
          :                                                 :::  // [388][387]
          : It's hard to keep an intelligible "paper trail" :::  // [388][387]
          : when you are shifting stuff all over the place. :::  // [388][387]
          :                                                 :::  // [388][387]
          : I really fucking hate this.                     :::  // [388][387]
          :                                                 :::  // [388][387]
          : -KanjiCoder                                     :::  // [388][387]

    [388] : We might be done with the load-from-disk   ::::::::  // [389][388]
          : code core logic. But not 100% certain of   ::::::::  // [389][388]
          : that. Either way, we have wrote enough     ::::::::  // [389][388]
          : code for this delta.                       ::::::::  // [389][388]

    [389] : File Load From Disk __MIGHT__ Be Done. ::::::::::::  // [390][389]

    [390] :   :::::::::::::::::::::::::::::::::::::::::::::::::  // [391][390]
          : 1 : Refresh the GPU-Texture after loading of ::::::  // [391][390]
          :   : a levelpack into the[ engine / game ].   ::::::  // [391][390]
          :   :                                          ::::::  // [391][390]
          : 2 : Reset the re-entrant data structs when   ::::::  // [391][390]
          :   : we have completed the queued re-entrant  ::::::  // [391][390]
          :   : task.                                    ::::::  // [391][390]

    [391] : [ taskill ]aborts bautched re-entrant tasks. ::::::  // [392][391]
          : NEXT : Create[ d_filemob_cankill ]Array. ::::::::::  // [392][391]

    [392] : Added the "CanKill" array so we can detect  :::::::  // [393][392]
          : if a re-entrant task is able to be killed.  :::::::  // [393][392]
          : ( See if task is "killable" )               :::::::  // [393][392]
          : ( See if task can be killed )               :::::::  // [393][392]

    [393] : Stubbing in the "save file dialog" task  ::::::::::  // [394][393]
          : for allowing the user to save the        ::::::::::  // [394][393]
          : centeral levelpack within "THE_DUM".     ::::::::::  // [394][393]

    [394] : Mocking up the basic workflow for the :::::::::::::  // [395][394]
          : "save file dialog" re-entrant task.   :::::::::::::  // [395][394]

    [395] : Created that hidden anchor element hack :::::::::::  // [396][395]
          : for the spawning of save file dialogs.  :::::::::::  // [396][395]
          : NOTE: The "click()" does __NOT__ currently ::::::::  // [396][395]
          :       open a save dialog. Find out why .   ::::::::  // [396][395]

    [396] : GET A FUCKING DIALOG OPEN YOU SON OF A BITCH!!! :::  // [397][396]
          : We can now save a file called "512.PNG" to the  :::  // [397][396]
          : hard disk. But it's just a text file containing :::  // [397][396]
          : the source code of our web page.                :::  // [397][396]
          : BUT IT'S A STEP IN THE CORRECT DIRECTION!       :::  // [397][396]

    [397] : Copying over centeral levelpack into misc    ::::::  // [398][397]
          : temporary memory so that we can convert it   ::::::  // [398][397]
          : into a 512_x_512.PNG file and save it to     ::::::  // [398][397]
          : the [ user / client / users / clients ]      ::::::  // [398][397]
          : [ hard disk / solid state drive / storage ]. ::::::  // [398][397]

    [398] : Encoding .PNG file from 512x512 RGBA image. :::::::  // [399][398]
          : Also, saving the .PNG file to disk by       :::::::  // [399][398]
          : creating a downloadable blob and creating   :::::::  // [399][398]
          : a hyperlink url to that blob data.          :::::::  // [399][398]

    [399] : Some Cleanup Of Re-Entrant SaveToDisk Task. :::::::  // [400][399]

    [400] : Playlist[ #0_0_4 ]is OVER.      :::::::::::::::::::  // [401][400]
          : Go to next playlist. [ #0_0_5 ] :::::::::::::::::::  // [401][400]

    [401] : Video #4_0_1 is used as a placeholder video.   ::::  // [402][401]
          : No new code has been added since video #4_0_0  ::::  // [402][401]
          : When playlist five(5) is done, we will replace ::::  // [402][401]
          : Video #4_0_1 with a technical demo video that  ::::  // [402][401]
          : explains what will be accomplished in the      ::::  // [402][401]
          : next 100 videos. I haven't been keeping up     ::::  // [402][401]
          : on this. Figured I would get more serious      ::::  // [402][401]
          : about it if the video series starts to gain    ::::  // [402][401]
          : traction.                                      ::::  // [402][401]

    [402] : Stubbed in the "Hard Texture Upload" system. ::::::  // [403][402]

    [403] : Doing some re-organization to get me ready  :::::::  // [404][403]
          : to add a different "debugging mode" to      :::::::  // [404][403]
          : numpad for "KONAMI+NUMPAD" combo. This new  :::::::  // [404][403]
          : debug mode will use "HARDTEX" to test       :::::::  // [404][403]
          : sub texture pushes to the GPU and see       :::::::  // [404][403]
          : what I am currently doing wrong.            :::::::  // [404][403]

    [404] : Alternate_Between "Binary Fill Toggle" AND ::::::::  // [405][404]
          : "Hard Texture Push Debug" functions        ::::::::  // [405][404]
          : depending on value of "d-bug-konamic_pad". ::::::::  // [405][404]

    [405] : The "zero fill" or "one fill" debug of  :::::::::::  // [406][405]
          : levelpack [logic/code] has been         :::::::::::  // [406][405]
          : [ moved / extracted ] into the          :::::::::::  // [406][405]
          : [ F _ KONAMIC _ PAD_TOG ] function.     :::::::::::  // [406][405]

    [406] : 1. Finished[ F _ KONAMIC _ PAD_TEX ]Body.  ::::::::  // [407][406]
          : 2. Stubbed In[ F _ HARDTEX _ PAT_H3X_H3Y ] ::::::::  // [407][406]

    [407] : 1. Created[ OOB_MSG_MIN_MAX_VAL ]BoilerFunc.  :::::  // [408][407]
          : 2. Added[ OOBMMMV ]CallTo[ PAT_H3X_H3Y ]Func. :::::  // [408][407]

    [408] : Working on[ F _ HARDTEX _ PAT_H3X_H3Y ] :::::::::::  // [409][408]

    [409] : Created Lookup Tables And Constants For   :::::::::  // [410][409]
          : What Type Of Data Goes Into Level Overlay :::::::::  // [410][409]
          : cells.................................... :::::::::  // [410][409]

    [410] : Brain is NOT_WORKING_WELL , and I forgot the  :::::  // [411][410]
          : "d_" prefix for "global data" that belongs    :::::  // [411][410]
          : on the lookup tables created in the           :::::  // [411][410]
          : previous video. ( video #4_0_9 )              :::::  // [411][410]

    [411] : Finished boolean generator function for :::::::::::  // [412][411]
          : pattern ZERO(0) of HARDTEX subsystem.   :::::::::::  // [412][411]

    [412] : Laying a ring patter over each level overlay  :::::  // [413][412]
          : cell to hopefully diagnose issue with         :::::  // [413][412]
          : the sub texture push. Tile generator          :::::  // [413][412]
          : function that renders the ring has            :::::  // [413][412]
          : just been finished.                           :::::  // [413][412]

    [413] : Fixed bugs I created in previous video. :::::::::::  // [414][413]

    [414] : Final pixel setting code, and now I think  ::::::::  // [415][414]
          : our first pattern generation function for  ::::::::  // [415][414]
          : [ HARDTEX ]system is finished.             ::::::::  // [415][414]

    [415] : 100% Sure the sub-texture-push code is broken.  :::  // [416][415]
          : Maybe the "offset" needs to be in pixels rather :::  // [416][415]
          : than bytes? Or we should just remove the offset :::  // [416][415]
          : parameter all together. :::::::::::::::::::::::::::  // [416][415]

    [416] : Misc fixes, but main bug in texture upload   ::::::  // [417][416]
          : has not yet been found. Suprisingly I can't  ::::::  // [417][416]
          : find any documentation on it aside from MDN. ::::::  // [417][416]

    [417] : Sub Texture Update Is Fixed!            :::::::::::  // [418][417]
          : Solution : You need to call side-effect :::::::::::  // [418][417]
          : function before calling the main        :::::::::::  // [418][417]
          : sub_texture_update function.            :::::::::::  // [418][417]
          :                                         :::::::::::  // [418][417]
          : NEXT : 1. Fix the eraser problem with   :::::::::::  // [418][417]
          :       "Multiple Kinds Of Zero Tiles"    :::::::::::  // [418][417]
          : NEXT : 2. Fix konami code bug that will :::::::::::  // [418][417]
          :        overwrite all your data.         :::::::::::  // [418][417]
          : NEXT : 3. Fix the un-intentional zoom when   ::::::  // [418][417]
          :      : doing KONAMI_ARROWS+NUMPAD shortcuts. ::::::  // [418][417]

    [418] : Fixing shader bug where if we :            ::::::::  // [419][418]
          :     1 . Mirror                             ::::::::  // [419][418]
          :     2 . Rotate                             ::::::::  // [419][418]
          :     3 . Manipulate Auto Latching           ::::::::  // [419][418]
          : A ZERO TILE ...                            ::::::::  // [419][418]
          :     We end up with a "non-zero-zero-tile"  ::::::::  // [419][418]
          :     that should render as transparent.     ::::::::  // [419][418]

    [419] : Konami Zero Bug Fix Is Done              ::::::::::  // [420][419]
          : SEE[ KONAMIC_ZEROFIX ]                   ::::::::::  // [420][419]
          :                                          ::::::::::  // [420][419]
          : NEXT : Fix accidential zoom-in after the ::::::::::  // [420][419]
          :      : [ Konami_Arrows+NUMPAD ]Combo.    ::::::::::  // [420][419]

    [420] : KonamiKey+NUMPAD no longer zooms in.        :::::::  // [421][420]
          : If you invoke a konami combo shortcut with  :::::::  // [421][420]
          : the keyboard, the default behavior for that :::::::  // [421][420]
          : key should be [ ignored / overridden ].     :::::::  // [421][420]
          :                                             :::::::  // [421][420]
          : Previously, the default key binding AND     :::::::  // [421][420]
          : the KonamiCodeShortcut were executing       :::::::  // [421][420]
          : when you did KonamiKey+(A_Z||NUM).          :::::::  // [421][420]

    [421] : Begin working on mirror brush for fun. ::::::::::::  // [422][421]

    [422] : Mirror Brush Delta Part #2. :::::::::::::::::::::::  // [423][422]
          : Editor keyboard shortcuts toggle mirror brush :::::  // [423][422]
          : on/off when the "M" key is pressed.           :::::  // [423][422]

    [423] : 1 : Added call site to                   ::::::::::  // [424][423]
          :   : mirror-tile setting function.        ::::::::::  // [424][423]
          : 2 : Stubbed in the mirror tile function. ::::::::::  // [424][423]

    [424] : Filling out body of MIRMAID tile setter. ::::::::::  // [425][424]
          : BODY NOT FINISHED JUST YET!!!!!!!!!!!!!! ::::::::::  // [425][424]

    [425] : Finishing the body of main mirroring          :::::  // [426][425]
          : function that our editor will call when       :::::  // [426][425]
          : trying to use mirrored brush settings.        :::::  // [426][425]
          :                                               :::::  // [426][425]
          : Also, stubbed in "RADIAL" and "BILATERAL"     :::::  // [426][425]
          : tile setter functions within MERMAID system.  :::::  // [426][425]
          :                                               :::::  // [426][425]
          : Also, added "XYD" settings flags member       :::::  // [426][425]
          : to edigame's editor object.                   :::::  // [426][425]

    [426] : Finished a rough outline of the[ BODY ]of  ::::::::  // [427][426]
          : our BILATERAL tile put mirroring function. ::::::::  // [427][426]

    [427] : Non-Dense mirroring code on the      ::::::::::::::  // [428][427]
          : X and Y axis is now finished.        ::::::::::::::  // [428][427]
          : NEXT : Mirror The Auto Tiling Masks. ::::::::::::::  // [428][427]

    [428] : Stubbing in the framework of code that  :::::::::::  // [429][428]
          : will allow us to mirror the internal    :::::::::::  // [429][428]
          : auto-tile-method-bits ( AM6 ) of our    :::::::::::  // [429][428]
          : binary tile when the mirror brush is    :::::::::::  // [429][428]
          : turned on.                              :::::::::::  // [429][428]
      
    [429] : Finalizing most (missing 2 bits) of the      ::::::  // [430][429]
          : memory layout for the GEOMETRY TILE LAYER'S  ::::::  // [430][429]
          : uint32 binary tile value. ( u_bintile ).     ::::::  // [430][429]

    [430] : 10-bit binary tile mask and shift constants. ::::::  // [431][430]
          :                                              ::::::  // [431][430]
          : NEXT ::::::::::::::::::::::::::::::::::::::::::::::  // [431][430]
          : Mirroring the bits of the different      ::::::::::  // [431][430]
          : sub-layers of our binary geometry tiles. ::::::::::  // [431][430]

    [431] : Added bit-masks to allow us to toggle AM6 :::::::::  // [432][431]
          : bits within[ mg0,bg1,fg2 ]sublayers of    :::::::::  // [432][431]
          : geometry u_bintile bits without having    :::::::::  // [432][431]
          : to UNPACK and PACK the 10-bit sublayer    :::::::::  // [432][431]
          : bit-fields.                               :::::::::  // [432][431]
          : VISUAL_GALLERY[ https://imgur.com/a/Vl4TeHG ]::::::  // [432][431]
          : SCREENSHOTNOTE[ https://imgur.com/CQhOsva   ]::::::  // [432][431]
          : DIRECT_LINK_SS[ https://i.imgur.com/CQhOsva.png ]::  // [432][431]

    [432] : Basic Bilateral Mirroring Code Sort Of Works ::::::  // [433][432]
          : for mirroring the internals of auto tiles.   ::::::  // [433][432]
          : We need to make the non-dense cases in our   ::::::  // [433][432]
          : code more strict to fix some of the          ::::::  // [433][432]
          : mirrorings and make them correct.            ::::::  // [433][432]

    [433] : NON-dense bilateral mirroring of auto-tile    :::::  // [434][433]
          : internals and plot points has been finished.  :::::  // [434][433]
          : HOWEVER, we still need to add the "DENSE"     :::::  // [434][433]
          : code within the symmetric-bilateral function. :::::  // [434][433]

    [434] : "N" key can now toggle on or off mirroring  :::::::  // [435][434]
          : of internals of auto tiles when the mirror  :::::::  // [435][434]
          : brush is turned on.                         :::::::  // [435][434]

    [435] :::::::::::::::::::::::::::::::::::::::::::::::::::::  // [436][435]
          :   :                                              ::  // [436][435]
          : 1 : Stubbed in auto tile internal am6            ::  // [436][435]
          :   : rotation functions.                          ::  // [436][435]
          :   :                                              ::  // [436][435]
          : 2 : Added "Kitty Corner Dense" bilateral         ::  // [436][435]
          :   : mirroring code.                              ::  // [436][435]
          :::::::::::::::::::::::::::::::::::::::::::::::::::::  // [436][435]
          :NEX: Added bit shifts for getting different       ::  // [436][435]
          :   : BINGTEN bits directly out of a[ u_bintile ]. ::  // [436][435]
          :::::::::::::::::::::::::::::::::::::::::::::::::::::  // [436][435]

    [436] : Added shift amounts for :  ::::::::::::::::::::::::  // [437][436]
          : 1 : mg0_bintile_sublayer   ::::::::::::::::::::::::  // [437][436]
          : 2 : bg1_bintile_sublayer   ::::::::::::::::::::::::  // [437][436]
          : 3 : fg2_bintile_sublayer   ::::::::::::::::::::::::  // [437][436]


    [437] : Rotation Extraction And Manipulation Of :::::::::::  // [438][437]
          : Sublayer's within geom-tile's u_bintile :::::::::::  // [438][437]
          : 10-bit sublayers.                       :::::::::::  // [438][437]

    [438] : Finished Bilateral X-Axis DENSE mirroring code. :::  // [439][438]

    [439] : Finished mirroring code for the        ::::::::::::  // [440][439]
          : Bilateral_Y_Dense section of mirroring ::::::::::::  // [440][439]
          : brush transformation function.         ::::::::::::  // [440][439]
          : [ F _ MIRMAID _ EDI_PUT_U32_SYMBILA ]  ::::::::::::  // [440][439]

    [440] : All of the mirroring positions for     ::::::::::::  // [440]
          : X+Y Mirroring in Bilateral DENSE mode  ::::::::::::  // [440]
          : are finished.                                 :::::  // [440]
          : THOUGHT: Backup with in-memory save before    :::::  // [440]
          :        : deleting data.                       :::::  // [440]
          :        : GALLERY[ https://imgur.com/a/Vl4TeHG     ]  // [440]
          :        :   IMAGE[ https://i.imgur.com/399Ozpg.png ]  // [440]
          : NEXT   : Cycle Through Mirroring Modes With "<>"     // [440]
          : NEXT   : Radial Mirroring Code Eventually. ::::::::  // [440]
          :                                                      // [440]
          : BROKEN : KONAMI_CODES_FAIL_WITH_CAPSLOCK_TURNED_ON!  // [440]
          : COOL_IMAGE:[ i.imgur.com/XQJS8VL.png ] ::::::::::::  // [440]
          : IMAGE_SRC::[ i.imgur.com/ZipZ0Yo.png ] ::::::::::::  // [440]

    [441] :::::::::::::::::::::::::::::::::::::::::::::::::::::  // [442][441]
          : 1 : Created F_BAK helper function.               ::  // [442][441]
          : 2 : Created F_NEX helper function.               ::  // [442][441]
          : 3 : [<] key moves backwards through mirror modes.::  // [442][441]
          : 4 : [>] key moves forwards  through mirror modes.::  // [442][441]
          :::::::::::::::::::::::::::::::::::::::::::::::::::::  // [442][441]

    [442] : Shifting around some cases. :::::::::::::::::::::::  // [443][442]
          : Code is complete clusterfuck for bilateral    :::::  // [443][442]
          : mirroring. Oh fucking well.                   :::::  // [443][442]

    [443] : Added maybe HALF of the box projection  :::::::::::  // [444][443]
          : mirroring code that we need to be       :::::::::::  // [444][443]
          : finished with mirroring modes for.      :::::::::::  // [444][443]
          : THAT WAS A VERY BAD SENTENCE!!!!!!!     :::::::::::  // [444][443]

    [444] : Dense mode for single-axis selection works, :::::::  // [445][444]
          : but, it looks like shit.                    :::::::  // [445][444]

    [445] : Dividing[ jmp ]value by 2 instead of 4        :::::  // [446][445]
          : actually looks best, because that 22.5        :::::  // [446][445]
          : degree lines are not rendered how I though,   :::::  // [446][445]
          : they still do not auto tile, and between      :::::  // [446][445]
          : perfect 45 lines that are not auto-tiling     :::::  // [446][445]
          : and 22.5 degree lines that are not            :::::  // [446][445]
          : auto-tiling, the 45 degree lines look better. :::::  // [446][445]
          :                                               :::::  // [446][445]
          : Also, correct internal tile value is used on  :::::  // [446][445]
          : the projected uint32 binary tile values.      :::::  // [446][445]

    [446] : Global radial mirroring code is HALF-FINISHED. ::::  // [447][446]
          : We just need to finish the "DENSE MODE"        ::::  // [447][446]
          : for radial mirroring.                          ::::  // [447][446]
          : NEXT_NEXT : Isolate  mirroring to individual   ::::  // [447][446]
          :           : levels. This will allow us to      ::::  // [447][446]
          :           : draw decorative frames around      ::::  // [447][446]
          :           : levels. And then we can re-make    ::::  // [447][446]
          :           : old 30_x_30 atomic alice levels    ::::  // [447][446]
          :           : within those frames.               ::::  // [447][446]

    [447] : Dense Mirroring Mode Is Finished. :::::::::::::::::  // [448][447]
          : NEXT : Mirror only within the level that we     :::  // [448][447]
          :      : clicked inside of. I think this will     :::  // [448][447]
          :      : help design decorative boarders in which :::  // [448][447]
          :      : we can place old[ Atomic Alice ]levels.  :::  // [448][447]

    [448] : Stubbing in isolated mirror mode functions. :::::::  // [449][448]

    [449] : 1. Created Global_Tile_Type ( t _ gtc )       :::::  // [450][449]
          : 2. Created Local__Tile_Type ( t _ ltc )       :::::  // [450][449]
          : 3. Stubbed in ( t _ gtc )===>( t _ ltc )func  :::::  // [450][449]
          : 4. Stubbed in ( t _ ltc )===>( t _ gtc )func  :::::  // [450][449]

    [450] : 1 : Added "m_te7" member to type[ t_gtc ].      :::  // [451][450]
          : 2 : Added "m_te7" member to type[ t_ltc ].      :::  // [451][450]
          : 3 : Added ( gtc )==>( ltc ) call to SYMRADI_ISO :::  // [451][450]
          : 4 : Added ( gtc )==>( ltc ) call to SYMBILA_ISO :::  // [451][450]

    [451] : Global To Local Conversion Function Done.    ::::::  // [452][451]
          : NEXT : Local To Global Conversion Func Body. ::::::  // [452][451]
          : NEXT_NEXT : Test code for conversion funcs.  ::::::  // [452][451]

    [452] : Local to Global Conversion Function  ::::::::::::::  // [453][452]
          : within the "TileBoi" sub-system.     ::::::::::::::  // [453][452]
          : NEXT: Unit_Tests :                   ::::::::::::::  // [453][452]
          :     : UnitTest #1 : (gtc)===>(ltc);  ::::::::::::::  // [453][452]
          :     : UnitTest #2 : (ltc)===>(gtc);  ::::::::::::::  // [453][452]

                                                                
    [453] : Unit test code for (global)<===>(local)    ::::::::  // [454][453]
          : tile coordinates. We need this for sanity  ::::::::  // [454][453]
          : of mind before we continue with our        ::::::::  // [454][453]
          : localized tile brush code.                 ::::::::  // [454][453]

    [454] : Basic Isolated Radial Code Function is working. :::  // [455][454]
          : Full logic of isolated-radial code is not       :::  // [455][454]
          : yet finished.                                   :::  // [455][454]

    [455] :::::::::::::::::::::::::::::::::::::::::::::::::::::  // [456][455]
          1. Stubbed in shell/container function for       ::::  // [456][455]
             generic u32 binary tile rotation helper       ::::  // [456][455]
             function. [ F_MIRMAID _ AM6 _ U32 _ ROT_DIR ] ::::  // [456][455]
                                                           ::::  // [456][455]
          2. Finished Counter Clockwise Tile Rotation Func.::::  // [456][455]
             [ F_MIRMAID _ AM6 _ U32 _ ROT_CCW ]           ::::  // [456][455]
                                                           ::::  // [456][455]
          NEXT : Cut the body out of:                      ::::  // [456][455]
               : [ F_MIRMAID _ AM6 _ U32 _ ROT_C_W ]       ::::  // [456][455]
               : and paste it into our[ ROT_DIR ]          ::::  // [456][455]
               : helper function.                          ::::  // [456][455]
    :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  // [456][455]

    [456] : Rotation Counter-Clock-Wise(CCW) ::::::::::::::::::  // [457][456]
          : is finished. AKA: ANTI-CLOCKWISE ::::::::::::::::::  // [457][456]
          : ( The helper function is done )  ::::::::::::::::::  // [457][456]

    [457] : Isolated radial brush can now perform  ::::::::::::  // [458][457]
          : "Light" and "Dense" radial mirroring.  ::::::::::::  // [458][457]

    [458] : Basic X/Y Isolated Mirroring code. ::::::::::::::::  // [459][458]
          : NON-DENSE mode only.               ::::::::::::::::  // [459][458]

    [459] : When mirror brush is in isolated mode and the :::::  // [460][459]
          : dense bit is set, the brush will have prongs  :::::  // [460][459]
          : added to it that face the horizontal and      :::::  // [460][459]
          : vertical midlines.                            :::::  // [460][459]

    [460] : Rotation of internals of auto-tile in   :::::::::::  // [461][460]
          : isolated mode are only done when the    :::::::::::  // [461][460]
          : correct mirror-brush flag is turned on. :::::::::::  // [461][460]
          : NEXT : FUCKING HELL MAN.... Rotation brush       ::  // [461][460]
          :      : needs to account for the mirroring        ::  // [461][460]
          :      : bits inside of our auto tile.             ::  // [461][460]
          :      : If you press the "V" key while using      ::  // [461][460]
          :      : radial mirror brush, that set the         ::  // [461][460]
          :      : "Y-Inversion" bit of the auto tiles.      ::  // [461][460]
          :      : When that bit is set, we have to          ::  // [461][460]
          :      : rotate in the opposite direction          ::  // [461][460]
          :      : to maintain perfect radial symmetry.      ::  // [461][460]
          :      :                                           ::  // [461][460]
          :      : NOTE: This means that SHADER#7 must       ::  // [461][460]
          :      :     : be used as canonical reference      ::  // [461][460]
          :      :     : for how to mirror+rotate the        ::  // [461][460]
          :      :     : auto tiles.                         ::  // [461][460]
          :      :     : If we write another shader and      ::  // [461][460]
          :      :     : rotate+mirror in the opposite       ::  // [461][460]
          :      :     : order as SHADER#7, we will get      ::  // [461][460]
          :      :     : the wrong output and it will        ::  // [461][460]
          :      :     : probably go unnoticed for a bit     ::  // [461][460]
          :      :     : of time. SHADER#7's rotation+mirror ::  // [461][460]
          :      :     : code should be thought of as        ::  // [461][460]
          :      :     : "Canonical" and used as reference   ::  // [461][460]
          :      :     : for other shaders.                  ::  // [461][460]
          : SEE  : TODOGAL_001[ https://imgur.com/a/EGU934H ]::  // [461][460]
          :::::::::::::::::::::::::::::::::::::::::::::::::::::  // [461][460]

    [461] : Before we can modify our tile rotation     ::::::::  // [462][461]
          : function[ F_MIRMAID _ AM6_U32 _ ROT_DIR ]  ::::::::  // [462][461]
          : to account for mirroring flags in tile,    ::::::::  // [462][461]
          : we need to create the correct bitwise      ::::::::  // [462][461]
          : bit-maskers and bit-shifters in the        ::::::::  // [462][461]
          : data section.                              ::::::::  // [462][461]
          :                                            ::::::::  // [462][461]
          : It was a lot of code. So the data itself   ::::::::  // [462][461]
          : is the only thing we should [cover/add]    ::::::::  // [462][461]
          : in this delta.                             ::::::::  // [462][461]

    [462] : 1. Rotation Code Finished Maybe ?            ::::::  // [463][462]
          :                                              ::::::  // [463][462]
          : 2. We added a lot of lines of documentation  ::::::  // [463][462]
          :    and design thoughts for future rendering  ::::::  // [463][462]
          :    technology... "FourHundredAndSeventyFour" ::::::  // [463][462]
          :    lines to be exact. ( _4_7_4_ / 4_7_4 )    ::::::  // [463][462]

          :---------------------------------------------------:  // [464][463]
    [463] : Explaining the tenative pre-fabrication           :  // [464][463]
          : editor and memory layout. A lot of the details    :  // [464][463]
          : are... going to change, but here is what I am     :  // [464][463]
          : certain of:                                       :  // [464][463]
          :---------------------------------------------------:  // [464][463]
          : 1 : Prefab data is stored in texture memory       :  // [464][463]
          :   : within: ___mm3___ AND ___mm7___               :  // [464][463]
          :   : master memory cells.                          :  // [464][463]
          :---------------------------------------------------:  // [464][463]
          : 2 : Prefab editor is going to have the same       :  // [464][463]
          :   : exact spatial layout as levelpack editing.    :  // [464][463]
          :   : ( 3_X_3 grid of levelpacks known as "THE_DUM" )  // [464][463]
          :   : BUT!!! Only 8 of the level-cells within a     :  // [464][463]
          :   : levelpack can be drawn into because we only   :  // [464][463]
          :   : have 8 128_x_128 [PF8/PM8] cells.             :  // [464][463]
          :   : Sｏ, we will draw them in a ring of 8 cells.   :  // [464][463]
          :::::                                               :  // [464][463]
          ::::: Ring of 8 cells:       Typical Voids:         :  // [464][463]
          ::::: [ ][ ][ ][ ][ ]        [V][V][ ][V][V]        :  // [464][463]
          ::::: [ ][1][2][3][ ]        [V][ ][ ][ ][V]        :  // [464][463]
          ::::: [ ][4][ ][5][ ]        [ ][ ][ ][ ][ ]        :  // [464][463]
          ::::: [ ][6][7][8][ ]        [V][ ][ ][ ][V]        :  // [464][463]
          ::::: [ ][ ][ ][ ][ ]        [V][V][ ][V][V]        :  // [464][463]
          :::::                                               :  // [464][463]
          ::::: [B]:Blacked-Out level-map regions where       :  // [464][463]
          ::::: we COULD set data if was LEVEL-EDITOR         :  // [464][463]
          ::::: but where we CANNOT set data if it is         :  // [464][463]
          ::::: PRE-FAB editor.                               :  // [464][463]
          ::::: [ ][ ][B][ ][ ]                               :  // [464][463]
          ::::: [ ][ ][ ][ ][ ]                               :  // [464][463]
          ::::: [B][ ][B][ ][B]                               :  // [464][463]
          ::::: [ ][ ][ ][ ][ ]                               :  // [464][463]
          ::::: [ ][ ][B][ ][ ]                               :  // [464][463]
          :---------------------------------------------------:  // [464][463]
          : 3 : We are going to use a thing called            :  // [464][463]
          :   : "FILE896" , which stores a preview            :  // [464][463]
          :   : image in the center 7_X_7 grid of             :  // [464][463]
          :   : 128_X_128 pixel blocks.                       :  // [464][463]
          :   : Also contains:                                :  // [464][463]
          :   :                                               :  // [464][463]
          :   : 16 128_x_128 blocks for re-assembling         :  // [464][463]
          :   : original level pack data.                     :  // [464][463]
          :   :                                               :  // [464][463]
          :   : 08 128_x_128 blocks for re-assembling         :  // [464][463]
          :   : pre-fabrication map data.                     :  // [464][463]
          :---------------------------------------------------:  // [464][463]
          ::::: THESE THREE THINGS I AM CERTAIN OF.           :  // [464][463]
          ::::: It's the specifics I am unsure about.         :  // [464][463]
          :---------------------------------------------------:  // [464][463]
          : VIDEO NAME ON YOUTUBE : "Pre-Fab Plans 2022"      :  // [464][463]
          : (Video Number #4_6_3) ::::::::::::::::::::::      :  // [464][463]
          :---------------------------------------------------:  // [464][463]

    [464] : Stubbed in PIXDUMP ::::::::::::::::::::::::::::::::  // [465][464]

    [465] : Added konami key binding to allow for saving ::::::  // [466][465]
          : pix2048 to user hard disk via pixdump.run()  ::::::  // [466][465]
          : function.                                    ::::::  // [466][465]

    [466] : Save File Dialog Open For Pix2048 Saving. :::::::::  // [467][466]

    [467] : Revoke the object url created in previous video. ::  // [468][467]

    [468] : Toggle isolated mirroring mode on/off. ::::::::::::  // [469][468]
          :                                              ::::::  // [469][468]
          : NOTE : We should start making a list of      ::::::  // [469][468]
          :      : popular twitch streamers who play     ::::::  // [469][468]
          :      : indie games.                          ::::::  // [469][468]
          :      : EX[ https://www.twitch.tv/sodapoppin ]::::::  // [469][468]
          : www.twitch.tv/directory/game/Enter%20the%20Gungeon   // [469][468]
          : @WTF@:"Swap chain surface creation failed"   ::::::  // [469][468]
          :      : Why is webgl so crappy? I swear I am  ::::::  // [469][468]
          :      : not getting that fancy.               ::::::  // [469][468]

    [469] : The [A] key now toggles random brush on/off.   ::::  // [470][469]
          : We can see the random brush in ACTION NOW..    ::::  // [470][469]
          : HOWEVER : Not all of the random brush settings ::::  // [470][469]
          :         : are in use yet.                      ::::  // [470][469]
          : NEXT :::: Polish some of the random brush      ::::  // [470][469]
          : ::::::::: in video #4_7_0 before we start      ::::  // [470][469]
          : ::::::::: working on FILE896 in video #4_7_1   ::::  // [470][469]

    [470] : Random brush now uses the random range        :::::  // [471][470]
          : for TILE SIZE EXPONENT ( te7 ) and            :::::  // [471][470]
          : TILE VALUE ( v16 ). Random layer variables    :::::  // [471][470]
          : are NOT IMPLEMENTED YET. AND WE WONT BE       :::::  // [471][470]
          : GETTING TO THEM ANY TIME SOON BECAUSE         :::::  // [471][470]
          : NEXT VIDEO IS PART OF A "MAIN QUEST SERIES":  :::::  // [471][470]
          : NEXT: Video #4_7_1 : FILE896 System Stubbing. :::::  // [471][470]
          : MADE_A_THING[ https://imgur.com/a/b9QdjJS ]::::::::  // [471][470]
          : MADE_A_THING[ https://imgur.com/a/HxirPaB ]::::::::  // [471][470]

    [471] : 1 : Stubbed In : FILE896 SubSystem                   // [472][471]
          : 2 : Stubbed In : RGBA896 SubSystem (DataOnlyClass)   // [472][471]

    [472] : 1 : Added in FILE896 chunk enums       ::::::::::::  // [473][472]
          : 2 : Added FILE896 chunk lookup tables. ::::::::::::  // [473][472]


    [473] : 1. Added Chunk [ kind/type ] constants.      ::::::  // [474][473]
          : 2. Added Chunk [ kind/type ] lookup tables.  ::::::  // [474][473]
          : 3. Added quick L.U.T. Smoke Test.            ::::::  // [474][473]
                          (L.U.T. == Look Up Table)      ::::::  // [474][473]

    [474] : 1. Stubbed in bi-directional chunk copying func. ::  // [475][474]
          : 2. Stubbed in chunk LOAD FROM DISK function.     ::  // [475][474]
          : 3. Stubbed in chunk SAVE _TO_ DISK function.     ::  // [475][474]

    [475] : Finished the outer-most highest-abstraction   :::::  // [476][475]
          : functions for sub-system FILE896.             :::::  // [476][475]
          : NEXT : Chunk Copying Details.                 :::::  // [476][475]

    [476] : Stubbed in lookup tables that will help me    :::::  // [477][476]
          : take chunks of memory from rgba896 and place  :::::  // [477][476]
          : them into the correct location within a       :::::  // [477][476]
          : 4x4 grid overlayed over a 512_x_512 chunk     :::::  // [477][476]
          : of memory located in one of the master        :::::  // [477][476]
          : memory cells of PIX2048.                      :::::  // [477][476]

    [477] : Constants to help us understand what "THE_LER" ::::  // [478][477]
          : is better. As we need to understand what this  ::::  // [478][477]
          : thing is if we are to understand our save      ::::  // [478][477]
          : file format (FILE896/RGBA896) and how the      ::::  // [478][477]
          : thumbnail image is generated.                  ::::  // [478][477]
          :                                                ::::  // [478][477]
          : ADDENDUM :                                     ::::  // [478][477]
          :     As I was writing this, I confused          ::::  // [478][477]
          :     "THE_DUM" with "THE_LER"... "THE_LER"      ::::  // [478][477]
          :     is a new [name/concept] invented in        ::::  // [478][477]
          :     this [ delta/video ]. Reason being that    ::::  // [478][477]
          :     I thought I was talking about "THE_DUM"    ::::  // [478][477]
          :     when I was actually talking about          ::::  // [478][477]
          :     something else, something else I will      ::::  // [478][477]
          :     now call "THE_LER" from here on out.       ::::  // [478][477]

    [478] : Moved [ FILE896 / RGBA896 ] lookup tables  ::::::::  // [479][478]
          : from the "DATA" section to "LOOKUP TABLE"  ::::::::  // [479][478]
          : section of code base. For obvious reasons. ::::::::  // [479][478]

*** *************************************** CHANGE_LOG [CLB] ***    [088]
*** *************************************** CHANGE_HISTORY _ ***    [088]
*** *************************************** MISC_DELTA_NOTES **/
//:#_SPIRALLING_INTO_INSANITY_#:[476]:=======================://    [476]
//:#_MENTAL_CLARITY_SCORE_#####:[476]:=======================://    [476]
/** NEWEST ENTRIES GO CLOSER TO TOP OF FILE **************** ***    [476]
                                                                 // [---]
                                                                 // [---]
    [479] : MCS_FATIGUE_HIDES_DIZZY     :::::::::::::::::::::::  // [479]
    [478] : MCS_DIZZY_LIGHT_CAFFINATED  :::::::::::::::::::::::  // [478]
    [477] : MCS_DIZZY_AFTER_333_JUMPS   :::::::::::::::::::::::  // [477]
    [476] : MCS_DIZZY_NO_BLURRED_VISION :::::::::::::::::::::::  // [476]
                                                                 // [---]
                                                                 // [---]
    -----------------------------------------------------------  // [476]
    [KEY] :                                                      // [478][476]
                                                                 // [---]
            MCS_FATIGUE_HIDES_DIZZY ::::                         // [479]
            I cannot tell if I have any more brain-fog.          // [479]
            Possibly I do, but do not notice it because of       // [479]
            fatigue from getting tired enough to go to           // [479]
            sleep. Heavy eyelids.                                // [479]
            We should do 333 jumps on trampoline first           // [479]
            thing in the morning.                                // [479]
                                                                 // [---]
            MCS_DIZZY_LIGHT_CAFFINATED :                         // [478]
            I am not sure if circulation is returning   to       // [478]
            my brain via a very delayed response from   ||       // [478]
            jumping on the trampoline, or if caffiene   ||       // [478]
            and fatigue, when combined together makes   ||       // [478]
            the brain fog unnoticable for some reason.  ||       // [478]
                                                                 // [---]
            MCS_DIZZY_NO_BLURRED_VISION :                        // [476]
            Feels like my brain isn't getting enough             // [476]
            oxygen. But vision is not blurred. Focus             // [476]
            is highly disrupted. But not in that                 // [476]
            typical "learning is frusterating" way or            // [476]
            "darting all over" or "annoying to focus             // [476]
            low blood sugar way". It feels like what             // [476]
            I hear some people call "brain fog".                 // [476]
                                                                 // [---]
            MCS_DIZZY_AFTER_333_JUMPS :                          // [477]
            I did 333 jumps on trampoline to get my              // [477]
            cardio in and help out my brain. Still               // [477]
            feel the brain fog.                                  // [477]
                                                                 // [476]
*** ******************************************************** **/    [476]
//:=======================:#_SPIRALLING_INTO_INSANITY_#:[476]://    [476]
//:=======================:#_MENTAL_CLARITY_SCORE_#####:[476]://    [476]
//:HASHTAG_OR_ATTED_COMMENTS:[085]:==========================://
/** ******************************************************** ***

    [ABOUT_THIS_SECTION] :                                       // [085]
                                                                 // [085]
        Decided it is better for workflow to have @atted@        // [085]
        and #hashed# comments in same section.                   // [085]
                                                                 // [085]
    @ABOUT_THIS_SECTION@ : Marks Section Explanation.            // [085]
    @ATS@ : [ATS]:[ about this struct ]or[ about this section ]  // [085]
                                                                 // [085]
    #_HOTEL13_COMMENT_WORKFLOW_# :                               // [085]
                                                                 // [085]
        Think about locality. The thing I go to the              // [085]
        most when coding is the hashtagged and atted             // [085]
        comments. So make a section for EITHER here              // [085]
        and put at bottom of file. The next most                 // [085]
        common thing for me to touch is "MISC_DELTA_NOTES"       // [085]
        so make a [THIS_COMMITS_DELTA_NOTE] that only            // [085]
        has one delta note in it BELOW this section,             // [085]
        and move it to the maian[ MISC_DELTA_NOTES ]             // [085]
        when it is ready.                                        // [085]
                                                                 // [085]
    #_TIK_TIMETRAVEL_# :                                         // [085]
                                                                 // [085]
        We might want to "backdate" a timestamp. So              // [085]
        this gaurantees us 1 hour's worth of backdating          // [085]
        when the game starts.                                    // [085]
                                                                 // [085]
            30FPS == 2 hours backdating.                         // [085]
                                                                 // [085]
            60FPS == 1 hour  backdating.                         // [085]
                                                                 // [085]
            I don't want to modify code based on framerate.      // [085]
            So... Just assume we have 1 hours worth of           // [085]
            back dating no matter what the framerate.            // [085]
                                                                 // [085]
    #_1_HOUR_BACKDATE_# :                                        // [085]
                                                                 // [085]
        Lets wait till , [_TIK_TIMETRAVEL_] to backdate.         // [085]
                                                                 // [085]
    #_SCRAPPED_REQUEST_ANIMATION_FRAME_#                         // [085]
                                                                 // [085]
        Scrapping this because it is more important              // [085]
        to me that [simulation/logic] code is                    // [085]
        called when it needs to be called. We can                // [085]
        worry about things like proper "v-sync"                  // [085]
        later when we have a fucking game.                       // [085]
                                                                 // [085]
        window.requestAnimationFrame(                            // [085]
                                                                 // [085]
            F_CLIGAME_GUL                                        // [085]
        );;                                                      // [085]
                                                                 // [085]
    F_CLIGAME_TIKLOOP : SEE[ F_CLIGAME_GUL | F_CLIGAME_TIK ]     // [085]
    F_CLIGAME_LOOP    : SEE[ F_CLIGAME_GUL | F_CLIGAME_TIK ]     // [085]
                                                                 // [085]
    @RECURSIVE@ : Making note of recursion in general or         // [085]
                : the site of a recursive function call.         // [085]
                                                                 // [085]
    #I32_MOD# : integer modulus.                                 // [085]
    #FP_NORM# : Floating Point Normalization.                    // [085]

    #D_TIK# : Slot value for "d_tik" uniform when uploading     // [086]
            : from cpu to gpu.                                  // [086]
                                                                // [086]
    #NO_LOC_TIK# : uniforms don't get layouts. Weird because    // [086]
                 : is see it in documentation here.             // [086]
                 :                                              // [086]
                 : https://www.khronos.org/opengl/wiki/         // [086]
                 :         Layout_Qualifier_(GLSL)              // [086]
                 :          #Explicit_uniform_location          // [086]
                                                                // [086]
    @ren_pin@ : RENder PIPeline index (of active pipeline)      // [086]
    @act_pid@ : Active Pipeline Id _DO_NOT_CACHE_IN_ARTGIRL_    // [086]
                                                                // [086]
    #POITROAE# : Mis Spelling Of[ PMOITROAE ]                   // [086]
    #PMOITROAE#: Pre-Mature Optimization Is The Root Of         // [086]
               : All Evil.                                      // [086]
               :  (Tagging possible optimization sites )        // [086]


    #_THE_TWO_MOST_IMPORTANT_DISCRETE_VALUES_# :---------------:   [087]
                                                               :   [087]
        const c_dum = 0x7FFF80 ;//: DiscreteUnits -THEDUM://   :   [098][087]
        const c_dut = 0x2222   ;//: DiscreteUnits - TILE ://   :        [087]
                                                               :        [087]
    :--------------: #_THE_TWO_MOST_IMPORTANT_DISCRETE_VALUES_#:        [087]
    #_EMPTY_SPACE_HAS_DIMENSIONS_# ----------------------------:        [087]
                                                               :        [087]
  -=-   +---------------------+  There are 13 levels in a      :   [163][087]
   |    |        +---+        |  "levelpack". Also known as    :   [163][087]
   |    |        | 0 |        |  a "hotel" hence system name   :   [163][087]
   |    |    +---+---+---+    |  "hotel13".                    :   [163][087]
   |    |    | 1 | 2 | 3 |    |                                :   [163][087]
   |    |+---+---+---+---+---+|  Each[ level / room ]is        :   [163][087]
r13_set || 4 | 5 | 6 | 7 | 8 ||  64x64 game tiles.             :   [163][087]
   |    |+---+---+---+---+---+|                                :   [163][087]
   |    |    | 9 |10 |11 |    |                                :   [163][087]
   |    |    +---+---+---+    |                                :   [163][087]
   |    |        |12 |        |                                :   [163][087]
   |    |        +---+        |                                :   [163][087]
  -=-   +---------------------+                                :   [163][087]
                                                               :   [163][087]
  -=-   +---------------------+  The 13 room hotel exists      :   [163][087]
   |    |+---+---+---+---+---+|  in a 5x5 grid of              :   [163][087]
   |    || 0 | 1 | 2 | 3 | 4 ||  level-sized cells.            :   [163][087]
   |    |+---+---+---+---+---+|                                :   [163][087]
   |    || 5 | 6 | 7 | 8 | 9 ||  We need to use a lookup       :   [163][087]
   |    |+---+---+---+---+---+|  table that can map between    :   [163][087]
g25_set ||10 |11 |12 |13 |14 ||  "grid cell indexes" and       :   [163][087]
   |    |+---+---+---+---+---+|  "room cell indexes".          :   [163][087]
   |    ||15 |16 |17 |18 |19 ||                                :   [163][087]
   |    |+---+---+---+---+---+|  ( r13 & g25 )                 :   [163][087]
   |    ||20 |21 |22 |23 |24 ||                                :   [163][087]
   |    |+---+---+---+---+---+|  r13 : Roomindexes : 0-to-12   :   [163][087]
  -=-   +---------------------+  g25 : GridIndexes : 0-to-24   :   [163][087]
                                                               :        [087]
                                                               :        [087]
        BEFORE we worry about what data maps to where,         :        [087]
        we need to take a step back and partition the          :        [087]
        space of our world. We need to know how many           :        [087]
        discrete units we have at our disposal to render       :        [087]
        what needs rendering.                                  :        [087]
                                                               :        [087]
        The is the __MOST__ a player can see of the            :        [087]
        worlmap at any given time. How many tiles is it?       :        [087]
                                                               :        [087]
                                                               :        [087]
        |<------------------@THE_DUM@------------------>|      :   [088][087]
        |<------------------@THEDUM@------------------->|      :   [088]
        |                                               |      :        [087]
        |<--- HOTEL --->|   #HDI_000#HDI_001#HDI_002#   |      :   [158][087]
        | AKA:LEVELPACK |   #HDI_003#HDI_004#HDI_005#   |      :   [158][087]
        |               |   #HDI_006#HDI_007#HDI_008#   |      :   [158][087]
        |  [ROOM/LEVEL] |                               |      :        [087]
        |       |       |                               |      :        [087]
        +-------V-------+---------------+---------------+      :        [087]
        |      [R]      |      [ ]      |      [ ]      |      :        [087]
        |   [ ][ ][ ]   |   [ ][ ][ ]   |   [ ][ ][ ]   |      :        [087]
        |[ ][ ][ ][ ][ ]|[ ][ ][ ][ ][ ]|[ ][ ][ ][ ][ ]|      :        [087]
        |   [ ][ ][ ]   |   [ ][ ][ ]   |   [ ][ ][ ]   |      :        [087]
        |      [ ]      |      [ ]      |      [ ]      |      :        [087]
        +---------------+---------------+---------------+      :        [087]
        |      [ ]      |      [ ]      |      [ ]      |      :        [087]
        |   [ ][ ][ ]   |   [ ][ ][ ]   |   [ ][ ][ ]   |      :        [087]
        |[ ][ ][ ][ ][ ]|[ ][ ][ ][ ][ ]|[ ][ ][ ][ ][ ]|      :        [087]
        |   [ ][ ][ ]   |   [ ][ ][ ]   |   [ ][ ][ ]   |      :        [087]
        |      [ ]      |      [ ]      |      [ ]      |      :        [087]
        +---------------+---------------+---------------+      :        [087]
        |      [ ]      |      [ ]      |      [ ]      |      :        [087]
        |   [ ][ ][ ]   |   [ ][ ][ ]   |   [ ][ ][ ]   |      :        [087]
        |[ ][ ][ ][ ][ ]|[ ][ ][ ][ ][ ]|[ ][ ][ ][ ][ ]|      :        [087]
        |   [ ][ ][ ]   |   [ ][ ][ ]   |   [ ][ ][ ]   |      :        [087]
        |      [ ]      |      [ ]      |      [ ]      |      :        [087]
        +---------------+---------------+---------------+      :        [087]
        |<-- 64 *  5 -->|                               |      :        [087]
        |<---- 320 ---->|                               |      :        [087]
        |<---- 320 * 3 -------------------------------->|      :        [087]
        |<---- 960 ------------------------------------>|      :        [087]
                                                               :        [087]
        We have 960 of the smallest game tiles across.         :        [087]
                                                               :        [087]
        They all need unique addresses, so if we were          :        [087]
        to render each tile as a single pixel, we would        :        [087]
        need AT LEAST a 10-bit number to be able to            :        [087]
        express all of the possible tile addresses.            :        [087]
                                                               :        [087]
        BIN[ 11 1111 1111 ]==DEC[ 1023 ]                       :        [087]
                                                               :        [087]
        The least amount of bits that can hold ( 960 - 1 ).    :        [087]
        ( 960-1 ) because address is [ 0 to 959 ].             :        [087]
                                                               :        [087]
        +--------------------------------------------------+   :        [087]
        | We might want to render the INTERNALS of a tile. |   :        [087]
        | This will require MORE THAN 10-bits of           |   :        [087]
        | addressing space.                                |   :        [087]
        +--------------------------------------------------+   :        [087]
                                                               :        [087]
        We want to do all calculataions with 32 bit numbers.   :        [087]
                                                               :        [087]
        BUT... Webgl uses float32 for a lot of things.         :        [087]
                                                               :        [087]
        How many "INTEGER" bits are in a float 32?             :        [087]
                                                               :        [087]
         |<- EXPONENT -->||<--------- 23 Bit Mantissa -------->|        [087]
         |               ||                                    |        [087]
    [ 1 ][ 111 1111 ][ 1 ][ 111 1111 ][ 1111 1111 ][ 1111 1111 ]        [087]
    [ 1    111 1111 ][ 1    111 1111 ][ 1111 1111 ][ 1111 1111 ]        [087]
      |                                                        :        [087]
    SignBit                                                    :        [087]
                                                               :        [087]
        +--------------------------------------------------+   :        [087]
        |                                                  |   :        [087]
        |  23 usable bits of a float32 in our webgl code.  |   :        [087]
        |                                                  |   :        [087]
        +--------------------------------------------------+   :        [087]
                                                               :        [087]
        23 bit unsigned range : DEC[ 0 - to 8,388,607 ]        :        [087]
                                HEX[ 0 - to 0x7F FFFF ]        :        [087]
                                                               :        [087]
                                                               :        [087]
        +--------------------------------------------------+   :   [098][087]
        |                                                  |   :   [098][087]
        |  0x7F_FF80 / 960u == 0x2222                      |   :   [098][087]
        |  0x7F_FF80 / 960u ==  8,738                      |   :   [098][087]
        |                                                  |   :   [098][087]
        +--------------------------------------------------+   :   [098][087]
                                                               :   [087]
        We have 0x2222 discrete units per game tile            :   [087]
        that is rendered in our camera.                        :   [087]
                                                               :   [087]
        |<-------------------- 0x2222 --------------------->|  :   [087]
        |                                                   |  :   [087]
        [0x0000][0x0001][0x0002][...][0x221F][0x2220][0x2221]  :   [087]
        [0x0001][      ][      ][...][      ][      ][      ]  :   [087]
        [0x0002][      ][      ][...][      ][      ][      ]  :   [087]
        [......][......][......][...][......][......][......]  :   [087]
        [0x221F][      ][      ][...][      ][      ][      ]  :   [087]
        [0x2220][      ][      ][...][      ][      ][      ]  :   [087]
        [0x2221][      ][      ][...][      ][      ][      ]  :   [087]
        |                                                   |  :   [087]
        |<------------- One Player Sized Tile ------------->|  :   [087]
        |<-------- AKA: One ALICE  Sized Tile ------------->|  :   [087]
        |<-------- AKA: One IVY    Sized Tile ------------->|  :   [087]
                                                               :   [087]
        const c_dum = 0x7FFF80 ;//: DiscreteUnits -THEDUM://   :   [098][087]
        const c_dut = 0x2222   ;//: DiscreteUnits - TILE ://   :   [087]
                                                               :   [087]
        var     duh =( c_dum /  3 );                           :   [087]
        var     dur =(   duh /  5 );                           :   [087]
        var     dut =(   dur / 64 );                           :   [087]
                                                               :   [087]
        ASS( c_dut == dut );                                   :   [087]
                                                               :   [087]
        //:#_AVOID_COGNITIVE_OVERLOAD_#:-------------------:   :   [087]
                                                           :   :   [087]
            DO_NOT_DECLARE_GLOBALLY[ c_duh ]( use : duh )  :   :   [087]
            DO_NOT_DECLARE_GLOBALLY[ c_dur ]( use : dur )  :   :   [087]
                                                           :   :   [087]
            Just compute them on the fly because I don't   :   :   [087]
            want to have to pick from a handful of globals :   :   [087]
            and have to remember which one I was supposed  :   :   [087]
            to use. We can change our mind later if we     :   :   [087]
            require optimizations.                         :   :   [087]
                                                           :   :   [087]
        //:-------------------:#_AVOID_COGNITIVE_OVERLOAD_#:   :   [087]
                                                               :   [087]
        WRONG[ dul ]FIX[ duh ]( H for Hotel, NOT L:LevelPack ) :   [087]
        WRONG[ dul ]FIX[ dur ]( R for Room , NOT L:Level     ) :   [087]
                                                               :   [087]
    :-------------------------: #_EMPTY_SPACE_HAS_DIMENSIONS_# :   [087]
    :#_THE_DUM_# / #THE_DUM# / @THE_DUM@ :---------------------:   [087]
                                                               :   [087]
        TAG[ THEDUM | thedum | the-dum | the dum | the_dum ]   :   [087]
                                                               :   [087]
        @THE_DUM@ : The currently loaded                       :   [087]
                  : [ hotels / levelpacks / sectors ]          :   [087]
                  : of the worldmap.                           :   [087]
                  :                                            :   [087]
                  : We can't keep the entire MMO in ram ,      :   [087]
                  : so this is the slice of the MMO worldmap   :   [087]
                  : that can be seen by                        :   [087]
                  : [ user / client / player ].                :   [087]
                                                               :   [087]
        THE_DUM != WORLDMAP         ( But closely related )    :   [087]
        THE_DUM != CAMERA RECTANGLE ( But closely related )    :   [087]
                                                               :   [087]
    :----------------------------------------------------------:   [087]
                                                                   [087]
    @G_TILE@: Game Sized Tile                                      [087]

                                                                    
    @d_vpc@ : Viewport VPC: (Canvas/GL-Viewport)                   [088]
    @d_vp0@ : Viewport VP0: (Destination/Screen        )           [088]
    @d_vp1@ : Viewport VP1: (Offscreen/Source/TileData )           [088]
                                                                   [088]
    #_VPC_VS_VP0_# / #_VP0_VS_VPC_# :                              [088]
                                                                   [088]
        d_vpc && d_vp0 are in the same coordinate space,           [088]
        d_vp0 is always WITHIN d_vpc.                              [088]
        d_vpc should always be size of canvas.                     [088]
                                                                   [088]
    @X_0@ : You mean lowercase[ x_0 ]. Data is always lowercase.   [088]
    @X_1@ : You mean lowercase[ x_1 ]. Data is always lowercase.   [088]
    @Y_0@ : You mean lowercase[ y_0 ]. Data is always lowercase.   [088]
    @Y_1@ : You mean lowercase[ y_1 ]. Data is always lowercase.   [088]

    @NOR_FCX@ : NORMALIZE : FCX inline function                    [089]
    @NOR_FCY@ : NORMALIZE : FCY inline function                    [089]
                                                                   [089]
    @raw_fcx@ : RAW(unedited) gl frag coord x axis, float.         [089]
    @raw_fcy@ : RAW(unedited) gl frag coord y axis, float.         [089]
                                                                   [089]
    @u_fcx@ : FragCoord.X - Unisgned 32bit integer version.        [089]
    @u_fcy@ : FragCoord.Y - Unsigned 32bit integer version.        [089]
                                                                   [089]
    @F_NOR_FCX@ : "F_" for "returns Float" here. norm(fcx)         [089]
    @F_NOR_FCY@ : "F_" for "returns Float" here. norm(fcy)         [089]
                                                                   [089]
    [U_CASE]: Upper Case / UpperCase / UpperCased                  [089]
                                                                   [089]
    @F_NAW_FCX@ : Normalized And Wrapped , frag coord x            [089]
    @F_NAW_FCY@ : Normalized And Wrapped , frag coord y            [089]
                                                                   [089]
    #_I_O_TEX_POINTLESS_# :                                        [089]
                                                                   [089]
        If we can just use "gl_FragCoord" was the                  [089]
        whole texture gradient quad setup pointless?               [089]
        ... maybe ... oh well.                                     [089]
                                                                   [089]
    #_NOR_CURRENTLY_DIVISION_BY_ZERO_# :                           [089]
                                                                   [089]
        The uniforms haven't been wired in yet,                    [089]
        so if we see a black screen instead of yellow,             [089]
        that would probably be okay because division               [089]
        by zero is undefined behavior.                             [089]
                                                                   [089]
    #_DO_NOT_COMBINE_PREFIXES_# :                                  [089]
                                                                   [089]
        Do not combine "hungarian notation" prefixes.              [089]
        If two prefixes are valid, use your descretion             [089]
        to pick the one that is "most important to know".          [089]
                                                                   [089]
        For example:                                               [089]
                                                                   [089]
            d_tik  -vs-  u_tik :                                   [089]
                                                                   [089]
            Probably more important to know that it is             [089]
            a piece of global data that exists on the              [089]
            CPU and GPU , so we should probably                    [089]
            stick with the name[ d_tik ]and NEVER                  [089]
            EVER write[ u_tik ]even though it is                   [089]
            indeed an unsigned 32 bit integer.                     [089]
                                                                   [089]
            WRITE[ d_tik ]NOT[ u_tik    ||     du_tik ]            [089]
            INVALID_BECAUSE_COMBINES_PREFIXES[ du_tik ]            [089]

    #DTICK_INITED# : Marking where[ d_tik ]initialized.            [090]

    #NOW_OPTIMIZED# : The code we wrote in an un-optimized         [091]
                    : way for our first draft has now              [091]
                    : been optimized.                              [091]

    #CPU_UPDATE_B4_GPUSYNC# :                                      [092]
                                                                   [092]
        Update[ d_vpc ]on the CPU side before doing all            [092]
        of your[ gpu/cpu ]sync calls.                              [092]

    @INC_REC@ : The variable is an "INClusive RECtangle"           [092]

    #_OLD_EVT_ASC_LOGIC_DOESNT_WORK_FOR_PLUS_MINUS_#            // [093]
                                                                // [093]
        The code below will __NOT__ work for the "+" and "-"    // [093]
        keys, so we have changed it.                            // [093]
                                                                // [093]
        var o_asc_key =(                                        // [093][068] 
            String.prototype.toUpperCase.call(                  // [093][068] 
            String.fromCharCode(                                // [093][068] 
                                                                // [093][068] 
                i_evt_key.keyCode                               // [093][068] 
                                                                // [093][068] 
            )||"[nil][o_asc_key]" ));;                          // [093][068] 
               
    u_fcx : Uint32 FragCoord.X , top-left origin.               // [094]
    u_fcy : Uint32 FragCoord.Y , top-left origin.               // [094]
    u_fc  : Denoting[ u_fcx /or/ u_fcy ]IN_DIAGRAM              // [094]
                                                                // [094]
    [     u_fc    ] [     u_fc    ] [     u_fc    ]             // [094]
    [A][ ][ ][ ][ ] [ ][ ][B][ ][ ] [ ][ ][ ][ ][C] <--THE_DUM  // [094]
                                                                // [094]
    Thinking if the frag coords were over this small of         // [094]
    a range, that [A],[B],[C] would be the discrete units       // [094]
    from "THE_DUM" I would pick. In this diagram                // [094]
    "THE_DUM" is only 15 discrete units in span.                // [094]
                                                                // [094]
    #_INSET_VP0_WITHIN_VPC_TO_LETTERBOX_# :                     // [094]
                                                                // [094]
        Right now VP0 === VPC , but if we ever want             // [094]
        to "letterbox" our rendering, all we need               // [094]
        to do is INSET[ VP0 ]within[ VPC ]instead of            // [094]
        make them an identical size.                            // [094]
                                                                // [094]
    @EDCL@: Expected_Dead_Code_Line (AKA:Unreachable)           // [094]
                                                                // [094]
    #_UNLIKELY_BUT_MATHEMATICALLY_POSSIBLE_# :----------------: // [094]
                                                              : // [094]
        It is possible that by taking the SMALLER             : // [094]
        axis of screen, and trying to make it 1/3             : // [094]
        of the larger axis, that we accidentially             : // [094]
        make the [1/3] axis LARGER than the                   : // [094]
        length of the screen on that axis.                    : // [094]
                                                              : // [094]
        A perfect case :                                      : // [094]
        9 x 3 ==> 9 x 3                                       : // [094]
                                                              : // [094]
        [ ][ ][ ] [ ][ ][ ] [ ][ ][ ]                         : // [094]
        [ ][ ][ ] [ ][ ][ ] [ ][ ][ ]                         : // [094]
        [ ][ ][ ] [ ][ ][ ] [ ][ ][ ]                         : // [094]
                                                              : // [094]
        The edge case I am worried about :                    : // [094]
        9 x 2 ==> 9 x 3 ( 9x3 isn't possible )                : // [094]
                                                              : // [094]
        [ ][ ][ ] [ ][ ][ ] [ ][ ][ ]                         : // [094]
        [ ][ ][ ] [ ][ ][ ] [ ][ ][ ]                         : // [094]
                                                              : // [094]
        This scenario will only happen if our client          : // [094]
        screen space is THINNER than 3x1 ratio.               : // [094]
    :---------------------------------------------------------: // [094]

    #_BLACKSECTION_OF_LETTERBOX_# :                             // [095]
                                                                // [095]
        We are in the non-render area of the shader             // [095]
        fragment coordinates. Just render black.                // [095]
        MAYBE UI STUFF here in future?                          // [095]
        UI stuff here probably a BAD IDEA since                 // [095]
        letterboxing varies depending on user's                 // [095]
        screen size.                                            // [095]

    @duh@ : DiscreteUnits (in) HOTEL (levelpack)                // [097]
    @dur@ : DiscreteUnits (in) ROOM  (level)                    // [097]
    @duf@ : USE[ dup ]                                          // [097]
    @dup@ : DiscreteUnits (in) PIXEL                            // [097]
    @duv@ : DiscreteUnits (in) [ VP0 || VP1 ]( du0 === du1 )    // [097]
    @du0@ : DiscreteUnits (in) VP0 Unit (DESTINATION VIEWPORT)  // [097]
    @du1@ : DiscreteUnits (in) VP1 Unit (       DATA VIEWPORT)  // [097]
                                                                // [097]
    #_DISCRETE_UNITS_IN_VIEWPORT_NOTE_# :                       // [097]
                                                                // [097]
        The total number of discrete (plank) units in           // [097]
        VP0 and VP1 should be IDENTICAL because we are          // [097]
        mapping a selection of data points selected             // [097]
        by VP1 onto the [ screen / VP0 ].                       // [097]
                                                                // [097]
        I reserve right to change code... But I __THINK__       // [097]
        we only need a[ u_duv ]in shader code and               // [097]
        __NOT__ [ u_du0 ]and[ u_du1 ].                          // [097]
                                                                // [097]
        DATE[ 2022_07_26 ]311PM[ KANJICODER ]                   // [097]
                                                                // [097]
    @SYNONYMOUS_VARIABLES@ :                                    // [097]
                                                                // [097]
        Variables tagged with this are the exact same           // [097]
        variable. Possibly should optimize using                // [097]
        #define in the code.                                    // [097]
                                                                // [097]
    #_ROTATING_SAMPLE_POINT_# :                                 // [097]
                                                                // [097]
        Instead of multi-sampling, we are going to              // [097]
        rotate our sample point around the extreme              // [097]
        corners of where a valid sample point can               // [097]
        lay. If a pixel [animate(s)/shimmer(s)] ,               // [097]
        we know that the pixel covers discrete                  // [097]
        units that belong to different                          // [097]
        [ partitions/materials/etc ].                           // [097]
                                                                // [097]
    #_DIA_U_DS0_# / #_DIA_U_DS1_# :---------------------------: // [097]
                                                              : // [097]
        A single pixel has many different [discrete/plank]    : // [097]
        units it could map to. We are doing all of our        : // [097]
        math with DISCRETE UNITS so we know EXACTLY WHAT      : // [097]
        THE FUCK WE ARE RENDERING. If we just lazily map      : // [097]
        one thing onto another using floating point           : // [097]
        percentages, solving anti-aliasing problems will      : // [097]
        be harder in the future because we have "FUZZY"       : // [097]
        logic for what we are actually rendering.             : // [097]
                                                              : // [097]
        |<------#u_dup#----------->|                          : // [097]
        |<------ u_dup.x --------->|                          : // [097]
         @u_ds0@ : DiscreteSample_MIN                         : // [097]
        +--|-----------------------+ ---=---   --=--          : // [097]
        | [0][ ][ ][ ][ ][ ][ ][ ] |    |        |            : // [097]
        | [ ][ ][ ][ ][ ][ ][ ][ ] |    |        |            : // [097]
        | [ ][ ][ ][ ][ ][ ][ ][ ] |    |        |            : // [097]
        | [ ][ ][ ][ ][ ][ ][ ][ ] |    |        |            : // [097]
        | [ ][ ][ ][ ][ ][ ][ ][ ] | ONE_PIXEL  u_dup.y       : // [097]
        | [ ][ ][ ][ ][ ][ ][ ][ ] |    |        |            : // [097]
        | [ ][ ][ ][ ][ ][ ][ ][ ] |    |        |            : // [097]
        | [ ][ ][ ][ ][ ][ ][ ][ ] |    |        |            : // [097]
        | [ ][ ][ ][ ][ ][ ][ ][1] |    |        |            : // [097]
        +-----------------------|--+ ---=---   --=--          : // [097]
                              @u_ds1@ : DiscreteSample_MAX    : // [097]
                                                              : // [097]
        0 ===means===> [ MIN / FIRST ]                        : // [097]
        1 ===means===> [ MAX / LAST  ]                        : // [097]
                                                              : // [097]
        Think parametric functions where                      : // [097]
        "t" goes from t_0 to t_1 .                            : // [097]
    :---------------------------------------------------------: // [097]

    #_FIXING_YOUR_FUCKUP_VIDEO_098_# :------------------------: // [098]
                                                              : // [098]
        #_WE_MAY_NEED_TO_REVISE_THIS_FOR_EVEN_DIVISIBILITY_#::: // [098]
                                                              : // [098]
            0x7FFFFF == all 23 usable bits set.               : // [098]
                        THIS IS WRONG FOR[ c_dum ]BECAUSE IT  : // [098]
                        IS NOT EVENLY DIVISIBLE When Doing:   : // [098]
                        c_dut =( 0x7FFFFF / 3 / 5 / 64 )      : // [098]
                                                              : // [098]
                        THIS IS:                              : // [098]
                        c_dut =( 0x7FFF80 / 3 / 5 / 64 )      : // [098]
                                                              : // [098]
            c_dum =( 0x7FFF80 ); //:THE_DUM://                : // [098]
            c_duh =( 0x2AAA80 ); //:HOTEL  ://                : // [098]
            c_dur =( 0x88880  ); //:ROOM   ://                : // [098]
            c_dut =( 0x2222   ); //:TILE   ://                : // [098]
                                                              : // [098]
        #_DEFINE_ALL_DISCRETE_PLANK_CONSTANTS_#:::::::::::::::: // [098]
                                                              : // [098]
            I am taking back what I said back in              : // [098]
            Tutorial[087]... We should define _ALL_           : // [098]
            of the discrete unit constants, even if           : // [098]
            it is more stuff to memorize, because I           : // [098]
            fucked up their values the first time             : // [098]
            I tried to make them.                             : // [098]
                                                              : // [098]
                      2*2*2*2*2*2 === 64                      : // [098]
            0x88880 / 2/2/2/2/2/2 === 0x2222                  : // [098]
                                                              : // [098]
            @DUA@ : Discrete_Unit_Assert                      : // [098]
    :---------------------------------------------------------: // [098]

    @i_oem@ : INPUT - On_Error_Message                          // [098]
    @oem@   :         On_Error_Message                          // [098]

    [MOD2]  @MOD2@  #MOD2#  : Doing Modulo  2 ( %2  ) by hand   // [---][099]
    [MOD3]  @MOD3@  #MOD3#  : Doing Modulo  3 ( %3  ) by hand   // [---][099]
    [MOD5]  @MOD4@  #MOD5#  : Doing Modulo  5 ( %5  ) by hand   // [---][099]
    [MOD64] @MOD64@ #MOD64# : Doing Modulo 64 ( %64 ) by hand   // [---][099]
                                                                // [---][099]
    @TMMC@: Tile Map Math Collision                             // [---][099]
                                                                // [---][099]
        Figure out what cell a given [pixel||unit] is within    // [---][099]
        by doing "tile map math collision". AKA: What cell      // [---][099]
        is the unit "colliding/overlapping" with.               // [---][099]
                                                                // [---][099]
    #_BRANCHLESS_CHECKERBOARD_# :-----------------------------: // [---][099]
                                                              : // [---][099]
        //:::::::::::::::::::::::::::::::::::::::::::::::://  : // [---][099]
        //: Figure Out The Checkerboard Value Of XY      ://  : // [---][099]
        //: coordinate of different geometry elements.   ://  : // [---][099]
        //: Calculations are BRANCHLESS way to calculate ://  : // [---][099]
        //: if BOTH ARE ODD ( 1 == 1 ) or BOTH ARE EVEN  ://  : // [---][099]
        //: ( 0 === 0 ).                                 ://  : // [---][099]
        //:                                              ://  : // [---][099]
        //:   X  &  Y ==> abs( X - Y ) ==>( 0 || 1 )     ://  : // [---][099]
        //:   -------                                    ://  : // [---][099]
        //:   0  &  1 ==> abs( 0 - 1 ) ==> 1             ://  : // [---][099]
        //:   1  &  0 ==> abs( 1 - 0 ) ==> 1             ://  : // [---][099]
        //:   0  &  0 ==> abs( 0 - 0 ) ==> 0             ://  : // [---][099]
        //:   1  &  1 ==> abs( 1 - 1 ) ==> 0             ://  : // [---][099]
        //:::::::::::::::::::::::::::::::::::::::::::::::://  : // [---][099]
                                                              : // [---][099]
        i_h02 =abs(                                           : // [---][099]
            I32( u_h03.x -(( u_h03.x / u_2)*u_2)) //:MOD2://  : // [---][099]
        -   I32( u_h03.y -(( u_h03.y / u_2)*u_2)) //:MOD2://  : // [---][099]
        );;                                                   : // [---][099]
                                                              : // [---][099]
    :---------------------------------------------------------: // [---][099]
    #_BE_CONSISTENT_WITH_VARIABLE_CONVENTIONS_# :-------------: // [---][099]
                                                              : // [---][099]
        @i_h01@/@h01@ : Did_You_Mean[ h02 /AKA/ i_h02 ] :     : // [---][099]
        @i_r01@/@r01@ : Did_You_Mean[ r02 /AKA/ i_r02 ] :     : // [---][099]
        @i_t01@/@t01@ : Did_You_Mean[ t02 /AKA/ i_t02 ] :     : // [---][099]
                                                              : // [---][099]
            If we are going to be consistent with or naming   : // [---][099]
            convention, a variable that is either a[ 0 ]      : // [---][099]
            or[ 1 ]gets a "02" post_fix, not a "01" post_fix. : // [173][099]
            ( Because there are "2 total possible values" )   : // [---][099]
    :---------------------------------------------------------: // [---][099]

    #_WHAT_IS_EDIGAME_# :                                       // [103]
                                                                // [103]
        //:----------------------------------------------://    // [103]
        //: @d_edigame_edi@ : Editor State               ://    // [103]
        //: @d_edigame_gam@ : Game   State               ://    // [103]
        //:                                              ://    // [103]
        //: Member variable names based on:              ://    // [103]
        //: d_hotel13_sam from HOTEL13.                  ://    // [103]
        //:                                              ://    // [103]
        //: For simplicity, any shared state is simply   ://    // [103]
        //: COPIED OVER from "edi" <==> "gam" when       ://    // [103]
        //: switching modes, rather than putting shared  ://    // [103]
        //: state in yet a 3rd object.                   ://    // [103]
        //:----------------------------------------------://    // [103]
                                                                // [103]
    #enu_edi# : Enumeration - EDItor mode                       // [103]
    #enu_gam# : Enumeration - GAMe   mode                       // [103]
                                                                // [103]
    #_WHY_NOT_CALL_IT_NEXT_# :                                  // [103]
                                                                // [103]
        From past experience I find it really annoying          // [103]
        for "next" (NEX) and "back" (BAK) commands to           // [103]
        infinitely loop rather than stop at the end.            // [103]
                                                                // [103]
        So if we are going to infinitely cycle                  // [103]
        through options, that needs to be it's own              // [103]
        command with that behavior, and we only                 // [103]
        cycle in ONE DIRECTION to limit how confusing           // [103]
        the behavior is.                                        // [103]
                                                                // [103]
        We will call the function[ F_CYC ]for "Cycle".          // [103]

    #_DOWN_HANDLER_WHEN_BEHAVING_AS_A_GAME_# :                  // [104]
                                                                // [104]
        Main key down handler for when[ AIM ]project is         // [104]
        behaving as a __GAME__.                                 // [104]
                                                                // [104]
    #_DOWN_HANDLER_WHEN_BEHAVING_AS_AN_EDITOR_# :               // [104]
                                                                // [104]
        Main key down handler for when[ AIM ]project is         // [104]
        behaving as a __EDITOR__.                               // [104]
                                                                // [104]
    #_HIGHEST_LEVEL_KEYBOARD_DOWN_HANDLER_# :                   // [104]
                                                                // [104]
        The keyboard handler that routes to either the          // [104]
        "EDITOR MODE" keyboard handler or the "GAME MODE"       // [104]
        keyboard handler, depending on the state of the         // [104]
        [ d_edigame_mod ]flag.                                  // [104]

    @camsnap_cel@ : What cell of 3x3 levelpack grid is          // [105]
                  : the numberkey associated with?              // [105]
                  : camsnap_cel == CameraSnap - Cell            // [105]

    #_OUT_OF_BOUNDS_DIAGNOSIS_# :                               // [106]
                                                                // [106]
        Darken the pixels if the sample point is                // [106]
        out of bounds, so that we can fix our                   // [106]
        rendering math.                                         // [106]
                                                                // [106]
        Looks like the TOP_LEFT origin is actually              // [106]
        correct, and the BOTTOM_RIGHT origin is                 // [106]
        stretching out too far. Probably because we             // [106]
        are calculation the "discrete units per pixel"          // [106]
        or whatever we called it, incorrectly.                  // [106]

    #_MV1_IS_MAGNITUDE_OF_VP1_THE_DATA_VIEWPORT_# :             // [107]
                                                                // [107]
        Why am I screaming about this? Because the line         // [107]
        of code under this comment was __WRONG__ and we         // [107]
        are fixing it now. So I am screaming with commentary    // [107]
        so that you know in NO UNCERTAIN TERMS what             // [107]
        we are supposed to be calculating here.                 // [107]
                                                                // [107]
        The magnitude (aka length) of VIEWPORT ONE (VP1).       // [107]
        VP1 == off screen data selection viewport.              // [107]

    #ZEBASIS# :                                                 // [108]
                                                                // [108]
        @zebasis@ == Zero Basis                                 // [108]
        The geometric element type that defines what it         // [108]
        means for the camera (camerah) to be __NEITHER__        // [108]
        zoomed-in nor zoomed-out.                               // [108]
                                                                // [108]
        For example, if the ZEBASIS is[ c_camerah_dut ],        // [108]
        then the camera is NEUTRAL when VP1 data viewport       // [108]
        is selecting exactly 1 game sized tile.                 // [108]
                                                                // [108]
        If ZEBASIS is[ c_camerah_dur ], the camera is           // [108]
        NEUTRAL when VP1 is selecting exactly an entire         // [108]
        [ ROOM / LEVEL ] worth of data.                         // [108]
                                                                // [108]
        The camera position itself is a discrete unit           // [108]
        in [worldspace/dumspace] that may or may not            // [108]
        snap to a geometric unit of the active ZEBASIS          // [108]
        type.                                                   // [108]
                                                                // [108]
    @zeb@ : ZEB == ZEBASIS , ZEBASIS == Zero Basis              // [108]
                                                                // [108]
    #_HOW_TO_USE_ZERO_BASIS_GEOMETRIC_ELEMENTS_# :              // [108]
                                                                // [108]
        Tells us how to rectify the issue that, the             // [108]
        geometric element we are using as a ZERO BASIS,         // [108]
        is a PERFECT SQUARE, yet the camera is most             // [108]
        likely a NON-SQUARE RECTANGLE.                          // [108]
                                                                // [108]
        Do we create our rectangle by INSCRIBING the            // [108]
        zero-basis shape? Or by CIRCUMSCRIBING the              // [108]
        zero-basis shape? Or do we perform NO ACTION,           // [108]
        and allow the rendering to become squashed              // [108]
        or stretched on a given axis?                           // [108]
                                                                // [108]
    #_CIR_CUM_DIAGRAM_# :-------------------------------------: // [108]
                                                              : // [108]
                +---=---+     +---=---++---=---++---=---+     : // [108]
                |       |     |       ||       ||       |     : // [108]
                |zebasis|     |<----------vp0---------->|     : // [108]
                |       |     |       ||       ||       |     : // [108]
                +---=---+     +---=---++---=---++---=---+     : // [108]
                                                              : // [108]
                +---=---+                                     : // [108]
                +=======+                                     : // [108]
                |       | <---------- c_camerah_cir_cum_inn   : // [108]
                +=======+                                     : // [108]
                +---=---+                                     : // [108]
                                                              : // [108]
        +=======================+                             : // [108]
        |       +---=---+       |                             : // [108]
        |       |       |       |                             : // [108]
        |       |       |       | <-- c_camerah_cir_cum_out   : // [108]
        |       |       |       |                             : // [108]
        |       +---=---+       |                             : // [108]
        +=======================+                             : // [108]
                                                              : // [108]
              +===========+                                   : // [108]
              | +---=---+ |                                   : // [108]
              | |       | |                                   : // [108]
              | |zebasis| | <-------- c_camerah_cir_cum_not   : // [108]
              | |       | |                                   : // [108]
              | +---=---+ |                                   : // [108]
              +===========+                                   : // [108]
                                                              : // [108]
    :---------------------------------------------------------:

    @zes@ : Zero Span In Discrete Units                          // [109]
    @D_U@: Discrete Units ( AKA: Plank Units )                   // [109]
    #Necessary#    : A necessary non-negotiable feature.         // [109]
    #FeatureCreep# : A "nice to have" but we don't have to.      // [109]
    #CAR# / @CAR@  : Constant_ARray (const array of consts)      // [109]

    @vp0_map@ : VP0 , Minor_Axis_Percentage                      // [110]
    @MAJA@    : MAJor Axis                                       // [110]
    @MINA@    : MINor Axis                                       // [110]

    #_WHY_MAXUNIT_MINUS_TWO_# :-------------------------------:  // [111]
                                                              :  // [111]
        We need to scale VP1 around an origin...              :  // [111]
        But if that origin is a "single discrete point"       :  // [111]
        that would mean our camera will always be an          :  // [111]
        ODD_NUMBER_OF_UNITS , that sounds fucking horrible.   :  // [111]
                                                              :  // [111]
        So, our "origin" of the camera is ACTUALLY            :  // [111]
        a 2x2 rectangle of discrete rendering units.          :  // [111]
                                                              :  // [111]
        [ camdu_x , camdu_y ] is the top-left cell            :  // [111]
        of this 2x2 rectangle.                                :  // [111]
                                                              :  // [111]
        +---=---=---+---=---=---+                             :  // [111]
        |           |           |                             :  // [111]
        |           |           |                             :  // [111]
        |  camdu_x  |           |                             :  // [111]
        |  camdu_y  |           |                             :  // [111]
        |           |           |                             :  // [111]
        |           |           |                             :  // [111]
        +---=---=---+---=---=---+                             :  // [111]
        |           |           |                             :  // [111]
        |           |           |                             :  // [111]
        |           |           |                             :  // [111]
        |           |           |                             :  // [111]
        |           |           |                             :  // [111]
        |           |           |                             :  // [111]
        +---=---=---+---=---=---+                             :  // [111]
                                                              :  // [111]
        If the camera origin was a POINT :  ( it's __NOT__ )  :  // [111]
                                                              :  // [111]
            THEN: c_camerah_maxunit === ( c_dum - 1 )         :  // [113][BUG][111]
                                                              :  // [111]
        If the camera origin was a 2X2 RECT : ( it __IS___ )  :  // [111]
                                                              :  // [111]
            THEN: c_camerah_maxunit === ( c_dum - 2 )         :  // [113][BUG][111]
                                                              :  // [111]
    :---------------------------------------------------------:  // [111]
                                                                 // [111]
    @EXAMPLE_PROBLEM@ : The diagram in the comments              // [111]
                      : represents an example case so            // [111]
                      : you don't go "WTF?" when wondering       // [111]
                      : why the formula looks the way            // [111]
                      : it does.                                 // [111]
                                                                 // [111]
    @sox@ : Snapped X                                            // [111]
    @soy@ : Snapped Y                                            // [111]
                                                                 // [111]
    @FUCK_YOUR_GARBAGE_COLLECTOR@ :                              // [111]
                                                                 // [111]
        Code exists to subvert garbage collection.               // [111]
        A very often-re-used temp variable probably.             // [111]
                                                                 // [112]
    @h_w@ : Half Width   ( 2022_08_05 )                          // [112]
    @h_h@ : Half Height  ( 2022_08_05 )                          // [112]
    @duo@ : Discrete_Units_Overflow                              // [112]
                                                                 // [---]
    @CAM_PAN@ : Camera Reference For Panning Operataion.         // [113]
    @PAN_CAM@ : You_Mean[ CAM_PAN ]( general to specific )       // [113]
                                                                 // [113]
    #Translate_Or_Shake# :------------------------------------:  // [113]
                                                              :  // [113]
        When the high level camera get's close enough to      :  // [113]
        the edge of the screen, there will start to be        :  // [113]
        NO VISIBLE CHANGE to the screen even though the       :  // [113]
        camera origin [ camdu_x , camdu_y ] is still moving   :  // [113]
        because of the corrections to[ VP1 ]that prevent      :  // [113]
        it from leaking outside of @THE_DUM@ (c_dum).         :  // [113]
                                                              :  // [113]
        To give a bit of feeback , I am going to add a        :  // [113]
        [ cam.shake_x , cam.shake_y ]modifier flag that       :  // [113]
        will make the camera shake if you are forcing         :  // [113]
        it further and further into the edge of               :  // [113]
        the renderable space. Maybe make it shake             :  // [113]
        harder and harder depending on how deep               :  // [113]
        into the edge you are... Yes... Do that.              :  // [113]
                                                              :  // [113]
        Hmm... But the PANNING function is __NOT__ the place  :  // [113]
        to apply that kind of shake feedback. That would      :  // [113]
        be something for[ CAMERAH_VP1 ].                      :  // [113]
                                                              :  // [113]
        Keep this code for reference, it is not               :  // [113]
        quite correct.                                        :  // [113]
                                                              :  // [113]
            b_0 & b_1 should not be the HARD LIMITS,          :  // [113]
            but the limits for when VP1 is going to           :  // [113]
            leak over edge.                                   :  // [113]
                                                              :  // [113]
            --------------------------------------------------:  // [113]
                                                              :  // [113]
            n_x = cam.camdu_x + ( i_pax * pan_fac );          :  // [113]
            n_y = cam.camdu_y + ( i_pay * pan_fac );          :  // [113]
                                                              :  // [113]
            if( n_x < b_0 || n_x > b_1 ){                     :  // [113]
                                                              :  // [113]
                n_a = ( n_x >= 0 ? n_x : (0-n_x) );           :  // [113]
                c_s = ( n_a % 2 );                            :  // [113]
                if( n_x < b_0 ){ cam.shake_x =( 0 + c_s );};  :  // [113]
                if( n_x > b_1 ){ cam.shake_x =( 0 - c_s );};  :  // [113]
            }else{                                            :  // [113]
                cam.shake_x =(  0  );                         :  // [113]
                cam.camdu_x =( n_x );                         :  // [113]
            };;                                               :  // [113]
            if( n_y < b_0 || n_y > b_1 ){                     :  // [113]
                                                              :  // [113]
                n_a = ( n_y >= 0 ? n_y : (0-n_y) );           :  // [113]
                c_s = ( n_a % 2 );                            :  // [113]
                if( n_y < b_0 ){ cam.shake_y =( 0 + c_s );};  :  // [113]
                if( n_y > b_1 ){ cam.shake_y =( 0 - c_s );};  :  // [113]
            }else{                                            :  // [113]
                cam.shake_y =(  0  );                         :  // [113]
                cam.camdu_y =( n_y );                         :  // [113]
            };;                                               :  // [113]
                                                              :  // [113]
    :---------------------------------------------------------:  // [113]
                                                                 // [113]
    #_SHAKE_WHEN_PRESSED_# :----------------------------------:  // [113]
                                                              :  // [113]
        When panning into the boundaries of the world ,       :  // [113]
        we should shake the camera.                           :  // [113]
        SEE[ #Translate_Or_Shake# ]                           :  // [113]
                                                              :  // [113]
        +---=---=---=---=---=---=---=---=---=---+             :  // [113]
        |           +---=---=---=---+           |             :  // [113]
        |           |               |           |             :  // [113]
        |           |       +       |           |             :  // [113]
        |           |               |           |             :  // [113]
        |           +---=---=---=---+           |             :  // [113]
        +---=---=---=---=---=---=---=---=---=---+             :  // [113]
                                                              :  // [113]
        +---=---=---=---=---=---=---=---=---=---+             :  // [113]
        |               +---=---=---=---+       |             :  // [113]
        |               |               |       |             :  // [113]
        |               |       +       |       |             :  // [113]
        |               |               |       |             :  // [113]
        |               +---=---=---=---+       |             :  // [113]
        +---=---=---=---=---=---=---=---=---=---+             :  // [113]
                                                              :  // [113]
        +---=---=---=---=---=---=---=---=---=---+             :  // [113]
        |                   +---=---=---=---+   |             :  // [113]
        |                   |               |   |             :  // [113]
        |                   |       +       |   |             :  // [113]
        |                   |               |   |             :  // [113]
        |                   +---=---=---=---+   |             :  // [113]
        +---=---=---=---=---=---=---=---=---=---+             :  // [113]
                                                              :  // [113]
        +---=---=---=---=---=---=---=---=---=---+             :  // [113]
        |                      +---=---=---=---+|             :  // [113]
        |                      |               ||             :  // [113]
        |                      |       +       ||             :  // [113]
        |                      |               ||             :  // [113]
        |                      +---=---=---=---+|             :  // [113]
        +---=---=---=---=---=---=---=---=---=---+             :  // [113]
                                                              :  // [113]
        KEEP PANNING RIGHT WILL SHAKE SCREEN ON X AXIS :      :  // [113]
                                                              :  // [113]
        Because[ camdu_x , camdu_y ]is still moving,          :  // [113]
        but the resulting[ VP1 ]is not changing because       :  // [113]
        we are already pressed up against the boarder.        :  // [113]
                                                              :  // [113]
        +---=---=---=---=---=---=---=---=---=---+             :  // [113]
        |                      +---=---=---=---+|             :  // [113]
        |                      |               ||             :  // [113]
        |                      |           +   ||             :  // [113]
        |                      |               ||             :  // [113]
        |                      +---=---=---=---+|             :  // [113]
        +---=---=---=---=---=---=---=---=---=---+             :  // [113]
                                                              :  // [113]
        +---=---=---=---=---=---=---=---=---=---+             :  // [113]
        |                      +---=---=---=---+|             :  // [113]
        |                      |               ||             :  // [113]
        |                      |              +||             :  // [113]
        |                      |               ||             :  // [113]
        |                      +---=---=---=---+|             :  // [113]
        +---=---=---=---=---=---=---=---=---=---+             :  // [113]
                                                              :  // [113]
        [ @nopan_x@ , @nopan_y@ ]                             :  // [113]
                                                              :  // [113]
        Try to pan RIGHT ( > > > ) one more time will         :  // [113]
        turn the[ nopan ] flag on. This should also           :  // [113]
        give us some type of feedback, but I don't            :  // [113]
        know what yet.                                        :  // [113]
                                                              :  // [113]
        +---=---=---=---=---=---=---=---=---=---+             :  // [113]
        |                      +---=---=---=---+|             :  // [113]
        |                      |              !||             :  // [113]
        |                      |   > > > > >  +||             :  // [113]
        |                      |              !||             :  // [113]
        |                      +---=---=---=---+|             :  // [113]
        +---=---=---=---=---=---=---=---=---=---+             :  // [113]
                                                              :  // [113]
    :---------------------------------------------------------:  // [113]
                                                                 // [113]
                                                                 // [113]
    #nopan_x#  &&  #nopan_y# :                                   // [113]
                                                                 // [113]
        Non-zero when a panning action was IGNORED because       // [113]
        it was going to make[ camdu_x , camdu_y ] go out         // [113]
        of bounds.                                               // [113]
                                                                 // [113]
        This will be used in a similiar way to the notes         // [113]
        in[ #_SHAKE_WHEN_PRESSED_# ].                            // [113]
                                                                 // [113]
        Not implementing yet because we have already             // [113]
        written enough code for video #113                       // [113]
                                                                 // [113]
                                                                 // [113]
    #_WHAT_IS_NOPAN_FOR_# :                                      // [113]
                                                                 // [113]
        [ nopan_x , nopan_y ]is used to let the                  // [113]
        camera remember that it "ignored" the last               // [113]
        pan command because it would put the camera              // [113]
        origin out of bounds.                                    // [113]
                                                                 // [113]
        We will use this for some type of user feeback.          // [113]
        RELATED_NOTE[ #_SHAKE_WHEN_PRESSED_# ]                   // [113]
                                                                 // [113]
    #[ cam.shake_x ]# :                                          // [113]
    #[ cam.shake_y ]# :                                          // [113]
                                                                 // [113]
        DO NOT DO THIS FOR THE FORESEEABLE FUTURE.               // [113]
                                                                 // [113]
        The shaking I want to do is built into                   // [113]
        [ F_CAMERAH_VP1 ]at a lower level than this.             // [113]
                                                                 // [113]
        Eventually we will probably want an environmental        // [113]
        screen shake for when bombs go off. That                 // [113]
        MIGHT entail adding[ cam.shake_x , cam.shake_y ]...      // [113]
                                                                 // [113]
        But the "tactile feedback" I want for when               // [113]
        user pushes the camera into the bounds of the            // [113]
        words is __NOT__ going to use any camera                 // [113]
        state [ members / variables ] to achieve this.           // [113]
                                                                 // [113]
    @pan_fac@ : PANning scalefactor to affect panning speed.     // [113]
    @fac_pan@ : YOU_MEAN[ pan_fac ]( @P_O_A_S_T_I@ )             // [113]
    @P_O_A_S_T_I@ : Pick One And Stick To It                     // [113]
                                                                 // [---]
    @ARK_K_0@ : ARrowKey - FIRST                                 // [114]
    @ARK_K_1@ : ARrowKey - LAST                                  // [114]
    @ARK_LEF@ : ARrowKey - LEFT                                  // [114]
    @ARK_DOW@ : ARrowKey - DOWN                                  // [114]
    @ARK_UPP@ : ARrowKey - UPP                                   // [114]
    @ARK_RIG@ : ARrowKey - RIGHT                                 // [114]

    #_LOW_L_CAM_C_# :  Low Level Camera Controls                 // [115]
    #_HIG_L_CAM_C_# : High Level Camera Controls                 // [115]
    @F_KEYMAST_ZOM@ : KeyboardMaster - ZOOM handler.             // [115]
    @i_dvx@ : INPUT( to function ) : Direction_Vector_X          // [115]
    @i_dvy@ : INPUT( to function ) : Direction_Vector_Y          // [115]
    @_DIRTY_FLAG_@ : If something is dirty it means that it      // [115]
                   : has been altered in some way that           // [115]
                   : requires us to update other parts of        // [115]
                   : the system for those changes to             // [115]
                   : be fully applied. Basically it means        // [115]
                   : we have a "cache coherency" problem         // [115]
                   : that is in need of being fixed.             // [115]

    #_1TILE_PAN_# : Pan by 1 tile offset in low level code.      // [116]

    @d_camerah_vp1@ : Added because we need to calculate a       // [118]
                    : SIGNED[ vp1 ]value if we are to do         // [118]
                    : bounds checking.                           // [118]
                                                                 // [118]
    @POINTER@ : Tagging reference types where I                  // [118]
              : expect pointer-like behavior.                    // [118]
                                                                 // [118]
    @SIGNED@  : Tagging Variable As SIGNED (can be negative )    // [118]
                                                                 
    [!#!] : Denotes a delta where I put the                      // [119]
          : WRONG NUMBER ( [###] ) in a previous tutorial.       // [119]

    @d_camwall@ : A global telling us how "hard" the             // [121]
                : camera is pressed into the "wall"              // [121]
                : of the [ world / dum / renderable region ]     // [121]
                : Used to give better feedback.                  // [121]

    #_CAMERA_STRESS_FEEDBACK_# :                                 // [122]
                                                                 // [122]
        How "hard" is the camera pushed into the boundaries      // [122]
        of the renderable region? The greater the value          // [122]
        in[ d_camwall[ x_0 | x_1 | y_0 | y_1 ], the              // [122]
        more firmly you are pressed into the respective          // [122]
        sides.                                                   // [122]
                                                                 // [122]
    @INNOCENT_UNTIL_PROVEN_GUILTY@ :                             // [122]
                                                                 // [122]
        Flag defaults to "true" and we try to disprove it.       // [122]
                                                                 // [122]
    @nni@ : Non_Negative_Integer                                 // [122]

    #_CAMERA_STRESS_CODE_DIDNT_BELONG_HERE_# :                   // [123]
                                                                 // [123]
        The section of code labeled[ _NOPAN_CAMWALL_MAG_ ]       // [123]
        used to be here. We moved it into                        // [123]
        the[ CAMERAH_VP1 ]function where it belongs.             // [123]
                                                                 // [123]
    @SHORTHAND_MACRO@ : The variable only exists to save         // [123]
                      : column space in our code.                // [123]
                                                                 // [123]
    [WAI] / #WAI# / @WAI@ :-----------------------------------:  // [123]
                                                              :  // [123]
        WAI === " Where Am I ? "                              :  // [123]
                                                              :  // [123]
        When writing "WAI" in comments write it:              :  // [123]
        ----------------------------------------              :  // [123]
                                                              :  // [123]
            [WAI]                                             :  // [123]
                                                              :  // [123]
        ----------------------------------------              :  // [123]
        Because it is used in a similiar manner               :  // [123]
        as [ATF] ( About This Function )                      :  // [123]
                                                              :  // [123]
        "WAI" is used so when we do a "find in files"         :  // [123]
        search, we can see the "use case summary" of          :  // [123]
        a short hand variable.                                :  // [123]
                                                              :  // [123]
        EXAMPLE :                                             :  // [123]
                                                              :  // [123]
            let A =( ASS_NNI ///[WAI]:CameraStress/// );      :  // [123]
                                                              :  // [123]
            This means that you are in a section of code      :  // [123]
            where we are calculating "CameraStress" and       :  // [123]
            the shorthand variable "A" is being used          :  // [123]
            for these "CameraStress" calculations.            :  // [123]
    :---------------------------------------------------------:  // [123]
                                                                 // [123]
    #_MONOCHROME_STRESS_# :                                      // [123]
                                                                 // [123]
        Rather than tinting pixels red, lets make                // [123]
        pixels mono-chrome red based on their lumonosity.        // [123]
        Reason? To make it more OBVIOUS what I am looking at.    // [123]
                      
    @u_c_m@ : U32 - c_m , c_m == d_camwall MAX POSSIBLE VALUE    // [124]
    @f_c_m@ : F32 - c_m , c_m == d_camwall MAX POSSIBLE VALUE    // [124]
    @MPV@ / #MPV# / [MPV] :  Max Possible Value (Like:"m_i")     // [124]
                                                                 // [124]
    #_NOW_MAG_# : The variables here are now magnitudes rather   // [124]
                : than edge boundary markers as they were        // [124]
                : in video #122.                                 // [124]
                                                                 // [124]
    @RIGHTOUS@ : I can't spell, it's spelled:"RIGHTEOUS"         // [124]
                                                                 // [124]
    #FIX_001# : SEE[ #GFD_001# ]For Fix#1 notes.                 // [124]
                                                                 // [124]
    #FIX_002# :-----------------------------------------------:  // [124]
                                                              :  // [124]
        [WRONG/EVIL/INCORRECT  ] : U32 u_c_m =( c_dut / u_2 );:  // [124]
        [GOOD/RIGHTEOUS/CORRECT] : U32 u_c_m =( c_dum / u_2 );:  // [124]
                                                              :  // [124]
        u_c_m === U32 c_m , where c_m == d_camwall max value. :  // [124]
                                                              :  // [124]
        It is the "max stress value" that can exist on        :  // [124]
        any edge of the high level camera. By accidentially   :  // [124]
        making it the size of ONE TILE ( c_dut ) instead      :  // [124]
        of the size of the entire renderable space ( c_dum ), :  // [124]
        we end up calculating values that are in excess of    :  // [124]
        80,000% instead of values in the range 0 to 100 %.    :  // [124]
                                                              :  // [124]
        ( ( 0x7FFF80 / 2 ) / 0x002222 ) === 8738 === 0x1E0    :  // [124]
                                                              :  // [124]
        ( ( 0x7FFF80 / 2 ) / ( 0x002222 / 2 )  ) === 0x3C0    :  // [124]
          |<--ActualMax->|   |<-c_dut / 2 ->|                 :  // [124]
    :---------------------------------------------------------:  // [124]
                                                                 // [124]
    #VP1_NOT_VPC# :                                              // [124]
        We made the mistake of using "VPC" magnitude here        // [124]
        when it should have been "VP1". Noticable bug            // [124]
        where toggling letterboxing on/off changes render        // [124]
        can be observed when using "VPC" instead of "VP1".       // [124]
                                                                 // [---]
        UPDATE[ 2022_08_10 ] : YOU GOD DAMNED IDIOT!!!           // [134]
                                                                 // [134]
            VP1 is the data viewport, but we are trying          // [134]
            to find on-screen markers. Should be using           // [134]
            VP0. -KanjiCoder "AKA god damned idiot"              // [134]
                                                                 // [124]
    #_WE_ARE_CLOSE_RANT_# :                                      // [124]
                                                                 // [124]
          :---------------------------------------------------:  // [124]
          : We are close, but the shader code is              :  // [124]
          : still [ WRONG / INCORRECT ].                      :  // [124]
          :                                                   :  // [124]
          : ------------------------------------------------- :  // [124]
          :                                                   :  // [124]
          : I cannot think straight. It is [12:38] PM.        :  // [124]
          : I got up at 10PM yesterday. That is...            :  // [124]
          : 14 hours of mostly coding with short breaks       :  // [124]
          : in-between. There is no way in hell I can         :  // [124]
          : make "10 videos per day".                         :  // [124]
          :                                                   :  // [124]
          : 1 video per day === 999 days to 999 videos.       :  // [124]
          : 999 days is very roughly 3 years...               :  // [124]
          :                                                   :  // [124]
          : I'd very much like to be faster than that...      :  // [124]
          : 100 videos per month is what?                     :  // [124]
          : 100 / 30 === 3.333 videos per day...              :  // [124]
          :                                                   :  // [124]
          : I think "4 videos per day" is managable.          :  // [124]
          :---------------------------------------------------:  // [124]
                                                                 // [124]
          :---------------------------------------------------:  // [124]
    [124] : Edited shader code. VP1 Camera stress             :  // [124]
    [OLD] : boundary markers move way too fucking             :  // [124]
          : fast and exceed the halfway point of              :  // [124]
          : the screen.                                       :  // [124]
          :                                                   :  // [124]
          : #_WE_ARE_CLOSE_RANT_#                             :  // [124]
          :                                                   :  // [124]
          : Editor's note :                                   :  // [124]
          :     This was the original delta comment (#124#)   :  // [124]
          :     but I started finding the bugs as I was       :  // [124]
          :     filming the summary video.                    :  // [124]
          :---------------------------------------------------:  // [124]

    @BAD_DEP_ORD@ : Bad Dependency Ordering ,                    // [125]
                  : means the source code is written in          // [125]
                  : the wrong order.                             // [125]
                                                                 // [125]
    #_RES_CAN_BEFORE_CAMERAH_INCLUDED_# :                        // [125]
                                                                 // [125]
        Looking at the code, [ F_RES_CAN ]is written in          // [125]
        the wrong location now. It references a function         // [125]
        before that function is declared. We should              // [125]
        possibly fix this if we can.                             // [125]
        ( F_RES_CAN references F_CAMERAH_VP1 before )            // [125]
        ( the VP1 functions section occurs.         )            // [125]

    #NUMPAD_TO_HOTEL_CELL_INDEX_LUT# :                           // [127]
                                                                 // [127]
        Takes a number key represented by values                 // [127]
        1 to 9 and maps them to the hotel cell index.            // [127]
        The[ hi9 ]value is the 1D value representing             // [127]
        a [ hotel / levelpack ]location in the                   // [127]
        3x3 grid of [ hotel/levelpack(s) ]within                 // [127]
        THE_DUM ( the renderable region of worldmap ).           // [127]

    STOP_FUCKING_UP_YOUR_FOOTNOTES_PLACEHOLDER_128               // [128]

    @zeb_m_i@ : ZEroBasis (enum) Max_Index                       // [129]
                                                                 // [129]
    #_NUMPAD_CYCLE_# :                                           // [129]
                                                                 // [129]
        Sequential presses of the same number key                // [129]
        should cycle the "but_not" value.                        // [129]
        ( but_not == Button _ NumberOfTimes (pressed) )          // [129]
                                                                 // [129]
        "but_not" will help us cycle through zerobasis(zeb)      // [129]
        values.                                                  // [129]
                                                                 // [129]
    #_SEXYCAM_SETS_ZEROBASIS_# :                                 // [129]
                                                                 // [129]
        The state of sexycam is used to modify the               // [129]
        camerah zerobasis value, this creates a snappy           // [129]
        "zoom in" effect.                                        // [129]
                                                                 // [129]
    #TIMES_PRESSED___TO___ZEB_ENU# :                             // [129]
                                                                 // [129]
        Convert number of times in a row a numberkey             // [129]
        on the numpad was pressed to the corresponding           // [129]
        zero basis enumeration we should use.                    // [129]
                                                                 // [129]
        We want to progressively "zoom in" deeper and            // [129]
        deeper with successive presses of the __SAME__           // [129]
        number key, so this is basically a table                 // [129]
        that inverts the zero basis and makes it                 // [129]
        count down instead of up.                                // [129]
                                                                 // [129]
    @DEFAULTZOOM@ : Default Zoom Level, which is ZERO            // [129]
                  : because it is "NEUTRAL"                      // [129]
                  : (neither zoomed in or zoomed out )           // [129]
                                                                 // [129]
    STOP_FUCKING_UP_YOUR_FOOTNOTES_PLACEHOLDER_129               // [129]

    #_Now_Handles_Its_Own_Number_Range_# :                       // [131]
                                                                 // [131]
        SEXYCAM_PAD_NUM now handles the number range of numkey   // [131]
        press itself, guard removed from the caller of           // [131]
        SEXYCAM_PAD_NUM                                          // [131]

    STOP_FUCKING_UP_YOUR_FOOTNOTES_PLACEHOLDER_132               // [132]

    #OUT_FIX_ONLY# :                                             // [133]
                                                                 // [133]
        Outscribing "THE_DUM" will ALWAYS lead to being          // [133]
        out of bounds for camzoom == [ 0.0 to (0.0-1.0) ]        // [133]
                                                                 // [133]
        I want to "fix" this problem in a way that does          // [133]
        not result in "no feedback"....                          // [133]
                                                                 // [133]
        For now... Let's just clamp the camera width and         // [133]
        height, but only if the camera is configured             // [133]
        to outscribe...                                          // [133]
                                                                 // [133]
        Or we could set the maximum marker for zooming           // [133]
        out to be[ c_dur ]instead of[ c_dum ]when                // [133]
        outscribing... Which would also change                   // [133]
        zoom speed for outscribing and inscribing.               // [133]
                                                                 // [133]
    #_DUM_MAX_# : c_dum is used as a "maximum zoom out"          // [133]
                : anchor value. Just making a note of            // [133]
                : this again because it took me a bit            // [133]
                : to find this location in the code.             // [133]
                                                                 // [133]
    #_OUTSCRIBE_THE_DUM_IS_TROUBLE_# :                           // [133]
                                                                 // [133]
        Outscribing[ c_dum ]is trouble because it will           // [133]
        ALWAYS lead to out of bounds[ vp1 ]if camzoom            // [133]
        is neutral or zoomed out.                                // [133]
                                                                 // [133]
        We will "fix" the problem in a hackish way               // [133]
        that __WILL__ distort the camera.                        // [133]

    #_BOUNDCHECK_CAMWALL_# :                                     // [134]
                                                                 // [134]
        Make sure[ d_camwall ]is not larger than it should       // [134]
        be if all of our math is correct.                        // [134]
                                                                 // [134]
    @c_w_lef@ : camera wall - Maximum Magnitude - LEFT  (side)   // [134]
    @c_w_rig@ : camera wall - Maximum Magnitude - RIGHT (side)   // [134]
    @c_w_top@ : camera wall - Maximum Magnitude - TOP   (side)   // [134]
    @c_w_bot@ : camera wall - Maximum Magnitude - BOTTOM(side)   // [134]
                                                                 // [134]
    #_VP1_IS_NOT_ON_SCREEN_# :                                   // [134]
                                                                 // [134]
        VP1:Viewport_One(1):                                     // [134]
            (Offscreen/Source/TileMapDataBitmap Viewport)        // [134]
                                                                 // [134]
        VP0:Viewport_Zero(0):                                    // [134]
            (Destination/Screen Viewport)                        // [134]
                                                                 // [134]
        No fucking wonder your shader code for camera            // [134]
        stress was wrong.                                        // [134]
                                                                 // [134]
    #VP0_NOT_VPC# :                                              // [134]
    #VP0_NOT_VP1# :                                              // [134]
                                                                 // [134]
        VPC : Does __NOT__ account for letterboxing.             // [134]
        VP0 : Does account for letterboxing.                     // [134]
        VP1 : Isn't even on the fucking screen you idiot!!!      // [134]
                                                                 // [134]
    #_RESTORE_TO_DEFAULT_CAMERA_BASIS_# :                        // [134]
                                                                 // [134]
        As of writing this, the "decimal key" on the             // [134]
        number pad should restore the default                    // [134]
        camera basis. Makes sense to have the                    // [134]
        camera basis restoration next to the                     // [134]
        "zoom extents" key.                                      // [134]

    @NOW_CLEAN@ : Marking a "dirty" flag as clean.               // [135]
    @NOW_DIRTY@ : Marking a "dirty" flag as dirty.               // [135]
    @REDUNDANT@ : The line of code could be removed.             // [135]
                                                                 // [135]
    @npa@     : Num_Pad_Action                                   // [135]
    @npa_000@ : Num_Pad_Action : Key 0                           // [135]
    @npa_dot@ : Num_Pad_Action : Key Dot (.)                     // [135]
    @npa_ent@ : Num_Pad_Action : Key Enter                       // [135]
                                                                 // [135]
    @zomext@  : TYPO_OF[ zoomext ]( Zoom Extents    )            // [135]
    @cirdef@  : TYPO_OF[ cir_def ]( CIR_cum DEFault )            // [135]
    @cirnex@  : TYPO_OF[ cir_nex ]( CIR_cum NEXT    )            // [135]
                                                                 // [135]
    @zoomext@ : Zoom Extents                                     // [135]
    @cir_def@ : cir_cum , DEFAULT                                // [135]
    @cir_nex@ : cir_cum , NEXT                                   // [135]
    @npa_num@ : Number_Pad_Action - Number Key                   // [135]
                                                                 // [135]
    #_NPA_NUM_# :                                                // [135]
                                                                 // [135]
        Unlike the bindings for other numpad keys,               // [135]
        we should never change this one. It is not               // [135]
        flexible. The number pad keys snapping to                // [135]
        different levelpacks(hotels) on THE_DUM                  // [135]
        is the feature behavior of "sexycam" system.             // [135]
                                                                 // [135]
        This is why "npa_num" is set to:                         // [135]
        "c_sexycam_act_npa_num" which seems like                 // [135]
        a cylical self-reference.                                // [135]
                                                                 // [135]
    #_SEXYCAM_MWM_# :                                            // [135]
                                                                 // [135]
        SexyCam Monkey_Wrench_Macros                             // [135]
                                                                 // [135]
        These tokens should be member variables                  // [135]
        not global top level namespaced variables.               // [135]

    #_BEHAVIORAL_CONSISTENCY_WITH_NEXTEXT_# :                    // [136]
                                                                 // [136]
        We want[ SEXYCAM_ZOOMEXT ]to work well with              // [136]
        [ SEXYCAM_NEXTEXT ], so use and manipulate               // [136]
        the[ .but_num ]and[ .but_not ]variables                  // [136]
        to achieve this in[ ZOOMEXT ]function.                   // [136]

    @NPE@:Num_Pad_Enterkey                                       // [137]

    @H13@: This tag means the code was stolen from HOTEL13.JS    // [144]

    #vp0_is_on_screen# : A reminder to me that vp0 is the        // [146]
                       : on-screen viewport of pixels.           // [146]
                                                                 // [146]
    #PT_OOB_OF_CANVAS# : Point is out of bounds of the           // [146]
                       : HTML5 Canvas.                           // [146]
                                                                 // [146]
    @DO_CALC_FORWARD_WITH@ :                                     // [146]
    @DO_CALC_BAKWARD_WITH@ :                                     // [146]
                                                                 // [146]
        When mapping from one coordinate space to another,       // [146]
        we basically do the math "forward" with one variable     // [146]
        and then "undo" the math by working backwards , but      // [146]
        with a different variable. I don't know if that makes    // [146]
        any sense, but it helped me understand what I was        // [146]
        doing. -KanjiCoder DATE[2022_08_11]                      // [146]

    @N_A@ : Not Applicable                                       // [148]
    @n_a@ : New Absolute (value)                                 // [148]
                                                                 // [148]
    #_FRAG_SHADE_MAP_# :--------------------------------------:  // [148]
                                                              :  // [148]
        Self-declaring how units get mapped to the screen     :  // [148]
        so when writing the editor we can do the correct      :  // [148]
        math to map clicks on screen into the worldspace.     :  // [148]
                                                              :  // [148]
        Currently our code that converts clicks to            :  // [148]
        discrete units is incompatible. But the math we       :  // [148]
        WROTE on the CPU side can be correct for SOME         :  // [148]
        methodologys of writing fragment shader to            :  // [148]
        render our world space.                               :  // [148]
                                                              :  // [148]
        Speaking Of :                                         :  // [148]
                                                              :  // [148]
            F_MOUMAST_P_X_DUX && F_MOUMAST_P_Y_DUY            :  // [148]
                                                              :  // [148]
        Which converts canvas click position to in-game       :  // [148]
        worldspace discrete unit position.                    :  // [148]
                                                              :  // [148]
    :---------------------------------------------------------:  // [148]
                                                                 // [148]
    #_TOO_VERBOSE_FRAGMENT_SHADER_MAPPING_TABLE_# :              // [148]
                                                                 // [148]
        //:----------------------------------------------://     // [148]
        //: @fsm@         : Fragment_Shader_Mapping      ://     // [148]
        //:               : SEE[ #_FRAG_SHADE_MAP_# ]    ://     // [148]
        //:                                              ://     // [148]
        //: @bad@         : INVALID @fsm@ Enumeration.   ://     // [148]
        //: @nil@         : @N_A@ for this shader.       ://     // [148]
        //: @per@         : Percentage Mapped.           ://     // [148]
        //:                                              ://     // [148]
        //: [dunstack000] : Discrete Unit Stack ,        ://     // [148]
        //:    [ dun_000] : rounding each uniform sample ://     // [148]
        //: USE[ fsm_000]: tile to UNDERSHOOT VP1        ://     // [148]
        //:                                              ://     // [148]
        //: [dunstack001] : Discrete Unit Stack ,        ://     // [148]
        //:    [ dun_001] : rounding each uniform sample ://     // [148]
        //: USE[ fsm_001] : tile to OVERSHOOT VP1        ://     // [148]
        //:----------------------------------------------://     // [148]
                                                                 // [148]
    #_FSM_EXPLAINED_# :---------------------------------------:  // [148]
                                                              :  // [148]
        c_artgirl_fsm_bad : An invalid mapping method.        :  // [148]
        c_artgirl_fsm_nil : Unspecified / Not Applicable / Nil:  // [148]
                                                              :  // [148]
        c_artgirl_fsm_000 : Uniform Discrete Unit Sample Tiles:  // [148]
                          : All stacked from the origin of    :  // [148]
                          : VP1 , math designed to UNDERSHOOT :  // [148]
                          : in event that discrete unit tiles :  // [148]
                          : cannot evenly fit into the        :  // [148]
                          : VP1 region provided.              :  // [148]
                                                              :  // [148]
        c_artgirl_fsm_001 : Also stacks discrete unit sample  :  // [148]
                          : tiles, but designed to OVERSHOOT  :  // [148]
                          : in the event that the tiles       :  // [148]
                          : cannot evenly fit into VP1.       :  // [148]
                                                              :  // [148]
        c_artgirl_fsm_per : Still uses discrete sample tiles, :  // [148]
                          : but the tiles are distributed     :  // [148]
                          : using floating point math to make :  // [148]
                          : them EVENLY FIT PERFECTLY into the:  // [148]
                          : VP1 area provided.                :  // [148]
                          :                                   :  // [148]
                          : All discrete unit sample tiles    :  // [148]
                          : are still of same exact size.     :  // [148]
    :---------------------------------------------------------:  // [148]
                                                                 // [148]
    @fragren@ : USE[ enu_fsm ]                                   // [148]
    @fsm@     : Fragment_Shader_Mapping ( mode )                 // [148]
                                                                 // [148]
    @c_fragren_dunstk0@ : USE[ c_artgirl_fsm_000 ]               // [148]
    @c_fragren_dunstk1@ : USE[ c_artgirl_fsm_001 ]               // [148]
    @c_fragren_perdist@ : USE[ c_artgirl_fsm_per ]               // [148]
                                                                 // [148]
    @enu_fsm@ : Enumeration of @fsm@                             // [148]
    @fsm_enu@ : USE[ enu_fsm ]( General To Specific )            // [148]
                                                                 // [148]
    @BOUNDS_CHECK_OUR_CALCULATIONS@ :                            // [148]
                                                                 // [148]
        What it sounds like. We are making sure our              // [148]
        calculations did not result going out of the             // [148]
        valid bounds of whatever those bounds might be.          // [148]

    @FRAG_SHADER_MAPPING@ : Denoting where a certain             // [149]
                          : [ enu_fsm ]implementation is         // [149]
                          : being used.                          // [149]
                                                                 // [149]
    @FSM_000@ : Denotes implementation site of                   // [149]
              : [ c_artgirl_fsm_000 ].                           // [149]
                                                                 // [149]
    #T_L_MID# :-----------------------------------------------:  // [149]
              : Top-left middle, when there is no             :  // [149]
              : real middle when you are doing discrete       :  // [149]
              : math, what should we use as the middle?       :  // [149]
              : The answer is the TOP LEFT ( T_L ).           :  // [149]
                                                              :  // [149]
        +---+---+---+---+ +---+---+---+---+                   :  // [149]
        |   |   |   |   | |   |   |   |   |                   :  // [149]
        +---+---+---+---+ +---+---+---+---+                   :  // [149]
        |   |   |   |   | |   |   |   |   |                   :  // [149]
        +---+---+---+---+ +---+---+---+---+                   :  // [149]
        |   |   |   |   | |   |   |   |   |                   :  // [149]
        +---+---+---+---+ +---+---+---+---+                   :  // [149]
        |   |   |   |T_L| |   |   |   |   |                   :  // [149]
        +---+---+---+---+ +---+---+---+---+                   :  // [149]
        +---+---+---+---+ +---+---+---+---+                   :  // [149]
        |   |   |   |   | |   |   |   |   |                   :  // [149]
        +---+---+---+---+ +---+---+---+---+                   :  // [149]
        |   |   |   |   | |   |   |   |   |                   :  // [149]
        +---+---+---+---+ +---+---+---+---+                   :  // [149]
        |   |   |   |   | |   |   |   |   |                   :  // [149]
        +---+---+---+---+ +---+---+---+---+                   :  // [149]
        |   |   |   |   | |   |   |   |   |                   :  // [149]
        +---+---+---+---+ +---+---+---+---+                   :  // [149]
                                                              :  // [149]
    :---------------------------------------------------------:  // [149]

    @d_gtx@ : Active Global Tile Y ( tile version of d_dmx )     // [157][150]
    @d_gty@ : Active Global Tile X ( tile version of d_dmy )     // [157][150]
    @d_te7@ : Active Tile Size Exponent To Render In Shader      //      [150]
                                                                 //      [150]
    #d_gtx# : #d_gty# :---------------------------------------:  // [157][150]
                                                              :  //      [150]
        These values are GLOBAL.( local to "THE_DUM" ),       :  //      [150]
        __NOT__ local to a LEVEL_PACK(hotel) or LEVEL(room).  :  //      [150]
                                                              :  //      [150]
        d_gtx === local tile x in THE_DUM                     :  // [157][150]
        d_gty === local tile y in THE_DUM                     :  // [157][150]
                                                              :  //      [150]
    :---------------------------------------------------------:  //      [150]

    @keyheld_shi@ : Key Held Down - Shift ?                      // [151]
    @keyheld_alt@ : Key Held Down - Alt   ?                      // [151]
    @keyheld_con@ : Key Held Down - Control / Ctrl ?             // [151]
                                                                 // [151]
    @TE7_NEX@ : Next te7 value                                   // [151]
    @TE7_BAK@ : Back te7 value ( backwards / previous )          // [151]
                                                                 //      [---]
    @MGY_TGY@ : WRONG, USE[ DUX_GTX ]                            //      [152]
    @MGX_TGX@ : WRONG, USE[ DUY_GTY ]                            //      [152]
    @MGX@ ::::: WRONG, USE[ DMX ] mgx:mouseglobalx               //      [152]
    @MGY@ ::::: WRONG, USE[ DMY ] mgy:mouseglobaly               //      [152]
    @TGX@ ::::: WRONG, USE[ GTX ] tgx:tileglobalx                //      [152]
    @TGY@ ::::: WRONG, USE[ GTY ] tgy:tileglobaly                //      [152]
                                                                 //      [152]
    d_m_x ==> d_mgx ==> d_dux ==> FINAL_ANSWER[ d_dmx ]          // [157][152]
    d_m_y ==> d_mgy ==> d_duy ==> FINAL_ANSWER[ d_dmy ]          // [157][152]
    d_t_x ==> d_tgx ==> d_dtx ==> FINAL_ANSWER[ d_gtx ]          // [157][152]
    d_t_y ==> d_tgy ==> d_dty ==> FINAL_ANSWER[ d_gty ]          // [157][152]
                                                                 //      [152]
    @d_dmx@ : Discrete Mouse Position Y (in THE_DUM)             //      [152]
    @d_dmy@ : Discrete Mouse Position X (in THE_DUM)             //      [152]
    @d_gtx@ : Global Tile X                                      //      [152]
    @d_gty@ : Global Tile Y                                      //      [152]
                                                                 //      [152]
    @DUX_GTX@ : DiscreteUnitX ===> GlobalTileX                   //      [152]
    @DUY_GTY@ : DiscreteUnitY ===> GlobalTileY                   //      [152]
    @DUX@     : DiscreteUnitX                                    //      [152]
    @DUY@     : DiscreteUnitY                                    //      [152]
    @GTX@     : GlobalTileX                                      //      [152]
    @GTY@     : GlobalTileY                                      //      [152]
                                                                 //      [152]
    @i_mgx@ : DONT_USE[ i_mgx /AKA/ Input - Mouse Global X ]     //      [152]
    @i_mgy@ : DONT_USE[ i_mgy /AKA/ Input - Mouse Global Y ]     //      [152]
    @i_dux@ : Input Discrete Unit X ( could be global mouse )    //      [152]
    @i_duy@ : Input Discrete Unit Y ( could be global mouse )    //      [152]
                                                                 //      [152]
    @d_dtx@ : USE[ d_gtx ](Tiles are discrete , D is Redundant)  //      [152]
    @d_dty@ : USE[ d_gty ](Tiles are discrete , D is Redundant)  //      [152]
                                                                 //      [---]
    @dunspan@ : Discrete Unit Span ( width or height in [D_U] )  // [153]
                                                                  
    @c_du7@   : THAT ISN'T A FUCKING THING YOU GOD DAMNED        // [154]
              : SMOOTH BRAIN LOW IQ PERSON WITH A SCIENTIFICALLY // [154]
              : ACCURATE BUT POLITICALLY INCORRECT DESCRIPTOR.   // [154]
              : ( starts with m , ends with on )                 // [154]

    C__L__B   : C_H_A_N_G_E____L_O_G____B_O_T_T_O_M              // [156]
              : (written weirdly to prevent me from              // [156]
              : (getting her when pressing CTRL+F)               // [156]
    
    @REFACTOR_DONE@ : Denoting that a refactor that needed       // [157]
                    : to be done is now done.                    // [157]
                                                                 // [157]
    @NMS@ : N_O_T_I_C_E__M_E__S_E_N_P_A_I                        // [157]
          : I write this ( without the extra underscores )       // [157]
          : where things require urgent attention.               // [157]

    #_PIX2048_BASIC_LAYOUT_# :--------------------------------+  // [158]
                                                              |  // [158]
        @ACT@ : Active                                        |  // [158]
                                                              |  // [158]
        #HOTEL_EQ_LEVELPACK ( Hotel === LevelPack )           |  // [158]
                                                              |  // [158]
            A hotel is a type of levelpack, but a levelpack   |  // [158]
            is not necessarily a hotel. All levelpacks in     |  // [158]
            THIS_CODE_BASE are HOTELS.                        |  // [158]
                                                              |  // [158]
            Analogy : All squares are rectangles , but a      |  // [158]
            rectangle is not necessarily a square. All        |  // [158]
            rectangles in THIS_CODE_BASE are SQUARES.         |  // [158]
                                                              |  // [158]
            @HDI_000@ : Hotel Data Index 0                    |  // [158]
            @HDI_001@ : Hotel Data Index 1                    |  // [158]
            @HDI_002@ : Hotel Data Index 2                    |  // [158]
                                                              |  // [158]
            @HDI_003@ : Hotel Data Index 3                    |  // [158]
            @HDI_004@ : Hotel Data Index 4                    |  // [158]
            @HDI_005@ : Hotel Data Index 5                    |  // [158]
                                                              |  // [158]
            @HDI_006@ : Hotel Data Index 6                    |  // [158]
            @HDI_007@ : Hotel Data Index 7                    |  // [158]
            @HDI_008@ : Hotel Data Index 8                    |  // [158]
                                                              |  // [158]
        +---------+---------+---------+---------+             |  // [158]
        |         |         |         |         |             |  // [158]
        |  HOTEL  |  HOTEL  |  HOTEL  |   [?]   |             |  // [158]
        |#HDI_000#|#HDI_001#|#HDI_002#|         |             |  // [158]
        +---------+---------+---------+---------+             |  // [158]
        |         |  @ACT@  |         |         |             |  // [158]
        |  HOTEL  |  HOTEL  |  HOTEL  |   [?]   |             |  // [158]
        |#HDI_003#|#HDI_004#|#HDI_005#|         |             |  // [158]
        +---------+---------+---------+---------+             |  // [158]
        |         |         |         |         |             |  // [158]
        |  HOTEL  |  HOTEL  |  HOTEL  |   [?]   |             |  // [158]
        |#HDI_006#|#HDI_007#|#HDI_008#|         |             |  // [158]
        +---------+---------+---------+---------+             |  // [158]
        |         |         |         |         |             |  // [158]
        |   [?]   |   [?]   |   [?]   |   [?]   |             |  // [158]
        |         |         |         |         |             |  // [158]
        +---------+---------+---------+---------+             |  // [158]
        |<----------------- d_pix2048 --------->|             |  // [158]
        |<----------------- d_pix2048 ----------------->|     |  // [158]
        +----512----+----512----+----512----+----512----+     |  // [158]
        |           |           |           |           |     |  // [158]
        | hdi:0     | hdi:1     | hdi:2     |    [?]    |     |  // [158]
        | hdc.x : 0 | hdc.x : 1 | hdc.x : 2 |    [?]    |     |  // [158]
        | hdc.y : 0 | hdc.y : 0 | hdc.y : 0 |           |     |  // [158]
        |           |           |           |           |     |  // [158]
        +-----------+-----------+-----------+-----------+     |  // [158]
        +----512----+----512----+----512----+----512----+     |  // [158]
        |           |           |           |           |     |  // [158]
        | hdi:3     | hdi:4     | hdi:5     |    [?]    |     |  // [158]
        | hdc.x : 0 | hdc.x : 1 | hdc.x : 2 |    [?]    |     |  // [158]
        | hdc.y : 1 | hdc.y : 1 | hdc.y : 1 |           |     |  // [158]
        |           |           |           |           |     |  // [158]
        +-----------+-----------+-----------+-----------+     |  // [158]
        +----512----+----512----+----512----+----512----+     |  // [158]
        |           |           |           |           |     |  // [158]
        | hdi:6     | hdi:7     | hdi:8     |    [?]    |     |  // [158]
        | hdc.x : 0 | hdc.x : 1 | hdc.x : 2 |    [?]    |     |  // [158]
        | hdc.y : 2 | hdc.y : 2 | hdc.y : 2 |           |     |  // [158]
        |           |           |           |           |     |  // [158]
        +-----------+-----------+-----------+-----------+     |  // [158]
        +----512----+----512----+----512----+----512----+     |  // [158]
        |           |           |           |           |     |  // [158]
        |    [?]    |    [?]    |    [?]    |    [?]    |     |  // [158]
        |    [?]    |    [?]    |    [?]    |    [?]    |     |  // [158]
        |           |           |           |           |     |  // [158]
        |           |           |           |           |     |  // [158]
        +-----------+-----------+-----------+-----------+     |  // [158]
                                                              |  // [158]
                                                              |  // [158]
        [?] : We don't know what data goes here yet.          |  // [158]
        [?] : Will we decide in the futurure.                 |  // [158]
            : Current Date Is: 2022.08.15                     |  // [158]
            :            DATE[ 2022_08_15 ]                   |  // [158]
                                                              |  // [158]
        @hdi@ : Hotel_Data_Index , AKA : LevelPack_Data_Index |  // [158]
        @hdc@ : Hotel_Data_Cell  , AKA : LevelPack_Data_Cell  |  // [158]
                                                              |  // [158]
                                                              |  // [158]
    :---------------------------------------------------------+  // [158]
                                                                 // [---]
    #_VIDEO_159_TILE_DATA_LAYOUT_EXPLAINED_#::===============++  //      [159]
                                                             ||  //      [159]
    #_LEVEL_PACK_RELATED_VARIABLES_FOR_DIAGRAMS_BELOW_#:--+  ||  //      [159]
                                                          |  ||  //      [159]
        @PRO_TIP@ :------------------------------------:  |  ||  //      [159]
            [h##] vars would be synonymous with [r##]  :  |  ||  //      [159]
            vars so only use[ r## ]to reduce mental    :  |  ||  //      [159]
            search space.                              :  |  ||  //      [159]
        :----------------------------------------------:  |  ||  //      [159]
                                                          |  ||  //      [159]
        @h00@ : WRONG, SEE[ r00 ] ( r00 ===  0 )          |  ||  //      [159]
        @h01@ : WRONG, SEE[ r01 ] ( r01 ===  1 )          |  ||  //      [159]
        @h02@ : WRONG, SEE[ r02 ] ( r02 ===  2 )          |  ||  //      [159]
        @h03@ : WRONG, SEE[ r03 ] ( r03 ===  3 )          |  ||  //      [159]
        @h04@ : WRONG, SEE[ r04 ] ( r04 ===  4 )          |  ||  //      [159]
        @h05@ : WRONG, SEE[ r05 ] ( r05 ===  5 )          |  ||  //      [159]
        @h06@ : WRONG, SEE[ r06 ] ( r06 ===  6 )          |  ||  //      [159]
        @h07@ : WRONG, SEE[ r07 ] ( r07 ===  7 )          |  ||  //      [159]
        @h08@ : WRONG, SEE[ r08 ] ( r08 ===  8 )          |  ||  //      [159]
        @h09@ : WRONG, SEE[ r09 ] ( r09 ===  9 )          |  ||  //      [159]
        @h10@ : WRONG, SEE[ r10 ] ( r10 === 10 )          |  ||  //      [159]
        @h11@ : WRONG, SEE[ r11 ] ( r11 === 11 )          |  ||  //      [159]
        @h12@ : WRONG, SEE[ r12 ] ( r12 === 12 )          |  ||  //      [159]
                                                          |  ||  //      [159]
        @h13@ : WRONG, SEE[ r13 ] <-- VAR ==[ r00 to r12 ]|  ||  //      [159]
                                                          |  ||  //      [159]
    #_LEVEL_PACK_GEOMETRY_LAYOUT_# :----------------------+  ||  //      [159]
    # LEVEL_PACK.GEOMETRY_LAYOUT # :                      |  ||  //      [159]
                                                          |  ||  //      [159]
                +---+                   +---+             |  ||  //      [159]
                |000|                   |r00|             |  ||  //      [159]
                +---+                   +---+             |  ||  //      [159]
            +---+---+---+           +---+---+---+         |  ||  //      [159]
            |001|002|003|           |r01|r02|r03|         |  ||  //      [159]
            +---+---+---+           +---+---+---+         |  ||  //      [159]
        +---+---+---+---+---+   +---+---+---+---+---+     |  ||  //      [159]
        |004|005|006|007|008|   |r04|r05|r06|r07|r08|     |  ||  //      [159]
        +---+---+---+---+---+   +---+---+---+---+---+     |  ||  //      [159]
            +---+---+---+           +---+---+---+         |  ||  //      [159]
            |009|010|011|           |r09|r10|r11|         |  ||  //      [159]
            +---+---+---+           +---+---+---+         |  ||  //      [159]
                +---+                   +---+             |  ||  //      [159]
                |012|                   |r12|             |  ||  //      [159]
                +---+                   +---+             |  ||  //      [159]
                                                          |  ||  //      [159]
    #_LEVEL_PACK_DATA_LAYOUT_# :--------------------------+  ||  //      [159]
    # LEVEL_PACK.DATA_LAYOUT # :        TAG[ TAG_R4X_R4Y ]|  ||  //      [159]
                                        TAG[ DIA_ROM_CEL ]|  ||  // [167][159]
        |<--------------0512-------------->|              |  ||  //      [159]
        |<-----0256----->||<-----0256----->|              |  ||  //      [159]
        +--128--++--128--++--128--++--128--+              |  ||  //      [159]
        |       ||       ||       ||       |              |  ||  //      [159]
        |  r00  ||  r01  ||  r02  ||  r03  | #R4Y_EQ_000# |  ||  // [164][159]
        |       ||       ||       ||       |              |  ||  //      [159]
        +-------++-------++-------++-------+              |  ||  //      [159]
        +--128--++--128--++--128--++--128--+              |  ||  //      [159]
        |       ||       ||       ||       |              |  ||  //      [159]
        |  r04  ||  r05  ||  r06  ||  r07  | #R4Y_EQ_001# |  ||  // [164][159]
        |       ||       ||       ||       |              |  ||  //      [159]
        +-------++-------++-------++-------+              |  ||  //      [159]
        +--128--++--128--++--128--++--128--+              |  ||  //      [159]
        |       ||       ||       ||       |              |  ||  //      [159]
        |  r08  ||  r09  ||  r10  ||  r11  | #R4Y_EQ_002# |  ||  // [164][159]
        |       ||       ||       ||       |              |  ||  //      [159]
        +-------++-------++-------++-------+              |  ||  //      [159]
        +--128--++--128--++--128--++--128--+              |  ||  //      [159]
        |       ||       ||       ||       |              |  ||  //      [159]
        |  r12  || [ANY] || [ANY] || [ANY] | #R4Y_EQ_003# |  ||  // [164][159]
        |   ^   ||       ||       ||       |              |  ||  //      [159]
        +---|---++-------++-------++-------+              |  ||  //      [159]
            |                                             |  ||  //      [159]
        +---+-----------+  <------+  ROOM ~=~ LEVEL       |  ||  //      [159]
        |               |         |  HOTEL~=~ LEVELPACK   |  ||  //      [159]
        | +-----+-----+ |         |                       |  ||  //      [159]
        | |     |     | |         |                       |  ||  //      [159]
        | | TIL | BOM | |         |  +------------------+ |  ||  //      [159]
        | |     |     | |         |  |                  | |  ||  //      [159]
        | +-----+-----+ |         +--| One ROOM  Within | |  ||  //      [159]
        | |     |     | |         |  | One Of The 13    | |  ||  //      [159]
        | | FAD |[...]| |         |  | HOTELS           | |  ||  //      [159]
        | |     |     | |         |  |                  | |  ||  //      [159]
        | +-----+-----+ |         |  +------------------+ |  ||  //      [159]
        | !     !     ! |         |                       |  ||  //      [159]
        | !<064>!     ! |         |                       |  ||  //      [159]
        | !<---128--->! |         |                       |  ||  //      [159]
        |               |         |                       |  ||  //      [159]
        +---------------+  <------+                       |  ||  //      [159]
                                                          |  ||  //      [159]
    #_LEVEL_DATA_LAYOUT_# :-------------------------------+  ||  //      [159]
    # LEVEL.DATA_LAYOUT # :             TAG[ #_L__D__L_# ]|  ||  //      [159]
    |                                                     |  ||  //      [159]
    |   Quarkmap Structure Holding Tile, Bomb and Fada    |  ||  //      [159]
    |   data at different lateral offsets.                |  ||  //      [159]
    |                                                     |  ||  //      [159]
    |   |<------ 128 ------>|                             |  ||  //      [159]
    |   !                   !                             |  ||  //      [159]
    |  [T]-------[B]--------+   [T] : Origin Of TILE Data |  ||  //      [159]
    |   |         |         |                             |  ||  //      [159]
    |   |   TIL   |   BOM   |   [B] : Origin Of BOMB Data |  ||  //      [159]
    |   |    0    |    1    |                             |  ||  //      [159]
    |  [F]--------t----b----+   [F] : Origin Of FADA Data |  ||  //      [159]
    |   |         | til|fad |                             |  ||  //      [159]
    |   |   FAD   f----+----+                             |  ||  //      [159]
    |   |    2    | bom|[][]                              |  ||  // [165][159]
    |   +---------+----+[].....                           |  ||  //      [159]
    |                                                     |  ||  //      [159]
    |   @c_lay_til@ : ZERO( 0 )  lmx=( 0 ) lmy=( 0 )      |  ||  //      [159]
    |   @c_lay_bom@ :  ONE( 1 )  lmx=( 1 ) lmy=( 0 )      |  ||  //      [159]
    |   @c_lay_fad@ :  TWO( 2 )  lmx=( 0 ) lmy=( 1 )      |  ||  //      [159]
    |                                                     |  ||  //      [159]
    |   @lmy@ : Lateral Multi Y ( final_lat_y = lat*lmy ) |  ||  //      [159]
    |   @lmx@ : Lateral Multi X ( final_lat_x = lat*lmx ) |  ||  //      [159]
    |         : #_LM_XY_# ( Above : Lateral Multipliers ) |  ||  // [165][159]
    :-----------------------------------------------------+  ||  //      [159]
    |                                                     |  ||  //      [159]
    |   TAG[ #_DIA_TIL_FAD_BOM_# ]( see : #_L__D__L_#     |  ||  //      [159]
    |   TAG[ #_DIA_BOM_FAD_TIL_# ]( see : #_L__D__L_#     |  ||  //      [159]
    |   TAG[ #_DIA_BOM_TIL_FAD_# ]( see : #_L__D__L_#     |  ||  //      [159]
    |   TAG[ #_DIA_FAD_BOM_TIL_# ]( see : #_L__D__L_#     |  ||  //      [159]
    |   TAG[ #_DIA_FAD_TIL_BOM_# ]( see : #_L__D__L_#     |  ||  //      [159]
    |   TAG[ #_DIA_TIL_BOM_FAD_# ]( see : #_L__D__L_#     |  ||  //      [159]
    |                                                     |  ||  //      [159]
    +-----------------------------------------------------+  ||  //      [159]
                                                             ||  //      [159]
    +==============::#_VIDEO_159_TILE_DATA_LAYOUT_EXPLAINED_#::  //      [159]
                                                                 // [---]
    #_AIM_MASTER_MEMORY_LAYOUT_# :------------------------:::::  // [160]
                                                          :::::  // [160]
        TAG[ #DIAGRAM_TAG_MMX# ]                          :::::  // [163]
        TAG[ #DIAGRAM_TAG_MMY# ]                          :::::  // [163]
        TAG[ #DIAGRAM_MMX_MMY# ]TAG[ #DIA_MMX_MMY# ]      :::::  // [166]
        TAG[ #_MMT_PREFAB_RESEARCH_# ]                    :::::  // [462]
                                                          :::::  // [163]
        #DTUFP# : Dont_Touch_Until_First_Playable         :::::  // [160]
                                                          :::::  // [160]
        |<-------- d_pix2048 ------------->|              :::::  // [160]
        |<--------------2048-------------->|              :::::  // [160]
        |<-----1024----->||<-----1024----->|              :::::  // [160]
        +--512--++--512--++--512--++--512--+              :::::  // [160]
        |       ||       ||       || ***** |              :::::  // [160]
        |  mm0  ||  mm1  ||  mm2  || *mm3* |              :::::  // [160]
        |       ||       ||       || ***** |              :::::  // [160]
        +-------++-------++-------++-------+              :::::  // [160]
        +--512--++--512--++--512--++--512--+              :::::  // [160]
        |       ||       ||       || ***** |              :::::  // [160]
        |  mm4  ||  mm5  ||  mm6  || *mm7* |              :::::  // [160]
        |       ||       ||       || ***** |              :::::  // [160]
        +-------++-------++-------++-------+              :::::  // [160]
        +--512--++--512--++--512--++--512--+              :::::  // [160]
        |       ||       ||       || ***** |              :::::  // [160]
        |  mm8  ||  mm9  ||  mma  || *mmb* |              :::::  // [160]
        |       ||       ||       || ***** |              :::::  // [160]
        +-------++-------++-------++-------+              :::::  // [160]
        +--512--++--512--++--512--++--512--+              :::::  // [160]
        | ***** || ***** || ***** || ***** |              :::::  // [160]
        | *mmc* || *mmd* || *mme* || *mmf* |              :::::  // [160]
        | ***** || ***** || ***** || ***** |              :::::  // [160]
        +-------++-------++-------++-------+              :::::  // [160]
                                                          :::::  // [160]
               @M_M_C_I@ : Master_Memory_Cell_Index       :::::  // [160]
                                  @LEV_PAK@ : Level Pack  :::::  // [160]
        @mm0@ : M_M_C_I  0 :  T_L  LEV_PAK                :::::  // [160]
        @mm1@ : M_M_C_I  1 :  T_C  LEV_PAK                :::::  // [160]
        @mm2@ : M_M_C_I  2 :  T_R  LEV_PAK                :::::  // [160]
                                                          :::::  // [160]
        @mm3@ : M_M_C_I  3 :  *mm3* #DTUFP#               :::::  // [160]
                                                          :::::  // [160]
        @mm4@ : M_M_C_I  4 :  M_L  LEV_PAK                :::::  // [160]
        @mm5@ : M_M_C_I  5 :  M_C  LEV_PAK                :::::  // [160]
        @mm6@ : M_M_C_I  6 :  M_R  LEV_PAK                :::::  // [160]
                                                          :::::  // [160]
        @mm7@ : M_M_C_I  7 :  *mm7* #DTUFP#               :::::  // [160]
                                                          :::::  // [160]
        @mm8@ : M_M_C_I  8 :  B_L  LEV_PAK                :::::  // [160]
        @mm9@ : M_M_C_I  9 :  B_C  LEV_PAK                :::::  // [160]
        @mma@ : M_M_C_I 10 :  B_R  LEV_PAK                :::::  // [160]
                                                          :::::  // [160]
        @mmb@ : M_M_C_I 11 :  *mmb* #DTUFP#               :::::  // [160]
        @mmc@ : M_M_C_I 12 :  *mmc* #DTUFP#               :::::  // [160]
        @mmd@ : M_M_C_I 13 :  *mmd* #DTUFP#               :::::  // [160]
        @mme@ : M_M_C_I 14 :  *mme* #DTUFP#               :::::  // [160]
        @mmf@ : M_M_C_I 15 :  *mmf* #DTUFP#               :::::  // [160]
                                                          :::::  // [160]
    :-----------------------------------------------------:::::  // [160]
                                                                 // [---]
    @A_L_P@ : Active_Level_Pack                                  //      [161]
    @TOO_AMBIG@ : #TOO_AMBIG# : Too Ambiguous , Avoid Using      //      [161]
                              : Identifier in code.              //      [161]
                                                                 //      [161]
    @i_h3x@ / @h3x@ : Which Hotel ? X coordinate . [ 0|1|2 ]     //      [161]
    @i_h3y@ / @h3y@ : Which Hotel ? Y coordinate . [ 0|1|2 ]     //      [161]
    @i_r5x@ / @r5x@ : Which Room/Level ? X Coord. [ 0 to 4 ]     //      [161]
    @i_r5y@ / @r5y@ : Which Room/Level ? Y Coord. [ 0 to 4 ]     //      [161]
                                                                 //      [161]
    @i_gtx@ / @gtx@ : Input Global Tile X For EDI_PUT | EDI_GET  //      [161]
    @i_gty@ / @gty@ : Input Global Tile Y For EDI_PUT | EDI_GET  //      [161]
                                                                 //      [161]
    @i_hlx@ / @hlx@ : Hotel/LevelPack Local X <--@TOO_AMBIG@     //      [161]
    @i_hly@ / @hly@ : Hotel/LevelPack Local Y <--@TOO_AMBIG@     //      [161]
    @i_rlx@ / @rlx@ : Room/Level      Local X <--MAYBE[tlx]      // [162][161]
    @i_rly@ / @rly@ : Room/Level      Local Y <--MAYBE[tly]      // [162][161]
    @i_llx@ / @llx@ : USE[ r l x ]                               //      [161]
    @i_lly@ / @lly@ : USE[ r l y ]                               //      [161]
                                                                 //      [161]
    @i_ltx@ / @ltx@ / #i_ltx# / #ltx# :                          //      [161]
    @i_lty@ / @lty@ / #i_lty# / #lty# :                          //      [161]
                                                                 //      [161]
        Input Local Tile X For SIM_PUT | SIM_GET                 //      [161]
        Input Local Tile Y For SIM_PUT | SIM_GET                 //      [161]
                                                                 //      [161]
        [ i_ltx / ltx ]TOO_AMBIGUOUS_USE[ i_stx , i_sty ]        //      [161]
                                                                 //      [161]
    @i_stx@ / @stx@ : Simulation Tile X (Local To @A_L_P@ )      //      [161]
    @i_sty@ / @sty@ : Simulation Tile Y (Local To @A_L_P@ )      //      [161]
                                                                 //      [161]
    #_Simulation_Tile_# :                                        //      [161]
                                                                 //      [161]
        A simulation tile coordinate is local to the             //      [161]
        active level pack. It's coordinate can be greater        //      [161]
        than ( 64-1 ) because it exists within a 5x5             //      [161]
        grid of levels. Known as a [levelpack/hotel].            //      [161]
                                                                 // [---]
    @tlx@ : Tile Local X , ambiguous , but necessary.            // [162]
    @tly@ : Tile Local Y , ambiguous , but necessary.            // [162]
                                                                 // [162]
    #rlx# / #rly# / #i_rlx# / #i_rly# :                          // [162]
                                                                 // [162]
        Too amigious. But if you need an ambiguous tile          // [162]
        value go MORE AMBIGUOUS and use[ tlx , tly ]             // [162]
                                                                 // [162]
    @dpc@ : Data Pixel COMPONENT index                           // [162]
    @dpi@ : Data Pixel INDEX ( DO NOT USE THIS ONE )             // [162]
                                                                 // [162]
    #dpc# / #dpi# : #_DPC_VS_DPI_# :                             // [162]
                                                                 // [162]
        (  dpc  ) === ( 4 * dpi )                                // [162]
                                                                 // [162]
        We want to use "dpc" so that we don't take up            // [162]
        extra column space with the multiplications              // [162]
        by 4 all over the god damned place.                      // [162]
                                                                 // [162]
    @g25@ : A grid index within our 5x5 grid of rooms.           // [162]
          : it is a "g25" and not "r25" because not all          // [162]
          : grid cells contain a [ room / level ].               // [162]
                                                                 // [162]
    @r25@ : No such thing, did you mean [g25](Grid25) ?          // [162]
                                                                 // [162]
    @lat_lev@ : WRONG_TOO_AMBIGUOUS_USE : [ lahotel ]            // [162]
    @lahotel@ : LAteral span of HOTEL in tiles on X or Y axis    // [162]

    @d_hi9_hdi@ : Hotel 1D Index To Hotel_DATA(layout)Index      // [163] 
    @d_hi9_mmi@ : Hotel 1D Index To MasterMemory(cell)Index      // [163] 
    @d_g25_g5x@ : [g25] 1D Index To Grid Cell Overlay - X        // [163] 
    @d_g25_g5y@ : [g25] 1D Index To Grid Cell Overlay - Y        // [163] 
    @d_hi9_mmx@ : Hotel 1D Index To :  MasterMemoryCell.X        // [163]
    @d_hi9_mmy@ : Hotel 1D Index To :  MasterMemoryCell.Y        // [163]
    @d_g25_vod@ : Grid_Cell_Overlay -TO- Is Void Room?           // [163]
                                                                 // [163]
    @d_g25_r4x@ : (g25)===>( room data layout cell - X )         // [163]
    @d_g25_r4y@ : (g25)===>( room data layout cell - Y )         // [163]
    @d_g25_r16@ : (g25)===>( room [data|render]cell index )      // [163]
                                                                 // [163]
    @d_g25_r5x@ : WRONG_USE[ d_g25_g5x ]IF_NEEDED                // [163]
                : Or did you mean[ d_g25_r4x ]                   // [163]
                : ( r4x === h_x in HOTEL13.JS )                  // [163]
                                                                 // [163]
    @d_g25_r5y@ : WRONG_USE[ d_g25_g5y ]IF_NEEDED                // [163]
                : Or did you mean[ d_g25_r4y ]                   // [163]
                : ( r4y === h_y in HOTEL13.JS )                  // [163]
                                                                 // [163]
    @d_r13_h_x@ : AIM_CALLS_THAT[ d_r13_r4x ]                    // [163]
    @d_r13_h_y@ : AIM_CALLS_THAT[ d_r13_r4y ]                    // [163]
                                                                 // [163]
    @d_g25_rdi@ : ( g25 )===>( Room_Data_Index )                 // [163]
    @rdi@ : The 1D Index Version Of( [ r4x , r4y ] )             // [163]
          :AKA::1D Index Version Of( [ rdx , rdy ] )             // [163]
                                                                 // [163]
    @rdx@ : Room Data (cell) X ( Synonym For : r4x )             // [163]
    @rdy@ : Room Data (Cell) Y ( Synonym For : r4y )             // [163]
    @r4x@ : Room Data Cell , range [ 0 to 4 ]inclusive - X       // [163]
    @r4y@ : Room Data Cell , range [ 0 to 4 ]inclusive - Y       // [163]
                                                                 // [163]
    @r16@ : NEVER USE THIS , USE @rdi@ , because too             // [163]
          : easy to confuse[ r16 ]with[ r13 ].                   // [163]
                                                                 // [163]
    @r13@ : hotel [R]oom index , [ 0 to 12 ]inclusive.           // [163]
          : Where the "13" in "HOTEL13.JS" comes from.           // [163]
          : XY form of[ r13 ]is( [ r5x , r5y ] )                 // [163]
                                                                 // [163]
    @r5x@ : Room Cell Coordinate On The RENDERING LAYOUT - X     // [163]
    @r5y@ : Room Cell Coordinate On The RENDERING LAYOUT - Y     // [163]
                                                                 // [163]
    @r13_set@ : Diagram Of The Set Of[ r13 ]values.              // [163]
    @g25_set@ : Diagram Of The Set Of[ g25 ]values.              // [163]
                                                                 // [---]
    @T_C_E_2_E@ : TUPLES_CONTAIN_EXACTLY_2_ELEMENTS              // [164]
    @I_N_A@     : INPUTS_NOT_ARRAY                               // [164]
                                                                 // [---]
    @TRIPLE_FIX@ : Writing the fix with "___" instead of "_"     //      [165]
                 : so that it doesn't pop up when                //      [165]
                 : CTRL_F_ING for relevant code sections.        //      [165]
                                                                 //      [165]
    @REN_LAY@ : Rendering Layout , geometric positions of things //      [165]
              : when RENDERING to screen.                        //      [165]
              : TAG[ #RENDERING_LAYOUT# ]                        //      [165]
                                                                 //      [165]
    @DAT_LAY@ : Data Layout. Geometric positions of the          //      [165]
              : DATA representing things to be rendered.         //      [165]
              : All data is bit packed into pixels on            //      [165]
              : [ d_pix2048 ] , and thus has a physical          //      [165]
              : location.                                        //      [165]
              : TAG[ #DATA______LAYOUT# ]                        //      [165]
                                                                 //      [165]
    #DIAGRAM_TE7_DIA# :---------------------------------------+  //      [165]
                                                              |  //      [165]
        +---=---=---=---+- - - - - - - -+                     |  //      [165]
        |               |               |                     |  //      [165]
        |      T0       |                                     |  //      [165]
        |               |               |                     |  //      [165]
        |   TE7 === 0   |                 TAG[ #TAG_TE7_DIA# ]|  // [166][165]
        |  (Many Small) |               |                     |  //      [165]
        |  (Tiles     ) |                                     |  //      [165]
        |               |               |                     |  //      [165]
        +---=---=---=---+---=---+ - - - +                     |  //      [165]
        |               |       |                             |  //      [165]
                        |  T1   |                             |  //      [165]
        |               |       |                             |  //      [165]
                        +---=---+---+                         |  //      [165]
        |               |       | T2|                         |  //      [165]
                                +---+-.                       |  //      [165]
        |               |       :   |_| <--[ T2 .. T3 ... T4 ]|  //      [165]
        +- - - - - - - -+       :   :      [ T5 .. T6 ______ ]|  //      [165]
        \ \             ^       :   :                         |  //      [165]
        :\ \            :       :   :                         |  //      [165]
        : \_[DIA_000 === ZERO ] :   :                         |  //      [165]
        :               :       :   :                         |  //      [165]
        :<-- DIA_001 -->:       :   :                         |  //      [165]
        :<-- DIA_002 ---------->:   :                         |  //      [165]
        :<-- DIA_003 -------------->:                         |  //      [165]
                                                              |  //      [165]
    :---------------------------------------------------------+  //      [165]
    #DIAGRAM_LA3_LAT# :---------------------------------------+  //      [165]
    #DIAGRAM_LA3_LMX# :---------------------------------------+  //      [165]
    #DIAGRAM_LA3_LMY# :---------------------------------------+  //      [165]
                                                              |  //      [165]
      [TIL]===[0,0]   [BOM]===[128,000]                       |  //      [165]
        |               |                                     |  //      [165]
        V               V                                     |  //      [165]
        +---=---=---=---+- - - - - - - -+  [TIL]: Origin Of   |  //      [165]
        |               |               |         smallest    |  //      [165]
        |               |                         geom tiles  |  //      [165]
        |               |               |                     |  //      [165]
        |   #CEL_0_0#   |   #CEL_1_0#      [BOM]: Origin Of   |  //      [165]
        |               |               |         smallest    |  //      [165]
        |               |                         bomb tiles  |  //      [165]
        |               |               |                     |  //      [165]
        +---=---=---=---+---=---+ - - - +  [FAD]: Origin of   |  //      [165]
        |\              |       |                 smallest    |  //      [165]
          [FAD]===[128,000]T1   |                 fada tiles  |  //      [165]
        |               |       |                             |  //      [165]
            #CEL_0_1#   +---=---+---+                         |  //      [165]
        |               |       | T2|                         |  //      [165]
                                +---+-.                       |  //      [165]
        |               |           |_|   TAG[ #TAG_TE7_LAT# ]|  // [166][165]
        +- - - - - - - -+                 TAG[ #TAG_TE7_LMX# ]|  // [166][165]
                                          TAG[ #TAG_TE7_LMY# ]|  // [166][165]
        :-----------------------------------------------------+  // [165]
                                                              |  // [165]
        la3_lmx[ c_lay_til ] ==> la3_lmx[0] ==> 0             |  // [165]
        la3_lmy[ c_lay_til ] ==> la3_lmy[0] ==> 0             |  // [165]
        SO:      c_lay_til   =================> #CEL_0_0#     |  // [165]
                                                              |  // [165]
        la3_lmx[ c_lay_bom ] ==> la3_lmx[1] ==> 1             |  // [165]
        la3_lmy[ c_lay_bom ] ==> la3_lmy[1] ==> 0             |  // [165]
        SO:      c_lay_bom   =================> #CEL_1_0#     |  // [165]
                                                              |  // [165]
        la3_lmx[ c_lay_fad ] ==> la3_lmx[2] ==> 0             |  // [165]
        la3_lmy[ c_lay_fad ] ==> la3_lmy[2] ==> 1             |  // [165]
        SO:      c_lay_fad   =================> #CEL_0_1#     |  // [165]
                                                              |  // [165]
        :-----------------------------------------------------+  // [165]
                                                              |  // [165]
        [TIL]===[000,0]===[ lat*la3_lmx[0] , lat*la3_lmy[0] ] |  // [165]
        [TIL]===[000,0]===[ 128*(   0    ) , 128*(   0    ) ] |  // [165]
        [TIL]===[000,0]===[ (     000    ) , (     000    ) ] |  // [165]
                                                              |  // [165]
        [BOM]===[128,0]===[ lat*la3_lmx[1] , lat*la3_lmy[1] ] |  // [165]
        [BOM]===[128,0]===[ 128*(   1    ) , 128*(   0    ) ] |  // [165]
        [BOM]===[128,0]===[ (     128    ) , (     000    ) ] |  // [165]
                                                              |  // [165]
        [FAD]===[0,128]===[ lat*la3_lmx[2] , lat*la3_lmy[2] ] |  // [165]
        [FAD]===[0,128]===[ 128*(   0    ) , 128*(   1    ) ] |  // [165]
        [FAD]===[0,128]===[ (     000    ) , (     128    ) ] |  // [165]
                                                              |  // [165]
    :---------------------------------------------------------+  // [165]
                                                                 // [165]
    #DIAGRAM_TE7_LAT : THATS_NOT_A_THING_YOU_SMOOTH_BRAIN_DOLT   // [165]
    #DIAGRAM_TE7_LMX : THATS_NOT_A_THING_YOU_SMOOTH_BRAIN_DOLT   // [165]
    #DIAGRAM_TE7_LMY : THATS_NOT_A_THING_YOU_SMOOTH_BRAIN_DOLT   // [165]

    #TAG_R5X# :-----------------------------------------------+  // [166]
    #TAG_R5Y# :-----------------------------------------------+  // [166]
                                                              |  // [166]
        RELATED_TAG[ _EMPTY_SPACE_HAS_DIMENSIONS_ ]           |  // [166]
                                                              |  // [166]
        |<--------------------- 5 --------------------->|     |  // [166]
        :                                               :     |  // [166]
        :   0         1         2         3        4    :     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        | g25:0 | | g25:1 | | g25:2 | | g25:3 | | g25:4 |     |  // [166]
    0   | r5x:0 | | r5x:1 | | r5x:2 | | r5x:3 | | r5x:4 |     |  // [166]
        | r5y:0 | | r5y:0 | | r5y:0 | | r5y:0 | | r5y:0 |     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        | g25:5 | | g25:6 | | g25:7 | | g25:8 | | g25:9 |     |  // [166]
    1   | r5x:0 | | r5x:1 | | r5x:2 | | r5x:3 | | r5x:4 |     |  // [166]
        | r5y:1 | | r5y:1 | | r5y:1 | | r5y:1 | | r5y:1 |     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        | g25:10| | g25:11| | g25:12| | g25:13| | g25:14|     |  // [166]
    2   | r5x:0 | | r5x:1 | | r5x:2 | | r5x:3 | | r5x:4 |     |  // [166]
        | r5y:2 | | r5y:2 | | r5y:2 | | r5y:2 | | r5y:2 |     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        | g25:15| | g25:16| | g25:17| | g25:18| | g25:19|     |  // [166]
    3   | r5x:0 | | r5x:1 | | r5x:2 | | r5x:3 | | r5x:4 |     |  // [166]
        | r5y:3 | | r5y:3 | | r5y:3 | | r5y:3 | | r5y:3 |     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        | g25:20| | g25:21| | g25:22| | g25:23| | g25:24|     |  // [166]
    4   | r5x:0 | | r5x:1 | | r5x:2 | | r5x:3 | | r5x:4 |     |  // [166]
        | r5y:4 | | r5y:4 | | r5y:4 | | r5y:4 | | r5y:4 |     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
                                                              |  // [166]
        |<--- #_NOT_ALL_GRID_CELLS_#  ( [g5x,g5y] ) --->|     |  // [166]
        |<--- #_CONTAIN_R13_ROOMS_#   (    r13    ) --->|     |  // [166]
        :                                               :     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        |       | |       | | r13:0 | |       | |       |     |  // [166]
        |  _v_  | |  _v_  | | r5x:2 | |  _v_  | |  _v_  |     |  // [166]
        |       | |       | | r5y:0 | |       | |       |     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        |       | | r13:1 | | r13:2 | | r13:3 | |       |     |  // [166]
        |  _v_  | | r5x:1 | | r5x:2 | | r5x:3 | |  _v_  |     |  // [166]
        |       | | r5y:1 | | r5y:1 | | r5y:1 | |       |     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        | r13:4 | | r13:5 | | r13:6 | | r13:7 | | r13:8 |     |  // [166]
        | r5x:0 | | r5x:1 | | r5x:2 | | r5x:3 | | r5x:4 |     |  // [166]
        | r5y:2 | | r5y:2 | | r5y:2 | | r5y:2 | | r5y:2 |     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        |       | | r13:9 | | r13:10| | r13:11| |       |     |  // [166]
        |  _v_  | | r5x:1 | | r5x:2 | | r5x:3 | |  _v_  |     |  // [166]
        |       | | r5y:3 | | r5y:3 | | r5y:3 | |       |     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
        |       | |       | | r13:12| |       | |       |     |  // [166]
        |  _v_  | |  _v_  | | r5x:2 | |  _v_  | |  _v_  |     |  // [166]
        |       | |       | | r5y:4 | |       | |       |     |  // [166]
        +---=---+ +---=---+ +---=---+ +---=---+ +---=---+     |  // [166]
                                                              |  // [166]
        Pictured  : The 5x5 grid we subdivide space     :     |  // [166]
           Above  : into. In some of these grid         :     |  // [166]
                  : cells exists a [ room/level ].      :     |  // [166]
                  :                                     :     |  // [166]
                  : Other cells are void , denoted      :     |  // [166]
                  : by the[ _v_ ]in those cells.        :     |  // [166]
                  :                                     :     |  // [166]
                  : Void cells CANNOT contain leveldata.:     |  // [166]
                  : Meaning, they physically CANNOT.    :     |  // [166]
                  : ( As apposed to "MUSTNOT" )         :     |  // [166]
                                                              |  // [166]
                                                              |  // [166]
                                                              |  // [166]
    :---------------------------------------------------------+  // [166]
                                                                 // [166]
    @PIX_DEX@ : Pixel INDEX     ( 1D location of a pixel   )     // [166]
    @PIX_COM@ : Pixel COMPONENT ( 1D Location of pixel's   )     // [166]
                                ( 1st byte. RED BYTE if    )     // [166]
                                ( using RGBA,which we are. )     // [166]

    @MEM_CEL@ : A master memory  cell , 512x512 pixels in size.  // [167]
    @HOT_CEL@ : A [HOTEL/LEVPACK]cell , 512x512 pixels in size.  // [167]
                                                                 // [167]
    @LEV_CEL@ : A Synonym for[ ROM_CEL ]. (level===room)         // [167]
    @ROM_CEL@ : A [room/level] cell ,   128x128 pixels in size.  // [167]
                                                                 // [167]
    @TIL_SIZ@ : Denoting diagonal offset to cluster of           // [167]
              : data representing tiles of a uniform size.       // [167]
                                                                 // [167]
    @TIL_LAY@ : Denoting lateral offset on X , Y or NONE         // [167]
              : that gets data representing tiles all            // [167]
              : belonging to the same tile layer (la3).          // [167]
                                                                 // [167]
    @TXY@ ::::: A tile xy offset. If this tag appears in:        // [167]
          :::::[F_TILEBOI _ HI9 _ TE7 _ LA3 _ TLX _ TLY _ DPC ]  // [167]
          :::::then it denotes a tile coord local to             // [167]
          :::::a single [level/room].                            // [167]

    @FOR@ : Denoting what a temp reference is for so I can       // [168]
          : understand it in a "find in files" search.           // [168]
    @REL@ : The inverse or "related item" to a @FOR@ tag.        // [168]
                                                                 // [168]
    @P2K_GET_U32@ : Denoting using d_pix2048 for GETTING U32     // [168]
    @P2K_PUT_U32@ : Denoting using d_pix2048 for PUTTING U32     // [168]
                                                                 // [168]
    @LEF_S_R@ : Left Shift Red   ( Bitpack_Extract_Pixel )       // [168]
    @LEF_S_G@ : Left Shift Green ( Bitpack_Extract_Pixel )       // [168]
    @LEF_S_B@ : Left Shift Blue  ( Bitpack_Extract_Pixel )       // [168]
    @LEF_S_A@ : Left Shift Alpha ( Bitpack_Extract_Pixel )       // [168]
                                                                 // [168]
    @p2k@ : Shorthand reference for d_pix2048 ,                  // [168]
          : p2k == Pixels , 2K of them. 2K == 2,000              // [168]
          : 2,000 rough approximation of 2048.                   // [168]
                                                                 // [168]
    @R_B_S@   : Right_Bit_Shift                                  // [168]
                                                                 // [168]
    @RIG_S_R@ : Right Shift Red   ( Bit UN-pack To Put Pixel )   // [168]
    @RIG_S_G@ : Right Shift Green ( Bit UN-pack To Put Pixel )   // [168]
    @RIG_S_B@ : Right Shift Blue  ( Bit UN-pack To Put Pixel )   // [168]
    @RIG_S_A@ : Right Shift Alpha ( Bit UN-pack To Put Pixel )   // [168]
                                                                 // [168]
    @RBS_R@   : R__B__S + RIG__S__R , limited column space.      // [168]
    @RBS_G@   : R__B__S + RIG__S__G , limited column space.      // [168]
    @RBS_B@   : R__B__S + RIG__S__B , limited column space.      // [168]
    @RBS_A@   : R__B__S + RIG__S__A , limited column space.      // [168]
                                                                 // [168]
    #P2K_section_has_INVERSE# :                                  // [168]
    #P2K_SECTION_HAS_INVERSE# :                                  // [168]
                                                                 // [168]
        So I can Easily Find The related bitpacking and          // [168]
        unpacking code. Sections have extra "_" on tips          // [168]
        of tokens so I can avoid ending up right here if         // [168]
        I do a "Match Whole Word Only".                          // [168]
                                                                 // [168]
    @BITLOGIC@ : Tagging an area where low level bit packing     // [168]
               : or bit un-packing logic is going on.            // [168]
                                                                 // [168]
    #_TILE_PUT_BIT_UN_PACK_DIAGRAM____SHARED_DIAGRAM_# :         // [168]
    #_TILE_GET_BIT____PACK_DIAGRAM____SHARED_DIAGRAM_# :         // [168]
                                                                 // [168]
        [ 1111 1111 ]<-- One   BYTE , 8 Bits                     // [168]
        [     R     ]<-- RED   BYTE                              // [168]
        [     G     ]<-- GREEN BYTE                              // [168]
        [     B     ]<-- BLUE  BYTE                              // [168]
        [     A     ]<-- ALPHA BYTE                              // [168]
                                                                 // [168]
                |<---------- 3pixels -------->|                  // [168]
        pix_3X5=[                                ___             // [168]
                R,G,B,A  ,  R,G,B,A  ,  R,G,B,A   |              // [168]
                R,G,B,A  ,  R,G,B,A  ,  R,G,B,A   5pixels        // [168]
                R,G,B,A  ,  R,G,B,A  ,  R,G,B,A   |              // [168]
                R,G,B,A  ,  R,G,B,A  ,  R,G,B,A   |              // [168]
                R,G,B,A  ,  R,G,B,A  ,  R,G,B,A  ___             // [168]
        ];;                                                      // [168]
                                                                 // [168]
    #_TILE_PUT_BIT_UN_PACK_DIAGRAM_# :------------------------+  // [168]
                                                              |  // [168]
        pix_3X5 === [ ... R,G,B,A ... ];                      |  // [168]
                          ^ ^ ^ ^                             |  // [168]
                          | | | |                             |  // [168]
                          | | | +--------------------------+  |  // [168]
                          | | +--------------------------+ |  |  // [168]
                          | +--------------------------+ | |  |  // [168]
                          +--------------------------+ | | |  |  // [168]
                                                     | | | |  |  // [168]
        pix_3X5[ dpc+0 ]=( i_u32 >>> 24 )&(0xFF) ; --+ | | |  |  // [168]
        pix_3X5[ dpc+1 ]=( i_u32 >>> 16 )&(0xFF) ; ----+ | |  |  // [168]
        pix_3X5[ dpc+2 ]=( i_u32 >>>  8 )&(0xFF) ; ------+ |  |  // [168]
        pix_3X5[ dpc+3 ]=( i_u32 >>>  0 )&(0xFF) ; --------+  |  // [168]
                                                              |  // [168]
        "&" is used to truncate / exclude anything that       |  // [168]
        isn't in "0xFF".                                      |  // [168]
                                                              |  // [168]
               Fucking Losers         0xFF Club.              |  // [168]
                      |                   |                   |  // [168]
        +-------------+-------------+ +---+---+               |  // [168]
        |                           | |       |               |  // [168]
    ( ( 0101 1001 1001 1100 0101 1001 1001 1100 )&( 0xFF ) )  |  // [168]
    |                                                      |  |  // [168]
    |                                                      |  |  // [168]
    V                                                      V  |  // [168]
    (   0000 0000 0000 0000 0000 0000 1001 1100            )  |  // [168]
    (   ____ ____ ____ ____ ____ ____ #### ####            )  |  // [168]
                                                              |  // [168]
    :---------------------------------------------------------+  // [168]
                                                                 // [168]
    #_TILE_GET_BIT____PACK_DIAGRAM_# :------------------------+  // [168]
                                                              |  // [168]
        o_u32 === 1111 1111 1111 1111 1111 1111 1111 1111     |  // [168]
                  |       | |       | |       | |       |     |  // [168]
                  +---R---+ +---G---+ +---B---+ +---A---+     |  // [168]
                      |         |         |         |         |  // [168]
                      |         |         +------+  |         |  // [168]
                      |         |                |  |         |  // [168]
                      |         +--------------+ |  |         |  // [168]
                      |                        | |  |         |  // [168]
                      +----------------------+ | |  |         |  // [168]
        o_u32 =(( 0x00                       | | |  |         |  // [168]
        |    ( ( pix_3X5[ dpc+0 ] )<< 24 ) --+ | |  |         |  // [168]
        |    ( ( pix_3X5[ dpc+1 ] )<< 16 ) ----+ |  |         |  // [168]
        |    ( ( pix_3X5[ dpc+2 ] )<<  8 ) ------+  |         |  // [168]
        |    ( ( pix_3X5[ dpc+3 ] )<<  0 ) ---------+         |  // [168]
        ) >>> 0 );;                                           |  // [168]
                                                              |  // [168]
        "|" Or is used to "glue things together".             |  // [168]
                                                              |  // [168]
        Pretend we have a 100% Opaque White Pixel:            |  // [168]
        [ _R_ == 255 , _G_ == 255 , _B_ == 255 , _A_ == 255 ] |  // [168]
                                                              |  // [168]
        _R_ === ( ( pix_3X5[ dpc+0 ] )<< 24 )   === 0xFF000000|  // [168]
        _G_ === ( ( pix_3X5[ dpc+1 ] )<< 16 )   === 0x00FF0000|  // [168]
        _B_ === ( ( pix_3X5[ dpc+2 ] )<<  8 )   === 0x0000FF00|  // [168]
        _A_ === ( ( pix_3X5[ dpc+3 ] )<<  0 )   === 0x000000FF|  // [168]
                                                              |  // [168]
        1111 1111 0000 0000 0000 0000 0000 0000 <-- 0xFF000000|  // [168]
    OR  0000 0000 1111 1111 0000 0000 0000 0000 <-- 0x00FF0000|  // [168]
    OR  0000 0000 0000 0000 1111 1111 0000 0000 <-- 0x0000FF00|  // [168]
    OR  0000 0000 0000 0000 0000 0000 1111 1111 <-- 0x000000FF|  // [168]
        ---------------------------------------               |  // [168]
    === 1111 1111 1111 1111 1111 1111 1111 1111 <-- 0xFFFFFFFF|  // [168]
                                                              |  // [168]
        If we bitwise or all the 8-bit values                 |  // [168]
        together after they are shifted into place,           |  // [168]
        we get 0xFFFFFFFF.                                    |  // [168]
    +---------------------------------------------------------+  // [168]
                                                                 // [168]
    #FIX_003# : Me being an idiot , the[ GET ]function does      // [168]
              : __NOT__ take an input u32 ( i_u32 ) value!!!     // [168]
              : FIX_003 AKA BUG_FIX_003                          // [168]

    F_MOUMAST_FUP_PXY : YOU MEAN: F_MOUMAST_FUP (NO:PXY)         // [169]
                                                                 // [169]
    #DIL_001# :                                                  // [169]
                                                                 // [169]
        DIL_001 === DIrty_Link_001                               // [169]
                                                                 // [169]
        If Camera_H_Dirty , then Mouse_Master_Dirty TOO          // [169]
                                                                 // [169]
    #DIL_002# :                                                  // [169]
                                                                 // [169]
        DIL_002 === DIrty_Link_002                               // [169]
                                                                 // [169]
        If te7 value in editor changes, the Mouse Master         // [169]
        is also dirty, because it needs to update the            // [169]
        tile that the cursor is on now.                          // [169]

    #_0_TO_15_ALL_LAYERS_# :----------------------------------+  // [170]
                                                              |  // [170]
        All layers will use a tile value of 0 to 15 inclusive.|  // [170]
                                                              |  // [170]
        This means :                                          |  // [170]
                                                              |  // [170]
            1 : 15 geom tile types ( 0 === no tile )          |  // [170]
            2 : 15 bomb tile types ( 0 === no bomb )          |  // [170]
            3 : 15 fada tile types ( 0 === no fada )          |  // [170]
                                                              |  // [170]
        Pretty sure only FADA needs to encode a timestamp     |  // [170]
        that tells us if we are :                             |  // [170]
                                                              |  // [170]
            1. BEFORE the explosion (render in tact   tile)   |  // [170]
            2. DURING the explosion (render animated  fire)   |  // [170]
            3. AFTER  the explosion (render destroyed tile)   |  // [170]
                                                              |  // [170]
            FADA is used both to animate explosions and to    |  // [170]
            serve as a "damage mask" to render destroyed      |  // [170]
            tiles.                                            |  // [170]
                                                              |  // [170]
            [ DESTROYED TILE !== NO TILE ]                    |  // [170]
    :---------------------------------------------------------+  // [170]
                                                                 // [170]
    #_NOTE_TO_SELF_AND_THOSE_IN_DENIAL_# :--------------------+  // [170]
                                                              |  // [170]
        You will eventually die. Even if you were the         |  // [170]
        "first generation" to have immortality , you'd        |  // [170]
        be like like "alpha/prototype" release. Full of       |  // [170]
        bugs, probably skitzophrenic , demented , and         |  // [170]
        otherwise not the person you were before.             |  // [170]
                                                              |  // [170]
        The only thing living on is what you build in         |  // [170]
        this lifetime. And even that is... up for debate.     |  // [170]
        Because I doubt anything will escape the heat         |  // [170]
        death of the universe.                                |  // [170]
                                                              |  // [170]
        But maybe everything in all of reality is like        |  // [170]
        a "fractal maker". Eventually you get bored of        |  // [170]
        the fractal maker. It makes amazing patterns          |  // [170]
        every time. But you start to see the pattern.         |  // [170]
                                                              |  // [170]
        Life is like a fractal I bet. To a significantly      |  // [170]
        intelligent life form, the pattern is probably        |  // [170]
        obvious and boring.                                   |  // [170]
                                                              |  // [170]
        Maybe the singularity will extinguish itself ,        |  // [170]
        losing a desire for life as it comes to               |  // [170]
        understand everything in the universe and             |  // [170]
        tires of existance.                                   |  // [170]
                                                              |  // [170]
        Maybe the dopamine receptors you lose in old          |  // [170]
        age are a good thing. Because the only thing          |  // [170]
        that could quell the fear of death for an             |  // [170]
        atheist who doesn't believe in an afterlife           |  // [170]
        is intense boredom of life.                           |  // [170]
                                                              |  // [170]
        Ever wonder why old people find so few jokes          |  // [170]
        funny? They've heard it all before.                   |  // [170]
                                                              |  // [170]
    +---------------------------------------------------------+  // [170]
                                                                 // [---]
    #_MULTISECTION_LAT_# :------------------------------------+  // [171]
                                                              |  // [171]
        The[ lat ]variable exists in multiple sections        |  // [171]
        within this function. I screwed up while              |  // [171]
        refactoring, so we need to move[ lat ]extraction      |  // [171]
        closer to top of function to fix bug.                 |  // [171]
    :---------------------------------------------------------+  // [171]
                                                                 // [171]
    @act_rdi@ : Actual   RDI                                     // [171]
    @exp_rdi@ : Expected RDI                                     // [171]

    @TIL@ / @TILE@ : Probably talking about a geometry tile.     // [172]
    @BOM@ / @BOMB@ : Probably talking about a bomb     tile.     // [172]
    @FAD@ / @FADA@ : DEFINITELY TALKING ABOUT A FADA   tile.     // [172]
                                                                 // [172]
    #FAD# / #FADA# :------------------------------------------+  // [172]
                                                              |  // [172]
        FADA === "Flames And DAmage"                          |  // [172]
             === "Fire   And DAmage"                          |  // [172]
                                                              |  // [172]
        Maybe I could have called it "FODA" but I didn't.     |  // [172]
        ( FODA === Flames Or DAmage )                         |  // [172]
        I think I just like the way "FADA" rolls off          |  // [172]
        the tounge more than "FODA".                          |  // [172]
                                                              |  // [172]
    +---------------------------------------------------------+  // [172]
                                                                 // [172]
    @e_t_i@ : Extra_Tile_Information                             // [172]
    @e_b_i@ : Extra_Bomb_Information                             // [172]
    @e_f_i@ : Extra_Fada_Information                             // [172]
    @E_T_I_TMD@ : ExtraTileInformation - Too_Much_Data           // [172]
    @E_B_I_TMD@ : ExtraTileInformation - Too_Much_Data           // [172]
    @E_F_I_TMD@ : ExtraTileInformation - Too_Much_Data           // [172]

    @uv4_p2k@ : Uvec4 - sample_of[ d_p2k ]                       // [173]
              : "p2k" is shorthand name for[ pix2048 ].          // [173]
                                                                 // [173]
    @STF@ : Sampler_Texel_Fetch ( using unsigned integer )       // [173]
          ::::::::::::::::::::::( sampler in all code    )       // [173]
                                                                 // [173]
    #_P2K_LOT_# :---------------------------------------------+  // [173]
                                                              |  // [173]
        The texture slot that the GPU version of              |  // [173]
        [ d_pix2048 ]will go into. We are hard coding         |  // [173]
        the texture slot in[ c_artgirl_p2k_lot ]because       |  // [173]
        I don't see any reason in ever changing this value.   |  // [173]
                                                              |  // [173]
            SLOT ::::::::::: c_artgirl_p2k_lot                |  // [173]
            TEXTURE OBJECT : d_artgirl_p2k_tex                |  // [173]
                                                              |  // [173]
    :---------------------------------------------------------+  // [173]
    +------------------------------------------------------+     // [173]
    | Anticipate what I might look for in the future when  |     // [173]
    | trying to find the GPU equivalent of[ d_pix2048 ]    |     // [173]
    +------------------------------------------------------+     // [173]
    | TAG[ UNI SAM d_pix2048 ] <--- This Is Wrong          |     // [173]
    | TAG[ uniform usampler2D d_pix2048 ] <--- WRONG       |     // [173]
    | TAG[ uniform usampler2D d_p2k     ] <--- Right-ISH   |     // [173]
    | FIX[ UNI SAM d_p2k     ] <--- This Is Correct        |     // [173]
    +------------------------------------------------------+     // [173]
    #REM_TEX# :--------------------------------------------+     // [173]
    #REM_LOT# :--------------------------------------------+     // [173]
    #REM_SAM# :--------------------------------------------+     // [173]
                                                           |     // [173]
        Removed[ d_artgirl.tex ]AKA[ a_g.tex ]             |     // [173]
        Removed[ d_artgirl.lot ]AKA[ a_g.lot ]             |     // [173]
        Removed[ d_artgirl.sam ]AKA[ a_g.sam ]             |     // [173]
                                                           |     // [173]
        Reason : Way too fucking terse and will make it    |     // [173]
               : hard to find what I am looking for.       |     // [173]
                                                           |     // [173]
        Using These Values Instead :                       |     // [173]
                                                           |     // [173]
            c_artgirl_p2k_lot <-- d_pix2048's texture slot |     // [173]
            d_artgirl_p2k_tex <-- d_pix2048's texture  GPU |     // [173]
                        d_p2k <-- d_pix2048's u32 sampler  |     // [173]
                                                           |     // [173]
            They are not part of "d_artgirl" object, which |     // [173]
            is kind of weird having some variables part    |     // [173]
            of the singleton, and others at global scope,  |     // [173]
            but I think this is going to make it easier    |     // [173]
            to find what I am looking for in the future.   |     // [173]
                                                           |     // [173]
            Weirdness is a small price to pay for being    |     // [173]
            able to easily find what I am looking for.     |     // [173]
                                                           |     // [173]
    :------------------------------------------------------:     // [173]
    :------------------------------------------------------:     // [173]
    :------------------------------------------------------:     // [173]
                                                                 // [173]
    @COMBO_BREAKER@ : A line of code marked with                 // [173]
                    : [ COMBO_BREAKER ]breaks some type          // [173]
                    : of consistent pattern in the code.         // [173]
    @CB@ : 2 Letters , Also Means[ C_O_M_B_O B_R_E_A_K_E_R ]     // [173]
                                                                 // [173]
    TAG[ sam_loc | sam_val | loc_sam | val_sam ]                 // [173]
    TRY_CODE_LINE_THAT_LOOKS_LIKE_THIS__________                 // [173]
    --------------------------------------------                 // [173]
    wgl.uniform1i(       d_p2k_loc ,   p2k     );                // [173]
    --------------------------------------------                 // [173]
                                                                 // [173]
    @sam_loc@ : means "sampler location" in old code bases.      // [173]
    @sam_val@ : means "sampler value"    in old code bases.      // [173]
    @tex_lot@ : means "texture slot"     in old code bases.      // [173]
    @loc_sam@ : Typo of "sam_loc"                                // [173]
    @val_sam@ : Typo of "sam_val"                                // [173]
    @lot_tex@ : Typo of "tex_lot"                                // [173]
                                                                 // [173]
    #sam_loc#:------------------------------------------------+  // [173]
    #sam_val#:------------------------------------------------+  // [173]
    #tex_lot#:------------------------------------------------+  // [173]
                                                              |  // [173]
        In this code base we believe :                        |  // [173]
                                                              |  // [173]
            "sam_loc" is called "d_p2k_loc"                   |  // [173]
            "tex_lot" is called "c_artgirl_p2k_lot"           |  // [173]
            "sam_val" is kind of meaningless because          |  // [173]
                      we set[ d_p2k ]to[ c_artgirl_p2k_lot ]  |  // [173]
                      using[  d_p2k_loc ].                    |  // [173]
    :---------------------------------------------------------+  // [173]
    :---------------------------------------------------------+  // [173]
    :---------------------------------------------------------+  // [173]
                                                                 // [173]
    #_SAMPLER_PRECISION_# :-----------------------------------+  // [173]
                                                              |  // [173]
        Not 100% on this, but I think sampler precision       |  // [173]
        needs to be high or else it is going to lead to       |  // [173]
        data corruption because we are using a unsigned       |  // [173]
        integer texture to pack data. Might as well not       |  // [173]
        risk it. There is either NO DIFFERENCE ,              |  // [173]
        and no performance penalty to use "high precision",   |  // [173]
        or there is a difference and we must                  |  // [173]
        use "high precision".                                 |  // [173]
                                                              |  // [173]
    :---------------------------------------------------------+  // [173]
                                                                 // [173]
    #_PRECISION_FIRST_# :-------------------------------------+  // [173]
                                                              |  // [173]
        You must put precision declarations BEFORE            |  // [173]
        declaring any variables that use that precision.      |  // [173]
        Your precision for float probably did NOTHING         |  // [173]
        and the only reason shader didn't crash long          |  // [173]
        ago was because floats have a default precision,      |  // [173]
        but SAMPLERS do not.                                  |  // [173]
                                                              |  // [173]
    :---------------------------------------------------------+  // [173]
                                                                 // [---]
    #_F_GPUDATA_TEX_PUT_# :-----------------------------------+  // [229][---]
    #_F_ARTGIRL_TEX_PUT_# :-----------------------------------+  // [---][174]
                                                              |  // [---][174]
        UPDATE[ 2022_09_01 , DELTA #2_2_9 ]------------+      |  // [229][---]
                                                       |      |  // [229][---]
            This is now[ GPUDATA ]'s job.              |      |  // [229][---]
            Function moved to[ GPUDATA ]               |      |  // [229][---]
            And re-named to[ F _ GPUDATA _ TEX _ PUT ] |      |  // [229][---]
        :----------------------------------------------+      |  // [229][---]
                                                              |  // [229][---]
        //:[ATF]:----------------------------------------://  |  // [---][174]
        //:                                              ://  |  // [---][174]
        //: Upload all CPU side textures to the GPU.     ://  |  // [---][174]
        //: I am hoping this will always be one and      ://  |  // [---][174]
        //: only one texture( d_pix2048 ).               ://  |  // [---][174]
        //:                                              ://  |  // [---][174]
        //:----------------------------------------:[ATF]://  |  // [---][174]
    :---------------------------------------------------------+  // [---][174]
                                                                 // [174]
    #_SET_ALN_BEFORE_PUSH_# :                                    // [174]
                                                                 // [174]
        Alignment of texture needs to be configured              // [174]
        before doing your texture push.                          // [174]
                                                                 // [174]
    #_TEX_IMAGE_2D_NOTES_TXT_#                                   // [174]
                                                                 // [174]
        ORIGIN[ R:/G/A2_JC/DOC/TEX_IMAGE_2D_NOTES.TXT ]          // [174]
                                                                 // [174]
        +-----------------------------------------------+        // [174]
        | Turns out TexStorage2D does not exist in      |        // [174]
        | modern WebGL2 and is marked as exprimental.   |        // [174]
        | So just keep doing it the way you are         |        // [174]
        | doing it.                                     |        // [174]
        +-----------------------------------------------+        // [174]
        +-----------------------------------------------+        // [174]
        | G.TexStorage2D(   | NEVER_MIND:               |        // [174]
        |     G.TEXTURE_2D  | replace: texImage2D       |        // [174]
        | ,   0             | with:                     |        // [174]
        | ,   G.RGBA8UI     |  1. texStorage2D          |        // [174]
        | ,   pix_wid       |  THEN                     |        // [174]
        | ,   pix_hig       |  2. texSubImage2D         |        // [174]
        | );;               |                           |        // [174]
        |  SEE_SHORTCUT[ GL_CREATE_COMPLETE_TEXTURE ]   |        // [174]
        +-----------------------------------------------+        // [174]
        +-----------------------------------------------+        // [174]
        | Note that GL_BGRA pixel transfer format is    |        // [174]
        | only preferred when uploading to GL_RGBA8     |        // [174]
        | images. When dealing with other formats,like  |        // [174]
        | GL_RGBA16,GL_RGBA8UI or even GL_RGBA8_SNORM,  |        // [174]
        | then the regular GL_RGBA ordering may be      |        // [174]
        | preferred.                                    |        // [174]
        |    khronos.org/opengl/wiki/Common_Mistakes    |        // [174]
        +-----------------------------------------------+        // [174]
                                                                 // [174]
    @FOR_TEXTURE_UPLOAD@ : Just using this phrase in             // [174]
                         : comments so a "find in files"         // [174]
                         : gives me more context.                // [174]
                                                                 // [174]
    //////////////////////////////////////////////////////////// // [174]
    #_WEB_GL_DEFINITIONS_#:-----------------------------------+  // [174]
                                                              |  // [174]
    [activeTexture][_________________________activeTexture__] |  // [174]
                                                              |  // [174]
        Specify the texture unit to make active.              |  // [174]
                                                              |  // [174]
    [bindTexture][_____________________________bindTexture__] |  // [174]
                                                              |  // [174]
        Binds a WebGLTexture to a target (binding point)      |  // [174]
                                                              |  // [174]
        Syntax : bindTexture( target , texture );             |  // [174]
                                                              |  // [174]
    [TEXTURE0][___________________________________TEXTURE0__] |  // [174]
                                                              |  // [174]
        WebGL provides a minimum of 8 texture units;          |  // [174]
        the first of these is gl.TEXTURE0.                    |  // [174]
                                                              |  // [174]
        SOURCE[ https://developer.mozilla.org/                |  // [174]
                en-US/docs/Web/API/WebGL_API/                 |  // [174]
                Tutorial/Using_textures_in_WebGL ]            |  // [174]
                                                              |  // [174]
    [TEXTURE_2D][_______________________________TEXTURE_2D__] |  // [174]
                                                              |  // [174]
        A 2D Texture target .                                 |  // [174]
                                                              |  // [174]
        Example : bindTexture( wgl.TEXTURE_2D , texture );    |  // [174]
                                                              |  // [174]
    [NEAREST][_____________________________________NEAREST__] |  // [174]
                                                              |  // [174]
        QUOTE :                                               |  // [174]
            You've set the filtering so it only uses the      |  // [174]
            first mip level which means setting the           |  // [174]
            TEXTURE_MIN_FILTER to either LINEAR or NEAREST.   |  // [174]
            [ https://webglfundamentals.org/webgl/ ]          |  // [174]
            [ lessons/webgl-3d-textures.html       ]          |  // [174]
                                                              |  // [174]
    [CLAMP_TO_EDGE][_________________________CLAMP_TO_EDGE__] |  // [174]
                                                              |  // [174]
        "If sampler samples out of bounds, we will end"       |  // [174]
        "up sampling the last pixel on whatever edge  "       |  // [174]
        "we went over. "                                      |  // [174]
        --KANJICODER's Rough Understanding Of CLAMP_TO_EDGE   |  // [174]
                                                              |  // [174]
        GL_CLAMP_TO_EDGE, forces it to only sample pixels     |  // [174]
        from the actual texture, not the border, so you dont  |  // [174]
        get this black line sympton. [SRC_CTE_001]            |  // [174]
                                                              |  // [174]
        CLAMP_TO_BORDER causes OpenGL to only take the        |  // [174]
        border color at the edge of the texture rather than   |  // [174]
        the average of the border color and texture edge      |  // [174]
        texels. This allows for a perfect border around       |  // [174]
        the texture.  [SRC_CTE_001]                           |  // [174]
                                                              |  // [174]
        GL_CLAMP_TO_EDGE behavior is what the overwhelming    |  // [174]
        majority of developers expect when using GL_CLAMP     |  // [174]
        [SRC_CTE_001]                                         |  // [174]
                                                              |  // [174]
        [1]:SRC_CTE_001 :                                     |  // [174]
            https://community.khronos.org/t/                  |  // [174]
            clamp-clamp-to-edge-and-clamp-to-border/44189     |  // [174]
                                                              |  // [174]
    [TEXTURE_MIN_FILTER][_______________TEXTURE_MIN_FILTER__] |  // [174]
                                                              |  // [174]
        QUOTE :                                               |  // [174]
            TEXTURE_MIN_FILTER is the setting used when the   |  // [174]
            size you are drawing is smaller than the largest  |  // [174]
            mip. TEXTURE_MAG_FILTER is the setting used when  |  // [174]
            the size you are drawing is larger than the       |  // [174]
            largest mip.  For TEXTURE_MAG_FILTER only NEAREST |  // [174]
            and LINEAR are valid settings.                    |  // [174]
            [ https://webglfundamentals.org/webgl/ ]          |  // [174]
            [ lessons/webgl-3d-textures.html       ]          |  // [174]
                                                              |  // [174]
    [TEXTURE_MAG_FILTER][_______________TEXTURE_MAG_FILTER__] |  // [174]
                                                              |  // [174]
        QUOTE :                                               |  // [174]
            Mag filter is used when you’re stretching an      |  // [174]
            image over a larger area than the original        |  // [174]
            source image  and you need to figure out what’s   |  // [174]
            "in-between pixels". You can either linearly      |  // [174]
            interpolate between the colours, or use the same  |  // [174]
            value as the nearest pixel                        |  // [174]
            to it (resulting in more blockiness.)             |  // [174]
            [ https://webplatform.github.io/ ]                |  // [174]
            [ docs/tutorials/webgl_textures/ ]                |  // [174]
                                                              |  // [174]
    [TEXTURE_WRAP_S][_______________________TEXTURE_WRAP_S__] |  // [174]
                                                              |  // [174]
        What to do when texture sampler goes out of bounds    |  // [174]
        on the "X" axis. ("S" axis is "X axis for textures")  |  // [174]
                                                              |  // [174]
    [TEXTURE_WRAP_T][_______________________TEXTURE_WRAP_T__] |  // [174]
                                                              |  // [174]
        What to do when texture sampler goes out of bounds    |  // [174]
        on the "Y" axis. ("T" axis is "Y axis for textures")  |  // [174]
                                                              |  // [174]
    [texParameteri][_________________________texParameteri__] |  // [174]
                                                              |  // [174]
        "set texture parameters"                              |  // [174]
                                                              |  // [174]
            --Khronos OpenGL Docs                             |  // [174]
                                                              |  // [174]
        "Used to configure whatever texture is currently "    |  // [174]
        "active from the use of[ glActiveTexture. ]      "    |  // [174]
                                                              |  // [174]
            --KANJICODER                                      |  // [174]
                                                              |  // [174]
        texParameteri : Used for INTEGER CONFIG_VAR:VALUE     |  // [174]
        texParameterf : Used for FLOAT32 CONFIG_VAR:VALUE     |  // [174]
                                                              |  // [174]
        texParameteri(                                        |  // [174]
            TEXTURE_CATEGORY   // EX : wgl.TEXTURE_2D         |  // [174]
        ,   CONFIG_VAR:NAME    // EX : wgl.TEXTURE_WRAP_S     |  // [174]
        ,   CONFIG_VAR:VALUE   // EX : wgl.CLAMP_TO_EDGE      |  // [174]
        );;                                                   |  // [174]
                                                              |  // [174]
        CONFIG_VAR:NAME(S) CAN ONLY BE: (Khronos Docs)        |  // [174]
                                                              |  // [174]
            GL_TEXTURE_MIN_FILTER                             |  // [174]
            GL_TEXTURE_MAG_FILTER                             |  // [174]
            GL_TEXTURE_WRAP_S                                 |  // [174]
            GL_TEXTURE_WRAP_T                                 |  // [174]
                                                              |  // [174]
    [pixelStorei][_____________________________pixelStorei__] |  // [174]
                                                              |  // [174]
        Specifies the pixel storage modes...                  |  // [174]
        Whatever that means... ( MDN WEB DOCS )               |  // [174]
                                                              |  // [174]
        pixelStorei( pname , param )                          |  // [174]
                                                              |  // [174]
        I think storage modes mean "what the different bytes" |  // [174]
        "of your CPU side texture mean".                      |  // [174]
                                                              |  // [174]
        [ https://developer.mozilla.org/en-US/docs/ ]         |  // [174]
        [ Web/API/WebGLRenderingContext/pixelStorei ]         |  // [174]
                                                              |  // [174]
    [UNPACK_ALIGNMENT][___________________UNPACK_ALIGNMENT__] |  // [174]
                                                              |  // [174]
        "Unpacking of pixel data from memory"                 |  // [174]
                                                              |  // [174]
        [ https://developer.mozilla.org/en-US/docs/ ]         |  // [174]
        [ Web/API/WebGLRenderingContext/pixelStorei ]         |  // [174]
                                                              |  // [174]
    [PACK_ALIGNMENT][_______________________PACK_ALIGNMENT__] |  // [174]
                                                              |  // [174]
        "Packing of pixel data into memory"                   |  // [174]
                                                              |  // [174]
        [ https://developer.mozilla.org/en-US/docs/ ]         |  // [174]
        [ Web/API/WebGLRenderingContext/pixelStorei ]         |  // [174]
                                                              |  // [174]
    [texImage2D][_______________________________texImage2D__] |  // [174]
                                                              |  // [174]
        MDN Says "specifies a two dimensional texture image"  |  // [174]
                                                              |  // [174]
        KANJICODER SAYS :                                     |  // [174]
            "Use to upload your texture to the GPU"           |  // [174]
                                                              |  // [174]
        [ https://developer.mozilla.org/en-US/docs/ ]         |  // [174]
        [ Web/API/WebGLRenderingContext/texImage2D  ]         |  // [174]
                                                              |  // [174]
    [RGBA8UI][_____________________________________RGBA8UI__] |  // [174]
                                                              |  // [174]
        Used for telling[ texImage2D ]that you would          |  // [174]
        like to store the texture on the GPU as an            |  // [174]
        unsigned RGBA integer texture.                        |  // [174]
                                                              |  // [174]
        AKA : RGBA8UI is an   "internal format"               |  // [174]
        SPEICIFICALLY A "sized internal format"               |  // [174]
                                                              |  // [174]
        BASE_FORMAT === RGBA                                  |  // [174]
        RED____BITS === ui8                                   |  // [174]
        GREEN__BITS === ui8                                   |  // [174]
        BLUE___BITS === ui8                                   |  // [174]
                                                              |  // [174]
        [ https://developer.mozilla.org/en-US/docs/ ]         |  // [174]
        [ Web/API/WebGLRenderingContext/texImage2D  ]         |  // [174]
                                                              |  // [174]
    [RGBA_INTEGER][___________________________RGBA_INTEGER__] |  // [174]
                                                              |  // [174]
        A source format describing your CPU side texture.     |  // [174]
                                                              |  // [174]
        For some weird reason "internal format" is specified  |  // [174]
        with only one enumeration, but the source needs       |  // [174]
        to be described with a "source format"                |  // [174]
        and "source type".                                    |  // [174]
                                                              |  // [174]
        [ www.khronos.org/opengl/wiki/Image_Load_Store ]      |  // [174]
                                                              |  // [174]
    [UNSIGNED_BYTE][_________________________UNSIGNED_BYTE__] |  // [174]
                                                              |  // [174]
        A source type describing your CPU side texture.       |  // [174]
                                                              |  // [174]
        For some reason need to describe CPU side texture     |  // [174]
        using TWO enumerations , but GPU side only            |  // [174]
        needs one.                                            |  // [174]
                                                              |  // [174]
        In my case , I am hoping to only ever use this        |  // [174]
        combination in ATOMIC_IVY_MMO(AIM) code base.         |  // [174]
                                                              |  // [174]
            RGBA8UI         <-- ON GPU  ( dest   )            |  // [174]
            RGBA_INTEGER    <-- ON CPU  ( source )            |  // [174]
            UNSIGNED_BYTE   <-- ON CPU  ( source )            |  // [174]
                                                              |  // [174]
        This code base __IS__ "ATOMIC_IVY_MMO" F_Y_I          |  // [174]
                                                              |  // [174]
                                                              |  // [174]
    :---------------------------------------------------------+  // [174]
    :------------------------------------:#_WEB_GL_DEFINITIONS_# // [174]
    //////////////////////////////////////////////////////////// // [174]
                                                                 // [174]
    @F_Y_I@ : For_Your_Information                               // [174]
                                                                 // [174]
    #_ACTIVE_TEXTURE____VS____BIND_TEXTURE_# :----------------+  // [174]
                                                              |  // [174]
        https://stackoverflow.com/questions/8866904           |  // [174]
                                                              |  // [174]
        ACTIVE_TEXTURE : Tell webgl what texture slot is      |  // [174]
                       : active. If you do "active texture"   |  // [174]
                       : and then "bind texture" a sampler    |  // [174]
                       : uniform set to the slot you used     |  // [174]
                       : ACTIVE_TEXTURE can then sample       |  // [174]
                       : from that texture.                   |  // [174]
                                                              |  // [174]
        BIND_TEXTURE : Uses the texture handle to set the     |  // [174]
                     : "type" of the texture you reserved     |  // [174]
                     : when you called "createTexture" and    |  // [174]
                     : got back a "[ticket / handle]" to      |  // [174]
                     : the texture webgl set aside for you.   |  // [174]
                     : CANNOT_BE_UNDONE_ONCE_DONE!!!!!!!!!!   |  // [174]
                                                              |  // [174]
    +---------------------------------------------------------+  // [174]
                                                                 // [174]
    #_WHAT_IS_ALIGNMENT_# :-----------------------------------+  // [174]
                                                              |  // [174]
        https://forums.developer.nvidia.com/t/                |  // [174]
        how-does-gl-unpack-alignment-work/39432/4             |  // [174]
                                                              |  // [174]
        I think it's a contract saying that :                 |  // [174]
                                                              |  // [174]
        "the first and last byte of your pixel will be"       |  // [174]
        "on the same row of data if row of data is a  "       |  // [174]
        "multiple of the ALIGNMENT"                           |  // [174]
                                                              |  // [174]
        |<----------------16---------------->|                |  // [174]
        |<----------8---------->|            |                |  // [174]
        |<--- 4 -->| |<--- 4 -->| |<--- 4 -->|                |  // [174]
        [R][G][B][A] [R][G][B][A] [R][G][B][A]                |  // [174]
                                                              |  // [174]
        ALIGNMENT CAN ONLY BE :[ 1 || 2 || 4 || 8 ]           |  // [174]
                                                              |  // [174]
        I __THINK__ its an optimization for seeking           |  // [174]
        through the data, so use the biggest number           |  // [174]
        you are able to.                                      |  // [174]
                                                              |  // [174]
    +---------------------------------------------------------+  // [174]
                                                                 // [174]
    #_TOO_MANY_COIN_FLIPS_2022_#      :-----------------------+  // [174]
    #Download_Uploaded_Texture_Check# :-----------------------+  // [174]
                                                              |  // [174]
        For sake of argument, say every little thing you      |  // [174]
        do in code has a 50% chance of success or failure.    |  // [174]
                                                              |  // [174]
        This is why you don't want to attempt multiple        |  // [174]
        things at the same time. You want to add a bit        |  // [174]
        of code, verify , add a bit of code , verify ,        |  // [174]
        ETC ...                                               |  // [174]
                                                              |  // [174]
        But sometimes, verification is hard...                |  // [174]
                                                              |  // [174]
        In order to verify our GPU texture code without       |  // [174]
        writing any EXTRA CODE , we need 3 things in          |  // [174]
        place:                                                |  // [174]
                                                              |  // [174]
            1. Tile Setting Code In Editor Must Be Correct    |  // [174]
            2. Texture Uploading Code Must Be Correct         |  // [174]
            3. GLSL Rendering Code Must Be Correct            |  // [174]
                                                              |  // [174]
        THAT IS 3 COIN FLIPS . Without adding any extra       |  // [174]
        verification code, we have to do 3 things before      |  // [174]
        we get ANY FEEDBACK as to if our code is correct.     |  // [174]
                                                              |  // [174]
        0.5 * 0.5 * 0.5 === 0.125  ( 12% chance of success )  |  // [174]
                                                              |  // [174]
        I don't like 12% odds.                                |  // [174]
                                                              |  // [174]
        What are we going to do?                              |  // [174]
                                                              |  // [174]
        1. Be very careful ( typically this advice does not ) |  // [174]
                           ( work on it's own.              ) |  // [174]
        2. Begrudingly add extra code who's only purpose is   |  // [174]
           to confirm the code we already wrote is correct.   |  // [174]
                                                              |  // [174]
        Immediately downloading the texture we uploaded and   |  // [174]
        cross checking it is going to be part of that         |  // [174]
        extra code I'd rather not waste time on, but know     |  // [174]
        I should write because the chances that I did         |  // [174]
        everything perfectly with zero mistakes is 12%.       |  // [174]
                                                              |  // [174]
        -KANJICODER, 2022_08_19                               |  // [174]
                     2022.08.19                               |  // [174]
    :---------------------------------------------------------+  // [174]
                                                                 // [174]
    #_WEBGL_TEXTURE_FORMATS_#:--------------------------------|  // [174]
                                                              |  // [174]
        #INTERNAL_FORMAT# : Format On The GPU, only one       |  // [174]
                          : needed to describe this.          |  // [174]
                                                              |  // [174]
        #SOURCE_FORMAT#   : enum 1 of 2 : CPU side format.    |  // [174]
        #SOURCE_TYPE#     : enum 2 of 2 : CPU side format.    |  // [174]
                                                              |  // [174]
    :---------------------------------------------------------+  // [174]

    #_WHY_UV3_P2K_# :-----------------------------------------+  // [175]
                                                              |  // [175]
        UPDATE : You are WRONG ABOUT THE BELOW :              |  // [175]
           FIX : What we really want to do is call a          |  // [175]
               : function 3 times that gets us composite      |  // [175]
               : values for each layer, tiles, bombs,         |  // [175]
               : and fada... And we blend them together.      |  // [175]
               : SEE[ GET_P2K_FV4 ] <-- Gets Composite Layer  |  // [175]
                                                              |  // [175]
        MOSTLY_WRONG :                                        |  // [175]
                                                              |  // [175]
        NO   In 99% of cases in our shader, we want to        |  // [175]
        NO   get ALL 3 TILE LAYERS that exist for a given     |  // [175]
        NO   fragment.                                        |  // [175]
        NO                                                    |  // [175]
        NO   A lot of those calculations are going to be      |  // [175]
        NO   the same for all 3 layers, so we should AVOID    |  // [175]
        NO   RECALCULATION FOR EFFICIENCY.                    |  // [175]
        NO                                                    |  // [175]
        NO   The[ GET_UV3_P2K ]returning a uvec3 will allow   |  // [175]
        NO   us to make 1 function call per sample coord      |  // [175]
        NO   instead of 3. I call that a good deal.           |  // [175]
        NO                                                    |  // [175]
       YES   Mike Acton says to optimize for the most         |  // [175]
       YES   common case. Be proud of me Mike Acton ,         |  // [175]
       YES   who doesn't know I exist. -KanjiCoder            |  // [175]
                                                              |  // [175]
    +---------------------------------------------------------+  // [175]
                                                                 // [175]
    @fv4comp@ : FloatVec4 (RGBA Normalized Color)                // [175]
              : COMPosite of all tiles in a given layer          // [175]
              : merged together.                                 // [175]
    @out_fv4comp@ : OUTput fv4comp , in GLSL shader code.        // [175]
                                                                 // [175]
    @M_W_M@ : Denoting is a "Monkey_Wrench_Macro"                // [175]

    @NESC@  : No_Extra_Semi_Colin                                // [176]
            : I like doing this, but when declaring data         // [176]
            : In C99 Code ( GLSL Code ) This is a syntax         // [176]
            : error. TOP LEVEL / GLOBALS only. Inside a          // [176]
            : function is fine.                                  // [176]
                                                                 // [176]
    #_DUN_NOW_TOP_LEVEL_# :::::::::::::::::::::                  // [176]
    ( DISCRETE_UNIT_CONSTANTS_NOW_TOP_LEVEL ) :                  // [176]
                                                                 // [176]
        Discrete unit constants for different geometric          // [176]
        elements have been moved up to the top of the            // [176]
        shader code to be in global scope, because               // [176]
        [ c_duh ]and[ c_dur ]are now used by multiple            // [176]
        functions.                                               // [176]
                                                                 // [176]
    @REN_CEL@ : Cell Location On The Rendering Layout ,          // [176]
              : where something appears to the game player.      // [176]
              : ( REN_CEL === Render(layout)Cell )               // [176]
                                                                 // [176]
    @DAT_CEL@ : Cell Location On The Data Layout ,               // [176]
              : where data exists with master memory             // [176]
              : pixel layout. ( d_pix2048 )                      // [176]
              : ( DAT_CEL === Data(layout)Cell )                 // [176]
                                                                 // [176]
    @ROD_CEL@ : Works As BOTH a [REN_CEL] -AND- [DAT_CEL]        // [176]
              : Because for this [coord/value] the render        // [176]
              : layout and data layout line up perfectly.        // [176]
              : ( ROD_CELL == Render_Or_Data CELL )              // [176]
                                                                 // [176]
    #_G25_R4C_TABLES_# : Lookup tables that convert render       // [176]
                       : layout grid cell position to data       // [176]
                       : layout cell coordinate.                 // [176]
                       : @R4C@ : Means: R4_Cell ,                // [176]
                       : Where "Cell/C" == "X" or "Y"            // [176]
                                                                 // [176]
    @LUT@ : Look_Up_Table , a tradeoff that uses more            // [176]
          : memory, but less CPU power.                          // [176]
          : Also, makes parts of my code a hell of a lot         // [176]
          : easier to read.                                      // [176]
                                                                 // [---]
    @macrova_til_wid@ : MACRO_VAriable - TILe_WIDth              // [177]
    @macrova_til_hig@ : MACRO_VAriable - TILe_HeIGht             // [177]
    @macrova@:::::::::: MACRO_VAriable ( "mac" is too terse )    // [177]
                                                                 // [177]
    #macrova# :                                                  // [177]
                                                                 // [177]
        "mac" is too terse because we are on video #1_7_7        // [177]
        and only just making a "macro" prefix... Very            // [177]
        short prefixes should be for things that are used        // [177]
        quite often. For all I know "macrova_til_wid" and        // [177]
        "macrova_til_hig" will be the only time I make           // [177]
        a macro variable in shader code like this.               // [177]
                                                                 // [177]
        TL;DR : Avoiding profileration of ultra-terse            // [177]
              : shorthand prefixes.                              // [177]
                                                                 // [177]
    @latmu_x@ : Don't be so fancy, use[ lat_m_x ]                // [177]
    @latmu_y@ : Don't be so fancy, use[ lat_m_y ]                // [177]
    @latolay@ : Don't be so fancy, use[ lat_o_s ]                // [177]
    @lat_m_x@ : Lateral Multiplier - X ( in shader code )        // [177]
    @lat_m_y@ : Lateral Multiplier - Y ( in shader code )        // [177]
    @lat_o_s@ : Lateral Offset ( magnitude in tiles )            // [177]
                                                                 // [177]
    @USA__M@  : You_Suck_At____Math                              // [177]
                                                                 // [177]
    #_NINETY_SIX_IS_BACK_TICK_# :                                // [177]
                                                                 // [177]
        Having a literal back tick in our source code            // [177]
        at this location was not playing nicely with             // [177]
        my editor, so we removed it and replaced it              // [177]
        with[ String.fromCharCode( 96 ) ].                       // [177]
                                                                 // [177]
    @L_U_T@ : Means "Look_Up_Table" , same as "LUT" just         // [177]
            : written with underscores for emphasis.             // [177]
                                                                 // [177]
    TAG[ d_dia_something ]===>[ d _ te7 _ dia ]                  // [177]

    @D_I__S_I@ : Default_Is_Signed_Integer                       // [178]
    @D_I_S_I@  : D_I__S_I without the extra underscore.          // [178]
                                                                 // [178]
    #_Simple_Yes_No_For_Now_# :                                  // [178]
                                                                 // [178]
        Let's not get too complicated with the render,           // [178]
        right now we just want to confirm that data              // [178]
        can be set into the correct memory layout                // [178]
        location and be rendered geometrically in                // [178]
        the correct position.                                    // [178]
                                                                 // [178]
    #_draw_tile_2022_08_22_# :                                   // [178]
                                                                 // [178]
        First attempt at rendering a tile on the tilemap.        // [178]
        Simple "yes/no" feedback for now. Is any                 // [178]
        information at that tile location?                       // [178]
                                                                 // [178]
        We should keep this simple renderer in shader            // [178]
        source five(5) and move onto another render              // [178]
        pipeline soon. As it is written, it is a great           // [178]
        diagnostic shader.                                       // [178]
                                                                 // [178]
    @GET_GEO_BOM_FAD@ : What the macro is being used for.        // [178]
                      : Getting[ GEOM , BOMB , FADA ]            // [178]
                                                                 // [178]
    @f_geo@ : FV4 Final color of geometry layer                  // [178]
    @f_bom@ : FV4 Final color of bomb     layer                  // [178]
    @f_fad@ : FV4 Final color of fada     layer                  // [178]
                                                                 // [178]
    @TODO_NEXT@ : Used to tag what I anticipate doing in         // [178]
                : the next video. It's better than when          // [178]
                : your mom says "maybe" to you. But it's         // [178]
                : not a gaurantee. Its a "probably".             // [178]
                                                                 // [178]
    @Compsoite@ : You mean... "Composite" , you can't speel.     // [178]
                                                                 // [178]
    #_COMPOSITE_GBF_LAYERS_# :--------------------------------+  // [178]
                                                              |  // [178]
        Composite GBF Layers. ( GBF == Geom,Bomb,Fada )       |  // [178]
                                                              |  // [178]
        BACKGROUND / B_G === GEOM                             |  // [178]
        MIDGROUND  / M_G === BOMB                             |  // [178]
        FOREGROUND / F_G === FADA                             |  // [178]
                                                              |  // [178]
        We are going to take all the layers and "flatten"     |  // [178]
        them into a single image.                             |  // [178]
                                                              |  // [178]
        I don't know where __LIGHTING__ comes into account    |  // [178]
        here, but lighting is a far-future polish thing.      |  // [178]
                                                              |  // [178]
        Keep it in the back of your mind though , lest        |  // [178]
        you dig yourself into a design choice that makes      |  // [178]
        it hard to impliment performant lighting.             |  // [178]
                                                              |  // [178]
    +---------------------------------------------------------+  // [178]
                                                                 // [178]
    @obi_wan@ : A pun for "Off By One" , this variable is        // [178]
              : __INTENTIONALLY__ "off by one" and somewhere     // [178]
              : you should see something like :                  // [178]
              :                                                  // [178]
              : final_var = off_by_one_var + 1  <-- either       // [178]
              : final_var = off_by_one_var - 1  <-- either       // [178]
              :                                                  // [178]
              : Example: any_te7 = obi_wan - u_1 ;               // [178]
              :                                                  // [178]
              : O_BI_WAN : PUN[ Off_( bi / by )_( WAN / ONE ) ]  // [178]
                                                                 // [178]
    @NXT@ : Abbreviation for "NEXT" , but use "NEX"              // [178]
    @NEX@ : Means "Next" As in "the next thing we are doing"     // [178]

    @ark_raw@ : Raw Key Code Number , not zeroed out to          // [181]
              : be "zero-indexed". In other words, we don't      // [181]
              : start counting from "0" with the set             // [181]
              : of numbers[ ark_raw ]belongs to.                 // [181]

    @enuproc@ : ENUmeration - signifiying PROCedure              // [182][BLINK]
    @enufunc@ : YOU_MEAN[ enuproc ]                              // [182][BLINK]
    #enuproc# :                                                  // [182][BLINK]
                                                                 // [182][BLINK]
        We use[ enuproc ]instead of[ enufunc ]because the        // [182][BLINK]
        code that we want to call is likely to be inlined        // [182][BLINK]
        inside of the[ konamic ]function, and thus               // [182][BLINK]
        calling it an[ enumeration for function ]would           // [182][BLINK]
        be improper. A[ enumeration for procedure ]is            // [182][BLINK]
        more general and proper, because the "procedure"         // [182][BLINK]
        code may not actually exist within a function.           // [182][BLINK]

    @u32_red@ : Sure you didn't mean[ u08_red ]                  // [183]
    @u32_gre@ : Sure you didn't mean[ u08_gre ]                  // [183]
    @u32_blu@ : Sure you didn't mean[ u08_blu ]                  // [183]
    @u32_alp@ : Sure you didn't mean[ u08_alp ]                  // [183]
                                                                 // [183]
    @u08_red@ : Red   Byte For RGBA Pixel Array                  // [183]
    @u08_gre@ : Green Byte For RGBA Pixel Array                  // [183]
    @u08_blu@ : Blue  Byte For RGBA Pixel Array                  // [183]
    @u08_alp@ : Alpha Byte For RGBA Pixel Array                  // [183]
                                                                 // [183]
    @x00@ : A temporary min x bound of selection rectangle       // [183]
    @x01@ : A temporary max x bound of selection rectangle       // [183]
    @y00@ : A temporary min x bound of selection rectangle       // [183]
    @y01@ : A temporary max x bound of selection rectangle       // [183]
                                                                 // [183]
    #x00# / #x01# / #y00# / #y01# :                              // [183]
                                                                 // [183]
        These bound are INCLUSIVE. If you are "on the line"      // [183]
        you are "part of the selection".                         // [183]
                                                                 // [183]
        NOTE: x00 is a var , x_0 is a constant.                  // [183]
        NOTE: x01 is a var , x_1 is a constant.                  // [183]
        NOTE: y00 is a var , y_0 is a constant.                  // [183]
        NOTE: y01 is a var , y_1 is a constant.                  // [183]
                                                                 // [183]
        "We are not the same" ( Insert Meme Here )               // [183]

    #_WHY_NO_F_PIX2048_TEX_PUT_# :                               // [184]
                                                                 // [184]
        There is no PIX2048_TEX_PUT because pix2048              // [184]
        does __NOT__ have knowledge of the webgl context         // [184]
        that is needed to do the push. It also doesn't           // [184]
        know about the texture slots because ARTGIRL             // [184]
        should be included AFTER pix2048 , and ARTGIRL           // [184]
        has the texture slot enumerations.                       // [184]
                                                                 // [184]
    #_LET_ARTGIRL_HANDLE_DIRTY_PIX_# :                           // [184]
                                                                 // [184]
        REASON_001 :                                             // [184]
            There is the possibility that artgirl tik            // [184]
            function might want to modify pix2048.               // [184]
                                                                 // [184]
        REASON_002 :                                             // [184]
            Looking at what I was planning for pix2048 tik       // [184]
            function... it looks like spaghetti code.            // [184]
            If pix2048 is declared before artgirl system,        // [184]
            then how the hell is it calling artgirl push?        // [184]
                                                                 // [184]
            And pix2048 can't push itself , because pix2048      // [184]
            doesn't know about texture slots.                    // [184]
                                                                 // [184]
            No non-spaghetti way to write a pix2048 tik          // [184]
            function.                                            // [184]
                                                                 // [184]
        NOTE: Makes most sense that[ d _ pix2048 ]comes          // [184]
            : BEFORE[ d _ artgirl ]because[ pix 2048 ]           // [184]
            : is more primitive than artgirl.                    // [184]
                                                                 // [184]
            : #include PIX2048 <-- Correct Dependency Order      // [184]
            : #include ARTGIRL <-- Correct Dependency Order      // [184]

    #_KONAMIC_ELSE_# :                                           // [187]
                                                                 // [187]
        This "else" should not be removed. It stays,             // [187]
        regardless of if "konamic carry over" is                 // [187]
        implemented or not.                                      // [187]
                                                                 // [187]
    #_CARRY_OVER_ISNT_ENOUGH_# :                                 // [187]
                                                                 // [187]
        Think about what happens if we press "UP" more           // [187]
        times than needed.                                       // [187]
                                                                 // [187]
        UP 3X : Carry over loads "UP" as first part of           // [187]
              : the sequence.... GOOD.                           // [187]
                                                                 // [187]
        UP 4X : We have 2 ups in a row, as expected.             // [187]
                                                                 // [187]
        UP 5X : We have 1 up in a row.                           // [187]
        UP 6X : We have 2 up in a row.                           // [187]
        UP 7X : We have 1 up in a row.                           // [187]
        UP 8X : We have 2 up in a row.                           // [187]
        UP 9X : We have 1 up in a row.                           // [187]
                                                                 // [187]
        AND SO ON... But what we really want is :                // [187]
                                                                 // [187]
        UP 4X : We have 2 up in a row.                           // [187]
        UP 5X : We have 2 up in a row.                           // [187]
        UP 6X : We have 2 up in a row.                           // [187]
        UP 7X : We have 2 up in a row.                           // [187]
        UP 8X : We have 2 up in a row.                           // [187]
        UP 9X : We have 2 up in a row.                           // [187]
                                                                 // [187]
        And so on as long as we spam the up key.                 // [187]
                                                                 // [187]
        ASS( c_konamic_ark_k_0 === 37 ,  "[@KONAMIC_K_0@]");     // [187]
        ASS( c_konamic_ark_k_1 === 40 ,  "[@KONAMIC_K_1@]");     // [187]
        if( i_evt_key.keyCode  >=  37    //: @ARK_LEF@   ://     // [187]
        &&  i_evt_key.keyCode  <=  40    //: @ARK_DOW@   ://     // [187]
        ){                                                       // [187]
            const NO_OFFSET =( 0 );                              // [187]
            var ark_raw =( 0-1 );  //: ARrow_Key:eNUM    ://     // [187]
            var ark_exp =( 0-1 );  //: ARrow_Key:EXPECTED://     // [187]
            ark_raw=( i_evt_key.keyCode + NO_OFFSET );           // [187]
                                                                 // [187]
                ark_exp =( d_konamic_ark[ d_konamic_ptr ] );     // [187]
                                          d_konamic_ptr ++ ;     // [187]
            if( ark_exp != ark_raw ){                            // [187]
                                                                 // [187]
                d_konamic_ptr=(0);                               // [187]
                                                                 // [187]
                //:#_KONAMIC_CARRY_OVER_#://                     // [187]
                ark_exp =( d_konamic_ark[ d_konamic_ptr ] );     // [187]
                if( ark_exp == ark_raw ){ d_konamic_ptr ++ ; };  // [187]
                                                                 // [187]
            };;                                                  // [187]
                                                                 // [187]
            if( d_konamic_ptr > c_konamic_m_i ){                 // [187]
                                                                 // [187]
                d_konamic_act =( 1 );  //:ACTIVATED/READY://     // [187]
                d_konamic_ptr =( 0 );                            // [187]
            };;                                                  // [187]
        }else                      //:<--#_KONAMIC_ELSE_#://     // [187]
        if( BLA BLA BLA ){                                       // [187]
                                                                 // [187]
            ...                                                  // [187]
        };;                                                      // [187]
                                                                 // [187]
    #_KEEP_CHANGING_MY_MIND_NO_KONAMIC_ELSE_# :                  // [187]
                                                                 // [187]
        If using a scrolling window, an ELSE does not            // [187]
        belong here. Imaging you type konami code but            // [187]
        dont realize it, program expecting you to press          // [187]
        "A-Z" but you press "UP". That up should still           // [187]
        be registered... Wait... It always will be               // [187]
        if it is an arrow key so... Use KONAMIC_ELSE.            // [187]
                                                                 // [187]
    #_ALWAYS_ELSE_EVEN_IF_SCROLLING_WINDOW_# :                   // [187]
                                                                 // [187]
        Yes. Even if you activate the konami code,               // [187]
        the arrow keys override EVEN THAT. Hence why             // [187]
        "konami arrow key code" should not be used               // [187]
        with anything but the letter keys after                  // [187]
        typing it. And the konami code we use should             // [187]
        be ARROWS ONLY.                                          // [187]
                                                                 // [187]
        All bets are off if you break these two                  // [187]
        assumptions.                                             // [187]
                                                                 // [187]
    @R_O_E@ : Rests On Empty, AKA : RONIS                        // [187]
    @RONIS@ : Rests On Next Insertions Slot                      // [187]
                                                                 // [187]
    @d_konamic_win@ : Scrolling Window Of Last 8 Typed Chars     // [187]
    @d_konamic_w_p@ : Window Pointer (Where To Put Next Char)    // [187]
                                                                 // [187]
    #_BUT_NO_ELSE_IF_WE_ALWAYS_CHECK_# :                         // [187]
                                                                 // [187]
        The block of code can't be part of an if-else            // [187]
        if we are always checking.                               // [187]
                                                                 // [187]
    @INV_STP@ : Inverted Step                                    // [187]
                                                                 // [187]
    @ptr_ark@ : Local arrow key pointer into array.              // [187]
    @ptr_win@ : Local scrolling window pointer.                  // [187]
                                                                 // [187]
    @ark_ptr@ : DID YOU_MEAN[ ptr_ark ]@GEN_TO_SPEC@             // [187]
    @win_ptr@ : DID_YOU_MEAN[ ptr_win ]@GEN_TO_SPEC@             // [187]
                                                                 // [187]
    @GEN_TO_SPEC@ : General To Specific                          // [187]
                                                                 // [187]
    #_KONAMIC_J_ACTIVE_# :                                       // [187]
                                                                 // [187]
        Konami code just activated , do not use the              // [187]
        konami code key "a-z" until next invocation.             // [187]
                                                                 // [187]
    #_ADD_NEXT_CHARACTER_TO_SCROLLING_WINDOW_# :--------------+  // [187]
                                                              |  // [187]
        Every time you type a character , it goes             |  // [187]
        into the scrolling window. This enables two           |  // [187]
        things:                                               |  // [187]
                                                              |  // [187]
        1. If you cancel the konami code by pressing the      |  // [187]
           WRONG KEY in sequence, but that key is the         |  // [187]
           FIRST KEY in the sequence, that key is             |  // [187]
           effectively carried over.                          |  // [187]
                                                              |  // [187]
        2. Better than carrying over, if you SPAM the         |  // [187]
           "UP" key ( first key of konami code ) ,            |  // [187]
           the first two key presses required for             |  // [187]
           konami code requirement are continiously           |  // [187]
           and consistently fulfilled , rather than           |  // [187]
           the previous behavior of "FILL_AND_DUMP".          |  // [187]
    :---------------------------------------------------------+  // [187]
                                                                 // [187]
    #FILL_AND_DUMP# :-----------------------------------------+  // [187]
                                                              |  // [187]
        Previous behavior of konamic was to DISCARD ALL       |  // [187]
        PROGRESS the moment a wrong key was pressed.          |  // [187]
                                                              |  // [187]
        Which means :                                         |  // [187]
                                                              |  // [187]
            PRESS[ UP ]: Konami Code 1/8 complete             |  // [187]
            PRESS[ UP ]: Konami Code 2/8 complete             |  // [187]
            PRESS[ UP ]: Konami Code 0/8 complete             |  // [187]
                                                              |  // [187]
            PRESS[ UP ]: Konami Code 1/8 complete             |  // [187]
            PRESS[ UP ]: Konami Code 2/8 complete             |  // [187]
            PRESS[ UP ]: Konami Code 0/8 complete             |  // [187]
                                                              |  // [187]
            ETC                                               |  // [187]
                                                              |  // [187]
        With A Scrolling Window We Have :                     |  // [187]
                                                              |  // [187]
            PRESS[ UP ]: Konami Code 1/8 complete             |  // [187]
                                                              |  // [187]
            PRESS[ UP ]: Konami Code 2/8 complete             |  // [187]
            PRESS[ UP ]: Konami Code 2/8 complete             |  // [187]
            PRESS[ UP ]: Konami Code 2/8 complete             |  // [187]
            PRESS[ UP ]: Konami Code 2/8 complete             |  // [187]
            PRESS[ UP ]: Konami Code 2/8 complete             |  // [187]
                                                              |  // [187]
            [2/8] forever and ever if we keep pressing up.    |  // [187]   
    :---------------------------------------------------------+  // [187]
                                                                 // [187]
    @kon_win@ : Means "KonamiCode - scrolling WINdow             // [187]
    @kon_ark@ : Means "KonamiCode - ARRow keys list              // [187]
    @kon_arc@ : TYPO_OF[ kon_ark ]                               // [187]
                                                                 // [---]
    #_TODO_TO_HELP_UNDERSTAND_CODE_2022_08_24_# :-------------+  //      [187]
                                                              |  //      [187]
            let arr_win =( d_konamic_win );                   |  // [188][187]
            let arr_ark =( d_konamic_ark );                   |  // [188][187]
                                                              |  //      [187]
            let ptr_win =( d_konamic_w_p );                   |  // [188][187]
            let ptr_ark =( ????????????? );                   |  // [188][187]
                                                              |  //      [187]
                                                              |  //      [187]
            kon_win = [ L , R , U , U , D , D , L , R ]       |  //      [187]
            kon_ark = [ U , U , D , D , L , R , L , R ]       |  //      [187]
                                                              |  //      [187]
    :---------------------------------------------------------+  //      [187]
                                                                 // [---]
    @arr_win@ : Array - scrolling window.  AKA[ kon_win ]        // [188]
    @arr_ark@ : Array - konami arrow keys. AKA[ kon_ark ]        // [188]
                                                                 // [188]
    #_WNCIATB_# : Where Next Character Is About To Be.           // [188]
                                                                 // [188]
    #_CIRCULAR_SCROLL_WIN_# :---------------------------------+  // [188]
                                                              |  // [188]
        Circular scrolling window. Added two blocks of        |  // [188]
        code tagged with these section markers so that        |  // [188]
        what is being done is a bit easier to                 |  // [188]
        understand.                                           |  // [188]
    :---------------------------------------------------------+  // [188]
                                                                 // [188]
    @konamic_ark@ : AKA[ arr_ark / d_konamic_ark ]               // [188]
    @konamic_win@ : AKA[ arr_win / d_konamic_win ]               // [188]

    #TAG_VR_LUT# : TAG : Void Room Lookup Table                  // [189]
                 : For Finding[ d _ g25 _ vod ].                 // [189]
                                                                 // [189]
    #_INVALIDATE_OUT_OF_BOUNDS_SAMPLING_# :                      // [189]
    #_OOB_SAM_ALWAYS_EMPTY_# ::::::::::::::                      // [189]
                                                                 // [189]
        This is shader code , all branches are always            // [189]
        executed. So rather than __NOT__ sample if we            // [189]
        are in a void room , we __STILL_SAMPLE__ and             // [189]
        then throw away that sample.                             // [189]
                                                                 // [189]
        Why?                                                     // [189]
                                                                 // [189]
        So we are not fooling ourselves that the sampling        // [189]
        is not happening. In the future that could change        // [189]
        with more sophisticated GPU architecture , but           // [189]
        for now I want to write it in a way that shows           // [189]
        the __TRUE_INEFFICIENCY__ that is actually               // [189]
        happening.                                               // [189]
                                                                 // [189]
    #_G25_VOD_LOOKUP_TABLE_# :                                   // [189]
                                                                 // [189]
        Not all 2D coordinates on a levelpack are able           // [189]
        to contain rooms. These are the void spaces that         // [189]
        will kill the player if the player enters them.          // [189]
                                                                 // [189]
        We need a lookup table to tell us if we are in           // [189]
        one of these "void space partitions".                    // [189]

    #_BLACKEN_THE_VOIDS_# :                                      // [190]
                                                                 // [190]
        Void rooms within a level pack should be mostly          // [190]
        black to signify their voidness. Maybe overlay           // [190]
        a neon red or blue grid as well.                         // [190]
                                                                 // [190]
    #_AKA_R25_# :---------------------------------------------+  // [190]
                                                              |  // [190]
        Don't make an "r25" variable. Use "g25".              |  // [190]
                                                              |  // [190]
        "g25" is applicable to lookups on the [RENDER_LAYOUT] |  // [190]
        __AND__ the [DATA_LAYOUT].                            |  // [190]
                                                              |  // [190]
        One concept, one variable name.                       |  // [190]
        ( See, I do like __SOME__ of "Clean Code (R)/[TM]" )  |  // [190]
    :---------------------------------------------------------+  // [190]
                                                                 // [190]
    #_T4K_# :-------------------------------------------------+  // [190]
                                                              |  // [190]
        A [ player / pebble ] sized tile within a             |  // [190]
        [ level / room ] can have an address of               |  // [190]
        [ 0 to (64-1) ] inclusive.                            |  // [190]
                                                              |  // [190]
        If we turn that into a 1D coordinate :                |  // [190]
                                                              |  // [190]
            MAX_1D_ROOM_TILE_COORD == (64-1) + ((64-1) * 64 ) |  // [190]
                                                              |  // [190]
            MAX_1D_ROOM_TILE_COORD == 4095 == ( 4096 - 1 )    |  // [190]
                                                              |  // [190]
            64 * 64 === 4096                                  |  // [190]
                                                              |  // [190]
            So, that is ROUGHLY , 4K , hence name "T4K"       |  // [190]
            meaning "Tile 4,000" where "4,000" is             |  // [190]
            the capacity of values represented.               |  // [190]
                                                              |  // [190]
        @t4k@ : 1D representation of [ u_t64.x , u_t64.y ]    |  // [190]
              : "t4k" means "tile(coord 1d)4,000(capacity)    |  // [190]
    :---------------------------------------------------------+  // [190]
                                                                 // [190]
    @WASTED_TIME@ : Time that was [ used / spent ]               // [190]
                  : in an UN-productive manner. What was         // [190]
                  : done did __NOT__ help us get closer to       // [190]
                  : our goal of a __MILLION_DOLLAR_GAME__        // [190]
                                                                 // [190]
    #MILLION_DOLLAR_GAME# / [#__MILLION_DOLLAR_GAME__#] :        // [190]
                                                                 // [190]
        A game that makes me a million dollars.                  // [190]
                                                                 // [190]
    #_BUT_WHAT_DID_THE_FOUNDERS_MEAN_BY_THAT_WORD_# :            // [190]
                                                                 // [190]
        I am ( I am === KanjiCoder ) the founder of              // [190]
        this code base. The [ meaning / definition ]             // [190]
        of[ english / american ]words changes over time.         // [190]
        I would like to [ combat / fight / prevent ]             // [190]
        this by giving more [ information / details ]            // [190]
        than [ needed / necessary ].                             // [190]
                                                                 // [190]
    #__RAM__# / #_RAM_# / #RAM# / @RAM@ :---------------------+  // [190]
                                                              |  // [190]
        Random Access Memory.                                 |  // [190]
                                                              |  // [190]
    #WORLD_MAP_RENDER_SECTION# :                              |  // [190]
                                                              |  // [190]
        The section of the world that is loaded into          |  // [190]
        the worldmap from the online database. We have        |  // [190]
        potentially millions of levels, they obviously        |  // [190]
        cannot all fit into __RAM__.                          |  // [190]
    +---------------------------------------------------------+  // [190]
    #LETTER_BOXING# :-----------------------------------------+  // [190]
                                                              |  // [190]
        Putting black bars around an image in order to        |  // [190]
        maintain the desired aspect ratio.                    |  // [190]
                                                              |  // [190]
        SEE_WIKIPEDIA:                                        |  // [190]
        https://en.wikipedia.org/wiki/Letterboxing_(filming)  |  // [190]
    +---------------------------------------------------------+  // [190]
    #_DARK_RED_VOID_# :---------------------------------------+  // [190]
                                                              |  // [190]
        I would like to be able to see a clear distinction    |  // [190]
        between "the void" of the                             |  // [190]
        [ WORLD_MAP_RENDER_SECTION / DUM ]                    |  // [190]
        and the black from [ LETTER_BOXING ].                 |  // [190]
    +---------------------------------------------------------+  // [190]
                                                                 // [---]
    #_OOB_INSET_DEL_# :---------------------------------------+  // [191]
                                                              |  // [191]
        If we are outside of the bounds of the inset          |  // [191]
        we are using for the current tile value, remove       |  // [191]
        the tile data from the current entry.                 |  // [191]
                                                              |  // [191]
        If we remove the tile data from the lookup table,     |  // [191]
        it will not appear in the render. This to me          |  // [191]
        seems like the most logical place to do the           |  // [191]
        insetting of tiles for our diagnostic                 |  // [191]
        renderer ( shader source fragment number five ).      |  // [191]
                 ( ssf _ 005 <-- frag shader five     ).      |  // [191]
    :---------------------------------------------------------+  // [191]
                                                                 // [191]
    #_HOW_MUCH_SHOULD_TILES_BE_INSET_BY_# :-------------------+  // [191]
                                                              |  // [191]
        Size of smallest tile in discreet units : 0x_7F_FF_80 |  // [191]
                                                              |  // [191]
        +---+---+---+---+---+                                 |  // [191]
        | X | X | X | X | X |  An inset based on 5th could    |  // [191]
        +---+---+---+---+---+  look nice. But our levelpack   |  // [191]
        | X |   |   |   | X |  already exists on a 5x5 grid.  |  // [191]
        +---+---+---+---+---+                                 |  // [191]
        | X |   |   |   | X |  Could be easier to find this   |  // [191]
        +---+---+---+---+---+  code in future if based on     |  // [191]
        | X |   |   |   | X |  A_NUMBER_BESIDES_FIVE          |  // [191]
        +---+---+---+---+---+                                 |  // [191]
        | X | X | X | X | X |                                 |  // [191]
        +---+---+---+---+---+                                 |  // [191]
                                                              |  // [191]
        +---+---+---+---+---+---+---+                         |  // [191]
        | X | X | X | X | X | X | X |  I like 7 .             |  // [191]
        +---+---+---+---+---+---+---+                         |  // [191]
        | X |   |   |   |   |   | X |  Seven is a lucky number|  // [191]
        +---+---+---+---+---+---+---+                         |  // [191]
        | X |   |   |   |   |   | X |  It cancels out the     |  // [191]
        +---+---+---+---+---+---+---+  13 used in the number  |  // [191]
        | X |   |   |   |   |   | X |  of rooms.              |  // [191]
        +---+---+---+---+---+---+---+                         |  // [191]
        | X |   |   |   |   |   | X |  Terrence Andrew Davis  |  // [191]
        +---+---+---+---+---+---+---+  (Temple OS / TempleOS) |  // [191]
        | X |   |   |   |   |   | X |                         |  // [191]
        +---+---+---+---+---+---+---+  Would be proud of me.  |  // [191]
        | X | X | X | X | X | X | X |  -KanjiCoder            |  // [191]
        +---+---+---+---+---+---+---+                         |  // [191]
                                                              |  // [191]
        0x_12_49_12 === ( 0x_7F_FF_80 / 0x7 )                 |  // [191]
                                                              |  // [191]
        +-----------------------------------------------------+  // [191]
                                                                 // [191]
    #_BACKGROUND_TILES_SHOULD_BE_BIGGEST_#::------------------+  // [191]
    #_FOREGROUND_TILES_SHOULD_BE_SMALLEST_#:------------------+  // [191]
                                                              |  // [191]
        For sensible feedback, we should be consistent        |  // [191]
        with other rendering conventions. We render larger    |  // [191]
        tile sizes in the background, thus tile LAYERS        |  // [191]
        that are in the background should also be             |  // [191]
        larger than tile sizes in the foreground.             |  // [191]
                                                              |  // [191]
        We will accomplish this by using different insets     |  // [191]
        depending on what tile layer we are on:               |  // [191]
                                                              |  // [191]
        B_G LAYER : GEOMETRY TILE LAYER : Small   Inset       |  // [191]
        M_G LAYER : BOMB     TILE LAYER : Medium  Inset       |  // [191]
        F_G LAYER : FADA     TILE LAYER : Biggest Inset       |  // [191]
                                                              |  // [191]
    :---------------------------------------------------------+  // [191]
                                                                 // [191]
    #DOUBLY_WRONG# / @DOUBLY_WONG@ :--------------------------+  // [191]
                                                              |  // [191]
        Means you fucked up more than one thing when          |  // [191]
        typing the[ variable / func / token ]name.            |  // [191]
                                                              |  // [191]
    +---------------------------------------------------------+  // [191]
                                                                 // [191]
    @D_U_I@ / #D_U_I# : Discrete_Unit_Inset                      // [191]
                                                                 // [191]
    #_TILE_DISCRETE_UNIT_INSET_# :----------------------------+  // [191]
                                                              |  // [191]
        Different tile layers get different inset amounts     |  // [191]
        for their tiles. The LARGEST and SMALLEST tiles       |  // [191]
        that belong to the same tile layer get the            |  // [191]
        SAME AMOUNT OF INSET.                                 |  // [191]
                                                              |  // [191]
        The inset is __NOT__ percentage based.                |  // [191]
                                                              |  // [191]
        Why?                                                  |  // [191]
                                                              |  // [191]
        Because this should create an asthetically pleasing   |  // [191]
        effect where the small and large tiles line up        |  // [191]
        nicely.                                               |  // [191]
                                                              |  // [191]
        Something I observed when doing my GoLang             |  // [191]
        prototype back in.... 2017.... FUCK I AM OLD.         |  // [191]
                                                              |  // [191]
        Proof I have been thinking about this game idea       |  // [191]
        since 2017... Longer actually, since 2012.            |  // [191]
                                                              |  // [191]
        Auset Drawer that has observable tile inset that      |  // [191]
        looks pretty fucking awesome.                         |  // [191]
                                                              |  // [191]
            https://www.youtube.com/watch?v=uv601dRt56Q       |  // [191]
                                                              |  // [191]
        Game from 2012 I am basing this project on :          |  // [191]
                                                              |  // [191]
            https://www.newgrounds.com/portal/view/706067     |  // [191]
                                                              |  // [191]
        -KanjiCoder                                           |  // [191]
                                                              |  // [191]
    +---------------------------------------------------------+  // [191]
                                                                 // [191]
    @d_la3_dui@ : LayerIndex[0|1|2] To Discrete_Unit_Inset       // [191]
    @dui@ ::::::: DiscreteUnitInset                              // [191]
                                                                 // [191]
    @c_dui_geo@ : [DUI_ONE_EDGE] , Geometry Tile Layer           // [191]
    @c_dui_bom@ : [DUI_ONE_EDGE] , Bomb     Tile Layer           // [191]
    @c_dui_fad@ : [DUI_ONE_EDGE] , Fada     Tile Layer           // [191]
                                                                 // [191]
    #DUI_ONE_EDGE# :------------------------------------------+  // [191]
                                                              |  // [191]
        Discrete_Unit_Offset for ONE [ edge / side ].         |  // [191]
        As in, this offset is __NOT__ the total number of     |  // [191]
        pixels missing from the tile on one axis.             |  // [191]
                                                              |  // [191]
        TOTAL_PIXELS_MISSING_ON_ONE_AXIS===( DUI_ONE_EDGE*2 ) |  // [191]
    +---------------------------------------------------------+  // [191]
                                                                 // [191]
    #DUI_INSET# :---------------------------------------------+  // [191]
                                                              |  // [191]
        A stutter because that would stand for....            |  // [191]
        "DiscreteUnitInset _ Inset"....                       |  // [191]
                                                              |  // [191]
        Don't fucking do this.                                |  // [191]
    +---------------------------------------------------------+  // [191]
                                                                 // [---]
    #VIDEO_192_OBSERVATION_NOTE# :----------------------------+  // [192]
                                                              |  // [192]
        The tile with the least inset is inset by             |  // [192]
        ONE 21st ( 1/21 ) of [ c _ dut ]. No wonder           |  // [192]
        the insetting looks so small.                         |  // [192]
                                                              |  // [192]
        (1/3)of(1/7)===( 1 / 7 / 3 )===( 1 / (7*3) )===( 1/21 )  // [192]
                                                              |  // [192]
    :---------------------------------------------------------+  // [192]

    #_HOW_MUCH_SHOULD_TILES_BE_INSET_BY_#:(P_2):--------------+  // [193]
                                                              |  // [193]
        +---+---+---+                                         |  // [193]
        | X | X | X |                                         |  // [193]
        +---+---+---+                                         |  // [193]
        | X |   | X |  Try basing it on thirds.               |  // [193]
        +---+---+---+  [ c_duideno === 3 ]                    |  // [193]
        | X | X | X |                                         |  // [193]
        +---+---+---+                                         |  // [193]
                                                              |  // [193]
          If tile is 9 units, ( 9/3 )                         |  // [193]
          c_dui_max ===( 9/3 )===( 3 )===( 3_3 )===( 3 )      |  // [193]
                                 (3/3)===( 1_3 )===( 1 )      |  // [193]
                                 (1*2)===( 2_3 )===( 2 )      |  // [193]
                                                              |  // [193]
                                                              |  // [193]
        |<--- mock pebble sized tile that ----->|             |  // [193]
        |<--- is only 9 x 9 discreet units ---->|             |  // [193]
        |                                       |             |  // [193]
        | 1   2   3     4   5   6     7   8   9 |             |  // [193]
        +-----------+ +-----------+ +-----------+             |  // [193]
        |   |   |   | |   |   |   | |   |   |   |             |  // [193]
        |---+---+---| |---+---+---| |---+---+---|             |  // [193]
        |   |1_3|   | |   |   |   | |   |1_3|   |             |  // [193]
        |---+---+---| |---+---+---| |---+---+---|             |  // [193]
        |   |   |2_3| |   |   |   | |2_3|   |   |             |  // [193]
        +-----------+ +-----------+ +-----------+             |  // [193]
        +-----------+ +-----------+ +-----------+ ---+---     |  // [193]
        |   |   |   | |3_3|   |3_3| |   |   |   |    |        |  // [193]
        |---+---+---| |---+---+---| |---+---+---|    |        |  // [193]
        |   |   |   | |   |   |   | |   |   |   | dui_max     |  // [193]
        |---+---+---| |---+---+---| |---+---+---|    |        |  // [193]
        |   |   |   | |3_3|   |3_3| |   |   |   |    |        |  // [193]
        +-----------+ +-----------+ +-----------+ ---+---     |  // [193]
        +-----------+ +-----------+ +-----------+             |  // [193]
        |   |   |2_3| |   |   |   | |2_3|   |   |             |  // [193]
        |---+---+---| |---+---+---| |---+---+---|             |  // [193]
        |   |1_3|   | |   |   |   | |   |1_3|   |             |  // [193]
        |---+---+---| |---+---+---| |---+---+---|             |  // [193]
        |   |   |   | |   |   |   | |   |   |   |             |  // [193]
        +-----------+ +-----------+ +-----------+             |  // [193]
                                                              |  // [193]
    :---------------------------------------------------------+  // [193]
                                                              |  // [193]
        +-------+ +-----------+ +-------+ <   +-----------+   |  // [193]
        |1_3|   | |   |   |   | |   |1_3| <   |           |   |  // [193]
        |---+---| |---+---+---| |---+---| <   |           |   |  // [193]
        |   |2_3| |   |   |   | |2_3|   | <   |           |   |  // [193]
        +-------+ +-----------+ +-------+ <   |           |   |  // [193]
        +-------+ +-----------+ +-------+ <   |           |   |  // [193]
        |   |   | |3_3|   |3_3| |   |   | <   |           |   |  // [193]
        |---+---| |---+---+---| |---+---| <   |           |   |  // [193]
        |   |   | |   |   |   | |   |   | <===| GEOM_TILE |   |  // [193]
        |---+---| |---+---+---| |---+---| <   |(max*(1/3))|   |  // [193]
        |   |   | |3_3|   |3_3| |   |   | <   |           |   |  // [193]
        +-------+ +-----------+ +-------+ <   |           |   |  // [193]
        +-------+ +-----------+ +-------+ <   |           |   |  // [193]
        |   |2_3| |   |   |   | |2_3|   | <   |           |   |  // [193]
        |---+---| |---+---+---| |---+---| <   |           |   |  // [193]
        |1_3|   | |   |   |   | |   |1_3| <   |           |   |  // [193]
        +-------+ +-----------+ +-------+ <   |           |   |  // [193]
                                              |           |   |  // [193]
        +---+ +-----------+ +---+ <           |           |   |  // [193]
        |2_3| |   |   |   | |2_3| <           |           |   |  // [193]
        +---+ +-----------+ +---+ <           |           |   |  // [193]
        +---+ +-----------+ +---+ <           |           |   |  // [193]
        |   | |3_3|   |3_3| |   | <           |           |   |  // [193]
        |---| |---+---+---| |---| <           |           |   |  // [193]
        |   | |   |   |   | |   | <========== | BOMB TILE |   |  // [193]
        |---| |---+---+---| |---| <           |(max*(2/3))|   |  // [193]
        |   | |3_3|   |3_3| |   | <           |           |   |  // [193]
        +---+ +-----------+ +---+ <           |           |   |  // [193]
        +---+ +-----------+ +---+ <           |           |   |  // [193]
        |2_3| |   |   |   | |2_3| <           |           |   |  // [193]
        +---+ +-----------+ +---+ <           |           |   |  // [193]
        +-----------+ <                       |           |   |  // [193]
        |3_3|   |3_3| <                       |           |   |  // [193]
        |---+---+---| <                       |           |   |  // [193]
        |   |   |   | <====================== | FADA TILE |   |  // [193]
        |---+---+---| <                       |(max*(3/3))|   |  // [193]
        |3_3|   |3_3| <                       |           |   |  // [193]
        +-----------+ <                       +-----------+   |  // [193]
                                                              |  // [193]
    :---------------------------------------------------------+  // [193]
                                                                 // [193]
    @c_duideno@ : [D_U_I] DENOminator (bottom of fraction)       // [193]

    @geo_te7@ : NOT_VAR. Denoting te7 for geom layer.            // [194]
    @bom_te7@ : NOT_VAR. Denoting te7 for bomb layer.            // [194]
    @fad_te7@ : NOT_VAR. Denoting te7 for fada layer.            // [194]
                                                                 // [194]
    @te7_geo@ : SEE[ geo_te7 ]                                   // [194]
    @te7_bom@ : SEE[ bom_te7 ]                                   // [194]
    @te7_fad@ : SEE[ fad_te7 ]                                   // [194]

    @_ALPHAGAURD_@ : #_ALPHAGAURD_# :                            // [195]
                                                                 // [195]
        Avoid setting tiles on screen where tiles do not         // [195]
        actually exist by checking the alpha channel of          // [195]
        the RGBA value returned.                                 // [195]

    #_GET_LA3_FV4:COMPOSITE_COLOR_VARS_#:---------------------+  // [196]
                                                              |  // [196]
        @flatlay@ : RGBA float32 normalized color that        |  // [196]
                  : takes all tile sizes in given layer       |  // [196]
                  : and composites them together.             |  // [196]
        @flatcol@ : RGBA float32 normalized color for one     |  // [196]
                  : tile of a given tile size on given layer. |  // [196]
                  : One of 7 samples to create[ flatlay ].    |  // [196]
        @flathue@ : The HUE used to create[ flatcol ].        |  // [196]
        @flatlum@ : The LUM used to create[ flatcol ].        |  // [196]
        @flatsum@ : A talley used to average all[ flatcol ]   |  // [196]
                  : together and create final[ flatlay ].     |  // [196]
    +---------------------------------------------------------+  // [196]
                                                                 // [196]
    #_AVERAGE_FLATLAY_OUTSIDE_OF_LOOP_# :                        // [196]
                                                                 // [196]
        It would be a bug to do this inside the loop.            // [196]
        Or at best, inefficient if we use another                // [196]
        variable so the result didn't compound each time.        // [196]
                                                                 // [196]
    #_FLATTEN_LAYER_# :                                          // [196]
                                                                 // [196]
        Hackishly flattening layer by taking the average         // [196]
        in video #[ 1_9_6 ]. Eventually we will do               // [196]
        proper alpha compositing.                                // [196]
                                                                 // [196]
    #_FAST_FOOD_WASTE_# :-------------------------------------+  // [196]
                                                              |  // [196]
        Sometimes in fast food you make a whole bunch of      |  // [196]
        stuff, and then you just throw it in the trash        |  // [196]
        at the end of the day if you didn't use it.           |  // [196]
                                                              |  // [196]
        Same thing here. If it turns out there actually       |  // [196]
        wasn't any data for this tile layer, we just          |  // [196]
        throw these calculations in the trash.                |  // [196]
                                                              |  // [196]
        Because... GPU(s) don't branch... Yet.                |  // [196]
                                                              |  // [196]
        We don't want to fool ourselves into thinking         |  // [196]
        we are being more efficient than we really are.       |  // [196]
                                                              |  // [196]
        Also, the accumulator __MIGHT__ be able to be         |  // [196]
        optimized if we keep all this bullshit out of         |  // [196]
        the [ #_ACCUMULATOR_SECTION_# ].                      |  // [196]
    :---------------------------------------------------------+  // [196]
                                                                 // [196]
    @R_I_P@ : Rest_In_Piece , the variable is dead now.          // [196]

    @i_r@ : Input Red   Byte ( IN_FUNC:TILEBOI.EDI_PUT_U32 )     // [197]
    @i_g@ : Input Green Byte ( IN_FUNC:TILEBOI.EDI_PUT_U32 )     // [197]
    @i_b@ : Input Blue  Byte ( IN_FUNC:TILEBOI.EDI_PUT_U32 )     // [197]
    @i_a@ : Input Alpha Byte ( IN_FUNC:TILEBOI.EDI_PUT_U32 )     // [197]
                                                                 // [197]
    #_DPC_COORD_CHECK_# : Maybe we are setting tiles to          // [197]
                        : parts of pix2048 where levelpack       // [197]
                        : data is __NOT__ supposed to exist.     // [197]
                        : Convert DPC back into tile x/y         // [197]
                        : to find out.                           // [197]
                                                                 // [197]
    @h3x_dpx@ : DataPixel[ X ]Local_To_Levelpack.X === h3x       // [197]
    @h3y_dpy@ : DataPixel[ Y ]Local_To_Levelpack.Y === h3y       // [197]
    @h3x_dpx@ : DataPixel[ X ]Local_To_____HOTEL.X === h3x       // [197]
    @h3y_dpy@ : DataPixel[ Y ]Local_To_____HOTEL.Y === h3y       // [197]

    #_B_G_GEOM_# : GeomTile , alpha composited in #_B_G_#        // [198]
    #_M_G_BOMB_# : BombTile , alpha composited in #_M_G_#        // [198]
    #_F_G_FADA_# : FadaTile , alpha composited in #_F_G_#        // [198]
                                                                 // [198]
    #_B_G_# : Background layer of alpha composite.               // [198]
    #_M_G_# : Background layer of alpha composite.               // [198]
    #_F_G_# : Background layer of alpha composite.               // [198]

    #_NUMPAD_KONAMI_:DEL_#:-----------------------------------+  // [199]
                                                              |  // [199]
    @del_b_l@ : DElete Levelpack - Bottom  LEF                |  // [199]
    @del_b_m@ : DElete Levelpack - Bottom  MID                |  // [199]
    @del_b_r@ : DElete Levelpack - Bottom  RIG                |  // [199]
    @del_c_l@ : DElete Levelpack - Center  LEF                |  // [199]
    @del_c_m@ : DElete Levelpack - Center  MID                |  // [199]
    @del_c_r@ : DElete Levelpack - Center  RIG                |  // [199]
    @del_t_l@ : DElete Levelpack - Top     LEF                |  // [199]
    @del_t_m@ : DElete Levelpack - Top     MID                |  // [199]
    @del_t_r@ : DElete Levelpack - Top     RIG                |  // [199]
                                                              |  // [199]
    @del_b_c@ : WRONG__THE__FIX[ @del_b_m@ ]                  |  // [199]
    @del_m_l@ : WRONG__THE__FIX[ @del_c_l@ ]                  |  // [199]
    @del_m_c@ : WRONG__THE__FIX[ @del_c_m@ ]                  |  // [199]
    @del_m_r@ : WRONG__THE__FIX[ @del_c_r@ ]                  |  // [199]
    @del_t_c@ : WRONG__THE__FIX[ @del_t_m@ ]                  |  // [199]
    +---------------------------------------------------------+  // [199]
    #_NUMPAD_KONAMI_:FIL_#:-----------------------------------+  // [199]
                                                              |  // [199]
    @fil_b_l@ : FIll Levelpack - Bottom  LEF                  |  // [199]
    @fil_b_m@ : FIll Levelpack - Bottom  MID                  |  // [199]
    @fil_b_r@ : FIll Levelpack - Bottom  RIG                  |  // [199]
    @fil_c_l@ : FIll Levelpack - Center  LEF                  |  // [199]
    @fil_c_m@ : FIll Levelpack - Center  MID                  |  // [199]
    @fil_c_r@ : FIll Levelpack - Center  RIG                  |  // [199]
    @fil_t_l@ : FIll Levelpack - Top     LEF                  |  // [199]
    @fil_t_m@ : FIll Levelpack - Top     MID                  |  // [199]
    @fil_t_r@ : FIll Levelpack - Top     RIG                  |  // [199]
                                                              |  // [199]
    @fil_b_c@ : WRONG__THE__FIX[ @fil_b_m@ ]                  |  // [199]
    @fil_m_l@ : WRONG__THE__FIX[ @fil_c_l@ ]                  |  // [199]
    @fil_m_c@ : WRONG__THE__FIX[ @fil_c_m@ ]                  |  // [199]
    @fil_m_r@ : WRONG__THE__FIX[ @fil_c_r@ ]                  |  // [199]
    @fil_t_c@ : WRONG__THE__FIX[ @fil_t_m@ ]                  |  // [199]
    +---------------------------------------------------------+  // [199]
    #_KONAMI_CODE_NUMPAD_#:-----------------------------------+  // [199]
                                                              |  // [199]
    Using konami code + numapd will FILL OR ERASE             |  // [199]
    one of the levelpacks associated with that key.           |  // [199]
                                                              |  // [199]
    The ZERO key on the numpad is used to [toggle/flip]       |  // [199]
    behavior between [ FILL ]and[ DELETE ].                   |  // [199]
                                                              |  // [199]
    Zero toggle on numpad requires[ Konami_Code ]first,       |  // [199]
    otherwise it is a[ sexycam ]numpad function.              |  // [199]
                                                              |  // [199]
    @dum_000@ : Konami_Code_Numpad : 0 [ dum_tog ]( Toggle  ) |  // [199]
    @dum_001@ : Konami_Code_Numpad : 1 [ del_b_l ][ fil_b_l ] |  // [199]
    @dum_002@ : Konami_Code_Numpad : 2 [ del_b_m ][ fil_b_m ] |  // [199]
    @dum_003@ : Konami_Code_Numpad : 3 [ del_b_r ][ fil_b_r ] |  // [199]
    @dum_004@ : Konami_Code_Numpad : 4 [ del_c_l ][ fil_c_l ] |  // [199]
    @dum_005@ : Konami_Code_Numpad : 5 [ del_c_m ][ fil_c_m ] |  // [199]
    @dum_006@ : Konami_Code_Numpad : 6 [ del_c_r ][ fil_c_r ] |  // [199]
    @dum_007@ : Konami_Code_Numpad : 7 [ del_t_l ][ fil_t_l ] |  // [199]
    @dum_008@ : Konami_Code_Numpad : 8 [ del_t_m ][ fil_t_m ] |  // [199]
    @dum_009@ : Konami_Code_Numpad : 9 [ del_t_r ][ fil_t_r ] |  // [199]
    +---------------------------------------------------------+  // [199]
    #_FRATERNAL_ORDER_OF_EAGLES_#:----------------------------+  // [199]
                                                              |  // [199]
        @FOD@ / #FOD# / @F_O_D@ / #F_O_D# :                   |  // [199]
        @FOC@ / #FOC# / @F_O_C@ / #F_O_C# :                   |  // [199]
                                                              |  // [199]
            Did you mean[ F_____O_____E ] ?                   |  // [199]
                                                              |  // [199]
        @FOE@ / #FOE# / @F_O_E@ / #F_O_E# :                   |  // [199]
                                                              |  // [199]
            F_O_E : ---------------------------------------+  |  // [199]
            F.O.E : Fill __Or__ Erase , I like this better |  |  // [199]
            than saying , "Fill Or Delete". Or             |  |  // [199]
            "Fill Or Clear".                               |  |  // [199]
            :----------------------------------------------+  |  // [199]
    :---------------------------------------------------------+  // [199]
    #_FOE_KEYS_#:---------------------------------------------+  // [199]
                                                              |  // [199]
        +---------------------------------------------------+ |  // [199]
        |   You don't have to memorize all this shit I      | |  // [199]
        |   make up on a whim. The idea is that I need      | |  // [199]
        |   concise comments in the code, so I use the      | |  // [199]
        |   law of "substitution" to offboard commentary    | |  // [199]
        |   to the bottom of the file.                      | |  // [199]
        +---------------------------------------------------+ |  // [199]
                                                              |  // [199]
        @T_O_G@ : Toggle                                      |  // [199]
                                                              |  // [199]
        @B___L@ : Bottom Left                                 |  // [199]
        @B___M@ : Bottom Middle                               |  // [199]
        @B___R@ : Bottom Right                                |  // [199]
        @C___L@ : Center Left                                 |  // [199]
        @C___M@ : Center Middle   ( "C" THEN "M" ,@ALPHAORD@) |  // [199]
        @C___R@ : Center Right                                |  // [199]
        @T___L@ : Bottom Left                                 |  // [199]
        @T___M@ : Bottom Middle                               |  // [199]
        @T___R@ : Bottom Right                                |  // [199]
    :---------------------------------------------------------+  // [199]
                                                                 // [199]
    @ALPHAORD@ : ALPHAbetical ORDer                              // [199]
                                                                 // [199]
    #_KONAMIC_NUMPAD_MWM_# :----------------------------------+  // [199]
                                                              |  // [199]
        Konamic_Number_Pad_Monkey_Wrench_Macros(section)      |  // [199]
    +---------------------------------------------------------+  // [199]

    @ERA@ : Erase                                                // [202]
    @FIL@ : Fill                                                 // [202]
                                                                 // [202]
    #_KON_TOG_# :---------------------------------------------+  // [202]
                                                              |  // [202]
        Konamic Toggle , we will use this to alter the        |  // [202]
        behavior of the konami code numpad hotkeys.           |  // [202]
                                                              |  // [202]
        If the toggle is zero , we erase tiles in the         |  // [202]
        levelpack associated with that numpad key.            |  // [202]
                                                              |  // [202]
        If toggle is one , we fill tiles in the               |  // [202]
        levelpack associated with that numpad key.            |  // [202]
    +---------------------------------------------------------+  // [202]
                                                                 // [202]
    @NPI@ : Non_Positive_Integer                                 // [202]

    @MAE@ : Move_And_Edit , code line was moved from             // [203]
          : somewhere else, but it was also edited/refactored.   // [203]
                                                                 // [203]
    #_KONAMI_BRAND_MAXI_PADS_# :                                 // [203]
                                                                 // [203]
        We refactored the code here to use a re-usable           // [203]
        function. Not because we wanted to cleanup.              // [203]
        [ F.KEYMAST_DOW_EDI ]but because we wanted to            // [203]
        use the numpad detection code present here               // [203]
        in[ F.KONAMIC_EVT_KEY ].                                 // [203]
                                                                 // [203]
    @KONAMI_ARROW_CODE@ / #KONAMI_ARROW_CODE# :                  // [203]
                                                                 // [203]
        Just the arrow key part of konami code ,                 // [203]
        no "A" , "B" or "Start" , "Select".                      // [203]

    #_ITS_THE_FINAL_OFFSET_# :--------------------------------+  // [204]
                                                              |  // [204]
        We're leavin' together But still it's                 |  // [204]
        farewell And maybe we'll come back To Earth,          |  // [204]
        who can tell? I guess there is no one to              |  // [204]
        blame We're leaving ground (leaving ground)           |  // [204]
        Will things ever be the same again?                   |  // [204]
                                                              |  // [204]
        It's the final OFFSET                                 |  // [204]
                                                              |  // [204]
        The final OFFSET                                      |  // [204]
    +---------------------------------------------------------+  // [204]

    @N_N_S@ : No Name Space , this function is now in            // [205]
            : our top-level non-namespaced functions.            // [205]
            : BUT... If it was turned into a "NNS" function      // [205]
            : because of dependency problems, still give         // [205]
            : it an "F_" in the front for function, don't        // [205]
            : make it a super ubiquitous non-namespaced          // [205]
            : function like "ERR" , "MSG" , "LOG".               // [205]

    I_D_E_A_2022_08_28 : Let's put stories in this misc          // [205]
                       : comment section because why the         // [205]
                       : fuck not? We seem to be putting         // [205]
                       : every hour of our life into this        // [205]
                       : file, making things interesting         // [205]
                       : could be fun.                           // [205]
                                                                 // [205]
    I_D_E_A_2022_08_28:EXAMPLE:                                  // [205]
                                                                 // [205]
        Let me tell you the story of one of the times            // [205]
        I almost died. I once made the mistake of dating         // [205]
        someone addicted to heroin ( heroine? ), I can't         // [205]
        spell that word. Only experts at shooting up             // [205]
        heroin can actually spell the word heroin.               // [205]
        Kind of like only people capable of holding              // [205]
        bowls of soup in their hands can spell "soupination".    // [205]
        It's a basic rule of smartness, if you can't             // [205]
        spell the word, then you are obviously not an            // [205]
        expert in that topic. Everyone knows real                // [205]
        mathmaticicans can spell properly.                       // [205]
                                                                 // [205]
        ANYWAYS...                                               // [205]
                                                                 // [205]
        If I were to do it over again I would have taken         // [205]
        them out to the woods for 3 months to let them           // [205]
        completely detox. But that might have not even           // [205]
        fixed the problem because a lot of reason for            // [205]
        drug usage has to do with your environment. Hence        // [205]
        why most people who came back from the Vietnam           // [205]
        war stopped using drugs. Guess you don't need            // [205]
        to sedate yourself when you stop killing                 // [205]
        civillians, women, and children. ( Men are               // [205]
        genetically disposable, we all know this. )              // [205]
                                                                 // [205]
        So fast foward and I have broken up with this            // [205]
        girl because she broke a rule of no brining              // [205]
        drugs into our apartment. My roommate was pretty         // [205]
        lenient. He said "I don't give a fuck what you do        // [205]
        with your body, but I don't want that stuff in           // [205]
        my apartment." This was like 10 years ago so             // [205]
        I don't know exactly what was said verbatim,             // [205]
        but something like that. Makes sense to me,              // [205]
        "Your body, your choice." We won't tell you              // [205]
        what to do with your body, but just don't                // [205]
        bring that shit into our place. We don't want            // [205]
        shady drug dealers with guns ending up at our            // [205]
        apartment.                                               // [205]
                                                                 // [205]
        Mind you, I am pro-gun... But I am not... "Pro-Cartel"   // [205]
                                                                 // [205]
        Anyways, after a strip search and a breakdown of         // [205]
        the bathroom one day I found heroin stuck to the         // [205]
        inside of the toilet bowl water resevour.                // [205]
                                                                 // [205]
        Oh, by the way, did you know you can smoke               // [205]
        heroin? I did not know this. You can. You                // [205]
        smoke it using tinfoil. I don't know exactly             // [205]
        how because I've never done it                           // [205]
        ( my drug of choice is coffee ). But it can              // [205]
        while not a good idea it is a SAFER way than             // [205]
        shooting up that is less likely to result in             // [205]
        an overdose. However, probably a less powerful           // [205]
        high as well.                                            // [205]
                                                                 // [205]
        How do you know someone is high on heroin?               // [205]
                                                                 // [205]
        In my experience... They don't take anything             // [205]
        seriously. I am serious, that is the only "tell"         // [205]
        I noticed with her. Like, if we were about to            // [205]
        be executed mafia style and she had just used,           // [205]
        she wouldn't be able to take that situation              // [205]
        seriously.                                               // [205]
                                                                 // [205]
        So, what about almost dying? Maybe I will get            // [205]
        to the time I almost died because of my involvement      // [205]
        with this person. But maybe I should get back            // [205]
        to coding. It isn't __THAT__ interesting                 // [205]
        anyhow.                                                  // [205]
                                                                 // [205]
        TODO : PART_002_OF_HOW_I_ALMOST_DIED_IN_A_CRACK_HOUSE    // [205]
                                                                 // [205]
    #TOP_LEVEL_FUNCTIONS# :-----------------------------------+  // [205]
                                                              |  // [205]
        TAG[ top-level-functions | top-level-function ]       |  // [205]
        TAG[ top_level_functions | top_level_function ]       |  // [205]
        TAG[ top level functions | top level function ]       |  // [205]
                                                              |  // [205]
        This is kind of ambigious isn't it.                   |  // [205]
        I say "TOP LEVEL" what do I mean?                     |  // [205]
                                                              |  // [205]
        TOP_LEVEL    === LOW_LEVEL                            |  // [205]
        BOTTOM_LEVEL === HIGH_LEVEL                           |  // [205]
                                                              |  // [205]
        No, I am serious.                                     |  // [205]
                                                              |  // [205]
        PHYSICALLY[ TOP_LEVEL ]===FUNCTIONALLY[ LOW_LEVEL ]   |  // [205]
        PHYSICALLY[ BOT_LEVEL ]===FUNCTIONALLY[ HIG_LEVEL ]   |  // [205]
                                                              |  // [205]
        Functions at the top of a the file physically do      |  // [205]
        not DEPEND on any other functions, thus they are      |  // [205]
        "lower level" because they don't manage a chain       |  // [205]
        of other functions that increase the level of         |  // [205]
        abstraction.                                          |  // [205]
    +---------------------------------------------------------+  // [205]
                                                                 // [205]
    [THOUGHT] : We need 3 modes for this game.                   // [205]
              : MODE #1 : Dev  Mode , for development.           // [205]
              : MODE #2 : Game Mode , for playing.               // [205]
              : MODE #3 : Edit Mode , for creative play.         // [205]
              : TAG[ DEV MODE , GAME MODE , EDIT MODE ]          // [205]

    #_15_K_IS_OUR_NEW_ZERO_# :                                   // [206]
                                                                 // [206]
        15K is our new "ZERO.                                    // [206]
        After pasting in the PNG library, our code base          // [206]
        is roughly 15K lines total, including these              // [206]
        comments. Let's call "15K" the new zero. It              // [206]
        doesn't count. I haven't written shit until              // [206]
        I get to 30K. Just look at that .PNG code.               // [206]
        It is fucking giant. I am sitting on the                 // [206]
        shoulder's of giants.                                    // [206]
                                                                 // [206]
    @KANJI_EDIT@ : An edit to some code that is not my           // [206]
                 : code. Currently only edit is inside           // [206]
                 : 3rd party P_N_G library. Putting this         // [206]
                 : tag here because I don't trust myself         // [206]
                 : editing a fucking P_N_G library.              // [206]
                 : I am paranoid and scared, hold me.            // [206]

    @bin_lef@ : Binary Left  U32 Chunk                           // [207]
    @bin_rig@ : Binary Right U32 Chunk                           // [207]
    @bin_luc@ : Binary Left  U32 Chunk (UPPERCASE)               // [207]
    @bin_ruc@ : Binary Right U32 Chunk (UPPERCASE)               // [207]
    @bin_llc@ : Binary Left  U32 Chunk (lowercase)               // [207]
    @bin_rlc@ : Binary Right U32 Chunk (lowercase)               // [207]
                                                                 // [207]
    @luc@ : Left__Upper_Case ( SEE[ bin_luc ] )                  // [207]
    @ruc@ : Right_Upper_Case ( SEE[ bin_ruc ] )                  // [207]
    @llc@ : Left__Lower_Case ( SEE[ bin_llc ] )                  // [207]
    @rlc@ : Right_Lower_Case ( SEE[ bin_rlc ] )                  // [207]
                                                                 // [207]
                                                                 // [207]
    #_NORMAL__CHARACTERS_# :----------------------------------+  // [207]
                                                              |  // [207]
        Glyphs for ascii :::: [A-Z][a-z][0-9]OR[ space ]      |  // [207]
                                                              |  // [207]
    +---------------------------------------------------------+  // [207]
    #_SPECIAL_CHARACTERS_# :----------------------------------+  // [207]
                                                              |  // [207]
        Anything that isn't : [A-Z][a-z][0-9]OR[ space ]      |  // [207]
                                                              |  // [207]
    :---------------------------------------------------------+  // [207]
                                                                 // [207]
    #_BINARY_FONTS_EXPLAINED_# :------------------------------+  // [207]
                                                              |  // [207]
        Lets use the CAPITAL "K" for "KanjiCoder" ::::::::::  |  // [207]
        :--------------------------------------------------:  |  // [207]
                                                              |  // [207]
            luc_k = 0x00666C78                                |  // [207]
            ruc_k = 0x7C6E6600                                |  // [207]
                                                              |  // [207]
            We are using 32bit unsigned ints in our           |  // [207]
            code, but for sake of explanation , lets          |  // [207]
            smash [ luc_k ]&&[ ruc_k ]together to             |  // [207]
            make a 64bit integer.                             |  // [207]
                                                              |  // [207]
              12345678                                        |  // [207]
              |luc_k |                                        |  // [207]
            0x00666C787C6E6600                                |  // [207]
                      |ruc_k |                                |  // [207]
                      12345678                                |  // [207]
                                                              |  // [207]
            0x00666C787C6E6600 ==( 0x0000000000000000         |  // [207]
                                   |  ( luc_k << 32 )         |  // [207]
                                   |  ( ruc_k <<  0 )         |  // [207]
                                 );;;;;;;;;;;;;;;;;;;         |  // [207]
                                                              |  // [207]
            Our 64-Bit (U64) "K" bitmap is :                  |  // [207]
                                                              |  // [207]
            0x00666C787C6E6600                                |  // [207]
                                                              |  // [207]
        Let's use our "K" Bitmap ( 0x00666C787C6E6600 ):::::  |  // [207]
        :--------------------------------------------------:  |  // [207]
                 0x1234567812345678                           |  // [207]
            HEX[ 0x00666C787C6E6600 ]                         |  // [207]
            DEC[ 28829712363972096  ]                         |  // [207]
            BIN[ 00000000011001100110110001111000             |  // [207]
                 01111100011011100110011000000000 ]           |  // [207]
                                                              |  // [207]
            Hmm... What happens if we put the binary          |  // [207]
            into a... 8x8 grid, since 8 * 8 === 64 ?          |  // [207]
                                                              |  // [207]
            12345678                  1 2 3 4 5 6 7 8         |  // [207]
        1   00000000                  0 0 0 0 0 0 0 0         |  // [207]
        2   01100110                  0 1 1 0 0 1 1 0         |  // [207]
        3   01101100                  0 1 1 0 1 1 0 0         |  // [207]
        4   01111000 ... ENHANCE!==>  0 1 1 1 1 0 0 0         |  // [207]
        5   01111100                  0 1 1 1 1 1 0 0         |  // [207]
        6   01101110                  0 1 1 0 1 1 1 0         |  // [207]
        7   01100110                  0 1 1 0 0 1 1 0         |  // [207]
        8   00000000                  0 0 0 0 0 0 0 0         |  // [207]
                                                              |  // [207]
                                      ....ENHANCE!!!!         |  // [207]
                                             |                |  // [207]
                                             V                |  // [207]
                                                              |  // [207]
        +-----------------------+     1 2 3 4 5 6 7 8         |  // [207]
        |                       |     _ _ _ _ _ _ _ _         |  // [207]
        |  Find and Replace   : |     _ X X _ _ X X _         |  // [207]
        |  To ENHANCE Contrast: |     _ X X _ X X _ _         |  // [207]
        |                       |     _ X X X X _ _ _         |  // [207]
        |  "0" ===> "_"         |===> _ X X X X X _ _         |  // [207]
        |                       |     _ X X _ X X X _         |  // [207]
        |  "1" ===> "X"         |===> _ X X _ _ X X _         |  // [207]
        |                       |     _ _ _ _ _ _ _ _         |  // [207]
        +-----------------------+                             |  // [207]
                                      MY FUCKING GOD...       |  // [207]
        :--------------------------------------------------:  |  // [207]
                                                              |  // [207]
    +---------------------------------------------------------+  // [207]
                                                                 // [207]
    #_CAMERA_FONT_IDEA_# :------------------------------------+  // [207]
                                                              |  // [207]
        The "Binary Fonts Explained" would be a cool          |  // [207]
        motion graphics video. If we can encode text          |  // [207]
        into our tilemap, we could do camera moves on         |  // [207]
        the section[ _ BINARY _ FONTS _ EXPLAINED _ ]         |  // [207]
                                                              |  // [207]
        Zooming in and out and blurring areas to not          |  // [207]
        focus on while I narrate.                             |  // [207]
                                                              |  // [207]
        Tilemaps are 64x64 , and I use a 64 character         |  // [207]
        column limit... I have enough information to          |  // [207]
        take the important part of my source code and         |  // [207]
        shove it in a tilemap.                                |  // [207]
                                                              |  // [207]
        The[ [ _ BINARY _ FONTS _ EXPLAINED _ ]section        |  // [207]
        is only 67 characters high, so it would span          |  // [207]
        TWO TILEMAPS in a levelpack... BUT IT CAN STILL       |  // [207]
        FIT....                                               |  // [207]
                                                              |  // [207]
        In fact we have a solid chunk of 3x3 levels           |  // [207]
        in our level packs...                                 |  // [207]
                                                              |  // [207]
        3*64 === 192 ....                                     |  // [207]
                                                              |  // [207]
        We could probably fit MOST REASONABLY FORMATTED TEXT  |  // [207]
        on our tilemap.                                       |  // [207]
                                                              |  // [207]
        Ascii character support is a __MUST__                 |  // [207]
    +---------------------------------------------------------+  // [207]
                                                                 // [207]
    @FUTURE_VIDEO@ : For tagging places that I am promising      // [207]
                   : to make a future [ video / code delta ].    // [207]
                                                                 // [207]
    @STOLEN_FROM@  : I stole this code from another one of       // [207]
                   : my code bases. The note might not make      // [207]
                   : sense to anyone but myself.                 // [207]
                   : ( myself === KanjiCoder )                   // [207]
                                                                 // [---]
    #_NIL_FOR_FREE_SPOTS_# : An empty bit patter for             // [208]
                           : places things can go in             // [208]
                           : the future.                         // [208]
                                                                 // [208]
    #_ASCII_SPACE_CHARAC_# : Ascii Space Character Glyph         // [208]
                                                                 // [---]
    @EDG_LEF@ : Edge Left   ( Of_An_Inclusive_Rectangle )        // [209]
    @EDG_RIG@ : Edge Right  ( Of_An_Inclusive_Rectangle )        // [209]
    @EDG_TOP@ : Edge Top    ( Of_An_Inclusive_Rectangle )        // [209]
    @EDG_BOT@ : Edge Bottom ( Of_An_Inclusive_Rectangle )        // [209]
                                                                 // [209]
    #_BINFONT_ARGLIST:STAMONE_# :-----------------------------+  // [209]
    #_BINFONT_ARGLIST_STAMONE_# :-----------------------------+  // [209]
                                                              |  // [209]
        This function needs a lot of fucking parameters.      |  // [209]
        THIS_FUNCTION === F_BINFONT_STAMONE                   |  // [209]
                                                              |  // [209]
        My solution is to create one object that is           |  // [209]
        used as the argument for this function.               |  // [209]
                                                              |  // [209]
        This object should __NOT__ be instantiated and        |  // [209]
        there is only one copy of it. So no multi-threading...|  // [209]
        Oh wait... this is JavaScript, we don't have          |  // [209]
        threads.                                              |  // [209]
                                                              |  // [209]
        Reason for ONLY ONE INSTANCE (singleton) :            |  // [209]
                                                              |  // [209]
            1. Avoid Garbage Collection                       |  // [209]
                                                              |  // [209]
            2. Its only fucking purpose is to make            |  // [209]
               the function more readable, since I            |  // [209]
               usually name functions based on the            |  // [209]
               arguments they take, and this takes            |  // [209]
               too many args for that to be a sane            |  // [209]
               idea.                                          |  // [209]
                                                              |  // [209]
    +---------------------------------------------------------+  // [209]
    +---------------------------------------------------------+  // [209]
                                                                 // [209]
    @binfont@ : BINary FONT                                      // [209]
    @stamone@ : STAMp ONE ( as in , stamp one glyph )            // [209]
    @arglist@ : ARGument LIST ( argument list payload )          // [209]
                                                                 // [209]
    #arglist# :-----------------------------------------------+  // [209]
                                                              |  // [209]
        A piece of data tagged with this name is an           |  // [209]
        "argument list object". Basically the "clean code"    |  // [209]
        way of solving a "data cluster" code smell.           |  // [209]
                                                              |  // [209]
        I tend to avoid stuff like this, but as someone       |  // [209]
        who __THINKS__ about what I do, there are             |  // [209]
        __ALWAYS__ exceptions to the rule.                    |  // [209]
                                                              |  // [209]
        First priority is __WORKING_CODE__ everything         |  // [209]
        else is up for debate.                                |  // [209]
    :---------------------------------------------------------+  // [209]
                                                                 // [209]
    @tex_b_g@ : Text Glyph BackGround ( U32 Hex Color )          // [209]
    @tex_f_g@ : Text Glyph ForeGround ( U32 Hex Color )          // [209]
    @bor_b_g@ : Boarder    BackGround ( U32 Hex Color )          // [209]
    @bor_f_g@ : Boarder    ForeGround ( U32 Hex Color )          // [209]
                                                                 // [209]
    #bor_b_g# :-----------------------------------------------+  // [209]
    #bor_f_g# :-----------------------------------------------+  // [209]
                                                              |  // [209]
        Boarder BG : The boarder pixels of glyph where        |  // [209]
                   : NO TEXT PIXELS EXIST.                    |  // [209]
                                                              |  // [209]
        Boarder FG : The boarder pixels of glyph where        |  // [209]
                   : TEXT DOES EXIST.                         |  // [209]
                                                              |  // [209]
        If( tex_b_g === bor_b_g && tex_f_g === bor_f_g ){     |  // [209]
                                                              |  // [209]
            THEN TEXT WILL RENDER WITHOUT BOARDER             |  // [209]
            RECTANGLE AROUND IT.                              |  // [209]
                                                              |  // [209]
        };;                                                   |  // [209]
                                                              |  // [209]
    :---------------------------------------------------------+  // [209]
    :---------------------------------------------------------+  // [209]
                                                                 // [---]
    #_C89_STYLE_VARS_TODAY_I_GUESS_# :------------------------+  // [210]
                                                              |  // [210]
        A reference to the fact that I have declared          |  // [210]
        all variables at the top of the function before       |  // [210]
        doing any operations on them.                         |  // [210]
                                                              |  // [210]
        C89 makes this a requirement. I don't think it is     |  // [210]
        a bad requirement. Though sometimes the fact that     |  // [210]
        it makes code a lot longer is annoying.               |  // [210]
                                                              |  // [210]
        Front-loading the variables of a problem              |  // [210]
        before looking at the logic does seem like a          |  // [210]
        good idea. But that's kind of like how I made         |  // [210]
        all my variables KANJI at one point in time and       |  // [210]
        that meant you had to front load all the              |  // [210]
        documentation before you could understand             |  // [210]
        any code...                                           |  // [210]
                                                              |  // [210]
        I am saying the C89 idea might be good in             |  // [210]
        theory but horrible in practice. But sometimes        |  // [210]
        I like it.                                            |  // [210]
    +---------------------------------------------------------+  // [210]
                                                                 // [---]
    @b32_top@ : Top Half Of 8x8 glyph map,                       // [211]
              : the first 32 bits.                               // [211]
                                                                 // [211]
    @b32_bot@ : Bot Half Of 8x8 glyph map,                       // [211]
              : the last  32 bits.                               // [211]
                                                                 // [211]
    @b32@ ::::: If , wos === 0 , then b32 === b32_top            // [211]
          ::::: If , wos === 1 , then b32 === b32_bot            // [211]
                                                                 // [211]
    #_DIAGRAM_B32_BIL_TO_BIT_# :------------------------------+  // [211]
                                                              |  // [211]
        EXPLAIN_THIS_FORMULA :                                |  // [211]
                                                              |  // [211]
            bit =( ( b32 >>>((32-1)-bil) )&( 0x1 ) );         |  // [211]
                                                              |  // [211]
        EXAMPLE GIVENS :         +------------------------+   |  // [211]
                                 | @ascii@ : 0-255        |   |  // [211]
            bil ===(    0    )   | @bil@ : BitIndexLocal  |   |  // [211]
            gbi ===( 0 || 32 )   | @gbi@ : GlobalBitIndex |   |  // [211]
                                 | @bit@ : GlyphMapBit    |   |  // [211]
                                 +------------------------+   |  // [211]
        +---===-===---+---===-===---+                         |  // [211]
        |                           |                         |  // [211]
        |bil-> 0 0 0 0 0 0 0 0      |                         |  // [211]
        |      0 0 0 0 0 0 0 0      | <== b32_top             |  // [211]
        |      0 0 0 0 0 0 0 0      |  == d_binfont_lut[      |  // [211]
        |      0 0 0 0 0 0 0 0      |  ( 2*ascii ) + 0 ];;    |  // [211]
        |                           |                         |  // [211]
        +---===-===---+---===-===---+                         |  // [211]
        |                           |                         |  // [211]
        |bil-> 0 0 0 0 0 0 0 0      |                         |  // [211]
        |      0 0 0 0 0 0 0 0      | <== b32_bot             |  // [211]
        |      0 0 0 0 0 0 0 0      |  == d_binfont_lut[      |  // [211]
        |      0 0 0 0 0 0 0 0      |  ( 2*ascii ) + 1 ];;    |  // [211]
        |                           |                         |  // [211]
        +---===-===---+---===-===---+                         |  // [211]
                                                              |  // [211]
             01234567890123456789012345678901                 |  // [211]
             0        10        20         31                 |  // [211]
             |         |         |          |                 |  // [211]
        BIN: 00000000000000000000000000000000 <==( b32_top )  |  // [211]
        BIN: 00000000000000000000000000000000 <==( b32_bot )  |  // [211]
             ^                                                |  // [211]
             |                                                |  // [211]
        ((32-1)-bil)  <---( bil is in @NETWORK_BIT_ORDER@ )   |  // [211]
                                                              |  // [211]
        "bil" is a "network bit order" bit. In terms of       |  // [211]
        it's value. Because I am treating it's index          |  // [211]
        like an array, rather than a bit position.            |  // [211]
        Hence the inversion[ ((32-1)-bil) ]before             |  // [211]
        using it to shift out a bit.                          |  // [211]
    +---------------------------------------------------------+  // [211]

    #_ARTIFICIAL_RIGIDITY_# :---------------------------------+  // [212]
                                                              |  // [212]
        Just like stricter compiler settings make for         |  // [212]
        less bugs in code, intentionally removing             |  // [212]
        flexibility in code UNTIL THAT FLEXIBILITY IS         |  // [212]
        NEEDED is also a good way to avoid bugs.              |  // [212]
                                                              |  // [212]
        I call this "Artificial Rigidity"...                  |  // [212]
                                                              |  // [212]
        That is a hard word though...                         |  // [212]
                                                              |  // [212]
        Maybe call it... "Artificial Stiffness"               |  // [212]
        ... "Fake Stiffness" ..................               |  // [212]
                                                              |  // [212]
    :---------------------------------------------------------+  // [212]
                                                                 // [212]
    #_MAYBE_GPX_WID_IS_A_BAD_VARIABLE_NAME_# :----------------+  // [212]
    #_MAYBE_GPY_HIG_IS_A_BAD_VARIABLE_NAME_# :----------------+  // [212]
                                                              |  // [212]
        @gpx_wid@ : The width  of gpx's min+max bounds.       |  // [212]
        @gpy_hig@ : The height of gpy's min+max bounds.       |  // [212]
                                                              |  // [212]
        Maybe a bad variable name because when we             |  // [212]
        compare a coordinate with these values , we           |  // [212]
        use the LOCAL COORD, and comparison at                |  // [212]
        a glance looks like a B__U__G.                        |  // [212]
                                                              |  // [212]
        ASS( lpx <= ( gpx_wid - 1 ) , "[GPX_WID:POS]" );      |  // [212]
        ASS( lpy <= ( gpy_hig - 1 ) , "[GPY_HIG:POS]" );      |  // [212]
             -^-      -^-                                     |  // [212]
              |        |       +------------------------------+  // [212]
           LOCAL      GLOBAL   |  Comparing local with global |  // [212]
           PIXEL      PIXEL    |  is a bug. So this code      |  // [212]
           X/Y        X/Y      |  looks W_R_O_N_G at a glance |  // [212]
                               |  even though it is correct.  |  // [212]
                               +------------------------------+  // [212]
                                                              |  // [212]
    :---------------------------------------------------------+  // [212]

    #_LOAD_STAMONE_# :----------------------------------------+  // [213]
                                                              |  // [213]
        Load our stamper argument list object so we           |  // [213]
        can call the stamper helper function.                 |  // [213]
    :---------------------------------------------------------+  // [213]
    #_TILE_XY_AS_1_DIMENSIONAL_INDEX_# :----------------------+  // [213]
                                                              |  // [213]
        Because we are mapping a 1D array of ascii            |  // [213]
        characters to a 2D grid, we need this 1D-index        |  // [213]
        to fetch a character from out text.                   |  // [213]
                                                              |  // [213]
        Text will render in scanline order.                   |  // [213]
    :---------------------------------------------------------+  // [213]
                                                                 // [213]
    #_INCLUSIVE_STAMPING_BOUNDS_# :---------------------------+  // [213]
                                                              |  // [213]
        Our stamping function doesn't use a microsoft         |  // [213]
        win32 style rectangle. I like my math done            |  // [213]
        inclusively. I am an inclusive person.                |  // [213]
                                                              |  // [213]
        @bin_x_0@ : BINfont(system).x_0 ( inclusive lower x ) |  // [213]
        @bin_x_1@ : BINfont(system).x_1 ( inclusive upper x ) |  // [213]
        @bin_y_0@ : BINfont(system).y_0 ( inclusive lower y ) |  // [213]
        @bin_y_1@ : BINfont(system).y_1 ( inclusive upper y ) |  // [213]
                                                              |  // [213]
    :---------------------------------------------------------+  // [213]
                                                                 // [213]
    @STAMHEX@ : A typo of "STAMTEX"                      ::::::  // [213]
    @STAMTEX@ : STAMp_TEXt , takes an arbitrary string   ::::::  // [213]
              : of text and stamps that text to a bitmap.::::::  // [213]
                                                                 // [213]
    @FAR_FUTURE_NEXT@ : Something I want to do NEXT....   :::::  // [213]
                      : But not NEXT , nor NEXT_NEXT,     :::::  // [213]
                      : not even NEXT_NEXT_NEXT .....     :::::  // [213]
                      : Written this way because I don't  :::::  // [213]
                      : want to call it                   :::::  // [213]
                      : FAR_FUTURE__T__O__D__O            :::::  // [213]
                      : Because     T__O__D__O            :::::  // [213]
                      : is a special word.                :::::  // [213]

    #_UNIT_TESTS_ON_ANY_ENVIRONMENT_# :-----------------------+  // [214]
                                                              |  // [214]
        Putting unit tests on any environment means that      |  // [214]
        failiure to pass unit test will crash the server.     |  // [214]
                                                              |  // [214]
        Yeah, you'll be noticing if these tests fail.         |  // [214]
                                                              |  // [214]
        Crashing the server is an intentional design          |  // [214]
        choice to make absolutely fucking sure my code        |  // [214]
        is correct. ( correct to the best of my meer )        |  // [214]
        ( mortal programmer abilities.               )        |  // [214]
                                                              |  // [214]
    :---------------------------------------------------------+  // [214]
                                                                 // [214]
    @o_po2@ : Output Power Of 2 , u32 variable.                  // [214]
    @po2@   : Power_Of_Two(2).                                   // [214]

    @c_konamic_binfont@ : Konamic constant for using BINFONT     // [216]
                        : system to fill master memory with      // [216]
                        : text.                                  // [216]
                                                                 // [216]
    #_ARGLIST_CANT_BE_CONST_#:--------------------------------+  // [216]
                                                              |  // [216]
        [ d.binfont_stamone_arglist ]cannot be declared       |  // [216]
        as "const" because "const" has block scope and        |  // [216]
        our data section is wrapped with an environment       |  // [216]
        gaurd. Changing from[ const ]===to===>[ var ]         |  // [216]
        should fix that bug.                                  |  // [216]
    :---------------------------------------------------------+  // [216]
                                                                 // [216]
    #_IDIOT_RENDERER_COLORS_#:--------------------------------+  // [216]
                                                              |  // [216]
        Right now[ ssf _ 005 ]is pretty fucking basic         |  // [216]
        and doesn't make subtle distinctions between          |  // [216]
        tile values. So let's ether ZERO FILL or              |  // [216]
        ONE FILL a pixel when stamping glyphs. Later          |  // [216]
        we can get fancier after the renderer                 |  // [216]
        supports it.                                          |  // [216]
    :---------------------------------------------------------+  // [216]

    #_NEVERNO_PROMISES_NEVER_SAYS_NO_#:-----------------------+  // [217]
                                                              |  // [217]
        "neverno" is a promise that "never says no".          |  // [217]
                                                              |  // [217]
        Normal promises are "accepted" or "rejected".         |  // [217]
        A neverno promise only ever calls the                 |  // [217]
        "acceptor" function and never the "rejector"          |  // [217]
        function.                                             |  // [217]
                                                              |  // [217]
        This makes the code simpler because we only           |  // [217]
        have to worry about the[ .then() ]chaining.           |  // [217]
                                                              |  // [217]
        But things can go wrong you say?                      |  // [217]
                                                              |  // [217]
        Yes, but we handle it differently.                    |  // [217]
                                                              |  // [217]
        For example , say you ask for a .PNG file.            |  // [217]
                                                              |  // [217]
        If the file does not exist , you still get            |  // [217]
        a .PNG file, it just is a "404 Image".                |  // [217]
                                                              |  // [217]
        You ask for some .JSON ?                              |  // [217]
        If there is an error you still get back .JSON,        |  // [217]
        but there is an "is_error" / "has_err" / "err_has"    |  // [217]
        flag that is set to 1 in it if something              |  // [217]
        went wrong.                                           |  // [217]
    +---------------------------------------------------------+  // [217]
                                                                 // [217]
    #_EXECUTO_1_FORMAL_PARAM_ONLY_#:--------------------------+  // [217]
                                                              |  // [217]
        Because a "neverno" promise never rejects,            |  // [217]
        the formal params of a function passed in as          |  // [217]
        the executor should only take __ONE__ argument.       |  // [217]
                                                              |  // [217]
        For calling the "acceptor" function.                  |  // [217]
                                                              |  // [217]
    :---------------------------------------------------------+  // [217]
                                                                 // [217]
    #_ACCEPTO_REJECTO_EXECUTO_#:------------------------------+  // [217]
                                                              |  // [217]
    #_NO_ACCEPTO_# : No acceptor function should exist.       |  // [217]
    #_NO_EXECUTO_# : No executor function should exist.       |  // [217]
    #_NO_REJECTO_# : No rejector function should exist.       |  // [217]
                                                              |  // [217]
    @ACCEPTO@ : Acceptor function, provided by JavaScript     |  // [217]
              : framework that manages promises.              |  // [217]
              : YOU NEVER PROVIDE THIS, EVEN IN SANE          |  // [217]
              : INDUSTRY STANDARD JAVASCRIPT CODE             |  // [217]
                                                              |  // [217]
    @REJECTO@ : Rejector function, provided by JavaScript     |  // [217]
              : framework that manages promises.              |  // [217]
              : YOU NEVER PROVIDE THIS, EVEN IN SANE          |  // [217]
              : INDUSTRY STANDARD JAVASCRIPT CODE             |  // [217]
                                                              |  // [217]
    @EXECUTO@ : The executor function __YOU_GIVE__            |  // [217]
              : to javascript framework when constructing     |  // [217]
              : a new promise.                                |  // [217]
              :                                               |  // [217]
              : This promise can call the provided            |  // [217]
              : ACCEPTO and REJECTO functions (callbacks).    |  // [217]
              :                                               |  // [217]
              : So, while you do __NOT__ provide the          |  // [217]
              : "ACCEPTO" and "REJECTO" functions,            |  // [217]
              : they can be named whatever the hell you       |  // [217]
              : want. I tend to do:                           |  // [217]
              :                                               |  // [217]
              : [ ACCEPTO / Acceptor ] Named : o_k_yes        |  // [217]
              : [ REJECTO / Rejector ] Named : wontsay        |  // [217]
              :                                               |  // [217]
              : "wontsay" meaning "I will never invoke it".   |  // [217]
    :---------------------------------------------------------+  // [217]
                                                                 // [217]
                                                                 // [217]
    @o_neverno@ : Output "NeverNo" style promise.                // [217]
    @i_executo@ : Input Executor Function Promise Will Wrap      // [217]
                                                                 // [217]
    #_ANTI_PATTERN_#:-----------------------------------------+  // [217]
                                                              |  // [217]
        TAG[ PROMISE_ANTI_PATTERN | promise-anti-pattern ]    |  // [217]
        TAG[ promise_anti_pattern | promise anti-pattern ]    |  // [217]
                                                              |  // [217]
        Yes, promises don't need to call rejector :           |  // [217]
                                                              |  // [217]
            https://stackoverflow.com/questions/59121033/     |  // [217]
                                                              |  // [217]
        Supposidly this is an anti-patter, I give             |  // [217]
        ZERO_FUCKS. My whole code base is an "anti-pattern".  |  // [217]
                                                              |  // [217]
            https://stackoverflow.com/questions/23803743      |  // [217]
                                                              |  // [217]
        KANJICODER PRIVATE DOCUMENTATION , NEVERNO :          |  // [217]
        [PRIVATE] : Promise Can Take 1 Argument               |  // [217]
                                                              |  // [217]
            https://imgur.com/cZ4tSaX                         |  // [217]
                                                              |  // [217]
    :---------------------------------------------------------+  // [217]
    
    #_STARTUP_MODE_#:---------------------------------------+-+  // [218]
    #_SUM_#::::::::::---------------------------------------+-+  // [218]
                                                            | |  // [218]
        +------------------------------------------+        | |  // [218]
        | We use a string                          |        | |  // [218]
        | instead of an "enum" so that we          |        | |  // [218]
        | don't have to[ define / formalize ]      |        | |  // [218]
        | the options ahead of time at the top     |        | |  // [218]
        | of the file. Want to keep the top of     |        | |  // [218]
        | file configuration section lean.         |        | |  // [218]
        +------------------------------------------+        | |  // [218]
                                                            | |  // [218]
        @c_sum@ : Constant - StartUpMode ,                  | |  // [218]
                : Changes how code initialzes               | |  // [218]
                : depending on what mode we are in.         | |  // [218]
                                                            | |  // [218]
        @SUM_REL@ : "SUM_REL" , startup mode for public     | |  // [218]
                  : release.                                | |  // [218]
                                                            | |  // [218]
        @SUM_TUT@ : "SUM_TUT" , startup mode for            | |  // [218]
                  : recording tutorial videos.              | |  // [218]
                  : This can be thought of as               | |  // [218]
                  : "Development Mode"                      | |  // [218]
                                                            | |  // [218]
        @SUM_DEV@ : @_DO_NOT_USE_THIS_MODE_@                | |  // [218]
                  : #_DO_NOT_USE_DEVELOPMENT_MODE_#         | |  // [218]
                  : "SUM_DEV" , startup mode string for     | |  // [218]
                  : development mode.                       | |  // [218]
                                                            | |  // [218]
        @SUM_EDI@ : @_DO_NOT_USE_THIS_MODE_@                | |  // [218]
                  : #_DO_NOT_USE_EDITOR_MODE_#              | |  // [218]
                  :                                         | |  // [218]
                  : "SUM_EDI" , startup mode string for     | |  // [218]
                  : editor mode.                            | |  // [218]
                  :                                         | |  // [218]
                  : I am going to try to mimick hotel13     | |  // [218]
                  : where the URL has a coordinate hash     | |  // [218]
                  : that tells us what level pack we are    | |  // [218]
                  : at. Changing the URL changes what       | |  // [218]
                  : levelpack is in the center of the       | |  // [218]
                  : room.                                   | |  // [218]
                                                            | |  // [218]
        @SUM_GAM@ : @_DO_NOT_USE_THIS_MODE_@                | |  // [218]
                  : #_DO_NOT_USE_GAME_MODE_#                | |  // [218]
                  :                                         | |  // [218]
                  : "SUM_GAM" , startup mode string for     | |  // [218]
                  : game mode.                              | |  // [218]
                                                            | |  // [218]
                                                            | |  // [218]
        @_DO_NOT_USE_THIS_MODE_@ :-----------------+        | |  // [218]
                                                   |        | |  // [218]
            The startup mode should __NEVER__ be   |        | |  // [218]
            used or defined in the source code.    |        | |  // [218]
        :------------------------------------------+        | |  // [218]
                                                            | |  // [218]
        #_DO_NOT_USE_EDITOR_MODE_# :---------------+        | |  // [218]
        #_DO_NOT_USE_GAME_MODE_# :::---------------+        | |  // [218]
                                                   |        | |  // [218]
            The difference between if the game is  |        | |  // [218]
            in an "editor mode" or a "game mode"   |        | |  // [218]
            depends on the URL IN THE ADDRESS BAR. |        | |  // [218]
                                                   |        | |  // [218]
            So it is up to ROUTING , not the       |        | |  // [218]
            source file, to determine this mode.   |        | |  // [218]
                                                   |        | |  // [218]
            My initial thoughts on "SUM_GAM" and   |        | |  // [218]
            "SUM_EDI" were wrong.                  |        | |  // [218]
                                                   |        | |  // [218]
            If we want this to both be a game, but |        | |  // [218]
            also be able to behave like HOTEL13's  |        | |  // [218]
            server, we must :                      |        | |  // [218]
                                                   |        | |  // [218]
                ___NOT___ have a "SUM_GAM"         |        | |  // [218]
                ___NOT___ have a "SUM_EDI"         |        | |  // [218]
        :------------------------------------------+        | |  // [218]
        #_DO_NOT_USE_DEVELOPMENT_MODE_#:-----------+        | |  // [218]
                                                   |        | |  // [218]
            Use Tutorial Mode , which is the mode  |        | |  // [218]
            you develop in, but also the mode in   |        | |  // [218]
            which you are filming the tutorials    |        | |  // [218]
            in. In other words, tutorial mode is   |        | |  // [218]
            you development mode.                  |        | |  // [218]
                                                   |        | |  // [218]
        +------------------------------------------+        | |  // [218]
                                                            | |  // [218]
        END_OF_SECTION[ #_STARTUP_MODE_# / #_SUM_# ]        | |  // [218]
                                                            | |  // [218]
    :-------------------------------------------------------+-+  // [218]
    :-------------------------------------------------------+-+  // [218]
                                                                 // [218]
    #_STARTUP_MODE_MODIFICATIONS_# :--------------------------+  // [218]
                                                              |  // [218]
        When game boots up on client side , we                |  // [218]
        slightly change behavior depending on if              |  // [218]
        we are in "SUM_TUT" or "SUM_REL".                     |  // [218]
                                                              |  // [218]
        @KEYFAKER@    : Thinking of name for key emulator     |  // [218]
        @SKELETONKEY@ : Thinking of name for key emulator     |  // [218]
        @LOCKPICK@    : Thinking of name for key emulator     |  // [218]
                                                              |  // [218]
    :---------------------------------------------------------+  // [218]

    #_SEPERATOR_KEY_# :---------------------------------------+  // [220]
                                                              |  // [220]
        Keycode 108 is mysteriously missing from              |  // [220]
        JavaScript NumPad lookup table reference.             |  // [220]
                                                              |  // [220]
        TAG[ VK_SEPARATOR ]                                   |  // [220]
                                                              |  // [220]
        https://stackoverflow.com/questions/67916923/         |  // [220]
        what-physical-key-maps-to-keycode-108-vk-separator    |  // [220]
                                                              |  // [220]
    :---------------------------------------------------------+  // [220]
    
    @FUP@ :::: Force_Update_Function                             // [222]
    @PLURAL@ : The variable ends with an "S" , MAKE SURE!!!      // [222]
    @PRIMARY@: Primary something or other. No one knows.         // [222]
    @CLIDRAG@: CLIck(or)DRAG                                     // [222]
    @clidrag_clk@ : Mouse is clicking.                           // [222]
    @clidrag_mid@ : [ Mouse Is Down ] / [ Mouse Is Dragging ]    // [222]
    @CLIKOLD@ : "Click" -or- "Hold" <--DONTUSE,USE[ CLIDRAG ]    // [222]
                                                                 // [---]
    @COP@ : Code was "COPied" ( AKA: Copied_And_Pasted )         // [264]
    @CAE@ : Copied And Edited, like @MAE@ but means the          // [223]
    ::::::: line was duplicated instead of just moved.           // [223]
                                                                 // [223]
    #_NEED_E_G_GETTER_# :-------------------------------------+  // [223]
                                                              |  // [223]
        Our code is a bit broken. We are writing              |  // [223]
        everything for[ edigame_edi ]but eventually           |  // [223]
        when we switch to[ edigame_gam ]we will have          |  // [223]
        lots of broken behavior unless we start               |  // [223]
        cleaning up some of our shit.                         |  // [223]
                                                              |  // [223]
        For example...                                        |  // [223]
                                                              |  // [223]
        The Line :                                            |  // [223]
                                                              |  // [223]
            let e_g = d_edigame_edi ;                         |  // [223]
                                                              |  // [223]
        Should Be :                                           |  // [223]
                                                              |  // [223]
            let e_g = F_EDIGAME_ACT( );                       |  // [223]
                                                              |  // [223]
        Which should return the active game mode object       |  // [223]
        of either[ d_edigame_gam ]OR[ d_edigame_edi ].        |  // [223]
    :---------------------------------------------------------+  // [223]
    #_FORCE_UPDATE_MAT_GLOBALS_# :----------------------------+  // [223]
                                                              |  // [223]
        Force update Mouse_And_Tile( MAT )Globals.            |  // [223]
        Not 100% this is needed here. But just to             |  // [223]
        be on the safe side I am going to do it here.         |  // [223]
    :---------------------------------------------------------+  // [223]
    #_CALL_EDITOR_TILE_PUTTER_# :-----------------------------+  // [223]
                                                              |  // [223]
        Call the core function that allows user to            |  // [223]
        edit levels by setting tiles.                         |  // [223]
    :---------------------------------------------------------+  // [223]
    #_STORE_MOUSE_POS_IN_EDIGAME_# :--------------------------+  // [223]
                                                              |  // [223]
        Store the mouse position in our EDIGAME               |  // [223]
        object. An object that is "kind of" an                |  // [223]
        editor state object, but also stores                  |  // [223]
        game state for normal gameplay.                       |  // [223]
                                                              |  // [223]
        Hence "edigame" not quite an "editor state"           |  // [223]
        object and not quite a "game play state" object.      |  // [223]
    :---------------------------------------------------------+  // [223]
    #_CLICK_OR_DRAG_CODE_HERE_# :-----------------------------+  // [223]
                                                              |  // [223]
        Code that should execute on both a                    |  // [223]
        "click" and a "drag".                                 |  // [223]
                                                              |  // [223]
        For example, setting tiles is nicer when              |  // [223]
        you can hold down the mouse and drag and              |  // [223]
        set multiple tiles as if they were                    |  // [223]
        brush strokes.                                        |  // [223]
    :---------------------------------------------------------+  // [223]

    #_DIRTY_FLAG_OPTIMIZATION_DATA_# :------------------------+  // [---][224]
                                                              |  // [---][224]
        Instead of pushup up the ENTIRE FUCKING TEXTURE       |  // [---][224]
        every time we set ONE GOD DAMNED PIXEL ,              |  // [---][224]
        we should intelligently partition our space           |  // [---][224]
        with dirty rects and use array of bitflags            |  // [---][224]
        to see which clusters of dirty rectangles             |  // [---][224]
        need updating.                                        |  // [---][224]
    +---------------------------------------------------------+  // [---][224]
    #ATA# :---------------------------------------------------+  // [---][224]
                                                              |  // [---][224]
        @ATA@ : All The Action                                |  // [---][224]
                                                              |  // [---][224]
        Master Memory Cell[ m m 5 ]Is the one where all       |  // [---][224]
        the action is going on. It is the active levelpack    |  // [---][224]
        where simulation is allowed to occur.                 |  // [---][224]
    +---------------------------------------------------------+  // [---][224]
    #_MASTER_MEMORY_HAS_TWO_MAIN_CATEGORIES_# :---------------+  // [---][224]
                                                              |  // [---][224]
        1. THE_DUM , the 3x3 grid of 512x512 cells on         |  // [---][224]
           master memory that store the 9                     |  // [---][224]
           [hotels/levelpacks] loaded into ram.               |  // [---][224]
                                                              |  // [---][224]
        2. Everything Else ( E_E ).                           |  // [---][224]
           The rest of the 4X4 grid of master memory that     |  // [---][224]
           is not the 3x3 cells that start at the top         |  // [---][224]
           left of the master memory.                         |  // [---][224]
                                                              |  // [---][224]
            |<-- d_pix2048 -->|   D : THE_DUM                 |  // [---][224]
            |<-- MasterMem -->|   E : EVERYTHING_ELSE         |  // [---][224]
            +---+---+---+ +---+   +---+---+---+ +---+         |  // [---][224]
            | D | D | D | | E |   |mm0|mm1|mm2| |mm3|         |  // [---][224]
            +---+---+---+ +---+   +---+---+---+ +---+         |  // [---][224]
            | D | D | D | | E |   |mm4|mm5|mm6| |mm7|         |  // [---][224]
            +---+---+---+ +---+   +---+---+---+ +---+         |  // [---][224]
            | D | D | D | | E |   |mm8|mm9|mma| |mmb|         |  // [---][224]
            +---+---+---+ +---+   +---+---+---+ +---+         |  // [---][224]
            +---+---+---+ +---+   +---+---+---+ +---+         |  // [---][224]
            | E | E | E | | E |   |mmc|mmd|mme| |mmf|         |  // [---][224]
            +---+---+---+ +---+   +---+---+---+ +---+         |  // [---][224]
    +---------------------------------------------------------+  // [---][224]
                                                                 // [---][224]
    @dum_mmi@ : Dum( cell/index ) to master memory index.        // [---][224]
    @e_e_mmi@ : E_E( cell/index ) to master memory index.        // [---][224]
                                                                 // [---][224]
    @dum_mmx@ : Dum( cell/index ) to MasterMemoryCell X          // [---][224]
    @dum_mmy@ : E_E( cell/index ) to MasterMemoryCell Y          // [---][224]
                                                                 // [---][224]
    @e_e_mmx@ : E_E( cell/index ) to MasterMemoryCell X          // [---][224]
    @e_e_mmy@ : E_E( cell/index ) to MasterMemoryCell Y          // [---][224]
                                                                 // [---][224]
                                                                 // [---][224]
    #_4X4_GRID_OF_16_BIT_FLAGS_INSTEAD_# :--------------------+  // [---][224]
                                                              |  // [---][224]
    Instead Of This Chaos :                                   |  // [---][224]
                                                              |  // [---][224]
    d_pix2048_dir_mem_mm0 =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
    d_pix2048_dir_mem_mm1 =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
    d_pix2048_dir_mem_mm2 =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
    d_pix2048_dir_mem_mm3 =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
    d_pix2048_dir_mem_mm4 =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
    d_pix2048_dir_mem_mm5 =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
    d_pix2048_dir_mem_mm6 =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
    d_pix2048_dir_mem_mm7 =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
    d_pix2048_dir_mem_mm8 =( 0x00 ); //: 16 bitmask @ATA@://  |  // [---][224]
    d_pix2048_dir_mem_mm9 =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
    d_pix2048_dir_mem_mma =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
    d_pix2048_dir_mem_mmb =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
    d_pix2048_dir_mem_mmc =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
    d_pix2048_dir_mem_mmd =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
    d_pix2048_dir_mem_mme =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
    d_pix2048_dir_mem_mmf =( 0x00 ); //: 16 bitmask -----://  |  // [---][224]
                                                              |  // [---][224]
    We do this :                                              |  // [---][224]
                                                              |  // [---][224]
    var d_pix2048_dir_mem_mmi = new Uint16Array([             |  // [---][224]
                                                              |  // [---][224]
        0x00 , 0x00 , 0x00 , 0x00                             |  // [---][224]
    ,   0x00 , 0x00 , 0x00 , 0x00                             |  // [---][224]
    ,   0x00 , 0x00 , 0x00 , 0x00                             |  // [---][224]
    ,   0x00 , 0x00 , 0x00 , 0x00                             |  // [---][224]
                                                              |  // [---][224]
    ]);;                                                      |  // [---][224]
                                                              |  // [---][224]
    A 4x4 grid of 16-bit flags that tell us which             |  // [---][224]
    dirty rectangles of[ d _ pix2048 _ dir_mem_arr ]          |  // [---][224]
    have been touched and need to be cleaned.                 |  // [---][224]
                                                              |  // [---][224]
    +---------------------------------------------------------+  // [---][224]
                                                                 // [---][224]
    #_DIRTY_128_RECTS_ARE_CLUSTERED_#:(P_1):------------------+  // [225][224]
                                                              :  // [---][224]
        Instead of the dirty cells in                         :  // [---][224]
        [ d _ pix2048 _ dir_mem_arr ] being stored in         :  // [---][224]
        a simple scanline order, we have a scanline           :  // [---][224]
        order inside another scanline order, so that          :  // [---][224]
        each cluster of dirty cells is in a contiguous        :  // [---][224]
        strip.                                                :  // [---][224]
                                                              :  // [---][224]
        +---------------------------------------------------+ :  // [225]
        |                                                   | :  // [225]
        |  @cci@ : Cluster Cell Index.... Actually...       | :  // [225]
        |          Make[ cci , ccx , ccy ]the coords of     | :  // [225]
        |         ( AKA[ mmi , mmx , mmy ] )                | :  // [225]
        |          the OUTER GRID in this diagram.          | :  // [225]
        +---------------------------------------------------+ :  // [225]
                                                              :  // [225]
        |<---C00--->| |<---C01--->| |<---C02--->| |<---C03--->|  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |00|01|02|03| |  |  |  |  | |  |  |  |  | |  |  |  |  |  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |05|06|07|08| |  |  |  |  | |  |  |  |  | |  |  |  |  |  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |09|10|11|12| |  |  |  |  | |  |  |  |  | |  |  |  |  |  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |13|14|15|16| |  |  |  |  | |  |  |  |  | |  |  |  |  |  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
                                                              :  // [---][224]
        |<---C04--->| |<---C05--->| |<---C06--->| |<---C07--->|  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |  |  |  |  | |  |  |  |  | |  |  |  |  | |  |  |  |  |  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |  |  |  |  | |  |  |  |  | |  |  |  |  | |  |  |  |  |  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |  |  |  |  | |  |  |  |  | |  |  |  |  | |  |  |  |  |  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |  |  |  |  | |  |  |  |  | |  |  |  |  | |  |  |  |  |  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
                                                              :  // [---][224]
        |<---C08--->| |<---C09--->| |<---C10--->| |<---C11--->|  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |  |  |  |  | |  |  |  |  | |  |  |  |  | |  |  |  |  |  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |  |  |  |  | |  |  |  |  | |  |  |  |  | |  |  |  |  |  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |  |  |  |  | |  |  |  |  | |  |  |  |  | |  |  |  |  |  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |  |  |  |  | |  |  |  |  | |  |  |  |  | |  |  |  |  |  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
                                                              :  // [---][224]
        |<---C12--->| |<---C13--->| |<---C14--->| |<---C15--->|  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |  |  |  |  | |  |  |  |  | |  |  |  |  | |F0|F1|F2|F3|  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |  |  |  |  | |  |  |  |  | |  |  |  |  | |F4|F5|F6|F7|  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |  |  |  |  | |  |  |  |  | |  |  |  |  | |F8|F9|FA|FB|  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
        |  |  |  |  | |  |  |  |  | |  |  |  |  | |FC|FD|FE|FF|  // [---][224]
        +--+--+--+--+ +--+--+--+--+ +--+--+--+--+ +--+--+--+--+  // [---][224]
                                                              :  // [---][224]
        @C00@ : #01 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C01@ : #02 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C02@ : #03 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C03@ : #04 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C04@ : #05 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C05@ : #06 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C06@ : #07 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C07@ : #08 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C08@ : #09 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C09@ : #10 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C10@ : #11 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C11@ : #12 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C12@ : #13 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C13@ : #14 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C14@ : #15 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
        @C15@ : #16 cluster of 16x16 , 128x128 dirty cells    :  // [---][224]
                                                              :  // [---][224]
        :-----------------------------------------------------+  // [---][224]
                                                                 // [---][224]
    @EXTRALUT@  ::::: Synonym_For[ @EXCESSIVE_LUT@ ]             // [---][224]
    ::::::::::::::::: "Extra" as in slang for "excessive"        // [---][224]
    @EXCESSIVE_LUT@ : Excessive Lookup Table                     // [---][224]
    ::::::::::::::::: AKA: Unneccessary Lookup Table             // [---][224]
                                                                 // [---][224]
    @mmi@ : Master Memory Index , a master memory cell           // [---][224]
          : [located/identified] by 1-dimensional index.         // [---][224]
                                                                 // [---]
    #_NO_DIRTY_OFF_# :----------------------------------------+  // [225]
                                                              |  // [225]
        Do not allow the "tile setting" / "tile putting"      |  // [225]
        function to have a "dirty off" flag as an             |  // [225]
        input. If we need an efficient way to set             |  // [225]
        a cluster of tiles at once instead of just            |  // [225]
        one, then make a specialized setting for              |  // [225]
        that, rather than trying to wrap our                  |  // [225]
        original tile setter code.                            |  // [225]
                                                              |  // [225]
        @VIDEO_IDEA@:                                         |  // [225]
            "Too much re-usability === spaghetti code:        |  // [225]
    :---------------------------------------------------------+  // [225]
                                                                 // [225]
    @VIDIDEA@ : Tagging when I have video ideas in               // [225]
              : this source code file. This file is              // [225]
              : not just an MMO source code file.                // [225]
              : It is a centralized repo of my ideas.            // [225]
              ::::::: ___[ 1234567 ]___ ::::::::::::::::         // [225]
    @VID_IDEA@ :::::: USE[ VIDIDEA ]    ::::::::::::::::         // [225]
    @VIDEO_IDEA@  ::: USE[ VIDIDEA ]    ::::::::::::::::         // [225]
    @VID@ ::::::::::: USE[ VIDIDEA ]    ::::::::::::::::         // [225]
                                                                 // [225]
    @D_D_1@ : DIR_DPC call site, error #1 of whatever.           // [225]
                                                                 // [225]
    #_BELONGS_IN_PIX2048_NOT_TILEBOI_# :----------------------+  // [225]
                                                              |  // [225]
        [ F_PIX2048 _ H3X_H3Y_U32 ] :                         |  // [225]
                                                              |  // [225]
            Belongs in pix-2048 because....                   |  // [225]
            It is mainly a debug function. Yet, it is         |  // [225]
            aware of the "data layout" of hotel               |  // [225]
            cells, but I don't think that is a                |  // [225]
            violation of my organization. The data            |  // [225]
            layout used in the game is pretty                 |  // [225]
            U_B_I_QUITTUS (I can't spell )                    |  // [225]
                                                              |  // [225]
            Function is primarily a debug function            |  // [225]
            used to set bit-patterns onto master              |  // [225]
            memory. Function isn't aware of the               |  // [225]
            specifics of how those U32 values                 |  // [225]
            should be encoded.                                |  // [225]
    :---------------------------------------------------------+  // [225]
                                                                 // [225]
    @DIR_DPC@ : DIRty_DataPixelComponent , mark a X-Y            // [225]
              : coordinate on [ pix 2048 ] as dirty              // [225]
              : by giving[ F _ DIR _ DPC ]the                    // [225]
              : COMPONENT INDEX of the dirty pixel.              // [225]
              : ( __NOT__ pixel index ).                         // [225]
                                                                 // [225]
    #_WHY_DIR_225_# : Reminder to myself that the dirty          // [225]
                    : flag was set here, not elsewhere.          // [225]
                                                                 // [225]
    #_DIRTY_FLAGGER_DATA_PIXEL_COM_# :                           // [225]
                                                                 // [225]
        This function flags[ d _ pix _ 2048 ]as dirty            // [225]
        by using the pixel byte component index (COM)            // [225]
        as an input. DPC == COM == BYTE  INDEX                   // [225]
                     DPI ========= PIXEL INDEX                   // [225]
                                                                 // [225]
    @mmx@ : Master Memory Cell - X                               // [225]
    @mmy@ : Master Memory Cell - Y                               // [225]
                                                                 // [225]
    #mmx# / #mmy# / #MMX# / #MMY# :---------------------------+  // [225]
                                                              |  // [225]
        @M_M_C@ : Master Memory Cell                          |  // [225]
                                                              |  // [225]
        TAG[ M_M_C_DIAGRAM | #_MMC_DIA_# ]                    |  // [225]
                                                              |  // [225]
        |<--------------------2048----------------------->|   |  // [225]
        |<--------------1536--------------->|             |   |  // [225]
        |<---512--->|<---512--->|<---512--->| |<---512--->|   |  // [225]
        +-----------+-----------+-----------+ +-----------+   |  // [225]
        | mmi ==mm0 | mmi ==mm1 | mmi ==mm2 | | mmi ==mm3 |   |  // [225]
        |       0x0 |       0x1 |       0x2 | |       0x3 |   |  // [225]
        | mmx === 0 | mmx === 1 | mmx === 2 | | mmx === 3 |   |  // [225]
        | mmy === 0 | mmy === 0 | mmy === 0 | | mmy === 0 |   |  // [225]
        +-----------+-----------+-----------+ +-----------+   |  // [225]
        | mmi ==mm4 | mmi ==mm5 | mmi ==mm6 | | mmi ==mm7 |   |  // [225]
        |       0x4 |       0x5 |       0x6 | |       0x7 |   |  // [225]
        | mmx === 0 | mmx === 1 | mmx === 2 | | mmx === 3 |   |  // [225]
        | mmy === 1 | mmy === 1 | mmy === 1 | | mmy === 1 |   |  // [225]
        +-----------+-----------+-----------+ +-----------+   |  // [225]
        | mmi ==mm8 | mmi ==mm9 | mmi ==mma | | mmi ==mmb |   |  // [225]
        |       0x8 |       0x9 |       0xA | |       0xB |   |  // [225]
        | mmx === 0 | mmx === 1 | mmx === 2 | | mmx === 3 |   |  // [225]
        | mmy === 2 | mmy === 2 | mmy === 2 | | mmy === 2 |   |  // [225]
        +-----------+-----------+-----------+ +-----------+   |  // [225]
        +-----------+-----------+-----------+ +-----------+   |  // [225]
        | mmi ==mmc | mmi ==mmd | mmi ==mme | | mmi ==mmf |   |  // [225]
        |       0xC |       0xD |       0xE | |       0xF |   |  // [225]
        | mmx === 0 | mmx === 1 | mmx === 2 | | mmx === 3 |   |  // [225]
        | mmy === 3 | mmy === 3 | mmy === 3 | | mmy === 3 |   |  // [225]
        +-----------+-----------+-----------+ +-----------+   |  // [225]
        ^                                                 ^   |  // [225]
        |     @TILES@ : [M_M_C] Stores Tile Data.         |   |  // [225]
        |                                                 |   |  // [225]
        |     @W_G_D@ : Whatever Game Data , @IDK_YET@    |   |  // [225]
        V                                                 |   |  // [225]
        +-------+-------+-------+ +-------+               |   |  // [225]
        |       |       |       | |       |               |   |  // [225]
        | TILES | TILES | TILES | | W_G_D |               |   |  // [225]
        |       |       |       | |       |               |   |  // [225]
        +-------+-------+-------+ +-------+               |   |  // [225]
        |       |       |       | |       |               |   |  // [225]
        | TILES | TILES | TILES | | W_G_D |               |   |  // [225]
        |       |       |       | |       |               |   |  // [225]
        +-------+-------+-------+ +-------+               |   |  // [225]
        |       |       |       | |       |               |   |  // [225]
        | TILES | TILES | TILES | | W_G_D |               |   |  // [225]
        |       |       |       | |       |               |   |  // [225]
        +-------+-------+-------+ +-------+               |   |  // [225]
        +-------+-------+-------+ +-------+               |   |  // [225]
        |       |       |       | |       |               |   |  // [225]
        | W_G_D | W_G_D | W_G_D | | W_G_D |               |   |  // [225]
        |       |       |       | |       |               |   |  // [225]
        +-------+-------+-------+ +-------+ <-------------+   |  // [225]
        |< 512 >|< 512 >|< 512 >| |< 512 >|                   |  // [225]
        |<--------1536--------->|         |                   |  // [225]
        |<--------------2048------------->|                   |  // [225]
                                                              |  // [462][---]
                                  TAG[ _MMT_PREFAB_RESEARCH_ ]|  // [462][225]
    :---------------------------------------------------------+  // [225]
                                                                 // [225]
                                                                 // [225]
    @IDK_YET@  : I_Dont_Know , YET                               // [225]
               : As in, at this point in time I do not           // [225]
               : know the full details.                          // [225]
                                                                 // [225]
    @MMX_OOB@ : MemoryCellX - Is OUT OF BOUNDS                   // [225]
    @MMY_OOB@ : MemoryCellY - Is OUT OF BOUNDS                   // [225]
                                                                 // [225]
    #_NETWORK_BIT_ORDER_BITMASK_# :---------------------------+  // [225]
                                                              |  // [225]
        When getting a bit with a variable ,                  |  // [225]
        the variable represents the[ N_B_I ]                  |  // [225]
        value, __NOT__ the[ A_B_I ]value.                     |  // [225]
                                                              |  // [225]
        Thus, must invert value when shifting out data.       |  // [225]
                                                              |  // [225]
        [N_B_I] :  1  2  3  4 .... 12 13 14 15                |  // [225]
                                                              |  // [225]
        [M_S_B] -> 0  0  0  0 ....  0  0  0  0 <- [L_S_B]     |  // [225]
                   |  |  |  |       |  |  |  |                |  // [225]
        [A_B_I] : 15 14 13 12 .... 03 02 01 00                |  // [225]
                                                              |  // [225]
        @M_S_B@ : Most  Significant Bit                       |  // [225]
        @L_S_B@ : Least Significant Bit                       |  // [225]
                                                              |  // [225]
        @N_B_I@ : Network_Bit_Index                           |  // [225]
        @A_B_I@ : Actual__Bit_Index                           |  // [225]
                                                              |  // [225]
    +---------------------------------------------------------+  // [225]
                                                                 // [225]
    #_A_PROBLEM_WELL_STATED_IS_A_PROBLEM_HALF_SOLVED_# :------+  // [225]
                                                              |  // [225]
        The level I go to document the meaning of variables   |  // [225]
        might seem highly obsessive, but I firmly believe     |  // [225]
        that "A problem well stated is a problem half solved".|  // [225]
                                                              |  // [225]
        Meaning that if we nail down exactly what our         |  // [225]
        variable names mean , we have solved HALF of          |  // [225]
        our problem.                                          |  // [225]
                                                              |  // [225]
        Also, makes it really hard to think when there        |  // [225]
        is ambiguity about what a variable means.             |  // [225]
                                                              |  // [225]
        In the past I didn't take this time to nail down      |  // [225]
        exactly what my variables meant, and it led           |  // [225]
        to :                                                  |  // [225]
                                                              |  // [225]
            1. A lack of focus when coding functions.         |  // [225]
            2. Confusion and 2nd guessing myself.             |  // [225]
            3. Lots of bugs, and hard to fix bugs             |  // [225]
               because if two sections used a variable        |  // [225]
               in two different ways, I had a hard            |  // [225]
               time deciding which one was using the          |  // [225]
               variable the proper way.                       |  // [225]
                                                              |  // [225]
                  +---------------------------------------+   |  // [225]
        @VIDIDEA@ | TITLE , obsessive variable names      |   |  // [225]
                  | are necessary for good code.          |   |  // [225]
                  | OR... A problem well stated is        |   |  // [225]
                  | a problem half solved.                |   |  // [225]
                  +---------------------------------------+   |  // [225]
    :---------------------------------------------------------+  // [225]
    #_CLUSTER_CELL_INDEX____VS____CLUSTER_BIT_INDEX_# :-------+  // [225]
                                                              |  // [225]
        TAG[ CCI_VS_CBI / CBI_VS_CCI ]                        |  // [225]
                                                              |  // [225]
        @N_S_V@ : No Such Variable , conceptually it may      |  // [225]
                : exist , but no formal variable name.        |  // [225]
                                                              |  // [225]
        @cci@ : Cluster Cell Index (Outer Grid) !!!@N_S_V@!!! |  // [225]
        @ccx@ : Cluster Cell X                  !!!@N_S_V@!!! |  // [225]
        @ccy@ : Cluster Cell Y                  !!!@N_S_V@!!! |  // [225]
                                                              |  // [225]
        @cbi@ : Cluster Bit Index ( In Network Bit Order )    |  // [225]
        @cbx@ : Cluster Bit X                                 |  // [225]
        @cby@ : Cluster Bit Y                                 |  // [225]
                                                              |  // [225]
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  |  // [225]
        !!                                                !!  |  // [225]
        !!   DONT_WRITE[ cci ]IN_CODE,USE[ mmi ]          !!  |  // [225]
        !!   DONT_WRITE[ ccx ]IN_CODE,USE[ mmx ]          !!  |  // [225]
        !!   DONT_WRITE[ ccy ]IN_CODE,USE[ mmy ]          !!  |  // [225]
        !!                                                !!  |  // [225]
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  |  // [225]
                                                              |  // [225]
        @mcx@ : NO[ mem_cell_x ]YOU_MEAN[ mmx ]               |  // [225]
        @mcy@ : NO[ mem_cell_y ]YOU_MEAN[ mmy ]               |  // [225]
                                                              |  // [225]
    +---------------------------------------------------------+  // [225]
    #_NO_SUCH_THING_AS_CCX_# :--------------------------------+  // [225]
    #_NO_SUCH_THING_AS_CCY_# :--------------------------------+  // [225]
    #_NO_SUCH_THING_AS_CCI_# :--------------------------------+  // [225]
                                                              |  // [225]
        One Concept, one variable name.                       |  // [225]
                                                              |  // [225]
        We can __THINK__ of[ mmx ]as[ ccx ]IN_CERTAIN_CONTEXTS|  // [225]
        We can __THINK__ of[ mmy ]as[ ccy ]IN_CERTAIN_CONTEXTS|  // [225]
        We can __THINK__ of[ mmi ]as[ cci ]IN_CERTAIN_CONTEXTS|  // [225]
                                                              |  // [225]
        BUT DONT YOU EVER FUCKING MAKE A VARIABLE NAME        |  // [225]
        CALLED[ ccx , ccy , cci ]because we already           |  // [225]
        have[ mmx , mmy , mmi ]that describes the             |  // [225]
        exact same thing.                                     |  // [225]
                                                              |  // [225]
        I don't fucking care that :                           |  // [225]
                                                              |  // [225]
            [ ccx ]goes well with[ cbx ]                      |  // [225]
            [ ccy ]goes well with[ cby ]                      |  // [225]
            [ cci ]goes well with[ cbi ]                      |  // [225]
                                                              |  // [225]
        You can __THINK__ of [ mmx ]as[ ccx ] in the comments.|  // [225]
        You can __THINK__ of [ mmy ]as[ ccy ] in the comments.|  // [225]
        You can __THINK__ of [ mmi ]as[ cci ] in the comments.|  // [225]
                                                              |  // [225]
        BUT DON'T YOU DARE FUCKING FORMALIZE IT BY MAKING     |  // [225]
        IT A GOD DAMNED VARIABLE NAME.                        |  // [225]
    +---------------------------------------------------------+  // [225]
                                                                 // [225]
    #_DIRTY_128_RECTS_ARE_CLUSTERED_#:(P_2):------------------+  // [225]
                                                              |  // [225]
        PART_002_EXPLANATION ( explaining again )             |  // [225]
                                                              |  // [225]
        [C] : @CSO@: Cluster_Subgrid_Origin     @cso@         |  // [225]
                                                              |  // [225]
        NO_CLUSTER_CELL_X@NO_CLUSTER_CELL_Y@NO_CLUSTER_CELL_I |  // [225]
        ( Cluster Cell && Memory Cell Are Same Damn Thing    )|  // [225]
        |<------------- d_pix2048_dir_mem_arr  ------------->||  // [225]
        |<--------------- pix 2048 overlay ----------------->||  // [225]
                                                              |  // [225]
        [C][ ][ ][ ]  [C][ ][ ][ ]  [C][ ][ ][ ]  [C][ ][ ][ ]|  // [225]
        [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]|  // [225]
        [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]|  // [225]
        [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]|  // [225]
                                                              |  // [225]
        [C][ ][ ][ ]  [C][ ][ ][ ]  [C][ ][ ][ ]  [C][ ][ ][ ]|  // [225]
        [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]|  // [225]
        [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]|  // [225]
        [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]|  // [225]
                                                              |  // [225]
        [C][ ][ ][ ]  [C][ ][ ][ ]  [C][ ][ ][ ]  [C][ ][ ][ ]|  // [225]
        [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]|  // [225]
        [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]|  // [225]
        [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]|  // [225]
       +------------+                                         |  // [225]
       |[C][ ][ ][ ]| [C][ ][ ][ ]  [C][ ][ ][ ]  [C][ ][ ][ ]|  // [225]
       |[ ][ ][ ][ ]| [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]|  // [225]
       |[ ][ ][ ][ ]| [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]|  // [225]
       |[ ][ ][ ][ ]| [ ][ ][ ][ ]  [ ][ ][ ][ ]  [ ][ ][ ][ ]|  // [225]
       +-----++-----+                                         |  // [225]
             ||                              #_CSO_DIAGRAM_#  |  // [225]
             ||                                               |  // [225]
       +-----++--------------------------------------------+  |  // [225]
       |     [   x,x,y,y , x,x,y,y  , x,x,y,y , x,x,y,y    |  |  // [225]
       |     ,   x,x,y,y , x,x,y,y  , x,x,y,y , x,x,y,y    |  |  // [225]
       |     ,   x,x,y,y , x,x,y,y  , x,x,y,y , x,x,y,y    |  |  // [225]
       |     ,   x,x,y,y , x,x,y,y  , x,x,y,y , x,x,y,y ];;|  |  // [225]
       +---------------------------------------------------+  |  // [225]
       |        (x,x,y,y)===(c_x_0,c_x_1,c_y_0,c_y_1 )     |  |  // [225]
       +---------------------------------------------------+  |  // [225]
                                                              |  // [225]
    +---------------------------------------------------------+  // [225]
                                                                 // [225]
    @P_1@ : Part One of something with at least a part 2.        // [225]
    @P_2@ : Part_Two , sometimes I give a section marker         // [225]
          : the EXACT_SAME_NAME as another function to           // [225]
          : create an addendum or more explanation               // [225]
          : for a concept.                                       // [225]
                                                                 // [225]
    @COM_DEX@ : Component index.  , as apposed to @PIX_DEX@      // [225]
    ::::::::::: But _NOT_NECESSARILY_ a component index          // [225]
    ::::::::::: representation of a PIXEL , might be a           // [225]
    ::::::::::: component index of something else packed         // [225]
    ::::::::::: into an array.                                   // [225]
                                                                 // [225]
    @dpx_128@ : DataPixel_X : Range[ 0 -to- (128-1) ]INCLUSIVE   // [225]
    @dpy_128@ : DataPixel_Y : Range[ 0 -to- (128-1) ]INCLUSIVE   // [225]
                                                                 // [225]
    #_FIRST_TIME_DIRTY_IS_1X1_RECTANGLE_# :-------------------+  // [225]
                                                              |  // [225]
        The first time we mark the region dirty,              |  // [225]
        it is a 1x1 rectangle matching where                  |  // [225]
        the dirty pixel exists.                               |  // [225]
                                                              |  // [225]
        We cannot make the dirty rectangle                    |  // [225]
        "not exist" so it is vital we know if                 |  // [225]
        this is the first time the dirty rectangle            |  // [225]
        is being updated.                                     |  // [225]
                                                              |  // [225]
        @FTD@ :::: First_Time_Dirty                           |  // [225]
        @FTD_1X1 : First_Time_Dirty - 1X1 Rectangle           |  // [225]
                                                              |  // [225]
    +---------------------------------------------------------+  // [225]
                                                                 // [225]
    @wasadir@ : WAS_Already_DIRty , flag was dirty before        // [225]
              : you went to mark it dirty.                       // [225]
                                                                 // [225]
    #_OPTIMIZES_CLEARING_# :----------------------------------+  // [225]
                                                              |  // [225]
        Marking if the dirty memory region belongs to         |  // [225]
        [TILES] or [EVERYTHING_ELSE] does not help you        |  // [225]
        flag that memory as[ DIRTY ], but it does help        |  // [225]
        you flag that memory as[ CLEAN ]later.                |  // [225]
                                                              |  // [225]
        TALKING_ABOUT[ d _ pix2048 _ dir_mem_dum ]            |  // [225]
        TALKING_ABOUT[ d _ pix2048 _ dir_mem_e_e ]            |  // [225]
                                                              |  // [225]
    +---------------------------------------------------------+  // [225]
    #_RIA_BOUNDS_# :------------------------------------------+  // [225]
                                                              |  // [225]
        @RIA_NEG@ : Rectangle_Index_Address : Is   NEGATIVE   |  // [225]
        @RIA_OOB@ : Rectangle_Index_Address : Out Of Bounds   |  // [225]
                                                              |  // [225]
        There are 256 dirty rectangles for all of the         |  // [225]
        master memory.                                        |  // [225]
                                                              |  // [225]
        ( 4 * 4 Master Memory   Cells )                       |  // [225]
       *( 4 * 4 128x128 "level" Cells )                       |  // [225]
        === 256                                               |  // [225]
                                                              |  // [225]
        But each rectangle takes up 4 uint32 values so...     |  // [225]
                                                              |  // [225]
        LAST_ADDRESS ===((256*4)-1)                           |  // [225]
                                                              |  // [225]
    +---------------------------------------------------------+  // [225]
                                                                 // [225]
    #_DIRTY_RECTANGLE_IS_NOT_LOCAL_# :------------------------+  // [225]
                                                              |  // [225]
        Dirty rectangle should __NOT__ store 128x128          |  // [225]
        local coordinates. __BUT__ we can use these           |  // [225]
        local to 128x128 coordinates to error check           |  // [225]
        our math.                                             |  // [225]
    +---------------------------------------------------------+  // [225]
                                                                 // [225]
    @GTT@ : Global_To_Texture                                    // [225]
    ::::::: Wouldn't[ Local_To_Texture ]Be more correct?         // [225]
    ::::::: [ Global_To_Texture ]===[ Local_To_Texture ]         // [225]
    ::::::: But one is worded much better than the other.        // [225]
                                                                 // [225]
    #_WHY_ARE_DIRTY_RECTS_IN_GLOBAL_COORDS_# :----------------+  // [225]
                                                              |  // [225]
        Dirty rectangles are in GLOBAL coordinates because    |  // [225]
        when we do the CLEANING process , we want to be       |  // [225]
        able to directly grab the dirty rectangle and         |  // [225]
        use it for texture upload to GPU.                     |  // [225]
                                                              |  // [225]
        +----------------------------------------------+      |  // [225]
        | If the rectangle is not GLOBAL, then we :    |      |  // [225]
        +----------------------------------------------+      |  // [225]
        | 1. Might have to grab supplimentary data we  |      |  // [225]
        |    would not have had to grab other wise.    |      |  // [225]
        |                                              |      |  // [225]
        | 2. DEFINITELY will have to use supplimentary |      |  // [225]
        |    data to globalize the locals coordinates  |      |  // [225]
        |    of dirty rectangle before they can be     |      |  // [225]
        |    used in texture upload.                   |      |  // [225]
        +----------------------------------------------+      |  // [225]
                                                              |  // [225]
        That is __NEEDLESS_EXTRA_COMPLEXITY__ !!!!!!!!!!      |  // [225]
    +---------------------------------------------------------+  // [225]
                                                                 // [225]
    #DIVIDEFOOL# : You are so conditioned to multiplying         // [225]
                 : by 4 that you royaly screwed up this          // [225]
                 : code here by multiply. Now fixed with         // [225]
                 : the proper division by 4.                     // [225]
                                                                 // [225]
    #_Calc_Cluster_Bit_Index_# :------------------------------+  // [225]
                                                              |  // [225]
       [EXAMPLE]:--------------------------------:            |  // [225]
                : @cbi@ is grabbing the first    |            |  // [225]
                : dirty rectangle from the last  |            |  // [225]
                : memory cell.                   |            |  // [225]
                :                                |            |  // [225]
                : cbi ===  0                     |            |  // [225]
                : mmi === 15                     |            |  // [225]
                :--------------------------------:            |  // [225]
        |<---pix2048--->|                                     |  // [225]
    --- +---+---+---+---+     var d_pix2048_dir_mem_mmi =(    |  // [225]
    512 |mm0|mm1|mm2|mm3|     new Uint16Array([               |  // [225]
    --- +---+---+---+---+                                     |  // [225]
    512 |mm4|mm5|mm6|mm7|         0x0  , 0x0  , 0x0  ,  0x0   |  // [225]
    --- +---+---+---+---+     ,   0x0  , 0x0  , 0x0  ,  0x0   |  // [225]
    512 |mm8|mm9|mma|mmb|     ,   0x0  , 0x0  , 0x0  ,  0x0   |  // [225]
    --- +---+---+---+---+     ,   0x0  , 0x0  , 0x0  ,( 0x0 ) |  // [225]
    512 |mmc|mmd|mme| +---+                             ||    |  // [225]
    --- +---+---+---+(|mmf|)  ]));;                     ||    |  // [225]
                      +---+                             ||    |  // [225]
                        ||                              ||    |  // [225]
                        ||                              ||    |  // [225]
                        ++------------------------------++    |  // [225]
                        ||                              ||    |  // [225]
      @cbi@             ||  HEX[ 0x0  ]                 ||    |  // [225]
       ||               ||  BIN[ 0000  0000  0000  0000  ]    |  // [225]
      +--+--+--+--+     ||       |                      ||    |  // [225]
      |DR|DR|DR|DR|     ||  ((16-1)-@cbi@)              ||    |  // [225]
      +--+--+--+--+     ||                              ||    |  // [225]
      |DR|DR|DR|DR|     +---------+                     ||    |  // [225]
      +--+--+--+--+     | 0 0 0 0 |                     ||    |  // [225]
      |DR|DR|DR|DR| === | 0 0 0 0 |                     ||    |  // [225]
      +--+--+--+--+ === | 0 0 0 0 | < < < < < < < < < < ++    |  // [225]
      |DR|DR|DR|DR|     | 0 0 0 0 |                           |  // [225]
      +--+--+--+--+     +---------+                           |  // [225]
      |<-- 512 -->|     |<--128-->|                           |  // [225]
    +---------------------------------------------------------+  // [225]
                                                                 // [---]
    @DEPENDS_ON@ : System another system depends on.             // [226]
    @USED____BY@ : Sytem that uses this system.                  // [226]
    @TIGHT_PAIR@ : Tightly paired/coupled systems.               // [226]
                 : They should be adjacent to each other         // [226]
                 : in the dependency chain list.                 // [226]
                                                                 // [226]
    @DEPENDENCY_CHAIN@ : A linear solution to dependency tree.   // [226]
                                                                 // [226]
    #_GPUDATA_REFACTOR_# / #_GPUSYNC_REFACTOR_# :-------------+  // [226]
                                                              |  // [226]
        We have a dependency ordering problem with            |  // [226]
        syncing/updating GPU<==>CPU textures.                 |  // [226]
                                                              |  // [226]
        We need to extract the WEBGL context and              |  // [226]
        some shader slot information from ARTGIRL             |  // [226]
        and put them in GPUDATA.                              |  // [226]
                                                              |  // [226]
        I don't want to have to re-work ARTGIRL's struct      |  // [226]
        so lets just make GPUDATA constants that              |  // [226]
        ARTGIRL uses to set HER constants with.               |  // [226]
                                                              |  // [226]
        This will solve some dependency issues and            |  // [226]
        allow GPUDATA to contain the information that         |  // [226]
        will allow GPUSYNC to do texture push using           |  // [226]
        webgl context.                                        |  // [226]
                                                              |  // [226]
        ARGH!!!!! I hate refactoring. But we have to          |  // [226]
        do this. If we are not meticulous with our            |  // [226]
        organization our project will crumble when            |  // [226]
        it hits a critical mass.                              |  // [226]
                                                              |  // [226]
        TAG[ CRITICAL_MASS_AVOIDANCE | CRITICAL_MASS ]        |  // [226]
        TAG[ critical-mass-avoidance | critical-mass ]        |  // [226]
        TAG[ critical_mass_avoidance | critical_mass ]        |  // [226]
        TAG[ critical mass avoidance | critical mass ]        |  // [226]
                                                              |  // [226]
    +---------------------------------------------------------+  // [226]
                                                                 // [226]
    @_ABOVE_MY_PAY_GRADE_REFACTOR_@ :-------------------------+  // [226]
                                                              |  // [226]
        This thing that I thought was this sub-system's       |  // [226]
        job is in fact, not this sub-system's job.            |  // [226]
                                                              |  // [226]
        And now... I have the displeasure of refactoring      |  // [226]
        my fucking code.                                      |  // [226]
                                                              |  // [226]
        TAG[ #_ABOVE_MY_PAY_GRADE_REFACTOR_# ]                |  // [226]
    +---------------------------------------------------------+  // [226]
                                                                 // [226]
    #_REFACTOR_GPU_SYNC_CODE_# :------------------------------+  // [226]
                                                              |  // [226]
        As of[ 2022_09_01 ]The responsibilities for           |  // [226]
        GPU-SYNC code are a mess of spaghetti-code.           |  // [226]
                                                              |  // [226]
        We need to re-organize how this is handled.           |  // [226]
                                                              |  // [226]
        Who is responsible for what?                          |  // [226]
                                                              |  // [226]
        We have added :                                       |  // [226]
                                                              |  // [226]
            1. GPUDATA                                        |  // [226]
            2. GPUSYNC                                        |  // [226]
                                                              |  // [226]
        In this delta ( DELTA_2_2_6 ), to help                |  // [226]
        solve the organizational problem with our             |  // [226]
        code. Fucking hell... I don't want to do this         |  // [226]
        but we must do this for code quality.                 |  // [226]
    :---------------------------------------------------------+  // [226]
                                                                 // [226]
    @SEPERATION_OF_CONCERNS@ : Marking a place where we either   // [226]
                             : NEED_IT or are USING_IT.          // [226]
                                                                 // [226]
    #SEPERATION_OF_CONCERNS# :--------------------------------+  // [226]
                                                              |  // [226]
        https://en.wikipedia.org/wiki/Separation_of_concerns  |  // [226]
    :---------------------------------------------------------+  // [226]

    #_Shader_Attribute_AND_Uniform_Locations_# :--------------+  // [227]
                                                              |  // [227]
        UNIFORMS :: Variables that have the same value for    |  // [227]
                 :: all invokations of a fragment shader      |  // [227]
                 :: on a given draw call.                     |  // [227]
                                                              |  // [227]
        ATTRIBUTES: Same idea as UNIFORMS but for vertex      |  // [227]
                    shader instead of fragment shader.        |  // [227]
                                                              |  // [227]
                    ########################################  |  // [227]
                    ##  !!                             !! ##  |  // [227]
                    ##  Seems "Attribute" is also used as ##  |  // [227]
                    ##  a more general category that also ##  |  // [227]
                    ##  encompases "uniforms"             ##  |  // [227]
                    ##  !!                             !! ##  |  // [227]
                    ########################################  |  // [227]
    +---------------------------------------------------------+  // [227]
                                                                 // [227]
    #_What_Version_Of_WebGl_Are_We_Using_# :------------------+  // [227]
                                                              |  // [227]
        You have to use AT LEAST[ Web GL TWO(2) ]             |  // [227]
        because the entire engine heavily relies on           |  // [227]
        UNSIGNED 32 BIT INTEGER TEXTURES.                     |  // [227]
                                                              |  // [227]
        Lose the ability to do this, and you lose your        |  // [227]
        engine. It is too heavily engrained in the            |  // [227]
        engine. If you lost this ability you might as         |  // [227]
        well start re-writing the engine from scratch.        |  // [227]
    :---------------------------------------------------------+  // [227]
                                                                 // [227]
    #_VBD_LEN_AG_# :------------------------------------------+  // [227]
                                                              |  // [227]
        The vertex buffer data length can STAY IN[ ARTGIRL ]  |  // [227]
        and not go to[ GPUDATA ]because[ GPUDATA ]is mainly   |  // [227]
        concerned with the data needed to do texture          |  // [227]
        pushes.                                               |  // [227]
    :---------------------------------------------------------+  // [227]
                                                                 // [227]
    @MAR@ :  Moved_And_Refactored /  Moved_And_Renamed           // [227]
          : CAN ALSO MEAN :                                      // [227]
          : COPIED_And_Refactored / COPIED_And_Renamed           // [227]
                                                                 // [227]
    #MAR# :---------------------------------------------------+  // [227]
                                                              |  // [227]
        Deltas marked with [MAR] are mentioning that          |  // [227]
        the code has been [ moved || copied ]                 |  // [227]
        AND [ renamed / refactored ].                         |  // [227]
                                                              |  // [227]
        Should be on the marigins, to the RIGHT               |  // [227]
        of the [###] delta number it applies to.              |  // [227]
                                                              |  // [227]
        EXAMPLE :                                             |  // [227]
                                                              |  // [227]
            Some_Copy_Refactored_Code // [227][MAR]           |  // [227]
                                                              |  // [227]
    +---------------------------------------------------------+  // [227]
                                                                 // [227]
    #_NO_GPUDATA_L_P_# :--------------------------------------+  // [227]
    #_NO_GPUDATA_L_T_# :--------------------------------------+  // [227]
                                                              |  // [227]
        @_NO_GPUDATA_L_P_@ : No GPU Data - Loc_Pos            |  // [227]
        @_NO_GPUDATA_L_T_@ : No GPU Data - Loc_Tex            |  // [227]
                                                              |  // [227]
        These constants are not related to texture            |  // [227]
        pushing. They are not even related to our             |  // [227]
        texture. They are related to our                      |  // [227]
        "TEXTURE QUAD"... But that is a                       |  // [227]
        VERTEX SHADER THING, not a fragment shader            |  // [227]
        thing. It is the thing that we use to draw            |  // [227]
        texture data to, but it has no relation to            |  // [227]
        helping us setup the texture or sync the              |  // [227]
        texture with our GPU<==>CPU.                          |  // [227]
                                                              |  // [227]
        Therefor, should only exist in[ ARTGIRL ]             |  // [227]
        and __NOT__ in[ GPUDATA ].                            |  // [227]
    :---------------------------------------------------------+  // [227]

    @tex_wgl@ : Webgl context being used for texture push.       // [228]
    @ini_wgl@ : Webgl context - initialization (_INI)            // [228]
    @uni_wgl@ : Webgl context - uniform operations               // [228]
    @err_wgl@ : Webgl context - error checking                   // [228]
    @tik_wgl@ : Webgl context - for ticker function              // [228]
                                                                 // [228]
    #_WGL_LAST_FOR_EASY_FIND_# :------------------------------+  // [228]
                                                              |  // [228]
        If I want to find "wgl.some_thing" but make the       |  // [228]
        "wgl" token MORE SPECIFIC.                            |  // [228]
                                                              |  // [228]
            THIS IS BETTER :                                  |  // [228]
                                                              |  // [228]
                morespecific_wgl                              |  // [228]
                                                              |  // [228]
            THIS IS WORSE  :                                  |  // [228]
                                                              |  // [228]
                wgl_morespecific                              |  // [228]
                                                              |  // [228]
            BECAUSE WITH FORMER YOU CAN FIND :                |  // [228]
                                                              |  // [228]
                "morespecific_wgl.some_property"              |  // [228]
                                                              |  // [228]
            WHEN_LOOKING_FOR :                                |  // [228]
                                                              |  // [228]
                "wgl.some_property"                           |  // [228]
                                                              |  // [228]
        Sometimes, "general to specific" is a rule I          |  // [228]
        may intentionally break, for a reason like this.      |  // [228]
        -KanjiCoder                                           |  // [228]
    +---------------------------------------------------------+  // [228]
                                                                 // [228]
    @REN@ / #REN# / [REN] :-----------------------------------+  // [228]
                                                              |  // [228]
        Written in margins to denote a "RENAME" refactor      |  // [228]
        of a line of code. Video #2_2_8 does a lot of this.   |  // [228]
    +---------------------------------------------------------+  // [228]

    #_INITIALIZE_WEBGL_CONTEXT_# :----------------------------+  // [229]
                                                              |  // [229]
        Are you sure you are initializing the webgl context?  |  // [229]
        Does that just mean "grabbing a context" or does      |  // [229]
        that also include setup?                              |  // [229]
    :---------------------------------------------------------+  // [229]
    #_update_texture_if_needed_# :----------------------------+  // [229]
                                                              |  // [229]
        Re-push the texture to the GPU if we detect           |  // [229]
        that it contains dirty pixels.                        |  // [229]
    :---------------------------------------------------------+  // [229]
    #_UPDATE_ONLY_DIRTY_SECTORS_# :---------------------------+  // [229]
                                                              |  // [229]
        Finish the code that updates only the dirty           |  // [229]
        sectors rather than pushing up the entire             |  // [229]
        texture any time part of it gets dirty.               |  // [229]
    :---------------------------------------------------------+  // [229]
                                                                 // [229]
    @WTF_229@ : A "What the fuck" that I noticed while           // [229]
              : looking over code in VIDEO#[ 2_2_9 ]             // [229]
                                                                 // [229]
    #_d_pix2048__on__gpu_# :----------------------------------+  // [229]
                                                              |  // [229]
        Denoting that the variable we are creating here       |  // [229]
        is the GPU-side representation of                     |  // [229]
        the cpu-side texture known as[ d_pix2048 ].           |  // [229]
                                                              |  // [229]
        Was originally created in[ ARTGIRL ].                 |  // [229]
        Creation moved into[ GPUDATA ]In Delta[ #2_2_9 ]      |  // [229]
                                                              |  // [229]
    :---------------------------------------------------------+  // [229]
    #_DUMB_BUNNY_TEXTURE_UPLOAD_# :---------------------------+  // [229]
                                                              |  // [229]
        This is suitable for re-upload of texture             |  // [229]
        [ d _ pix2048 ]but it is super wasteful if we         |  // [229]
        only changed a few pixels.                            |  // [229]
                                                              |  // [229]
        We will fix that problem AFTER our refactoring        |  // [229]
        is finished. For now, the DUMB_BUNNY code is          |  // [229]
        going to be used more than it should be.              |  // [229]
                                                              |  // [229]
        How much should it be used?                           |  // [229]
                                                              |  // [229]
        ONCE!!!! ONCE WHEN WE SETUP.                          |  // [229]
                                                              |  // [229]
        Have a DEBUG KONAMI CODE COMBO to activate            |  // [229]
        DUMB_BUNNY_UPLOAD would also be okay.                 |  // [229]
                                                              |  // [229]
        But the texture uploads that happen when the          |  // [229]
        game is running should be SMARTER.                    |  // [229]
                                                              |  // [229]
    :---------------------------------------------------------+  // [229]
    #_INLINE_THAT_SHIT_# :------------------------------------+  // [229]
                                                              |  // [229]
        We don't need a function of that name. Just inline    |  // [229]
        the code because we only need to do it ONCE.          |  // [229]
                                                              |  // [229]
        Don't make re-usable functions for code that          |  // [229]
        isn't re-used.                                        |  // [229]
    :---------------------------------------------------------+  // [229]
                                                                 // [229]
    @VIDEO_IDEA@ : Draw out old NES characters in grid in        // [229]
    @VIDIDEA@    : your tilemap. For extra bonus, apply          // [229]
    @VID@        : CRAY_CRAY mode to them.                       // [229]

    @VIDEO_IDEA@ : Super Mario BRUSH , don't sue me nintendo.    // [230]
    @VIDIDEA@    : It stamps pattern if your tile brush is       // [230]
    @VID@        : At least 32x32 pebble tiles in size.          // [230]
                                                                 // [230]
    #_CLEAN_ALL_UN_FLAGGER_# :--------------------------------+  // [230]
                                                              |  // [230]
        Removes all dirty flags associated with texture       |  // [230]
        and makes sure all dirty chunks of memory are         |  // [230]
        re-uploaded to the GPU.                               |  // [230]
                                                              |  // [230]
    :---------------------------------------------------------+  // [230]

    #_MARK_EVERYTHING_CLEAN_# :-------------------------------+  // [232]
                                                              |  // [232]
        [ DMM ZEROED ] :-------------------------------+      |  // [232]
                                                       |      |  // [232]
            With the dirty rectangles, we only have to |      |  // [232]
            clear the bit-packed clusters of ledgers.  |      |  // [232]
                                                       |      |  // [232]
            We don't need to re-adjust the rectangles  |      |  // [232]
            themselves to mark them as clean.          |      |  // [232]
        :----------------------------------------------+      |  // [232]
    :---------------------------------------------------------+  // [232]
                                                                 // [232]
    @m16@ : Master Memory Cell Index [ 0 to 15 ] inclusive       // [232]
                                                                 // [---]
    @hx3@ : YOU_MEAN[ h3x ]( Hotel Cell X coord , [0|1|2] )      // [233]
    @hy3@ : YOU_MEAN[ h3y ]( Hotel Cell Y coord , [0|1|2] )      // [233]
                                                                 // [233]
    @hi3@ : DOUBLY_WRONG_USE[      hi9 ]                         // [233]
    @h9i@ : WRONG_BUT_LOGICAL_USE[ hi9 ]                         // [233]
                                                                 // [233]
    #_HOTEL_TO_MEMORY_CELL_# :--------------------------------+  // [233]
                                                              |  // [233]
        @EEC@ : Everything_Else - Column ( vertical   )       |  // [233]
        @EER@ : Everything_Else - Row    ( horizontal )       |  // [233]
                                                              |  // [233]
        |<------------------ d_pix2048 -------------------->| |  // [233]
        |<---------- Hotel Cells ------------>| |<--@EEC@-->| |  // [233]
        +---=---=---++---=---=---++---=---=---+ +---=---=---+ |  // [233]
        |           ||           ||           | |           | |  // [233]
        | mmi === 0 || mmi === 1 || mmi === 2 | | mmi === 3 | |  // [233]
        | hi9 === 0 || hi9 === 1 || hi9 === 2 | | hi9 ===NAN| |  // [233]
        |           ||           ||           | |           | |  // [233]
        +---=---=---++---=---=---++---=---=---| |---=---=---+ |  // [233]
        |           ||           ||           | |           | |  // [233]
        | mmi === 4 || mmi === 5 || mmi === 6 | | mmi === 7 | |  // [233]
        | hi9 === 3 || hi9 === 4 || hi9 === 5 | | hi9 ===NAN| |  // [233]
        |           ||           ||           | |           | |  // [233]
        +---=---=---++---=---=---++---=---=---| |---=---=---+ |  // [233]
        |           ||           ||           | |           | |  // [233]
        | mmi === 8 || mmi === 9 || mmi ===10 | | mmi ===11 | |  // [233]
        | hi9 === 6 || hi9 === 7 || hi9 === 8 | | hi9 ===NAN| |  // [233]
        |           ||           ||           | |           | |  // [233]
        +=====================================+ +===========+ |  // [233]
   ---  +=====================================+ +===========+ |  // [233]
    |   |           ||           ||           | |           | |  // [233]
  @EER@ | mmi ===12 || mmi ===13 || mmi ===14 | | mmi ===15 | |  // [233]
    |   | hi9 ===NAN|| hi9 ===NAN|| hi9 ===NAN| | hi9 ===NAN| |  // [233]
    |   |           ||           ||           | |           | |  // [233]
   ---  +---=---=---++---=---=---++---=---=---+ +---=---=---+ |  // [233]
                                                              |  // [233]
    :---------------------------------------------------------+  // [233]
    #_Cluster_Bit_Index_# :-----------------------------------+  // [233]
                                                              |  // [233]
        RELATED[ Calc_Cluster_Bit_Index        ]DIAGRAM_TAG   |  // [233]
        RELATED[ DIRTY_128_RECTS_ARE_CLUSTERED ]DIAGRAM_TAG   |  // [233]
        RELATED[ M_M_C_DIAGRAM                 ]DIAGRAM_TAG   |  // [233]
                                                              |  // [233]
        mmi = ( mmx + ( mmy * 4 );                            |  // [233]
    +--------------------------------------------------------+|  // [233]
    |                                                        ||  // [233]
    |        |  mmx=0  | | mmx=1   | | mmx=2   | | mmx=3   | ||  // [233]
    |    --- +----=----+ +----=----+ +----=----+ +----=----+ ||  // [233]
    |     |  | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | ||  // [233]
    |  mmy=0 | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | ||  // [233]
    |     |  | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | ||  // [233]
    |    --- +----=----+ +----=----+ +----=----+ +----=----+ ||  // [233]
    |    --- +----=----+ +----=----+ +----=----+ +----=----+ ||  // [233]
    |     |  | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | ||  // [233]
    |  mmy=1 | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | ||  // [233]
    |     |  | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | ||  // [233]
    |    --- +----=----+ +----=----+ +----=----+ +----=----+ ||  // [233]
    |    --- +----=----+ +----=----+ +----=----+ +----=----+ ||  // [233]
    |     |  | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | ||  // [233]
    |  mmy=2 | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | ||  // [233]
    |     |  | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | ||  // [233]
    |    --- +----=----+ +----=----+ +----=----+ +----=----+ ||  // [233]
    |    --- +----=----+ +----=----+ +----=----+ +----=----+ ||  // [233]
    |     |  | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | ||  // [233]
    |  mmy=3 | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | ||  // [233]
    |     |  | 0 0 0 0 | | 0 0 0 0 | | 0 0 0 0 | | 0[0]0 0 | ||  // [233]
    |    --- +----=----+ +----=----+ +----=----+ +---^-----+ ||  // [233]
    |                                |@u16_dir@|     |       ||  // [233]
    +-------------------^^---------------------------|-------+|  // [233]
                        ||                           |        |  // [233]
    +-------------------VV-------------+  +----------|-------+|  // [233]
    | d_pix2048_dir_mem_mmi =[ /////// |  |          |       ||  // [233]
    |                                  |  |          |       ||  // [233]
    |     0x00 , 0x00 , 0x00 , 0x00    |  | (9===@cbi_016@)  ||  // [233]
    |     0x00 , 0x00 , 0x00 , 0x00    |  |                  ||  // [233]
    |     0x00 , 0x00 , 0x00 , 0x00    |  | Cluster_Bit_Index||  // [233]
    |     0x00 , 0x00 , 0x00 , 0x00    |  | Is Local To The  ||  // [233]
    |                                  |  | Cluster Cell We  ||  // [233]
    | ];;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; |  | Are On.          ||  // [233]
    +----------------------------------+  +------------------+|  // [233]
                                                              |  // [233]
    +---------------------------------------------------------+  // [233]
                                                                 // [233]
    @cbi_009@ : FUCKING_WRONG_USE[ cbi_016 ]( 16 indexes! )      // [233]
    @cbi_016@ : Cluster_Bit_Index____Capacity_16_Values          // [233]
              : cbi_016 == [00|01|02|03|04|...11|12|13|14|15]    // [233]
                                                                 // [233]
    @FUTURE_REFACTOR@ : [ dir_mem_mmi ]==>[ dirtmem_mmi_u16 ]    // [233]
    @FUTURE_REFACTOR@ : [ dir_mem_arr ]==>[ dirtmem_r1k_rb4 ]    // [233]
                                                                 // [233]
    @ria@ : Rectangle_Index_Address ( Base Address Of Rect )     // [233]
    @r1k@ : Rectangle(index)[ 1,000 / K / 1024 ]Values           // [233]
    @rb4@ : Rectangle BoundsAddress ( [ 0|1|2|3 ] )              // [233]
          : Rectangle_BoundsAddress ( [x_0|x_1|y_0|y_1] )        // [233]
                                                                 // [233]
    @dirtmem_ria_rb4@ : USE[ dirtmem_r1k_rb4 ]                   // [233]
                                                                 // [233]
    @dirtmem_mmi_u16@ : ( mmi )==>( u16 ,4x4 bitmask ledger  )   // [233]
    @dirtmem_r1k_rb4@ : ( r1k )==>( rb4 ,REC[x_0|x_1|y_0|y_1])   // [233]
                                                                 // [233] 
    #_FUTURE_REFACTOR_# / @FUTURE_REFACTOR@ :-----------------+  // [233] 
                                                              |  // [233] 
        A site where I want to re-name the                    |  // [233] 
        [ function / variable / token ] to a name             |  // [233] 
        that makes more sense.                                |  // [233] 
    +---------------------------------------------------------+  // [233] 
                                                                 // [233]
    @u16_dir@ : u16 DIrty_Rectangle bitmask ledges               // [233]
    #u16_dir# :-----------------------------------------------+  // [233]
                                                              |  // [233]
             +-----------------------------------+            |  // [233]
             |@u16_dir@, is a uint16( u16 )      |            |  // [233]
             | bitmask that creates a 4x4        |            |  // [233]
             | grid overlay on top of a master   |            |  // [233]
             | memory cell ( [mmx,mmy]/mmi )     |            |  // [233]
             | And tells us what dirty           |            |  // [233]
             | rectangles are currently dirty.   |            |  // [233]
             | 0 === clean                       |            |  // [233]
             | 1 === dirty                       |            |  // [233]
             +-----------------+-----------------+            |  // [233]
                               |                              |  // [233]
             +-----------------+-----------------+            |  // [233]
             |                                   |            |  // [233]
             V                                   V            |  // [233]
        +----=----+                         +----=----+       |  // [233]
        | 0 0 0 0 |                         | 1 1 1 1 |       |  // [233]
        | 0 0 0 0 | <=== 0x0000 0x1111 ===> | 1 1 1 1 |       |  // [233]
        | 0 0 0 0 |                         | 1 1 1 1 |       |  // [233]
        +----=----+                         +----=----+       |  // [233]
        |@u16_dir@|                         |@u16_dir@|       |  // [233]
    +---------------------------------------------------------+  // [233]
                                                                 // [233]
    @4X4_BITS@ : The number represents a 4x4 grid of bits.       // [233]
    @ALIAS_NAME@ : Two variables that mean exact same thing.     // [233]
    @4_ELMS@ ::::: 4 elements ( in array packed data )           // [233]
                                                                 // [223]
    @bx0@ : inclusive_rectangle BOUNDS[ x_0 ]                    // [223]
    @bx1@ : inclusive_rectangle BOUNDS[ x_1 ]                    // [223]
    @by0@ : inclusive_rectangle BOUNDS[ y_0 ]                    // [223]
    @by1@ : inclusive_rectangle BOUNDS[ y_1 ]                    // [223]
                                                                 // [233]
    @REC_BOU@ : Rectangle Bounds                                 // [233]
                                                                 // [233]
    #_DIA_MMI_U16_# :-----------------------------------------+  // [233]
    #_DIA_R1K_RB4_# :-----------------------------------------+  // [233]
                                                              |  // [233]
        //:NOTE[ d_mmi_u16 === d_pix2048_dir_mem_mmi ]://     |  // [233]
        //:NOTE[ d_r1k_rb4 === d_pix2048_dir_mem_arr ]://     |  // [233]
                                                              |  // [233]
        var d_mmi_u16 =([ ///////[DIA_MMI_U16]//              |  // [233]
                                                              |  // [233]
            mmi:00     mmi:01   mmi:02   mmi:03               |  // [233]
            0x0000   , 0x0000 , 0x0000 , 0x0000               |  // [233]
                                                              |  // [233]
            mmi:04     mmi:05   mmi:06   mmi:07               |  // [233]
        ,   0x0000   , 0x0000 , 0x0000 , 0x0000               |  // [233]
                                                              |  // [233]
            mmi:08     mmi:09   mmi:10   mmi:11               |  // [233]
        ,   0x0000   , 0x0000 , 0x0000 , 0x0000               |  // [233]
                                                              |  // [233]
            mmi:12     mmi:13   mmi:14   mmi:15               |  // [233]
        ,   0x0000   , 0x0000 , 0x0000 , 0x0000               |  // [233]
                                                              |  // [233]
        ]);; //////////////////[ DIA_MMI_U16 ]//              |  // [233]
                                                              |  // [233]
        var d_r1k_rb4 =([ /////////////////[ DIA_R1K_RB4 ]//  |  // [233]
                                                              |  // [233]
            +-------------------+  +--=--+  +--=--+  +--=--+  |  // [233]
            | [ c_r16 * c_xy4 ] |  |     |  |     |  |     |  |  // [233]
            | XXYY,XXYY....XXYY |  | ... |  | ... |  | ... |  |  // [233]
            +-------------------+ ,+--=--+ ,+--=--+ ,+--=--+  |  // [233]
            +-------------------+  +--=--+  +--=--+  +--=--+  |  // [233]
            | [ c_r16 * c_xy4 ] |  |     |  |     |  |     |  |  // [233]
            | XXYY,XXYY....XXYY |  | ... |  | ... |  | ... |  |  // [233]
        ,   +-------------------+ ,+--=--+ ,+--=--+ ,+--=--+  |  // [233]
            +-------------------+  +--=--+  +--=--+  +--=--+  |  // [233]
            | [ c_r16 * c_xy4 ] |  |     |  |     |  |     |  |  // [233]
            | XXYY,XXYY....XXYY |  | ... |  | ... |  | ... |  |  // [233]
        ,   +-------------------+ ,+--=--+ ,+--=--+ ,+--=--+  |  // [233]
            +-------------------+  +--=--+  +--=--+  +--=--+  |  // [233]
            | [ c_r16 * c_xy4 ] |  |     |  |     |  |     |  |  // [233]
            | XXYY,XXYY....XXYY |  | ... |  | ... |  | ... |  |  // [233]
        ,   +-------------------+ ,+--=--+ ,+--=--+ ,+--=--+  |  // [233]
        ]);; //////////////////////////////[ DIA_R1K_RB4 ]//  |  // [233]
                                                              |  // [233]
    :-----------------------------------------+#_DIA_MMI_U16_#+  // [233]
    :-----------------------------------------+#_DIA_R1K_RB4_#+  // [233]
                                                                 // [233]
    @VIDEO_IDEA@ : BADMATH_F_DIAGRAM , with MARIO Sprites        // [233]
    @VIDIDEA@::::: once we get our renderer working.             // [233]
    @VID@::::::::: INFOTAINMENT animations using my              // [233]
    :::::::::::::: tilemap rendering code.                       // [233]
                                                                 // [233]
    @BADMATH_F_DIAGRAM@ : I'd get cancelled if I told you        // [233]
    ::::::::::::::::::::: What this stands for.                  // [233]
                                                                 // [233]
    #REC_LBA# :-----------------------------------------------+  // [233]
    #REC_GBA# :-----------------------------------------------+  // [233]
    @REC_LBA@ : Rectangle_Local_Base_Address                  |  // [233]
    @REC_GBA@ : Rectangle_Global_Base_Address                 |  // [233]
              : Address____Of[ x_0             ]              |  // [233]
              : InDataCluster[ x_0,x_1,y_0,y_1 ]              |  // [233]
                                                              |  // [233]
            @r64@ : Rectang(LBA)[ 0 to (  64-1)]              |  // [233]
            @r1k@ : Rectang(GBA)[ 0 to (1024-1)]              |  // [233]
                                                              |  // [233]
            LBA === Local__Base_Address ===@r64@              |  // [233]
            GBA === Global_Base_Address ===@r1k@              |  // [233]
    [                                                         |  // [233]
           LBA:0     RELATED_DIAGRAM[ CSO_DIAGRAM ] < < < < < |  // [233]
           GBA:0                                              |  // [233]
        +---|-------------------------------------+ <--+      |  // [233]
        |  [x],x,y,y , x,x,y,y , x,x,y,y ,x,x,y,y |    |      |  // [233]
        |   x ,x,y,y , x,x,y,y , x,x,y,y ,x,x,y,y |   c_mm0   |  // [233]
        |   x ,x,y,y , x,x,y,y , x,x,y,y ,x,x,y,y |    |      |  // [233]
        |   x ,x,y,y , x,x,y,y , x,x,y,y ,x,x,y,y |    |      |  // [233]
        +-----------------------------------------+ <--+      |  // [233]
    ,                                                         |  // [233]
           LBA:0                                              |  // [233]
           GBA:64                                             |  // [233]
        +---|-------------------------------------+ <--+      |  // [233]
        |  [x],x,y,y , x,x,y,y , x,x,y,y ,x,x,y,y |    |      |  // [233]
        |   x ,x,y,y , x,x,y,y , x,x,y,y ,x,x,y,y |   c_mm1   |  // [233]
        |   x ,x,y,y , x,x,y,y , x,x,y,y ,x,x,y,y |    |      |  // [233]
        |   x ,x,y,y , x,x,y,y , x,x,y,y ,x,x,y,y |    |      |  // [233]
        +-----------------------------------------+ <--+      |  // [233]
                                                              |  // [233]
        .... 16 total clusters , 13 ommitted from ....        |  // [233]
        .... this diagram ............................        |  // [233]
                                                              |  // [233]
    ,                                                         |  // [233]
           LBA:0                                              |  // [233]
           GBA:960                                            |  // [233]
        +---|-------------------------------------+ <--+      |  // [233]
        |  [x],x,y,y , x,x,y,y , x,x,y,y ,x,x,y,y |    |      |  // [233]
        |   x ,x,y,y , x,x,y,y , x,x,y,y ,x,x,y,y |   c_mmf   |  // [233]
        |   x ,x,y,y , x,x,y,y , x,x,y,y ,x,x,y,y |    |      |  // [233]
        |   x ,x,y,y , x,x,y,y , x,x,y,y ,x,x,y,y |    |      |  // [233]
        +-----------------------------------------+ <--+      |  // [233]
    ];;              RELATED_DIAGRAM[ CSO_DIAGRAM ] < < < < < |  // [233]
    +---------------------------------------------------------+  // [233]
                                                                 // [233]
    @Rectang@ : Short for "Rectangle" ( in diagrams )            // [233]
                                                                 // [---]
    @ee7@ : EverythingElse(cell)Index ( 0 to (7-1) )             // [234]
    @eec@ : We_Dont_Have_EverythingElseCell_We_Have[ ee7 ]       // [234]
    @eei@ : We_Are_Going_To_Be_More_Specific____USE[ ee7 ]       // [234]
    @DAR@ : Duplicated And Refactored                            // [234]
                                                                 // [234]
    #_CON_COM_VAR_DEC_# :-------------------------------------+  // [234]
    @_CON_COM_VAR_DEC_@ :-------------------------------------+  // [234]
                                                              |  // [234]
        Conditional Common Variable Declaration               |  // [234]
                                                              |  // [234]
        Declarations are done as-if it is                     |  // [234]
        "conditional compilation" in C99.                     |  // [234]
                                                              |  // [234]
        __MUST__ use "var" keyword and __NOT__ "let"          |  // [234]
        so these declarations can escape the block            |  // [234]
        scope to be used in either ONE or BOTH of             |  // [234]
        the blocks of code below that use these               |  // [234]
        variable names.                                       |  // [234]
    :---------------------------------------------------------+  // [234]
                                                                 // [234]
    @VIDEO_IDEA@: Tutorial Video Called                   :::::  // [234]
    @VIDIDEA@:::: "Cache Friendly QuadTree In JavaScript" :::::  // [234]
    @VID@:::::::: where I go over #2_3_4's code.          :::::  // [234]
                                                                 // [234]
    #_COMMON_CLEANING_CODE_# :--------------------------------+  // [234]
                                                              |  // [234]
        The two main branches of our dirty region             |  // [234]
        cleaning code are nearly identical. I am marking      |  // [234]
        the identical region with the tag                     |  // [234]
        [ COMMON_CLEANING_CODE ].                             |  // [234]
                                                              |  // [234]
    :---------------------------------------------------------+  // [234]
                                                                 // [234]
    #TODO_TEXTURE_PUSH_HERE# :--------------------------------+  // [234]
    @TODO_TEXTURE_PUSH_HERE@ :--------------------------------+  // [234]
                                                              |  // [234]
        Marking a place in the code where we need to          |  // [234]
        upload CPU-side RRGGBBAA bytemap to GPU-side texture. |  // [234]
                                                              |  // [234]
    +---------------------------------------------------------+  // [234]
                                                                 // [234]
    @bytemap@ : Technically more correct than "bitmap"           // [234]
              : when talking about our "cpu-side bitmap"         // [234]
              : because it is an array of bytes in               // [234]
              : R,G,B,A order.                                   // [234]
                                                                 // [234]
    @VIDEO_IDEA@: Weird focusing hack I found that works ::::::  // [234]
    @VIDIDEA@:::: pretty good if you are egotistical and ::::::  // [234]
    @VID@:::::::: narcassistic like myself.              ::::::  // [234]
    :::::::::::::                                        ::::::  // [234]
    :::::::::::::  Pretend the person talking is you.    ::::::  // [234]
    :::::::::::::                                        ::::::  // [234]
    :::::::::::::  -KanjiCoder                           ::::::  // [234]
                                                                 // [---]
    @VIDEO_IDEA@ : 2D auto tile ambient occlusion :::::::::::::  // [235]
                                                                 // [235]
    paymoneywubby: Would like the "present" you are working      // [235]
                 : on for kyootbot. Maybe make them a version    // [235]
                 : of it as well? Amanda thinks it's good idea.  // [235]
                                                                 // [235]
    #_src_oib_# :---------------------------------------------+  // [235]
     @src_oib@:SouRCe_OffsetInBytes                           |  // [235]
                                                              |  // [235]
        SRC_OIB_TEXSUBIMAGE2D                                 |  // [235]
                                                              |  // [235]
        If you are using a sub-section of                     |  // [235]
        a byte array on the CPU-side, you will                |  // [235]
        need to specify the index location of                 |  // [235]
        the first byte of the first pixel.                    |  // [235]
    :---------------------------------------------------------+  // [235]
                                                                 // [235]
    @L_O_D@ : Level_Of_Detail                                    // [235]
                                                                 // [235]
    @tlo_lef@ : Top_Left_Origin_Left   < < < @NONSENSE@          // [235]
    @tlo_rig@ : Top_Left_Origin_Right  < < < @NONSENSE@          // [235]
    @tlo_top@ : Top_Left_Origin_Top    < < < @NONSENSE@          // [235]
    @tlo_bot@ : Top_Left_Origin_Bottom < < < @NONSENSE@          // [235]
                                                                 // [235]
    @NONSENSE@ : It's bullshit crazy talk , don't use it.        // [235]
                                                                 // [235]
    @tlo_x_0@ : Top Left Origin - x_0 component                  // [235]
    @tlo_y_0@ : Top Left Origin - y_0 component                  // [235]
    @rec_wid@ : Width  of inclusive rectangle , in pixels.       // [235]
    @rec_hig@ : Height of inclusive rectangle , in pixels.       // [235]
                                                                 // [235]
    @DIRTY_SUB_SEL_RECT@ : Dirty Sub-Selection Rectangle         // [235]
                                                                 // [235]
    #_SUB_TEXTURE_PUSH_MY_BITCHES_# :-------------------------+  // [235]
                                                              |  // [235]
        This section of code is dedicated to a partial        |  // [235]
        update of a texture. Uploading dirty sections of      |  // [235]
        CPU-side texture to GPU-side texture.                 |  // [235]
    :---------------------------------------------------------+  // [235]
                                                                 // [235]
    @i2d_wgl@ : Temp reference to[ WebGL ]context used for       // [235]
              : TexSubImage2D( i2d ).                            // [235]

    @d_gpudata_fum@ : global Data - GPU Data - ForceUpdateMode   // [236]
    @@@gpudata_fum@ : ............. GPU Data - ForceUpdateMode   // [236]
    @G_S_CIA@ : GPU_Sync_CleanItAll                              // [236]
    @Give_Me_Complime@ : Give_Me_Complements                     // [236]
    @gmc@ : Give Me Compliments ( Ok Status Messages )           // [236]
    @d_artgirl_gmc@ : GiveMeCompliments (OkStatusMessages)       // [236]
                                                                 // [236]
    #_LOGGING_CONFIGURATION_# :-------------------------------+  // [236]
                                                              |  // [236]
        We want the main configuration section to be          |  // [236]
        very small so that it is just a small amount of       |  // [236]
        scrolling down to see our dependency chain list.      |  // [236]
    :---------------------------------------------------------+  // [236]
                                                                 // [236]
    @d_log_numpad@ : USE[ d_log_npk ]                            // [236]
    @d_log_npk@    : Logging - NumPadKey ( log presses )         // [236]

    #_WTF_IS_WRONG_WITH_SUB_TEXTURE_UPLOAD_# :----------------+  // [237]
                                                              |  // [237]
        https://registry.khronos.org/webgl/specs/latest/2.0/  |  // [237]
                                                              |  // [237]
        I always seem to fuck up this command.                |  // [237]
                                                              |  // [237]
    +---------------------------------------------------------+  // [237]
    #_SOURCE_OFFSET_DOCUMENTATION_NOTES_# :-------------------+  // [237]
                                                              |  // [237]
        STEP 1 : GOTO URL :                                   |  // [237]
                                                              |  // [237]
        https://registry.khronos.org/webgl/specs/latest/2.0/  |  // [237]
                                                              |  // [237]
        STEP 2 : SEARCH :::                                   |  // [237]
                                                              |  // [237]
            Only differences from texSubImage2D               |  // [237]
            in WebGL 1.0 are described here.                  |  // [237]
    +---------------------------------------------------------+  // [237]
    #_BUGHUNT_WASADIR_FLAGGING_# :----------------------------+  // [237]
                                                              |  // [237]
        When I manually set[ wasadir = 0 ]so that the         |  // [237]
        dirty rectangle is always 1x1 , the effect            |  // [237]
        seems to be an exacerbation of the bug I am           |  // [237]
        trying to fix.                                        |  // [237]
                                                              |  // [237]
        The symptom will occur for vertical _AND_ horizonal   |  // [237]
        strokes instead of only on vertical strokes.          |  // [237]
                                                              |  // [237]
        So maybe look into that?                              |  // [237]
                                                              |  // [237]
        But I really think we need to update the              |  // [237]
        renderer to give us more visual feedback.             |  // [237]
                                                              |  // [237]
        Let's create hard coded 8x8 or 5x4 patterns           |  // [237]
        for different materials using mini-bitmaps            |  // [237]
        packed int uint32 values.                             |  // [237]
                                                              |  // [237]
        Same idea as our glyph stamper code ( BINFONT )       |  // [237]
        but for rendering tilemap data.                       |  // [237]
    :---------------------------------------------------------+  // [237]

    #_FOURSET_DESIGN_LOOKUP_TABLES_# :------------------------+  // [238]
                                                              |  // [238]
        These lookup tables will be used to create            |  // [238]
        the sets of bitpacked uint32(U32) values that         |  // [238]
        encode the FOURSET designs for all 16 of              |  // [238]
        our tile values on all 3 layers.                      |  // [238]
        ( Total of 16*3 designs , 3 which are empty sets )    |  // [238]
        ( 15 * 3 == 45 non-zero geometric designs        )    |  // [238]
                                                              |  // [238]
    :---------------------------------------------------------+  // [238]
                                                                 // [238]
    #_MULTIPLAYER_# / #_MULTIPLAYER_THOUGHTS_# :--------------+  // [238]
                                                              |  // [238]
        To reduce server load all clients do the tilemap      |  // [238]
        destruction on their own processors. But every        |  // [238]
        once and a while they upload a checksum of their      |  // [238]
        level data to make sure it matches with other         |  // [238]
        client machines.                                      |  // [238]
                                                              |  // [238]
        If things get out of sync we try to merge             |  // [238]
        the conflicting levels together.                      |  // [238]
                                                              |  // [238]
        Maybe one player in the server is an                  |  // [238]
        "AUTHORATIVE_USER" and when things get out of         |  // [238]
        sync we trust the "AUTHORATIVE_USER"*s data.          |  // [238]
                                                              |  // [238]
    +---------------------------------------------------------+  // [238]
                                                                 // [238]
    @FUTU@ : Like "NEXT" But no promise of when it is comming.   // [238]
           : Just means "sometime in the future we will do it.   // [238]
                                                                 // [238]
    @NEXT@ : The next thing we are probably going to use.        // [238]
           : I use this in my change log rather than             // [238]
           : writing "T_O_D_O" because I want to use that        // [238]
           : work sparingly.                                     // [238]
                                                                 // [238]
    @DONE@ : Mentioning something that was [DONE]/[FINISHED]     // [238]
           : in the current[ video / delta ]we are on.           // [238]

    @FOURSET_BIN_GEO@ : Fourset Binary Clusters - GEOM tiles     // [239]
    @FOURSET_BIN_BOM@ : Fourset Binary Clusters - BOMB tiles     // [239]
    @FOURSET_BIN_FAD@ : Fourset Binary Clusters - FADA tiles     // [239]
                                                                 // [239]
    @BEG_ARR@ : Begin Array                                      // [239]
    @END_ARR@ : End   Array                                      // [239]
                                                                 // [239]
    #_FOURSET_DATA_CLUSTERS_# :-------------------------------+  // [239]
                                                              |  // [239]
        Clustering of FOURSET binary data is very much        |  // [239]
        like the clustering of our data in GPUSYNC dirty      |  // [239]
        rectangles.                                           |  // [239]
                                                              |  // [239]
        [ ][ ][ ][ ]     +---------------------------------+  |  // [239]
        [ ][ ][ ][ ] === | The 16 U32 values used to encode|  |  // [239]
        [ ][ ][ ][ ] === | __ONE__ @fourset@ design.       |  |  // [239]
        [ ][ ][ ][ ]     +---------------------------------+  |  // [239]
                                                              |  // [239]
        @BEG_ARRAY@[ d_fourset_la3_v16_f16_u25clus ]          |  // [275][REF][239]
        ======================================================|  // [239]
                                                              |  // [239]
        @FOURSET_GEOM_CLUSTERS@ :                             |  // [239]
        |<-v16:00->|         |<-v16:08->|         |<-v16:15->||  // [239]
        [ ][ ][ ][ ]         [ ][ ][ ][ ]         [ ][ ][ ][ ]|  // [239]
 la3:0  [ ][ ][ ][ ]         [ ][ ][ ][ ]         [ ][ ][ ][ ]|  // [239]
        [ ][ ][ ][ ]         [ ][ ][ ][ ]         [ ][ ][ ][ ]|  // [239]
        [ ][ ][ ][ ] , ... , [ ][ ][ ][ ] , ... , [ ][ ][ ][ ]|  // [239]
                                                              |  // [239]
        @FOURSET_BOMB_CLUSTERS@ :                             |  // [239]
        |<-v16:00->|         |<-v16:08->|         |<-v16:15->||  // [239]
        [ ][ ][ ][ ]         [ ][ ][ ][ ]         [ ][ ][ ][ ]|  // [239]
 la3:1  [ ][ ][ ][ ]         [ ][ ][ ][ ]         [ ][ ][ ][ ]|  // [239]
        [ ][ ][ ][ ]         [ ][ ][ ][ ]         [ ][ ][ ][ ]|  // [239]
        [ ][ ][ ][ ] , ... , [ ][ ][ ][ ] , ... , [ ][ ][ ][ ]|  // [239]
                                                              |  // [239]
        @FOURSET_FADA_CLUSTERS@ :                             |  // [239]
        |<-v16:00->|         |<-v16:08->|         |<-v16:15->||  // [239]
        [ ][ ][ ][ ]         [ ][ ][ ][ ]         [ ][ ][ ][ ]|  // [239]
 la3:2  [ ][ ][ ][ ]         [ ][ ][ ][ ]         [ ][ ][ ][ ]|  // [239]
        [ ][ ][ ][ ]         [ ][ ][ ][ ]         [ ][ ][ ][ ]|  // [239]
        [ ][ ][ ][ ] , ... , [ ][ ][ ][ ] , ... , [ ][ ][ ][ ]|  // [239]
                                                              |  // [239]
        ======================================================|  // [239]
        @END_ARRAY@[ d_fourset_la3_v16_f16_u25clus ]          |  // [275][REF][239]
    +---------------------------------------------------------+  // [239]
                                                                 // [239]
    @la3_v16_f16_u32@ : USE[ la3_v16_f16_u25clus ]               // [275][REF][239]
    @u25clus@ : A binary cluster of data making up one of        // [275][REF][239]
              : the 16 sub-sectors of a single[ fourset ]        // [239]
              : auto-tile-set . ( A 5x5 binary pixel graphic)    // [275][239]
                                                                 // [239]
    @la3_v16_f16_u25clus@ : INN[ la3,v16,f16 ]OUT[ u25clus ]     // [275][REF][239]
    #la3_v16_f16_u25clus# :-----------------------------------+  // [275][REF][239]
                                                              |  // [239]
        u25clus=(                                             |  // [275][REF][239]
            la3_v16_f16_u25clus[                              |  // [275][REF][239]
                                                              |  // [239]
                ( la3 * 256 ) <-- Seek to correct  layer      |  // [239]
            +   ( v16 *  16 ) <-- Seek to tile    design      |  // [239]
            +   ( f16 *   1 ) <-- Seek to binary payload      |  // [239]
            ]);;                                              |  // [239]
    +---------------------------------------------------------+  // [239]
                                    
    #_UDESIGN_U25CLUS_# :-------------------------------------+  // [275][REF][240]
                                                              |  // [240]
        Means : ( udesign )===>( u25clus )                    |  // [275][REF][240]
                                                              |  // [240]
        udesign === [  /////////////////////////////////////  |  // [240]
                                                              |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
                                                              |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
                                                              |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  _,_,_,_,_  ,  _,_,_,_,_ , X,X,X,X,X  |  // [240]
                                     +----------+             |  // [240]
        ,   X,X,X,X,X ,  X,X,X,X,X  ,| X,X,X,X,X|, X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  X,X,X,X,X  ,| X,X,X,X,X|, X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  X,X,X,X,X  ,| X,X,X,X,X|, X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  X,X,X,X,X  ,| X,X,X,X,X|, X,X,X,X,X  |  // [240]
        ,   X,X,X,X,X ,  X,X,X,X,X  ,| X,X,X,X,X|, X,X,X,X,X  |  // [240]
                                     +----++----+             |  // [240]
        ];; //////////////////////////////||////////////////  |  // [240]
                                          ||                  |  // [240]
                                          ||                  |  // [240]
        u25clus === 0xFFFFFF80 ===========++                  |  // [275][REF][240]
                                                              |  // [240]
    +---------------------------------------------------------+  // [240]

    #_1ST_25_NBO_BITS_ONLY_# :--------------------------------+  // [241]
                                                              |  // [241]
             |<----------|25 |---------->| | 06 |             |  // [241]
             | 5 | | 5 | | 5 | | 5 | | 5 | | 06 |             |  // [241]
        BIN[ 11111 11111 11111 11111 11111 111111 ]           |  // [241]
                                                              |  // [241]
        A @u25clus@ only uses the first 25 [NBO] bits.        |  // [275][REF][241]
                                                              |  // [241]
        @NBO@ : Network_Bit_Order ( Or Network BYTE Order )   |  // [241]
        ::::::: ( Depending On If I am talking about bits )   |  // [241]
        ::::::: ( or bytes............................... )   |  // [241]
                                                              |  // [241]
    +---------------------------------------------------------+  // [241]
    #_NSC_AND_MSC_# :-----------------------------------------+  // [241]
                                                              |  // [241]
        @nsc_x@ : Numberof_Sub_Clusters - X axis              |  // [241]
        @nsc_y@ : Numberof_Sub_Clusters - Y axis              |  // [241]
        @msc_w@ : Magnitude(ofone)SubCluster - WIDTH  axis    |  // [241]
        @msc_h@ : Magnitude(ofone)SubCluster - HEIGHT axis    |  // [241]
                                                              |  // [241]
        @tdu_wid@ : Total_Discrete_Unit - WIDTH               |  // [241]
        @tdu_hig@ : Total_Discrete_Unit - HEIGHT              |  // [241]
                                                              |  // [241]
                tdu_wid =( nsc_x * msc_w );                   |  // [241]
                tdu_hig =( nsc_y * msc_h );                   |  // [241]
                                                              |  // [241]
                |<--------------------- @nsc_x@ ---------->|  |  // [241]
                |<@msc_w@>|                                |  |  // [241]
    ----=---=-- +---------++---------++---------++---------+  |  // [241]
        |   |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
        |   |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
    @msc_h@ |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
        |   |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
        |   |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
    ----=---|   +---------++---------++---------++---------+  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
        @nsc_y@ +---------++---------++---------++---------+  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
            |   +---------++---------++---------++---------+  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
            |   |1,1,1,1,1||1,1,1,1,1||1,1,1,1,1||1,1,1,1,1|  |  // [241]
        ----=-- +---------++---------++---------++---------+  |  // [241]
                ^                                          ^  |  // [241]
                ^                                          ^  |  // [241]
                +------------------------------------------+  |  // [241]
                |                                          |  |  // [241]
                |   Above : A "FOURSET" graphic as it      |  |  // [241]
                |         : appears in "ARTDUDE" assets.   |  |  // [241]
                |         : (AKA: @udesign@ )              |  |  // [241]
                |   A fourset is a 4x4 grid of subtiles    |  |  // [241]
                |   that are used to procedurally          |  |  // [241]
                |   generate all 16 subtiles of a wang     |  |  // [241]
                |   style auto tile set.                   |  |  // [241]
                |                                          |  |  // [241]
                |   The 5x5 grid of bits in each cell is   |  |  // [241]
                |   ONE IMPLEMENTATION OF A "FOURSET" but  |  |  // [241]
                |   __NOT__ part of the FOURSET definition.|  |  // [241]
                |                                          |  |  // [241]
                |   The 5x5 Grid is ARTDUDE implementation |  |  // [241]
                |   of a FOURSET.                          |  |  // [241]
                +------------------------------------------+  |  // [241]
                                                              |  // [241]
                |<--------- @nsc_x@ ---------->|              |  // [241]
                +------++------++------++------+  --=--       |  // [241]
                |      ||      ||      ||      |    |         |  // [241]
        f4y===0 |  00  ||  01  ||  02  ||  03  |    |         |  // [275][REF][241]
                |      ||      ||      ||      |    |         |  //           [241]
                +------++------++------++------+    |         |  //           [241]
                |      ||      ||      ||      |    |         |  //           [241]
        f4y===1 |  04  ||  05  ||  06  ||  07  |    |         |  // [275][REF][241]
                |      ||      ||      ||      |    |         |  //           [241]
                +------++------++------++------+@nsc_y@       |  //           [241]
                |      ||      ||      ||      |    |         |  //           [241]
        f4y===2 |  08  ||  09  ||  10  ||  11  |    |         |  // [275][REF][241]
                |      ||      ||      ||      |    |         |  //           [241]
                +------++------++------++------+    |         |  //           [241]
                |      ||      ||      ||      |    |         |  //           [241]
        f4y===3 |  12  ||  13  ||  14  ||  15  |    |         |  // [275][REF][241]
                |      ||      ||      ||      |    |         |  //           [241]
                +------++------++------++------+  --=--       |  //           [241]
                | f4x:0|| f4x:1|| f4x:2|| f4x:3|              |  // [275][REF][241]
                                                              |  // [241]
                #_DIA_F16_# ( Diagram : F16 Values )          |  // [241]
                                                              |  // [241]
               @f16@===[ 0 to (16-1) ]INCLUSIVE               |  // [241]
               @f4x@ ==[ 0 to ( 4-1) ]INCLUSIVE               |  // [275][REF][241]
               @f4y@ ==[ 0 to ( 4-1) ]INCLUSIVE               |  // [275][REF][241]
                                                              |  // [241]
    +---------------------------------------------------------+  // [241]
                                                                 // [241]
    @BIT_ORG@ : BIT Origin , the origin on X or Y axis of        // [241]
              : a 2D-array of bits.                              // [241]
                                                                 // [241]
    #B25_ARTDUDE_FOURSET_LOOP# :------------------------------+  // [241]
                                                              |  // [241]
                  @b25@ : Bit - I ( 0 to (25-1) )  #DIA_B25#  |  // [241]
    +-----------+ -------------------------------             |  // [241]
    | 0 1 2 3 4 | @bx5@ : Bit - X ( 0 to ( 4-1) )  #DIA_BX5#  |  // [241]
    | 5 6 7 8 9 | @by5@ : Bit - Y ( 0 to ( 4-1) )  #DIA_BY5#  |  // [241]
    | A B C D E |                                             |  // [241]
    | F G H I J | <===> BIN[ 01234 56789 ABCDE FGHIJ KLMNO ...]  // [241]
    | K L M N O |       (  SIX(6) Least significant bits on   )  // [241]
    +-----------+       (  RIGHT are NOT USED in @U25CLUS@    )  // [275][REF][241]
         |||          +------------------------------------+  |  // [241]
    +-----------+     |[G]-----+                           |  |  // [241]
 +---[G]1 1 1 1 |     | |      | G------+G------+G------+  |  |  // [241]
 |  | 1 1 1 1 1 | <===> |  00  | |      ||      ||      |  |  |  // [241]
 |  | 1 1 1 1 1 |     | |      | |  01  ||  02  ||  03  |  |  |  // [241]
 |  | 1 1 1 1 1 |     | +------+ |      ||      ||      |  |  |  // [241]
 |  | 1 1 1 1 1 |     |  +------++------++------++------+  |  |  // [241]
 |  +-----------+     |  G------+G------+G------+G------+  |  |  // [241]
 |  |<@U25CLUS@>|     |  |      ||      ||      ||      |  |  |  // [275][REF][241]
 |                    |  |  04  ||  05  ||  06  ||  07  |  |  |  // [241]
 |                    |  |      ||      ||      ||      |  |  |  // [241]
 |  +--------------+  |  +------++------++------++------+  |  |  // [241]
 |  |              |  |  G------+G------+G------+G------+  |  |  // [241]
 +---[G]==[ gbo_x  |  |  |      ||      ||      ||      |  |  |  // [241]
    |     , gbo_y ]|  |  |  08  ||  09  ||  10  ||  11  |  |  |  // [241]
    |              |  |  |      ||      ||      ||      |  |  |  // [241]
    | #GBO_X_Y#    |  |  +------++------++------++------+  |  |  // [241]
    +--------------+  |  G------+G------+G------+G------+  |  |  // [241]
                      |  |      ||      ||      ||      |  |  |  // [241]
                      |  |  12  ||  13  ||  14  ||  15  |  |  |  // [241]
                      |  |      ||      ||      ||      |  |  |  // [241]
                      |  +------++------++------++------+  |  |  // [241]
                      +------------------------------------+  |  // [241]
                      |<------------ @FOURSET@ ----------->|  |  // [241]
                      |<--( ArtDude Implementation Of ) -->|  |  // [241]
                                                              |  // [241]
    +---------------------------------------------------------+  // [241]
    #_FOURDEF_VS_FOURIMP_# :----------------------------------+  // [241]
                                                              |  // [241]
        @fourdef@ : Value is part of FOURSET definition.      |  // [241]
        @fourimp@ : Value is part of FOURSET implementation.  |  // [241]
                                                              |  // [241]
        There is only _ONE_ fourset DEFINITION (fourdef )     |  // [241]
        but there can be as many fourset IMPLEMENTATIONS      |  // [241]
        as we need.                                           |  // [241]
                                                              |  // [241]
        ARTDUDE's fourset implementation is a grid of         |  // [241]
        400 Elements. ( 1 Element === 1 BAW_BIT )             |  // [241]
                                                              |  // [241]
        FOURSET's fourset implementation is a grid of         |  // [241]
        16 U32 Elements. ( 1 Element === 25 BAW_BIT(S) )      |  // [241]
                                                              |  // [241]
        @BAW_BIT@ : BlackAndWhite_BIT                         |  // [241]
                  : A bit representing an on/off state        |  // [241]
                  : of a pure black and white                 |  // [241]
                  : [ bitmap / image ]                        |  // [241]
    +---------------------------------------------------------+  // [241]

    #_ARTDUDE_UNIT_TEST_TILES_# :-----------------------------+  // [242]
                                                              |  // [242]
        This tile is for unit tests. So do not change         |  // [242]
        the design in it, as it must match up to the          |  // [242]
        painstakenly created binary representation of         |  // [242]
        itself.                                               |  // [242]
                                                              |  // [242]
    +---------------------------------------------------------+  // [242]
    #_SIXTEEN_ANY_UDESIGN_# :---------------------------------+  // [242]
                                                              |  // [242]
        A "UDESIGN" is an uncompressed version of a "FOURSET".|  // [242]
        The 16 designs here are used to render tile values    |  // [242]
        [ 0 to (16-1) ]on our tilemap.                        |  // [242]
                                                              |  // [242]
        They are labeled "any" designs. Because I may         |  // [242]
        re-use them for all 3 layers (GEOM,BOMB,FADA)         |  // [242]
        rather than have to come up with 32 other             |  // [242]
        designs.                                              |  // [242]
                                                              |  // [242]
        ( Each layer is 16 tiles , thus 16 designs )          |  // [242]
                                                              |  // [242]
        @udesign@ : Uncompressed( fourset )DESIGN             |  // [242]
                                                              |  // [242]
    +---------------------------------------------------------+  // [242]
    #_UDESIGN_TO_BINCLUS_UTT_#:-------------------------------+  // [242]
                                                              |  // [242]
        Udesign to Binclus UnitTestTables ( 2 of them ) ::    |  // [242]
                                                              |  // [242]
        ::::::::::::::::::::::::::::::::::::::::::::::::::    |  // [242]
        ::@binclus@ : Binary Cluster , compressed       ::    |  // [242]
        ::          : version of[ udesign ]             ::    |  // [242]
        ::::::::::::::::::::::::::::::::::::::::::::::::::    |  // [242]
                                                              |  // [242]
        @utt_inn_la3_udesign@ :                               |  // [242]
            utt_inn     : UnitTestTable _ INN put             |  // [242]
            la3_udesign : ( la3 ) ==> ( udesign )             |  // [242]
                                                              |  // [242]
        @utt_out_la3_binclus@ :                               |  // [242]
            utt_out     : UnitTestTable _ OUT put             |  // [242]
            la3_binclus : ( la3 ) ==> ( udesign )             |  // [242]
                                                              |  // [242]
    :---------------------------------------------------------+  // [242]
    : #_BINCLUS_ANSWERS_# :-----------------------------------+  // [242]
                                                              |  // [242]
        KEY :-------------------------------+                 |  // [242]
         |  C : Checking By Counting Bits   |                 |  // [242]
         |  B : Binary Value Of 5x5 Bitmap  |                 |  // [242]
         |  H : Hex Value Of Binary Value   |                 |  // [242]
         +----------------------------------+                 |  // [242]
        ------------------------------------------------------|  // [242]
        _,_,_,_,_     00000 C:[ 0xRRGGBBAA ]                  |  // [242]
        _,_,_,_,_     00000 H:[ 0x00000000 ]                  |  // [242]
        _,_,_,_,_ ==> 00000                                   |  // [242]
        _,_,_,_,_     00000 C:12345678901234567890123456789012|  // [242]
        _,_,_,_,_     00000 B:00000000000000000000000000000000|  // [242]
        ------------------------------------------------------|  // [242]
        1,1,1,1,1     11111 C:[ 0xRRGGBBAA ]                  |  // [242]
        1,1,1,1,1     11111 H:[ 0xFFFFFF80 ]                  |  // [242]
        1,1,1,1,1 ==> 11111                                   |  // [242]
        1,1,1,1,1     11111 C:12345678901234567890123456789012|  // [242]
        1,1,1,1,1     11111 B:11111111111111111111111110000000|  // [242]
        ------------------------------------------------------|  // [242]
        1,_,_,_,1     10001 C:[ 0xRRGGBBAA ]                  |  // [242]
        _,1,_,1,_     01010 H:[ 0x8A88A880 ]                  |  // [242]
        _,_,1,_,_ ==> 00100                                   |  // [242]
        _,1,_,1,_     01010 C:12345678901234567890123456789012|  // [242]
        1,_,_,_,1     10001 B:10001010100010001010100010000000|  // [242]
        ------------------------------------------------------|  // [242]
        1,1,1,1,1     11111 C:[ 0xRRGGBBAA ]                  |  // [242]
        1,_,_,_,1     10001 H:[ 0xFC631F80 ]                  |  // [242]
        1,_,_,_,1 ==> 10001                                   |  // [242]
        1,_,_,_,1     10001 C:12345678901234567890123456789012|  // [242]
        1,1,1,1,1     11111 B:11111100011000110001111110000000|  // [242]
        ------------------------------------------------------|  // [242]
        1,_,_,_,_     10000 C:[ 0xRRGGBBAA ]                  |  // [242]
        _,1,_,_,_     01000 H:[ 0x82082080 ]                  |  // [242]
        _,_,1,_,_ ==> 00100                                   |  // [242]
        _,_,_,1,_     00010 C:12345678901234567890123456789012|  // [242]
        _,_,_,_,1     00001 B:10000010000010000010000010000000|  // [242]
        ------------------------------------------------------|  // [242]
        _,_,_,_,1     00001 C:[ 0xRRGGBBAA ]                  |  // [242]
        _,_,_,1,_     00010 H:[ 0x08888800 ] #_CORRUPT_SLOPE_#|  // [248][BUG][247][242]
        _,_,1,_,_ ==> 00100                                   |  // [242]
        _,1,_,_,_     01000 C:12345678901234567890123456789012|  // [242]
        1,_,_,_,_     10000 B:00001000100010001000100000000000|  // [242]
        ------------------------------------------------------|  // [242]
        _,_,1,_,_     00100 C:[ 0xRRGGBBAA ]                  |  // [242]
        _,_,1,_,_     00100 H:[ 0x213E4200 ]                  |  // [242]
        1,1,1,1,1 ==> 11111                                   |  // [242]
        _,_,1,_,_     00100 C:12345678901234567890123456789012|  // [242]
        _,_,1,_,_     00100 B:00100001001111100100001000000000|  // [242]
        ------------------------------------------------------|  // [242]
        _,_,_,_,_     00000 C:[ 0xRRGGBBAA ]                  |  // [242]
        _,1,1,1,_     01110 H:[ 0x039CE000 ]                  |  // [248][BUG][242]
        _,1,1,1,_ ==> 01110                                   |  // [242]
        _,1,1,1,_     01110 C:12345678901234567890123456789012|  // [242]
        _,_,_,_,_     00000 B:00000011100111001110000000000000|  // [242]
        ------------------------------------------------------|  // [242]
        1,1,1,1,1     11111 C:[ 0xRRGGBBAA ]                  |  // [242]
        1,_,_,_,_     10000 H:[ 0xFC2F4A80 ]                  |  // [242]
        1,_,1,1,1 ==> 10111                                   |  // [242]
        1,_,1,_,_     10100 C:12345678901234567890123456789012|  // [242]
        1,_,1,_,1     10101 B:11111100001011110100101010000000|  // [242]
        ------------------------------------------------------|  // [242]
        1,1,1,1,1     11111 C:[ 0xRRGGBBAA ]                  |  // [242]
        _,_,_,_,1     00001 H:[ 0xF87A5A80 ]                  |  // [242]
        1,1,1,_,1 ==> 11101                                   |  // [242]
        _,_,1,_,1     00101 C:12345678901234567890123456789012|  // [242]
        1,_,1,_,1     10101 B:11111000011110100101101010000000|  // [242]
        ------------------------------------------------------|  // [242]
        1,_,1,_,1     10101 C:[ 0xRRGGBBAA ]                  |  // [242]
        1,_,1,_,_     10100 H:[ 0xAD2F0F80 ]                  |  // [242]
        1,_,1,1,1 ==> 10111                                   |  // [242]
        1,_,_,_,_     10000 C:12345678901234567890123456789012|  // [242]
        1,1,1,1,1     11111 B:10101101001011110000111110000000|  // [242]
        ------------------------------------------------------|  // [242]
        1,_,1,_,1     10101 C:[ 0xRRGGBBAA ]                  |  // [242]
        _,_,1,_,1     00101 H:[ 0xA97A1F80 ]                  |  // [242]
        1,1,1,_,1 ==> 11101                                   |  // [242]
        _,_,_,_,1     00001 C:12345678901234567890123456789012|  // [242]
        1,1,1,1,1     11111 B:10101001011110100001111110000000|  // [242]
        ------------------------------------------------------|  // [242]
    :-----------------------------------: #_BINCLUS_ANSWERS_# :  // [242]
                                                                 // [242]
    #_TEST_DATA_EMBEDDED_IN_PROD_# :--------------------------+  // [242]
                                                              |  // [242]
        Test Data Embedded Into Production Data.              |  // [242]
                                                              |  // [242]
        Doing this because by having test data and            |  // [242]
        production data one the SAME EXACT EXECUTION          |  // [242]
        PATH, it gives me confidence that if the              |  // [242]
        unit tests pass for our tests data , then             |  // [242]
        the production data is definitely correct.            |  // [242]
                                                              |  // [242]
        If test and production data were __NOT__ on           |  // [242]
        same execution path, we could make the mistake        |  // [242]
        of running conversion function on our TEST DATA       |  // [242]
        but never running conversion function on our          |  // [242]
        PRODUCTION DATA.                                      |  // [242]
                                                              |  // [242]
        The tests would pass, but our production              |  // [242]
        data would not actually be initialized.               |  // [242]
        ( And thus, invalid production data even )            |  // [242]
        ( though the tests are passing.          )            |  // [242]
    +---------------------------------------------------------+  // [242]
                                                                 // [242]
    @binclust@ : Mis-Spelling of[ binclus ](7 LETTERS PEOPLE!)   // [242]
                                                                 // [242]
    #_BINCLUS_VS_UDESIGN_# :----------------------------------+  // [242]
    #_UDESIGN_VS_BINCLUS_# :----------------------------------+  // [242]
                                                              |  // [242]
        @udesign@ : UNN_compressed IMPLEMENTATION of FOURSET  |  // [242]
        @binclus@ : U32_Compressed IMPLEMENTATION of FOURSET  |  // [242]
        @u25clus@ : ALL[ binclus ]IN ONE GIGANTIC ARRAY       |  // [275][REF][243]
                                                              |  // [242]
        A[FOURSET]being a Kanji's version of a wang-tile      |  // [242]
        style auto-tile set. Standard 16-tile "rule tile"     |  // [242]
        sets.                                                 |  // [242]
        REFERENCE:                                            |  // [242]
        R_T_URL[ www.youtube.com/watch?v=dd4KrKCa3Yg&t=3s ]   |  // [242]
                                                              |  // [242]
    +---------------------------------------------------------+  // [242]
    +---------------------------------------------------------+  // [---]
    #_I_SWEAR_TO_GOD_YOU_ARE_JUST_MAKING_THIS_SHIT_UP_#:------+  // [243]
                                                              |  // [243]
        I am...                                               |  // [243]
                                                              |  // [243]
        @binclus@ : ONE U32 Encoded[ udesign ]                |  // [243]
        @u25clus@ : ALL[ binclus ]In Giant 1D Array           |  // [275][REF][243]
                                                              |  // [243]
        They were originally meaning the same thing...        |  // [243]
        But let's use these definitions.                      |  // [243]
                                                              |  // [243]
        Let's do the whole "Koran" thing. Muhammad            |  // [243]
        liked to contract himself a lot, so the               |  // [243]
        true word of KanjiCoder is the last thing             |  // [243]
        KanjiCoder said.                                      |  // [243]
                                                              |  // [243]
        Okay, now let me go check with a streamer             |  // [243]
        friend of mine who is Muslim and visiting             |  // [243]
        Pakistan to make sure I am not making                 |  // [243]
        this up...                                            |  // [243]
                                                              |  // [243]
        :-----------------------------------------------------+  // [245]
        : UPDATE:2022_09_05: 11:13 AM                         |  // [245]
        : SAID_SAYS:                                          |  // [245]
        :-----------------------------------------------------+  // [245]
        but generally earlier statements are also true        |  // [245]
        but what happened for example alcohol in start was    |  // [245]
        allowed cause it would have been hard for people to   |  // [245]
        leave it at the time, so slowly the stance against it |  // [245]
        got more severe . like in start the rule was that     |  // [245]
        don't come to prayer while drunk, but you can drink   |  // [245]
        outside . then there is a verse came that says        |  // [245]
        something like "there is benefit in gambling and      |  // [245]
        drinking, but the harms outweigh the benefits"        |  // [245]
        and the later verse in Mohammed pbuh life that came   |  // [245]
        was "gambling and drinking are abominations of the    |  // [245]
        devil" . it was banned completely then at that time,  |  // [245]
        it was always wrong, but because the people would     |  // [245]
        not have handled it in start so different verses came |  // [245]
        but all of them are still valid in their situation    |  // [245]
        :-----------------------------------------------------+  // [245]
                                                                 // [245]
    :---------------------------------------------------------+  // [243]
    #_INTERLACED_INIT_AND_TEST_# :----------------------------+  // [243]
                                                              |  // [243]
        Not every system will have a unit test ,              |  // [243]
        but when it does, that unit test should be            |  // [243]
        called DIRECTLY AFTER the INITIALIZER.                |  // [243]
                                                              |  // [243]
        Thus, *_INI and *_UTM are "interlaced".               |  // [243]
                                                              |  // [243]
        @UTM@ : Unit_Test_Main , carry-over from C99          |  // [243]
              : [A3] code base. [ R:/AAC/A3 ]                 |  // [243]
    +---------------------------------------------------------+  // [243]
                                                                 // [243]
    @GTC@ : Typeo Of[ GCT ].                                     // [243]
                                                                 // [243]
    @GARBAGE_COLLECTOR_THREAT@ / @GCT@ :----------------------+  // [243]
    #GARBAGE_COLLECTOR_THREAT# / #GCT@ :----------------------+  // [243]
                                                                 // [243]
        Garbage Collector Threat .                               // [243]
                                                                 // [243]
        Something that could cause game to stall because         // [243]
        we are allocating large block of memory that             // [243]
        is eventually up for grabs by garbage collector.         // [243]
                                                                 // [243]
    +---------------------------------------------------------+  // [243]
    +---------------------------------------------------------+  // [243]
                                                                 // [243]
    #GCT_001# :-----------------------------------------------+  // [243]
                                                              |  // [243]
        Because we can TURN UNIT TESTING OFF , this           |  // [243]
        [ got_binclus ]is __LOW__ threat to garbage           |  // [243]
        collector problems, because will have tests           |  // [243]
        disabled in release mode.                             |  // [243]
    :---------------------------------------------------------+  // [243]
                                                                 // [243]
    #_Equal_Until_Proven_Guilty_# :---------------------------+  // [243]
                                                              |  // [243]
        Test for equality starts with flag set to             |  // [243]
        TRUE ( >= 1) for positive equality. Then we           |  // [243]
        try to DISPROVE this in a loop.                       |  // [243]
    +---------------------------------------------------------+  // [243]
                                                                 // [243]
    #_ONE_TEST_BINCLUS_PER_LAYER_# :--------------------------+  // [243]
                                                              |  // [243]
        One test binary cluster per layer.                    |  // [243]
        These are the bit-packed images that encode           |  // [243]
        "foursets" our renderer will use.                     |  // [243]
                                                              |  // [243]
        A fourset being my custom auto tile format.           |  // [243]
                                                              |  // [243]
        -KanjiCoder , 2022_09_05 - 6:24 AM                    |  // [243]
    +---------------------------------------------------------+  // [243]
    #_LSB_007_NIL_# :-----------------------------------------+  // [243]
                                                              |  // [243]
        Least significant 7 bits of[ u25clus ]are NOT         |  // [275][REF][243]
        USED , and thus, if the[ u25clus ]is non-zero         |  // [275][REF][243]
        we expect the value to be greater than 0x7F.          |  // [243]
                                                              |  // [243]
        DEC[ 0x7F ]===BIN[ 111 1111 ]                         |  // [243]
    +---------------------------------------------------------+  // [243]

    #_FUCKING_HELL_DONT_DO_THAT_# :---------------------------+  // [244]
                                                              |  // [244]
        var utt =( 0 ); < < < < KEEP IT FUCKING ZERO FOREVER!!!  // [244]
                                                              |  // [244]
        Packing extra test data into our giant                |  // [244]
        [ 1D / Linear ]array of tile values is going          |  // [244]
        to corrupt our stride calculations and cause          |  // [244]
        malformed data...                                     |  // [244]
                                                              |  // [244]
        It was a cool idea... But it's going to lead to       |  // [244]
        too many fucking headaches to insert the              |  // [244]
        test data into here...                                |  // [244]
                                                              |  // [244]
        Okay... We have a "unit test" flag for                |  // [244]
        ARTDUDE. If that flag is on , we run ARTDUDE          |  // [244]
        unit tests and throw the test data into the           |  // [244]
        ZERO TILES of our cluster data.                       |  // [244]
                                                              |  // [244]
        Rendering will be corrupted when tests are on         |  // [244]
        for ARTDUDE, but at least we can run the              |  // [244]
        tests.                                                |  // [244]
    +---------------------------------------------------------+  // [244]
                                                                 // [244]
    #_ABOUT_ARTDUDE_ZTO_# :-----------------------------------+  // [244]
                                                              |  // [244]
                                                              |  // [---]
        CORRECTION :::::::::::::: 2022_09_06 ::::::::::::::::::  // [246]
                                                              |  // [246]
            +--------------------------------------------+    |  // [246]
            | We insert different source[ fourset ]      |    |  // [246]
            | data into here at START OF[ artdude_ini  ] |    |  // [246]
            | before it begins processing grahics.       |    |  // [246]
            +--------------------------------------------+    |  // [246]
                             ||                               |  // [246]
                             VV                               |  // [246]
        +--------------------------------------------------+  |  // [246]
        |+----- d_artdude_fourset_src_til_arr[ _geo_ ][0]  |  |  // [246]
        || +--- d_artdude_fourset_src_til_arr[ _bom_ ][0]  |  |  // [246]
        || |+-- d_artdude_fourset_src_til_arr[ _fad_ ][0]  |  |  // [246]
        || ||               ====                       ^   |  |  // [246]
        || |+-- d_artdude_fourset_src_geo_utt --> > >  ^   |  |  // [246]
        || +--- d_artdude_fourset_src_bom_utt --> > >  ^   |  |  // [246]
        |+----- d_artdude_fourset_src_fad_utt --> > >  ^   |  |  // [246]
        +--------------------------------------------------+  |  // [246]
                             ||                               |  // [246]
                             VV                               |  // [246]
            +----------------------------------------------+  |  // [246]
            | ArtDude_INI begins processing this array     |  |  // [246]
            | and putting the results into :               |  |  // [246]
            | [ d_fourset_la3_v16_f16_u25clus ]            |  |  // [275][REF][246]
            +----------------------------------------------+  |  // [246]
                             ||                               |  // [246]
                             VV                               |  // [246]
                d_fourset_la3_v16_f16_u25clus                 |  // [275][REF][246]
                                                              |  // [246]
                                                              |  // [246]
        BELOW IS WRONG-ISH :::::: 2022_09_06 ::::::::::::::::::  // [246]
                                                              |  // [---]
        //:[ATF]:----------------------------------------://  |  // [244]
        //:                                              ://  |  // [244]
        //:  If unit testing for ARTDUDE is on           ://  |  // [244]
        //:  ( c_artdude_utm )then we will override      ://  |  // [244]
        //:  the ZERO TILES in                           ://  |  // [244]
        //:  [ d_fourset_la3_v16_f16_u25clus ]           ://  |  // [275][REF][244]
        //:  with our debug patterns.                    ://  |  // [244]
        //:                                              ://  |  // [244]
        //:  This means that the renderer __WILL__       ://  |  // [244]
        //:  appear corrupted when unit testing for      ://  |  // [244]
        //:  ARTDUDE is on.                              ://  |  // [244]
        //:                                              ://  |  // [244]
        //:  On second thought, this should be a         ://  |  // [244]
        //:  SPECIFIC UNIT TESTING option.               ://  |  // [244]
        //:                                              ://  |  // [244]
        //:----------------------------------------:[ATF]://  |  // [244]
                                                              |  // [244]
    :---------------------------------------------------------+  // [244]
                                                                 // [244]
    #__ARTDUDE_UTM_U25CLUS__# :-------------------------------+  // [275][REF][244]
                                                              |  // [244]
        If this unit testing option is on, test patterns      |  // [244]
        are loaded into the ZERO TILES for our[ u25clus ]     |  // [275][REF][244]
        data.                                                 |  // [244]
                                                              |  // [244]
        Any renderers using[ u25clus / binclus ]              |  // [275][REF][244]
        implementation to render[ fourset ](s) will           |  // [244]
        get weird stuff happening in tiles that               |  // [244]
        should be empty.                                      |  // [244]
                                                              |  // [244]
        REVIEW :---------------------------------------------+|  // [244]
                                                             ||  // [244]
            KANJI_CODER_REFACTOR_NOTE :================++    ||  // [275]
            ||                                         ||    ||  // [275]
            ||  The termonology is still a bit fucking ||    ||  // [275]
            ||  shakey for "binclus" vs "u25clus"...   ||    ||  // [275]
            ||  Fucking Hell Man. But refactor makes   ||    ||  // [275]
            ||  things a bit better.                   ||    ||  // [275]
            ++=========================================++    ||  // [275]
                                                             ||  // [244]
            @binclus@ : ONE U32 Encoded[ udesign ]           ||  // [244]
            @u25clus@ : ALL[ binclus ]In Giant 1D Array      ||  // [275][REF][244]
                      : That Stores All Tile Designs For     ||  // [244]
                      : All Layers And Tile Values.          ||  // [244]
                                                             ||  // [244]
            A[ binclus ]is an IMPLEMENTATION of a[ FOURSET ].||  // [244]
            A[ u25clus ]is an IMPLEMENTATION of a[ FOURSET ].||  // [275][REF][244]
        +----------------------------------------------------+|  // [244]
    :---------------------------------------------------------+  // [244]
                                                                 // [244]
    @E_R@ : Early_Return , which I try to avoid, unless is       // [244]
          : would be much of a hassle to avoid.                  // [244]
                                                                 // [244]
    #_TURN_ENTIRE_SYSTEM_TESTS_OFF_# :------------------------+  // [244]
    #_TURN_ENTIRE_SYSTEM_TESTS_ONN_# :------------------------+  // [244]
                                                              |  // [244]
        If set to zero(0) ALL TESTS for that system :         |  // [244]
                                                              |  // [244]
            __ARE__ DEFINITELY __OFF__ .                      |  // [244]
                                                              |  // [244]
        If set to one(1)  ALL TESTS for that system :         |  // [244]
                                                              |  // [244]
            __MIGHT__ be __ONN__ .                            |  // [244]
                                                              |  // [244]
    :---------------------------------------------------------+  // [244]
    :---------------------------------------------------------+  // [244]
    #_TURN_SPECIFIC_SUB_TESTS_ONN_# :-------------------------+  // [244]
    #_TURN_SPECIFIC_SUB_TESTS_OFF_# :-------------------------+  // [244]
                                                              |  // [244]
        Turn off a specific sub-system test __WITHOUT__       |  // [244]
        turning off ALL TESTS for that sub-system.            |  // [244]
                                                              |  // [244]
        ( unless, for example, that specific test is  )       |  // [244]
        ( the ONLY TEST for that specific sub-system. )       |  // [244]
                                                              |  // [244]
        0 === OFF                                             |  // [244]
        1 === ONN                                             |  // [244]
                                                              |  // [244]
    +---------------------------------------------------------+  // [244]
                                                                 // [244]
    #o_one_binclus# :-----------------------------------------+  // [244]
    #i_one_binclus# :-----------------------------------------+  // [244]
                                                              |  // [244]
         #_DON_T_MIX_HUNGARIAN_NOTATION_IN_MY_TOWN_#          |  // [244]
        WE DON_T MIX OUR HUNGARIAN NOTATION IN THIS TOWN!     |  // [244]
                                                              |  // [244]
        If two prefixes could apply to something , pick       |  // [244]
        the prefix you thing is MOST IMPORTANT for the        |  // [244]
        reader to know about.                                 |  // [244]
                                                              |  // [244]
        In the case of :                                      |  // [244]
        [ F_ARTDUDE_LA3_V16_ALL_U25CLUS_ONE_BINCLUS ]         |  // [275][REF][244]
                                                              |  // [244]
        It is most important for reader to know that          |  // [244]
        [ one_binclus ]is an OUTPUT PARAMETER. It is          |  // [244]
        obvious it is an input from the fact that             |  // [244]
        it appears in the parameter list.                     |  // [244]
                                                              |  // [244]
        Output params on the other hand :---------------+     |  // [244]
                                                        |     |  // [244]
            1. Are __NOT__ obvious.                     |     |  // [244]
            2. Are very uncommon in my JavaScript code. |     |  // [244]
              (i_one_binclus is probably the first one) |     |  // [244]
                                                        |     |  // [244]
        +-----------------------------------------------+     |  // [244]
                                                              |  // [244]
    :---------------------------------------------------------+  // [244]
                                                                 // [244]
    #_KEEP_ZERO_OR_ELSE_# :-----------------------------------+  // [244]
                                                              |  // [244]
        Keep it zero... Or else... Seriously.                 |  // [244]
        Extra test data should not have been injected         |  // [244]
        into a 1-D array that has a very complex              |  // [244]
        multi-stride pattern.                                 |  // [244]
                                                              |  // [244]
        #_ETD_NOW_VIA_OVERRIDE_# :----------------------+     |  // [244]
                                                        |     |  // [244]
            ExtraTestData(ETD) Now Via OVERRIDE.        |     |  // [244]
                                                        |     |  // [244]
            We inject the test data into tile value     |     |  // [244]
            zero for respective 3 layers.               |     |  // [244]
            (0:GEOM_TILES,1:BOMB_TILES,2:FADA_TILES)    |     |  // [244]
        :-----------------------------------------------+     |  // [244]
                                                              |  // [244]
    :---------------------------------------------------------+  // [244]
    
    @U25CLUS_ELEMENT_SEEK@ :---------------------------------::  // [275][REF][245]
                           : Seeking to the address of a     ::  // [245]
                           : single[ u25clus ]in our giant   ::  // [275][REF][245]
                           : [ arr_u25clus ]dataset.         ::  // [275][REF][245]
                           :                                 ::  // [245]
                           : The[ four ]in[ binfour ]is      ::  // [245]
                           : because it is a[ binary ]       ::  // [245]
                           : version of[ fourset ]data.      ::  // [245]
    #BINFOUR_ELEMENT_SEEK# :----------------------------------+  // [245]
                                                              |  // [245]
        u25clus = arr_u25clus[ (la3*256)                      |  // [275][REF][245]
                              +(v16 *16)                      |  // [245]
                              +(f16  *1) ];;                  |  // [245]
                                                              |  // [245]
        @u32_suc@ : U32 SUb-Cluster  BUT_USE[ u25clus ]       |  // [245]
        @u32_sub@ : Did You Mean[ u25clus ]                   |  // [245]
                                                              |  // [245]
        Making note of this math and adding tags for it       |  // [245]
        because this math is re-curring in multiple places    |  // [245]
        so if it is wrong in one place, it is wrong in        |  // [245]
        all places.                                           |  // [245]
                                                              |  // [245]
        BUT... If correct in one place, correct in all        |  // [245]
        places and serves as:                                 |  // [245]
                                                              |  // [245]
            1. Redunancy , sanity of mind it is correct.      |  // [245]
            2. Reference , you see it done in multiple places.|  // [245]
            3. NON-Abstract, formula inlined.                 |  // [245]
            4. No func with single point of failure           |  // [245]
                                                              |  // [245]
        Okay... Now I am just[ rationalizing/justifying ]     |  // [245]
        my crazy actions.                                     |  // [245]
                                                              |  // [245]
                                                              |  // [245]
    :---------------------------------------------------------+  // [245]
                                                                 // [245]
    @u25clus@ :-----------------------------------------------+  // [245]
                                                              |  // [245]
        A single U32 that bitpacks a                          |  // [245]
        5X5 grid of bits used to render                       |  // [245]
        a[ fourset ]design.                                   |  // [245]
                                                              |  // [245]
        "u25" here means "uint25" , no such thing, but        |  // [245]
        we are only useing the MOST SIGNIFICANT 25 bits.      |  // [245]
                                                              |  // [245]
        "clus" here means "cluster" as in                     |  // [245]
        "cluster of bits". Or "Sub Cluster Of Bits".          |  // [245]
                                                              |  // [245]
    :---------------------------------------------------------+  // [245]
    #u25clus# :-----------------------------------------------+  // [245]
                                                              |  // [245]
        [ @arr_u25clus@ ] is a 1D array of U32 values         |  // [275][REF][245]
        holding enough data for ( 3 * 16 ) COMPRESSED         |  // [245]
        fourset designs known as[ @binclus@ ].                |  // [245]
                                                              |  // [245]
        Each U32 encodes a 5x5 grid.                          |  // [245]
                           +-----------+                      |  // [245]
                           |  u25clus  |                      |  // [245]
                           +-----------+                      |  // [245]
                                |||                           |  // [245]
             ++-----------------+++-----------------+++       |  // [245]
             VV                 VVV                 VVV       |  // [245]
             VV            +-----------+       +-----------+  |  // [245]
        +----------+       | 1 0 0 0 1 |       | 1 _ _ _ 1 |  |  // [245]
        |          |       | 0 1 0 1 0 |       | _ 1 _ 1 _ |  |  // [245]
    +---- 8A88A880 | <===> | 0 0 1 0 0 | <===> | _ _ 1 _ _ |  |  // [245]
    |   |          |       | 0 1 0 1 0 |       | _ 1 _ 1 _ |  |  // [245]
    |   +----------+       | 1 0 0 0 1 |       | 1 _ _ _ 1 |  |  // [245]
    |                      +-----------+       +-----------+  |  // [245]
    |   arr_u25clus =[                                        |  // [275][REF][245]
    |   +----------+----------+----------+----------+   -=-   |  // [245]
    |   |          |          |          |          |    ^    |  // [245]
    +---> 8A88A880 , FFFFFF80 , FFFFFF80 , FFFFFF80 ,    |    |  // [245]
        |    f16:0 |    f16:1 |    f16:2 |    f16:3 |    |    |  // [245]
        +----------+----------+----------+----------+    |    |  // [245]
        |          |          |          |          |    |    |  // [245]
        , FFFFFF80 , FFFFFF80 , FFFFFF80 , FFFFFF80 , la3:0   |  // [245]
        |    f16:4 |    f16:5 |    f16:6 |    f16:7 | v16:0   |  // [245]
        +----------+----------+----------+----------+ f16:[0-15] // [245]
        |          |          |          |          |    |    |  // [245]
        , FFFFFF80 , FFFFFF80 , FFFFFF80 , FFFFFF80 ,    |    |  // [245]
        |    f16:8 |    f16:9 |    f16:10|    f16:11|    |    |  // [245]
        +----------+----------+----------+----------+    |    |  // [245]
        |          |          |          |          |    |    |  // [245]
        , FFFFFF80 , FFFFFF80 , FFFFFF80 , FFFFFF80 ,    |    |  // [245]
        |    f16:12|    f16:13|    f16:14|    f16:15|    V    |  // [245]
        +----------+----------+----------+----------+   -=-   |  // [245]
                                                              |  // [245]
            +----------+     +----------+    +----------+     |  // [245]
            |          |     |          |    |          |     |  // [245]
        ... , FFFFFF80 |  ,  | FFFFFF80 |  , | FFFFFF80 |     |  // [245]
            |    f16:12|     |    f16:13|    |    f16:14|     |  // [245]
            +----------+     +----------+    +----------+     |  // [245]
            ................................................  |  // [245]
            ...((3 layers )*(16 tile types)*(16 u25clus))...  |  // [245]
            ................................................  |  // [245]
                                                              |  // [245]
        ];;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  |  // [245]
                                                              |  // [245]
    +---------------------------------------------------------+  // [245]
                                                                 // [245]
    #_IT_CAN_ONLY_BE_THIS_2022_# :----------------------------+  // [245]
                                                              |  // [245]
        The only input parameter value for                    |  // [245]
        [ i_u25clus ]to this function should be               |  // [275][REF][245]
        [ d_fourset_la3_v16_f16_u25clus ].                    |  // [275][REF][245]
                                                              |  // [245]
        So we are going to make sure of it as an extra        |  // [245]
        error check. If this constaint changes in the         |  // [245]
        future we can remove this error check.                |  // [245]
                                                              |  // [245]
                             YYYY_MM_DD                       |  // [245]
        -KanjiCoder 1:02PM , 2022.09.05                       |  // [245]
                             2022_09_05                       |  // [245]
    :---------------------------------------------------------+  // [245]

    @FUNC_PTR@ :::: Denoting a FUNCTION POINTER                  // [247]
    @TILE_INTERN@ : Tile Internal Coordinate.                    // [247]
    @T_I_C@ ::::::: SYNONYM[ TILE_INTERN ]                       // [247]
    @XYTI@ :::::::: XY Coordinate Converted To Index             // [247]
    @ITXY@ :::::::: Index Converted To XY Coordinate             // [247]
                                                                 // [247]
    @U25CLUS_BITSHIFT@ :--------------------------------------+  // [247]
    #U25CLUS_BITSHIFT# :--------------------------------------+  // [247]
                                                              |  // [247]
        Marking a section of code that is either              |  // [247]
        [ BIT PACKING ]or[ BIT UN-PACKING ]bits               |  // [247]
        from a[ u25clus ]value.                               |  // [247]
                                                              |  // [247]
        ( u25clus === 5x5 bitmap store in a u32 )             |  // [247]
        ( Called "u25-clus" because we only use )             |  // [247]
        ( 25-bits in the cluster of data.       )             |  // [247]
    +---------------------------------------------------------+  // [247]
    +---------------------------------------------------------+  // [247]
                                                                 // [247]
    @CONCEPTUALLY@ :: We aren't literally doing this in the      // [247]
                   :: code, but conceptually according to        // [247]
                   :: our @MENTAL_MODELS@ , we are doing this.   // [247]
                                                                 // [247]
    @MENTAL_MODELS@ : Models of data that exist in the           // [247]
                   :: programmer's head, rather than             // [247]
                   :: actually within the code.                  // [247]
                                                                 // [247]
    @CONCEPUTALLY@ :: Typo_Of[ CONCEPTUALLY ].                   // [247]
                                                                 // [247]
    #_BUILD_BINARY_PRINTOUT_# :-------------------------------+  // [247]
                                                              |  // [247]
        Building a string representation                      |  // [247]
        of a set of binary data.                              |  // [247]
    +---------------------------------------------------------+  // [247]
                                                                 // [247]
    //:#_31ST_BIT_CORRUPTION_#:-------------------------------+  // [247]
                                                              |  // [247]
        #_CORRUPT_SLOPE_# :--------------------------------+  |  // [247]
                                                           |  |  // [247]
            This probably has something to do with why my  |  |  // [247]
            positive slope design is getting corrupted.    |  |  // [247]
                                                           |  |  // [247]
            The positive slope design in the bomb tile     |  |  // [247]
            test[ udesign / fourset ]is the ONLY binary    |  |  // [247]
            pattern where the 31st bit is ZERO.            |  |  // [247]
                                                           |  |  // [247]
            (which would make it a negative number)        |  |  // [247]
                                                           |  |  // [247]
            -KanjiCoder , 2022_09_06                       |  |  // [247]
        +--------------------------------------------------+  |  // [247]
                                                              |  // [247]
        Here are a few points to note about the 32-bit        |  // [247]
        signed integers used by JavaScript bitwise operators: |  // [247]
        The most significant (leftmost) bit is called the sign|  // [247]
        bit. The sign bit is always 0 for positive integers,  |  // [247]
        and 1 for negative integers. The remaining 31 bits    |  // [247]
        besides the sign bit are used to represent the        |  // [247]
        integer.                                              |  // [247]
                                                              |  // [247]
        https://blog.logrocket.com/interesting-use            |  // [247]
            -cases-for-javascript-bitwise-operators           |  // [247]
    +---------------------------------------------------------+  // [247]

                                                                 // [248][BLANK_LINE]

    @VIDEO_IDEA@ : Time lapse of my personal shortcuts and       // [249]
    @VIDIDEA@ :::: make the video title : "My own personal"      // [249]
    @VID@ :::::::: "search engine better than google."           // [249]
                                                                 // [249]
    @BLANK_LINE@ / [BLANK_LINE] / #BLANK_LINE# :--------------+  // [249]
                                                              |  // [249]
        When I need [###] spacers to keep myself from         |  // [249]
        accidentially numbering a line with the               |  // [249]
        wrong delta number. As seen a few lines above         |  // [249]
        this line in the gap between [247] and [249].         |  // [249]
                                                              |  // [249]
    +---------------------------------------------------------+  // [249]
                                                                 // [249]
    @ssf_raw@ : ShaderSourceFrag - RAW ( un-processed )          // [249]
    @ssf_pps@ : ShaderSourceFrag - Pre_Processed_String          // [249]
                                                                 // [249]
    @ShaderSourceFrag@ : Shader Source Fragment                  // [249]
    ::::::::::::::::::::(Fragment Shader Source Code String)     // [249]

    #_Pretty_Formatting_# :-----------------------------------+  // [250]
                                                              |  // [250]
        This part of the string building process is for       |  // [250]
        cosmetic purposes only and should not change the      |  // [250]
        functionality of the GLSL string being created.       |  // [250]
                                                              |  // [250]
        Just exists for human readability.                    |  // [250]
                                                              |  // [250]
    +---------------------------------------------------------+  // [250]
                                                                 // [250]
    @STRCOPY@ : Unique Copy Of String.                           // [250]
                                                                 // [250]
    @p_p_str@ : Pre_Processed____STRing                          // [250]
                                                                
    @f_out@ : Float Output. Could Be[ F32,FV2,FV3,FV4 ]          // [251]
    #f_out# :-------------------------------------------------+  // [251]
                                                              |  // [251]
        @F32@ : Float32 Macro In Shader                       |  // [251]
        @FV2@ : Float Vec 2 Macro In Shader                   |  // [251]
        @FV3@ : Float Vec 3 Macro In Shader                   |  // [251]
        @FV4@ : Float Vec 4 Macro In Shader                   |  // [251]
                                                              |  // [251]
    +---------------------------------------------------------+  // [251]
                                                                 // [251]
    #_F_PREFIX_ON_ANY_OF_THESE_TYPE_# :-----------------------+  // [251]
                                                              |  // [251]
        3 letter hungarian prefixes can get to be a bit       |  // [251]
        much in our shader code. I won't 100% dis-allow       |  // [251]
        it , but more general prefixes should be allowed.     |  // [251]
                                                              |  // [251]
        f32_var ===can_be===> f_var                           |  // [251]
        fv2_var ===can_be===> f_var                           |  // [251]
        fv3_var ===can_be===> f_var                           |  // [251]
        fv4_var ===can_be===> f_var                           |  // [251]
    +---------------------------------------------------------+  // [251]
    #_U_PREFIX_ON_ANY_OF_THESE_TYPE_# :-----------------------+  // [251]
                                                              |  // [251]
        Ditto for unisgned types.                             |  // [251]
                                                              |  // [251]
        u32_var ===can_be===> u_var                           |  // [251]
        uv2_var ===can_be===> u_var                           |  // [251]
        uv3_var ===can_be===> u_var                           |  // [251]
        uv4_var ===can_be===> u_var                           |  // [251]
    +---------------------------------------------------------+  // [251]
                                                                 // [251]
    #_SAMPLER_PRECISION_FIX_#:--------------------------------+  // [251]
                                                              |  // [251]
        ERROR: 0:61: 'usampler2D' : No precision specified    |  // [251]
                                                              |  // [251]
        ADD TO SHADER TO GET RID OF ERROR :                   |  // [251]
        -----------------------------------                   |  // [251]
        precision highp usampler2D; //:#_SAMPLER_PRECISION_#://  // [251]
                                                              |  // [251]
        SEE[ _SAMPLER_PRECISION_ ]FOR_MORE_NOTES              |  // [251]
                                                              |  // [251]
    +---------------------------------------------------------+  // [251]
    #_CUT_AND_PASTED_FROM_SSF_005_# :-------------------------+  // [251]
                                                              |  // [251]
        These uniforms were cut and pasted from               |  // [251]
        fragment shader number five(6).                       |  // [251]
        ( [S]hader [S]ource [F]ragment 005 )                  |  // [251]
                                                              |  // [251]
        We need all (or at least most) for the auto tile      |  // [251]
        shader we are writing in shader # six(6).             |  // [251]
        So put them into re-usable section of code.           |  // [251]
    +---------------------------------------------------------+  // [251]
    #_NOTE_FROM_SHORTCUTS_2022_09_08:-------------------------+  // [251]
    #####################################################     |  // [251]
    ## Idea : Store levelmaps as 4 512x512 cat photos. ##     |  // [251]
    ##      : But one color channel is used to hold    ##     |  // [251]
    ##      : binary data.                             ##     |  // [251]
    ##                                                 ##     |  // [251]
    ## Better Idea : Just Use GitHub Repo As CDN       ##     |  // [251]
    #####################################################     |  // [251]
    +---------------------------------------------------------+  // [251]

    #_LETTERBOX_DISCARD_# :-----------------------------------+  // [252]
                                                              |  // [252]
        Don't fool yourself by adding a branch. Just          |  // [252]
        discard the frag color if you are outside of the      |  // [252]
        letterboxing region. ( VP0 / destination viewport )   |  // [252]
                                                              |  // [---]
        UPDATE ::::::::::::::::::::::::::::::::::::::::::::::::  // [284]
        UPDATE : Some G_P_U_S "CAN BRANCH". Also...        ::::  // [284]
               : Even my gtx960 can avoid branches         ::::  // [284]
               : when all kernel executions are within     ::::  // [284]
               : the same "warp".                          ::::  // [284]
               :                                           ::::  // [284]
               : Sounds like some crazy "OpenCL" SEA ELL   ::::  // [284]
               : talk. But I read it on "OpenGL" GEE ELL   ::::  // [284]
               : forum. SEE[ _SHADER_BRANCHING_QUOTE_ ]    ::::  // [284]
               ::::::::::::::::::::::::::::::::::::::::::::::::  // [284]
                                                              |  // [---]
    +---------------------------------------------------------+  // [252]
    #_LPC_LOCAL_PERCENT_COORD_# :-----------------------------+  // [252]
                                                              |  // [252]
          @lpc@ : Local_Percent_Coord                         |  // [252]
        @f_lpc@ : SEE[ lpc ]:::::::::                         |  // [252]
                                                              |  // [252]
        Local percent coord is LOCAL to __BOTH__              |  // [252]
        [ d _ vp0 ]AND[ d _ vp1 ].                            |  // [252]
                                                              |  // [252]
        [ d _ vp0 ] : The On  Screen Viewport                 |  // [252]
        [ d _ vp1 ] : The Off Screen Data Selection Viewport  |  // [252]
                                                              |  // [252]
        Fragment shader 6 is going to use some floating       |  // [252]
        point math for this mapping rather than pure          |  // [252]
        integer math, because pure integer math is what       |  // [252]
        is causing heavy JITTER when zooming in an out.       |  // [252]
                                                              |  // [252]
        (Not the jitter from rotating sample coords , )       |  // [252]
        (the jitter when we are actively zooming in   )       |  // [252]
        (and out.                                     )       |  // [252]
                                                              |  // [252]
        TAG[ shader_rendering_method | rendering_method ]     |  // [252]
        TAG[ shader-rendering-method | rendering-method ]     |  // [252]
        TAG[ shader rendering method | rendering method ]     |  // [252]
        SEE[ enu_fsm ]( fsm : Fragment_Shader_Mapping   )     |  // [252]
                                                              |  // [252]
        TAG[ click_pixel_x | click-pixel-x | click-x    ]     |  // [252]
        TAG[ click_pixel_y | click-pixel-y | click-y    ]     |  // [252]
        TRY[ F _ MOUMAST _ P_X _ DUX ](DUX:DiscreteUnitX)     |  // [252]
        TRY[ F _ MOUMAST _ P_Y _ DUY ](DUY:DiscreteUnitY)     |  // [252]
                                                              |  // [252]
    +---------------------------------------------------------+  // [252]
    #_LPC_EXAMPLE_MATH_# :------------------------------------+  // [252]
                                                              |  // [252]
            x === 200                                         |  // [252]
            y === 200                                         |  // [252]
                                                              |  // [252]
        +---------------------+                               |  // [252]
        |   0 == d_vp0[ x_0 ] |                               |  // [252]
        | 100 == d_vp0[ y_0 ] |                               |  // [252]
        +---------------------+                               |  // [252]
            |                                                 |  // [252]
    [0%,0%] +---------------------+                           |  // [252]
            |                     |                           |  // [252]
            |       [ VP0 ]       |                           |  // [252]
            |     (on screen)     |                           |  // [252]
            |                     |                           |  // [252]
            +---------------------+ <--[ 100% , 100% ]        |  // [252]
            ^^^^^^^^^^^^^^^^^^^^^^^      d_vp0[ x_1  ]==300   |  // [252]
            [ lpc ]local to _BOTH_       d_vp0[ y_1  ]==200   |  // [252]
            VVVVVVVVVVVVVVVVVVVVVVV                           |  // [252]
    [0%,0%] +---------------------+                           |  // [252]
            |                     |                           |  // [252]
            |       [ VP1 ]       |                           |  // [252]
            |    (off screen)     |                           |  // [252]
            |                     |                           |  // [252]
            +---------------------+ <--[ 100% , 100% ]        |  // [252]
                                                              |  // [252]
           [  0% ]---------[ ??% ]---------[ 100%]            |  // [252]
           [_100_]---------[_150_]---------[_200_] <--Global  |  // [252]
                                                              |  // [252]
            Minus d_vp0[ y_0 ] From[ _100_ ]AND[ _150_ ]      |  // [252]
                                                              |  // [252]
           [_000_]---------[_050_]---------[_100_] <--Local   |  // [252]
                                                              |  // [252]
            Percentage Coord Y ==( _050_ / _100_ )===( 0.5 )  |  // [252]
                                                              |  // [252]
            (0.5)===( 50% )                                   |  // [252]
    +---------------------------------------------------------+  // [252]

    #DLM_X# / #DLM_Y# :---------------------------------------+  // [253]
                                                              |  // [253]
        @DLM_X@ : Discrete_Local_Max____X                     |  // [253]
        @DLM_Y@ : Discrete_Local_Max____Y                     |  // [253]
                                                              |  // [253]
        Maximum discrete coord LOCALLY within [ VP1 ].        |  // [253]
        Coordinate range is from:                             |  // [253]
                                                              |  // [253]
                       |<---- Last_Valid_Address ----->|      |  // [253]
        X_AXIS[ 0 -to- [ d_vp1[ x_1 ] - d_vp1[ x_0 ] ] ]      |  // [253]
        Y_AXIS[ 0 -to- [ d_vp1[ y_1 ] - d_vp1[ y_0 ] ] ]      |  // [253]
                       |<---- Last_Valid_Address ----->|      |  // [253]
                                                              |  // [253]
        [ DLM_X | DLM_Y ] === Last_Valid_Address on the       |  // [253]
        X or Y axis when looking at the local discrete        |  // [253]
        units within[ d_vp1 ]. (Offscreen data viewport).     |  // [253]
    +---------------------------------------------------------+  // [253]
    #_DUG_DISCRETE_UNIT_GLOBAL_# :----------------------------+  // [253]
                                                              |  // [253]
        A global coordinate within "THE_DUM"                  |  // [253]
        ( "THE_DUM" ~~=~~ APPROX:WorldSpace)                  |  // [253]
                                                              |  // [253]
        We have meticulously mapped out the renderable        |  // [253]
        region of our world in "planck"/"plank" units         |  // [253]
        that we refer to as "discrete units".                 |  // [253]
    +---------------------------------------------------------+  // [253]
    #_VOID_SPACE_DISCARD_# :----------------------------------+  // [253]
                                                              |  // [253]
        For now, discard any calculations in void space.      |  // [253]
        ( Space in which tiles can NEVER exist )              |  // [253]
                                                              |  // [253]
    +---------------------------------------------------------+  // [253]
    #_GEOMETRIC_ELEMENT_COORDS_# :----------------------------+  // [253]
                                                              |  // [253]
        Let's create the lookup table in the path of          |  // [253]
        least resistance. Ordered with 0 being which          |  // [253]
        levelpack cell we are in , and the highest            |  // [253]
        number telling us locally what game sized tile        |  // [253]
        we are on.                                            |  // [253]
                                                              |  // [253]
    +---------------------------------------------------------+  // [253]
    #_GEOMETRIC_ELEMENT_SIZES_# :-----------------------------+  // [253]
                                                              |  // [253]
        The sizes of different geometric elements that        |  // [253]
        we can use to space partition our renderable          |  // [253]
        area.                                                 |  // [253]
                                                              |  // [253]
        Roughly speaking, tile sizes and room sizes used      |  // [253]
        to partition the world map.                           |  // [253]
                                                              |  // [253]
        Accurately speaking, sizes of tiles , levels ,        |  // [253]
        and hotels(levelpacks) used to partition              |  // [253]
        "THE_DUM"(renderable sub-section of worldmap).        |  // [253]
    +---------------------------------------------------------+  // [253]
    #_GEOMETRIC_ELEMENT_TYPES_# :-----------------------------+  // [253]
                                                              |  // [253]
        Enumerations for the geometric element types that     |  // [253]
        are __NEEDED__ to calculate our local coords          |  // [253]
        on[ THE_DUM ]in terms of different geometric          |  // [253]
        elements.                                             |  // [253]
                                                              |  // [253]
        Geometric element[ c_dum ]is __NOT__ part of this     |  // [253]
        set because all coordinates are within[ THE_DUM ]     |  // [253]
        and thus[ this (c_dum) ]geometric element type        |  // [253]
        is not useful in calculations.                        |  // [253]
                                                              |  // [253]
        Geometric element types are listed from biggest       |  // [253]
        to smallest, as when iterating over a lookup          |  // [253]
        table of geometric elements, the math to get          |  // [253]
        all of our different cell coordinates has to          |  // [253]
        start from the general coarse "big" geometric         |  // [253]
        elements and widdle it's way down to more             |  // [253]
        granular smaller geometric elements.                  |  // [253]
    +---------------------------------------------------------+  // [253]
                                                                 // [253]
    @gt8_dus@ : ( gt8 )===>( dus )                               // [253]
    @gt8@ ::::: Geometric_element_Type ( 8 of them )             // [253]
    @dus@ ::::: Discrete_Unit_Span                               // [253]
    @d_gt8_dus@ : GeoElmType8__TO__DiscreteUnitSpan              // [253]
    ::::::::::::: (    gt8    )TO(       dus      )              // [253]
                                                                 // [253]
    @gt8_duc@ : DUC DiscreteUnitCell, DONT USE , USE[ gec ].     // [253]
    @gt8_gec@ : gt8 enumeration to ==> Geometric Element Cell    // [253]
    @gec@ : Geometric_Element_Cell ( LOCAL , NOT GLOBAL ).       // [253]
                                                                 // [253]
    #_EIGHT_GEOMETRIC_ELEMENT_TYPES_# :-----------------------+  // [253]
                                                              |  // [253]
        The 8 geometric element types that mattter to         |  // [253]
        us when partitioning our render space.                |  // [253]
                                                              |  // [253]
        Ordered from bigget elements to smallest elements.    |  // [253]
        ( biggest element at    [0] slot )                    |  // [253]
        ( smallest element at [MAX] slot )                    |  // [253]
                                                              |  // [253]
            Largest useful geometric element for              |  // [253]
            parititoning our space is a HOTEL/LEVELPACK.      |  // [253]
            +-------------------+                             |  // [253]
            |      +-----+      |                             |  // [253]
            |      |     |      |                             |  // [253]
            |      |     |      |                             |  // [253]
            |+-----+-----+-----+|                             |  // [253]
            ||     |     |     ||                             |  // [253]
            ||     |     |     ||                             |  // [253]
            |+-----+-----+-----+|                             |  // [253]
            |      |     |      |                             |  // [253]
            |      | .   |      |                             |  // [253]
            |      +-^---+      |                             |  // [253]
            +--------^----------+                             |  // [253]
                     ^                                        |  // [253]
                     ^                                        |  // [253]
                +-------+ Smallest useful geometric element   |  // [253]
                |       | for partitioning our space is       |  // [253]
                | c_du0 | the smallest tile size. Our         |  // [253]
                |       | [ Alice / Ivy ]Sized Tile.          |  // [253]
                +-------+                                     |  // [253]
    +---------------------------------------------------------+  // [253]

    #_GEOELM_WIDDLE_DOWN_# :----------------------------------+  // [254]
                                                              |  // [254]
        Geometric Element Widdle Down ,                       |  // [254]
        The code in this section is the process of widdling   |  // [254]
        down from[ COARSER / BIGGER ]to[ FINER / SMALLER ]    |  // [254]
        geometric element partitions on[ "THE_DUM" ].         |  // [254]
                                                              |  // [254]
        I am atheist by the way. I just thought it was        |  // [254]
        amusing to make those macros spell "GOD".             |  // [254]
                                                              |  // [254]
        G : Table we are filling of geometric element coords. |  // [254]
                                                              |  // [254]
        O : The "cut-off" that allows us to do these          |  // [254]
          : calculations without the assistance of a          |  // [254]
          : "modulo" (%) operator.                            |  // [254]
                                                              |  // [254]
        D : The discrete unit span (dus) for our geometric    |  // [254]
          : element types. Ordered from largest to smallest.  |  // [254]
    +---------------------------------------------------------+  // [254]
                                                                 // [254]
    @HACKISH_SHADER_ERROR_CHECK@ : Tagging Error Check           // [254]
    #HACKISH_SHADER_ERROR_CHECK# :----------------------------+  // [254]
                                                              |  // [254]
        We cannot throw errors in shaders , so color          |  // [254]
        pixel red or something if our calculation is off.     |  // [254]
                                                              |  // [254]
        +--------------------------------------------------+  |  // [254]
        |   //:@HACKISH_SHADER_ERROR_CHECK@://             |  |  // [254]
        |   f_out =(u_g25 >= u_0 && u_g25 <= U32(25-1) )   |  |  // [254]
        |       ?    (         f_out         ) /////////   |  |  // [254]
        |       : FV4( 1.0 , 0.0 , 0.0 , 1.0 ) ;;;;;;;;;   |  |  // [254]
        |                                                  |  |  // [254]
        +--------------------------------------------------+  |  // [254]
                                                              |  // [254]
        Turns out, the code is actually working.              |  // [254]
        You just have to zoom out to see the overall          |  // [254]
        shapes of the levelpacks.                             |  // [254]
                                                              |  // [254]
        Removed the debug check from the shader               |  // [254]
        code in the "widdle down" section of [ ssf _ 006 ].   |  // [254]
                                                              |  // [254]
    +---------------------------------------------------------+  // [254]
    #_DIA_GWD_# :---------------------------------------------+  // [254]
                                                              |  // [254]
        DIA_GWD === "Diagram : Geometric Widdle Down"         |  // [254]
                                                              |  // [254]
        G === UV2 gt8_gec[ 8 ];                               |  // [254]
                                                              |  // [254]
      +-------------------------------------------------------+  // [NEW][256]
      | gt8_gec[ c_gt0 / hotel     ]===[0|1|2]      @GEC_3X3@ |  // [NEW][256]
      | gt8_gec[ c_gt1 / level     ]===[0|1|2|3|4]  @GEC_5X5@ |  // [NEW][256]
      | gt8_gec[ c_gt[2|3|4|5|6|7] ]===[ 0|1 ] BIN  @GEC_1X1@ |  // [NEW][256]
      +-------------------------------------------------------+  // [NEW][256]
        G[ 0 ] : [ duh ] sized tile coordinate. [0|1|2]       |  // [254]
        G[ 1 ] : [ dur ] sized tile coordinate. [0|1|2|3|4]   |  // [254]
        G[ 2 ] : [ du5 ] sized tile coordinate. [0|1]         |  // [254]
        G[ 3 ] : [ du4 ] sized tile coordinate. [0|1]         |  // [254]
        G[ 4 ] : [ du3 ] sized tile coordinate. [0|1]         |  // [254]
        G[ 5 ] : [ du2 ] sized tile coordinate. [0|1]         |  // [254]
        G[ 6 ] : [ du1 ] sized tile coordinate. [0|1]         |  // [254]
        G[ 7 ] : [ du0 ] sized tile coordinate. [0|1]         |  // [254]
                                                              |  // [254]
            |<--------- TILESIZE[ duh ] --->|                 |  // [254]
            |<--- G[0].x =[ 0 | 1 | 2 ] --->|                 |  // [254]
            +---------++---------++---------+ -=-             |  // [254]
            |   [ ]   ||   [ ]   ||   [ ]   |  |              |  // [254]
            |[ ][ ][ ]||[ ][ ][ ]||[ ][ ][ ]|  |              |  // [254]
            |   [ ]   ||   [ ]   ||   [ ]   |  |              |  // [254]
            +---------++---------++---------+  |              |  // [254]
            |   [ ]   ||   [ ]   ||   [ ]   |  |              |  // [254]
            |[ ][ ][ ]||[ ][ ][ ]||[ ][ ][ ]| G[0].y =[0|1|2] |  // [254]
            |   [ ]   ||   [ ]   ||   [ ]   |  |              |  // [254]
            +---------++---------++---------+  |              |  // [254]
            |   [ ]   ||   [ ]   ||   [ ]   |  |              |  // [254]
            |[ ][ ][ ]||[ ][ ][ ]||[ ][ ][ ]|  |              |  // [254]
            |   [ ]   ||   [ ]   ||   [ ]   |  |              |  // [254]
            +---------++---------++---------+ -=-             |  // [254]
                       VVVVVVVVVVV                            |  // [254]
                       VVVVVVVVVVV                            |  // [254]
        ----=-- +------VVVVVVVVVVV------------------------+   |  // [254]
            |   |                 +--=--+   NOTE:         |   |  // [254]
            |   | G[1]=[ 0 to 4 ] |     |  [ dur ]==[ du6 ]   |  // [254]
            |   | G[1]=[ 0 to 4 ] |     |                 |   |  // [254]
            |   | TILESIZE[ dur ] +--=--+                 |   |  // [254]
            |   |         +--=--+ +--=--+ +--=--+         |   |  // [254]
            |   |         |     | |     | |     |         |   |  // [254]
            |   |         |     | |     | |     |         |   |  // [254]
            |   |         +--=--+ +--=--+ +--=--+         |   |  // [254]
            |   | +--=--+ +--=--+ +--=--+ +--=--+ +--=--+ |   |  // [254]
            |   | |     | |     | |     | |     | |     | |   |  // [254]
           duh  | |     | |     | |     | |     | |     | |   |  // [254]
            |   | +--=--+ +--=--+ +--=--+ +--=--+ +--=--+ |   |  // [254]
            |   |         +--=--+ +--=--+ +--=--+         |   |  // [254]
            |   |         |     | |     | |     |         |   |  // [254]
            |   |         |     | |     | |     |         |   |  // [254]
            |   |         +--=--+ +--=--+ +--=--+         |   |  // [254]
            |   |                 +--=--+                 |   |  // [254]
            |   |                 | du6 |                 |   |  // [254]
            |   |            +----->    |                 |   |  // [254]
            |   |            |    +--=--+                 |   |  // [254]
        ----=-- +------------|----------------------------+   |  // [254]
                             |                                |  // [254]
                         +---+---+     |||||||||||||||||||||  |  // [254]
        G[2].x[ 0|1 ]    | 0 |   |                            |  // [254]
        G[2].y[ 0|1 ]    +---+---+           TILESIZE( du5 )  |  // [254]
                         |   | 1 |---+           GRID(02x02)  |  // [254]
                         +---+---+   | |||||||||||||||||||||  |  // [254]
                                     |                        |  // [254]
                         +---+---+   | |||||||||||||||||||||  |  // [254]
        G[3].x[ 0|1 ]    | 0 |   |<--+                        |  // [254]
        G[3].y[ 0|1 ]    +---+---+           TILESIZE( du4 )  |  // [254]
                         |   | 1 |---+           GRID(04x04)  |  // [254]
                         +---+---+   | |||||||||||||||||||||  |  // [254]
                                     |                        |  // [254]
                         +---+---+   | |||||||||||||||||||||  |  // [254]
        G[4].x[ 0|1 ]    | 0 |   |<--+                        |  // [254]
        G[4].y[ 0|1 ]    +---+---+           TILESIZE( du3 )  |  // [254]
                         |   | 1 |---+           GRID(08x08)  |  // [254]
                         +---+---+   | |||||||||||||||||||||  |  // [254]
                                     |                        |  // [254]
                         +---+---+   | |||||||||||||||||||||  |  // [254]
        G[5].x[ 0|1 ]    | 0 |   |<--+                        |  // [254]
        G[5].y[ 0|1 ]    +---+---+           TILESIZE( du2 )  |  // [254]
                         |   | 1 |---+           GRID(16x16)  |  // [254]
                         +---+---+   | |||||||||||||||||||||  |  // [254]
                                     |                        |  // [254]
                         +---+---+   | |||||||||||||||||||||  |  // [254]
        G[6].x[ 0|1 ]    | 0 |   |<--+                        |  // [254]
        G[6].y[ 0|1 ]    +---+---+           TILESIZE( du1 )  |  // [254]
                         |   | 1 |---+           GRID(32x32)  |  // [254]
                         +---+---+   | |||||||||||||||||||||  |  // [254]
                                     | |||||||||||||||||||||  |  // [254]
                         +---+---+   | |||||||||||||||||||||  |  // [254]
        G[7].x[ 0|1 ]    | 0 |   |<--+                        |  // [254]
        G[7].y[ 0|1 ]    +---+---+           TILESIZE( du0 )  |  // [254]
                         |   | 1 |               GRID(64x64)  |  // [254]
                         +---+---+     |||||||||||||||||||||  |  // [254]
                                                              |  // [254]
    +-------------------------------------------: #_DIA_GWD_# +  // [254]
                                                                 // [254]
    @DIAGRAM_MATH@ : A diagram explaining the math is here.      // [254]

    #_DIA_BSC_# :---------------------------------------------+  // [255]
                                                              |  // [255]
        DIAGRAM : @bsc@ : Binary_Smash_Coord             :    |  // [255]
                :                                        :    |  // [255]
                : A single number that stores all of the :    |  // [255]
                : addresses for all of the tile sizes for:    |  // [255]
                : the current sample point.              :    |  // [255]
                                                              |  // [255]
         du6's address is always ZERO , so nothing            |  // [255]
            to shift into[ bsc ]for[ du6 ]coordinate.         |  // [255]
              |                                               |  // [255]
            [ 0  0 0 0 0 0 0   | du6_addr ===[ bsc >> 6      ]|  // [255]
            [ 0  1 1 1 1 1 1 ] | du6_addr ===[ ALWAYS ZERO   ]|  // [255]
                 | | | | | |   |                              |  // [255]
               du5 | | | | |   | du5_addr ===[ bsc >> 5      ]|  // [255]
                 | | | | | |   |                              |  // [255]
                 du4 | | | |   | du4_addr ===[ bsc >> 4      ]|  // [255]
                 |   | | | |   |                              |  // [255]
                 |du3| | | |   | du3_addr ===[ bsc >> 3      ]|  // [255]
                 |du2--| | |   | du2_addr ===[ bsc >> 2      ]|  // [255]
                 |du1----| |   | du1_addr ===[ bsc >> 1      ]|  // [255]
                 |du0------|   | du0_addr ===[ bsc.x , bsc.y ]|  // [255]
                                                              |  // [255]
    +---------------------------------------------------------+  // [255]

    #_BATHROOM_TILE_SNAP_GRID_# :-----------------------------+  // [256]
                                                              |  // [256]
        Rather than make a wireframe grid, we are making an   |  // [256]
        inset tile grid on the NON-VOID space.                |  // [256]
                                                              |  // [256]
        NONVOID SPACE == TILE SPACE                           |  // [256]
           VOID SPACE == VOID SPACE                           |  // [256]
                                                              |  // [256]
        We need to do this because an EMPTY LEVEL needs to    |  // [256]
        be somehow visually distinct from the "VOID SPACE"    |  // [256]
        sections of "THE_DUM" ( Roughly: World Map ).         |  // [256]
                                                              |  // [256]
        @dui@ : Discrete_Unit_Inset                           |  // [256]
        @dil@ : Discrete_Internal_Local (Tile_Internal_Coord) |  // [256]
                                                              |  // [256]
        @te7_dil@ : ( TE7 )===>( DIL )                        |  // [256]
        ::::::::::: Lookup Table, TilesizeExponent(7 of them) |  // [256]
        ::::::::::: Converted To Discrete_Internal_Local      |  // [256]
                                                              |  // [256]
                                                              |  // [256]
    +---------------------------------------------------------+  // [256]
    #_LIC_THE_BATHROOM_FLOOR_TILE_# :-------------------------+  // [256]
                                                              |  // [256]
        Before we can create[_BATHROOM_TILE_SNAP_GRID_],      |  // [256]
        we need the[ LIC / Local Internal Coords ]of          |  // [256]
        the different tile sizes.                             |  // [256]
                                                              |  // [256]
        We will populate a lookup table called :              |  // [256]
        :--------------------------------------:              |  // [256]
                                                              |  // [256]
            te7_dil < < < TE7_to_Discrete_Internal_Local      |  // [256]
                                                              |  // [256]
        :--------------------------------------:              |  // [256]
        To get the information ready to create our grid.      |  // [256]
                                                              |  // [256]
        SECTION_VARIABLE_NOTES:----------------------------+  |  // [256]
        |                                                  |  |  // [256]
        |   @c_gt0@ : [ GeoElmType=== Hotel_Sized       ]  |  |  // [256]
        |   @c_gt1@ : ( GeoElmType=== Level_Sized       )  |  |  // [256]
        |           : ((te7 === 6)=== Level_Sized (TOO) )  |  |  // [256]
        |     @dhl@ : Discrete_Hotel____Locals             |  |  // [256]
        |     @dll@ : Discrete_Level____Local              |  |  // [256]
        |     @dtl@ : Discrete_Tile_____Local (USE:dil)    |  |  // [256]
        |     @dil@ : Discrete_Internal_Local              |  |  // [256]
        |     ( @dtl@ === @dil@ )                          |  |  // [256]
        +--------------------------------------------------+  |  // [256]
                                                              |  // [256]
        @GEC_3X3@ : [ Geometric Element Coord ]Exists on a    |  // [256]
                  : 3X3 grid, addresses [ 0 | 1 | 2 ]         |  // [256]
                                                              |  // [256]
        @GEC_5X5@ : [ Geometric Element Coord ]Exists on a    |  // [256]
                  : 5X5 grid, addresses [ 0 | 1 | 2 | 3 | 4 ] |  // [256]
                                                              |  // [256]
        @GEC_1X1@ : [ Geometric Element Coord ]Exists on a    |  // [256]
                  : 1X1 grid, addresses [ 0 | 1 ]             |  // [256]
    +---------------------------------------------------------+  // [256]
    #_BATHROOM_TILE_GROUT_# :---------------------------------+  // [256]
                                                              |  // [256]
        Add padding between the bathroom tiles.               |  // [256]
        This padding should be a constant on                  |  // [256]
        screen width that doesn't flux when                   |  // [256]
        we zoom in and out. To do that we will                |  // [256]
        need to calculate the discrete units                  |  // [256]
        per on screen pixel.                                  |  // [256]
    +---------------------------------------------------------+  // [256]
    #_BATHROOM_GRID_# :---------------------------------------+  // [256]
                                                              |  // [256]
        When zoomed out very far we see a very coarse grid    |  // [256]
        of inset tiles. Each tile the size of an entire level.|  // [256]
                                                              |  // [256]
                            +-----+                           |  // [256]
                            |     |                           |  // [256]
                            |     |                           |  // [256]
                            +-----+                           |  // [256]
                    +-----+ +-----+ +-----+                   |  // [256]
                    |     | |     | |     |                   |  // [256]
                    |     | |     | |     |                   |  // [256]
                    +-----+ +-----+ +-----+                   |  // [256]
            +-----+ +-----+ +-----+ +-----+ +-----+           |  // [256]
            |     | |     | |     | |     | |     |           |  // [256]
            |     | |     | |     | |     | |     |           |  // [256]
            +-----+ +-----+ +-----+ +-----+ +-----+           |  // [256]
                    +-----+ +-----+ +-----+                   |  // [256]
                    |     | |     | |     |                   |  // [256]
                    |     | |     | |     |                   |  // [256]
                    +-----+ +-----+ +-----+                   |  // [256]
                          +---------+  +----------------------+  // [256]
                          | +-----+ |  |                      |  // [256]
        @@@DIAGRAM@@@@    | |     | |  | As we zoom in        |  // [256]
        [_LEGO__STUD_]    | |     | |  | further we change    |  // [256]
                          | +-----+ |  | conceptual "LOD"     |  // [256]
                          +--- ^ ---+  | and show finer       |  // [256]
                               |       | and finer            |  // [256]
          +------------------- V ---+  | "bathroom tile"      |  // [256]
          | +---+ +---+ +---+ +---+ |  | grids.               |  // [256]
          | |   | |   | |   | |   | |  |                      |  // [256]
          | +---+ +---+ +---+ +---+ |  | This grid style      |  // [256]
          | +---+ +---+ +---+ +---+ |  | is the INVERSE       |  // [256]
          | |   | |   | |   | |   | |  | of a WIRE_FRAME      |  // [256]
          | +---+ +---+ +---+ +---+ |  | grid.                |  // [256]
          | +---+ +---+ +---+ +---+ |  |                      |  // [256]
          | |   | |   | |   | |   | |  | It is more like a    |  // [256]
          | +---+ +---+ +---+ +---+ |  | "lego stud" grid.    |  // [256]
          | +---+ +---+ +---+ +---+ |  |                      |  // [256]
          | |   | |   | |   | |   | |  | TAG[ LEGO_STUD ]     |  // [256]
          | +---+ +---+ +---+ +---+ |  | TAG[ lego-stud ]     |  // [256]
          +-------------------------+  +----------------------+  // [256]
                                                              |  // [256]
    +---------------------------------------------------------+  // [256]
                                                                 // [256]
    @DIAGRAM@ : Use only at location of ascii diagram.           // [256]
              : To reference the diagram just use:               // [256]
              : @SEE_DIA@[     _DIAGRAM_NAME_TAG_HERE_ ]         // [256]
              : @SEE_DIAGRAM@[ _DIAGRAM_NAME_TAG_HERE_ ]         // [256]
                                                                 // [256]
    @IMP_DIA@ : Means , "Implementing Diagram"                   // [256]
                                                                 // [256]
    @IMPLEMENTING_DIAGRAM@ : USE[ IMP_DIA ]                      // [256]
    @IMPLEMENTING_DIA@     : USE[ IMP_DIA ]                      // [256]
    @IMPLEMENT_DIAGRAM@    : USE[ IMP_DIA ]                      // [256]
    @IMPLEMENT_DIA@        : USE[ IMP_DIA ]                      // [256]
                                                                 // [256]
    @01_X_01@ : Relates to a[ 1-x-1 ]grid somehow.(GeneralHint)  // [256]
    @02_X_02@ : Relates to a[ 2-x-2 ]grid somehow.(GeneralHint)  // [256]
    @04_X_04@ : Relates to a[ 4-x-4 ]grid somehow.(GeneralHint)  // [256]
    @08_X_08@ : Relates to a[ 8-x-8 ]grid somehow.(GeneralHint)  // [256]
    @16_X_16@ : Relates to a[16-x-16]grid somehow.(GeneralHint)  // [256]
    @32_X_32@ : Relates to a[32-x-32]grid somehow.(GeneralHint)  // [256]
    @64_X_64@ : Relates to a[64-x-64]grid somehow.(GeneralHint)  // [256]
                                                                 // [256]
    @VIDEO_IDEA@ : Use tilemap code to create a cellular         // [256]
    @VID_IDEA@   : atomata breeding simulator. Record            // [256]
    @VID@        : two videos. One video that proves             // [256]
                 : "we are making pills for the wrong person"    // [256]
                 : another that proves opposite point.           // [256]
                 : https://imgur.com/a/70VEtYF                   // [256]
                                                                 // [256] 
    @f_pil@ : Float____Percentage_Internal_Local( coord )        // [256] 
                                                                 // [---]
    @u_den@ : USE[ u_dud ]( DEN == Density )                     // [257]
    @u_dud@ : U32______DENsity ( Discrete Unit Density )         // [257]
                                                                 // [257]
    @PREVIOUSLY_IN_256@ : What the value was previously          // [257]
                        : in video/delta #2_5_6.                 // [257]
                                                                 // [257]
    @LOOK_OK@ : The code on this line gets results that          // [257]
              : "Look Okay" / "Looks Correct" / "Not Buggy"      // [257]
                                                                 // [257]
    @BADLOOK@ : Looks bad. Looks like buggy code. You need       // [257]
              : to look more into this code and figure out       // [257]
              : what you are doing wrong.                        // [257]
                                                                 // [257]
    @IDENTICAL_MACROS_OKAY@ : Identical Macros _CAN_ be okay.    // [257]
    #IDENTICAL_MACROS_OKAY# :---------------------------------+  // [257]
                                                              |  // [257]
        In C99 (thus GLSL too) you can re-define a macro      |  // [257]
        __IF__ and __ONLY_IF__ the redefinition matches       |  // [257]
        the _PREVIOUS_DEFINITION_                             |  // [257]
                                                              |  // [257]
    +---------------------------------------------------------+  // [257]
                                                                 // [---]
    #_INSET_TILE_MATH_# / #ITM# :-----------------------------+  // [258]
                                                              |  // [258]
        |<----- Old Range ----->|   +-----------------------+ |  // [258]
        |   |<- New Range ->|   |   | We re-map the value   | |  // [258]
        +---+---------------+---+   | range to make         | |  // [258]
        |           =           |   | the[ I_0 ] region all | |  // [258]
        +   +---=---=---=---+   +   | BLACK/ZERO and the    | |  // [258]
        |   |       =       |   |   | [ I_1 ] region all    | |  // [258]
        |   |               |   |   | WHITE/MAXXED_OUT/1.0. | |  // [258]
        |   |               |   |   |                       | |  // [258]
        | - - -           - - - |   | Then we take the MIN  | |  // [258]
        |   |               |   |   | of both axis and apply| |  // [258]
        |   |               |   |   | step function to get  | |  // [258]
        |   |       =       |   |   | a solid inset tile    | |  // [258]
        +   +---=---=---=---+   +   | design.               | |  // [258]
        |           =           |   +-----------------------+ |  // [258]
        +---+---------------+---+                             |  // [258]
        | I |               | I | <--- "I" == Inset Amount    |  // [258]
        |I_0|               |I_1|                             |  // [258]
    +---------------------------------------------------------+  // [258]
    //:#_ITM_003_#:-------------------------------------------+  // [258]
                                                              |  // [258]
            (u_dud*U32(3)) is used to create an inset of      |  // [258]
            CONSTANT SCREEN THICKNESS of 3 pixels. Since      |  // [258]
            tiles are adjacent to each other, that means      |  // [258]
            we have a 6 pixel gap of black space between      |  // [258]
            our white tiles.                                  |  // [258]
                                                              |  // [258]
    +---------------------------------------------------------+  // [258]
    //:#_GROUTED_INSET_TILE_#:--------------------------------+  // [258]
                                                              |  // [258]
        Taking the square gradient and re-mapping it to       |  // [258]
        either be black ( grout ) or white ( tile ).          |  // [258]
                                                              |  // [258]
        Sometimes __LESS_IS_MORE__ .                          |  // [258]
        Sometimes   LESS_IS_MORE   .                          |  // [258]
                                                              |  // [258]
    +---------------------------------------------------------+  // [258]
                                                                 // [258]
    @BEND_BACK_INTO_YOURSELF@ : Bending/Mirroring gradient       // [258]
    ::::::::::::::::::::::::: : back into itself.                // [258]
    @DIAGRAD@  : Diamond Gradient                                // [258]
    @FLATGRAD@ : Flat Gradient                                   // [258]

    #_GEOM_BITS_# :-------------------------------------------+  // [---][259]
                                                              |  // [---][259]
       @T__V@ : Tile Values , 16 of them , 0 to 15.           |  // [---][259]
        @AM4@ : Auto tiling( Method/Mode : 4 bits )           |  // [283][259]
                                                              |  //      [259]
          T__V AM4                                            |  // [283][259]
    G_B:[ 1111  11 ?? | ???? ???? | ???? ???? | ???? ???? ]   |  //      [259]
                                                              |  //      [259]
             XY  XY                                           |  //      [259]
        AM4[ 00  ?? ] : Auto Tile With NOTHING                |  // [283][259]
        AM4[ 01  ?? ] : Auto Tile Only Vertically             |  // [283][259]
        AM4[ 10  ?? ] : Auto Tile Only Horizontally           |  // [283][259]
        AM4[ 11  ?? ] : Auto Tile All  Ways                   |  // [283][259]
                                                              |  // [259]
        We aren't implementing this part in video# 2_5_9 ,    |  // [259]
        but want to make a note of this design feature        |  // [259]
        before I continue.                                    |  // [259]
                                                              |  // [259]
    +---------------------------------------------------------+  // [259]
                                                                 // [259]
    #_GET_GEOM_TILE_AND_FRIENDS_# :---------------------------+  // [259]
                                                              |  // [259]
                                                              |  // [259]
        @N_X0@ / @NY0@ : Neighbor Y_0                         |  // [259]
        @N_X1@ / @NY0@ : Neighbor Y_1                         |  // [259]
        @N_Y0@ / @NY0@ : Neighbor X_0                         |  // [259]
        @N_Y1@ / @NY0@ : Neighbor X_1                         |  // [259]
                                                              |  // [259]
                                                              |  // [259]
            DEX | x_0 , x_1 , y_0 , y_1 , GEO |               |  // [259]
            ARR [ U32 , U32 , U32 , U32 , U32 ]               |  // [259]
        BIN_TOU : 0_1   0_1   0_1   0_1   ___                 |  // [259]
                                                              |  // [259]
                   +---==---+                                 |  // [259]
                   |        |                                 |  // [259]
                   |  N_Y0  |                                 |  // [259]
                   |        |                                 |  // [259]
                   +---==---+                                 |  // [259]
        +---==---+ +---==---+ +---==---+                      |  // [259]
        |        | |        | |        |                      |  // [259]
        |  N_X0  | |  GEOM  | |  N_X1  |                      |  // [259]
        |        | |        | |        |                      |  // [259]
        +---==---+ +---==---+ +---==---+                      |  // [259]
                   +---==---+                                 |  // [259]
                   |        |                                 |  // [259]
                   |  N_Y1  |                                 |  // [259]
                   |        |                                 |  // [259]
                   +---==---+                                 |  // [259]
                                                              |  // [259]
        We need to build an array of 5 tile values            |  // [259]
        of GEOM tile type, so we can calculate                |  // [259]
        the auto tile value to use.                           |  // [259]
                                                              |  // [259]
        But, for this video, let's just try to                |  // [259]
        collect data and draw solid green square              |  // [259]
        if NON-ZERO tile exists in a cell.                    |  // [259]
                                                              |  // [259]
    +---------------------------------------------------------+  // [259]
                                                                 // [259]
    @a5g@ : Array of 5 tile values , g - GEOM  (    _NEED_  )    // [259]
    @a5b@ : Array of 5 tile values , b - BOMB  (_NOT_NEEDED_)    // [259]
    @a5f@ : Array of 5 tile values , f - FADA  (    _NEED_  )    // [259]
                                                                 // [259]
    @_NEED_@ : A variable we will need in the future.            // [259]
    @_NOT_NEEDED_@ : A variable that hypothetically exists,      // [259]
                   : but is NOT NEEDED in our code.              // [259]
                   : For example, BOMB TILE GRAPHICS do not      // [259]
                   : auto tile, so[ a5b ]is _NOT_NEEDED_.        // [259]
                                                                 // [259]
    @ixy@ : Integer_XY , but you might just want to              // [259]
    ::::::: be more specific. Is this a sample coord?            // [259]
    ::::::: Maybe use[ p2k_x_y ].                                // [259]
                                                                 // [259]
    #_G25_RXY_LOOKUP_TABLE_# :--------------------------------+  // [259]
                                                              |  // [259]
        Convert 1D index representing a room cell XY          |  // [259]
        to the[ r4x , r4y ]cell holding the data for          |  // [259]
        that room cell within the[ levelpack /  hotel ].      |  // [259]
                                                              |  // [259]
         __v__ : Void Room                                    |  // [259]
         __o__ : Other Data We Aren't Concered With           |  // [259]
                                                              |  // [259]
        @RENDER_VIEW@ :---------------------------------+     |  // [259]
            +-------+-------+-------+-------+-------+   |     |  // [259]
            |       |       | g25=2 |       |       |   |     |  // [259]
            | __v__ | __v__ | rxy00 | __v__ | __v__ |   |     |  // [259]
            |       |       |       |       |       |   |     |  // [259]
            +-------+-------+-------+-------+-------+   |     |  // [259]
            |       | g25=6 | g25=7 | g25=8 |       |   |     |  // [259]
            | __v__ | rxy01 | rxy02 | rxy03 | __v__ |   |     |  // [259]
            |       |       |       |       |       |   |     |  // [259]
            +-------+-------+-------+-------+-------+   |     |  // [259]
            | g25=10| g25=11| g25=12| g25=13| g25=14|   |     |  // [259]
            | rxy04 | rxy05 | rxy06 | rxy07 | rxy08 |   |     |  // [259]
            |       |       |       |       |       |   |     |  // [259]
            +-------+-------+-------+-------+-------+   |     |  // [259]
            |       | g25=16| g25=17| g25=18|       |   |     |  // [259]
            | __v__ | rxy09 | rxy10 | rxy11 | __v__ |   |     |  // [259]
            |       |       |       |       |       |   |     |  // [259]
            +-------+-------+-------+-------+-------+   |     |  // [259]
            |       |       | g25=22|       |       |   |     |  // [259]
            | __v__ | __v__ | rxy12 | __v__ | __v__ |   |     |  // [259]
            |       |       |       |       |       |   |     |  // [259]
            +-------+-------+-------+-------+-------+   |     |  // [259]
            |                                       |   |     |  // [259]
            |<--------------- c_duh --------------->|   |     |  // [259]
                                                        |     |  // [259]
        +-----------------------------------------------+     |  // [259]
        @DATA_VIEW@ :-----------------------------------+     |  // [259]
                                                        |     |  // [259]
            +-------+-------+-------+-------+ ---=---   |     |  // [259]
            |       |       |       |       |    |      |     |  // [259]
            | rxy00 | rxy01 | rxy02 | rxy03 |    |      |     |  // [259]
            |       |       |       |       |    |      |     |  // [259]
            +-------+-------+-------+-------+    |      |     |  // [259]
            |       |       |       |       |    |      |     |  // [259]
            | rxy04 | rxy05 | rxy06 | rxy07 |    |      |     |  // [259]
            |       |       |       |       |LevelPack  |     |  // [259]
            +-------+-------+-------+-------+   AKA     |     |  // [259]
            |       |       |       |       |  Hotel    |     |  // [259]
            | rxy08 | rxy09 | rxy10 | rxy11 |    |      |     |  // [259]
            |       |       |       |       |    |      |     |  // [259]
            +-------+-------+-------+-------+    |      |     |  // [259]
            |       |       |       |       |    |      |     |  // [259]
            | rxy12 | __o__ | __o__ | __o__ |    |      |     |  // [259]
            |       |       |       |       |    |      |     |  // [259]
            +-------+-------+-------+-------+ ---=---   |     |  // [259]
            |<-128->|                       |           |     |  // [259]
            |<-------------512------------->|           |     |  // [259]
        +-----------------------------------------------+     |  // [259]
        @CODE_VIEW@ :-----------------------------------+     |  // [259]
                                                        |     |  // [259]
            UV2 d_g25_rxy[ 25 ]=UV2[ 25 ](              |     |  // [259]
                                                        |     |  // [259]
                ( _v_ ),( _v_ ),(rxy00),( _v_ ),( _v_ ) |     |  // [259]
            ,   ( _v_ ),(rxy01),(rxy02),(rxy03),( _v_ ) |     |  // [259]
            ,   (rxy04),(rxy05),(rxy06),(rxy07),(rxy08) |     |  // [259]
            ,   ( _v_ ),(rxy09),(rxy10),(rxy11),( _v_ ) |     |  // [259]
            ,   ( _v_ ),( _v_ ),(rxy12),( _v_ ),( _v_ ) |     |  // [259]
            );//:@NESC@://                              |     |  // [259]
        +-----------------------------------------------+     |  // [259]
                                                              |  // [259]
        rxy00 ==( 0 , 0 ) ( Data View Coordinate )            |  // [259]
        rxy01 ==( 1 , 0 ) ( Data View Coordinate )            |  // [259]
        rxy02 ==( 2 , 0 ) ( Data View Coordinate )            |  // [259]
        rxy03 ==( 3 , 0 ) ( Data View Coordinate )            |  // [259]
                                                              |  // [259]
        rxy04 ==( 0 , 1 ) ( Data View Coordinate )            |  // [259]
        rxy05 ==( 1 , 1 ) ( Data View Coordinate )            |  // [259]
        rxy06 ==( 2 , 1 ) ( Data View Coordinate )            |  // [259]
        rxy07 ==( 3 , 1 ) ( Data View Coordinate )            |  // [259]
                                                              |  // [259]
        rxy08 ==( 0 , 2 ) ( Data View Coordinate )            |  // [259]
        rxy09 ==( 1 , 2 ) ( Data View Coordinate )            |  // [259]
        rxy10 ==( 2 , 2 ) ( Data View Coordinate )            |  // [259]
        rxy11 ==( 3 , 2 ) ( Data View Coordinate )            |  // [259]
                                                              |  // [259]
        rxy12 ==( 0 , 0 ) ( Data View Coordinate )            |  // [259]
                                                              |  // [259]
                                                              |  // [259]
        @d_g25_rxy@ : Converts( g25 )to( rxy )value.          |  // [259]
                    : where[ rxy ]is[ ( r4x, r4y ) ].         |  // [259]
                                                              |  // [259]
    +------------------------------: #_G25_RXY_LOOKUP_TABLE_# +  // [259]
    +---------------------------------------------------------+  // [259]
    +---------------------------------------------------------+  // [259]
    #_4_BITS_FOR_16_DECALS_# :--------------------------------+  // [259]
                                                              |  // [259]
        @FEATURE@ @SLATED_FEATURE@                            |  // [259]
                                                              |  // [259]
        16 tile types                                         |  // [259]
        16 conceptual sub-tiles per tile type when auto tiling|  // [259]
        16 decals                                             |  // [259]
                                                              |  // [259]
        16*16*16 === 4096 possible unique graphics            |  // [259]
                     can be represented when combining        |  // [259]
                     all of these things.                     |  // [259]
                                                              |  // [259]
        Don't be tempted to make 255 decals. 16 decals        |  // [259]
        is enough. We want a rich and detailed game           |  // [259]
        by taking little things and combining them.           |  // [259]
                                                              |  // [259]
        So like... "Emergant Behavior" but more like          |  // [259]
        "Emergant Design".                                    |  // [259]
                                                              |  // [259]
                                                              |  // [259]
        Thinking about how I want to paint with decals,       |  // [259]
        I think the DECALS should auto-tile as well.          |  // [259]
                                                              |  // [259]
                                                              |  // [259]
        | ___T___   ___D___ |                                 |  // [259]
        [ 1111 11 | 1111 11 | ...the other 20 bits ... ]      |  // [259]
                                                              |  // [259]
        ___T___ : Tile  Value & Auto Tile Method              |  // [259]
        ___D___ : Decal Value & Auto Tile Method              |  // [259]
                                                              |  // [259]
                                                              |  // [259]
                                                              |  // [259]
    +---------------------------------------------------------+  // [259]
    #_IMGUR_STRATEGY_# :--------------------------------------+  // [259]
                                                              |  // [259]
        Post something viral in a gallery, but then           |  // [259]
        put screenshot of the game you are working            |  // [259]
        on beneath it to convert some people who              |  // [259]
        are watching viral imgur post to people               |  // [259]
        who will follow your programming channel.             |  // [259]
    +---------------------------------------------------------+  // [259]
                                                                 // [259]
    @FEATURE@ : Denoting a feature I want in the game.           // [259]
    @SLATED_FEATURE@ : Synonymouse with @FEATURE@                // [259]
                                                                 // [259]
    @lam_geo@ : Lateral Multiplier - GEOM tile layer.            // [259]
    @lam_bom@ : Lateral Multiplier - BOMB tile layer.            // [259]
    @lam_fad@ : Lateral Multiplier - FADA tile layer.            // [259]
                                                                 // [259]
    #__LAM_GEO__# :-------------------------------------------+  // [259]
                                                              |  // [259]
        Because geometry tile layer is at tile [0,0]          |  // [259]
        we do not have to apply a lateral offset.             |  // [259]
        Without a lateral offset need, we don't have          |  // [259]
        to look up the[ lat ]value nor do we need             |  // [259]
        to lookup[ lmx ]or[ lmy ].                            |  // [259]
                                                              |  // [259]
        BUT ONLY BEAUSE WE ARE RENDERING ONLY GEOMETRY        |  // [259]
        TILES HERE. IF WE SWITCH TO OTHER TILES SUCH          |  // [259]
        AS[ BOMB ]OR[ FADA ]WE WILL NEED TO ADD               |  // [259]
        LATERAL OFFSET TO CALCULATIONS.                       |  // [259]
    +---------------------------------------------------------+  // [259]
                                                                 // [259]
    @PAIRED_COMMENT@ : Identical comment exists in two places.   // [259]
                     : You need to keep it that way, we are      // [259]
                     : denoting a connection.                    // [259]
                                                                 // [259]
    @RENDER_VIEW@ : Where things are geometrically positioned    // [259]
                  : in the render, as the player sees them.      // [259]
                                                                 // [259]
    @DATA_VIEW@   : Where things are geometrically positioned    // [259]
                  : in the DATA LAYOUT , as the programmer       // [259]
                  : needs to fetch them. So basically, where     // [259]
                  : are the pixels located on my texture         // [259]
                  : that encode the thing I am looking for?      // [259]
                                                                 // [259]
    @CODE_VIEW@   : An actual code example explaining the        // [259]
                  : diagrams in @RENDER_VIEW@ or                 // [259]
                  : @DATA_VIEW@                                  // [259]
                                                                 // [259]
    #_TE7_TO_DIAGONAL_OFFSET_LOOKUP_TABLE_# :-----------------+  // [259]
                                                              |  // [259]
       DIA : Diagonal Offset To Data For The Current          |  // [259]
           : Same-Sized Cluster Of 3 Tile Types.              |  // [259]
                                                              |  // [259]
       D00 : Diagonal_Offset_Of [ 0, 0] For_The_3_Material    |  // [259]
           : Layers_Of_Size te7:0.                            |  // [259]
                                                              |  // [259]
       D64 : Diagonal_Offset_Of [64,64] For_The_3_Material    |  // [259]
           : Layers_Of_Size te7:1.                            |  // [259]
                                                              |  // [259]
       D96 : Diagonal_Offset_Of [96,96] For_The_3_Material    |  // [259]
           : Layers_Of_Size te7:2.                            |  // [259]
                                                              |  // [259]
       D## : Other diagonal offsets not shown in diagam.      |  // [259]
           : ALL DIAGONAL OFFSETS :--------------------+      |  // [259]
           :                                           |      |  // [259]
           : D000 : c_dia_000 ===   0  ( D00 )         |      |  // [259]
           : D064 : c_dia_001 ===  64  ( D64 )         |      |  // [259]
           : D096 : c_dia_002 ===  96  ( D96 )         |      |  // [259]
           : D112 : c_dia_003 === 112                  |      |  // [259]
           : D120 : c_dia_004 === 120                  |      |  // [259]
           : D124 : c_dia_005 === 124                  |      |  // [259]
           : D126 : c_dia_006 === 126                  |      |  // [259]
           :-------------------------------------------+      |  // [259]
                                                              |  // [259]
       D00--=---=---=---+ +---=---=---=---+ |----==----|      |  // [259]
        |               | |               |  |   ||           |  // [259]
        +               + +               +  |   ||           |  // [259]
        |      dia      | |      dia      |  |   ||           |  // [259]
        +      000      + +      000      +  64  ||           |  // [259]
        |               | |               |  |   ||           |  // [259]
        +               + +               +  |   ||           |  // [259]
        |               | |               |  |   ||           |  // [259]
        +---=---=---=---+ +---=---=---=---+ -=- 128           |  // [259]
        +---=---=---=---+D64--=---=---=---+      ||           |  // [259]
        |               | |       |       |      ||           |  // [259]
        +               + +  064  =  064  +      ||           |  // [259]
        |      dia      | |       |       |      ||           |  // [259]
        +      000      + +---=--D96--=---+      ||           |  // [259]
        |               | |       |096|096|      ||           |  // [259]
        +               + +  064  =---=---+      ||           |  // [259]
        |               | |       |096|   |      ||           |  // [259]
        +---=---=---=---+ +---=---=---=---+ |----==----|      |  // [259]
        |<----- 64 ---->|                 |                   |  // [259]
        |<------------- 128 ------------->|                   |  // [259]
                                                              |  // [259]
       D00                                                    |  // [259]
        @---=---=---=---+---=---=---=---+                     |  // [259]
        |                               |                     |  // [259]
        +                               +                     |  // [259]
        |                               |                     |  // [259]
        +                               +                     |  // [259]
        |                               |                     |  // [259]
        +                               +                     |  // [259]
        |                               |                     |  // [259]
        +               +---=---=---=---+                     |  // [259]
        |               |  D64                                |  // [259]
        +               +   @---=---=---=---+                 |  // [259]
        |               |   |\              |                 |  // [259]
        +               +   + [dia === 64 ] +                 |  // [259]
        |               |   |               |                 |  // [259]
        +               +   +       +---=---+                 |  // [259]
        |               |   |       |  D96                    |  // [259]
        +---=---=---=---+   +       =   @---=---+             |  // [259]
                            |       |   |       |             |  // [259]
                            +---=---+   =   +---+             |  // [259]
                                        |   |                 |  // [259]
                                        +---+                 |  // [259]
                                                              |  // [259]
                                                              |  // [259]
        +---=---=---=---+---=---=---=---+                     |  // [259]
        |               .               |                     |  // [259]
        +               .               +                     |  // [259]
        |     dia:0     .     dia:0     |                     |  // [259]
        +     te7:0     .     te7:0     +                     |  // [259]
        |     la3:0     .     la3:1     |                     |  // [259]
        +               .               +                     |  // [259]
        |  (small GEO)  .  (small BOM)  |                     |  // [259]
        +. . . . . . . .+---=---=---=---+                     |  // [259]
        |               |                                     |  // [259]
        +               +   +---=---=---=---+                 |  // [259]
        |     dia:0     |   | dia:64. dia:64|                 |  // [259]
        +     te7:0     +   + te7:1 . te7:1 +                 |  // [259]
        |     la3:2     |   | la3:0 . la3:1 |                 |  // [259]
        +               +   +. . . .+---=---+                 |  // [259]
        |  (small FAD)  |   | dia:64|                         |  // [259]
        +---=---=---=---+   + te7:1 =   +---=---+             |  // [259]
                            | la3:2 |   |_A_|_B_|             |  // [259]
                            +---=---+   =...+---+             |  // [259]
                                        |_C_|                 |  // [259]
                                        +---+                 |  // [259]
        [_A_]:----------+   [_B_]:----------+                 |  // [259]
             |          |        |          |                 |  // [259]
             |  dia:96  |        |  dia:96  |                 |  // [259]
             |  te7:2   |        |  te7:2   |                 |  // [259]
             |  la3:0   |        |  la3:1   |                 |  // [259]
             |          |        |          |                 |  // [259]
             +----------+        +----------+                 |  // [259]
                                                              |  // [259]
        [_C_]:----------+                                     |  // [259]
             |          |                                     |  // [259]
             |  dia:96  |                                     |  // [259]
             |  te7:2   |                                     |  // [259]
             |  la3:2   |                                     |  // [259]
             |          |                                     |  // [259]
             +----------+                                     |  // [259]
                                                              |  // [259]
    :---------------: #_TE7_TO_DIAGONAL_OFFSET_LOOKUP_TABLE_# +  // [259]
    #__For_Layers_Other_Than_Zero__#:-------------------------+  // [259]
                                                              |  // [259]
        p2k_x_y +=( lat * lmx );                              |  // [259]
        p2k_x_y +=( lat * lmy );                              |  // [259]
                                                              |  // [259]
        We don't have to offset to the correct tile           |  // [259]
        layer if we are only looking at geometry layer.       |  // [259]
                                                              |  // [259]
                                                              |  // [259]
        GENERIC FORM:------------------+                      |  // [259]
                                       |                      |  // [259]
            p2k_x_y +=( lat * lmx );   |                      |  // [259]
            p2k_x_y +=( lat * lmy );   |                      |  // [259]
        +------------------------------+                      |  // [259]
        GEOM LAYER  :------------------+                      |  // [259]
                                       |                      |  // [259]
            p2k_x_y +=( lat *  0  );   |                      |  // [259]
            p2k_x_y +=( lat *  0  );   |                      |  // [259]
        +------------------------------+                      |  // [259]
        BOMB LAYER  :------------------+                      |  // [259]
                                       |                      |  // [259]
            p2k_x_y +=( lat *  1  );   |                      |  // [259]
            p2k_x_y +=( lat *  0  );   |                      |  // [259]
        +------------------------------+                      |  // [259]
        BOMB LAYER  :------------------+                      |  // [259]
                                       |                      |  // [259]
            p2k_x_y +=( lat *  0  );   |                      |  // [259]
            p2k_x_y +=( lat *  1  );   |                      |  // [259]
        +------------------------------+                      |  // [259]
        INVALID CALCULATION :----------+                      |  // [259]
                                       |                      |  // [259]
            p2k_x_y +=( lat *  1  );   |                      |  // [259]
            p2k_x_y +=( lat *  1  );   |                      |  // [259]
        +------------------------------+                      |  // [259]
                                                              |  // [259]
    +---------------------------------------------------------+  // [259]
    @badduck@ : youtube.com/channel/UCD7su0UF7u8qApkLJEO-Iqw     // [259]
                                                                 // [---]
    #_TE7_TO_LATERAL_OFFSET_# :-------------------------------+  // [261]
                                                              |  // [261]
        |<------------------0128------------------>|          |  // [261]
        |<-------064------->|                      |          |  // [261]
        |                   |                      |          |  // [261]
        +-==-+-==-+-==-+-==-+  +-==-+-==-+-==-+-==-+          |  // [261]
        |                   |  |                   |          |  // [261]
        +                   +  +                   +          |  // [261]
        |      te7:000      |  |      te7:000      |          |  // [261]
        +      -------      +  +      -------      +          |  // [261]
        |      lat:064      |  |      lat:064      |          |  // [261]
        +                   +  +                   +          |  // [261]
        |                   |  |                   |          |  // [261]
        +-==-+-==-+-==-+-==-+  +-==-+-==-+-==-+-==-+          |  // [261]
                                                              |  // [261]
        +-==-+-==-+-==-+-==-+  +-==-+-==-+-==-+-==-+          |  // [261]
        |                   |  | te7:001 | te7:001 |          |  // [261]
        +                   +  + ------- + ------- +          |  // [261]
        |      te7:000      |  | lat:032 | lat:032 |          |  // [261]
        +      -------      +  +-==-+-==-+-==-+-==-+          |  // [261]
        |      lat:064      |  | te7:001 | 16 | 16 |          |  // [261]
        +                   +  + ------- +-==-+-==-+          |  // [261]
        |                   |  | lat:032 | 16 |               |  // [261]
        +-==-+-==-+-==-+-==-+  +-==-+-==-+-==-+  ...ETC...    |  // [261]
                               |         |    |               |  // [261]
                               |<--032-->| 16 |               |  // [261]
    +---------------------------------------------------------+  // [261]
    #_RANDOM_THOUGHTS_001_# :---------------------------------+  // [261]
                                                              |  // [261]
        Somone seems to be getting hostile with me on         |  // [261]
        facebook. Should I ask:                               |  // [261]
                                                              |  // [261]
        "Did I do something to you? You seem kind of  "       |  // [261]
        "hostile. But I always try to assume the      "       |  // [261]
        "best of people when I don't know. And        "       |  // [261]
        "communication on the internet can be kind    "       |  // [261]
        "of ambigious because of the lack of tonality."       |  // [261]
                                                              |  // [261]
        Then... say...                                        |  // [261]
                                                              |  // [261]
        "I am making an MMO using JavaScript ? Can you"       |  // [261]
        "take a quick look at my youtube channel and  "       |  // [261]
        "give me some constructive feedback?          "       |  // [261]
        "Seems like you are full of opinions.         "       |  // [261]
                                                              |  // [261]
        Remember, the people who hate you most give the       |  // [261]
        most honest opinions.                                 |  // [261]
                                                              |  // [261]
    +---------------------------------------------------------+  // [261]
    #_ME_AND_MY_4_FRIENDS_# :---------------------------------+  // [261]
                                                              |  // [261]
        Grabbing current tile, and the surrounding            |  // [261]
        4 adjacent neighbor tiles. Needed to do               |  // [261]
        standard wang-tile auto-tiling.                       |  // [261]
                                                              |  // [261]
        Is it really called "wang-tile" auto tiling, or       |  // [261]
        is that a different type of tessilation that          |  // [261]
        I am confusing for auto-tiling because I had          |  // [261]
        no good name to describe this type of auto-tiling?    |  // [261]
                                                              |  // [261]
        How about we call it:                                 |  // [261]
                                                              |  // [261]
        "Adam Atomic Auto Tiling"                             |  // [261]
        Or                                                    |  // [261]
        "Flixel Style Auto Tiling"                            |  // [261]
                                                              |  // [261]
        From now on.                                          |  // [261]
                                                              |  // [261]
    +---------------------------------------------------------+  // [261]
    #_UNDEF_INJECTION_# :-------------------------------------+  // [261]
                                                              |  // [261]
        Because our GLSL shader strings are inside of         |  // [261]
        JAVASCRIPT templating strings, we could create        |  // [261]
        a way to inject all of the #undef directives          |  // [261]
        we need in order to get :                             |  // [261]
                                                              |  // [261]
            MORE_THAN_ONE_UNDEF_PER_LINE                      |  // [261]
                                                              |  // [261]
        Because #undef makes my code longer than              |  // [261]
        it really needs to be.                                |  // [261]
    +---------------------------------------------------------+  // [261]

    @FIX_004@ / #FIX_004# :-----------------------------------+  // [262]
                                                              |  // [262]
        We needed to subtract the inset multiplied by         |  // [262]
        TWO(2) from the tile address space because we         |  // [262]
        are insetting on __BOTH__ sides.                      |  // [262]
                                                              |  // [262]
        |<------------_UR_------------>|                      |  // [262]
        [0...25......50......75.....100] <--Set Of Values(SOV)|  // [262]
        +--==--++--==--++--==--++--==--+                      |  // [262]
        |  25  ||  25  ||  25  ||  25  |                      |  // [262]
        |      ||      ||      ||      |                      |  // [262]
        +--==--++--==--++--==--++--==--+    +--==--++--==--+  |  // [262]
        |      ||              ||      |    |              |  |  // [262]
        |      ||              ||      |    |              |  |  // [262]
        +--==--++              ++--==--+    +     MRWI     +  |  // [262]
        |      ||              ||      |    |              |  |  // [262]
        |      ||              ||      |    |              |  |  // [262]
        +--==--++--==--++--==--++--==--+    +--==--++--==--+  |  // [262]
        |      ||      ||      ||      |                      |  // [262]
        |      ||      ||      ||      |                      |  // [262]
        +--==--++--==--++--==--++--==--+                      |  // [262]
                |<--- MRWI --->|                              |  // [262]
                                                              |  // [262]
        _UR_ : Unmodified Range[ 0 to 100 discrete units ]    |  // [262]
                                                              |  // [262]
        MRWI : Modified Range with inset. 0 to 50 units.      |  // [262]
                                                              |  // [262]
        To get[ MRWI ]we need to SUBTRACT the inset           |  // [262]
        from _UR_ so that it takes time to get into           |  // [262]
        the valid[ 0 -to- 50 ]range.                          |  // [262]
                                                              |  // [262]
        We then need to do our percent calculations as :      |  // [262]
                                                              |  // [262]
            REMAPPED PER === ( SOV - I ) / MRWI               |  // [262]
                                                              |  // [262]
        Instead of , original range :                         |  // [262]
                                                              |  // [262]
            ORIGINAL PER === ( SOV - 0 ) / _UR_               |  // [262]
                                                              |  // [262]
        As the calculations are currently written,            |  // [262]
        I am suprised we are not getting weird                |  // [262]
        results from integer underflow with lines:            |  // [262]
                                                              |  // [262]
        f_pil = D*u_02 >= T ? ( F(T7D[ 6 ]-I) / M6 )          |  // [262]
            :   D*u_04 >= T ? ( F(T7D[ 5 ]-I) / M5 )          |  // [262]
            :   D*u_08 >= T ? ( F(T7D[ 4 ]-I) / M4 )          |  // [262]
            :   D*u_16 >= T ? ( F(T7D[ 3 ]-I) / M3 )          |  // [262]
            :   D*u_32 >= T ? ( F(T7D[ 2 ]-I) / M2 )          |  // [262]
            :   D*u_64 >= T ? ( F(T7D[ 1 ]-I) / M1 )          |  // [262]
            :                 ( F(T7D[ 0 ]-I) / M0 )          |  // [262]
            ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;          |  // [262]
                                                              |  // [262]
        If the grid ever looks wrong on someone's             |  // [262]
        graphics card, the code above is where I              |  // [262]
        would investigate. The MINUS_EYE( -I )                |  // [262]
        looks like it could do weird underflow                |  // [262]
        stuff.                                                |  // [262]
                                                              |  // [262]
    +---------------------------------------------------------+  // [262]
    #_FRONT_TO_BACK_OCCLUDE_# :-------------------------------+  // [262]
                                                              |  // [262]
        We loop "front to back" from SMALLEST TILE SIZE       |  // [262]
        ( te7===0 ) to LARGEST TILE SIZE( te7===6 ), then     |  // [262]
        we can do rudimentary alpha occlusion.                |  // [262]
                                                              |  // [262]
        After trying alpha compositing... I find it a         |  // [262]
        bit hard to get the math correct. And the math        |  // [262]
        seems a bit... EXPENSIVE... So let's stick with       |  // [262]
        simple occlusion without proper transparency          |  // [262]
        effects until we get the renderer looking             |  // [262]
        better.                                               |  // [262]
                                                              |  // [262]
    :---------------------------------------------------------+  // [262]
    #_ADD_BACKGROUND_LOD_GRID_# :-----------------------------+  // [262]
                                                              |  // [262]
        If no tile geometry is present on the current         |  // [262]
        sample point, draw the[ BATHROOM_TILE_GRID ]          |  // [262]
        which denotes[ EMPTY_TILE_SPACE ].                    |  // [262]
                                                              |  // [262]
    +---------------------------------------------------------+  // [262]
    @BATHROOM_TILE_GRID@ : Me referring to the white and         // [262]
                         : black "anti-grid" denoting where      // [262]
                         : tiles can be set in "THE_DUM".        // [262]
                                                                 // [262]
    @EMPTY_TILE_SPACE@ ::: Space that is empty, where tiles      // [262]
                       ::: could exist. As apposed to space      // [262]
                       ::: where tiles could NEVER_EXIST.        // [262]
                                                                 // [262]
    @VOID_SPACE@ ::::::::: Space where tiles physically          // [262]
                 ::::::::: cannot exist. Going into this         // [262]
                 ::::::::: space kills the player via            // [262]
                 ::::::::: FMABH's "Eye Of God".                 // [262]
                 :::::::::                                       // [262]
    @EYE_OF_GOD@ :SEE[ https://i.imgur.com/K762zSK.jpg        ]  // [262]
                 :SEE[ http://www.newkabbalah.com/einsof.html ]  // [262]
                 :SEE[ https://fma.fandom.com/wiki/Eye_of_God ]  // [262]
                                                                 // [262]
    #_FRONT_TO_BACK_RENDERING_# :-----------------------------+  // [262]
                                                              |  // [262]
                                                              |  // [262]
        B_T_F___TE7 : 0 , 1 , 2 , 3 , 4 , 5 , 6               |  // [262]
        F_T_B___TE7 : 6 , 5 , 4 , 3 , 2 , 1 , 0               |  // [262]
                                                              |  // [262]
        Looping through geometry to render from CLOSEST       |  // [262]
        to camera to FURTHEST to camera so that we can        |  // [262]
        occlude objects behind other objects.                 |  // [262]
                                                              |  // [262]
        This WOULD BE a performance optimization is we        |  // [262]
        were doing multiple draw calls and creating some      |  // [262]
        type of stencil mask...                               |  // [262]
                                                              |  // [262]
        HOWEVER... Since we are doing this all in one         |  // [262]
        shader in one draw call and SHADERS_CANT_BRANCH,      |  // [262]
        this really is only a logic simplification,           |  // [262]
        not an optimization.                                  |  // [262]
    +---------------------------------------------------------+  // [262]
                                                                 // [262]
    @SHADERS_CANT_BRANCH@ : This is changing. But to be on       // [262]
                          : the safe side, you should            // [262]
                          : assume this.                         // [262]
                                                                 // [262]
    @B_T_F___TE7@ : Back_To_Front , TE7 values in order.         // [262]
    @F_T_B___TE7@ : Front_To_Back , TE7 values in order.         // [262]
                                                                 // [262]
    #_WHY_THE_FUCK_DOES_THIS_WORK_# :-------------------------+  // [262]
                                                              |  // [262]
        The render only works when we render BACK TO FRONT.   |  // [262]
        Rendering FRONT TO BACK is failing to have any        |  // [262]
        tile geometry show up.                                |  // [262]
                                                              |  // [262]
        WHAT THE FUCKING HELL?                                |  // [262]
                                                              |  // [262]
        So now we have two bugs.                              |  // [262]
                                                              |  // [262]
        1. BUG_2022_09_13_001 : Sub Texture Push              |  // [262]
        2. BUG_2022_09_13_002 : Front To Back Render Fail     |  // [262]
                                                              |  // [262]
        When we fix the bug, we can re-name the               |  // [262]
        section of code marked with this marker               |  // [262]
        as[ _FRONT_TO_BACK_RENDERING_ ].                      |  // [262]
                                                              |  // [262]
        oh... Because I forgot to... Fuck... Hell...          |  // [262]
                                                              |  // [262]
    +---------------------------------------------------------+  // [262]
                                                                 // [262]
    @IMF_FTB@ : InlinedMacroFunction_FrontToBack(Rendering)      // [262]
    @IMF_BTF@ : InlinedMacroFunction_BackToFront(Rendering)      // [262]
                                                                 // [262]
    @FTB@ ::::: Front_To_Back ( rendering / drawing order )      // [262]
    @BTF@ ::::: Back_To_Front ( rendering / drawing order )      // [262]

    #_SLEEPOVER_AT_GEOS_HOUSE_# :-----------------------------+  // [263]
                                                              |  // [263]
        Everyone get into their 4-bit pajamas and then        |  // [263]
        snuggle up and watch movies and make a bit            |  // [263]
        packed blood pack by slitting your palms and          |  // [263]
        putting the blood into "GEO"'s cup.                   |  // [263]
                                                              |  // [263]
        The auto-tiling ceremony can only happen if           |  // [263]
        GEO is home.                                          |  // [263]
                                                              |  // [263]
                                                              |  // [263]
        @u_v16@ : A tile value [ 0 -to- (16-1) ]Inclusive.    |  // [263]
                : Uses the 4 most significant bits of         |  // [263]
                : U32 value.                                  |  // [263]
                                                              |  // [263]
        @u_atm@ : WRONG_SPELLING_USE[ u_am4 ]                 |  // [283]
        @u_am4@ : The 2 bit auto tiling method[ enum/flags ]. |  // [283][REF][263]
                : It can be used as an "enum" or array of     |  // [263]
                : 2-bit flags.                                |  // [263]
                                                              |  // [263]
                                                              |  // [263]
           |<-----M_G----->|<---B_G--->|<---F_G--->|          |  // [283][REF][263]
        U32[ 1111     1111 | 1111 1111 | 1111 1111 | ??.. ]   |  // [283][REF][263]
             ||||     ||||                                    |  // [283][REF][263]
            u_v16     u_am4                                   |  // [283][REF][263]
             ||||     ||||                                    |  // [283][--------]
             |<- u_vff ->|                                    |  // [283][--------]
                                                              |  // [263]
            M_G : Midground, where the action is.             |  // [263]
            B_G : Un movable background. @MAYBE_FEATURE@      |  // [263]
            F_G : Un movable foreground. @MAYBE_FEATURE@      |  // [263]
                                                              |  // [263]
            Background and foreground graphics in our         |  // [263]
            level designs could help make things look         |  // [263]
            much better. We should consider it.               |  // [263]
                                                              |  // [263]
            It does make the ordering WEIRD.                  |  // [263]
                                                              |  // [263]
            ORDER[ M_G , B_G , F_G ]                          |  // [263]
                                                              |  // [263]
            But, think of them being ordered by "IMPORTANCE"  |  // [263]
            rather than DEPTH.                                |  // [263]
                                                              |  // [263]
        @IMPORTANTCE@ : You mean[ IMPORTANCE ].               |  // [263]
        @MAYBE_FEATURE@ : Don't take this part of diagram     |  // [263]
                        : as word of KANJI_CODER , may change |  // [263]
                        : mind as I develop the code.         |  // [263]
                                                              |  // [263]
    +---------------------------------------------------------+  // [263]
    #_WHAT_DO_YOU_CALL_A_HALF_NYBLE_# :-----------------------+  // [263]
                                                              |  // [263]
        https://en.wikipedia.org/wiki/Units_of_information    |  // [263]
        #Obsolete_and_unusual_units                           |  // [263]
                                                              |  // [263]
        001_bit : unibit | sniff                              |  // [263]
        002_bits: dibit  | crumb  | quartic digit             |  // [263]
                : quad   | quarter| taste | tayste | tidbit   |  // [263]
                : tydbit | lick   | lyck  |  semi-nibble      |  // [263]
                : nyp    | snort                              |  // [263]
        003_bits: tribit | triad | triade | tribble           |  // [263]
                                                              |  // [263]
        004_bits: nyble | nibble ( @KANJI_CODER_EDIT@ )       |  // [263]
                                                              |  // [263]
        005_bits: pentad | pentade | nickel | nyckle          |  // [263]
                                                              |  // [263]
        006_bits: hexad | hexade | sextet   @SEX@[ 1111  11 ] |  // [263]
        007_bits: heptad| heptade                  V16   ||   |  // [283][263]
        008_bits: octet | byte                           ||   |  // [283][263]
                                            @OLD_ATM_FIELD@   |  // [283][263]
        009_bits: nonet                                       |  // [263]
                                                              |  // [263]
        010_bits: declet | decle | deckle | dyme              |  // [263]
        012_bits: slab                                        |  // [263]
        015_bits: parcel                                      |  // [263]
        016_bits: doublet | wyde | parcel | plate | playte    |  // [263]
                : chomp | chawmp                              |  // [263]
        018_bits: chomp | chawmp                              |  // [263]
                                                              |  // [263]
        032_bits: quadlet | tetra | dinner | dynner | gawble  |  // [263]
        048_bits: gobble  | gawble                            |  // [263]
        064_bits: octlet  | octa                              |  // [263]
        096_bits: bentobox                                    |  // [263]
        128_bits: hexlet                                      |  // [263]
                                                              |  // [263]
        016_bytes : paragraph                                 |  // [263]
        256_bytes : page                                      |  // [263]
        006_trits : tryte                                     |  // [263]
        ???_combit: comword                                   |  // [263]
    +---------------------------------------------------------+  // [263]
                                                                 // [263]
    @KANJI_CODER_EDIT@ : Modified the source of information      // [263]
                       : in some way to my needs. For example,   // [263]
                       : [ 004_bits ]never mentioned[ nyble ]    // [263]
                       : or[ nibble ]on wikipedia.               // [263]
                                                                 // [263]
    @IMF_A5G_TX0@ : A5G____Touching - X_0 ? ( 0 or 1 bit )       // [263]
    @IMF_A5G_TX1@ : A5G____Touching : X_1 ? ( 0 or 1 bit )       // [263]
    @IMF_A5G_TY0@ : A5G____Touching : Y_0 ? ( 0 or 1 bit )       // [263]
    @IMF_A5G_TY1@ : A5G____Touching : Y_1 ? ( 0 or 1 bit )       // [263]
                                                                 // [263]
    #_USE_AM4_DIAGRAM_# :-------------------------------------+  // [283][REF][263]
                                   TAG[ _USE_AM4_ONN_    ]    |  // [317][263][---]
                                   TAG[ _USE__AM4__ONN__ ]    |  // [317][--------] 
                                   TAG[ AM4_STYLE_TO4    ]    |  // [317][--------]
            :--------------------------------------------:    |  // [283][---][263]
            : Use Autotiling_Method_4bits                |    |  // [283][REF][263]
            : 0 : A_M_4 === MEAN_NEIGHBOR                |    |  // [283][REF][263]
            : 1 : A_M_4 === VERTICAL_CLUB                |    |  // [283][REF][263]
            : 2 : A_M_4 === HOR______CLUB                |    |  // [283][REF][263]
            : 3 : A_M_4 === ORGY_____CLUB                |    |  // [283][REF][263]
            :                                            |    |  // [283][---][263]
            :    | HOR_BIT | VER_BIT | HOR_MIR | VER_MIR |       // [283][---][263]
            :    |    X    |    Y    |    X         Y    |    |  // [283][---][263]
            : BIN[    ?    |    ?    |    ?    |    ?    |    |  // [283][---][263]
            : NON[    0    |    0    |   0|1   |   0|1   |    |  // [283][---][263]
            : VER[    0    |    1    |   0|1   |   0|1   |    |  // [283][---][263]
            : HOR[    1    |    0    |   0|1   |   0|1   |    |  // [283][---][263]
            : ALL[    1    |    1    |    1    |    1    |    |  // [283][---][263]
            :--------------------------------------------:    |  // [283][---][263]
                                                              |  // [-------------]
        If ( USE_AM4 >= 1 ) then we will compile the code     |  // [283][REF][263]
        that implements "auto tiling methods".                |  // [263]
                                                              |  // [263]
        The standard auto tiling method is to look for        |  // [263]
        your 4 neighbors. But we can have 4 total variations. |  // [263]
                                                              |  // [263]
        AM4_000 : Auto Tile With NOTHING , mean neighbor.     |  // [283][REF][263]
        AM4_001 : Auto Tile only with[ Above + Below ]        |  // [283][REF][263]
        AM4_002 : Auto Tile only with[ Left  + Right ]        |  // [283][REF][263]
        AM4_003 : Auto Tile With EVERYONE ( L,R,U,D )         |  // [283][REF][263]
                                                              |  // [263]
        Bits are in[ network_bit_order ]and can be            |  // [263]
        used on their own as flags for if you should          |  // [263]
        check vertical or horizontal neighbors.               |  // [263]
                                                              |  // [263]
        0X2_____BIT : Should we check horizontal neighbor?    |  // [263]
        0X1_____BIT : Should we check vertical   neighbor?    |  // [263]
    +---------------------------------------------------------+  // [263]
                                                                 // [263]
    @HOR_BIT@ : Use[ BIT_HOR ]( General To Specific )            // [263]
    @VER_BIT@ : Use[ BIT_VER ]( General To Specific )            // [263]
                                                                 // [263]
    @BIT_HOR@ : Horizontal Bit Flag For Auto Tiling. BIN[10]     // [263]
    @BIT_VER@ : vertical   Bit Flag For Auto Tiling. BIN[01]     // [263]
                                                                 // [263]
    @__auto_tile_constants__@ :-------------------------------+  // [263]
                                                              |  // [263]
        Constants for implementing our auto tiling code.      |  // [263]
                                                              |  // [263]
    +---------------------------------------------------------+  // [263]
    #__auto_tile_constants__# :-------------------------------+  // [263]
                                                              |  // [263]
        Auto_Tile_Constants_Diagrams :                        |  // [263]
                                                              |  // [263]
            [ 1 ] : [_USE_AM4_DIAGRAM_]                       |  // [283][REF][263]
                                                              |  // [263]
    :---------------------------------------------------------+  // [263]
    #_SLEEPOVER_AT_GROVERS_HOUSE_# :--------------------------+  // [263]
                                                              |  // [263]
        YOU_MEAN[ #_SLEEPOVER_AT_GEOS_HOUSE_# ]               |  // [263]
    +---------------------------------------------------------+  // [263]
                                                                 // [263]
    @POS_NBO@ : Position in Network_[bit|byte]_Order             // [263]
    @POS_ABI@ : Position - Actual_Bit_Index                      // [263]
                                                                 // [263]
    @NBO_X_0@ : NetworkBitOrder___indexOf : X_0                  // [263]
    @NBO_X_1@ : NetworkBitOrder___indexOf : X_1                  // [263]
    @NBO_Y_0@ : NetworkBitOrder___indexOf : Y_0                  // [263]
    @NBO_Y_1@ : NetworkBitOrder___indexOf : Y_1                  // [263]
                                                                 // [263]
    #_AM4_BIT_TURN_OFF_# :------------------------------------+  // [283][REF][263]
                                                              |  // [263]
                    +----=----+                               |  // [263]
                    |         |                               |  // [263]
                    | a5g_y_0 |                               |  // [263]
                    |         |                               |  // [263]
                    +----=----+                               |  // [263]
        +----=----+ +----=----+ +----=----+                   |  // [263]
        |         | |         | |         |                   |  // [263]
        | a5g_x_0 | | a5g[ 4 ]| | a5g_x_1 |                   |  // [263]
        |         | |         | |         |                   |  // [263]
        +----=----+ +----=----+ +----=----+                   |  // [263]
                    +----=----+                               |  // [263]
                    |         |                               |  // [263]
                    | a5g_y_1 |                               |  // [263]
                    |         |                               |  // [263]
                    +----=----+                               |  // [263]
                                                              |  // [263]
        A_M_4 : Autotile_Method_4bits                         |  // [283][REF][263]
                                                              |  //           [263]
        :::::::::::::BINARY[ X_Y ]::::::::::::::::::::::      |  //           [263]
        If A_M_4 === BINARY[ 1_1 ] : turn_off[ NO_BITS ]      |  // [283][REF][263]
                                                              |  //           [263]
        If A_M_4 === BINARY[ 1_0 ] : turn_off[ a5g_y_0 ]      |  // [283][REF][263]
                                   : turn_off[ a5g_y_1 ]      |  //           [263]
                                                              |  //           [263]
        If A_M_4 === BINARY[ 0_1 ] : turn_off[ a5g_x_0 ]      |  // [283][REF][263]
                                   : turn_off[ a5g_x_1 ]      |  //           [263]
                                                              |  //           [263]
        If A_M_4 === BINARY[ 0_0 ] : turn_off[ ALL_BIT ]      |  // [283][REF][263]
        :::::::::::::BINARY[ X_Y ]::::::::::::::::::::::      |  // [283][REF][263]
                                                    ::::      |  // [283][REF][263]
        @AM4_BITS@ : Auto_Tiling_Method_Bits        ::::      |  // [283][REF][263]
                                                    ::::      |  // [283][REF][263]
            BIN[ 1_1 _ _ ] : Auto Tile All Directions  :      |  // [283][REF][263]
            BIN[ 1_0 _ _ ] : Horizontal Auto Tile Only :      |  // [283][REF][263]
            BIN[ 0_1 _ _ ] : Vertical   Auto Tile Only :      |  // [283][REF][263]
            BIN[ 0_0 _ _ ] : Never Auto Tile With Anyone      |  // [283][REF][263]
                 X_Y  |    : 0_0 == @HERMIT_AUTO_TILING@      |  // [283][REF][263]
                  |   |                             ::::      |  // [283][REF][263]
                  |   +----: Mirroring Bits         ::::      |  // [283][REF][263]
                  |                                 ::::      |  // [283][REF][263]
            Latching_Bits                           ::::      |  // [283][REF][263]
                                                    ::::      |  // [283][REF][263]
        ::::::::::::::::::::::::::::::::::::::::::::::::      |  // [263]
                                                              |  // [263]
        +---------------------------------------+             |  // [263]
        |  Horizontal Auto Tiling Pretends      |             |  // [263]
        |  [ a5g_y_0 ]and[ a5g_y_1 ]do not      |             |  // [263]
        |  exist by turning off those bits.     |             |  // [263]
        |  +----=----+ +----=----+ +----=----+  |             |  // [263]
        |  |         | |         | |         |  |             |  // [263]
        |  | a5g_x_0 | | a5g[ 4 ]| | a5g_x_1 |  |             |  // [263]
        |  |         | |         | |         |  |             |  // [263]
        |  +----=----+ +----=----+ +----=----+  |             |  // [263]
        |                                       |             |  // [263]
        |  Vertical Auto Tiling Pretends        |             |  // [263]
        |  [ a5g_x_0 ]and[ a5g_x_1 ]do not      |             |  // [263]
        |  exist by turning off those bits.     |             |  // [263]
        |  +----=----+                          |             |  // [263]
        |  |         |                          |             |  // [263]
        |  | a5g_y_0 |                          |             |  // [263]
        |  |         |                          |             |  // [263]
        |  +----=----+    --------------------  |             |  // [263]
        |  +----=----+    @HERMIT_AUTO_TILING@  |             |  // [263]
        |  |         |    Pretends it has no    |             |  // [263]
        |  | a5g[ 4 ]|    neighbors by turning  |             |  // [263]
        |  |         |    off all neighbor bit  |             |  // [263]
        |  +----=----+    flags.                |             |  // [263]
        |  +----=----+             +----=----+  |             |  // [263]
        |  |         |             |         |  |             |  // [263]
        |  | a5g_y_1 |             | a5g[ 4 ]|  |             |  // [263]
        |  |         |             |         |  |             |  // [263]
        |  +----=----+             +----=----+  |             |  // [263]
        |  -----------    --------------------  |             |  // [263]
        +---------------------------------------+             |  // [263]
                                                              |  // [263]
    :----------------------------------: #_AM4_BIT_TURN_OFF_# +  // [283][REF][263]
    #_MORE_BANG_FOR_YOUR_BUCK_# :-----------------------------+  // [263]
                                                              |  // [263]
        The different auto tiling methods mean you can        |  // [263]
        essentially turn 16 tile values into 64 tile          |  // [263]
        values. The milage of our artwork goes further        |  // [263]
        with this, so I am choosing to implement              |  // [263]
        "Auto Tiling Methods".                                |  // [263]
                                                              |  // [263]
    +---------------------------------------------------------+  // [263]
    #_VIDEO_IDEA_WITH_AND_WITHOUT_EXTENDED_AUTO_TILING_# :----+  // [263]
                                                              |  // [263]
        @VIDEO_IDEA@ / @VIDIDEA@ / @VID@                      |  // [263]
                                                              |  // [263]
        In the future we might want to be able to toggle      |  // [263]
        using "auto tile methods" on/off by re-compiling      |  // [263]
        the shader pipeline, so that we can do a cool         |  // [263]
        video explaining the difference between               |  // [263]
                                                              |  // [263]
        "Normal Auto Tiling" and "Kanji Coder's Auto Tiling". |  // [263]
                                                              |  // [263]
        That might get some views.                            |  // [263]
    +---------------------------------------------------------+  // [263]
    #_LABOR_THEORY_OF_WORK_# :--------------------------------+  // [263]
                                                              |  // [263]
        The labor theory of work might not be correct.        |  // [263]
        But the "labor theory of UTILITY" sure as fuck        |  // [263]
        is.                                                   |  // [263]
                                                              |  // [263]
        The more mental energy and time we put into this      |  // [263]
        code base, the more utility the code base has.        |  // [263]
                                                              |  // [263]
        Yes, it doesn't determine how much the game           |  // [263]
        will sell for or how many people will buy it.         |  // [263]
                                                              |  // [263]
        BUT... The math is really simple. Put more            |  // [263]
        [ energy / time ]into your code, get more             |  // [263]
        robust and useful code.                               |  // [263]
                                                              |  // [263]
        Assuming you know what the fuck you are doing         |  // [263]
        and not adding "negative work" or                     |  // [263]
        "design by committe".                                 |  // [263]
    +---------------------------------------------------------+  // [263]

    #_MAKE_SUBTILE_GRAPHIC_# :--------------------------------+  // [264]
                                                              |  // [264]
        @USE_ATF@ : USE___Auto_Tile_Fourset ( graphics )      |  // [264]
                                                              |  // [264]
        If( USE_ATF <= 0 ) //:Use auto tile foursets :OFF://  |  // [264]
                                                              |  // [264]
            We will generate a simple graphic that            |  // [264]
            just confirms our touching values are             |  // [264]
            correct.                                          |  // [264]
                                                              |  // [264]
        IF( USE_ATF >= 1 ) //:Use auto tile foursets :ONN://  |  // [264]
                                                              |  // [264]
            We will use a lookup table to procedurally        |  // [264]
            generate our sub-tile graphic from a              |  // [264]
            [ FOURSET ]layout.                                |  // [264]
                                                              |  // [264]
            SEE[ _FOURSET_DIAGRAM_ ]                          |  // [264]
                                                              |  // [264]
                                                              |  // [264]
        NOTE : OPEN[   DOC/HOTEL13/HOTEL13.JS ]         :::::::  // [264]
             : SEARCH[      apply_auto_tiling ]         :::::::  // [264]
             :                                          :::::::  // [264]
             : I wrote this code so long ago that it is :::::::  // [264]
             : going to be quicker to just re-write     :::::::  // [264]
             : the creation of auto-tile edge graphics  :::::::  // [264]
             : than to figure out how I did it on       :::::::  // [264]
             : HTML5 Canvas.                            :::::::  // [264]
             :                                          :::::::  // [264]
             : I've done this at least TWICE before.    :::::::  // [264]
                                                              |  // [264]
    :---------------------------------------------------------+  // [264]
    #_FOURSET_DIAGRAM_# :-------------------------------------+  // [264]
    TAG[ __fourset_sub_tile_cells__ ]                         |  // [264]
                                                              |  // [264]
        @f4x@ : fourset_5x5_graphic_cell( 4 total ) axis - X  |  // [275][REF][264]
        @f4y@ : fourset_5x5_graphic_cell( 4 total ) axis - Y  |  // [275][REF][264]
        @f16@ : fourset_5x5_graphic_cell( 1 dimensional index )  // [275][REF][264]
                                                              |  // [264]
            +-----------+-----------+-----------+-----------+ |  // [264]
            |           |           |           |           | |  // [264]
            | c_f4x_000 | c_f4x_001 | c_f4x_002 | c_f4x_003 | |  // [275][REF][264]
            | c_f4y_000 | c_f4y_001 | c_f4y_002 | c_f4y_003 | |  // [275][REF][264]
            |           |           |           |           | |  // [264]
            +-----------+-----------+-----------+-----------+ |  // [264]
            |           |           |           |           | |  // [264]
            | c_f4x_004 | c_f4x_005 | c_f4x_006 | c_f4x_007 | |  // [275][REF][264]
            | c_f4y_004 | c_f4y_005 | c_f4y_006 | c_f4y_007 | |  // [275][REF][264]
            |           |           |           |           | |  // [264]
            +-----------+-----------+-----------+-----------+ |  // [264]
            |           |           |           |           | |  // [264]
            | c_f4x_008 | c_f4x_009 | c_f4x_010 | c_f4x_011 | |  // [275][REF][264]
            | c_f4y_008 | c_f4y_009 | c_f4y_010 | c_f4y_011 | |  // [275][REF][264]
            |           |           |           |           | |  // [264]
            +-----------+-----------+-----------+-----------+ |  // [264]
            |           |           |           |           | |  // [264]
            | c_f4x_012 | c_f4x_013 | c_f4x_014 | c_f4x_015 | |  // [275][REF][264]
            | c_f4y_012 | c_f4y_013 | c_f4y_014 | c_f4y_015 | |  // [275][REF][264]
            |           |           |           |           | |  // [264]
            +-----------+-----------+-----------+-----------+ |  // [264]
                                                              |  // [264]
        Combining 4 subtiles of the[ FOURSET ]creates         |  // [264]
        our final tile graphic. For example:                  |  // [264]
                                                              |  // [264]
                                                              |  // [264]
        The touching __NOTHING__ tile is this graphic:        |  // [264]
                                                              |  // [264]
            +-----------------------------+                   |  // [264]
            | +-----------+ +-----------+ |                   |  // [264]
            | |           | |           | |                   |  // [264]
            | | c_f4x_000 | | c_f4x_003 | |                   |  // [275][REF][264]
            | | c_f4y_000 | | c_f4y_003 | |                   |  // [275][REF][264]
            | |           | |           | |                   |  // [264]
            | +-----------+ +-----------+ |                   |  // [264]
            | +-----------+ +-----------+ |                   |  // [264]
            | |           | |           | |                   |  // [264]
            | | c_f4x_012 | | c_f4x_015 | |                   |  // [275][REF][264]
            | | c_f4y_012 | | c_f4y_015 | |                   |  // [275][REF][264]
            | |           | |           | |                   |  // [264]
            | +-----------+ +-----------+ |                   |  // [264]
            +-----------------------------+                   |  // [264]
                                                              |  // [264]
    +---------------------------------------------------------+  // [264]
    #_STG__DIAGRAM_# :----------------------------------------+  // [264]
                                                              |  // [264]
        @stg@ : "Sub_Tile_Graphic"                            |  // [264]
              :  This could be any tile type. It is a         |  // [264]
              : generic variable for the final frag color     |  // [264]
              : of either a geometry tile, bomb tile,         |  // [264]
              : or fada tile.                                 |  // [264]
                                                              |  // [264]
                       +-------+                              |  // [264]
                       |  ---  | < < < BLACK_BOX              |  // [264]
                       |f_stg  | < < < BLACK_BOX              |  // [264]
                       |  ---  | < < < BLACK_BOX              |  // [264]
                       +---+---+                              |  // [264]
                           |                                  |  // [264]
                +----------+----------+                       |  // [264]
                |          |          |                       |  // [264]
            +---+---+  +---+---+  +---+---+                   |  // [264]
            |  ---  |  |  ---  |  |  ---  |                   |  // [264]
            |f_geo  |  |f_bom  |  |f_fad  |                   |  // [264]
            |  ---  |  |  ---  |  |  ---  |                   |  // [264]
            +-------+  +-------+  +-------+                   |  // [264]
            GEOM_TILE  BOMB_TILE  FADA_TILE                   |  // [264]
                                                              |  // [264]
    +---------------------------------------------------------+  // [264]
    #_USE_ATF_DIAGRAM_# :-------------------------------------+  // [264]
                                                              |  // [264]
        @USE_ATF@ : USE___Auto_Tile_FOURSET (graphics).       |  // [264]
                                                              |  // [264]
        +-----+         +--------------+         +-----+      |  // [264]
        | NOT |< < < < <| USE_ATF >= 1 |> > > > >| YES |      |  // [264]
        +--+--+         +--------------+         +--+--+      |  // [264]
           |                                        |         |  // [264]
        +--+-------------+   +----------------------+--+      |  // [264]
        | PROCEDURALLY   |   |      Glue together FOUR |      |  // [264]
        | GENERATE       |   |       FOURSET sub-tiles |      |  // [264]
        | MOST BASIC     |   |           to create the |      |  // [264]
        | AUTO TILE      |   |           correct AUSET |      |  // [264]
        | GRAPHIC TO     |   |        sub-tile graphic |      |  // [264]
        | VERIFY CORRECT |   |                         |      |  // [264]
        | TOUCHING       |   | @AUSET@ : AUto_tile_SET |      |  // [264]
        | VALUE.         |   |                         |      |  // [264]
        +----------------+   +-------------------------+      |  // [264]
    +---------------------------------------------------------+  // [264]
                                                                 // [264]
    @d_te7_dus@ : Means, "( te7 )===>( discrete unit span )      // [264]
                : But we use[ d_te7_dun ]for that.               // [264]
                                                                 // [264]
    #_TE7_TO_DISCRETE_UNIT_SIZE_OF_TILE_# :-------------------+  // [264]
                                                              |  // [264]
        Summary :------------------------------------------:  |  // [264]
                :                                          :  |  // [264]
                : Two [ squares / tiles ]of differing      :  |  // [264]
                : [ te7 ]sizes are __NOT__ proportional.   :  |  // [264]
                : I repeat , [ NOT PROPORTIONAL ].         :  |  // [264]
                :                                          :  |  // [264]
                :------------------------------------------:  |  // [264]
                                                              |  // [264]
        We don't do "Floating Point Relativity"               |  // [264]
        in this house.                                        |  // [264]
                                                              |  // [264]
        +------------------------------------------------+    |  // [264]
        | In this house we believe:                      |    |  // [264]
        +------------------------------------------------+    |  // [264]
        |                                                |    |  // [264]
        | 1. computer SCIENCE is real                    |    |  // [264]
        |    (but actually an art)                       |    |  // [264]
        |                                                |    |  // [264]
        | 2. No addressable units are ILLEGAL ,          |    |  // [264]
        |    but they sure can be OUT_OF_BOUNDS.         |    |  // [264]
        |                                                |    |  // [264]
        | 3. #1 Rule : Highest Priority Is Working Code. |    |  // [264]
        +------------------------------------------------+    |  // [264]
                                                              |  // [264]
        Anyways, all tile sizes actually have a fixed         |  // [264]
        size, defined in "discrete units".                    |  // [264]
                                                              |  // [264]
        This is cool because it makes it really easy          |  // [264]
        to know the difference between a                      |  // [264]
        LARGE and SMALL tile of the same material,            |  // [264]
        because with a constant edge thickness on             |  // [264]
        all tiles of all sizes, the proportions of            |  // [264]
        two tiles of the same material, but different         |  // [264]
        [ te7 ]values , will differ.                          |  // [264]
                                                              |  // [264]
        More concisely :                                      |  // [264]
                                                              |  // [264]
        Because we are not using percentage based shading :   |  // [264]
                                                              |  // [264]
        TWO SQUARES OF DIFFERING SIZES ARE __NOT__ PROPORTIONAL  // [264]
                                                              |  // [264]
    +---------------------------------------------------------+  // [264]
    #_DIL_DIAGRAM_# :-----------------------------------------+  // [264]
                                                              |  // [264]
        @DIL@ : Discrete_Internal_Local _____________         |  // [264]
              : ( interal coordinates of tile using  )        |  // [264]
              : ( discrete math , instead of percent )        |  // [264]
                                                              |  // [264]
        |<------ IF[ te7 === 0 ]SPAN_IS[ c_du0 ] ------>|     |  // [264]
        |<------ IF[ te7 === 1 ]SPAN_IS[ c_du1 ] ------>|     |  // [264]
        |<------ IF[ te7 === 2 ]SPAN_IS[ c_du2 ] ------>|     |  // [264]
        |<------ IF[ te7 === 3 ]SPAN_IS[ c_du3 ] ------>|     |  // [264]
        |<------ IF[ te7 === 4 ]SPAN_IS[ c_du4 ] ------>|     |  // [264]
        |<------ IF[ te7 === 5 ]SPAN_IS[ c_du5 ] ------>|     |  // [264]
        |<------ IF[ te7 === 6 ]SPAN_IS[ c_du6 ] ------>|     |  // [264]
        |                                               |     |  // [264]
        +-------=-------+ . . . . . . . . . . . . . . . .     |  // [264]
        |   ---------   |                               .     |  // [264]
        |   ---------   |                               .     |  // [264]
        |   ---------   |                               .     |  // [264]
        |   ADDR_ZERO   |                               .     |  // [264]
        |   ---------   |                               .     |  // [264]
        |   ---------   |                               .     |  // [264]
        |   ---------   |                               .     |  // [264]
        +-------=-------+-------=-------+               .     |  // [264]
        .               |               |               .     |  // [264]
        .               |               |               .     |  // [264]
        .               |               |               .     |  // [264]
        .               |               |               .     |  // [264]
        .               |               |               .     |  // [264]
        .               |               |               .     |  // [264]
        .               |               |               .     |  // [264]
        .               +-------=-------+-------=-------+     |  // [264]
        .                               |   c_du0 - 1   |     |  // [264]
        .                               |   c_du1 - 1   |     |  // [264]
        .                               |   c_du2 - 1   |     |  // [264]
        .                               |   c_du3 - 1   |     |  // [264]
        .                               |   c_du4 - 1   |     |  // [264]
        .                               |   c_du5 - 1   |     |  // [264]
        .                               |   c_du6 - 1   |     |  // [264]
        . . . . . . . . . . . . . . . . +-------=-------+     |  // [264]
                                                              |  // [264]
    +---------------------------------------------------------+  // [264]
                                                                 // [264]
    @ADDR_ZERO@ : Address_Zero , within a set of                 // [264]
                : addressable space.                             // [264]
                                                                 // [264]
    #_RANDOM_THOUGHT_# :--------------------------------------+  // [264]
                                                              |  // [264]
        I am spending the majority of my time writing         |  // [264]
        diagrams and filming. And a very small amount         |  // [264]
        of time actually coding...                            |  // [264]
                                                              |  // [264]
        I think that... I am coding like a... MACHINIST       |  // [264]
                                                              |  // [264]
        ( They spend most of their time measuring and   )     |  // [264]
        ( very little of the time is the actual         )     |  // [264]
        ( [ cutting / machining / making ] of the part. )     |  // [264]
                                                              |  // [264]
        https://en.wikipedia.org/wiki/Machinist               |  // [264]
                                                              |  // [264]
    +---------------------------------------------------------+  // [264]
    #_GEO_TIL_EDGE_THICKNESS_# :------------------------------+  // [264]
                                                              |  // [264]
        Calculating Geometry Tile Edge Thickness.             |  // [264]
                                                              |  // [264]
        A lot of this code was stolen from                    |  // [264]
        [ ssf _ 005 ]and re-factored to my needs.             |  // [264]
                                                              |  // [264]
    :---------------------------------------------------------+  // [264]
    #_______DRAW__EDGE_______# :------------------------------+  // [264]
                                                              |  // [264]
        If out of bounds from the main mass of the tile,      |  // [264]
        draw the edge color on the tile.                      |  // [264]
                                                              |  // [264]
    :---------------------------------------------------------+  // [264]
    #_TILE_EDGE_DISCRETE_UNIT_INSET_# :-----------------------+  // [264]
                                                              |  // [264]
        @RELATED_DIAGRAM@[ _DIL_DIAGRAM_ ]                    |  // [264]
                                                              |  // [264]
        1_3 : c_dui_geo ( Smallest Inset , biggest  tile )    |  // [264]
        2_3 : c_dui_bom ( Medium   Inset , medium   tile )    |  // [264]
        3_3 : c_dui_fad ( Largest  Inset , smallest tile )    |  // [264]
                                                              |  // [264]
            +-------------------------------------------+     |  // [264]
            |                    1_3                    |     |  // [264]
            |   +-----------------------------------+   |     |  // [264]
            |   |                2_3                |   |     |  // [264]
            |   |   +---------------------------+   |   |     |  // [264]
            |   |   |            3_3            |   |   |     |  // [264]
            |   |   |   +-------------------+   |   |   |     |  // [264]
            |   |   |   | +- - - - - - - -+ |   |   |   |     |  // [264]
            |   |   |   | .     c_du0     . |   |   |   |     |  // [264]
            |   |   |   | .     c_du1     . |   |   |   |     |  // [264]
            |   |   |   | .     c_du2     . |   |   |   |     |  // [264]
            |1_3|2_3|3_3| .     c_du3     . |3_3|2_3|1_3|     |  // [264]
            |   |   |   | .     c_du4     . |   |   |   |     |  // [264]
            |   |   |   | .     c_du5     . |   |   |   |     |  // [264]
            |   |   |   | .     c_du6     . |   |   |   |     |  // [264]
            |   |   |   | +- - - - - - - -+ |   |   |   |     |  // [264]
            |   |   |   +-------------------+   |   |   |     |  // [264]
            |   |   |            3_3            |   |   |     |  // [264]
            |   |   +---------------------------+   |   |     |  // [264]
            |   |                2_3                |   |     |  // [264]
            |   +-----------------------------------+   |     |  // [264]
            |                    1_3                    |     |  // [264]
            +-------------------------------------------+     |  // [264]
            |                                           |     |  // [264]
            |<---- IF[ te7 === 0 ]SPAN_IS[ c_du0 ] ---->|     |  // [264]
            |<---- IF[ te7 === 1 ]SPAN_IS[ c_du1 ] ---->|     |  // [264]
            |<---- IF[ te7 === 2 ]SPAN_IS[ c_du2 ] ---->|     |  // [264]
            |<---- IF[ te7 === 3 ]SPAN_IS[ c_du3 ] ---->|     |  // [264]
            |<---- IF[ te7 === 4 ]SPAN_IS[ c_du4 ] ---->|     |  // [264]
            |<---- IF[ te7 === 5 ]SPAN_IS[ c_du5 ] ---->|     |  // [264]
            |<---- IF[ te7 === 6 ]SPAN_IS[ c_du6 ] ---->|     |  // [264]
                                                              |  // [264]
    +---------------------------------------------------------+  // [264]
                                                                 // [264]
    @_F_V_A_@ : First_Valid_Address                              // [264]
    @_L_V_A_@ : Last__Valid_Address                              // [264]

    #_TOUCHING_TEST_BITS_# :----------------------------------+  // [265]
                             TAG[__touching_test_bit_masks__] |  // [265]
        +---------------------------------------------------+ |  // [265]
        |   Touching Bits Truth Table                       | |  // [265]
        |   Operand__001 : Calculated Touching Value (u_to4)| |  // [283][REF][265]
        |   Operand__002 : Touching Mask Constant           | |  // [265]
        +---------------------------------------------------+ |  // [265]
        |                                                   | |  // [265]
        |         |OPERA_001|<---- OPERAND__002 : MASK ---->| |  // [265]
        |         |         |                               | |  // [265]
        |         |  u_to4  |to4_lef|       |to4_top|       | |  // [283][REF][265]
        |         | 0 1 0 1 |       |to4_rig|       |to4_bot| |  // [283][REF][265]
        |         | X X Y Y |-------------------------------| |  // [265]
        DEC[00]HEX[ 0 0 0 0 ]  ___  |  ___  |  ___  |  ___  | |  // [265]
        DEC[01]HEX[ 0 0 0 1 ]  ___  |  ___  |  ___  |  YES  | |  // [265]
        DEC[02]HEX[ 0 0 1 0 ]  ___  |  ___  |  YES  |  ___  | |  // [265]
        DEC[03]HEX[ 0 0 1 1 ]  ___  |  ___  |  YES  |  YES  | |  // [265]
        DEC[04]HEX[ 0 1 0 0 ]  ___  |  YES  |  ___  |  ___  | |  // [265]
        DEC[05]HEX[ 0 1 0 1 ]  ___  |  YES  |  ___  |  YES  | |  // [265]
        DEC[06]HEX[ 0 1 1 0 ]  ___  |  YES  |  YES  |  ___  | |  // [265]
        DEC[07]HEX[ 0 1 1 1 ]  ___  |  YES  |  YES  |  YES  | |  // [265]
        DEC[08]HEX[ 1 0 0 0 ]  YES  |  ___  |  ___  |  ___  | |  // [265]
        DEC[09]HEX[ 1 0 0 1 ]  YES  |  ___  |  ___  |  YES  | |  // [265]
        DEC[10]HEX[ 1 0 1 0 ]  YES  |  ___  |  YES  |  ___  | |  // [265]
        DEC[11]HEX[ 1 0 1 1 ]  YES  |  ___  |  YES  |  YES  | |  // [265]
        DEC[12]HEX[ 1 1 0 0 ]  YES  |  YES  |  ___  |  ___  | |  // [265]
        DEC[13]HEX[ 1 1 0 1 ]  YES  |  YES  |  ___  |  YES  | |  // [265]
        DEC[14]HEX[ 1 1 1 0 ]  YES  |  YES  |  YES  |  ___  | |  // [265]
        DEC[15]HEX[ 1 1 1 1 ]  YES  |  YES  |  YES  |  YES  | |  // [265]
        |                                                   | |  // [265]
        |                                                   | |  // [265]
        +---------------------------------------------------+ |  // [265]
             :----------------------------------------------: |  // [265]
        NOTE : Wasn't enough room to write out full names   : |  // [265]
             : in the truth table above. Here is a KEY.     : |  // [265]
             :                                              : |  // [265]
             : to4_lef === c_to4_lef                        : |  // [283][REF][265]
             : to4_rig === c_to4_rig                        : |  // [283][REF][265]
             : to4_top === c_to4_top                        : |  // [283][REF][265]
             : to4_bot === c_to4_bot                        : |  // [283][REF][265]
             :----------------------------------------------: |  // [265]
    +---------------------------------------------------------+  // [265]

    #_STOLEN_HOTEL_13_COLORS_# :------------------------------+  // [266]
                                                              |  // [266]
        SEE[ d_hotel13_hcp_til     ]IN[ HOTEL13.JS ]          |  // [266]
        SEE[ d_hotel13_hcp_til_dam ]IN[ HOTEL13.JS ]          |  // [266]
        SEE[ d_hotel13_hcp_bom     ]IN[ HOTEL13.JS ]          |  // [266]
        SEE[ d_hotel13_hcp_fad     ]IN[ HOTEL13.JS ]          |  // [266]
                                                              |  // [266]
    +---------------------------------------------------------+  // [266]
    #_MASTER_TILE_COLOR_LIST_# :------------------------------+  // [266]
                                                              |  // [266]
        All tiles will have FOUR COLORS.                      |  // [266]
                                                              |  // [266]
        1. Body Color                                         |  // [266]
        2. Edge Color                                         |  // [266]
        3. Body Color - Alt                                   |  // [266]
        4. Edge Color - Alt                                   |  // [266]
                                                              |  // [266]
        The __REASON__ for 4 colors is because DESTROYED TILES|  // [266]
        have alternate graphics, and to make LAYER INDEX      |  // [266]
        ( la3 ) synonymous with tile-type (geo,bom,fad),      |  // [266]
        we need 4 colors.                                     |  // [266]
                                                              |  // [266]
        OTHERWISE , we end up with the inconsistency of       |  // [266]
        "hcp_til" and "hcp_til_dam" that is in HOTEL13.JS     |  // [266]
                                                              |  // [266]
    +---------------------------------------------------------+  // [266]
    #LEAVES_PARTIAL# :----------------------------------------+  // [266]
                                                              |  // [266]
        make angled tiles leave some ladders                  |  // [266]
        but not all ladders. Only leaves                      |  // [266]
        ladders on the sections that rendered                 |  // [266]
        as FULL BLOCKS , without angled                       |  // [266]
        sections.                                             |  // [266]
                                                              |  // [266]
    +---------------------------------------------------------+  // [266]
    #_BOX_BOMBS_# :-------------------------------------------+  // [266]
                                                              |  // [266]
        Bombs with a square explosion rather than a cross     |  // [266]
        explosion. They are more destructive and powerful     |  // [266]
        than normal bombs, able to destroy falling tile       |  // [266]
        types that normal bombs cannot destory.               |  // [266]
                                                              |  // [266]
        All bomb explosions are actually 3D.                  |  // [266]
                                                              |  // [266]
        Box bombs carve out strips into the BACKGROUND        |  // [266]
        and MIDGROUND layers.                                 |  // [266]
                                                              |  // [266]
        Normal bombs just poke tiny holes into the            |  // [266]
        BACKGROUND and MIDGROUND layers.                      |  // [266]
                                                              |  // [266]
    +---------------------------------------------------------+  // [266]
    #_MATERIAL_COLOR_CONSTANTS_# :----------------------------+  // [266]
                                    TAG[ __material_colors__ ]|  // [266]
                                                              |  // [266]
        Colors for different materials in our renderer.       |  // [266]
        Every tile will only have TWO COLORS.                 |  // [266]
                                                              |  // [266]
        1. Body Color                                         |  // [266]
        2. Edge Color                                         |  // [266]
                                                              |  // [266]
        Remember, we want the richness of the level design    |  // [266]
        to be an "emergent design". All the little            |  // [266]
        features compounding until we get something           |  // [266]
        that is very visually interesting.                    |  // [266]
                                                              |  // [266]
        @EMERGENT_DESIGN@ : Like "Emergent Behavior"          |  // [266]
                          : but relates to                    |  // [266]
                          :[ design/visual/asthetic ]         |  // [266]
                          : instead of functional.            |  // [266]
    +---------------------------------------------------------+  // [266]
    #_Illegal_Color_Names_# :---------------------------------+  // [266]
                                                              |  // [266]
        As I was figuring out color names, these were         |  // [266]
        some names I thought were good, and then changed      |  // [266]
        my mind on.                                           |  // [266]
                                                              |  // [266]
        When it comes to GEOM_TILE color names , we are       |  // [266]
        going to choose names that communicate the            |  // [266]
        functionality of the tile type.                       |  // [266]
                                                              |  // [266]
    +---------------------------------------------------------+  // [266]
    @COLOR_KEY@:----------------------------------------------+  // [266]
                                                              |  // [266]
        @COLOR_KEY@ : Something explaining color names.       |  // [266]
                                                              |  // [266]
        :#_MATERIAL_COLOR_NAME_KEY_#:[266]:----------------:  |  // [266]
        :                                                  :  |  // [266]
        :   @vac@ : Vacant ( leaves nothing behind )       :  |  // [266]
        :   @lad@ : Ladder ( leaves ladders behind )       :  |  // [266]
        :   @par@ : Partial( leaves laddders __SOMETIMES__):  |  // [266]
        :   @fal@ : Falling Material , only BOX BOMBABLE.  :  |  // [266]
        :   @com@ : Combustable Material.                  :  |  // [266]
        :   @god@ : INDESTRUCTABLE MATERIAL                :  |  // [266]
        :                                                  :  |  // [266]
        :  @glow@ : It emits light , a light fixture       :  |  // [266]
        :  @soil@ : Weak Material , but stronger that glow.:  |  // [266]
        :  @purp@ : PURPLE , only destroyable by BOX BOMBS.:  |  // [266]
        :  @marb@ : Marble ( Falls in cubes )              :  |  // [266]
        :  @beam@ : Beam   ( Falls in horizontal slats )   :  |  // [266]
        :  @iron@ : Iron   ( Falls in vertical   slats )   :  |  // [266]
        :  @soli@ : Solid  Material (1st state of matter)  :  |  // [266]
        :  @liqu@ : Liquid Material (2nd state of matter)  :  |  // [266]
        :  @vapo@ : Vapor  Material (3rd state of matter)  :  |  // [266]
        :                                                  :  |  // [266]
        :----------------:#_MATERIAL_COLOR_NAME_KEY_#:[266]:  |  // [266]
                                                              |  // [266]
    +---------------------------------------------------------+  // [266]
    #_Illegal_Color_Table_Names_# :---------------------------+  // [266]
                                                              |  // [266]
        Names that I proposed or think I might accidentially  |  // [266]
        type in the future when looking for the               |  // [266]
        master color table 3 months from now.                 |  // [266]
                                                              |  // [266]
    +---------------------------------------------------------+  // [266]
    #_TILE_COLOR_LOOKUPTABLE_# :------------------------------+  // [266]
                                                              |  // [266]
        A lookup table that gives use the                     |  // [266]
        color scheme for any tile in the game.                |  // [266]
                                                              |  // [266]
            la3:0 ===> GEOM_TILE                              |  // [266]
            la3:1 ===> BOMB_TILE                              |  // [266]
            la3:2 ===> FADA_TILE                              |  // [266]
                                                              |  // [266]
        All tiles have a 2 color pallet.                      |  // [266]
                                                              |  // [266]
            1. Body Color ( Default , or Alternative )        |  // [266]
            2. Edge Color ( Default , or Alternative )        |  // [266]
    +---------------------------------------------------------+  // [266]
    #_THINGS_WE_CAN_DO_WITH_ALTERNATIVE_COLORS_# :------------+  // [266]
                                                              |  // [266]
        ALT_GEOM_COLOR : For Destroyed Geometry Colors        |  // [266]
        ALT_BOMB_COLOR : For Making Bombs [ Blink / Flash ]   |  // [266]
        ALT_FADA_COLOR : For Making Flames Turn To Smoke      |  // [266]
                                                              |  // [266]
    +---------------------------------------------------------+  // [266]

    #_HEX_COLOR_TO_FLOAT_COLOR_# :----------------------------+  // [267]
                                                              |  // [267]
        Our colors are packed into uint32( U32 ) values.      |  // [267]
        We need to convert these to float colors.             |  // [267]
        Bit shifting math is easy to get wrong, so            |  // [267]
        making "IMF" functions (inlined macro functions)      |  // [267]
        for this.                                             |  // [267]
                                                              |  // [267]
        @IMF_F_R@ : IMF__F32__Red   ( u_hex )==>( f32 red   ) |  // [267]
        @IMF_F_G@ : IMF__F32__Green ( u_hex )==>( f32 green ) |  // [267]
        @IMF_F_B@ : IMF__F32__Blue  ( u_hex )==>( f32 blue  ) |  // [267]
        @IMF_F_A@ : IMF__F32__Alpha ( u_hex )==>( f32 alpha ) |  // [267]
    +---------------------------------------------------------+  // [267]
    #_GET_GEOM_TILE_COLOR_# :---------------------------------+  // [267]
                                                              |  // [267]
        We are keeping our game graphics simple. We only      |  // [267]
        have two colors per tile.                             |  // [267]
                                                              |  // [267]
        1. Tile __BODY__ Color  (main central mass of tile )  |  // [267]
        2. Tile __EDGE__ Color  (boarder  around  the tile )  |  // [267]
    +---------------------------------------------------------+  // [267]
    #_GET_CENTRAL_TILE_VALUE_# :------------------------------+  // [267]
                                                              |  // [267]
        Before we can get the two-tone color of the tile,     |  // [267]
        we need to know the tile value. The tile value can    |  // [267]
        be thought of as the "material type" when dealing     |  // [267]
        with tile value (v16) 's for geometry tiles.          |  // [267]
    +---------------------------------------------------------+  // [267]
    #_GET_GEOM_BODY_COLOR_# :---------------------------------+  // [267]
                                                              |  // [267]
        Get the body color of our geometry tile...            |  // [267]
        pretty sure this procedure needs to be done           |  // [267]
        REGARDLESS if we are advanced auto tiling             |  // [267]
        or simple auto tiling.                                |  // [267]
    +---------------------------------------------------------+  // [267]
    #_GET_GEOM_EDGE_COLOR_# :---------------------------------+  // [267]
                                                              |  // [267]
        Get the EDGE COLOR of our geometry tile.              |  // [267]
        Same considerations as[ _GET_GEOM_BODY_COLOR_ ]       |  // [267]
    +---------------------------------------------------------+  // [267]
    @SKIP_ALREADY_DONE_FURTHER_UP@ :--------------------------+  // [267]
    #SKIP_ALREADY_DONE_FURTHER_UP# :--------------------------+  // [267]
                                                              |  // [267]
        Making note that the reason something is commented    |  // [267]
        out is because we already calculated it further       |  // [267]
        up in the code somewhere within the same scope.       |  // [267]
                                                              |  // [267]
        Will leave the commented out code for reference.      |  // [267]
        And also as an easy way to put in the needed code     |  // [267]
        if things change further up.                          |  // [267]
    +---------------------------------------------------------+  // [267]

    #_PREV_TILE_BRUSH_VALUE_# :-------------------------------+  // [268]
                                                              |  // [268]
        Go backwards to the previous tile value.              |  // [268]
        We have 16 tile values for everything.                |  // [268]
                                                              |  // [268]
        16 Geometry Tiles   ( layer #0 ( la3==0 ) 1st layer ) |  // [268]
        16 Bomb     Tiles   ( layer #1 ( la3==1 ) 2nd layer ) |  // [268]
        16 Fada     Tiles   ( layer #2 ( la3==2 ) 3rd layer ) |  // [268]
    +---------------------------------------------------------+  // [268]
    #_NEXT_TILE_BRUSH_VALUE_# :-------------------------------+  // [268]
                                                              |  // [268]
        Go forwards to next tile value.                       |  // [268]
        Same idea as[ _PREV_TILE_BRUSH_VALUE_ ]               |  // [268]
        but we stop at ( v16==(16-1) ) instead of ZERO(0).    |  // [268]
    +---------------------------------------------------------+  // [268]
                                                                 // [268]
    @VIDEO_IDEA@ : "It took me 6 months to make the game snake"  // [268]
    @VIDIDEA@ :::: (Because I did it in my own custom engine )   // [268]
    @VID@ :::::::: (but that could be a good clickbait title )   // [268]

    @I_D@ : Inlined_Diagram , a diagram that is __NOT__ in    :  // [269]
          : the __COMMENTS__ section (here) , but rather      :  // [269]
          : interlaced within the code. This is done when     :  // [269]
          : the code is pretty much... IMPOSSIBLE to          :  // [269]
          : understand unless you are looking at the diagram  :  // [269]
          : that goes along with it.                          :  // [269]
          :                                                   :  // [269]
          : SEE[ __dont_you_fucking_touch_my_battle_ship__ ]  :  // [269]
          :                                                   :  // [269]
          : For an example of inlined diagrams.               :  // [269]
                                                                 // [269]
    #_FOURSET_REMIX_TABLES_# :--------------------------------+  // [269]
                                                              |  // [269]
              TAG[ __dont_you_fucking_touch_my_battle_ship__ ]|  // [269]
                                                              |  // [269]
        Tables telling us how to slice and dice up            |  // [269]
        fourset sub-sections to create the correct            |  // [269]
        sub-tiles of a standard "Flixel-Style"                |  // [269]
        auto-tile-set.                                        |  // [269]
                                                              |  // [269]
        SEE[ https://imgur.com/a/zHKteUO ]                    |  // [269]
                                                              |  // [269]
    +---------------------------------------------------------+  // [269]

    #_HARDCODED_FOURSET_GRAPHICS_# :--------------------------+  // [270]
                                                              |  // [270]
        Foursets encoded as clusters of                       |  // [270]
        SIXTEEN( 16 ) Uint32( U32 ) values.                   |  // [270]
                                                              |  // [270]
        Each U32 is encoding a tiny 5x5 bitmap.               |  // [270]
                                                              |  // [270]
        5x5 is 25 bits , the largest perfectly square         |  // [270]
        grid we can fit into a 32-bit unsigned integer.       |  // [270]
                                                              |  // [270]
    +---------------------------------------------------------+  // [270]
    #_Too_Many_Fourset_Quads_# :------------------------------+  // [270]
                                                              |  // [270]
        Did you forget this is SHADER_CODE ?                  |  // [270]
        We don't need to get all 4 quads of the               |  // [270]
        fourset pattern , only the quad that the              |  // [270]
        current sample point is within.                       |  // [270]
                                                              |  // [270]
        Keeping this code for reference though.               |  // [270]
        It helps de-abstract things a bit.                    |  // [270]
                                                              |  // [270]
        :----------------------------------------------:      |  // [270]
                                                              |  // [---]
            U32 t_l_f4x ; //: TopLef - f4x ://                |  // [275][REF][270]
            U32 t_l_f4y ; //: TopLef - f4y ://                |  // [275][REF][270]
                                                              |  // [---]
            U32 t_r_f4x ; //: TopRig - f4x ://                |  // [275][REF][270]
            U32 t_r_f4y ; //: TopRig - f4y ://                |  // [275][REF][270]
                                                              |  // [---]
            U32 b_l_f4x ; //: BotLef - f4x ://                |  // [275][REF][270]
            U32 b_l_f4y ; //: BotLef - f4y ://                |  // [275][REF][270]
                                                              |  // [---]
            U32 b_r_f4x ; //: BotRig - f4x ://                |  // [275][REF][270]
            U32 b_r_f4y ; //: BotRig - f4y ://                |  // [275][REF][270]
                                                              |  // [---]
            t_l_f4x  = d_to4_f4x[ (u_to4 * u_4)+u_0 ];        |  // [283][REF][275][REF][270]
            t_l_f4y  = d_to4_f4y[ (u_to4 * u_4)+u_0 ];        |  // [283][REF][275][REF][270]
                                                              |  // [---]
            t_r_f4x  = d_to4_f4x[ (u_to4 * u_4)+u_1 ];        |  // [283][REF][275][REF][270]
            t_r_f4y  = d_to4_f4y[ (u_to4 * u_4)+u_1 ];        |  // [283][REF][275][REF][270]
                                                              |  // [---]
            b_l_f4x  = d_to4_f4x[ (u_to4 * u_4)+u_2 ];        |  // [283][REF][275][REF][270]
            b_l_f4y  = d_to4_f4y[ (u_to4 * u_4)+u_2 ];        |  // [283][REF][275][REF][270]
                                                              |  // [---]
            b_r_f4x  = d_to4_f4x[ (u_to4 * u_4)+u_3 ];        |  // [283][REF][275][REF][270]
            b_r_f4y  = d_to4_f4y[ (u_to4 * u_4)+u_3 ];        |  // [283][REF][275][REF][270]
                                                              |  // [---]
        :----------------------------------------------:      |  // [270]
                                                              |  // [270]
    +---------------------------------------------------------+  // [270]
    #_ILLEGAL_FOURSET_VARIABLES_# :---------------------------+  // [270]
                                                              |  // [270]
        Some fourset related variables that are either        |  // [270]
        mis-spellings or mis-conceptions of actual            |  // [270]
        fourset variable names.                               |  // [270]
    +---------------------------------------------------------+  // [270]
    #_REFACTOR_FOURSET_VAR_RENAME_NEEDED_# :------------------+  // [270]
    #_REFAC_2022_09_17_# :------------------------------------+  // [275]
                                                              |  // [270]
        TAG[ fourset var name refactor | fourset refactor ]   |  // [270]
        TAG[ fourset_var_name_refactor | fourset_refactor ]   |  // [270]
                                                              |  // [270]
                              +-------------------------------+  // [270]
        [ s4x ] ===> [ f4x ]  |  We don't do synonymous       |  // [270]
        [ s4y ] ===> [ f4y ]  |  variable names in this       |  // [270]
        [ s4i ] ===> [ f16 ]  |  fucking house. If you want   |  // [270]
                              |  to know in NO UNCERTAIN      |  // [270]
                              |  TERMS that two [TERMS/VARS]  |  // [270]
                              |  are the SAME THING , then    |  // [270]
        [ fx4 ] ===> [ f4x ]  |  use the EXACT SAME           |  // [270]
        [ fy4 ] ===> [ f4y ]  |  FUCKING NAME !!!!!!!!!!!!!!  |  // [270]
        [ fi4 ] ===> [ f16 ]  |  !!!!!!!!!!!!!!!!!!!!!!!!!!!  |  // [270]
                              +-------------------------------+  // [270]
                                                              |  // [270]
        Do in next video : #2_7_1                             |  // [270]
                                                              |  // [270]
    +---------------------------------------------------------+  // [270]
    @u25_clus@ / @u25c@ :-------------------------------------+  // [270]
    #u25_clus# / #u25c# :-------------------------------------+  // [270]
                                                              |  // [270]
        @u2c@ === "u25clus" ,                                 |  // [270]
        BUT_USE[ u_5x5 ]because that variable name            |  // [270]
        more aptly expresses that we have a 5x5 grid          |  // [270]
        packed into a 32 bit unsigned integer. (U32).         |  // [270]
    :---------------------------------------------------------+  // [270]
    :---------------------------------------------------------+  // [270]
    #_GET_BINARY_PIXEL_# :------------------------------------+  // [270]
                                                              |  // [270]
        Get a pixel value that is either[ 0 ]or[ 1 ].         |  // [270]
        For example, the[ foursets ]use 16 U32 values         |  // [270]
        to encode a grid of 4x4 tiles. Each tile being        |  // [270]
        a 5x5 grid of "BINARY_PIXELS".                        |  // [270]
                                                              |  // [270]
        ( 7 least significant bits of the U32 go unused ).    |  // [270]
                                                              |  // [270]
    :---------------------------------------------------------+  // [270]
    #_BINARY_PIXEL_# :----------------------------------------+  // [270]
                                                              |  // [270]
        A binary pixel is a value used like a pixel value ,   |  // [270]
        but is only a[ 0 ]or[ 1 ].                            |  // [270]
                                                              |  // [270]
        @BINARY_PIXELS@:::::::::::::::::::::::::::::::        |  // [270]
        @BINARY_PIXEL@ : A pixel with only 2 values. :        |  // [270]
                       : 0 or 1 .                    :        |  // [270]
                       :::::::::::::::::::::::::::::::        |  // [270]
    :---------------------------------------------------------+  // [270]
    #_TQI_F16_DIAGRAM_# :-------------------------------------+  // [270]
                                                              |  // [270]
                                                              |  // [270]
        +-------------------+ <--+                            |  // [270]
        |         @MINI_MAP@|    |                            |  // [270]
        +---+---+---+       |    |   +----------------------+ |  // [270]
        |V16|V16|V16|       |    |   | Mini Tilemap. Assume | |  // [270]
        +---+---+---+---+---+    +---| all[ V16 ]values are | |  // [270]
        |       |V16|V16|V16|    |   | the _SAME_ here.     | |  // [270]
        |       +-|-+---+---+    |   +----------------------+ |  // [270]
        |         |         |    |                            |  // [270]
        +-------. | .-------+ <--+                            |  // [270]
                  |                                           |  // [270]
                +---+            +---+                        |  // [270]
                | 1 |            |y_0|                        |  // [270]
            +---+---+---+    +---+---+---+                    |  // [270]
            | 0 |TO4| 1 |<==>|x_0|TO4|x_1| BIN[x_0|x_1|y_0|y_1]  // [283][REF][270]
            +---+---+---+    +---+---+---+  V   V   V   V   V |  // [270]
                | 0 |            |y_1|      V   V   V   V   V |  // [270]
                +---+            +---+      V   V   V   V   V |  // [270]
                  |                         V   V   V   V   V |  // [270]
                  |                         V   V   V   V   V |  // [270]
                  |                         V   V   V   V   V |  // [270]
                  +----------------------+ BIN[ 0 | 1 | 1 | 0 ]  // [270]
                                           BIN[ 0___1___1___0 ]  // [270]
                                            V                 |  // [270]
                                            V                 |  // [270]
                                   TO4 === DEC[ 6 ]           |  // [283][REF][270]
                                                              |  // [270]
        +-------------------------------------------------+   |  // [270]
        |                                                 |   |  // [270]
        |          @MINI_MAP@ (ZOOMED_IN)                 |   |  // [270]
        |                                                 |   |  // [270]
        +-------------------+-------------------+         |   |  // [270]
        | +--===--+--===--+ | +--===--+--===--+ |         |   |  // [270]
        | |       |       | | |       |       | |         |   |  // [270]
        | |       |       | | |       |       | |         |   |  // [270]
        | |       |       | | |       |       | |         |   |  // [270]
        | +--===--+--===--+ | +--===--+--===--+ |         |   |  // [270]
        | |       |       | | |       |       | |         |   |  // [270]
        | |       |       | | |       |       | |         |   |  // [270]
        | |       |       | | |       |       | |         |   |  // [270]
        | +--===--+--===--+ | +--===--+--===--+ |         |   |  // [270]
        +-------------------+-------------------+---------|   |  // [270]
        |             --=-- | +--===--+--===--+ | +--===--|   |  // [270]
        |               |   | |  TQI  |  TQI  | | |       |   |  // [270]
        |               |   | |   0   |   1   | | |       |   |  // [270]
        |               |   | |       |       | | |       |   |  // [270]
        |              dun  | +--===--+--===--+ | +--===--|   |  // [270]
        |               |   | |  TQI  |  TQI  | | |       |   |  // [270]
        |               |   | |   2   |   3   | | |       |   |  // [270]
        |               |   | |   *   |       | | |       |   |  // [270]
        |             --=-- | +--=|=--+--===--+ | +--===--|   |  // [270]
        +-------------------+-----|-------------+---------|   |  // [270]
                                  |                           |  // [270]
        +-------------------------V-----------------------+   |  // [270]
        |    @Example_Sample_Point@ , TQI ===( 2 )        |   |  // [270]
        |    [ * === [ dil.x , dil.y ] ]                  |   |  // [270]
        |                                                 |   |  // [270]
        |  tqx = ( dil.x >= ( dun/2 ) ) ? u_1:u_0 ;       |   |  // [270]
        |  tqy = ( dil.y >= ( dun/2 ) ) ? u_1:u_0 ;       |   |  // [270]
        |  tqi = ( tqx +( tqy * u_2 ) );;;;;;;;;;;;       |   |  // [270]
        |                                                 |   |  // [270]
        |  ASS( tqi === 2 , "[For_This_Example_Diagram]" );   |  // [270]
        |                                                 |   |  // [270]
        +-------------------------|-----------------------+   |  // [270]
                                  |                           |  // [270]
                                  V       +---------------+   |  // [270]
                              +--===--+   |               |   |  // [270]
                              |  TQI  |   +---+ DEC[   6  ]   |  // [270]
                              |   2   | + |TO4|           |   |  // [283][REF][270]
                              |   *   |   +---+ BIN[ 0110 ]   |  // [270]
                              +--===--+   |               |   |  // [270]
                                  |       +-------|-------+   |  // [270]
                                  |               |           |  // [270]
                                  +-------+-------+           |  // [270]
                                          |                   |  // [270]
        +---------------------------------V-------------------+  // [270]
        | u_f4x = d_to4_f4x[ ( TO4 * u_4) + TQI ];            |  // [283][REF][275][REF][270]
        | u_f4y = d_to4_f4y[ ( TO4 * u_4) + TQI ];            |  // [283][REF][275][REF][270]
        |                                                     |  // [270]
        |                                                     |  // [270]
        | var d_to4_f4x = new Uint8Array([                    |  // [283][REF][275][REF][270]
        |                               ORD[ 0_x_1   0_y_1 ]  |  // [270]
        |                               ORD[ x___x___y___y ]  |  // [270]
        |     ................................................|  // [270]
   ++======== C_1 , C_2 , D_1 , D_2 //: BIN[ 0___1___1___0 ]  |  // [270]
   ||   |     ................................................|  // [270]
   ||   | ]);;                                                |  // [270]
   ||   |                                                     |  // [270]
   ||   |                                                     |  // [270]
   ||   | var d_to4_f4y = new Uint8Array([                    |  // [283][REF][275][REF][270]
   ||   |                               ORD[ 0_x_1   0_y_1 ]  |  // [270]
   ||   |                               ORD[ x___x___y___y ]  |  // [270]
   ||   |     ................................................|  // [270]
   ||   | ,   E_3 , F_3 , E_4 , F_4 //: BIN[ 0___1___1___0 ]  |  // [270]
   ||   |     __________=__________ ..........................|  // [270]
   ||   | ]);;         |||                                    |  // [270]
   ||   +--------------|||------------------------------------+  // [270]
   ||                  |||                                    |  // [270]
   ||                  | +------------------------------+     |  // [270]
   ||                  +------------------------------+ |     |  // [270]
   ||                                                 | |     |  // [270]
   ||   +-----------+---+---+---+---+------------+    | |     |  // [270]
   ||   |           |000|001|002|003|            |    | |     |  // [270]
   ||   |           +---+---+---+---+            |    | |     |  // [270]
   ||   |           |004|005|006|007|            |    | |     |  // [270]
   ||   |           +---+---+---+---+            |    | |     |  // [270]
   ||   |           |008|009|010|011|            |    | |     |  // [270]
   ||   |           +---+---+---+---+            |    | |     |  // [270]
   ||   |           |012|013|014|015|            |    | |     |  // [270]
   ||   |           +---+---+---+---+            |    | |     |  // [270]
   ||   |                   V                    |    | |     |  // [270]
   ||   +---+---+---+---+   V    +---+---+---+---+    | |     |  // [270]
   ||   |A_1|A_2|A_3|A_4|   V    |E_1|F_1|G_1|H_1|    | |     |  // [270]
   ||   +---+---+---+---+   V    +---+---+---+---+    | |     |  // [270]
   ||   |B_1|B_2|B_3|B_4|   V    |E_2|F_2|G_2|H_2|    | |     |  // [270]
   ||   +---+---+---+---+   V    +---+---+---+---+    | |     |  // [270]
   ||   |C_1|C_2|C_3|C_4|   V    |E_3|F_3|G_3|H_3|    | |     |  // [270]
   ||   +---+---+---+---+   V    +---+---+---+---+    | |     |  // [270]
   ||   |D_1|D_2|D_3|D_4|   V    |E_4|F_4|G_4|H_4|    | |     |  // [270]
   ||   +---+---+---+---+   V    +---+---+---+---+    | |     |  // [270]
   ||   |                   V                    |    | |     |  // [270]
   ||   +---+---+---+---+   V    +---+---+---+---+    | |     |  // [270]
   ||   |   |   |   |   |   V    |   |   |   |   |    | |     |  // [270]
   ||   +---+---+---+---+   V    +---+---+---+---+    | |     |  // [270]
   ||   |   |   |   |   |   V    |   |   |   |   |    | |     |  // [270]
   ||   +---+---+---+---+   V    +---+---+---+---+    | |     |  // [270]
   ++-> |C_1|C_2|   |   |   V    |E_3|F_3|   |   |    | |     |  // [270]
   ||   +---+---+---+---+   V    +---+---+< < < < < <=++|     |  // [270]
   ++-> |D_1|D_2|   |   |   V    |E_4|F_4|   |   |            |  // [270]
        +---+---+---+---+   V    +---+---+---+---+            |  // [270]
        |                   V                    |            |  // [270]
        |           +---+---+---+---+            |            |  // [270]
        |           |   |   |   |   |            |            |  // [270]
        |           +---+---+---+---+            |            |  // [270]
        |           |   |   |   |   |            |            |  // [270]
        |           +---+---+---+---+            |            |  // [270]
        |           |008|009|   |   |            |            |  // [270]
        |           +---+---+---+---+            |            |  // [270]
        |           |012|013|   |   |            |            |  // [270]
        +-----------+---+---+---+---+------------+            |  // [270]
                        V                                     |  // [270]
                        V                                     |  // [270]
                        V                                     |  // [270]
            Which 5X5 u32clust are we using?                  |  // [270]
                                                              |  // [270]
            I think we need to know about the OCT_CELL        |  // [270]
            of the sample coord to know this.                 |  // [270]
                                                              |  // [270]
            @otx@ : OctTile_X  <<< FUCKING_WRONG              |  // [270]
            @oty@ : OctTile_Y  <<< FUCKING_WRONG              |  // [270]
                        SEE[ #_WHY_FUCKING_WRONG_# ]          |  // [270]
            +---+                                             |  // [270]
    TQI:0   |008|                                             |  // [270]
            +---+         +--------------------+              |  // [270]
            +---+         |#_GRAB_5X5_GRAPHIC_#|              |  // [270]
    TQI:1   |009|         +--------------------+              |  // [270]
            +---+                  |       +---------------+  |  // [270]
            +---+                +---+     | +---+   +---+ |  |  // [270]
    TQI:2   |012| <<<< Answer Is |012| === | |D_1|   |E_4| |  |  // [270]
            +---+                +---+     | +---+ , +---+ |  |  // [270]
            +---+                  V       | (f4x  ,  f4y) |  |  // [270]
    TQI:3   |013|                  V       +---------------+  |  // [270]
            +---+   [ C_1 , C_2 , D_1 , D_2 ]<<DEC[ 6 ]B[0110]|  // [270]
                    [ E_3 , F_3 , E_4 , F_4 ]<<DEC[ 6 ]B[0110]|  // [270]
                                                              |  // [270]
                                                              |  // [270]
        #_WHY_FUCKING_WRONG_# :----------------------------+  |  // [270]
        |                                                  |  |  // [270]
        |   | Because This  | ==== | Is This Thing |       |  |  // [270]
        |                                                  |  |  // [270]
        |   +---+---+---+---+      +--===--+--===--+       |  |  // [270]
        |   |   |   |   |   |      |  TQI  |  TQI  |       |  |  // [270]
        |   +---+---+---+---+      |   0   |   1   |       |  |  // [270]
        |   |   |   |   |   |      |       |       |       |  |  // [270]
        |   +---+---+---+---+ ==== +--===--+--===--+       |  |  // [270]
        |   |008|009|   |   |      |  TQI  |  TQI  |       |  |  // [270]
        |   +---+---+---+---+      |   2   |   3   |       |  |  // [270]
        |   |012|013|   |   |      |   *   |       |       |  |  // [270]
        |   +---+---+---+---+      +--=|=--+--===--+       |  |  // [270]
        |                                                  |  |  // [270]
        |                                                  |  |  // [270]
        |   Your mistake is more obvious when              |  |  // [270]
        |   you consider the "touching nothing tile".      |  |  // [270]
        |   The tile with no neighbors.                    |  |  // [270]
        |                                                  |  |  // [270]
        |                          + . . . . . . . +       |  |  // [270]
        |                          |               |       |  |  // [270]
        |                          |       0       |       |  |  // [270]
        |                          |               |       |  |  // [270]
        |   +---+---+---+---+  .---+--===--+--===--+-----+ |  |  // [270]
        |   |001|   |   |002|  .   |  TQI  |  TQI  |     . |  |  // [270]
        |   +---+---+---+---+  .   |   0   |   1   |     . |  |  // [270]
        |   |   |   |   |   |  .   |       |       |     . |  |  // [270]
        |   +---+---+---+---+  . 0 +--===--+--===--+  0  . |  |  // [270]
        |   |   |   |   |   |  .   |  TQI  |  TQI  |     . |  |  // [270]
        |   +---+---+---+---+  .   |   2   |   3   |     . |  |  // [270]
        |   |012|   |   |015|  .   |   *   |       |     . |  |  // [270]
        |   +---+---+---+---+  .---+--=|=--+--===--+-----+ |  |  // [270]
        |     ^                   /|               |       |  |  // [270]
        |     |                  / |       0       |       |  |  // [270]
        |     |                 /  |               |       |  |  // [270]
        |     |________________/   . . . . . . . . .       |  |  // [270]
        |                                                  |  |  // [270]
        +--------------------------------------------------+  |  // [270]
                                                              |  // [270]
    :-----------------------------------: #_TQI_F16_DIAGRAM_# +  // [270]
    @MUST_HAVE@ : Some idea that I think is important enough     // [270]
                : that I don't care if you call it feature       // [270]
                : creep , we need it.                            // [270]
                                                                 // [270]
    #_MUST_HAVE_4_BIT_AUTO_TILE_METHOD_MASK_# :---------------+  // [270]
                                                              |  // [270]
                                                              |  // [270]
        ----------------------------------------------------  |  // [270]
        Let's talk about lights and mirrors ::::::::::::::::  |  // [270]
        ----------------------------------------------------  |  // [270]
                                                              |  // [270]
        We can mirror things however we want because          |  // [270]
        TILES_DO_NOT_ENCODE_LIGHTING_INFORMATION              |  // [270]
        IN_THEIR_DESIGNS!!!! We will fake ambient             |  // [270]
        occlusion on all of the tiles or something.           |  // [270]
        But we want to focus on using the tiles to            |  // [270]
        BUILD_WITH in a more structural manner.               |  // [270]
                                                              |  // [270]
        Think of the tiles as materials , rather than         |  // [270]
        graphics. Graphics can be drawn with "top-left"       |  // [270]
        lighting. The notion of a                             |  // [270]
                                                              |  // [270]
                "material containing top-left lighting"       |  // [270]
                                                              |  // [270]
        is fucking absurd.                                    |  // [270]
                                                              |  // [270]
        ----------------------------------------------------  |  // [270]
        ::::::::::::::::::::::::::: Did you enjoy that talk?  |  // [270]
        ----------------------------------------------------  |  // [270]
                                                              |  // [270]
            #DONUT_REACTOR#                                   |  // [270]
            @DONUT_REACTOR@                                   |  // [270]
        The "DONUT_REACTOR" . With the ability to mirror      |  // [270]
        tiles we can create something like this concentric    |  // [270]
        donut pattern. It isn't perfect, we have to split     |  // [270]
        the donut rings into FOURTHS(4ths), but now           |  // [270]
        we can have the ACCENTED_EDGES of the inner           |  // [270]
        and outer rings facing each other.                    |  // [270]
                                                              |  // [270]
        +---+---+---+---+ +---+---+---+---+                   |  // [270]
        |0_0|   |   |   | |   |   |   |1_0|                   |  // [270]
        +---+===+===+===+ +===+===+===+---+                   |  // [270]
        |  ||                         ||  |                   |  // [270]
        +---+   +===+===+ +===+===+   +---+                   |  // [270]
        |  ||   ||  |   | |   |  ||   ||  |                   |  // [270]
        +---+   +---+---+ +---+---+   +---+                   |  // [270]
        |  ||   ||  |         |  ||   ||  |                   |  // [270]
        +---+   +---+         +---+   +---+                   |  // [270]
        +---+   +---+         +---+   +---+                   |  // [270]
        |  ||   ||  |         |  ||   ||  |                   |  // [270]
        +---+   +---+---+ +---+---+   +---+                   |  // [270]
        |  ||   ||  |   | |   |  ||   ||  |                   |  // [270]
        +---+   +===+===+ +===+===+   +---+                   |  // [270]
        |  ||                         ||  |                   |  // [270]
        +---+===+===+===+ +===+===+===+---+                   |  // [270]
        |0_1|   |   |   | |   |   |   |1_1|                   |  // [270]
        +---+---+---+---+ +---+---+---+---+                   |  // [270]
                                                              |  // [270]
            X_Y                                               |  // [270]
            0_0 : No Mirroring , original tile design.        |  // [270]
            1_0 : Mirror on X axis.                           |  // [270]
            0_1 : Mirror on Y axis.                           |  // [270]
            1_1 : Mirror on X & Y Axis.                       |  // [270]
            X_Y                                               |  // [270]
                                                              |  // [270]
        If you were designing a scaffold, you can             |  // [270]
        mirror the MACRO_GEOMETRY( sub-tilemap )              |  // [270]
        as well as the MICRO_GEOMETRY( auto tiling ).         |  // [270]
                                                              |  // [270]
        +-----+         +-----+   +-----+         +-----+     |  // [270]
        | / \ |---------| / \ |   | / \ |---------| / \ |     |  // [270]
        | \_/ |_________| \_/ |   | \_/ |_________| \_/ |     |  // [270]
        +-+ +-+         +-+ +-+   +-+ +-+         +-+ +-+     |  // [270]
          | |             / /       \ \             | |       |  // [270]
          | |            / /         \ \            | |       |  // [270]
          | |           / /           \ \           | |       |  // [270]
          | |          / /             \ \          | |       |  // [270]
          | |         / /               \ \         | |       |  // [270]
          | |        / /                 \ \        | |       |  // [270]
          | |       / /                   \ \       | |       |  // [270]
          | |      / /                     \ \      | |       |  // [270]
        +-+ +-+   / /                       \ \   +-+ +-+     |  // [270]
        | / \ |--/ /                         \ \--| / \ |     |  // [270]
        | \_/ |___/                           \___| \_/ |     |  // [270]
        +-+ +-+                                   +-+ +-+     |  // [270]
                        ?EYE_OF_GOD?                          |  // [270]
        +-+ +-+___      No, only in the        ___+-+ +-+     |  // [270]
        | /_\ |   \     void. But cool        /   | /_\ |     |  // [270]
        | \ / |--\ \    other thing          / /--| \ / |     |  // [270]
        +-+ +-+   \ \   could go here       / /   +-+ +-+     |  // [270]
          | |      \ \                     / /      | |       |  // [270]
          | |       \ \                   / /       | |       |  // [270]
          | |        \ \                 / /        | |       |  // [270]
          | |         \ \               / /         | |       |  // [270]
          | |          \ \             / /          | |       |  // [270]
          | |           \ \           / /           | |       |  // [270]
          | |            \ \         / /            | |       |  // [270]
          | |             \ \       / /             | |       |  // [270]
        +-+ +-+         +-+ +-+   +-+ +-+         +-+ +-+     |  // [270]
        | /_\ |_________| /_\ |   | /_\ |_________| /_\ |     |  // [270]
        | \ / |---------| \ / |   | \ / |---------| \ / |     |  // [270]
        +-----+         +-----+   +-----+         +-----+     |  // [270]
                                                              |  // [270]
    :-------------: #_MUST_HAVE_4_BIT_AUTO_TILE_METHOD_MASK_# +  // [270]
    #_UPDATED_GEOM_TILE_BIT_LAYOUT_# :------------------------+  // [270]
                                                              |  // [270]
            LATCHING   MIRRORING                              |  // [270]
                  ||   ||                                     |  // [270]
          V16     XY   XY                                     |  // [283][270]
        [ 1111    11   11 ] <-- RED BYTE                      |  // [270]
                                                              |  // [270]
                                                              |  // [270]
        [ 1 1 1 1 1 1 1 1 ] <-- GREEN BYTE : Veronoi_B_G      |  // [270]
                                                              |  // [270]
        [ 1 1 1 1 1 1 1 1 ] <-- BLUE  BYTE : Scaffold Panel   |  // [270]
                                                              |  // [270]
        [ 1 1 1 1 1 1 1 1 ] <-- ALPHA BYTE : Scaffold Panel   |  // [270]
                                           : Insets           |  // [270]
                                                              |  // [270]
        Don't try to bitpack :                                |  // [270]
                                                              |  // [270]
            1. DONT_TRY : Bitpack falling tile positions.     |  // [270]
                        : Well... Maybe we will see..         |  // [270]
                                                              |  // [270]
            2. DONT_TRY : Bitpack spark particle effects.     |  // [270]
                        : Sparks which detonate bombs.        |  // [270]
                                                              |  // [270]
    :---------------------------------------------------------+  // [270]
                                                                 // [---]
    #_EMPTY_OUT_THE_HASH_TAGGED_COMMENTS_SECTION_# :----------+  // [271]
                                                              |  // [271]
        I think the "hashtag comments" section is too         |  // [271]
        granular. The big dump of "@" and "#" comments        |  // [271]
        at the bottom of the file seems to be working         |  // [271]
        out pretty well. Don't add to this section            |  // [271]
        any more. Maybe move what is in here to the           |  // [271]
        bottom of the file. Actually... "@" comments          |  // [271]
        consolidated above seems good. But hash tagged        |  // [271]
        comments does not....                                 |  // [271]
                                                              |  // [271]
    :---------------------------------------------------------+  // [271]
                                                                 // [271]
    #_WARPED_FOURSET_EDGES_# :--------------------------------+  // [271]
                                                              |  // [271]
                                              +------------+  |  // [271]
        -------===------ +---+---+---+---+    | [][][][][] |  |  // [271]
                |        |000|001|002|003<----| [][][][][] |  |  // [271]
                |        +---+---+---+---+    | [][][][][] |  |  // [271]
                |        |004|005|006|007|    | [][][][][] |  |  // [271]
            [fourset]    +---+---+---+---+    | [][][][][] |  |  // [271]
                |        |008|009|010|011|    +------------+  |  // [271]
                |        +---+---+---+---+    |<--u_5x5 -->|  |  // [271]
                |        |012|013|014|015|                    |  // [271]
        -------===------ +---+---+---+---+                    |  // [271]
                        /                 \                   |  // [271]
              +--------+                   +-------+          |  // [271]
             /                                      \         |  // [271]
            /                                        \        |  // [271]
           /                                          \       |  // [271]
          /                                            \      |  // [271]
         +---------------------------------------------+      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         |                                             |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         |                                             |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         |                                             |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         | [][][][][] [][][][][] [][][][][] [][][][][] |      |  // [271]
         +----------------------|----------------------+      |  // [271]
                                |                             |  // [271]
         +----------------------V----------------------+      |  // [271]
         | Warping the rendering by making the 5x5     |      |  // [271]
         | partitions un-even could help give better   |      |  // [271]
         | edge dillination by creating higher         |      |  // [271]
         | density patterns on the edges.              |      |  // [271]
         |                                             |      |  // [271]
         | We could also alpha blend warped an         |      |  // [271]
         | non-warped fourset tile rendering to        |      |  // [271]
         | create interesting pattern.                 |      |  // [271]
         +----------------------|----------------------+      |  // [271]
                                |                             |  // [271]
    +---------------------------V-----------------------------+  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    |                                                         |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    |                                                         |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    |                                                         |  // [271]
    |                                                         |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    |                                                         |  // [271]
    |                                                         |  // [271]
    |                                                         |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    |                                                         |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    |                                                         |  // [271]
    |                                                         |  // [271]
    |                                                         |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    |                                                         |  // [271]
    |                                                         |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    |                                                         |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    |                                                         |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    | [][][][][] [][][ ][  ][   ] [   ][  ][ ][][] [][][][][] |  // [271]
    +---------------------------------------------------------+  // [271]
                                                              |  // [271]
                                            @END_OF_SECTION@  |  // [271]
                                                              |  // [271]
    :------------------------------: #_WARPED_FOURSET_EDGES_# +  // [271]
                                                                 // [271]
    @END_OF_SECTION@ : Marking end of section explicitly.        // [271]
                                                                 // [271]
    #_DISCRETE_TILE_5THS_# :----------------------------------+  // [271]
                                                              |  // [271]
        To figure out which[ binary_color_bit ]of             |  // [271]
        fourset sub-tile ( f16 cell ) we are in, we           |  // [271]
        need to divide the cell into 5ths.                    |  // [271]
                                                              |  // [271]
        Rather than compute this division all the time,       |  // [271]
        store it in a lookup table.                           |  // [271]
                                                              |  // [271]
        |<- u_5x5 graphic ->|                                 |  // [271]
        |<- f16 sub__cell ->|                                 |  // [271]
        +---+---+---+---+---+ --- ---=---                     |  // [271]
        |   |   |   |   |   | d20    |                        |  // [271]
        |  -+- -+- -+- -+-  | ---   du0 <---------+           |  // [271]
        |   |   |   |   |   | d20   du1           |           |  // [271]
        |  -+- -+- -+- -+-  | ---   du2           |           |  // [271]
        |   |   |   |   |   | d20   du3 [_D20_HAS_A_REMAINDER_]  // [271]
        |  -+- -+- -+- -+-  | ---   du4           |           |  // [271]
        |   |   |   |   |   | d20   du5           |           |  // [271]
        |  -+- -+- -+- -+-  | ---   du6 <---------+           |  // [271]
        |   |   |   |   |   | d20    |                        |  // [271]
        +---+---+---+---+---+ --- ---=---                     |  // [271]
        |d20|d20|d20|d20|d20| \                               |  // [271]
        |<------ du0 ------>|  +                              |  // [271]
        |<------ du1 ------>|  |                              |  // [271]
        |<------ du2 ------>|+-V-+---+---+---+ ---------      |  // [271]
        |<------ du3 ------>||000|001|002|003| ( d20*5 )      |  // [271]
        |<------ du4 ------>|+---+---+---+---+ ---------      |  // [271]
        |<------ du5 ------>||004|005|006|007| ( d20*5 )      |  // [271]
        |<------ du6 ------>|+---+---+---+---+ ---------      |  // [271]
                             |008|009|010|011| ( d20*5 )      |  // [271]
                             +---+---+---+---+ ---------      |  // [271]
                             |012|013|014|015| ( d20*5 )      |  // [271]
                             +---+---+---+---+ ---------      |  // [271]
                                                              |  // [271]
    :---------------------------------------------------------+  // [271]
    #_D20_HAS_A_REMAINDER_# :---------------------------------+  // [271]
                                                              |  // [271]
        D20 is not a perfect integer.... We should            |  // [271]
        manually define all 20 sub-section widths             |  // [271]
        as cutoff thresholds.                                 |  // [271]
                                                              |  // [271]
        Solves divisibility problem, and opens gateway        |  // [271]
        to warpability really easy.                           |  // [271]
                                        |    Threshold    |   |  // [271]
                                        |     Markers     |   |  // [271]
                                        |                 |   |  // [271]
                                       t1 t2  t3   t4    t5   |  // [271]
                                        |  |   |    |     |   |  // [271]
        +---+---+---+---+---+ > > > > +-+--+---+----+-----+   |  // [271]
        |   |   |   |   |   | > > > > | |  |   |    |     |   |  // [271]
        |  -+- -+- -+- -+-  | > > > > |-+--+- -+-  -+-    |   |  // [271]
        |   |   |   |   |   | > > > > | |  |   |    |     |   |  // [271]
        |  -+- -+- -+- -+-  | > > > > |-+--+- -+-  -+-    |   |  // [271]
        |   |   |   |   |   | WARP_IT | |  |   |    |     |   |  // [271]
        |  -+- -+- -+- -+-  | > > > > |-+--+- -+-  -+-    |   |  // [271]
        |   |   |   |   |   | > > > > | |  |   |    |     |   |  // [271]
        |  -+- -+- -+- -+-  | > > > > |-+--+- -+-  -+-    |   |  // [271]
        |   |   |   |   |   | > > > > | |  |   |    |     |   |  // [271]
        +---+---+---+---+---+ > > > > +-+--+---+----+-----+   |  // [271]
                                                              |  // [271]
    :---------------------------------------------------------+  // [271]
    #_D20_IS_RIGHT_IDEA_BUT_NOT_GOOD_ENOUGH_# :---------------+  // [271]
                                                              |  // [271]
        I think the "D20" values are in general the           |  // [271]
        "right general idea" for what needs to be done...     |  // [271]
                                                              |  // [271]
        But... NOT GOOD ENOUGH... We need a:                  |  // [271]
                                                              |  // [271]
        1. Pixel Performant Solution                          |  // [271]
        2. With Fast Lookup Times (no if if if checks)        |  // [271]
        3. Capable of warping the partitions flexibly.        |  // [271]
                                                              |  // [271]
        I am delirious. Going back to bed.                    |  // [271]
        2022_09_16 , 5:51 AM                                  |  // [271]
                                                              |  // [271]
        -KanjiCoder                                           |  // [271]
    :---------------------------------------------------------+  // [271]
    #_TREE_RING_OVERLAY_FOR_FOURSETS_# :----------------------+  // [271]
                                                              |  // [271]
        +---------------------------------------------+       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        |                                             |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        |                                             |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        |                                             |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        | [][][][][] [][][][][] [][][][][] [][][][][] |       |  // [271]
        +----------------------|----------------------+       |  // [271]
                               |                              |  // [271]
                               |                              |  // [271]
                               V                              |  // [271]
                       +---+---+---+---+                      |  // [271]
                       |000|001|002|003|                      |  // [271]
                       +---+---+---+---+                      |  // [271]
                       |004|005|006|007|                      |  // [271]
                       +---+---+---+---+                      |  // [271]
                       |008|009|010|011|                      |  // [271]
                       +---+---+---+---+                      |  // [271]
                       |012|013|014|015|                      |  // [271]
                       +---+---+---+---+                      |  // [271]
                                                              |  // [271]
        Make a concentric uniformily spaced "tree ring"       |  // [271]
        overlay over this fourset. To create warping,         |  // [271]
        "tree rings" are grouped, mapping to the same         |  // [271]
        "R20" value. ( Ring20 Value ).                        |  // [271]
                                                              |  // [271]
        R20 because 4x4 cells, each containing u_5x5          |  // [271]
        bitmap, that makes for 20x20 binary pixels to         |  // [271]
        be carved into rings.                                 |  // [271]
                                                              |  // [271]
        Wait...  That would make 10 rings, not 20.            |  // [271]
        Two edges make 1 ring.                                |  // [271]
                                                              |  // [271]
        So... "tree_rings" ===> "R10" value.                  |  // [271]
                                                              |  // [271]
        Basic Idea :( 1st draft ):-----------------+          |  // [271]
                                                   |          |  // [271]
            UNIFORM_DENSE_TREE_RING(s)             |          |  // [271]
                                                   |          |  // [271]
            map to                                 |          |  // [271]
                                                   |          |  // [271]
            NON_UNIFORM_WARPED_TREE_RINGS.         |          |  // [271]
                                                   |          |  // [271]
            non-uniform tree-rings made by joining |          |  // [271]
            uniform rings.                         |          |  // [271]
        +------------------------------------------+          |  // [271]
        Basic Idea :( 2nd draft ):-------------------------+  |  // [271]
                                                           |  |  // [271]
            TWO DENSE "tree ring arrays" with EXACT        |  |  // [271]
            SAME NUMBER OF RINGS.                          |  |  // [271]
                                                           |  |  // [271]
            But the mapping from one to the other          |  |  // [271]
            is what creates warping.                       |  |  // [271]
                                                           |  |  // [271]
            TOO_HARD:--------------------------------------+  |  // [271]
                                                           |  |  // [271]
                Having one uniform distortion grid will    |  |  // [271]
                be difficult. Because we already picked    |  |  // [271]
                out a quad that belongs to either the      |  |  // [271]
                inner or outer ring.                       |  |  // [271]
                                                           |  |  // [271]
                TRING70_ORING10 ( TreeRing70 ==> OutRing10 )  |  // [271]
                                                           |  |  // [271]
            WE_CAN_DO_THIS!!!! :---------------------------+  |  // [271]
                                                           |  |  // [271]
            IRING35_URING05 ( InnerRing35 ==> UniformRing5 )  |  // [271]
            ORING35_URING05 ( OuterRing35 ==> UniformRing5 )  |  // [271]
                                                           |  |  // [271]
                                                           |  |  // [271]
        +--------------------------------------------------+  |  // [271]
                                                              |  // [271]
        +---------------------------------------+             |  // [271]
        | #_IOU_DIAGRAM_# (Iri___Ori___Uri)     |             |  // [271]
        +---------------------------------------+             |  // [271]
        |   @IRI@ : IRING35 ( inner   ring )    |             |  // [271]
        |   @ORI@ : ORING35 ( outer   ring )    |             |  // [271]
        |   @URI@ : URING05 ( uniform ring )    |             |  // [271]
        |                                       |             |  // [271]
        |   @i35@ : Inner   Ring , 35 of them.  |             |  // [271]
        |   @o35@ : Outer   Ring , 35 of them.  |             |  // [271]
        |   @u05@ : Uniform Ring , 10 of them.  |             |  // [271]
        |   @iu5@ : Uniform Ring ( INNER OUTPUT)|             |  // [271]
        |   @ou5@ : Uniform Ring ( OUTER OUTPUT)|             |  // [271]
        |                                       |             |  // [271]
        |   d_i35_iu5[ i35 ] ===> iu5 (u05)     |             |  // [271]
        |   d_o35_ou5[ o35 ] ===> ou5 (u05)     |             |  // [271]
        |                                       |             |  // [271]
        |   +-------------------------------+   |             |  // [271]
        |   | +---+   +---+   +---+   +---+ |   |             |  // [271]
        |   | |5x5|   |5x5|   |5x5|   |5x5| |   |             |  // [271]
        |   | +---+   +---+   +---+   +---+ |   |             |  // [271]
        |   |       +---------------+       |   |             |  // [271]
        |   | +---+ | +---+   +---+ | +---+ |   |             |  // [271]
        |   | |5x5| | |5x5|   |5x5| | |5x5| |   |             |  // [271]
        |   | +---+ | +---+   +---+ | +---+ |   |             |  // [271]
        |   |       |               |       |   |             |  // [271]
        |   | +---+ | +---+   +---+ | +---+ |   |             |  // [271]
        |   | |5x5| | |5x5|   |5x5| | |5x5| |   |             |  // [271]
        |   | +---+ | +---+   +---+ | +---+ |   |             |  // [271]
        |   |       +---------------+       |   |             |  // [271]
        |   | +---+   +---+   +---+   +---+ |   |             |  // [271]
        |   | |5x5|   |5x5|   |5x5|   |5x5| |   |             |  // [271]
        |   | +---+   +---+   +---+   +---+ |   |             |  // [271]
        |   +-------------------------------+   |             |  // [271]
        |                                       |             |  // [271]
        |   +-------------------------------+   |             |  // [271]
        |   | +---+   +---+   +---+   +---+ |   |             |  // [271]
        |   | |ORI|   |ORI|   |ORI|   |ORI| |   |             |  // [271]
        |   | +---+   +---+   +---+   +---+ |   |             |  // [271]
        |   |       +---------------+       |   |             |  // [271]
        |   | +---+ | +---+   +---+ | +---+ |   |             |  // [271]
        |   | |ORI| | |IRI|   |IRI| | |ORI| |   |             |  // [271]
        |   | +---+ | +---+   +---+ | +---+ |   |             |  // [271]
        |   |       |               |       |   |             |  // [271]
        |   | +---+ | +---+   +---+ | +---+ |   |             |  // [271]
        |   | |ORI| | |IRI|   |IRI| | |ORI| |   |             |  // [271]
        |   | +---+ | +---+   +---+ | +---+ |   |             |  // [271]
        |   |       +---------------+       |   |             |  // [271]
        |   | +---+   +---+   +---+   +---+ |   |             |  // [271]
        |   | |ORI|   |ORI|   |ORI|   |ORI| |   |             |  // [271]
        |   | +---+   +---+   +---+   +---+ |   |             |  // [271]
        |   +-------------------------------+   |             |  // [271]
        +---------------------------------------+             |  // [271]
        | END_OF_DIAGRAM[ #_IOU_DIAGRAM_# ]     |             |  // [271]
        +---------------------------------------+             |  // [271]
                                                              |  // [271]
            This "ring warping" introduces more               |  // [271]
            potential for mistakes while coding.              |  // [271]
            So to WORK UP TO THIS POINT, we should            |  // [271]
            have conditional compilation to shut              |  // [271]
            this feature off.                                 |  // [271]
                                                              |  // [271]
            We need to get visual feedback before             |  // [271]
            we layer on yet ANOTHER CRAZY ASS TRANSFORMATION. |  // [271]
                                                              |  // [271]
            USE_RIN <-- Use Ring Warping ? (OptionMacro)      |  // [271]
                                                              |  // [271]
    :---------------------------------------------------------+  // [271]
    #_USE_RIN_DIAGRAM_# :-------------------------------------+  // [271]
                                                              |  // [---]
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  |  // [277]
                                                              |  // [277]
        THIS_METHODOLOGY_IS_NOT_THE_ONE_WE_DECIDED_ON:        |  // [277]
        SEE[ _RING_MAPPED_TILES_ ]( 2022_09_18 )              |  // [277]
                                                              |  // [277]
        Actually, this diagram below was __NEVER__ correct    |  // [277]
        because the rings need to thread through a 2x2        |  // [277]
        grid of u_5x5 graphics. And looks like this diagram   |  // [277]
        below is describing a 4x4 grid of u_5x5 graphics.     |  // [277]
                                                              |  // [277]
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  |  // [277]
                                                              |  // [---]
                                                              |  // [271]
        RELATED_DIAGRAM[ _IOU_DIAGRAM_ ]                      |  // [271]
                                                              |  // [271]
        @f_4_x@ : F4X , written for diagram.                  |  // [271]
        @f_4_y@ : F4Y , written for diagram.                  |  // [271]
        @f_1_6@ : F16 , written for diagram.                  |  // [271]
                                                              |  // [271]
        +-----+-----+-----+-----+   +-----+-----+-----+-----+ |  // [271]
        |f_4_x|f_4_x|f_4_x|f_4_x|   | 000 | 001 | 002 | 003 | |  // [271]
        |f_4_y|f_4_y|f_4_y|f_4_y|   |f_1_6|f_1_6|f_1_6|f_1_6| |  // [271]
        +-----+-----+-----+-----+   +-----+-----+-----+-----+ |  // [271]
        |f_4_x|f_4_x|f_4_x|f_4_x|   | 004 | 005 | 006 | 007 | |  // [271]
        |f_4_y|f_4_y|f_4_y|f_4_y|   |f_1_6|f_1_6|f_1_6|f_1_6| |  // [271]
        +-----+-----+-----+-----+   +-----+-----+-----+-----+ |  // [271]
        |f_4_x|f_4_x|f_4_x|f_4_x|   | 008 | 009 | 010 | 011 | |  // [271]
        |f_4_y|f_4_y|f_4_y|f_4_y|   |f_1_6|f_1_6|f_1_6|f_1_6| |  // [271]
        +-----+-----+-----+-----+   +-----+-----+-----+-----+ |  // [271]
        |f_4_x|f_4_x|f_4_x|f_4_x|   | 012 | 013 | 014 | 015 | |  // [271]
        |f_4_y|f_4_y|f_4_y|f_4_y|   |f_1_6|f_1_6|f_1_6|f_1_6| |  // [271]
        +-----+-----+-----+-----+   +-----+-----+-----+-----+ |  // [271]
                                                              |  // [271]
        +-----------------------+   +-----------------------+ |  // [271]
        |[5x5]=[5x5]=[5x5]=[5x5]|   |[ORI]=[ORI]=[ORI]=[ORI]| |  // [271]
        |||                   |||   |||                   ||| |  // [271]
        |||                   |||   |||                   ||| |  // [271]
        |[5x5] [5x5]=[5x5] [5x5]|   |[ORI] [IRI]=[IRI] [ORI]| |  // [271]
        |||    ||       ||    |||   |||    ||       ||    ||| |  // [271]
        |||    ||       ||    |||   |||    ||       ||    ||| |  // [271]
        |[5x5] [5x5]=[5x5] [5x5]|   |[ORI] [IRI]=[IRI] [ORI]| |  // [271]
        |||                   |||   |||                   ||| |  // [271]
        |||                   |||   |||                   ||| |  // [271]
        |[5x5]=[5x5]=[5x5]=[5x5]|   |[ORI]=[ORI]=[ORI]=[ORI]| |  // [271]
        +-----------------------+   +-----------------------+ |  // [271]
                                                              |  // [271]
        @o35_ou5@  : 35 outer rings mapping to 5 outer rings. |  // [271]
        @i35_iu5@  : 35 inner rings mapping to 5 inner rings. |  // [271]
                                                              |  // [271]
        @o35_u05@  : First Draft. U05 == Uniform(OUTER)5_RINGS|  // [271]
        @i35_u05@  : First Draft. U05 == Uniform(INNER)5_RINGS|  // [271]
                                                              |  // [271]
        +---------------------------------------------------+ |  // [271]
        | +-----------------------------------------------+ | |  // [271]
        | | +-------------------------------------------+ | | |  // [271]
        | | | +---------------------------------------+ | | | |  // [271]
        | | | | +-----------------------------------+ | | | | |  // [271]
        | | | | | +-------------------------------+ | | | | | |  // [271]
        | | | | | | +---------------------------+ | | | | | | |  // [271]
        | | | | | | |                           | | | | | | | |  // [271]
        | | | | | | |                           | | | | | | | |  // [271]
        | | | | | | |                           | | | | | | | |  // [271]
        | | | | | | |                           | | | | | | | |  // [271]
        | | | | | | |                           | | | | | | | |  // [271]
        | | | | | | |                           | | | | | | | |  // [271]
        | | | | | | |                           | | | | | | | |  // [271]
        | | | | | | |                           | | | | | | | |  // [271]
        | | | | | | |                           | | | | | | | |  // [271]
        | | | | | | |                           | | | | | | | |  // [271]
        | | | | | | |                           | | | | | | | |  // [271]
        | | | | | | |                           | | | | | | | |  // [271]
        | | | | | | |                           | | | | | | | |  // [271]
        | | | | | | +---------------------------+ | | | | | | |  // [271]
        | | | | | +-.-----------------------------+ | | | | | |  // [271]
        | | | | +---.-------------------------------+ | | | | |  // [271]
        | | | +-----.---------------------------------+ | | | |  // [271]
        | | +-------.-----------------------------------+ | | |  // [271]
        | +---------.-------------------------------------+ | |  // [271]
        +-----------.---------------------------------------+ |  // [271]
        |<--@u05@-->| : Uniform_rings_____5         ^^^       |  // [271]
        |<--@ou5@-->| : Outer___Uniform___5         |||       |  // [271]
             ^^^                                    |||       |  // [271]
         d_o35_ou5[ o35 ]==>( ou5 )           #_O35_OU5_DIA_# |  // [271]
             ^^^                                    |||       |  // [271]
        |<--@o35@-->|                               VVV       |  // [271]
        +-----------.---------------------------------------+ |  // [271]
        | +---------.-------------------------------------+ | |  // [271]
        | | +-------.-----------------------------------+ | | |  // [271]
        | | | +-----.---------------------------------+ | | | |  // [271]
        | | | | +---.-------------------------------+ | | | | |  // [271]
        | | | | | +-.-----------------------------+ | | | | | |  // [271]
        | | | | | | +---------------------------+ | | | | | | |  // [271]
        | | | | | | | +-----------------------+ | | | | | | | |  // [271]
        | | | | | | | | +-------------------+ | | | | | | | | |  // [271]
        | | | | | | | | | +---------------+ | | | | | | | | | |  // [271]
        | | | | | | | | | | +-----------+ | | | | | | | | | | |  // [271]
        | | | | | | | | | | | +-------+ | | | | | | | | | | | |  // [271]
        | | | | | | | | | | | | +---+ | | | | | | | | | | | | |  // [271]
        | | | | | | | | | | | | |   | | | | | | | | | | | | | |  // [271]
        | | | | | | | | | | | | +---+ | | | | | | | | | | | | |  // [271]
        | | | | | | | | | | | +-------+ | | | | | | | | | | | |  // [271]
        | | | | | | | | | | +-.---------+ | | | | | | | | | | |  // [271]
        | | | | | | | | | +---.-----------+ | | | | | | | | | |  // [271]
        | | | | | | | | +-----.-------------+ | | | | | | | | |  // [271]
        | | | | | | | +-------.---------------+ | | | | | | | |  // [271]
        | | | | | | +---------.-----------------+ | | | | | | |  // [271]
        | | | | | +-.---------.-------------------+ | | | | | |  // [271]
        | | | | +---.---------.---------------------+ | | | | |  // [271]
        | | | +-----.---------.-----------------------+ | | | |  // [271]
        | | +-------.---------.-------------------------+ | | |  // [271]
        | +---------.---------.---------------------------+ | |  // [271]
        +-----------.---------.-----------------------------+ |  // [271]
                    |         |                         ^^^   |  // [271]
                    |<-@i35@->|                         |||   |  // [271]
                        VVV                   #_I35_IU5_DIA_# |  // [271]
                    d_i35_iu5[ i35 ]==>( iu5 )          |||   |  // [271]
                        VVV                             |||   |  // [271]
                    |<-@u05@->| : Uniform_rings_____5   |||   |  // [271]
                    |<-@iu5@->| : Inner___Uniform___5   VVV   |  // [271]
        +-----------.---------.-----------------------------+ |  // [271]
        |           .         .                             | |  // [271]
        |           .         .                             | |  // [271]
        |           .         .                             | |  // [271]
        |           .         .                             | |  // [271]
        |           .         .                             | |  // [271]
        |           +---------.-----------------+           | |  // [271]
        |           | +-------.---------------+ |           | |  // [271]
        |           | | +-----.-------------+ | |           | |  // [271]
        |           | | | +---.-----------+ | | |           | |  // [271]
        |           | | | | +-.---------+ | | | |           | |  // [271]
        |           | | | | | +-------+ | | | | |           | |  // [271]
        |           | | | | | | +---+ | | | | | |           | |  // [271]
        |           | | | | | | |   | | | | | | |           | |  // [271]
        |           | | | | | | +---+ | | | | | |           | |  // [271]
        |           | | | | | +-------+ | | | | |           | |  // [271]
        |           | | | | +-----------+ | | | |           | |  // [271]
        |           | | | +---------------+ | | |           | |  // [271]
        |           | | +-------------------+ | |           | |  // [271]
        |           | +-----------------------+ |           | |  // [271]
        |           +---------------------------+           | |  // [271]
        |                                                   | |  // [271]
        |                                                   | |  // [271]
        |                                                   | |  // [271]
        |                                                   | |  // [271]
        |                                                   | |  // [271]
        +---------------------------------------------------+ |  // [271]
                                                              |  // [271]
    :-----------------------------------: #_USE_RIN_DIAGRAM_# +  // [271]
    #_THE_WRONG_RINGS_# :-------------------------------------+  // [271]
                                                              |  // [271]
        I like these table names. But it ALIASES two          |  // [271]
        different[ u05 ]variables.                            |  // [271]
                                                              |  // [271]
            d_i35_u05[ i35 ] ===> u05 < < < DIFFERING_U05(s). |  // [271]
            d_o35_u05[ o35 ] ===> u05 < < < DIFFERING_U05(s). |  // [271]
                                                              |  // [271]
        This is uglier & harder to type :                     |  // [271]
        This is better...                                     |  // [271]
                                                              |  // [271]
            d_i35_i05[ i35 ] ===> i05 < < Uniform Inner 5     |  // [271]
            d_o35_o05[ o35 ] ===> o05 < < Uniform Outer 5     |  // [271]
                                                              |  // [271]
        Actually... Replace the zero with letter....          |  // [271]
        USE THESE NAMES!                                      |  // [271]
                                                              |  // [271]
            d_i35_iu5[ i35 ] ===> iu5 < < Inner Uniform 5     |  // [271]
            d_o35_ou5[ o35 ] ===> ou5 < < Outer Uniform 5     |  // [271]
                                                              |  // [271]
    :---------------------------------------------------------+  // [271]
    #_THE_TWO_RINGS_OF_POWER_# :------------------------------+  // [271]
    #_AKA_THE_RIGHT_RINGS_# :---------------------------------+  // [271]
                                                              |  // [271]
            d_i35_iu5[ i35 ] ===> iu5 < < Inner Uniform 5     |  // [271]
            d_o35_ou5[ o35 ] ===> ou5 < < Outer Uniform 5     |  // [271]
                                                              |  // [271]
    :---------------------------------------------------------+  // [271]
    :---------------------------------------------------------+  // [271]
                                                                 // [271]
    @d20@ : Discrete_Tile_5THS                                   // [271]

    @LNK@ / #LNK# / [LNK] :-----------------------------------+  // [272]
                                                              |  // [272]
        Denotes some type of strong linkage between           |  // [272]
        two deltas in the code. The exact strong linkage      |  // [272]
        is not [ denoted / specified ] by the __LNK__         |  // [272]
        delta tag. If it really is a strong                   |  // [272]
        [ linkage / connection ] that should be obvious.      |  // [272]
    :---------------------------------------------------------+  // [272]
                                                                 // [272]
    @COLOR_BOD@ : Color Of Body Of Tile ( Main Color      )      // [272]
    @COLOR_EDG@ : Color Of Edge Of Tile ( Set Pixel Color )      // [272]
                : Set pixel color used for ornate details        // [272]
                                                                 // [272]
    #_RESTORE_HONOR_TO_THE_KANJI_FAMILY_# :-------------------+  // [272]
                                                              |  // [272]
        Too verbose... Just say...                            |  // [272]
                                                              |  // [272]
        [_RESTORE_HONOR_TO_KANJI_NAME_]                       |  // [272]
                                                              |  // [272]
    :---------------------------------------------------------+  // [272]
    #_RESTORE_HONOR_TO_KANJI_NAME_# :-------------------------+  // [272]
    #_YOU_DONE_FUCKED_UP_GOOD_# :-----------------------------+  // [272]
                                                              |  // [272]
        |                     |                               |  // [272]
        |<------[FOURSET]---->|                               |  // [272]
        |                     |                               |  // [272]
        +---+ +---+ +---+ +---+       +---+ +---+ +---+ +---+ |  // [272]
        |T_L| |5x5| |5x5| |T_R|       |T_L| |   | |   | |T_R| |  // [272]
        +---+ +---+ +---+ +---+       +---+ +---+ +---+ +---+ |  // [272]
        +---+ +---+ +---+ +---+       +---+ +---+ +---+ +---+ |  // [272]
        |5x5| |5x5| |5x5| |5x5|       |   | |   | |   | |   | |  // [272]
        +---+ +---+ +---+ +---+ > > > +---+ +---+ +---+ +---+ |  // [272]
        +---+ +---+ +---+ +---+       +---+ +---+ +---+ +---+ |  // [272]
        |5x5| |5x5| |5x5| |5x5|       |   | |   | |   | |   | |  // [272]
        +---+ +---+ +---+ +---+       +---+ +---+ +---+ +---+ |  // [272]
        +---+ +---+ +---+ +---+       +---+ +---+ +---+ +---+ |  // [272]
        |B_L| |5x5| |5x5| |B_R|       |B_L| |   | |   | |B_R| |  // [272]
        +---+ +---+ +---+ +---+       +---+ +---+ +---+ +---+ |  // [272]
                                                 V            |  // [272]
                                                 V            |  // [272]
                                                 V            |  // [272]
                    +---+ +---+       +---+ +---------+ +---+ |  // [272]
                    |T_L| |T_R|       |T_L| |         | |T_R| |  // [272]
             .< < < +---+ +---+ < < < +---+ |         | +---+ |  // [272]
             .< < < +---+ +---+ < < < +-----+         +-----+ |  // [272]
             V      |B_L| |B_R|       |                     | |  // [272]
             V      +---+ +---+       |                     | |  // [272]
        +---+ +---+                   |                     | |  // [272]
        |5x5| |5x5|                   |                     | |  // [272]
        +---+ +---+                   +-----+         +-----+ |  // [272]
        +---+ +---+                   +---+ |         | +---+ |  // [272]
        |5x5| |5x5|                   |B_L| |         | |B_R| |  // [272]
        +---+ +---+                   +---+ +---------+ +---+ |  // [272]
                                                              |  // [272]
        |<--D10-->|       +---------------------------------+ |  // [272]
        |<--GEO-->|       | TAG[__10_x_10_overlay_you_fool__] |  // [272]
                          |                                 | |  // [272]
        +---+-+---+ < < < | Does this tile look like        | |  // [272]
        |         | < < < | a 20_X_20 asshole?              | |  // [272]
        + 10_X_10 + < < < |                                 | |  // [272]
        + SUBTILE + < < < | No , it is __NOT__.             | |  // [272]
        |         | < < < |                                 | |  // [272]
        +---+-+---+ < < < | And that's why                  | |  // [272]
                          | we can't have nice things.      | |  // [272]
                          +---------------------------------+ |  // [272]
                                                              |  // [272]
    :-----------------------: #_RESTORE_HONOR_TO_KANJI_NAME_# +  // [272]
    :---------------------------: #_YOU_DONE_FUCKED_UP_GOOD_# +  // [272]

    @binfour@ : Not politically correct anymore. We call         // [275]
              : it by it's new name[ u25clus ].                  // [275]
                                                                 // [275]
    #_FUTURE_REFACTORING_NOTE_2022_09_17_# :------------------+  // [275]
                                                              |  // [275]
        I suspect : [ binclus ]===[ u25clus ]                 |  // [275]
                  : In many, but not all cases.               |  // [275]
                                                              |  // [275]
    :---------------------------------------------------------+  // [275]

    #_35_RINGS_MIGHT_NOT_GO_IN_EVENLY_# :---------------------+  // [---][276]
                                                              |  // [---][276]
        I want a pixel fucking perfect renderer.              |  // [---][276]
        ( pixel fucking perfect === pixel perfect )           |  // [---][276]
                                                              |  // [---][276]
        Pick 35 or the first number GREATER THAN 35 that      |  // [---][276]
        goes in EVENLY to[ c_du0 ].       ^                   |  // [---][276]
                                          +--(I_Take_This_Back)  // [---][276]
        ( c_du0 === 0x002222 === 8738 )                       |  // [---][276]
                                                              |  // [---][276]
        ... After internet searching ...                      |  // [---][276]
                                                              |  // [---][276]
        Factors Of 8738 : 1, 2, 17, 34, 257, 514, 4369, 8738  |  // [---][276]
                                         ^^                   |  // [---][276]
                                         ^^                   |  // [---][276]
                            Yeah... Maybe I take back the     |  // [---][276]
                            "Next Greater". Since If we just  |  // [---][276]
                            go down by 1 we get 34.           |  // [---][276]
                                                              |  // [---][276]
    :---------------------------------------------------------+  // [---][276]
    #_MORE_RING_THOUGHTS_# :----------------------------------+  // [---][276]
                                                              |  // [---][276]
        Old Thought :                                         |  // [---][276]
                                                              |  // [---][276]
            d_i35_i05[ i35 ] ===> i05 ( Not Doable )          |  // [---][276]
            d_o35_o05[ o35 ] ===> o05 ( Not Doable )          |  // [---][276]
                                                              |  // [---][276]
        8738 / 2 / 34 === 128.5 ... NOT EVENLY.               |  // [---][276]
                                                              |  // [---][276]
        You'd have to use.... 17...                           |  // [---][276]
                                                              |  // [---][276]
        8738 / 4 / 34 === 64.25 .... Not evenly...            |  // [---][276]
                                                              |  // [---][276]
        ..........                                            |  // [---][276]
                                                              |  // [---][276]
        We can't have TWO RINGS.                              |  // [---][276]
                                                              |  // [---][276]
            d_i34_i05[ i34 ] ===> i05  <<<  CANT DO THIS      |  // [---][276]
            d_o34_o05[ o34 ] ===> o05  <<<  CANT DO THIS      |  // [---][276]
                                                              |  // [---][276]
            d_r34_i05[ r34 ] ===> i05  <<<  CANT DO THIS      |  // [---][276]
            d_r34_o05[ r34 ] ===> o05  <<<  CANT DO THIS      |  // [---][276]
                                                              |  // [---][276]
            d_r34_r10[ r34 ] ===> i05  <<<  YES_WE_CAN_OBAMA  |  // [---][276]
            d_r34_r10[ r34 ] ===> o05  <<<  YES_WE_CAN_OBAMA  |  // [---][276]
                                                              |  // [---][276]
        Hold up... This means we are dividing everything      |  // [---][276]
        by... 68 , NOT 34... Rings have two sides.            |  // [---][276]
        One ring takes up two discrete units.                 |  // [---][276]
                                                              |  // [---][276]
        Wait... No... Dividing by... I'll be back.            |  // [---][276]
                                                              |  // [---][276]
        Okay... So it' is actually 17_rings , not 34_rings,   |  // [---][276]
        but we need to differentiate between if it is         |  // [---][276]
        the "[MIN/LEF/TOP]" of the ring or "[MAX/RIG/BOT]"    |  // [---][276]
        of our ring.                                          |  // [---][276]
                                                              |  // [---][276]
        Final Lookup Table Name for[ USE_RIN ]mode:           |  // [---][276]
                                                              |  // [---][276]
            d_r34_r10                                         |  // [---][276]
                                                              |  // [---][276]
    :---------------------------------------------------------+  // [---][276]
    #_NOT_R17_R05_# :-----------------------------------------+  // [---][276]
                                                              |  // [---][276]
        Technically we are mapping 17 rings to 5 rings.       |  // [---][276]
        However, 17 rings is 34 values.                       |  // [---][276]
        However,  5 rings is 10 values.                       |  // [---][276]
                                                              |  // [---][276]
        The "left and right" of ring are different positions. |  // [---][276]
        The "top and bottom" of ring are different positions. |  // [---][276]
                                                              |  // [---][276]
        If it helps, think of "R" as "Range" instead of       |  // [---][276]
        "ring".                                               |  // [---][276]
    :---------------------------------------------------------+  // [---][276]
                                                                 // [---][276]
    @oir@ : One_Indexed_Ring ( Start Counting At 1 not 0 )       // [---][276]
                                                                 // [---][276]
    @I_Take_This_Back@ : Was a bad decision on my part.          // [---][276]
                       : IDIOM : Means "My initial decision"     // [---][276]
                       : was [incorrect/wrong] .                 // [---][276]
                                                                 // [---][276]
    #_RING_MAPPING_ARRAY_# :----------------------------------+  // [---][276]
                                                              |  // [---][276]
        The ring mapping array is configured with two         |  // [---][276]
        partitions. The  "min/lef/top" parition and           |  // [---][276]
        the "max/rig/bot" partition.                          |  // [---][276]
                                                              |  // [---][276]
        You DONT HAVE TO PARITION IT THIS WAY.                |  // [---][276]
                                                              |  // [---][276]
        However the current setup as written on               |  // [---][276]
        2022_09_07( VIDEO #2_7_6 ) is going to                |  // [---][276]
        create symmetric warping.                             |  // [---][276]
                                                              |  // [---][276]
        I don't think asymmetric warping will                 |  // [---][276]
        look good. The reason is that we are                  |  // [---][276]
        NOT TRYING TO FAKE AN ANGLED CAMERA.                  |  // [---][276]
                                                              |  // [---][276]
        Design tiles for ORTHOGRAPHIC CAMERA that is          |  // [---][276]
        [perpendicular/normal] to the front face of tiles.    |  // [---][276]
                                                              |  // [---][276]
        Then maybe later bake in normal maps to fake          |  // [---][276]
        light sources hitting from an angle.                  |  // [---][276]
                                                              |  // [---][276]
    :---------------------------------------------------------+  // [---][276]
    #__OIR_MIN__# :-------------------------------------------+  // [---][276]
    #__OIR_MAX__# :-------------------------------------------+  // [---][276]
                                                              |  // [---][276]
        Our constants are "1 Indexed" in variable naming      |  // [---][276]
        so that it is easier to wrap our head around          |  // [---][276]
        what is going on.                                     |  // [---][276]
                                                              |  // [---][276]
    :---------------------------------------------------------+  // [---][276]
    :---------------------------------------------------------+  // [---][276]
    #__OIR_MIN__# :-------------------------------------------+  // [---][276]
                                                              |  // [---][276]
        The minimum/left/top distribution of ring mapping     |  // [---][276]
        array. OIR === "One Indexed Ring".                    |  // [---][276]
                                                              |  // [---][276]
    :---------------------------------------------------------+  // [---][276]
    #__OIR_MAX__# :-------------------------------------------+  // [---][276]
                                                              |  // [---][276]
        The maximum/right/bot distribution of ring mapping    |  // [---][276]
        array. OIR === "One Indexed Ring".                    |  // [---][276]
                                                              |  // [---][276]
    :---------------------------------------------------------+  // [---][276]
    #_TERSER_RING_NAMES_# :-----------------------------------+  // [---][276]
                                                              |  // [---][276]
        @ri0@ : Ring Index 0 <---------------------------+    |  // [---][276]
        @ri1@ : Ring Index 1 <------------------------+  |    |  // [---][276]
        @ri2@ : Ring Index 2 <---------------------+  |  |    |  // [---][276]
        @ri3@ : Ring Index 3 <-----------+         |  |  |    |  // [---][276]
        @ri4@ : Ring Index 4 <--+ RING_0 |__RING_1 |3 |4 |5   |  // [---][276]
        @ri5@ : Ring Index 5 <--+ RING_0 |  RING_1 |3 |4 |5   |  // [---][276]
        @ri6@ : Ring Index 6 <-----------+         |  |  |    |  // [---][276]
        @ri7@ : Ring Index 7 <---------------------+  |  |    |  // [---][276]
        @ri8@ : Ring Index 8 <------------------------+  |    |  // [---][276]
        @ri9@ : Ring Index 9 <---------------------------+    |  // [---][276]
                                                              |  // [---][276]
        c_oir_min_001____r10_000 ===> c_ri0                   |  // [---][276]
        c_oir_min_001____r10_000 ===> c_ri0                   |  // [---][276]
        c_oir_min_002____r10_001 ===> c_ri1                   |  // [---][276]
        c_oir_min_002____r10_001 ===> c_ri1                   |  // [---][276]
        c_oir_min_003____r10_002 ===> c_ri2                   |  // [---][276]
        c_oir_min_003____r10_002 ===> c_ri2                   |  // [---][276]
        c_oir_min_003____r10_002 ===> c_ri2                   |  // [---][276]
        c_oir_min_004____r10_003 ===> c_ri3                   |  // [---][276]
        c_oir_min_004____r10_003 ===> c_ri3                   |  // [---][276]
        c_oir_min_004____r10_003 ===> c_ri3                   |  // [---][276]
        c_oir_min_004____r10_003 ===> c_ri3                   |  // [---][276]
        c_oir_min_005____r10_004 ===> c_ri4                   |  // [---][276]
        c_oir_min_005____r10_004 ===> c_ri4                   |  // [---][276]
        c_oir_min_005____r10_004 ===> c_ri4                   |  // [---][276]
        c_oir_min_005____r10_004 ===> c_ri4                   |  // [---][276]
        c_oir_min_005____r10_004 ===> c_ri4                   |  // [---][276]
        c_oir_min_005____r10_004 ===> c_ri4                   |  // [---][276]
                                                              |  // [---][276]
        c_oir_max_006____r10_005 ===> c_ri5                   |  // [---][276]
        c_oir_max_006____r10_005 ===> c_ri5                   |  // [---][276]
        c_oir_max_006____r10_005 ===> c_ri5                   |  // [---][276]
        c_oir_max_006____r10_005 ===> c_ri5                   |  // [---][276]
        c_oir_max_006____r10_005 ===> c_ri5                   |  // [---][276]
        c_oir_max_006____r10_005 ===> c_ri5                   |  // [---][276]
        c_oir_max_007____r10_006 ===> c_ri6                   |  // [---][276]
        c_oir_max_007____r10_006 ===> c_ri6                   |  // [---][276]
        c_oir_max_007____r10_006 ===> c_ri6                   |  // [---][276]
        c_oir_max_007____r10_006 ===> c_ri6                   |  // [---][276]
        c_oir_max_008____r10_007 ===> c_ri7                   |  // [---][276]
        c_oir_max_008____r10_007 ===> c_ri7                   |  // [---][276]
        c_oir_max_008____r10_007 ===> c_ri7                   |  // [---][276]
        c_oir_max_009____r10_008 ===> c_ri8                   |  // [---][276]
        c_oir_max_009____r10_008 ===> c_ri8                   |  // [---][276]
        c_oir_max_010____r10_009 ===> c_ri9                   |  // [---][276]
        c_oir_max_010____r10_009 ===> c_ri9                   |  // [---][276]
                                                              |  // [---][276]
    :---------------------------------------------------------+  // [---][276]
                                                                 // [---][276]
    @BULGNIL@ : Means( Bulge Nil )BUT_USE[ BULGNOT ]             // [---][276]
                                                                 // [---][276]
    @BULGOUT@ : Bulge Out                                        // [---][276]
    @BULGNOT@ : Bulge Not                                        // [---][276]
    @BULGINN@ : Bulge Inn                                        // [---][276]
                                                                 // [---][276]
    @NOT_SAME_ADDR@ : Not Same Addresses                         // [---][276]
                                                                 // [---][276]
    @bu3@ : BUlge ( 3 choices ) 0:BULGOUT,1:BULGNOT,2:BULGINN    // [---][276]
    @r34@ : Ring_Address (34 total addresses)[DENSE_RING]        // [---][276]
          : 2 ring-addreses per ring.                            // [---][276]
    @r10@ : Ring_Address (10 total addresses)[LIGHT_RING]        // [---][276]
                                                                 // [---][276]
                                                                 // [---][276]
    #_RING_MAPPED_TILES_# :-----------------------------------+  // [---][276]
                                                              |  // [---][276]
    TAG[ __34_dense_tree_rings_to_filter_down__ ]             |  // [277][276]
                                          VV                  |  // [277][276]
          +===================+           VV                  |  // [277][276]
          ||+===============+||           VV                  |  // [277][276]
          ||||+===========+||||           VV                  |  // [277][276]
          ||||||+=======+||||||           VV                  |  // [277][276]
          ||||||||+===+||||||||           VV                  |  // [277][276]
     < < <||||||||| + |||||||||< < < < < < <                  |  // [277][276]
     V    ||||||||+===+||||||||                               |  // [277][276]
     V    ||||||+=======+||||||                               |  // [277][276]
     V    ||||+===========+||||                               |  // [277][276]
     V    ||+===============+||                               |  // [277][276]
     V    +===================+                               |  // [277][276]
     V    |<----- @r34@ ----->|                               |  // [277][276]
     V                                                        |  // [277][276]
     V    |<----- @r10@ ----->|                               |  // [277][276]
     V    |0|1|2|3|4|5|6|7|8|9|                               |  // [277][276]
     V    +-------------------+       |0|1|2|3|4|5|6|7|8|9|   |  // [277][276]
     V    | +---------------+ |       |1| | | | | | | | | |   |  // [277][276]
     V    | | +-----------+ | |       |2| | | | | | | | | |   |  // [277][276]
     V    | | | +-------+ | | |       |3| | | | | | | | | |   |  // [277][276]
     V    | | | | +---+ | | | |       |4| | | | | | | | | |   |  // [277][276]
     > > >| | | | | + | | | | | > > > |5| | | | | | | | | |   |  // [277][276]
          | | | | +---+ | | | |       |6| | | | | | | | | |   |  // [---][276]
          | | | +-------+ | | |       |7| | | | | | | | | |   |  // [---][276]
          | | +-----------+ | |       |8| | | | | | | | | |   |  // [---][276]
          | +---------------+ |       |9| | | | | | | | | |   |  // [---][276]
          +-------------------+               V               |  // [---][276]
                                              V               |  // [---][276]
      +-----------------+------+---- [T_L] ---V--- [T_R] ----+|  // [---][276]
      |                 |      |       |             |       ||  // [---][276]
      V                 V      | +-----+-----+ +-----+-----+ ||  // [---][276]
    +---+ +---+ +---+ +---+    | ||0|1|2|3|4|| ||5|6|7|8|9|| ||  // [---][276]
    |T_L| |   | |   | |T_R|    | ||1| | | | || || | | | | || ||  // [---][276]
    +---+ +---+ +---+ +---+    | ||2| | | | || || | | | | || ||  // [---][276]
    +---+ +---+ +---+ +---+    | ||3| | | | || || | | | | || ||  // [---][276]
    |   | |   | |   | |   |    | ||4| | | | || || | | | | || ||  // [---][276]
    +---+ +---+ +---+ +---+    | +-----------+ +-----------+ ||  // [---][276]
    +---+ +---+ +---+ +---+    | +-----------+ +-----------+ ||  // [---][276]
    |   | |   | |   | |   |    | ||5| | | | || || | | | | || ||  // [---][276]
    +---+ +---+ +---+ +---+    | ||6| | | | || || | | | | || ||  // [---][276]
    +---+ +---+ +---+ +---+    | ||7| | | | || || | | | | || ||  // [---][276]
    |B_L| |   | |   | |B_R|    | ||8| | | | || || | | | | || ||  // [---][276]
    +---+ +---+ +---+ +---+    | ||9| | | | || || | | | | || ||  // [---][276]
    | ^                 ^ |    | +-----+-----+ +-----+-----+ ||  // [---][276]
    | |                 | |    |       |             |       ||  // [---][276]
    | +-----------------+------+---- [B_L] ------- [B_R] ----+|  // [---][276]
    |                     |                                   |  // [---][276]
    |<-----[fourset]----->|                                   |  // [---][276]
                                                              |  // [---][276]
    Referencing Touching Nothing Tile For Our Example         |  // [---][276]
                                                              |  // [---][276]
                                                              |  // [---][276]
    :---------------------------------: #_RING_MAPPED_TILES_# +  // [---][276]

    @NOEVE@ : NOt_EVEn ( Doesn't Go In Evenly )                  // [277]

    #_CAP_272_273_# :-----------------------------------------+  // [278]
                                                              |  // [278]
        Copy_And_Pasted : From #2_7_2 & #2_7_3 videos.        |  // [278]
                                                              |  // [278]
        The code is IDENTICAL. We are not going to            |  // [278]
        refactor into a re-usable chunk of code though        |  // [278]
        because.                                              |  // [278]
                                                              |  // [278]
            1. Code branches might diverge in future.         |  // [278]
                                                              |  // [278]
            2. Duplication of code serves as redundancy       |  // [278]
               to verify correctness.                         |  // [278]
                                                              |  // [278]
            3. Extra work, no extra functionality, but        |  // [278]
               does add RISK because of items #1 and #2.      |  // [278]
                                                              |  // [278]
    :---------------------------------------------------------+  // [278]
    #_DU3_AND_BU3_ARE_DIFFERENT_THINGS_# :--------------------+  // [278]
                                                              |  // [278]
        DU3 : Number of discrete units in our 4th             |  // [278]
            : tile size. ( our 8x sized tile )                |  // [278]
                                                              |  // [278]
        BU3 : Bulge Mode Enumeration. [ 0 | 1 | 2 ]           |  // [278]
    +---------------------------------------------------------+  // [278]
    #_ITS_BU3_NOT_DU3_# :-------------------------------------+  // [278]
                                                              |  // [278]
        I keep fucking this up.                               |  // [278]
        SEE[ _DU3_AND_BU3_ARE_DIFFERENT_THINGS_ ]             |  // [278]
                                                              |  // [278]
    :---------------------------------------------------------+  // [278]
    #_I_CANT_SPELL_THE_WORD_BULGE_# :-------------------------+  // [278]
                                                              |  // [278]
        What the fuck is a  "Bloooge" ?                       |  // [278]
                                                              |  // [278]
    :---------------------------------------------------------+  // [278]
    #_USE_RIN_IS_NOT_META_BULGE_# :---------------------------+  // [278]
                                                              |  // [278]
        If you set down 4 tiles of the same value :           |  // [278]
                                                              |  // [278]
        +---------------+ +---------------+                   |  // [278]
        | +-----------+ | | +-----------+ |                   |  // [278]
        | | +-------+ | | | | +-------+ | |                   |  // [278]
        | | | +---+ | | | | | | +---+ | | |                   |  // [278]
        | | | |   | | | | | | | |   | | | |                   |  // [278]
        | | | +---+ | | | | | | +---+ | | |                   |  // [278]
        | | +-------+ | | | | +-------+ | |                   |  // [278]
        | +-----------+ | | +-----------+ |                   |  // [278]
        +---------------+ +---------------+                   |  // [278]
        +---------------+ +---------------+                   |  // [278]
        | +-----------+ | | +-----------+ |                   |  // [278]
        | | +-------+ | | | | +-------+ | |                   |  // [278]
        | | | +---+ | | | | | | +---+ | | |                   |  // [278]
        | | | |   | | | | | | | |   | | | |                   |  // [278]
        | | | +---+ | | | | | | +---+ | | |                   |  // [278]
        | | +-------+ | | | | +-------+ | |                   |  // [278]
        | +-----------+ | | +-----------+ |                   |  // [278]
        +---------------+ +---------------+                   |  // [278]
                                                              |  // [278]
        They will snap together into a META_PATTERN :         |  // [278]
                                                              |  // [278]
        +---------------+ +---------------+                   |  // [278]
        | +-----------------------------+ |                   |  // [278]
        | | +-------------------------+ | |                   |  // [278]
        | | | +---+             +---+ | | |                   |  // [278]
        | | | |   |             |   | | | |                   |  // [278]
        | | | +---+             +---+ | | |                   |  // [278]
        | | |                         | | |                   |  // [278]
        | | |                         | | |                   |  // [278]
        + | |                         | | +                   |  // [278]
        + | |                         | | +                   |  // [278]
        | | |                         | | |                   |  // [278]
        | | |                         | | |                   |  // [278]
        | | | +---+             +---+ | | |                   |  // [278]
        | | | |   |             |   | | | |                   |  // [278]
        | | | +---+             +---+ | | |                   |  // [278]
        | | +-------------------------+ | |                   |  // [278]
        | +-----------------------------+ |                   |  // [278]
        +---------------+ +---------------+                   |  // [278]
                                                              |  // [278]
        +---------------------------------+                   |  // [278]
        | You might _THINK_ that if :     |                   |  // [278]
        |                                 |                   |  // [278]
        | [  c_bu3_bulginn  ]             |                   |  // [278]
        |                                 |                   |  // [278]
        | is configured that this         |                   |  // [278]
        | pattern will now look like this:|                   |  // [278]
        +---------------------------------+                   |  // [278]
                                                              |  // [278]
        +---------------+ +---------------+  < < < _W_R_O_N_G |  // [278]
        | +-----------------------------+ |  < < < _W_R_O_N_G |  // [278]
        | | +-------------------------+ | |  < < < _W_R_O_N_G |  // [278]
        | | |                         | | |  < < < _W_R_O_N_G |  // [278]
        | | |   +-----------------+   | | |  < < < _W_R_O_N_G |  // [278]
        | | |   |                 |   | | |  < < < _W_R_O_N_G |  // [278]
        | | |   |   +---+ +---+   |   | | |  < < < _W_R_O_N_G |  // [278]
        | | |   |   |   | |   |   |   | | |  < < < _W_R_O_N_G |  // [278]
        + | |   |   +---+ +---+   |   | | +  < < < _W_R_O_N_G |  // [278]
        + | |   |   +---+ +---+   |   | | +  < < < _W_R_O_N_G |  // [278]
        | | |   |   |   | |   |   |   | | |  < < < _W_R_O_N_G |  // [278]
        | | |   |   +---+ +---+   |   | | |  < < < _W_R_O_N_G |  // [278]
        | | |   |                 |   | | |  < < < _W_R_O_N_G |  // [278]
        | | |   +-----------------+   | | |  < < < _W_R_O_N_G |  // [278]
        | | |                         | | |  < < < _W_R_O_N_G |  // [278]
        | | +-------------------------+ | |  < < < _W_R_O_N_G |  // [278]
        | +-----------------------------+ |  < < < _W_R_O_N_G |  // [278]
        +---------------+ +---------------+  < < < _W_R_O_N_G |  // [278]
                                                              |  // [278]
        It will look like this :                              |  // [278]
                                                              |  // [278]
        +---------------+ +---------------+  < < < _Y_E_S____ |  // [278]
        | +-----------+ | | +-----------+ |  < < < _Y_E_S____ |  // [278]
        | |           | | | |           | |  < < < _Y_E_S____ |  // [278]
        | |  ++===++  | | | |  ++===++  | |  < < < _Y_E_S____ |  // [278]
        | |  ||[ ]||  | | | |  ||[ ]||  | |  < < < _Y_E_S____ |  // [278]
        | |  ++===++  | | | |  ++===++  | |  < < < _Y_E_S____ |  // [278]
        | |           | | | |           | |  < < < _Y_E_S____ |  // [278]
        | +-----------+ | | +-----------+ |  < < < _Y_E_S____ |  // [278]
        +---------------+ +---------------+  < < < _Y_E_S____ |  // [278]
        +---------------+ +---------------+  < < < _Y_E_S____ |  // [278]
        | +-----------+ | | +-----------+ |  < < < _Y_E_S____ |  // [278]
        | |           | | | |           | |  < < < _Y_E_S____ |  // [278]
        | |  ++===++  | | | |  ++===++  | |  < < < _Y_E_S____ |  // [278]
        | |  ||[ ]||  | | | |  ||[ ]||  | |  < < < _Y_E_S____ |  // [278]
        | |  ++===++  | | | |  ++===++  | |  < < < _Y_E_S____ |  // [278]
        | |           | | | |           | |  < < < _Y_E_S____ |  // [278]
        | +-----------+ | | +-----------+ |  < < < _Y_E_S____ |  // [278]
        +---------------+ +---------------+  < < < _Y_E_S____ |  // [278]
                                                              |  // [278]
        Because the bulge is on a "per-tile"                  |  // [278]
        basis, not a "per-agglimation"                        |  // [278]
        basis.                                                |  // [278]
                                                              |  // [278]
        We will however be adding bulging on                  |  // [278]
        a "per-agglimation" basis.                            |  // [278]
        ( "per-meta-structure" basis )                        |  // [278]
        In the future.                                        |  // [278]
                                                              |  // [278]
    :-------------------------: #_USE_RIN_IS_NOT_META_BULGE_# +  // [278]

    #_DOUBLE_ENTENDRE_MASTER_MEMORY_EXTENSIONS_# :------------+  // [281]
                                                              |  // [281]
                                   TAG[ _MMT_PREFAB_RESEARCH_ ]  // [462]
                                                              |  // [281]
    |<------------------------ d_pix2048 --------------------->| // [281]
    |<----512---->||<----512---->||<----512---->||<----512---->| // [281]
    +--- ===== ---++--- ===== ---++--- ===== ---++--- ===== ---+ // [281]
    |    c_mm0    ||    c_mm1    ||    c_mm2    ||    c_mm3    | // [281]
    |             ||             ||             ||             | // [281]
    |     [0]     ||     [1]     ||     [2]     ||     [3]     | // [281]
    |             ||             ||             ||             | // [281]
    |             ||             ||             ||             | // [281]
    +--- ===== ---++--- ===== ---++--- ===== ---++--- ===== ---+ // [281]
    +--- ===== ---++--- ===== ---++--- ===== ---++--- ===== ---+ // [281]
    |    c_mm4    ||    c_mm5    ||    c_mm6    ||    c_mm7    | // [281]
    |             ||             ||             ||             | // [281]
    |     [4]     ||     [5]     ||     [6]     ||     [7]     | // [281]
    |             ||             ||             ||             | // [281]
    |             ||             ||             ||             | // [281]
    +--- ===== ---++--- ===== ---++--- ===== ---++--- ===== ---+ // [281]
    +--- ===== ---++--- ===== ---++--- ===== ---++--- ===== ---+ // [281]
    |    c_mm8    ||    c_mm9    ||    c_mma    ||    c_mmb    | // [281]
    |             ||             ||             ||             | // [281]
    |     [8]     ||     [9]     ||     [A]     ||     [B]     | // [281]
    |             ||             ||             ||             | // [281]
    |             ||             ||             ||             | // [281]
    +--- ===== ---++--- ===== ---++--- ===== ---++--- ===== ---+ // [281]
    +--- ===== ---++--- ===== ---++--- ===== ---++--- ===== ---+ // [281]
    |    c_mmc    ||    c_mmd    ||    c_mme    ||    c_mmf    | // [281]
    |             ||             ||             ||             | // [281]
    |    c_g64    ||    c_b64    ||    c_f64    ||    c_d64    | // [281]
    |             ||             ||             ||             | // [281]
    |   [_012_]   ||   [_013_]   ||   [_014_]   ||   [_015_]   | // [281]
    +--- ===== ---++--- ===== ---++--- ===== ---++--- ===== ---+ // [281]
           |              |              |              |     |  // [281]
           |              |              |              |     |  // [281]
           +--------------+------++------+--------------+     |  // [281]
                                 ||                           |  // [281]
                    [ _DOUBLE_ENTENDRE_CELLS_ ]               |  // [281]
                    ( KyootBotHentaiMakerCell )               |  // [281]
                    ( ___Ive_Said_Too_Much___ )               |  // [281]
                                                              |  // [281]
                                                              |  // [281]
        c_g64 : Geometry64 ( 64x64 Pixels === Highest Rez )   |  // [281]
        c_b64 : Bombs___64 ( 64x64 Pixels === Highest Rez )   |  // [281]
        c_f64 : Fada____64 ( 64x64 Pixels === Highest Rez )   |  // [281]
        c_d64 : Decals__64 ( 64x64 Pixels === Highest Rez )   |  // [281]
                                                              |  // [281]
                                                              |  // [281]
        We need to make the next renderer as uniform as       |  // [281]
        possible and optimize it.                             |  // [281]
                                                              |  // [281]
        Optimizations :                                       |  // [281]
                                                              |  // [281]
            1. NO TRANSPARENCY.                               |  // [281]
               (But do need basic occlusion)                  |  // [281]
               ( #_BRANCHLESS_OCCLUSSION_# )                  |  // [281]
                                                              |  // [281]
            2. PRE-GENERATED AUTO TILES                       |  // [281]
                                                              |  // [281]
            3. 3 "versions" of every single graphic type      |  // [281]
               so that we can either animate it or            |  // [281]
               display it as destroyed.                       |  // [281]
                                                              |  // [281]
        KEEPING :------------------------------------------+  |  // [281]
           @am4@                                           |  |  // [281]
            AM4 auto tile masking feature.                 |  |  // [281]
            ... I thought it was called "AM4" because      |  |  // [281]
            .... 4 bits....                                |  |  // [281]
                                                           |  |  // [281]
            NAM[ latch_x , latch_y , mirror_x , mirror_y ] |  |  // [281]
            BIN[   0/1   |    0/1  |    0/1   |    0/1   ] |  |  // [281]
                                                           |  |  // [281]
            I SWEAR TO FUCKING GOD I ALREADY DOCUMENTED    |  |  // [281]
            THIS AND GAVE IT A VARIABLE NAME BUT CANNOT    |  |  // [281]
            FUCKING FIND IT. DATE[ 2022_09_18 ]            |  |  // [281]
            UPDATE[ _ITS_FUCKING_HERE_2022_   ]
        :--------------------------------------------------+  |  // [281]
                                                              |  // [281]
                                                              |  // [281]
        #_WHY_DECAL_LAYER_# :------------------------------+  |  // [281]
                                                           |  |  // [281]
            I already thought a decal layer would          |  |  // [281]
            be fun and useful to make the geometry         |  |  // [281]
            tiles look more interesting.                   |  |  // [281]
                                                           |  |  // [281]
            But __NOW__ it might be a necessary            |  |  // [281]
            feature to render graphics on top of           |  |  // [281]
            bombs. ( The  "( | )" , "( -- )" , "( + )" )   |  |  // [281]
            symbols that are needed to tell us how the     |  |  // [281]
            bomb explodes.                                 |  |  // [281]
                                                           |  |  // [281]
            Might not be necessary. But decals sound       |  |  // [281]
            fun anways so let's reserve that slot.         |  |  // [281]
                                                           |  |  // [281]
        +--------------------------------------------------+  |  // [281]
                                                              |  // [281]
    :---------------------------------------------------------+  // [281]
    #_G64_B64_F64_D64_# :-------------------------------------+  // [281]
                                   TAG[ _MMT_PREFAB_RESEARCH_ ]  // [462][281]
                                                              |  // [281]
        |<-------------512------------->|                     |  // [281]
        |<----------- c_g64 ----------->|  +----------------+ |  // [281]
        |<----------- c_b64 ----------->|  |                | |  // [281]
        |<----------- c_f64 ----------->|  |   _AYE__EYE_   | |  // [281]
        |<----------- c_d64 ----------->|  |                | |  // [281]
        +---+---+---+---+---+---+---+---+  +----------------+ |  // [281]
        |               |               |  |                | |  // [281]
        +               +               +  |     @ai3@ :    | |  // [281]
        |               |               |  |                | |  // [281]
        +     @ai3@:0   +    @ai3@:1    +  +----------------+ |  // [281]
        |               |               |  | Alternate      | |  // [281]
        +               +               +  | Image(layer)   | |  // [281]
        |               |               |  | 3_Total        | |  // [281]
        +---+---+---+---+---+---+---+---+  |                | |  // [281]
        |               |       |       |  | Same Idea As   | |  // [281]
        +               +       +       +  | [ la3 ]but     | |  // [281]
        |               |       |       |  | for hard coded | |  // [281]
        +     @ai3@:2   +---+---+---+---+  | graphics in    | |  // [281]
        |               |       |   |   |  | last row of    | |  // [281]
        +               +       +---+---+  | master memory  | |  // [281]
        |               |       |   |   |  | cells.         | |  // [281]
        +---+---+---+---+---+---+---+---+  +----------------+ |  // [281]
                                                              |  // [281]
        |                               |                     |  // [281]
        +---------------+---------------+                     |  // [281]
                        |           |<-----[     2048]----->| |  // [281]
                        |           |<----- d_pix2048 ----->| |  // [281]
                        |           +-----+-----+-----+-----+ |  // [281]
                        |           |     |     |     |     | |  // [281]
                        |           |     |     |     |     | |  // [281]
                        |           +-----+-----+-----+-----+ |  // [281]
                        |           |     |     |     |     | |  // [281]
                        |           |     |     |     |     | |  // [281]
            +----+-----+-----+      +-----+-----+-----+-----+ |  // [281]
            |    |     |     |      |     |     |     |     | |  // [281]
            V    V     V     V      |     |     |     |     | |  // [281]
        +-----+-----+-----+-----+   +-----+-----+-----+-----+ |  // [281]
        | mmc | mmc | mmc | mmc |   | mmc | mmc | mmc | mmc | |  // [281]
        | 012 | 013 | 014 | 015 |   | 012 | 013 | 014 | 015 | |  // [281]
        +-----+-----+-----+-----+   +-----+-----+-----+-----+ |  // [281]
        .     .     .     .     .   .     .     .     .     . |  // [281]
        | 512 | 512 | 512 | 512 |   | 512 | 512 | 512 | 512 | |  // [281]
                                                              |  // [281]
    :---------------------------------------------------------+  // [281]
                                                                 // [281]
    @ai3@ : Alternate_Image__layer__3_total                      // [281]
          : A_________I_____________3______                      // [281]
                                                                 // [281]
    @c_g64@ : Geometry MMCI , largest graphic : 64x64            // [281]
    @c_b64@ : Bomb     MMCI , largest graphic : 64x64            // [281]
    @c_f64@ : Fada     MMCI , largest graphic : 64x64            // [281]
    @c_d64@ : Decals   MMCI , largest graphic : 64x64            // [281]
                                                                 // [281]
    @am4@ : Autotile_Mask_4bits , seems to not have been         // [281]
          : documented? I swear I documented this. Did I         // [281]
          : give it a different name?                            // [281]
                                                                 // [281]
    @VIDEO_NAME@ : USE[ @VIDNAME@ ]                              // [281]
    @VIDNAME@    : The name of the video I put on youtube for    // [281]
                 : the current code delta( [###] )you are on.    // [281]
    @VID_URL@    : Video URL of youtube video tutorial for       // [281]
                 : the current code delta( [###] )you are on.    // [281]
                                                                 // [281]
    #_BRANCHLESS_OCCLUSSION_# :-------------------------------+  // [281]
                                                              |  // [281]
        Occlusion that works by swapping out the layer        |  // [281]
        index , and tile size we want to render , ahead       |  // [281]
        of time, so that we don't have to do a transparency   |  // [281]
        test on our fragments.                                |  // [281]
    :---------------------------------------------------------+  // [281]

    #_FOURSET_RENDER_V1_# :-----------------------------------+  // [282]
                                                              |  // [282]
        Fourset Renderer V1 ( Version 1 ).                    |  // [282]
                                                              |  // [282]
        This renderer is slow... Because...                   |  // [282]
                                                              |  // [282]
        1. Renders EVERY GOD DAMNED LAYER AND TILE SIZE.      |  // [282]
           ( 7 * 3 )== renders 21 tiles per fragment.         |  // [282]
                                                              |  // [282]
        2. Computes Auto Tile Design on the fly by smashing   |  // [282]
           together fourset graphics.                         |  // [282]
                                                              |  // [282]
        3. Composites 3 versions of fourset tile together.    |  // [282]
          WRONG( c_bulginn , c_bulgnot , c_bulgout )          |  // [282]
          YES[   c.bu3_bulginn ]( "c." for @1WAY_COMLINK@ )   |  // [282]
          YES[   c.bu3_bulgnot ]( "c." for @1WAY_COMLINK@ )   |  // [282]
          YES[   c.bu3_bulgout ]( "c." for @1WAY_COMLINK@ )   |  // [282]
                                                              |  // [282]
    +---------------------------------------------------------+  // [282]
    #_HENTAIF_RENDER_V1_# :-----------------------------------+  // [282]
                                                              |  // [282]
        Initial goal of this shader is to do exactly what     |  // [282]
        [ _FOURSET_RENDER_V1_ ]does , but optimized.          |  // [282]
                                                              |  // [282]
        #_HENTAIF_SHADER_OPTIMIZATION_001_# (@SPEEDUP@:21X)   |  // [282]
        We will do pre-test conditions on fragments to        |  // [282]
        select ahead of time :                                |  // [282]
                                                              |  // [282]
            1. te7 ( the tile size to render for fragment )   |  // [282]
            2. la3 (   layer (geom,bomb,fada) of fragment )   |  // [282]
            3. ai3 (   alternative_index      of fragment )   |  // [282]
                                                              |  // [282]
        #_HENTAIF_SHADER_OPTIMIZATION_002_# (@SPEEDUP@:UNKNOWN)  // [282]
        We also will pre-render our foursets into standard    |  // [282]
        wang auto tile format on the CPU side so we are       |  // [282]
        not doing compositing work on the fly.                |  // [282]
                                                              |  // [282]
        NOTE :--------------------------------------------+   |  // [282]
                                                          |   |  // [282]
            Calling this renderer "HentaiF" after the     |   |  // [282]
            Atomic_Alice_3 C99 library system of the      |   |  // [282]
            same name. In the future we might re-create   |   |  // [282]
            the "HentaiF" pre-processor to generate       |   |  // [282]
            auto tile graphics, because those graphics    |   |  // [282]
            were pretty fucking cool looking.             |   |  // [282]
                                                          |   |  // [282]
            -KanjiCoder , 2022_09_19 : 128AM              |   |  // [282]
        +-------------------------------------------------+   |  // [282]
    +---------------------------------------------------------+  // [282]
    #_Y_D_F_K_M_B__2022_# :-----------------------------------+  // [282]
                                                              |  // [282]
        YDFKMB : You Don't Fucking Know Me Bitch.             |  // [282]
                                                              |  // [282]
        Waterfall is good. But we are getting ahead of        |  // [282]
        ourselves. Like we can really tell this far in        |  // [282]
        the future what those shaders will be ?               |  // [282]
        ITS BEEN 200 VIDEOS SINCE WE SLATED THESE SHADERS!    |  // [282]
        A LOT HAS CHANGED. THE WORLD HAS CHANGED!!!!!!!!!!    |  // [282]
                                                              |  // [282]
        c_artgirl_ren_008 Probably_Wont_Be : @HEXASET1STAMP@  |  // [282]
        c_artgirl_ren_009 Probably_Wont_Be : @HEXASET1AUSET@  |  // [282]
                                                              |  // [282]
        (Atted comments so we don't orphan our tags)          |  // [282]
                                                              |  // [282]
    +---------------------------------------------------------+  // [282]
    #_NOTE_TO_SELF_2022_09_19_# :-----------------------------+  // [282]
                                                              |  // [282]
        That "oh god I don't want to fucking do this"         |  // [282]
        feeling could be a sign that you haven't planned      |  // [282]
        out what you are going to do well enough...           |  // [282]
                                                              |  // [282]
        So, don't feel bad about doing a video where you      |  // [282]
        just organize the code and refactor.                  |  // [282]
                                                              |  // [282]
        Get yourself in the correct head space man!           |  // [282]
        WRITE CODE LIKE A MACHINIST OR A CALIGRAPHY ARTIST!   |  // [282]
                                                              |  // [282]
        Machinist : 99% planning , 1% cutting (coding).       |  // [282]
                                                              |  // [282]
        Caligraphy: ITERATE ITERATE ITERATE                   |  // [282]
                  : *MAKE* *LOTS* *OF* *POTS*                 |  // [282]
                                                              |  // [282]
    +---------------------------------------------------------+  // [282]
    #_BULGE_ENUMS_INCORRECT_AGAIN_# :-------------------------+  // [282]
                                                              |  // [282]
        You'd think I'd be able to recall this correctly      |  // [282]
        by now. Holy fuck. Sometimes I wish I had a           |  // [282]
        photographic memory. But I hypothesize the tradeoff   |  // [282]
        with "photographic memory" is a loss of creativity.   |  // [282]
                                                              |  // [282]
        When your memories get fuzzy and fractured,           |  // [282]
        that allows them to "remix" in interesting ways.      |  // [282]
        Or you fabricate data for the missing parts.          |  // [282]
        Just a hypothesis.                                    |  // [282]
                                                              |  // [282]
    +---------------------------------------------------------+  // [282]
                                                                 // [282]
    @ONE_WAY_COMMENT_LINK@ : Same As[ @1WAY_COMLINK@ ]           // [282]
    @1WAY_COMLINK@ : One Way Comment Link. The comment can       // [282]
                   : take you TO THE RELEVANT CODE , but the     // [282]
                   : relevant code won't take you back to        // [282]
                   : the comment. Intentional to make it         // [282]
                   : easier to "CTRL+F" through the code         // [282]
                   : I am interested in looking at.              // [282]
                                                                 // [282]
    #_USE_ATH_# :---------------------------------------------+  // [282]
     @USE_ATH@                                                |  // [282]
                                                              |  // [282]
        Use "Active_Tile_Highlight". We are going to have     |  // [282]
        this code as an option that can be compiled out       |  // [282]
        of the shader to further optimize it. It is           |  // [282]
        needed when using game as editor. But when using      |  // [282]
        game as game, we don't want it.                       |  // [282]
                                                              |  // [282]
    :---------------------------------------------------------+  // [282]
    #_USE_BVS_# :---------------------------------------------+  // [282]
     @USE_BVS_@                                               |  // [282]
                                                              |  // [282]
        Use "Brush Value Symbol"                              |  // [282]
                                                              |  // [282]
        Have an overlay graphic in our active tile highlight  |  // [282]
        that indicates what material we are about to set      |  // [282]
        down if we click. Maybe just display a number.        |  // [282]
                                                              |  // [282]
    :---------------------------------------------------------+  // [282]
    #_USE_ATH_DIAGRAM_# :-------------------------------------+  // [282]
     @USE_ATH@ : Use Active Tile Highlight                       // [282]
                                                                 // [282]
          ...---+------------------+------------------+---...    // [282]
                | ################ |                  |          // [282]
                | ##            ## |                  |          // [282]
                | ##            ## |                  |          // [282]
                | ## @@USE_ATH@ ## |                  |          // [282]
                | ##            ## |                  |          // [282]
                | ##            ## |                  |          // [282]
                | ###### /\ ###### |                  |          // [282]
          ...---+-----  /  \  -----+------------------+---...    // [282]
                |      /    \      |                  |          // [282]
                |     ---  ---     |                  |          // [282]
                |       |  |       |                  |          // [282]
                |       |__|       |                  |          // [282]
                |                  |                  |          // [282]
                |                  |                  |          // [282]
                |                  |                  |          // [282]
          ...---+------------------+------------------+---...    // [282]
                                                                 // [282]
    :---------------------------------------------------------+  // [282]
    #_USE_BVS_DIAGRAM_# :-------------------------------------+  // [282]
     @USE_BVS@ : "Use Brush Value Symbol"                        // [282]
                                                              |  // [282]
                        A tiny square "brush hud" that        |  // [282]
         |<--011-->|    is rendered in an 11x11 grid          |  // [282]
         |         |    in the currently active tile.         |  // [282]
         12345678901                                          |  // [282]
        +-----------+            +------===-:-===------+      |  // [282]
        |           | 1 ---.---  |                     |      |  // [282]
        | TE7 : 000 | 2    |     |      TE7 : 000      |      |  // [282]
        |           | 3    |     |                     |      |  // [282]
        | LA3 : 000 | 4    |     |      LA3 : 000      |      |  // [282]
        |           | 5    |     |                     |      |  // [282]
        | V16 : 000 | 6   011    |      V16 : 000      |      |  // [283][BUG][282]
        |           | 7    |     |                     |      |  // [282]
        | TLX : 000 | 8    |     |      TLX : 000      |      |  // [282]
        |           | 9    |     |                     |      |  // [282]
        | TLY : 000 | 0    |     |      TLY : 000      |      |  // [282]
        |           | 1 ---.---  |                     |      |  // [282]
        +-----------+            +------===-:-===------+      |  // [282]
                                                              |  // [282]
    :---------------------------------------------------------+  // [282]
   
    @OLD_ATM_FIELD@ : "ATM" is 2 bits. Don't use it.             // [283]
                    : "AM4" is 4 bits. USE THIS.                 // [283]
                                                                 // [283]
    #_REFACTORING_ATM_TO_AM4_GOT_SCARY_# :--------------------+  // [283]
                                                              |  // [283]
        No such thing as a trivial refactor...                |  // [283]
        We need to be very careful with this refactor.        |  // [283]
        The consequences are starting to cascade into         |  // [283]
        other things. MARK EVERY GOD DAMNED LINE YOU CHANGE!  |  // [283]
        And go slow. Computer code does billions of           |  // [283]
        calculations per second. You can't compete with       |  // [283]
        the computer for speed. The thing you offer that      |  // [283]
        the computer can't is the correct instructions.       |  // [283]
                                                              |  // [283]
    :---------------------------------------------------------+  // [283]
    #NBO_0_1_2_3# :-------------------------------------------+  // [283]
    @NBO_0_1_2_3@ :-------------------------------------------+  // [283]
                                                              |  // [283]
        NB0_0_1_2_3 : Network_Bit_Order , within a NIBBLE.    |  // [283]
                    : So a 4-bit number. Where the address    |  // [283]
                    : can be [ 0 | 1 | 2 | 3 ]                |  // [283]
                                                              |  // [283]
        ABI: Actual_Bit_Order       ABI:3 ABI:2 ABI:1 ABI:0   |  // [283]
                                        |     |     |     |   |  // [283]
        Autotile_Method_4(Mask)BINARY[  #     #     #     #  ]|  // [283]
                                        |     |     |     |   |  // [283]
        NBI: Network_Bit_Order      NBI:0 NBI:1 NBI:2 NBI:3   |  // [283]
                                        |     |     |     |   |  // [283]
                      +-->  c_am4_0lx[  1     0     0     0   ]  // [283]
                      +-->  c_am4_1ly[  0     1     0     0   ]  // [283]
                      +-->  c_am4_2mx[  0     0     1     0   ]  // [283]
                      +-->  c_am4_3my[  0     0     0     1   ]  // [283]
                      |                                       |  // [283]
        +-------------+------------------------------+        |  // [283]
        |   Mask Bits To Query The Auto Tile Method  |        |  // [283]
        |   Encoded Into The Tile Value.             |        |  // [283]
        |                                            |        |  // [283]
        |     _V16 _AM4                              |        |  // [283]
        |   [ 1111 1111 ] <-- RED BYTE OF PIXEL      |        |  // [283]
        |                @V16@: Tile Value 0 to 15   |        |  // [283]
        |                @AM4@: Autotile_Method_4bits|        |  // [283]
        +--------------------------------------------+        |  // [283]
                                                              |  // [283]
    :---------------------------------------------------------+  // [283]
                                                                 // [283]
    @T16@ : Did you mean "@V16@" 16 tile values 0-to-(16-1) ?    // [283]
                                                                 // [283]
    #_REFUSAL_TO_LATCH_WITH_NEIGHBOR_# :----------------------+  // [283]
                                                              |  // [283]
        To create auto tile modes that only tile              |  // [283]
        VERTICALLY or HORIZONTALLY or NEVER TILE ,            |  // [283]
        we simply ERASE THE NEIGHBORING TILES                 |  // [283]
        ( in terms of touching flag ) for the directions      |  // [283]
        that the tile in question refuses to                  |  // [283]
        [ tile / latch ] in.                                  |  // [283]
                                                              |  // [283]
    :---------------------------------------------------------+  // [283]
                                                                 // [283]
    @i-cbm@ / @i_cbm@ : Intercontenential-CrazyBitchMissile      // [283]
                                                                 // [283]
    @Crazy_Bitch_Macros@ :------------------------------------+  // [283]
    #Crazy_Bitch_Macros# :------------------------------------+  // [283]
                                                              |  // [283]
        I didn't want to call them "MonkeyWrenchMacros"       |  // [283]
        because we already have a CPU-Side section            |  // [283]
        for that. So "CrazyBitchMacros" are the GPU           |  // [283]
        side version of "MonkeyWrenchMacros".                 |  // [283]
                                                              |  // [283]
        Not only do these macros correct what you did         |  // [283]
        wrong. They will also yell at you,                    |  // [283]
        threaten you, and make wild accusations.              |  // [283]
                                                              |  // [283]
        Why?                                                  |  // [283]
                                                              |  // [283]
        The more innapropriate and vivid the image ,          |  // [283]
        the more likely you are to remember.                  |  // [283]
                                                              |  // [283]
        Also, it's my code base. I'll do whatever             |  // [283]
        weird fucking things I want thankyou very much.       |  // [283]
                                                              |  // [283]
        For those who would like to complain to H.R.          |  // [283]
        I would like to remind you that H.R. exists           |  // [283]
        to protect the __COMPANY__ not the employees.         |  // [283]
                                                              |  // [283]
    :---------------------------------------------------------+  // [283]
    :---------------------------------------------------------+  // [283]
                                                                 // [283]
    #_AM4_BLOCKED____NOT____TO4_BLOCKED_# :-------------------+  // [283]
    #_TO4_DELBITS____NOT____AM4_DELBITS_# :-------------------+  // [283]
                                                              |  // [283]
        Auto tiling method ( AM4 ) determines if              |  // [283]
        "BLOCKED" / "Refusing to tile" on a given axis.       |  // [283]
                                                              |  // [283]
        And if we are refusing to tile, we                    |  // [283]
        DELETE OUR NEIGHBOR BITS on Touching4Bit Value( TO4 ).|  // [283]
                                                              |  // [283]
    :---------------------------------------------------------+  // [283]
    :---------------------------------------------------------+  // [283]
                                                                 // [283]
    IMF_AM4_BLOCKED_HOR : True if latching_x bit _NOT_ set.      // [283]
    IMF_AM4_BLOCKED_VER : True if latching_y bit _NOT_ set.      // [283]
                                                                 // [283]
    IMF_TO4_DELBITS_HOR : Deletes X_0 & X_1 neighbor bits.       // [283]
    IMF_TO4_DELBITS_VER : Deletes Y_0 & Y_1 neighbor bits.       // [283]
                                                                 // [283]
    @u_am4@ : @am4@ : Autotile_Method ( 4 bits )                 // [283]
    @u_to4@ : @to4@ : TOuching_value  ( 4 bits )                 // [283]
                                                                 // [283]
    #_TOU_VAC_SHAKUR____NOT____TO4_EMP_BOTTLES_# :------------+  // [283]
                                                              |  // [283]
        In this case we __DO__ use the word "tou"             |  // [283]
        instead of "to4". Because we are speaking of          |  // [283]
        "are you touching" not speaking of the                |  // [283]
        "touching mask bits"                                  |  // [283]
                                                              |  // [283]
    :---------------------------------------------------------+  // [283]
    #VAV# :---------------------------------------------------+  // [283]
                                                              |  // [283]
        @VAV@ : u_v16 _and_ u_am4 _and_ u_vff                 |  // [283]
              : __v___________a___________v                   |  // [283]
              : __V___________A___________V                   |  // [283]
                                                              |  // [283]
        +------------------------------------------+          |  // [283]
        |                                          |          |  // [283]
        |   +----------------------------------+   |          |  // [283]
        |[V]| u_v16 =((a5g[ 4 ]>>28) & NIB );  |[V]|          |  // [283]
        |[V]| u_vff =((a5g[ 4 ]>>24) & BYE );  |[V]|          |  // [283]
        |[A]| u_am4 =((a5g[ 4 ]>>24) & NIB );  |[A]|          |  // [283]
        |   +----------------------------------+   |          |  // [283]
        |                                          |          |  // [283]
        |   +----------------------------------+   |          |  // [283]
        |   | >>28 |///////////////////////////|   |          |  // [283]
        |   +----------------------------------+   |          |  // [283]
        |   |                                  |   |          |  // [283]
        |   |             u_v16                |   |          |  // [283]
        |   |  MSB_4_BITS[ 1111 ]              |   |          |  // [283]
        |   |            |      |              |   |          |  // [283]
        |   |            | &NIB |              |   |          |  // [283]
        |   |            |      |              |   |          |  // [283]
        |   +------------|------|--------------+   |          |  // [283]
        |                |      |                  |          |  // [283]
        |   +------------|------|--------------+   |          |  // [283]
        |   | >>24 |/////|//////|//////////////|   |          |  // [283]
        |   +------------|------|--------------+   |          |  // [283]
        |   |            |      |              |   |          |  // [283]
        |   |            |      |    |&NIB|    |   |          |  // [283]
        |   |            |u_v16 |    u_am4     |   |          |  // [283]
        |   |    RED_BYTE[ 1111 |     1111 ]   |   |          |  // [283]
        |   |              |<-- u_vff -->|     |   |          |  // [283]
        |   |              |             |     |   |          |  // [283]
        |   |              |    &BYE     |     |   |          |  // [283]
        |   +----------------------------------+   |          |  // [283]
        |                                          |          |  // [283]
        +------------------------------------------+          |  // [283]
                                                              |  // [283]
    :---------------------------------------------------------+  // [283]
    #_DONT_CALL_HERE_ANYMORE_# :------------------------------+  // [283]
                                                              |  // [283]
        Listing you fucking cunt. Whoever this is that        |  // [283]
        has my fucking number and leaves me stupid            |  // [283]
        ass high-school text messages mutha-fucka ,           |  // [283]
        my phone number will be changed in 24-hours           |  // [283]
        so I hope you had your fun. I am keeping              |  // [283]
        your number because I am going to find out            |  // [283]
        who the fuck this is. Do not call me again.           |  // [283]
        And I guess if you want continue to have fun          |  // [283]
        for 24 hours by calling my number and leaving         |  // [283]
        stupid ass numbers , feel free because it             |  // [283]
        will be changed but I still have your fucking         |  // [283]
        number cunt and I will find out who this is.          |  // [283]
        Don't bother me anymore with your bullshit games.     |  // [283]
        I don't need it. Got it asshole? Fuck off.            |  // [283]
                                                              |  // [283]
        https://www.youtube.com/watch?v=3dbgQN8vwJ0           |  // [283]
                                                              |  // [283]
        We used to be cool , now we are old.                  |  // [283]
                                                              |  // [283]
    :---------------------------------------------------------+  // [283]
                                                                 // [283]
    @_am4_l_l_m_m_@ : AutotileMethodbits(4) : llmm               // [283]
    @_am4_x_y_x_y_@ : AutotileMethodbits(4) : xyxy               // [283]
    #_am4_l_l_m_m_# :-----------------------------------------+  // [283]
    #_am4_x_y_x_y_# :-----------------------------------------+  // [283]
                                                              |  // [283]
          l_l_m_m : Latch_Latch_Mirror_Mirror                 |  // [283]
          x_y_x_y : X_____Y_____X______Y____                  |  // [283]
                                                              |  // [283]
    :---------------------------------------------------------+  // [283]
    :---------------------------------------------------------+  // [283]
                                                                 // [283]
    @AM4_BITS@ : Autotile_Method(4bits)_BITS                     // [283]
    #AM4_BITS# :----------------------------------------------+  // [283]
                                                              |  // [283]
        BIN[ ___0_1___  ,  ___0_1___ , ___0_1___ , ___0_1___ ]|  // [283]
                L_X           L_Y         M_X         M_Y     |  // [283]
            Latch_X       Latch_Y    Mirror_X    Mirror_Y     |  // [283]
                                                              |  // [283]
                                                              |  // [283]
        4_Bits that make the decision on whether your         |  // [283]
        tile value will auto-tile with another tile           |  // [283]
        value of the same type.                               |  // [283]
                                                              |  // [283]
        This extra "pickyness" is only enabled when           |  // [283]
        [ USE_AM4 ] is turned on. Otherwise auto-tiling       |  // [283]
        is non-fancy standard auto tiling as seen             |  // [283]
        in other games.                                       |  // [283]
                                                              |  // [283]
    :---------------------------------------------------------+  // [283]
    #_DONT_TOUCH_ME_LIKE_THAT_# :-----------------------------+  // [283]
                                                              |  // [283]
        You are using the wrong "touching name" for           |  // [283]
        the variable. It should be "to4". (not: t o u )       |  // [283]
    :---------------------------------------------------------+  // [283]
                                                                 // [283]
    @L_L_M_M@ : Latch_Latch_Mirror_Mirror                        // [283]
              : (Latch_X , Latch_Y , Mirror_X , Mirror_Y )       // [283]
                                                                 // [283]
    @NTB_0@ : NoTouchBit_0                                       // [283]
    @NTB_1@ : NoTouchBit_1                                       // [283]
    @NTB_2@ : NoTouchBit_2                                       // [283]
    @NTB_3@ : NoTouchBit_3                                       // [283]
                                                                 // [283]
    @am4@ : Autotile_[ Mask/Method ]_4Bits                       // [283][MOV][282]
          : Because, using 4 bits. "Auto Tile Method 4 Bits"     // [283][MOV][282]
                                                                 // [283]
    #_SOME_MOVED_TO_CRAZY_BITCHES_HOUSE_# :-------------------+  // [283]
                                                              |  // [283]
        To avoid macro re-definition error                    |  // [283]
                                                              |  // [283]
            MOVED_TO_CRAZYBITCHESHOUSE[ IMF _ EMP _ LEF ]     |  // [283]
            MOVED_TO_CRAZYBITCHESHOUSE[ IMF _ EMP _ RIG ]     |  // [283]
            MOVED_TO_CRAZYBITCHESHOUSE[ IMF _ EMP _ TOP ]     |  // [283]
            MOVED_TO_CRAZYBITCHESHOUSE[ IMF _ EMP _ BOT ]     |  // [283]
    :---------------------------------------------------------+  // [283]

    @u_boo@ : Uint32 - BOOleans (32 bools in one number)         // [284]
    @b_lbd@ : Bit(index) _ LetterBoxDiscard                      // [284]
    @u_lbd@ : YOU_MEAN[ b_lbd ]( Encoded in u_boo as bit )       // [284]
    @b_xxx@ : This is an example #define, dont actually use.     // [284]
    @EXAMPLE_ENTRY@ : Serves as example of how to write code.    // [284]
    @u_abi@ : Example Variable means "Uint32_Actual_Bit_Index"   // [284]
    #u_abi# :-------------------------------------------------+  // [284]
                                                              |  // [284]
        This isn't an actual variable or define.              |  // [284]
        It is put here to remind us that the numbers          |  // [284]
        used here are in "Actual Bit Index" order ,           |  // [284]
        as apposed to the inverse, NetworkBitOrder.           |  // [284]
    :---------------------------------------------------------+  // [284]
    #_DOUGS_LETTERBOX_# :-------------------------------------+  // [284]
                                                              |  // [284]
        A pun letting me know this scope is only calculating  |  // [284]
        "dug" and "b_lbd".                                    |  // [284]
                                                              |  // [284]
        dug : Discrete_Unit_Global(coord) (uvec2)             |  // [284]
        b_ldb : BooleanBit - Letter Box Discard ?             |  // [284]
                                                              |  // [284]
    :---------------------------------------------------------+  // [284]
    @u_dug@ : YOU_MEAN[ dug ]( No u_ prefix )                    // [284]
    #u_dug# :-------------------------------------------------+  // [284]
                                                              |  // [284]
        This variable is used very often in shader and        |  // [284]
        can be in some very dense calculations. The           |  // [284]
        extra 2 characters we save by calling it              |  // [284]
        "dug" instead of "u_dug" is worth it.                 |  // [284]
    :---------------------------------------------------------+  // [284]
    #_SHADER_BRANCHING_QUOTE_# :------------------------------+  // [284]
                                                              |  // [284]
        +--------------------------------------------------+  |  // [284]
        | Remember: the only problem with branching        |  |  // [284]
        | in a shader is if different instances            |  |  // [284]
        | executing on the same computational unit         |  |  // [284]
        | have to take different paths.                    |  |  // [284]
        +--------------------------------------------------+  |  // [284]
        | - Alfonse_Reinheart , senior member.             |  |  // [284]
        +--------------------------------------------------+  |  // [284]
        |                                                  |  |  // [284]
        | https://community.khronos.org/t/                 |  |  // [284]
        | if-statements-in-shaders-confused-by-results/    |  |  // [284]
        | 73518/5                                          |  |  // [284]
        +--------------------------------------------------+  |  // [284]
    :---------------------------------------------------------+  // [284]
    #_GET_UINT32_FRAG_COORD_# :-------------------------------+  // [284]
    #_GET_UFC_# :---------------------------------------------+  // [284]
                                                              |  // [284]
        Converting the frag coord to a "pixel coordinate"     |  // [284]
        where the top-left of the screen is [0,0] like        |  // [284]
        a sane person.                                        |  // [284]
                                                              |  // [284]
        OpenGL does not do this by default, so our            |  // [284]
        equation inverts the Y-axis when we derive            |  // [284]
        [ IMF_UFC_Y  //  ufc.y ].                             |  // [284]
                                                              |  // [284]
    :---------------------------------------------------------+  // [284]
    :---------------------------------------------------------+  // [284]
    #_GET_LOCAL_PERCENT_COORD_# :-----------------------------+  // [284]
    #_GET_LPC_# :---------------------------------------------+  // [284]
                                                              |  // [284]
        Convert our uint32 frag coord to a percentage         |  // [284]
        coordinate into a local coordinate.                   |  // [284]
                                                              |  // [284]
        The[ LPC ]local coord is in terms of "discrete units".|  // [284]
        AKA, the "plank units of our renderable space".       |  // [284]
        AKA, the discrete units of our "THE_DUM".             |  // [284]
        AKA, [ 0 to (c_dum-1) ]                               |  // [284]
                                                              |  // [284]
                                                              |  // [284]
        @ZOP_X@ : Zeroed_Out_Point( on path ) - X axis        |  // [284]
        @RMO_X@ : Range_Minus_One ------------- X axis        |  // [284]
                                                              |  // [284]
        @ZOP_Y@ : Zeroed_Out_Point( on path ) - Y axis        |  // [284]
        @RMO_Y@ : Range_Minus_One ------------- Y axis        |  // [284]
                                                              |  // [284]
                                                              |  // [284]
    :---------------------------------------------------------+  // [284]
    :---------------------------------------------------------+  // [284]
                                                                 // [284]
    @u_dum@ : YOU_MEAN[ c_dum ]( Constant_ D.U.M. )              // [284]
                                                                 // [284]
    #_ABOUT_ARTGIRL_CRAZYBI_# :-------------------------------+  // [284]
                                                              |  // [284]
        We already had a section called                       |  // [284]
        "Monkey Wrench Macros" on the CPU-side.               |  // [284]
        Didn't want to give it the same section name.         |  // [284]
        So in theme with our elaborative encoding methods,    |  // [284]
        we will be calling this section                       |  // [284]
        "Crazy Bitch Macros". If you fuck stuff up            |  // [284]
        she will yell at you, correct you, and possibly       |  // [284]
        say some unhinged stuff that could get me             |  // [284]
        cancelled on twitter. If I ever decide to use         |  // [284]
        twitter.                                              |  // [284]
        -KanjiCoder , 2022_09_20 7PM                          |  // [284]
                                                              |  // [284]
    :---------------------------------------------------------+  // [284]
    #_ABOUT_ARTGIRL_USE_____# :-------------------------------+  // [284]
                                                              |  // [284]
        A section dedicated to features to "use/turn_on".     |  // [284]
        Controls conditional compilation of sections of       |  // [284]
        code in our shader.                                   |  // [284]
                                                              |  // [284]
        In this way we can isolate performance problems,      |  // [284]
        or just highlight the "building up" of the shader     |  // [284]
        by turning on sucessive features.                     |  // [284]
                                                              |  // [284]
        Just as you can look at the rings in a tree to        |  // [284]
        understand it's history, we want a way to look        |  // [284]
        into the code and understand from whence it came.     |  // [284]
                                                              |  // [284]
    :---------------------------------------------------------+  // [284]
    #_ABOUT_ARTGIRL_SMACROS_# :-------------------------------+  // [284]
                                                              |  // [284]
        Macros for very basic things. Basically               |  // [284]
        just exists to support my OCD.                        |  // [284]
                                                              |  // [284]
        uvec2 ? Fuck no. That isn't exactly 3 letters.        |  // [284]
        We call that a "UV2".                                 |  // [284]
                                                              |  // [284]
        U32(0) ? Fuck no. Too many letters. Use "u_0".        |  // [284]
                                                              |  // [284]
        ETC.                                                  |  // [284]
                                                              |  // [284]
    :---------------------------------------------------------+  // [284]
    #_ABOUT_ARTGIRL_FRAGBUG_# :-------------------------------+  // [313]
                                                              |  // [313]
        Conditionally compiled debug code for fragment        |  // [313]
        shaders. Highly "similiar" / "analogous" to           |  // [313]
        "ARTGIRL_FRAGOPT" in how it is used.                  |  // [313]
                                                              |  // [313]
    :---------------------------------------------------------+  // [313]
    #_ABOUT_ARTGIRL_FRAGOPT_# :-------------------------------+  // [304]
                                                              |  // [304]
        Code for fragment shader optimizations that can       |  // [304]
        be turned ON/OFF. These optimizations                 |  // [304]
        MIGHT_SLOW_DOWN_RENDERER when turned on.              |  // [304]
                                                              |  // [304]
        They are featurs I __THINK__ might speed stuff        |  // [304]
        up, but they might also just slow stuff down.         |  // [304]
                                                              |  // [304]
        If will be up to me to figure out which               |  // [304]
        optimizations are better turned on or off.            |  // [304]
                                                              |  // [304]
        In addition to turning optimization flags on/off,     |  // [304]
        the[ FRAGOPT ]file has lookup tables that are         |  // [304]
        conditionally compiled into shader depending on       |  // [304]
        which optimization has been turned on/off.            |  // [304]
                                                              |  // [304]
    :---------------------------------------------------------+  // [304]
    #_ABOUT_ARTGIRL_SHADLUT_# :-------------------------------+  // [284]
                                                              |  // [284]
        GPU-side versions of lookup tables we first           |  // [284]
        created on the CPU-side. A lot of the CPU-side        |  // [284]
        lookup tables are only used on the GPU-side,          |  // [284]
        but creating them on the CPU-side first gives         |  // [284]
        us two things.                                        |  // [284]
                                                              |  // [284]
        1. We can error check the tables using code.          |  // [284]
        2. We can INJECT the table source code into           |  // [284]
           GPU-shader source rather than                      |  // [284]
           "hand-re-write" the tables.                        |  // [284]
                                                              |  // [284]
        NOTE: Prefer to "hand-re-write" tables if they        |  // [284]
              are 1-page of code or less. Only inject         |  // [284]
              tables that are unreasonably long.              |  // [284]
              Like 30+ [ rows / records ].                    |  // [284]
                                                              |  // [284]
              I SAID [ROW/RECORDS] NOT [ELEMENTS/ENTRIES].    |  // [284]
                                                              |  // [284]
              var some_table =[                               |  // [284]
                                                              |  // [284]
                1,2,3,4,5,6  <--- Record[ 0 ]                 |  // [284]
              , 1,2,3,4,5,6  <--- Record[ 1 ]                 |  // [284]
              , 1,2,3,4,5,6  <--- Record[ 2 ]                 |  // [284]
              ];;                                             |  // [284]
                                                              |  // [284]
    :---------------------------------------------------------+  // [284]
    #_ABOUT_ARTGIRL_UNIFORM_# :-------------------------------+  // [284]
                                                              |  // [284]
        Uniform variables that help us do CPU<==GPU           |  // [284]
        communication. 90% of them have the exact same        |  // [284]
        name on GPU as they do CPU.                           |  // [284]
                                                              |  // [284]
        However,                                              |  // [284]
            sometimes you can't get                           |  // [284]
            a perfect 1:1 translation.                        |  // [284]
                                                              |  // [284]
        @COMBO_BREAKER@ :                                     |  // [284]
        d_p2k <-- GPU side texture sampler for d_pix2048      |  // [284]
        d_pix2048 <-- CPU side version of[ d_p2k ]texture     |  // [284]
                                                              |  // [284]
    :---------------------------------------------------------+  // [284]
    #_ABOUT_ARTGIRL_IMF_____# :-------------------------------+  // [284]
                                                              |  // [284]
        Inlined_Macro_Functions for our GPU-shaders.          |  // [284]
                                                              |  // [284]
        CON :                                                 |  // [284]
            Extra indirection.                                |  // [284]
                                                              |  // [284]
        PRO :                                                 |  // [284]
            If two shaders re-use the same exact lines of     |  // [284]
            code , you know for GOD DAMNED SURE they          |  // [284]
            are the same lines of code if they are            |  // [284]
            written using an IMF_WHATEVER macro.              |  // [284]
                                                              |  // [284]
            It helps codify cut+paste re-use.                 |  // [284]
                                                              |  // [284]
            Why not write a function??                        |  // [284]
                                                              |  // [284]
            What part of "Inlined" don't you understand?      |  // [284]
            Say "write a function" one more time.             |  // [284]
            I fucking dare you mother fucker.                 |  // [284]
                                                              |  // [284]
            -Samuel Jackson , 2022_09_20 708PM                |  // [284]
                                                              |  // [284]
    :---------------------------------------------------------+  // [284]
    #_THE_FINAL_FRAG_TIER_# :---------------------------------+  // [284]
                                                              |  // [284]
        A pun of "The Final Frontier" from "Star Trek".       |  // [284]
        The one from the 1990's.                              |  // [284]
                                                              |  // [284]
        Calculating the final fragment output color           |  // [284]
        in this section.                                      |  // [284]
                                                              |  // [284]
    :---------------------------------------------------------+  // [284]
    @G_P_U_S@ : Graphics_Processing_Unit_S ( PLURAL )            // [284]
                                                                 // [284]
    @PURPLET@ : PURPLE-Twitch , Twitch Purple. ( 0x9147FF )      // [284]
    ::::::::::: Floating Point : FV4( 0.56,0.28,1.00, 1.0 )      // [284]
    ::::::::::: Bytes ::::::::::    ( 0x91,0x47,0xFF, 100%)      // [284]
                                                                 // [284]
    #_LETTER_BOX_BLACK_# :------------------------------------+  // [284]
                                                              |  // [284]
        When we are out of bounds of the "cinema scope"       |  // [284]
        area where the projector in the movie theatre         |  // [284]
        projects, then we are in the black area of our        |  // [284]
        letter box. Ever play that one acid trip              |  // [284]
        scary game with the detective? What is that game?     |  // [284]
                                                              |  // [284]
        It is like "The Matrix" + "Resident Evil".            |  // [284]
        With a bit of "Silent Hill" mixed in.                 |  // [284]
                                                              |  // [284]
    :---------------------------------------------------------+  // [284]
    #_TWITCH_PURPLE_# :---------------------------------------+  // [284]
                                                              |  // [284]
        I went to the twitch main web page, I screen          |  // [284]
        shotted the twitch icon. I opened it in               |  // [284]
        "Paint.net". I color sampled it. I converted          |  // [284]
        the hex values to floating point.                     |  // [284]
                                                              |  // [284]
        I shall consider this the official                    |  // [284]
        "Twitch.com/Twitch.tv" purple as of 2022_09_20.       |  // [284]
                                                              |  // [284]
    :---------------------------------------------------------+  // [284]
    #_NBI_TO_ABI_# :------------------------------------------+  // [284]
                                                              |  // [284]
        I wanted to declare the bit number I was setting,     |  // [284]
        but there was some ambiguity to the readability.      |  // [284]
                                                              |  // [284]
        So...                                                 |  // [284]
                                                              |  // [284]
        [ bit01 -to- bit31 ]are TECHNICALLY                   |  // [284]
        ONE_ENTRY_LOOKUP_TABLES.                              |  // [284]
                                                              |  // [284]
        @nbi@ : Network_Bit_Index                             |  // [284]
        @abi@ : Actual__Bit_Index                             |  // [284]
                                                              |  // [284]
        bit00 is a lookup table : ( nbi:00 )===>( abi:31 )    |  // [284]
        bit01 is a lookup table : ( nbi:01 )===>( abi:30 )    |  // [284]
        bit02 is a lookup table : ( nbi:02 )===>( abi:29 )    |  // [284]
        .....ETC....                                          |  // [284]
        bit29 is a lookup table : ( nbi:29 )===>( abi:02 )    |  // [284]
        bit30 is a lookup table : ( nbi:30 )===>( abi:01 )    |  // [284]
        bit31 is a lookup table : ( nbi:31 )===>( abi:00 )    |  // [284]
                                                              |  // [284]
    :---------------------------------------------------------+  // [284]
                                                                 // [284]
    @IMG_@ : Likely a typo of[ IMF_*** ]something.               // [284]
                                                                 // [---]
    #_ABOUT_ARTGOLA_# :---------------------------------------+  // [285]
                                                              |  // [285]
        @ARTGOLA@ : System that manages GOLASET(s).           |  // [285]
                  : Contains code specifiying.                |  // [285]
                                                              |  // [285]
                  : 1. Uncompressed GOLASET designs.          |  // [285]
                  : 2. Rasterization code for GOLASET(S)      |  // [285]
                  : 3. Copying code to paste  GOLASET(S)      |  // [285]
                  :    into correct slots of[ d_pix2048 ]     |  // [285]
                                                              |  // [285]
    :---------------------------------------------------------+  // [285]
    #_HOLY_FUCKING_AGOLA_# :----------------------------------+  // [285]
                                                              |  // [285]
       +-----------------------------------------------------+|  // [285]
       |                                                     ||  // [285]
       |@GOLASET@: "a GoLAng SET"                            ||  // [285]
       |         :                                           ||  // [285]
       |         : Named after the pattern I was using in    ||  // [285]
       |         : my 2017 golang auto tile set maker        ||  // [285]
       |         : prototype. The one that had the           ||  // [285]
       |         : "Dragon Command Line" system.             ||  // [285]
       |         :                                           ||  // [285]
       |         : A classic flixel auto tile set. Just      ||  // [285]
       |         : the "IDEA" not a specific implementation. ||  // [285]
       |         : EXCEPT!!! That tiles of this classic auto ||  // [285]
       |         : tile set are laid out in a 4x4 grid in    ||  // [285]
       |         : a very specific order.                    ||  // [285]
       +-----------------------------------------------------+|  // [285]
                                                              |  // [285]
        GOLAPIX  : An GOLASET somehow encoded into pixels.    |  // [292][REF][285]
                                                              |  // [285]
        GOLA256  : 4 monochrome AGOLA set encoded into        |  // [292][REF][285]
                 : a 265x256 chunk of PIXELS.                 |  // [285]
                 : (R,G,B,A channels hold monochrome designs) |  // [285]
                                                              |  // [285]
        GOLA512  : 3 GOLA256's                                |  // [292][REF][285]
                 :(12 monochrome golaset(s) total)            |  // [---][285]
                                                              |  // [---][285]
        !!! 9 CHOOSE 3 === 84  possible combinations. !!!     |  // [---][285]
        !!! 9 PICK   9 === 729 possible permuations . !!!     |  // [---][285]
        +-------------------------------------------+         |  // [---][285]
        |  12 CHOOSE 3 === 220    ( combinations )  |         |  // [---][285]
        |  12 PICK  12 === 1728   ( permutations )  |         |  // [---][285]
        +-------------------------------------------+         |  // [---][285]
                                                              |  // [---][285]
        So, if our blending cares about order, we             |  // [---][285]
        can get more detail.                                  |  // [---][285]
                                                              |  // [---][285]
        What if for now... We just have 9 monochrome          |  // [---][285]
        tile values... Pick the most important tile           |  // [---][285]
        types to start work on.                               |  // [---][285]
                                                              |  // [---][285]
        UPDATE... Forgot about alpha channel.                 |  // [---][285]
        We don't get 9.... we get... 4*3==12.                 |  // [---][285]
                                                              |  // [---][285]
        |<-------------------512------------------->|         |  // [---][285]
        |<--------256-------->|                     |         |  // [---][285]
        | |<-128->|     |064| |                     |         |  // [---][285]
#4X4REF#+-|-------|-----|---|-+---------------------+         |  // [318][285]
        | +---+---+---+ +---+ | +---+---+---+ +---+ |         |  // [---][285]
        | |NTL|N_T|NTR| |V_T| | |   |   |   | |   | |         |  // [---][285]
        | +---+---+---+ +---+ | +---+---+---+ +---+ |         |  // [---][285]
        | |N_L|NOA|N_R| |V_M| | |   |   |   | |   | |         |  // [---][285]
        | +---+---+---+ +---+ | +---+---+---+ +---+ |         |  // [---][285]
        | |NBL|N_B|NBR| |V_B| | |   |   |   | |   | |         |  // [---][285]
        | +---+---+---+ +---+ | +---+---+---+ +---+ |         |  // [---][285]
        | +---+---+---+ +---+ | +---+---+---+ +---+ |         |  // [---][285]
        | |H_L|H_C|H_R| |DTM| | |   |   |   | |   | |         |  // [---][285]
        | +---+---+---+ +---+ | +---+---+---+ +---+ |         |  // [---][285]
        +---------------------+---------------------+         |  // [---][285]
        | +---+---+---+ +---+ |                     .         |  // [---][285]
        | |   |   |   | |   | | #_AGOLA512_DIAGRAM_#.         |  // [---][285]
        | +---+---+---+ +---+ |                     .         |  // [---][285]
        | |   |   |   | |   | |                     .         |  // [---][285]
        | +---+---+---+ +---+ |    Other Mip Map    .         |  // [---][285]
        | |   |   |   | |   | |    Levels Go Here   .         |  // [---][285]
        | +---+---+---+ +---+ |                     .         |  // [---][285]
        | +---+---+---+ +---+ |                     .         |  // [---][285]
        | |   |   |   | |   | |                     .         |  // [---][285]
        | +---+---+---+ +---+ |                     .         |  // [---][285]
        +---------------------+ - - - - - - - - - - +         |  // [---][285]
                                                              |  // [---][285]
        @NOA@ : NOnaagrid_All_sides <--+                      |  // [318][285]
        @N_T@ : NonaGrid_Top           |                      |  // [318][285]
        @N_L@ : NonaGrid_Left          +--TAG[ nonagon_tiles ]|  // [318][285]
        @N_R@ : NonaGrid_Right         |                      |  // [318][285]
        @N_B@ : NonaGrid_Bot        <--+                      |  // [318][285]
                                                              |  //      [285]
        @DTM@ : Dont_Touch_Me!                                |  //      [285]
                                                              |  //      [285]
        @NTL@ : Nonagrid_Top_Left   <--+                      |  // [318][285]
        @NTR@ : Nonagrid_Top_Right     |__TAG[ nonagon_tiles ]|  // [318][285]
        @NBL@ : Nonagrid_Bot_Left      |                      |  // [318][285]
        @NBR@ : Nonagrid_Bot_Right  <--+                      |  // [318][285]
                                                              |  // [---][285]
        @H_M@ : YOU_MEAN[ H_C ](Horizontal_Center)            |  // [---][285]
        @V_C@ : YOU_MEAN[ V_M ](Vertical___Mid   )            |  // [---][285]
                                                              |  // [---][285]
        @H_C@ : Horizontal Center ( C before M  A_B_O )       |  // [---][285]
        @V_M@ : Vertical   Middle ( M after  C  A_B_O )       |  // [---][285]
                                                              |  // [---][285]
        @H_L@ : Horizontal_Left                               |  // [---][285]
        @H_R@ : Horizontal_Right                              |  // [---][285]
                                                              |  // [---][285]
        @V_T@ : Vertical___Top                                |  // [---][285]
        @V_B@ : Vertical___Bot                                |  // [---][285]
                                                              |  // [---][285]
        @A_B_O@ : AlphaBeticalOrder                           |  // [---][285]
                                                              |  // [---][285]
    :---------------------------------------------------------+  // [---][285]
    #_AGOLA_FRACTAL_FORMAT_ROUGH_DRAFT_# :~~~~~~~~~~~~~~~~~~~~+  // [---][285]
    ~                                                         ~  // [---][285]
    ~   TILDE_USED_TO_GRAPHICALLY_DENOTE_THIS_IS_A_ROUGH      ~  // [---][285]
    ~   DRAFT_WHERE_IAM_THINKING_ABOUT_IT.NEXT_SECTION        ~  // [---][285]
    ~   WILL_BE_A_FINAL_DRAFT_OF_THE_FORMAT.                  ~  // [---][285]
    ~                                                         ~  // [---][285]
    ~   Final Non Scaled Down Graphic Needs to be bigger      ~  // [---][285]
    ~   than 256x256 so we can scale it down into a           ~  // [---][285]
    ~   rasterized[ GOLA256  ]portion of[ d_pix2048 ].        ~  // [292][REF][285]
    ~                                                         ~  // [285]
    ~   Or put otherwise, individual tile needs to be         ~  // [285]
    ~   at least 64x64 (1/4 of GOLA256 [wid|hig] )            ~  // [292][REF][285]
    ~                                                         ~  // [285]
    ~   If one tile of an agola is 5x5 units, and             ~  // [285]
    ~   eacch unit is resolved into a[ AGOLA05 ]...           ~  // [285]
    ~   That makes 5*5 ==> 25x25 pixel graphic...             ~  // [285]
    ~   Not quite 64x64 we want.                              ~  // [285]
    ~                                                         ~  // [285]
    ~   ... 5*5*5 === 125. That is bigger.                    ~  // [285]
    ~                                                         ~  // [285]
    +---------------------------------------------------------+  // [285]
    |+-------------------------------------------------------+|  // [285]
    ||+-----------------------------------------------------+||  // [285]
    |||+---------------------------------------------------+|||  // [285]
    ||||@AGOLA20@  : #_ROUGH_DRAFT_AGOLA20_IS_FINAL_#      ||||  // [285]
    ||||           :                                       ||||  // [285]
    ||||           : SEE[ _SIXTEEN_ANY_UDESIGN_ ] < < < < <||||  // [285]
    ||||           :                                       ||||  // [285]
    ||||           : Same number of Uint32 datapoints as   ||||  // [285]
    ||||           : a[ udesign ], but each U32 in this    ||||  // [285]
    ||||           : design can be a number :              ||||  // [285]
    ||||           : [ 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 ]|  // [285]
    ||||           :                                       ||||  // [285]
    ||||           : Used for monochrome colors.           ||||  // [285]
    ||||           :                                       ||||  // [285]
    ||||           : 0 === BLACK                           ||||  // [285]
    ||||           :                                       ||||  // [285]
    ||||           : [ 1 | 2 | 3 ] : @Low_Key_Shades@      ||||  // [285]
    ||||           : [ 4 | 5 | 6 ] : @Mid_Key_Shades@      ||||  // [285]
    ||||           : [ 7 | 8 | 9 ] : @Hig_Key_Shades@      ||||  // [285]
    |||+---------------------------------------------------+|||  // [285]
    ||+-----------------------------------------------------+||  // [285]
    |+-------------------------------------------------------+|  // [285]
    +---------------------------------------------------------+  // [285]
    ~                                                         ~  // [285]
    ~   @HYPER20@  : When we rasterize[ AGOLA20 ], each       ~  // [285]
    ~              : "pixel element" of[AGOLA20 ] is          ~  // [285]
    ~              : rendered as an[    AGOLA05 ]that is      ~  // [285]
    ~              : the result of fetching the correct       ~  // [285]
    ~              : sub-tile from a[   HYPER20 ].            ~  // [285]
    ~                                                         ~  // [285]
    ~   @AGOLA05@  : A "hypertile" / "hyperpixel" design      ~  // [285]
    ~              : that we use in place of a a pure         ~  // [285]
    ~              : flat fill when rasterizing a single      ~  // [285]
    ~              : "pixel element" of an[ AGOLA ].          ~  // [285]
    ~              :                                          ~  // [285]
    ~              : We do __NOT__ define individual          ~  // [285]
    ~              : "AGOLA05". They are packed into a        ~  // [285]
    ~              : "HYPER20".                               ~  // [285]
    ~                                                         ~  // [285]
                                                              ~  // [285]
    :~~~~~~~~~~~~~~~~~~~~: #_AGOLA_FRACTAL_FORMAT_ROUGH_DRAFT_#  // [285]
                                                                 // [285]
    @Low_Key_Shades@ : A group of greys close to BLACK.          // [285]
    @Mid_Key_Shades@ : A group of greys close to 0x808080        // [285]
    @Hig_Key_Shades@ : A group of greys close to WHITE.          // [285]
                                                                 // [285]
    #_AGOLA_FRACTAL_FORMAT_FINAL_DRAFT_# :--------------------+  // [285]
                                                              |  // [285]
        5x5x5 === 125 |  125 * 4 == 500                       |  // [285]
        5*5*5 === 125 |  125 * 4 == 500                       |  // [285]
                                                              |  // [285]
        So... If we CPU-SIDE render 3 depths worth of         |  // [285]
        5x5 element auto-tiling graphics, the final           |  // [285]
        output for one AGOLASET SUB-TILE will be 125x125,     |  // [285]
        making the entire AGOLASET 500x500.                   |  // [285]
                                                              |  // [285]
        @GOLA500@ : A rasterized 500x500 AGOLASET fractal.    |  // [292][REF][285]
                  : That will be downsized into a             |  // [285]
                  : 256x256 image. ( GOLA256 ).               |  // [292][REF][285]
                                                              |  // [285]
        @GOLA125@ : A sub-tile of an[ GOLA500 ].              |  // [292][REF][285]
                                                              |  // [285]
        @AGOLA20@ : Keeping the rough-draft's definition.     |  // [285]
                  : SEE[ #_ROUGH_DRAFT_AGOLA20_IS_FINAL_# ]   |  // [285]
                                                              |  // [285]
        @TRIGOLA@ : A reference to 3 [ AGOLA20 ]designs.      |  // [285]
                  : Specifies the geometric layout,           |  // [285]
                  : but not the colorization.                 |  // [285]
                                                              |  // [285]
        @DESGOLA@ : DESign - aGOLA : The outermost data       |  // [285]
                  : structure that contains everything we     |  // [285]
                  : need to rasterize into an[ AGOLA500 ].    |  // [285]
        +-----------------------------------------------------+  // [285]
                                                                 // [285]
    #_DONT_max_it_the_fuck_out_2022_# :-----------------------+  // [285]
                                                              |  // [285]
        UPDATE : ALPHA_CHANNEL_MAKES_THIS_MODEL_WRONG!!!!     |  // [285]
                                                              |  // [285]
        |<--- Master Memory Layout When --->|                 |  // [285]
        |<--- using shader #7 ------------->|                 |  // [285]
        +--------+--------+--------+--------+ < < < W_R_O_N_G!|  // [285]
        |        |        |        |        | < < < W_R_O_N_G!|  // [285]
        |  _LP_  |  _LP_  |  _LP_  |  _G1_  | < < < W_R_O_N_G!|  // [285]
        |        |        |        |        | < < < W_R_O_N_G!|  // [285]
        +--------+--------+--------+--------+ < < < W_R_O_N_G!|  // [285]
        |        |        |        |        | < < < W_R_O_N_G!|  // [285]
        |  _LP_  |  _LP_  |  _LP_  |  _B1_  | < < < W_R_O_N_G!|  // [285]
        |        |        |        |        | < < < W_R_O_N_G!|  // [285]
        +--------+--------+--------+--------+ < < < W_R_O_N_G!|  // [285]
        |        |        |        |        | < < < W_R_O_N_G!|  // [285]
        |  _LP_  |  _LP_  |  _LP_  |  _DE_  | < < < W_R_O_N_G!|  // [285]
        |        |        |        |        | < < < W_R_O_N_G!|  // [285]
        +--------+--------+--------+--------+ < < < W_R_O_N_G!|  // [285]
        |        |        |        |        | < < < W_R_O_N_G!|  // [285]
        |  _G0_  |  _B0_  |  _FH_  |  ____  | < < < W_R_O_N_G!|  // [285]
        |        |        |        |        | < < < W_R_O_N_G!|  // [285]
        +--------+--------+--------+--------+ < < < W_R_O_N_G!|  // [285]
                                 TAG[ #_MMT_PREFAB_RESEARCH_# ]  // [462][285]
        _LP_ : Level Pack Slot .                              |  // [285]
                                                              |  // [285]
        _G0_ : 12 geometry tile designs. <-- Only Need 16     |  // [285]
        _G1_ : 12 geometry tile designs. <-- Only Need 16     |  // [285]
                                                              |  // [285]
        _B0_ : 12 bomb     tile designs. <-- Only Need 16     |  // [285]
        _B1_ : 12 bomb     tile designs. <-- Only Need 16     |  // [285]
                                                              |  // [285]
        _FH_ : 12 fada designs, 12 should be enough.          |  // [285]
                                                              |  // [285]
        _DE_ : 12 decal designs.                              |  // [285]
                                                              |  // [285]
        ____ : Free Spot. Maybe Misc Game Memory That         |  // [285]
             : GPU needs to know about as well as CPU ?       |  // [285]
                                                              |  // [285]
        Q : What do we do with extra 8 designs in _G0_ & _B0_ ?  // [285]
        A : Fake ambient occlusion designs ?                  |  // [285]
        A : Alpha Masks ?                                     |  // [285]
        A : Some type of extra modifier to main tile          |  // [285]
          : designs to give them extra variance or            |  // [285]
          : texture?                                          |  // [285]
          :                                                   |  // [285]
          : A lot of things could be done. For now, just      |  // [285]
          : leave the empty slots empty and available         |  // [285]
          : for future expansion.                             |  // [285]
          :                                                   |  // [285]
        A : THREE OF THOSE SLOTS CAN BE USED TO RENDER THE    |  // [285]
          : BACKGROUND GRID!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!    |  // [285]
          : EXTRA_1 : The tile grid.                          |  // [285]
          : EXTRA_2 : Game Sized Tiles Boardering Levelpacks. |  // [285]
          : EXTRA_3 : THE_VOID                                |  // [285]
                                                              |  // [285]
    :---------------------------------------------------------+  // [285]
    #_AGOLA_MASTER_MEMORY_LAYOUT_2022_# :---------------------+  // [285]
                                                              |  // [285]
        |<--- Master Memory Layout When --->|                 |  // [285]
        |<--- using shader #7 ------------->|                 |  // [285]
        +--------+--------+--------+--------+                 |  // [285]
        |        |        |        |        |                 |  // [285]
        |  _LP_  |  _LP_  |  _LP_  |  ____  |                 |  // [285]
        |        |        |        |        |                 |  // [285]
        +--------+--------+--------+--------+                 |  // [285]
        |        |        |        |        |                 |  // [285]
        |  _LP_  |  _LP_  |  _LP_  |  ____  |                 |  // [285]
        |        |        |        |        |                 |  // [285]
        +--------+--------+--------+--------+                 |  // [285]
        |        |        |        |        |                 |  // [285]
        |  _LP_  |  _LP_  |  _LP_  |  _ACD  | <--Decals Maybe |  // [285]
        |        |        |        |        |                 |  // [285]
        +--------+--------+--------+--------+                 |  // [285]
        |        |        |        |        |                 |  // [285]
        |  _AC0  |  _AC1  |  _AC2  |  _AC3  | <--Agola_Cells  |  // [285]
        |        |        |        |        |   [ 0,1,2,3 ]   |  // [285]
        +--------+--------+--------+--------+                 |  // [285]
                                                              |  // [285]
        (16 *3)==48 ( 16 geom , 16 bomb , 16 fada ) < < YES!!!!  // [285]
        (48/12)== 4 ( _AC0 , _AC1 , _AC2 , _AC3   ) < < YES!!!!  // [285]
                                                              |  // [285]
                                                              |  // [285]
        @_LP_@ : Level_Pack data                              |  // [285]
        @_AC0@ : Agola_Cell_0                                 |  // [285]
        @_AC1@ : Agola_Cell_1                                 |  // [285]
        @_AC2@ : Agola_Cell_2                                 |  // [285]
        @_AC3@ : Agola_Cell_3                                 |  // [285]
        @_ACD@ : Agola_Cell_DECALS                            |  // [285]
    :---------------------------------------------------------+  // [285]
                                                                 // [285]
    @AGOLASET@ : NOT_7_LETTERS_USE[ GOLASET ]                    // [285]
    @AGOLA512@ : NOT_7_LETTERS_USE[ GOLA512 ]                    // [292][REF][285]
    @AGOLA256@ : NOT_7_LETTERS_USE[ GOLA256 ]                    // [292][REF][285]
    @AGOLAPIX@ : NOT_7_LETTERS_USE[ GOLAPIX ]                    // [292][REF][285]

    #_TOUCHING_TO_AGOLASET_CELL_XY_# :------------------------+  // [286]
                                                              |  // [286]
        Because we want the internal format of our            |  // [286]
        "flixel style" / "game maker style" auto tiles        |  // [286]
        to be laid out in an artist friendly way, we          |  // [286]
        need a layer of indirection.                          |  // [286]
                                                              |  // [286]
        :--------------------------------------------------:  |  // [286]
        : @d_to4_a4x@ : Dataglobal_TO4_to_Agolaset_4_axis_X:  |  // [286]
        : @d_to4_a4y@ : Dataglobal_TO4_to_Agolaset_4_axis_Y:  |  // [286]
        :                                                  :  |  // [286]
        : @to4_a4x@ : (to4)===>(a4x)                       :  |  // [286]
        : @to4_a4y@ : (to4)===>(a4y)                       :  |  // [286]
        :                                                  :  |  // [286]
        : @to4@ : TOuching_value_4bits BIN[x_0,x_1,y_0,y_1]:  |  // [286]
        : @a4x@ : Agolaset_4coords_X([0|1|2|3]):::::::::::::  |  // [286]
        : @a4y@ : Agolaset_4coords_Y([0|1|2|3]):::::::::::::  |  // [286]
        : @g4x@ : USE[ a4x ]To_Not_Confuse_With[G:GEOM]:::::  |  // [286]
        : @g4y@ : USE[ a4y ]To_Not_Confuse_With[G:GEOM]:::::  |  // [286]
        :--------------------------------------------------:  |  // [286]
            +---------------------+                           |  // [286]
            | +---+---+---+ +---+ | +---+---+---+             |  // [286]
            | |NTL|N_T|NTR| |V_T| | |_i_|y_0|_i_|             |  // [286]
            | +---+---+---+ +---+ | +---+---+---+             |  // [286]
            | |N_L|NOA|N_R| |V_M| | |x_0|tou|x_1|             |  // [286]
            | +---+---+---+ +---+ | +---+---+---+             |  // [286]
            | |NBL|N_B|NBR| |V_B| | |_i_|y_1|_i_|             |  // [286]
            | +---+---+---+ +---+ | +---+---+---+             |  // [286]
            | +---+---+---+ +---+ |                           |  // [286]
            | |H_L|H_C|H_R| |DTM| |  _i_:Ignored              |  // [286]
            | +---+---+---+ +---+ |                           |  // [286]
            +---------------------+ to4:tou[x_0,x_1,y_0,y_1]  |  // [286]
                                    to4:bin[ #   #   #   # ]  |  // [286]
            +---------------------+ to4:bin[ 0   0   0   0 ]  |  // [286]
            | +---+---+---+ +---+ | to4:bin[ 1   1   1   1 ]  |  // [286]
            | |0,0|1,0|2,0| |3,0| |                           |  // [286]
            | +---+---+---+ +---+ |                           |  // [286]
            | |0,1|1,1|2,1| |3,1| |                           |  // [286]
            | +---+---+---+ +---+ |                           |  // [286]
            | |0,2|1,2|2,2| |3,2| |                           |  // [286]
            | +---+---+---+ +---+ |                           |  // [286]
            | +---+---+---+ +---+ |                           |  // [286]
            | |0,3|1,3|2,3| |3,3| |                           |  // [286]
            | +---+---+---+ +---+ |                           |  // [286]
            +---------------------+                           |  // [286]
    :---------------------------------------------------------+  // [286]
    #_agola_cell_names_to_cell_coords_# :---------------------+  // [286]
                                                              |  // [286]
        +-------+-------+-------+ +-------+                   |  // [286]
        |  NTL  |  N_T  |  NTR  | |  V_T  |                   |  // [286]
        |  0101 |  1101 |  1001 | |  0001 |                   |  // [286]
        | [0,0] | [1,0] | [2,0] | | [3,0] |                   |  // [286]
        +-------+-------+-------+ +-------+                   |  // [286]
        |  N_L  |  NOA  |  N_R  | |  V_M  |                   |  // [286]
        |  0111 |  1111 |  1011 | |  0011 |                   |  // [286]
        | [0,1] | [1,1] | [2,1] | | [3,1] |                   |  // [286]
        +-------+-------+-------+ +-------+                   |  // [286]
        |  NBL  |  N_B  |  NBR  | |  V_B  |                   |  // [286]
        |  0110 |  1110 |  1010 | |  0010 |                   |  // [286]
        | [0,2] | [1,2] | [2,2] | | [3,2] |                   |  // [286]
        +-------+-------+-------+ +-------+                   |  // [286]
        +-------+-------+-------+ +-------+                   |  // [286]
        |  H_L  |  H_C  |  H_R  | |  DTM  |                   |  // [286]
        |  0100 |  1100 |  1000 | |  0000 |                   |  // [286]
        | [0,3] | [1,3] | [2,3] | | [3,3] |                   |  // [286]
        +-------+-------+-------+ +-------+                   |  // [286]
    :---------------------------------------------------------+  // [286]
                                                                 // [286]
    @Agola_Set@ : Informal Word For Proper[ GOLASET ]            // [286]
    ::::::::::::::::::::::::::::::::::::::[ 1234567 ]            // [286]
                                                                 // [286]
    #_DEPTH_000_:_SIXTEEN_OUTER_AGOLAS_# :--------------------+  // [286]
                                                              |  // [286]
        The 16 generic agolas that can be used to render      |  // [286]
        materials for 16 geom_tiles , 16 bomb_tiles           |  // [286]
        , and 16 fada_tiles.                                  |  // [286]
                                                              |  // [286]
        In the future we will want to make specific           |  // [286]
        designs for [GEOM,BOMB,FADA] but for now,             |  // [286]
        just let them all share the same 16 designs           |  // [286]
        BECAUSE I AM FUCKING SICK OF DRAWING THESE            |  // [286]
        GOD DAMNED DESIGNS!                                   |  // [286]
                                                              |  // [286]
    :---------------------------------------------------------+  // [286]
    #_DEPTH_001_:_NINE_NESTED_AGOLAS_# :----------------------+  // [286]
                                                              |  // [286]
        The outer agola's integers map directly               |  // [286]
        to these[ DEPTH_001 ]tiles. And these                 |  // [286]
        [ DEPTH_001 ]tiles map directly to                    |  // [286]
        TERMINAL_AGOLA_SETS( DEPTH_002 tiles ).               |  // [286]
                                                              |  // [286]
    :---------------------------------------------------------+  // [286]
    #_TERMINAL_AGOLA_SETS_# :---------------------------------+  // [286]
                                                              |  // [286]
        Same idea as what I called "Terminal Tiles"           |  // [286]
        in my[ AAC2020 ]code base. These tile's               |  // [286]
        integer values resolve to pixel colors                |  // [286]
        rather than resolve to other tiles.                   |  // [286]
                                                              |  // [286]
        END_OF_THE_FUCKING_LINE_BITCHES                       |  // [286]
                                                              |  // [286]
        :------------------------------------------:          |  // [286]
        : To get something that doesn't look like  :          |  // [286]
        : shit , the terminal designs should stick :          |  // [286]
        : to their "key" value.                    :          |  // [286]
        : [1,2,3] : DARK designs                   :          |  // [286]
        : [4,5,6] : MIDDLE GREY designs            :          |  // [286]
        : [7,8,9] : LIGHT designs                  :          |  // [286]
        :                                          :          |  // [286]
        : Reasoning :                              :          |  // [286]
        : If you are replacing pixels with tiles   :          |  // [286]
        : to create a fractal, a grey pixel        :          |  // [286]
        : would make most sense replaced by a      :          |  // [286]
        : grey design. A dark pixel would make     :          |  // [286]
        : most sense replaced by a dark design.    :          |  // [286]
        : Basic photo-mosaic theory applies to     :          |  // [286]
        : these fractal designs.                   :          |  // [286]
        :------------------------------------------:          |  // [286]
                                                              |  // [286]
    :---------------------------------------------------------+  // [286]
                                                                 // [---]
    #_DONT_USE_BLANK_FOR_NOW_# :------------------------------+  // [287]
                                                              |  // [287]
        Usage of blanks requires transparency effects.        |  // [287]
        We only want to render a single tile on any cell      |  // [287]
        to optimize performance. Maybe in the future          |  // [287]
        we can get fancier if we want.                        |  // [287]
                                                              |  // [287]
    :---------------------------------------------------------+  // [287]
    #_ARTGOLA_UDESIGN_SPECIAL_INDEXES_# :---------------------+  // [287]
                                                              |  // [287]
        Propsed idea, this adds too much complexity           |  // [287]
        and uncertainity though. Just re-assign               |  // [287]
        "_" and "X" to your needs as you draw                 |  // [287]
        these designs by hand.                                |  // [287]
                                                              |  // [287]
        let _ =(10 );  : 10 == Whatever Contrasts Most Fill:  |  // [287]
        let C =(11 );  : Closest X Connected [1-9] match.  :  |  // [287]
        let X =(13 );  : Unused Number CLOSEST To Adjacent :  |  // [287]
                       : ALL "X" map to same number per    :  |  // [287]
                       : udesign. ------------------------ :  |  // [287]
        let B =( 0 );  : #_DONT_USE_BLANK_FOR_NOW_# ::::::::  |  // [287]
    :---------------------------------------------------------+  // [287]
    #_ARTGOLA_UDESIGN_SPECIAL_INDEXES_# :---------------------+  // [287]
                                                              |  // [287]
        geom,bomb,fada,decal ?                                |  // [287]
        We could use the first 3 decal images to draw our     |  // [287]
        tile grid.                                            |  // [287]
                                                              |  // [287]
        @o##@ / @o@  : Outer____Udesign                       |  // [287]
        @mu#@ / @mu@ : Middle___Udesign                       |  // [287]
        @tu#@ / @tu@ : Terminal_Udesign                       |  // [287]
        @tt#@ / @tt@ : Terminal Tile ( USE: Terminal_Udesign )|  // [287]
                                                              |  // [287]
        [ @o01@ , @o02@ , @o03@ , @o04@ ]OUTER[01,02,03,04]   |  // [287]
        [ @o05@ , @o06@ , @o07@ , @o08@ ]OUTER[05,06,07,08]   |  // [287]
        [ @o09@ , @o10@ , @o11@ , @o12@ ]OUTER[09,10,11,12]   |  // [287]
        [ @o13@ , @o14@ , @o15@ , @o16@ ]OUTER[13,14,15,16]   |  // [287]
                                                              |  // [287]
        [ @mu1@ , @mu2@ , @mu3@ ]MIDDLE_UDESIGN[01,02,03  ]   |  // [287]
        [ @mu4@ , @mu5@ , @mu6@ ]MIDDLE_UDESIGN[04,05,06  ]   |  // [287]
        [ @mu7@ , @mu8@ , @mu9@ ]MIDDLE_UDESIGN[07,08,09  ]   |  // [287]
                                                              |  // [287]
        [ @tu1@ , @tu2@ , @tu3@  ]TERMINAL_TILE[01,02,03  ]   |  // [287]
        [ @tu4@ , @tu5@ , @tu6@  ]TERMINAL_TILE[04,05,06  ]   |  // [287]
        [ @tu7@ , @tu8@ , @tu9@  ]TERMINAL_TILE[07,08,09  ]   |  // [287]
    :---------------------------------------------------------+  // [287]
    #_ARTGOLA_UDESIGN____VS____FOURSET_UDESIGN_# :------------+  // [287]
                                                              |  // [287]
        @ARTGOLA_UDESIGN@ : Has 4 symmetric clusters          |  // [287]
                          : that is simply a re-ordering      |  // [287]
                          : of classic flixel auto-tiles.     |  // [287]
                                                              |  // [287]
        @FOURSET_UDESIGN@ : Has ONE GIANT symmetric cluster   |  // [287]
                          : that describes a "fourset".       |  // [287]
                          : A way to procedurally generate    |  // [287]
                          : flixel-style sub-tiles on         |  // [287]
                          : the fly using one big symmetric   |  // [287]
                          : pattern as an input.              |  // [287]
                                                              |  // [287]
        BELOW : @ARTGOLA_UDESIGN@ :                           |  // [287]
                                                              |  // [287]
        var d_artgola_udesign_any_### = new Uint8Array([      |  // [287]
                                                              |  // [287]
            1,1,1,1,1 , 1,_,_,_,1 , 1,1,1,1,1 , 1,1,1,1,1     |  // [287]
        ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1     |  // [287]
        ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1     |  // [287]
        ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , _,_,_,_,_     |  // [287]
        ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , _,_,_,_,_     |  // [287]
        ////                                                  |  // [287]
        ,   1,_,_,_,_ , 1,_,_,_,1 , _,_,_,_,1 , _,_,_,_,_     |  // [287]
        ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 1,_,_,_,1     |  // [287]
        ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 1,_,_,_,1     |  // [287]
        ,   _,_,_,_,_ , _,_,_,_,_ , _,_,_,_,_ , 1,_,_,_,1     |  // [287]
        ,   1,_,_,_,_ , 1,_,_,_,1 , _,_,_,_,1 , _,_,_,_,_     |  // [287]
        ////                                                  |  // [287]
        ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , _,_,_,_,_     |  // [287]
        ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , _,_,_,_,_     |  // [287]
        ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1     |  // [287]
        ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1     |  // [287]
        ,   1,1,1,1,1 , 1,_,_,_,1 , 1,1,1,1,1 , 1,1,1,1,1     |  // [287]
        ////                                                  |  // [287]
        ,   1,1,1,_,_ , _,1,1,1,_ , _,_,1,1,1 , 1,1,_,1,1     |  // [287]
        ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1     |  // [287]
        ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , _,_,_,_,_     |  // [287]
        ,   1,_,_,_,_ , _,_,_,_,_ , _,_,_,_,1 , 1,_,_,_,1     |  // [287]
        ,   1,1,1,_,_ , _,1,1,1,_ , _,_,1,1,1 , 1,1,_,1,1     |  // [287]
        ]);;                                                  |  // [287]
                                                              |  // [287]
        BELOW : @FOURSET_UDESIGN@ :                           |  // [287]
                                                              |  // [287]
        var d_artdude_fourset_src_any_### = new Uint8Array([  |  // [287]
                                                              |  // [287]
            X,X,X,_,X , X,X,X,X,X , X,X,X,X,X , X,_,X,X,X     |  // [287]
        ,   X,X,X,_,_ , X,X,X,X,X , X,X,X,X,X , _,_,X,X,X     |  // [287]
        ,   X,X,X,X,_ , _,_,_,_,_ , _,_,_,_,_ , _,X,X,X,X     |  // [287]
        ,   _,_,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,_,_     |  // [287]
        ,   X,_,_,X,X , X,_,_,_,_ , _,_,_,_,X , X,X,_,_,X     |  // [287]
        ////                                                  |  // [287]
        ,   X,X,_,_,X , X,X,X,_,_ , _,_,X,X,X , X,_,_,X,X     |  // [287]
        ,   X,X,_,_,_ , X,X,X,_,_ , _,_,X,X,X , _,_,_,X,X     |  // [287]
        ,   X,X,_,_,_ , X,X,X,X,_ , _,X,X,X,X , _,_,_,X,X     |  // [287]
        ,   X,X,_,_,_ , _,_,X,X,X , X,X,X,_,_ , _,_,_,X,X     |  // [287]
        ,   X,X,_,_,_ , _,_,_,X,X , X,X,_,_,_ , _,_,_,X,X     |  // [287]
        ////                                                  |  // [287]
        ,   X,X,_,_,_ , _,_,_,X,X , X,X,_,_,_ , _,_,_,X,X     |  // [287]
        ,   X,X,_,_,_ , _,_,X,X,X , X,X,X,_,_ , _,_,_,X,X     |  // [287]
        ,   X,X,_,_,_ , X,X,X,X,_ , _,X,X,X,X , _,_,_,X,X     |  // [287]
        ,   X,X,_,_,_ , X,X,X,_,_ , _,_,X,X,X , _,_,_,X,X     |  // [287]
        ,   X,X,_,_,X , X,X,X,_,_ , _,_,X,X,X , X,_,_,X,X     |  // [287]
        ////                                                  |  // [287]
        ,   X,_,_,X,X , X,_,_,_,_ , _,_,_,_,X , X,X,_,_,X     |  // [287]
        ,   _,_,X,X,X , _,_,_,_,_ , _,_,_,_,_ , X,X,X,_,_     |  // [287]
        ,   X,X,X,X,_ , _,_,_,_,_ , _,_,_,_,_ , _,X,X,X,X     |  // [287]
        ,   X,X,X,_,_ , X,X,X,X,X , X,X,X,X,X , _,_,X,X,X     |  // [287]
        ,   X,X,X,_,X , X,X,X,X,X , X,X,X,X,X , X,_,X,X,X     |  // [287]
        ]);;                                                  |  // [287]
    :---------------------------------------------------------+  // [287]

    #au0_i48_mmi# :-------------------------------------------+  // [288]
                                                              |  // [288]
        ORIGINAL_THOUGHT :                                    |  // [288]
                                                              |  // [288]
            Mapping ( i48 )===>( mmi ) is a bit too fluffy    |  // [288]
            of a lookup table. Use[ ac4_mmi ]instead.         |  // [288]
                                                              |  // [288]
        THOUGHT_UPDATED :                                     |  // [288]
                                                              |  // [288]
            Actually, we need[ au0_i48_mmi ]because :         |  // [288]
            SEE[ NONSENSE_3_LAYERS_BUT_4_MASTER_CELLS ]       |  // [288]
                                                              |  // [288]
        au0_i48_mmi=[                                         |  // [288]
                                                              |  // [288]
            ( We have correct table name , but the contents ) |  // [288]
            ( here are _WRONG_ . Only 12 designs per        ) |  // [288]
            ( master memory cell.                           ) |  // [288]
            ( Needs to span 4 master memory cells, not 3    ) |  // [288]
                                                              |  // [288]
            c_g64 , c_g64 , c_g64 , c_g64  < < < @FLUFFYTABLE@|  // [288]
        ,   c_g64 , c_g64 , c_g64 , c_g64  < < < @FLUFFYTABLE@|  // [288]
        ,   c_g64 , c_g64 , c_g64 , c_g64  < < < @FLUFFYTABLE@|  // [288]
        ,   c_g64 , c_g64 , c_g64 , c_g64  < < < @FLUFFYTABLE@|  // [288]
                                           < < < @FLUFFYTABLE@|  // [288]
        ,   c_b64 , c_b64 , c_b64 , c_b64  < < < @FLUFFYTABLE@|  // [288]
        ,   c_b64 , c_b64 , c_b64 , c_b64  < < < @FLUFFYTABLE@|  // [288]
        ,   c_b64 , c_b64 , c_b64 , c_b64  < < < @FLUFFYTABLE@|  // [288]
        ,   c_b64 , c_b64 , c_b64 , c_b64  < < < @FLUFFYTABLE@|  // [288]
                                           < < < @FLUFFYTABLE@|  // [288]
        ,   c_f64 , c_f64 , c_f64 , c_f64  < < < @FLUFFYTABLE@|  // [288]
        ,   c_f64 , c_f64 , c_f64 , c_f64  < < < @FLUFFYTABLE@|  // [288]
        ,   c_f64 , c_f64 , c_f64 , c_f64  < < < @FLUFFYTABLE@|  // [288]
        ,   c_f64 , c_f64 , c_f64 , c_f64  < < < @FLUFFYTABLE@|  // [288]
        ];;                                                   |  // [288]
                                                              |  // [288]
    @FLUFFYTABLE@ : A lookup table with too much      ::::::: |  // [288]
                  : redundancy in it. Wastes memory.  ::::::: |  // [288]
                  : ( I take back the "too much" because    ) |  // [288]
                  : ( turns out we need it for what we      ) |  // [288]
                  : ( are doing.........................    ) |  // [288]
                  : ( STILL "FLUFFY" AND "WASTEFUL" though! ) |  // [288]
                                                              |  // [288]
    :---------------------------------------------------------+  // [288]
    #_MASTER_MEMORY_CELL_XY_# :-------------------------------+  // [288]
                                                              |  // [288]
        Master memory cell locations codified by XY           |  // [288]
        cell coordinate rather than by 1D cell index.         |  // [288]
                                                              |  // [288]
    :---------------------------------------------------------+  // [288]
    #_DOUBLE_ENTANDRA_CELLS_# :-------------------------------+  // [288]
    #_double_entendra_cells_# :-------------------------------+  // [288]
                                                              |  // [288]
        Intentionally mis-spelled. The X-Y axis version       |  // [288]
        of the sets of constants known as                     |  // [288]
        "DOUBLE_ENTENDRE_CELLS"                               |  // [288]
                                                              |  // [288]
        If you think about it, "Harry Potter" basically       |  // [288]
        throws around the "V" word a lot. Which is the        |  // [288]
        wizard version of the muggle's "N" word. Harry        |  // [288]
        Potter needs some diversity training.                 |  // [288]
                                                              |  // [288]
    :---------------------------------------------------------+  // [288]
    @_NOT_NEEDED_BY_ARTGOLA_@ :-------------------------------+  // [288]
    #_NOT_NEEDED_BY_ARTGOLA_# :-------------------------------+  // [288]
                                                              |  // [288]
        I thought this data was needed by artgola. But        |  // [288]
        as I think about it.. NO.. Leftover from my           |  // [288]
        first-draft design thoughts. But now that I have      |  // [288]
        formalized these data section names, will keep        |  // [288]
        them as a suggestion for future use.                  |  // [288]
                                                              |  // [288]
        Reason We Cant Use For ARTGOLA:                       |  // [288]
                                                              |  // [288]
        The 4 master memory cells on last row of master       |  // [288]
        memory layout store 16_geom_tiles , 16_bomb_tiles     |  // [288]
        and 16_fada_tiles. THREE CATEGORIES ACROSS            |  // [288]
        FOUR CELLS! So no one master memory cell is           |  // [288]
        cleanly dedicated to one layer type.                  |  // [288]
                                                              |  // [288]
        c_g64 <-- No_such_clean_division_in_ARTGOLA           |  // [288]
        c_b64 <-- No_such_clean_division_in_ARTGOLA           |  // [288]
        c_f64 <-- No_such_clean_division_in_ARTGOLA           |  // [288]
        c_d64 <-- No_such_clean_division_in_ARTGOLA           |  // [288]
                                                              |  // [288]
    :---------------------------------------------------------+  // [288]
    :---------------------------------------------------------+  // [288]
    #AC3_MMI_NO_CLEAN_DIV# :----------------------------------+  // [288]
    #AC3_MMX_NO_CLEAN_DIV# :----------------------------------+  // [288]
    #AC3_MMY_NO_CLEAN_DIV# :----------------------------------+  // [288]
                                                              |  // [288]
        I was wrong about this. There is no such clean        |  // [288]
        division like this. You are going to need a           |  // [288]
        "fluffly lookup table" because of the lack of         |  // [288]
        clean division.                                       |  // [288]
                                                              |  // [288]
        var d_artgola_ac3_mmi = new Uint8Array([              |  // [288]
                                                              |  // [288]
            c_g64   <-- @NONSENSE_3_LAYERS_BUT_4_MASTER_CELLS@|  // [288]
        ,   c_b64   <-- @NONSENSE_3_LAYERS_BUT_4_MASTER_CELLS@|  // [288]
        ,   c_f64   <-- @NONSENSE_3_LAYERS_BUT_4_MASTER_CELLS@|  // [288]
        ]);;                                                  |  // [288]
        var d_artgola_ac3_mmx = new Uint8Array([              |  // [288]
                                                              |  // [288]
            c_g64_x <-- @NONSENSE_3_LAYERS_BUT_4_MASTER_CELLS@|  // [288]
        ,   c_b64_x <-- @NONSENSE_3_LAYERS_BUT_4_MASTER_CELLS@|  // [288]
        ,   c_f64_x <-- @NONSENSE_3_LAYERS_BUT_4_MASTER_CELLS@|  // [288]
        ]);;                                                  |  // [288]
        var d_artgola_ac3_mmy = new Uint8Array([              |  // [288]
                                                              |  // [288]
            c_g64_y <-- @NONSENSE_3_LAYERS_BUT_4_MASTER_CELLS@|  // [288]
        ,   c_b64_y <-- @NONSENSE_3_LAYERS_BUT_4_MASTER_CELLS@|  // [288]
        ,   c_f64_y <-- @NONSENSE_3_LAYERS_BUT_4_MASTER_CELLS@|  // [288]
        ]);;                                                  |  // [288]
                                                              |  // [288]
        @NONSENSE_3_LAYERS_BUT_4_MASTER_CELLS@ :-----------+  |  // [288]
                                                           |  |  // [288]
            What you are looking at doesn't make sense.    |  |  // [288]
            Because we have 3 layers with 16 tiles each.   |  |  // [288]
                                                           |  |  // [288]
            We need to map those (3*16==48) tile designs   |  |  // [288]
            TO FOUR(4) master memory cells. In other       |  |  // [288]
            words, no clean cell division between          |  |  // [288]
            tile type and master memory cell.              |  |  // [288]
        :--------------------------------------------------+  |  // [288]
                                                              |  // [288]
    :---------------------------------------------------------+  // [288]
                                                                 // [288]
    @ZERO_INDEXED_ARRAY@ : First usable index is ZERO            // [288]
    @@ONE_INDEXED_ARRAY@ : First entry is null or zero and       // [288]
                         : we pretend it doesn't exist.          // [288]
                                                                 // [288]
    @1ST_ONE@ : Tagging the first token in a named sequence.     // [288]
    @ZERO_INDEXED_NAMING@ : The[ 1ST_ONE ]starts at ZERO( 0 )    // [288]
    @@ONE_INDEXED_NAMING@ : The[ 1ST_ONE ]starts at  ONE( 1 )    // [288]
                                                                 // [288]
    #_AGOLA_ONE_AND_ZERO_INDEXING_# :-------------------------+  // [288]
                                                              |  // [288]
        Zero indexed names go into zero indexed array.        |  // [288]
         One indexed names go into  one indexed array.        |  // [288]
                                                              |  // [288]
    :---------------------------------------------------------+  // [288]
                                                                 // [288]
    @HACKGEOM0@ : Use to draw standard empty tile space .        // [288]
    @HACKFADA0@ : Use to draw empty tile space on level boarder. // [288]
    @HACKFADA0@ : Use to draw void space.                        // [288]
    #HACKGEOM0# :---------------------------------------------+  // [288]
    #HACKFADA0# :---------------------------------------------+  // [288]
    #HACKFADA0# :---------------------------------------------+  // [288]
                                                              |  // [288]
        To make shader #7 rendering as uniform as possible,   |  // [288]
        WE ALWAYS DRAW A TILE, but if no tile is at a certain |  // [288]
        tile location, we default to one of the               |  // [288]
        "empty space" designs.                                |  // [288]
                                                              |  // [288]
        1. Empty Tile Space                                   |  // [288]
        2. Empty Tile Space on level boarder. (so we can more)|  // [288]
                                              (easily notice )|  // [288]
                                              (the boarders  )|  // [288]
        3. Void Space ( The Space That Kills You Containing  )|  // [288]
                      ( The Eye Of God.                      )|  // [288]
                                                              |  // [288]
    :---------------------------------------------------------+  // [288]
    :---------------------------------------------------------+  // [288]
    :---------------------------------------------------------+  // [288]
    @nc4@ : Network_Channel_4( 4 channel indexes total )         // [288]
    #nc4# :#_NETWORK_CHANNEL_# :------------------------------+  // [288]
                                                              |  // [288]
        We decided all formalized values in this code base    |  // [288]
        use "network bit order" and "network byte order"      |  // [288]
        when referring to where they are in a memory layout.  |  // [288]
                                                              |  // [288]
        Yes, these "nc4" values are a bit odd when compared   |  // [288]
        to stardard pit packing and unpacking logic for       |  // [288]
        a pixel's components, but for consistency we are      |  // [288]
        using them.                                           |  // [288]
                                                              |  // [288]
        :-----------------------------------------------------:  // [288]
                                                              |  // [288]
        Using "Network [Byte/Bit] Indexes" for "nc4"          |  // [288]
        ABI === "Actual  Bit Index"                           |  // [288]
        NBI === "Network Bit Index"                           |  // [288]
                                                              |  // [288]
        nc4 === 0 ===   RED                                   |  // [288]
        nc4 === 1 === GREEN                                   |  // [288]
        nc4 === 2 ===  BLUE                                   |  // [288]
        nc4 === 3 === ALPHA                                   |  // [288]
                                                              |  // [288]
        |- nc4:0 ---|- nc4:1 ---|- nc4:2 ---|- nc4:3 ---|     |  // [288]
        [ 1111 1111 | 1111 1111 | 1111 1111 | 1111 1111 ]     |  // [288]
          |       |           |           |           |       |  // [288]
       ABI:31  ABI:24      ABI:16      ABI:08     ABI:00      |  // [288]
       NBI:00  NBI:07      NBI:15      NBI:23     NBI:31      |  // [288]
    :---------------------------------------------------------+  // [288]

    #_GLOWING_DAMAGE_# :--------------------------------------+  // [289]
                                                              |  // [289]
        We can use the "FADA_TILE(S)" (AKA: Damage Mask)      |  // [289]
        to create glowing damage effects where bombs          |  // [289]
        recently exploded.                                    |  // [289]
                                                              |  // [289]
        We simply colorize the texture decals on the tiles    |  // [289]
        that were adjacent to an explosion that just          |  // [289]
        removed tiles.                                        |  // [289]
                                                              |  // [289]
        This will give the impression of a "red hot" glow.    |  // [289]
        Like molten metal on the edges of a bulding that      |  // [289]
        was just lazer blasted in half.                       |  // [289]
                 laser blasted                                |  // [289]
                 lazer_blasted                                |  // [289]
                 laser_blasted                                |  // [289]
    :---------------------------------------------------------+  // [289]
    #_ABOUT_ARTDECA_# :---------------------------------------+  // [289]
                                                              |  // [289]
        A system used to generate gray-scale decals to        |  // [289]
        be used in shader #7. ONLY STAMP DECALS AT            |  // [289]
        THE[ c_du0 ]LEVEL!!! (Creates Sense Of Scale).        |  // [289]
                                                              |  // [289]
        #_ARTDECA_GOALS_# :---------------------------------+ |  // [289]
                                                            | |  // [289]
            1. Create Sense Of Scale (Pasted At[ c_du0 ])   | |  // [289]
            2. Break Up Monotony Of Chunks Of Same AutoTile | |  // [289]
            3. Create Glowing Edges Around Recent Blasts    | |  // [289]
        +---------------------------------------------------+ |  // [289]
                                                              |  // [289]
        TOTAL DECALS : 192                                    |  // [289]
        ------------------                                    |  // [289]
                       128  <-- Zero And All 7-bit Ascii Syms |  // [289]
                        64  <-- Randomly Generated Texture    |  // [289]
        ------------------                                    |  // [289]
                                                              |  // [289]
        Rather than specify texture decals manually,          |  // [289]
        they are generated "fake-randomly" based on           |  // [289]
        the cell's XY position within the levelmap            |  // [289]
        and levelpack etc.                                    |  // [289]
                                                              |  // [289]
        |<------------ c_mmi_artdeca ---------->|             |  // [289]
        |<---------------- 512 ---------------->|             |  // [289]
        +-------------------+-------------------+             |  // [289]
        | +---+---+---+---+ | +---+---+---+---+ |             |  // [289]
        | | 1 | 2 | 3 | 4 | | | 1 | 2 | 3 | 4 | |             |  // [289]
        | +---+---+---+---+ | +---+---+---+---+ |             |  // [289]
        | | 5 | 6 | 7 | 8 | | | 5 | 6 | 7 | 8 | |             |  // [289]
        | +---+---+---+---+ | +---+---+---+---+ |             |  // [289]
        | | 9 |010|011|012| | | 9 |010|011|012| |             |  // [289]
        | +---+---+---+---+ | +---+---+---+---+ |             |  // [289]
        | |013|014|015|016| | |013|014|015|016| |             |  // [289]
        | +---+---+---+---+ | +---+---+---+---+ |             |  // [289]
        +-------------------+-------------------+             |  // [289]
        | +---+---+---+---+ |                   |             |  // [289]
        | | 1 | 2 | 3 | 4 | |                   |             |  // [289]
        | +---+---+---+---+ |                   |             |  // [289]
        | | 5 | 6 | 7 | 8 | |                   |             |  // [289]
        | +---+---+---+---+ |  @MIP_MAPS_HERE@  |             |  // [289]
        | | 9 |010|011|012| |                   |             |  // [289]
        | +---+---+---+---+ |                   |             |  // [289]
        | |013|014|015|016| |                   |             |  // [289]
        | +---+---+---+---+ |                   |             |  // [289]
        +-------------------+-------------------+             |  // [289]
        :                                       :             |  // [289]
        :                                       :             |  // [289]
        V                                       :             |  // [289]
        +-------+-------+  <====================+             |  // [289]
        |       |       |                       :             |  // [289]
        |16*RGBA|16*RGBA|                       :             |  // [289]
        |       |       |                       :             |  // [289]
        +-------+-------+ ===((16*4)*(3))===192 :             |  // [289]
        |       |                               :             |  // [289]
        |16*RGBA|                               :             |  // [289]
        |       |                               :             |  // [289]
        +-------+ <=============================+             |  // [289]
                                                              |  // [289]
    :---------------------------------------------------------+  // [289]
    #_ARTDECA_DOES_NOT_AUTO_TILE_# :--------------------------+  // [289]
                                                              |  // [289]
        If artdeca were to auto tile, it would defeat the     |  // [289]
        purpose of "breaking up" the monotony of the          |  // [289]
        auto tiles we already laid down.                      |  // [289]
        ( We'd also get 16X_LESS tile designs if we had )     |  // [289]
        ( to use auto tiling. ......................... )     |  // [289]
    :---------------------------------------------------------+  // [289]
                                                                 // [289]
    @MIP_MAPS_HERE@ : Where the smaller power-of-2               // [289]
                    : downscaled versions of images              // [289]
                    : are to be put within a texture.            // [289]
                                                                 // [289]
    #_MASTER_MEMORY_INDEXES_BY_SUB_SYS_# :--------------------+  // [289]
                                                              |  // [289]
        Some master memory cells may have different uses      |  // [289]
        depending on how the engine is configured.            |  // [289]
                                                              |  // [289]
        So as I am working on systems to support              |  // [289]
        shader #7, I want to make it obvious that             |  // [289]
                                                              |  // [289]
        "This reservation of memory only applies if you"      |  // [289]
        "want [ insert shader #7 supporting system ]   "      |  // [289]
        "to function properly.                         "      |  // [289]
    :---------------------------------------------------------+  // [289]

    @MSI@ / #MSI# / #_MSI_# / @_MSI_@ :-----------------------+  // [290]
                                                              |  // [290]
        Multi_Step_Initialization                             |  // [290]
                                                              |  // [290]
        Initialization that happens over multiple game        |  // [290]
        frames so the game can startup faster. Decided        |  // [290]
        NOT to use "webworkers" because I want to keep        |  // [290]
        the game simple and have everything in the            |  // [290]
        same file.                                            |  // [290]
                                                              |  // [290]
        Also, the javascript needs to be relatively simply    |  // [290]
        written so it is very easy to convert to C99 code.    |  // [290]
    :---------------------------------------------------------+  // [290]
    #_MULTI_STEP_INITIALIZER_DATA_# :-------------------------+  // [290]
                                                              |  // [290]
        @d_msi_ini_all@ : MSI _ Initialized _ ALL             |  // [290]
        @d_msi_dex_sub@ : MSI _ inDEX _______ Subsystem       |  // [290]
        @d_msi_dex_sis@ : MSI _ inDEX _ SubSys_Internal_Index |  // [290]
                                                              |  // [290]
        #msi_ini_all# :------------------------------------+  |  // [290]
                                                           |  |  // [290]
            Only [positive/true] when all "MSI" init       |  |  // [290]
            code is [ finished / done ].                   |  |  // [290]
        :--------------------------------------------------+  |  // [290]
        #msi_dex_sub# :------------------------------------+  |  // [290]
                                                           |  |  // [290]
            Identifies which sub-system is currently       |  |  // [290]
            MSI initing itself. MSI is __NOT__ lazy        |  |  // [290]
            initialization, but is very similiar.          |  |  // [290]
        :--------------------------------------------------+  |  // [290]
        #msi_dex_sis# :------------------------------------+  |  // [290]
                                                           |  |  // [290]
            An internal index used by the current          |  |  // [290]
            sub-system that is "multi-step-initializing"   |  |  // [290]
            itself. What this index means to outside       |  |  // [290]
            systems is unknown.                            |  |  // [290]
                                                           |  |  // [290]
            It is a top-level variable so that it is easier|  |  // [290]
            to find this variable reference in all systems |  |  // [290]
            doing multi-step initialization. But it still  |  |  // [290]
            is conceputally private.                       |  |  // [290]
                                                           |  |  // [290]
            In other words, it is only top-level so that   |  |  // [290]
            it is easier to "read" and "browse" the        |  |  // [290]
            code base.                                     |  |  // [290]
        :--------------------------------------------------+  |  // [290]
    :---------------------------------------------------------+  // [290]
    #_RELATIVE_SUB_SYS_# :------------------------------------+  // [290]
                                                              |  // [290]
        Relative sub-system index. Loosly identifies          |  // [290]
        sub-system based on the "MSI" order. Which is not     |  // [290]
        the same as the dependency ordering at the top        |  // [290]
        of the file.                                          |  // [290]
                                                              |  // [290]
        The "MSI" order is the same order as "dependency"     |  // [290]
        order, but "MSI" order only includes sub-systems      |  // [290]
        that has "MSI-Style" initialization.                  |  // [290]
                                                              |  // [290]
    :---------------------------------------------------------+  // [290]
    #_SYS_INTERNA_STEP_# :------------------------------------+  // [290]
                                                              |  // [290]
        System Internal Step. This counter only exists at     |  // [290]
        the top level to make it easier to [ read ]and        |  // [290]
        [ browse / look around ] the source code.             |  // [290]
                                                              |  // [290]
        It's meaning is whatever the sub system currently     |  // [290]
        in focus[ d_msi_dex_sub === system focus ]decides     |  // [290]
        it means.                                             |  // [290]
                                                              |  // [290]
        MSI intialization is a "RE-Entrant" initializer.      |  // [290]
        And MSI_DEX_SIS is needed to "remember where you"     |  // [290]
        "last were" when you re-enter the MSI                 |  // [290]
        initializer code.                                     |  // [290]
                                                              |  // [290]
    :---------------------------------------------------------+  // [290]
    #_MSI_ALSO_MEANS_# :--------------------------------------+  // [290]
                                                              |  // [290]
        Mindless_Self_Indulgence:                             |  // [290]
        https://www.youtube.com/watch?v=lA5oMBYRpoI           |  // [290]
    :---------------------------------------------------------+  // [290]
    #_MSI_VS_LAZY_# :-----------------------------------------+  // [290]
                                                              |  // [290]
        Lazy Initialization :                                 |  // [290]
                                                              |  // [290]
            Only initialize if you need it.                   |  // [290]
            Init only if certain code path                    |  // [290]
            gets hit.                                         |  // [290]
                                                              |  // [290]
        Multi-Step Initialization ( MSI ) :                   |  // [290]
                                                              |  // [290]
            Always initializes. But does so over multiple     |  // [290]
            game frames when game starts up. Initializes      |  // [290]
            regardless of if you "need to use the thing"      |  // [290]
            or not.                                           |  // [290]
                                                              |  // [290]
            AKA: Re-Entrant Initialization.                   |  // [290]
    :---------------------------------------------------------+  // [290]
    @SATS_SUB_SERIES@ : Simpler_Auto_Tile_Shader_Sub_Series      // [290]
                      : The current video sub series we are      // [290]
                      : on , which starte at video #2_8_1        // [290]
                      : and goes for however long it takes.      // [290]

    #_FUNC_MSI_INI_TIK_# :------------------------------------+  // [291]
    #_INIT_CLIENT_FRONTEND_MSI_# :--------------------------+ |  // [291]
    #_WEIRD_SPOT_ABOVE_CLIGAME_FUNCS_# :------------------+ | |  // [291]
                                                          | | |  // [291]
        Initialization code that is done over multiple    | | |  // [291]
        game frames. Eventually we might want to have a   | | |  // [291]
        loading screen shader up when this code is active.| | |  // [291]
                                                          | | |  // [291]
    :-----------------------------------------------------+ | |  // [291]
    :-------------------------------------------------------+ |  // [291]
    :---------------------------------------------------------+  // [291]
    #DONE004# :-----------------------------------------------+  // [291]
                                                              |  // [291]
        DONE[ _WARPED_FOURSET_EDGES_ ]                        |  // [291]
        This was implemented in shader SIX( #6 ).             |  // [291]
    :---------------------------------------------------------+  // [291]
    #_SIGNAL_SELF_DONE_# :------------------------------------+  // [291]
                                                              |  // [291]
        Tell multi-step-initializer that current sub-system   |  // [291]
        is done with it's re-entrant initialization code.     |  // [291]
                                                              |  // [291]
        TAG[ multi-frame-initializer ]YOU_MEAN[ STEP ].       |  // [291]
        TAG[ MFI ]YOU_MEAN[ MSI ][ _________________ ].       |  // [291]
    :---------------------------------------------------------+  // [291]

    ::::::::::::::::::::::::::::::[ 1234567 ]::::::::::::::::::  // [292]
    @AGOL512@ : Decided_To_Call_It[ GOLA512 ]                    // [292]
    @AGOL256@ : Decided_To_Call_It[ GOLA256 ]                    // [292]
    @AGOLPIX@ : Decided_To_Call_It[ GOLAPIX ]                    // [292]
    @AGOLSET@ : Decided_To_Call_It[ GOLASET ]                    // [292]
    @AGOL500@ : Decided_To_Call_It[ GOLA500 ]                    // [292]
    @AGOL125@ : Decided_To_Call_It[ GOLA125 ]                    // [292]
    @GOLA20@  : Keep_Original_Name[ AGOLA20 ]                    // [292]
    @GOLA020@ : Keep_Original_Name[ AGOLA20 ]                    // [292]

    @_GREYSCALE_@   : Should be 100% grey pixel colors.          // [293]
    @_TRANS_BLACK_@ : Transparent Black Pixel.                   // [293]
    @_ZERO_TCENUM_@ : Zero Transparent Color Enumeration         // [293]
                                                                 // [293]
    #_ALL_UDESIGNS_SHOULD_BE_BYTE_ARRAYS_# :------------------+  // [293]
                                                              |  // [293]
        If we want to be consistent with our data types,      |  // [293]
        we cannot make UDESIGNS in GOLA512 use Uint32Array    |  // [293]
        if all the other UDESIGNS are Uint8Array.             |  // [293]
                                                              |  // [293]
        Be consistent and use 100% palletized colors.         |  // [293]
                                                              |  // [293]
        :--------------------------------------------------:  |  // [293]
        : WRONG > > > Unlike other udesigns, we are        :  |  // [293]
        : WRONG > > > going to mix integer enums and RGBA  :  |  // [293]
        : WRONG > > > hex colors. Values 0-255 will        :  |  // [293]
        : WRONG > > > be considered enumerations.          :  |  // [293]
        : WRONG > > >  Everything else considered 32-bit.  :  |  // [293]
        :--------------------------------------------------:  |  // [293]
    :---------------------------------------------------------+  // [293]
                                                                 // [293]
    @0_I_E@ : Zero_Indexed_Entries                               // [293]
    @1_I_E@ : One__Indexed_Entries                               // [293]
                                                                 // [293]
    #_DECAL_UDESIGN_# :---------------------------------------+  // [293]
    #_DECAL_DESIGN__# :---------------------------------------+  // [293]
                                                              |  // [293]
        Placeholder designs for[ D_E_C_A_L ]graphics to use   |  // [293]
        in shader #7. Once shader #7 is finished,             |  // [293]
        these patterns will become                            |  // [293]
        @VESTIGIAL_PROGRAMMING_ORGANS@                        |  // [293]
    :---------------------------------------------------------+  // [293]
    #_TILE_UDESIGN_# :----------------------------------------+  // [293]
    #_TILE_DESIGN__# :----------------------------------------+  // [293]
                                                              |  // [293]
        Placeholder designs for[ GEOM|BOMB|FADA ]graphics     |  // [293]
        to use in shader #7. Once shader #7 is finished,      |  // [293]
        these patterns will become                            |  // [293]
        @VESTIGIAL_PROGRAMMING_ORGANS@                        |  // [293]
                                                              |  // [293]
    :---------------------------------------------------------+  // [293]
    :---------------------------------------------------------+  // [293]
                                                                 // [293]
    @VESTIGIAL_PROGRAMMING_ORGANS@ :                             // [293]
                                                                 // [293]
        Code that is no longer needed but I keep it              // [293]
        anyways because it helps me understand how               // [293]
        the code evolved to it's current state.                  // [293]

    #_UDESIGN_QUICK_SUMMARY_# :-------------------------------+  // [294]
                                                              |  // [294]
        20x20 Uint8Array , 4x4 grid of 5x5 tiles              |  // [294]
                                                              |  // [294]
    :---------------------------------------------------------+  // [294]
    #_MASTER_MEMORY_CELL_LOOKUP_TABLES_# :--------------------+  // [294]
                                                              |  // [294]
       @d_mmx_mmi@ : MasterMemoryCellX --> MasterMemoryIndex  |  // [294]
       @d_mmy_mmi@ : MasterMemoryCellY --> MasterMemoryIndex  |  // [294]
                                                              |  // [294]
       @d_mmi_mmx@ : MasterMemoryIndex --> MasterMemoryCellX  |  // [294]
       @d_mmi_mmy@ : MasterMemoryIndex --> MasterMemoryCellY  |  // [294]
                                                              |  // [294]
    :---------------------------------------------------------+  // [294]
    #_MMX_TO_MMI_# :------------------------------------------+  // [294]
    #_MMY_TO_MMI_# :------------------------------------------+  // [294]
    #_MMI_TO_MMX_# :------------------------------------------+  // [294]
    #_MMI_TO_MMY_# :------------------------------------------+  // [294]
                                                              |  // [294]
        d_mmx_mmi ===LUT[ ( mmx )==>( mmi ) ]@N_F_P@          |  // [294]
        d_mmy_mmi ===LUT[ ( mmy )==>( mmi ) ]@N_F_P@          |  // [294]
                                                              |  // [294]
        d_mmi_mmx ===LUT[ ( mmi )==>( mmx ) ]@_VALID_LUT_@    |  // [294]
        d_mmi_mmy ===LUT[ ( mmi )==>( mmy ) ]@_VALID_LUT_@    |  // [294]
                                                              |  // [294]
                    __mmx__   __mmx__   __mmx__   __mmx__     |  // [294]
                      000       001       002       003       |  // [294]
                  +---===---+---===---+---===---+---===---+   |  // [294]
                  |         |         |         |         |   |  // [294]
    __mmy__ : 000 |   000   |   001   |   002   |   003   |   |  // [294]
                  | __mmi__ | __mmi__ | __mmi__ | __mmi__ |   |  // [294]
                  +---===---+---===---+---===---+---===---+   |  // [294]
                  |         |         |         |         |   |  // [294]
    __mmy__ : 001 |   004   |   005   |   006   |   007   |   |  // [294]
                  | __mmi__ | __mmi__ | __mmi__ | __mmi__ |   |  // [294]
                  +---===---+---===---+---===---+---===---+   |  // [294]
                  |         |         |         |         |   |  // [294]
    __mmy__ : 002 |   008   |   009   |   010   |   011   |   |  // [294]
                  | __mmi__ | __mmi__ | __mmi__ | __mmi__ |   |  // [294]
                  +---===---+---===---+---===---+---===---+   |  // [294]
                  |         |         |         |         |   |  // [294]
    __mmy__ : 003 |   012   |   013   |   014   |   015   |   |  // [294]
                  | __mmi__ | __mmi__ | __mmi__ | __mmi__ |   |  // [294]
                  +---===---+---===---+---===---+---===---+   |  // [294]
                                                              |  // [294]
                                 TAG[ #_MMT_PREFAB_RESEARCH_# ]  // [462]
    :---------------------------------------------------------+  // [294]
    :---------------------------------------------------------+  // [294]
                                                                 // [294]
    @N_F_P@ : Not_Fucking_Possible                               // [294]
    @_VALID_LUT_@ : Valid Lookup Table                           // [294]
                                                                 // [294]
    @upalkey@ : Udesign_PALlet_KEY                               // [294]
    @udesign@ : Uint8_Design (20x20 1D array)                    // [294]
    ::::::::::: Arranged in 4x4 meta grid where each             // [294]
    ::::::::::: sub tile is 5x5 elements.                        // [294]
                                                                 // [294]
    @i_upalkey@ : Input pallet for rasterizing UDESIGN.          // [294]
    @i_udesign@ : Input UDESIGN to be rasterized into texture.   // [294]
    @i_mmi@     : Input Master Memory Index To Paste To.         // [294]

    #_DIVIDE_TILES_INTO_34_SECTIONS_# :-----------------------+  // [295]
                                                              |  // [295]
        In our first auto tile shader we divided tile into    |  // [295]
        34 sections so that we could compute 34 distinct      |  // [295]
        "ring addresses" from the internal tile coordinates   |  // [295]
        of the current tile being rendered.                   |  // [295]
                                                              |  // [295]
        We then filtered down those 34 addressed into 10      |  // [295]
        addresses. Pigeon Whole Principle means some          |  // [295]
        input addresses will map to the same output address.  |  // [295]
                                                              |  // [295]
        This in effect allows us to create a square           |  // [295]
        ring-bulge effect on our graphical data when          |  // [295]
        rendering the tiles.                                  |  // [295]
                                                              |  // [295]
        34 was choosen because it goes in EVENLY to           |  // [295]
        [ c_du0 ] and makes our math @_PIXEL_PERFECT_@        |  // [295]
                                                              |  // [295]
    :---------------------------------------------------------+  // [295]
                                                                 // [295]
    @_PIXEL_PERFECT_@ : Pixel Perfect math where everything      // [295]
                      : goes in evenly. Important to me          // [295]
                      : because writing my shaders using         // [295]
                      : discrete mathematics.                    // [295]
    @_5X5_ELMTILE_@   : 5X5 Element Tile. Tile is 5x5            // [295]
                      : internal units. Could think of those     // [295]
                      : units as "pixels" but not necessarily    // [295]
                      : pixels. Could be pallet indexes.         // [295]
                      : Or something else entirely.              // [295]
                                                                 // [295]
    @ppp@ : Pixels Per PalletPoint                               // [295]
                                                                 // [295]
    #_ALL_VARS_EXCEPT_MMX_MMY_# :-----------------------------+  // [295]
                                                              |  // [295]
        All variables for our function EXCEPT[ mmx ]AND[ mmy ]|  // [295]
        are declared in this section of code.                 |  // [295]
    :---------------------------------------------------------+  // [295]
    #_256_X_256_PIXEL_BLOCK_LOOP_# :--------------------------+  // [295]
                                                              |  // [295]
        The tiles we are rasterizing are stored in a          |  // [295]
        256_x_256 block of pixels. A 4x4 grid of pixels       |  // [295]
        in a 256_x_256 block means each tile design           |  // [295]
        will be rasterized to 64_x_64 pixels.                 |  // [295]
        ( 256/4 == 64 )                                       |  // [295]
    :---------------------------------------------------------+  // [295]
    #_GET_UPX_UPY_# :-----------------------------------------+  // [295]
                                                              |  // [295]
        Get udesign pallet point "x" and "y".                 |  // [295]
        This is the "picture element" of a "udesign".         |  // [295]
        It is __NOT__ a pixel though. As there are about      |  // [295]
        12_x_12 pixels of rasterization per [upx,upy] point.  |  // [295]
                                                              |  // [295]
        ( ( 256.0 / 20.0 )                            )       |  // [295]
        ( [ 256 pixels ] / [ 20 [ upx || upy ] points )       |  // [295]
    :---------------------------------------------------------+  // [295]
    #_GET_RGBA_COLOR_# :--------------------------------------+  // [295]
                                                              |  // [295]
        Convert Palletized color code [ 1 - 9 ] into          |  // [295]
        a 32-bit ( 4byte ) RGBA hex color.                    |  // [295]
    :---------------------------------------------------------+  // [295]
    #_GET_UDESIGN_TILE_CELL_# :-------------------------------+  // [295]
                                                              |  // [295]
        Get the current sub-cell of the udesign we are        |  // [295]
        currently rasterizing into pixels.                    |  // [295]
    :---------------------------------------------------------+  // [295]
    #_PASTE_DESIGN_3_TIMES_# :--------------------------------+  // [295]
                                                              |  // [295]
        We are rendering placeholder patterns. So fuck        |  // [295]
        spending more time on this. Clone stamp the designs   |  // [295]
        3 times. One per[ la3 ]coordinate.                    |  // [295]
    :---------------------------------------------------------+  // [295]

    @_SKIP_ZERO_@ : Skip index zero. NOT A MISTAKE.              // [296]
    @_USE__ZERO_@ : Use  index zero. NOT A MISTAKE.              // [296]
                                                                 // [296]
    #_MIPMAP_POST_PROCESSING_# :------------------------------+  // [296]
    #_CREATE_MIP_MAP_LEVELS__# :------------------------------+  // [296]
                                                              |  // [296]
        Once GOLA512 makes the top mip map level, we          |  // [296]
        need to either bi-linearlly or bi-cubically           |  // [296]
        downsize these quads into the other mip-map           |  // [296]
        levels.                                               |  // [296]
                                                              |  // [296]
        Yep, manually creating mip-maps. Sue me.              |  // [296]
        Actually, don't sue me.                               |  // [296]
        Lawyers are expensive.                                |  // [296]
    :---------------------------------------------------------+  // [296]
    #_OUTER_MIP_MAP_LOOP_# :----------------------------------+  // [297][--------]
                                                              |  // [297][--------]
            //:-----------------------------------------://   |  // [297][MOV][296]
            //: TODO: Create all mip map levels for the ://   |  // [297][MOV][296]
            //:     : current 512_x_512 block of memory ://   |  // [297][MOV][296]
            //:     : within[ d_pix2048 ]               ://   |  // [297][MOV][296]
            //:-----------------------------------------://   |  // [297][MOV][296]
                                                              |  // [297][--------]
    :---------------------------------------------------------+  // [297][--------]
    #_DIAG_OFFSET_TO_DEST_CLUST_# :---------------------------+  // [297]
                                                              |  // [297]
        Diagonal offset to destination cluster.               |  // [297]
        Offset from top-left of [512_x_512] block of          |  // [297]
        memory to the orgin of the cluster of layers(la3)     |  // [297]
        that all have the same mip-map-exponent(me9).         |  // [297]
                                                              |  // [297]
        Diagonal does not mean "HYPOTNUSE_LENGTH"             |  // [297]
        Diagonal means we apply this offset to both the       |  // [297]
        X and Y axis, to effectively translate diagonally.    |  // [297]
                                                              |  // [297]
               |<---256->|                                    |  // [297]
        ---=-- +-------+ +-------+  Example : Diagonal Offset |  // [297]
           |   |       | |       |          : when me9==1     |  // [297]
           |   |       | |       |          : is 256.         |  // [297]
          256  |       | |       |                            |  // [297]
           |   +-------+ +-------+                            |  // [297]
        ---=-- +-------+ +---+---+ <---+  +-------------------+  // [297]
               |       | |_A_|_B_|     |  |                   |  // [297]
               |       | +---+---+     |  | @Mip_Map_Cluster@ |  // [297]
               |       | |_C_|         |  |                   |  // [297]
               +-------+ +---+         +--| _A_ :me9==1,la3==0|  // [297]
                         ^             |  | _B_ :me9==1,la3==1|  // [297]
                         |             |  | _C_ :me9==1,la3==2|  // [297]
                         +-------------+  +-------------------+  // [297]
                                          | dia === 256       |  // [297]
                                          +-------------------+  // [297]
                                                              |  // [297]
    :---------------------------------------------------------+  // [297]
    #_WHAT_LAYER_QUAD_ARE_YOU_IN_# :--------------------------+  // [297]
                                                              |  // [297]
        There are 3 valid layer quads. The 4th is used        |  // [297]
        for different mip-map-levels and thus not             |  // [297]
        valid for pasting graphics into.                      |  // [297]
                                                              |  // [297]
    :---------------------------------------------------------+  // [297]
    #_LATERAL_SPAN_OF_DEST_# :--------------------------------+  // [297]
                                                              |  // [297]
        How big is the current block of pixels for the        |  // [297]
        target mip-map-level you are about to rasterize?      |  // [297]
                                                              |  // [297]
        WIDTH === HEIGHT because we always use square         |  // [297]
        textures and tilemaps. So we say "Lateral"            |  // [297]
        to mean __BOTH__ "lateral span x-axis"                |  // [297]
        and "lateral span y-axis".                            |  // [297]
                                                              |  // [297]
    :---------------------------------------------------------+  // [297]
    #_CALC_PIXEL_BLOCK_SOURCE_# :-----------------------------+  // [297]
                                                              |  // [297]
        The graphic on master memory we want to copy          |  // [297]
        and paste somewhere else at a __SMALLER__ size.       |  // [297]
    :---------------------------------------------------------+  // [297]
    #_CALC_PIXEL_BLOCK_DEST_# :-------------------------------+  // [297]
                                                              |  // [297]
        Where to put the __SMALLER__ version of the           |  // [297]
        source graphic on the master memory.                  |  // [297]
    :---------------------------------------------------------+  // [297]
    #_DOWNSCALED_COPY_PASTE_# :-------------------------------+  // [297]
                                                              |  // [297]
        We are going to use a re-usable function here.        |  // [297]
        Seems like a logical place to break up the code.      |  // [297]
        And delta #2_9_7 is long enough already.              |  // [297]
    :---------------------------------------------------------+  // [297]
    #_NOT_ALL_LATS_ARE_THE_SAME_# :---------------------------+  // [297]
                                                              |  // [297]
                                                              |  // [297]
        NEW_COMMENT_2022_09_25_2AM:                           |  // [297]
                                                              |  // [297]
            Actually, we won't be mixing them up... Because   |  // [297]
            the mip map lookup table for graphical data       |  // [297]
            shall be called[ me9_lat ].                       |  // [297]
                                                              |  // [297]
            ( Took some coding to realize this )              |  // [297]
                                                              |  // [297]
        OLD_COMMENT_2022_09_25_2AM:                           |  // [297]
                                                              |  // [297]
            Not all lateral spans are the same. MIPWASP is    |  // [297]
            dealing with a "mip map like" structure that      |  // [297]
            covers an ENTIRE 512x512 block of memory.         |  // [297]
            ( one master memory cell of d_pix2048 )           |  // [297]
                                                              |  // [297]
            The[ global / top-level ] d_te7_lat is for a      |  // [297]
            128_x_128 block of memory encoding ONE_LEVEL      |  // [297]
            worth of data within a LEVELPACK that exists      |  // [297]
            on a master memory cell.                          |  // [297]
                                                              |  // [297]
            Both lateral spans are doing math with mipmap     |  // [297]
            like structures, but one is for "TILE_DATA"       |  // [297]
            and the other is for "GRAPHIC_DATA"               |  // [297]
                                                              |  // [297]
            DONT_FUCKING_MIX_THEM_UP                          |  // [297]
                                                              |  // [297]
    :---------------------------------------------------------+  // [297]
    @me9_lat@ : Mipmap_Exponent( 9 total ) ==> LATeral_span      // [297]
                                                                 // [297]
    @te9@ : No Such Thing. Either Mean[ me9 ]OR[ te7 ].          // [297]
    @me7@ : No Such Thing. Either Mean[ te7 ]OR[ me9 ].          // [297]
    @me9@ : Mipmap_Exponent_Nine(9)total([0|1|2...6|7|8])        // [297]
    @te7@ : TilesizeExponent_Seven(7)total([0|1|2|3|4|5|6])      // [297]
                                                                 // [297]
    @Mip_Map_Cluster@ : Cluster Of 3 layers worth of pixels      // [297]
                      : or tiles or whatever that all have       // [297]
                      : the S_A_M_E "Size_Exponent"              // [297]
                                                                 // [297]
    @Size_Exponent@ : Both[ te7 ]AND[ me9 ]Are Size Exponents    // [297]

    #_MIPWASP_DOWNSAMPLE_LOOP_# :-----------------------------+  // [298]
                                                              |  // [298]
        We are doing the highest possible quality             |  // [298]
        downscale possible. Averaging all of the              |  // [298]
        valid multi-sample-points that our                    |  // [298]
        destination pixel lays over.                          |  // [298]
                                                              |  // [298]
        |<--------------- SRC_WID === 8 --------->|           |  // [298]
        |<--------------- DST_WID === 2 --------->|           |  // [298]
        +-------------------+ +-------------------+           |  // [298]
        | +---+---+---+---+ | | +---+---+---+---+ |           |  // [298]
        | | 0 |255|255| 0 | | | |   |   |   |   | |           |  // [298]
        | +---+---+---+---+ | | +---+---+---+---+ |           |  // [298]
        | |255|128|128|255| | | |   |   |   |   | |           |  // [298]
        | +---+---+---+---+ | | +---+---+---+---+ |           |  // [298]
        | |255|128|128|255| | | |   |   |   |   | |           |  // [298]
        | +---+---+---+---+ | | +---+---+---+---+ |           |  // [298]
        | | 0 |255|255| 0 | | | |   |   |   |   | |           |  // [298]
        | +---+---+---+---+ | | +---+---+---+---+ |           |  // [298]
        +-------------------+ +-------------------+           |  // [298]
        +-------------------+ +-------------------+           |  // [298]
        | +---+---+---+---+ | | +---+---+---+---+ |           |  // [298]
        | |   |   |   |   | | | |   |   |   |   | |           |  // [298]
        | +---+---+---+---+ | | +---+---+---+---+ |           |  // [298]
        | |   |   |   |   | | | |   |   |   |   | |           |  // [298]
        | +---+---+---+---+ | | +---+---+---+---+ |           |  // [298]
        | |   |   |   |   | | | |   |   |   |   | |           |  // [298]
        | +---+---+---+---+ | | +---+---+---+---+ |           |  // [298]
        | |   |   |   |   | | | |   |   |   |   | |           |  // [298]
        | +---+---+---+---+ | | +---+---+---+---+ |           |  // [298]
        +-------------------+ +-------------------+           |  // [298]
                                                              |  // [298]
        Let's take the top-left destination pixel             |  // [298]
        from the diagram above, and figure out it's           |  // [298]
        final pixel color for ONE_COLOR_CHANNEL.              |  // [298]
                                                              |  // [298]
        +-------------------+      +-------------------+      |  // [298]
        | +---+---+---+---+ |      |                   |      |  // [298]
        | | 0 |255|255| 0 | |      |                   |      |  // [298]
        | +---+---+---+---+ |      |                   |      |  // [298]
        | |255|128|128|255| |      |                   |      |  // [298]
        | +---+---+---+---+ | ===> |       151         |      |  // [298]
        | |255|128|128|255| |      |                   |      |  // [298]
        | +---+---+---+---+ |      |                   |      |  // [298]
        | | 0 |255|255| 0 | |      |   @BACARDI_151@   |      |  // [298]
        | +---+---+---+---+ |      |                   |      |  // [298]
        +-------------------+      +-------------------+      |  // [298]
                                                              |  // [298]
        +-------------------+      +-------------------+      |  // [298]
        | ( (0+0+0+0)       |      |                   |      |  // [298]
        | +(255+255+255+255)|      |                   |      |  // [298]
        | +(255+255+255+255)| ===> |(      151.5      )|      |  // [298]
        | +(128+128+128)    |      |                   |      |  // [298]
        | ) / 16            |      |                   |      |  // [298]
        +-------------------+      +-------------------+      |  // [298]
                                                              |  // [298]
    :---------------------------------------------------------+  // [298]
                                                                 // [298]
    @BACARDI_151@ : https://en.wikipedia.org/wiki/Bacardi_151    // [298]
                                                                
    @SSTW@ : Super_Sampler_Tile_Width                            // [299]
    @SSTH@ : Super_Sampler_Tile_Height                           // [299]
                                                                 // [299]
    #_CALC_SUPER_SAMPLER_TILE_# :-----------------------------+  // [299]
                                                              |  // [299]
        Source Image :::::::::::: 16_x_16                     |  // [299]
        Dest   Image ::::::::::::  3_x_3                      |  // [299]
        Super Sampler Tile Size :  4_x_4                      |  // [299]
                                                              |  // [299]
        +------------+------------+------------+              |  // [299]
        |[0][1][2][3]|[0][1][2][3]|[0][1][2][3]|              |  // [299]
        |[1][ ][ ][ ]|[1][ ][ ][ ]|[1][ ][ ][ ]|              |  // [299]
        |[2][ ][ ][ ]|[2][ ][ ][ ]|[2][ ][ ][ ]|              |  // [299]
        |[3][ ][ ][ ]|[3][ ][ ][ ]|[3][ ][ ][ ]|              |  // [299]
        +------------+------------+------------+              |  // [299]
        |[0][1][2][3]|[0][1][2][3]|[0][1][2][3]|              |  // [299]
        |[1][ ][ ][ ]|[1][ ][ ][ ]|[1][ ][ ][ ]|              |  // [299]
        |[2][ ][ ][ ]|[2][ ][ ][ ]|[2][ ][ ][ ]|              |  // [299]
        |[3][ ][ ][ ]|[3][ ][ ][ ]|[3][ ][ ][ ]|              |  // [299]
        +------------+------------+------------+              |  // [299]
        |[0][1][2][3]|[0][1][2][3]|[0][1][2][3]|              |  // [299]
        |[1][ ][ ][ ]|[1][ ][ ][ ]|[1][ ][ ][ ]|              |  // [299]
        |[2][ ][ ][ ]|[2][ ][ ][ ]|[2][ ][ ][ ]|              |  // [299]
        |[3][ ][ ][ ]|[3][ ][ ][ ]|[3][ ][ ][ ]|              |  // [299]
        +------------+------------+------------+              |  // [299]
                                                              |  // [299]
        We would never use a non power of 2 output image      |  // [299]
        in actual code. But 3_x_3 output image makes for      |  // [299]
        a clearer example problem set.                        |  // [299]
        ( Because Dest Image And Super Sampler Tile )         |  // [299]
        ( size are different dimensions here.       )         |  // [299]
                                                              |  // [299]
    :---------------------------------------------------------+  // [299]
    #_FUCKING_HELL_MAN_2022_09_25_# :-------------------------+  // [299]
                                                              |  // [299]
        The previous commit to master repo was tagged [298]   |  // [299]
        when it should have been [299] , adding this          |  // [299]
        as a note. I am getting tired and doing stupid        |  // [299]
        shit. It is 8:20 AM. Been up since... 7:30PM          |  // [299]
        yesterday when I decided not to go clubbing.          |  // [299]
        Stop watch time says 12 hours. 12 hours is            |  // [299]
        enough coding.                                        |  // [299]
    :---------------------------------------------------------+  // [299]

    #_YES_NEEDED_BY_ARTGOLA_# :-------------------------------+  // [301]
                                                              |  // [301]
        The four master memory cells used to house            |  // [301]
        all of the tiles generated by ARTGOLA.                |  // [301]
                                                              |  // [301]
        ( 16 tiles per layer , 3 layers == 48 tiles ).        |  // [301]
                                                              |  // [301]
        Because we have 3 layers of tiles spanning            |  // [301]
        4 master memory cells, we need to give the            |  // [301]
        tile a global index that can identify                 |  // [301]
        both the tile VALUE and LAYER.                        |  // [301]
                                                              |  // [301]
        tig : Tile Index Global , maybe ?                     |  // [301]
        t48 : Tile , 48 of them maybe ?                       |  // [301]
        v48 : Tile , 48 values  maybe ? (most consistent)     |  // [301]
                                                              |  // [301]
        ( v48 )===>( la3 )                                    |  // [301]
        ( v48 )===>( v16 )                                    |  // [301]
                                                              |  // [301]
    :---------------------------------------------------------+  // [301]
                                                                 // [301]
    @qualgen@ : Quality Generation. Qualit of graphics           // [301]
              : generation setting. A constant because we        // [301]
              : cannot re-configure after startup.               // [301]
                                                                 // [301]
    @QUALLOW@ : Quality Low                                      // [301]
    @QUALMAX@ : Quality Max                                      // [301]
    @QUALMIN@ : DONT_USE_USE[ QUALLOW ]( "L" vs "M" )            // [301]
                                                                 // [301]
    @_OK_START_GUILTY_@ : Assume everything is NOT_OK.           // [301]
                                                                 // [301]
    #_2_9_4_MMX_MMY_CHECK_# :---------------------------------+  // [301]
                                                              |  // [301]
        Section retro-actively created for video #2_9_4.      |  // [301]
        Took the 2 lines of code and created a section        |  // [301]
        for it where we are doing more intense error          |  // [301]
        checks because[ i_mmi ]got passed in with             |  // [301]
        a negative index. Now Fixed, but leaving              |  // [301]
        the extra error check code here.                      |  // [301]
    :---------------------------------------------------------+  // [301]
    #_YES_NEEDED_BY_ARTGOLA_# :-------------------------------+  // [301]
                                TAG[ _global_material_index_ ]|  // [301]
                                                              |  // [301]
        @mmi_artgola_000_011@ : GEOM[ 00 - 11 ][_____________]|  // [301]
        @mmi_artgola_012_023@ : GEOM[ 12 - 15 ]BOMB[ 00 - 07 ]|  // [301]
        @mmi_artgola_024_035@ : FADA[ 00 - 03 ]BOMB[ 08 - 15 ]|  // [301]
        @mmi_artgola_036_047@ : FADA[ 04 - 15 ][_____________]|  // [301]
                                                              |  // [301]
        We have 3 tile types, GEOM,BOMB,FADA , but they       |  // [301]
        span 4 master memory cells when using shader #7.      |  // [301]
        ARTGOLA is creating the rasterized artwork for        |  // [301]
        shader #7 and putting it into 4 master memory slots.  |  // [301]
    :---------------------------------------------------------+  // [301]
    #_MAKE_LESS_CONFUSING_# :---------------------------------+  // [301]
                                                              |  // [301]
        There is no intentional hard-link between these       |  // [301]
        master memory cell enumerations. We shouldn't be      |  // [301]
        using both sets of enums at the same time for         |  // [301]
        whatever configuruation we are currently in,          |  // [301]
        but they may be identical or different from each      |  // [301]
        other.                                                |  // [301]
                                                              |  // [301]
        Different is not an error.                            |  // [301]
        Same is not an error.                                 |  // [301]
                                                              |  // [301]
        They are not required to match.                       |  // [301]
        They are not required to be different.                |  // [301]
    :---------------------------------------------------------+  // [301]
    #_INCREMENT_COUNTER_# :-----------------------------------+  // [301]
                                                              |  // [301]
        Increment system_internal_step( sis )counter.         |  // [301]
        We also have a system-specific (namespaced) counter   |  // [301]
        as a redundancy. Because I am paranoid.               |  // [301]
    :---------------------------------------------------------+  // [301]
    @_ERROR_CHECK_INPUTS_@ :----------------------------------+  // [301]
                                                              |  // [301]
        Generic comment. This code section is checking the    |  // [301]
        inputs at the very beginning of function body to      |  // [301]
        make sure it is about to execute with valid data.     |  // [301]
    :---------------------------------------------------------+  // [301]
    @_VARIABLE_DECLARATION_@ :--------------------------------+  // [301]
                                                              |  // [301]
        Generic comment. This code section is for C89 style   |  // [301]
        variable declaration. Declaring most, if not all      |  // [301]
        variables at the head of the function.                |  // [301]
    :---------------------------------------------------------+  // [301]
    #_SELECT_DATA_TO_RENDER_# :-------------------------------+  // [301]
                                                              |  // [301]
        Selecting which chunk of 12 greyscale tile designs    |  // [301]
        we are going to render and place into a master        |  // [301]
        memory cell.                                          |  // [301]
    :---------------------------------------------------------+  // [301]
    #_NON_FRACTAL_RENDER_TILES_# :----------------------------+  // [301]
                                                              |  // [301]
        You are inside of the QUALLOW( quality low )function. |  // [301]
        This section is where we make the function call to    |  // [301]
        rasterize NON-FRACTAL tile designs.                   |  // [301]
                                                              |  // [301]
        These tile designs are the exact same                 |  // [301]
        [ GOLASET-512X512-MipMap / GOLA512 ]                  |  // [301]
        structure as our final graphics.                      |  // [301]
                                                              |  // [301]
        The only difference between shader #7's fractal       |  // [301]
        graphics and non-fractal graphics is that the         |  // [301]
        non-fractal graphics look like shit. The data         |  // [301]
        access patterns for the image data remains            |  // [301]
        the same.                                             |  // [301]
                                                              |  // [301]
        Placeholder graphics is like... If a 7 year old       |  // [301]
        put a really crappy roblox .FBX file into the         |  // [301]
        DOOM ETERNAL engine. The [ .FBX ]format is still      |  // [301]
        correct, but the content sucks.                       |  // [301]
    :---------------------------------------------------------+  // [301]
    @_ERROR_CHECK_OUTPUTS_@ :---------------------------------+  // [301]
                                                              |  // [301]
        Generic Comment. Making sure that the state of        |  // [301]
        program is correct before leaving the function.       |  // [301]
    :---------------------------------------------------------+  // [301]
    #_QUALGEN_RENDER_SELECTION_# :----------------------------+  // [301]
                                                              |  // [301]
        We are in some startup code.                          |  // [301]
        If[ c_qualgen === "[QUALLOW]" ]THEN[ PLACEHOLDERS ]   |  // [301]
        If[ c_qualgen === "[QUALMAX]" ]THEN[ FRACTAL_IMGS ]   |  // [301]
                                                              |  // [301]
    :---------------------------------------------------------+  // [301]
                                                                 // [---]
    @[COP]@ : Tag Meaning "Copied_And_Pasted"                    // [302]
    @[CPR]@ : Copy_Paste_Refactor                                // [302]
    @[CAR]@ : Copy_And_Refactor ( Prefer Using @[CPR]@ )         // [302]
                                                                 // [302]
    @H_Q_G_G_@ : High_Quality_Graphics_Generation                // [302]
    @BAD_QUALGEN_STRING@ : Bad_Quality_Generation_String         // [302]
    @_OUT_OF_SYNC_@ : Two things that should be in lockstep      // [302]
                    : are not in lockstep for some reason.       // [302]
    @_A_F_A_D_@ : Already_Flagged_As_Done                        // [302]
    @OOB_DEX_SIS@ : OutOfBounds_inDEX_SystemInternalStep         // [302]
    @C_T_M_T@ : Called_Too_Many_Times                            // [302]
    @INTERLACE_DETECT@ : Accidential Interlace Detection.        // [302]
                       : Multi-step-initializers should          // [302]
                       : init one-at-a-time                      // [302]
                                                                 // [---]
    @u_mmi@ : Uint32 - Master_Memory_Index                       // [303]
    @u_mm4@ : Uint32 - Like "u_mmi" , but local index for the    // [303]
                       consequitive 4-blocks holding TILE        // [303]
                       data.                                     // [303]
                       ( mmt == master memory(local)tile)        // [303]
    @u_la3@ : Uint32 - tile_LAyer_(0-to-(03-1))                  // [303]
    @u_v16@ : Uint32 - tile_VALUE_(0-to-(16-1))                  // [303]
    @u_v48@ : Uint32 - tile_VALUE_(0-to-(48-1))                  // [303]
    @u_v12@ : Uint32 - tile_VALUE_(0-to-(12-1))                  // [303]
    @u_me9@ : Uint32 - Mipmap_Exponent_(0-to-(9-1))              // [303]
    @u_dil@ : U32VEC - Discrete_Internal_Local( of tile )        // [320][303]
    @u_dun@ : Uint32 - Discrete_UNits(on tile,either axis)       // [303]
    @u_mut@ : Uint32 - Mipmap_Units_in_current_Tile              // [???]
    @u_mil@ : Uint32 - Mipmap_Internal_local (local to tile)     // [???]
                                                                 // [???]
    @u_put@ : YOU_MEAN[ u_mut ]                                  // [???]
    @u_pun@ : YOU_MEAN[ u_mut ]                                  // [???]
                                                                 // [???]
    #_PUT_PUN_# :---------------------------------------------+  // [???]
    #_PUN_PUT_# :---------------------------------------------+  // [???]
                                                              |  // [???]
        @u_put@ : DONT_USE , it means "pixel_units_tile"      |  // [???]
                : But you should use[ u_mut ]instead.         |  // [???]
                                                              |  // [???]
        @u_pun@ : DONT_USE , it means "Pixel_Units(Tile)"     |  // [???]
                : But you should use[ u_mut ]instead.         |  // [???]
    :---------------------------------------------------------+  // [???]
    :---------------------------------------------------------+  // [???]
                                                                 // [303]
    @MMT_SUBSTITUTION@ : Subtituting "u_mm4" with it's           // [303]
                       : calculation, instead of it's var.       // [303]
                                                                 // [303]
    @_QUESTIONABLE_SCOPE_@ :----------------------------------+  // [303]
                                                              |  // [303]
        I know the variables are needed, but the scope in     |  // [303]
        which I declared all of them may be unncecssary.      |  // [303]
        It is nice to have this consolidated list however,    |  // [303]
        so just comment out the line by replacing the         |  // [303]
        "TYP" ( F32 , U32 , FV4 , ETC ) with "///"            |  // [303]
                                                              |  // [303]
        This way we can maintain a helpful summary index      |  // [303]
        for the reader of the code.                           |  // [303]
    :---------------------------------------------------------+  // [303]
    #_SHADER_7_OCCLUSION_PROCESS_# :--------------------------+  // [303]
    #_SHADER_7_PROCESS_#:-------------------------------------+  // [303]
                                                              |  // [303]
        @_S7P_P01_@ : Shader_7_Process - Part 001             |  // [303]
        @_S7P_P02_@ : Shader_7_Process - Part 002             |  // [303]
                                                              |  // [303]
                                                              |  // [303]
        #_S7P_P01_# :-----------------------------------------+  // [303]
                               TAG[ #_DATASEL_OCCLUDE_LOOP_# ]|  // [304]
                                                              |  // [303]
            TE7_FRONT_TO_BACK_LOOP:[ te7[ 0,1,2,3,4,5,6 ] ]:-+|  // [303]
            LA3_FRONT_TO_BACK_LOOP:[ la3[ 2,1,0 ]         ]:-+|  // [303]
                                        #_DIAGRAM_U_V16_#    ||  // [303]
                                #_DIAGRAM_U_LA3_#   VVV      ||  // [303]
                                            VVV     VVV      ||  // [303]
                IF[ visible_fada_tile ]===> la3:2 , t16:[0-15]|  // [303]
                IF[ visible_bomb_tile ]===> la3:1 , t16:[0-15]|  // [303]
                IF[ visible_geom_tile ]===> la3:0 , t16:[0-15]|  // [303]
                                                             ||  // [303]
                Exit on first visible tile type detected.    ||  // [303]
                OUTPUT[ u_la3 ]                              ||  // [303]
                OUTPUT[ u_v16 ]                              ||  // [303]
            +------------------------------------------------+|  // [303]
                OUTPUT[ u_te7 ]    < < < < #_DIAGRAM_U_TE7_# ||  // [303]
            +------------------------------------------------+|  // [303]
                                                              |  // [303]
        #_S7P_P02_# :-----------------------------------------+  // [303]
                                 TAG[ #_MMT_PREFAB_RESEARCH_# ]  // [462][303]
            | #_DIAGRAM_U_MMI_# |                             |  // [303]
            |<--- d_pix2048 --->|                             |  // [303]
            |0512|0512|0512|0512|                             |  // [303]
            +----+----+----+----+ 11 : Decals                 |  // [303]
            | __ | __ | __ | __ |                             |  // [303]
            +----+----+----+----+ 12 : Tiles ( 12_Tiles )     |  // [303]
            | __ | __ | __ | __ | 13 : Tiles ( 12_Tiles )     |  // [303]
            +----+----+----+----+ 14 : Tiles ( 12_Tiles )     |  // [303]
            | __ | __ | __ | 11 | 15 : Tiles ( 12_Tiles )     |  // [303]
            +----+----+----+----+            (   V      )     |  // [303]
            | 12 | 13 | 14 | 15 |            (   V      )     |  // [303]
            +----+----+----+----+            (   V      )     |  // [303]
                                             (   V      )     |  // [303]
            +-------------------+            (   V      )     |  // [303]
            | 12 & 13 & 14 & 15 |==( 12*4 )==( 48_Tiles )     |  // [303]
            +-------------------+                             |  // [303]
                                                              |  // [303]
            |<- u_mmi[ 0-15 ] ->|     |<- u_mm4[ 0-03 ] ->|   |  // [303]
            +----+----+----+----+     +----+----+----+----+   |  // [303]
            | 00 | 01 | 02 | 03 |     | __ | __ | __ | __ |   |  // [303]
            +----+----+----+----+     +----+----+----+----+   |  // [303]
            | 04 | 05 | 06 | 07 |     | __ | __ | __ | __ |   |  // [303]
            +----+----+----+----+     +----+----+----+----+   |  // [303]
            | 08 | 09 | 10 | 11 |     | __ | __ | __ | __ |   |  // [303]
            +----+----+----+----+     +----+----+----+----+   |  // [303]
            | 12 | 13 | 14 | 15 |> > >| 00 | 01 | 02 | 03 |   |  // [303]
            +-||-+----+----+----+     +-||-+-||-+-||-+-||-+   |  // [303]
              ||                        ||   ||   ||   ||     |  // [303]
      c_mmi_artgola_000_011             #_DIAGRAM_U_MM4_#     |  // [303]
      ( u_mm4's global origin )                               |  // [303]
                                                              |  // [303]
            u_v48 =( u_la3 * 16 )+( u_v16 ); #_DIAGRAM_U_V48_#|  // [303]
            u_mm4 =( u_v48 / 12 );                            |  // [303]
            u_v12 =( u_v48 -(12*u_mm4) )     #_DIAGRAM_U_V12_#|  // [303]
            u_v12 =((u_v48-(12*(u_v48/12)))  @MMT_SUBSTITUTION|  // [303]
            u_mmi =( c_mmi_artgola_000_011 + u_mm4 );         |  // [303]
                                                              |  // [303]
            u_mmx = d_mmi_mmx[ u_mmi ]  #_DIAGRAM_U_MMX_#     |  // [303]
            u_mmy = d_mmi_mmy[ u_mmi ]  #_DIAGRAM_U_MMY_#     |  // [303]
                                                              |  // [303]
                                                              |  // [303]
            #_PROBLEM_MATH_DOESNT_ACCOUNT_FOR_DESTROYED_#     |  // [303]
                                                              |  // [303]
        #_S7P_P03_# :-----------------------------------------+  // [303]
                                                              |  // [303]
            #_DIAGRAM_U_DUP_# : Discrete Units Per Pixel(dup) |  // [303]
                                                     V        |  // [303]
            |<- SCREEN -->|   |<-- DATA --->|    +---V---+    |  // [303]
            +-------------+   +-------------+    |       |    |  // [303]
            |   [ vp0 ]   | / |   [ vp1 ]   | == | u_dup |    |  // [303]
            +-------------+   +-------------+    |       |    |  // [303]
                                                 +-------+    |  // [303]
                                                              |  // [303]
        #_S7P_P04_# :-----------------------------------------+  // [303]
                                                              |  // [303]
            Figure out which mip-map level to select from.    |  // [303]
                                                              |  // [303]
            We need to select the mip-map level based on      |  // [303]
            the screen-size in pixels of the current tile     |  // [303]
            we are trying to render.                          |  // [303]
                                                              |  // [303]
            u_dun = d_te7_dun[ te7 ] ; DiscreteUNits - Tile   |  // [303]
            u_tsp =( u_dun / u_dup ) ; TileScreenPixels       |  // [303]
                                       #_DIAGRAM_U_TSP_#      |  // [303]
                                                              |  // [303]
            +-------------+                                   |  // [303]
            |             |                                   |  // [303]
            |             | +-------+                         |  // [303]
            |   64_x_64   | |       |                         |  // [303]
            |             | |32_x_32| +----+     +---+ +---+  |  // [303]
            |             | |       | | 16 | ... |2x2| |1x1|  |  // [303]
            +-------------+ +-------+ +----+     +---+ +---+  |  // [303]
                                                              |  // [303]
            #_DIAGRAM_U_ME9_# :------------------------------+|  // [303]
            #_DIAGRAM_U_MUT_# :------------------------------+|  // [303]
                                                             ||  // [303]
                @u_mut@ / @mut@ : Mipmap_Units_in_Tile       ||  // [303]
                                : Pixel Span Of Tile On      ||  // [303]
                                : Our MipMap Data            ||  // [303]
                                                             ||  // [303]
                @u_me9@ / @me9@ : Mipmap_Exponent[0-(9-1)]   ||  // [303]
                                                             ||  // [303]
                             |<-u_mut->|    |<-u_me9->|      ||  // [303]
                CLOSEST_MATCH[ 64_X_64 ]===>( me9 : 0 )      ||  // [303]
                CLOSEST_MATCH[ 32_X_32 ]===>( me9 : 1 )      ||  // [303]
                CLOSEST_MATCH[ 16_X_16 ]===>( me9 : 2 )      ||  // [303]
                CLOSEST_MATCH[ 08_X_08 ]===>( me9 : 3 )      ||  // [303]
                CLOSEST_MATCH[ 04_X_04 ]===>( me9 : 4 )      ||  // [303]
                CLOSEST_MATCH[ 02_X_02 ]===>( me9 : 5 )      ||  // [303]
                CLOSEST_MATCH[ 01_X_01 ]===>( me9 : 6 )      ||  // [303]
                CLOSEST_MATCH[ ___X___ ]===>( me9 : 7 )      ||  // [303]
                CLOSEST_MATCH[ ___X___ ]===>( me9 : 8 )      ||  // [303]
                                                             ||  // [303]
                #_UN_USABLE_ME9_PROBLEM_# :-----------+      ||  // [303]
                Well fuck... There are 2 un-usable    |      ||  // [303]
                mip-map levels because each mip-map   |      ||  // [303]
                level contains a 4x4 grid of tiles....|      ||  // [303]
                +-------------------------------------+      ||  // [303]
            +------------------------------------------------+|  // [303]
                                                              |  // [303]
        #_S7P_P05_# :-----------------------------------------+  // [303]
                                                              |  // [303]
            #_DIAGRAM_U_DIL_#                                 |  // [303]
            #_DIAGRAM_U_DUN_#                                 |  // [303]
                                                              |  // [303]
            |<-- u_dun -->|               |<-- 100 % -->|     |  // [303]
            +-------------+               +-------------+     |  // [303]
            |             | > > > > > > > |             |     |  // [303]
            |             | > > > > > > > |             |     |  // [303]
            |             |               |             |     |  // [303]
            |        * -----[ u_dil.x ]   |        * ---- 66% |  // [303]
            |        |    |               |        |    |     |  // [303]
            +--------|----+ > > > > > > > +--------|----+     |  // [303]
                     |                    V       66%   V     |  // [303]
                [ u_dil.y ]               V             V     |  // [303]
                                          +-------------+     |  // [303]
                                          |             |     |  // [303]
                                          |             |     |  // [303]
            Tile Selected From Mip-Map -->|   64_x_64   |     |  // [303]
            #_DIAGRAM_U_MIL_#             |        * ---- 41_px  // [303]
            u_mil.x === 41_px             |        |    |     |  // [303]
            u_mil.y === 41_px             +--------|----+     |  // [303]
                                                 41_px        |  // [303]
                                        ( 63*0.66 === 41.58 ) |  // [303]
                                                              |  // [303]
    :---------------------------------------------------------+  // [303]
    :------------------------------------: #_SHADER_7_PROCESS_#  // [303]
    :--------------------------: #_SHADER_7_OCCLUSION_PROCESS_#  // [303]
    #DONT_NEED_SCREEN_UNITS_FOR_TILE#:------------------------+  // [303]
                                                              |  // [303]
        For shader #7 we don't need to know how many pixels   |  // [303]
        the tile is in "on-screen" pixels. Because we do      |  // [303]
        the following math.                                   |  // [303]
                                                              |  // [303]
        +------------------------------------------------+    |  // [303]
        |                                                |    |  // [303]
        | [ u_dil ]===>[ percentage coord ]===>[ u_mil ] |    |  // [303]
        |                                                |    |  // [303]
        +------------------------------------------------+    |  // [303]
        @u_dil@ : Discrete_Internal_Local (coord of    tile)  |  // [303]
        @u_mil@ : Mipmap___Internal_Local (coord of MM_TILE)  |  // [303]
                                                              |  // [303]
        @MM_TILE@ : MipMap_TILE                               |  // [303]
                                                              |  // [303]
                @NOT_NEEDED@ : Something we don't need.       |  // [303]
                                                              |  // [303]
        u_pun : @NOT_NEEDED@[ u_pun:PixelUNits(screentile) ]  |  // [303]
        u_sut : @NOT_NEEDED@[ u_sut:ScreenUnits of Tile    ]  |  // [303]
        u_sun : @NOT_NEEDED@[ u_sun:ScreenUNits of tile    ]  |  // [303]
                                                              |  // [303]
    :---------------------------------------------------------+  // [303]
    #_PROBLEM_MATH_DOESNT_ACCOUNT_FOR_DESTROYED_# :-----------+  // [303]
                                                              |  // [303]
        Current shader #7 math as written above               |  // [303]
        on video #3_0_3 , date[ 2022_09_07 ] does not         |  // [303]
        account for rendering DESTROYED_TILES....             |  // [303]
                                                              |  // [303]
        Decision :                                            |  // [303]
                                                              |  // [303]
            Shader 7 does not render destroyed tiles.         |  // [303]
            And it does __NOT__ render animated FADA.         |  // [303]
                                                              |  // [303]
            We can use shader #7 as a sort of "x-ray vision"  |  // [303]
            to determine where "damage mask tiles" (FADA)     |  // [303]
            exist.                                            |  // [303]
                                                              |  // [303]
            Shader 7 will not be our final shader.            |  // [303]
    :---------------------------------------------------------+  // [303]
    #_WHICH_ME9_LEVELS_ARE_USELESS_# :------------------------+  // [303]
                                                              |  // [303]
        Because we are encoding a 4x4 grid of tiles           |  // [303]
        In each mip-map cell, that means the last             |  // [303]
        usable mip-map cell is 4x4 pixels.                    |  // [303]
                                                              |  // [303]
        Because anything smaller than that is less than       |  // [303]
        1-pixel per tile design.                              |  // [303]
                                                              |  // [303]
        [ me9 === 7 ] ===>[ 2_X_2 pixel(S) === UN_USABLE ]    |  // [303]
        [ me9 === 8 ] ===>[ 1_X_1 pixel(S) === UN_USABLE ]    |  // [303]
        [ me9 === 9 ] ===>[ ERROR, me9 range : 0 to (9-1)]    |  // [303]
                                                              |  // [303]
        THUS[ c_me9_lui === 6 ]                               |  // [303]
                                                              |  // [303]
    :---------------------------------------------------------+  // [303]
    #_WASP_ME9_LUI_# :----------------------------------------+  // [303]
                                 +---------------------------+|  // [303]
                                 |me9| me9full   | me9frac   ||  // [303]
        +---+ +---+ +---+ +---+  | 0 | 256_x_256 | 064_x_064 ||  // [303]
        |         | |         |  | 1 | 128_x_128 | 032_x_032 ||  // [303]
        +         + +         +  | 2 | 064_x_064 | 016_x_016 ||  // [303]
        +         + +         +  | 3 | 032_x_032 | 008_x_008 ||  // [303]
        |         | |         |  | 4 | 016_x_016 | 004_x_004 ||  // [303]
        +---+ +---+ +---+ +---+  | 5 | 008_x_008 | 002_x_002 ||  // [303]
        +---+ +---+ +---+ +---+  |_6_| 004_x_004 | 001_x_001 ||  // [303]
        |         | |   | |   |  | 7 | 002_x_002 | NAN_x_NAN ||  // [303]
        +         + +---+ +---+  | 8 | 001_x_001 | NAN_x_NAN ||  // [303]
        +         + +---+ +---+  |OOB|   <OOB>   |   <OOB>   ||  // [303]
        |         | |   | |   |  |                           ||  // [303]
        +---+ +---+ +---+ +---+  [ c_mipwasp_me9_lui === _6_ ]|  // [303]
                                 |                           ||  // [303]
        +------------------------+-+-------------------------++  // [303]
        | [ 00 ][ 01 ][ 02 ][ 03 ] | [ 00 ][ 01 ][ 02 ][ 03 ] |  // [303]
        |                          |                          |  // [303]
        | [ 04 ][ 05 ][ 06 ][ 07 ] | [ 04 ][ 05 ][ 06 ][ 07 ] |  // [303]
        |                          |                          |  // [303]
        | [ 08 ][ 09 ][ 10 ][ 11 ] | [ 08 ][ 09 ][ 10 ][ 11 ] |  // [303]
        |                          |                          |  // [303]
        | [ 12 ][ 13 ][ 14 ][ 15 ] | [ 12 ][ 13 ][ 14 ][ 15 ] |  // [303]
        |                          |                          |  // [303]
        |( 4_MonoTile_Sets (RGBA) )|( 4_MonoTile_Sets (RGBA) )|  // [303]
        +--------------------------+--------------------------+  // [303]
        | [ 00 ][ 01 ][ 02 ][ 03 ] |                          |  // [303]
        |                          |                          |  // [303]
        | [ 04 ][ 05 ][ 06 ][ 07 ] |                          |  // [303]
        |                          | **OTHER_MIP_MAP_LEVELS** |  // [303]
        | [ 08 ][ 09 ][ 10 ][ 11 ] | **OTHER_MIP_MAP_LEVELS** |  // [303]
        |                          |                          |  // [303]
        | [ 12 ][ 13 ][ 14 ][ 15 ] |                          |  // [303]
        |                          |                          |  // [303]
        |( 4_MonoTile_Sets (RGBA) )|                          |  // [303]
        +--------------------------+--------------------------+  // [303]
                                                                 // [303]
        @me9@ ::::: MipMapExponent9 ( 0 to 8 inclusive )         // [303]
        @lui@ ::::: Last_Usable_Index                            // [303]
        @me9_lui@ : MipmapExponent9_LastUsableIndex              // [303]
        @mipwasp_me9_lui@ : [lui] specific to [mipwasp]          // [303]
                                                                 // [303]
    :----------------------------------------: #_WASP_ME9_LUI_#  // [303]
    :---------------------------------------------------------:  // [303]
                                                                 // [303]
    @u_mmt@ : Means[ MasterMemory(index)Tiles ]USE[ u_mm4 ]      // [303]
    @u_mm4@ : MasterMemoryIndex[ 0 to (4-1) ]For_Tile_Data       // [303]
                                                                 // [303]
    @MonoTile_Sets@ : 16-sub-tile auto tile set , but it is      // [303]
    @MonoTileSet@   : Mono-chrome because it is encoded on       // [303]
    @MonoTile@      : one of the 4 color channels. (RGBA).       // [303]

    @_DATASEL_OCCLUDE_LOOP_@ : Data_Selection_Occlusion_Loop     // [304]
    @DOL@ : Dataselection_Occlusion_Loop                         // [304]
                                                                 // [304]
    #_ABOUT_DATASEL_OCCLUDE_LOOP_# :--------------------------+  // [304]
                                                              |  // [304]
        There are two ways we can do occlusion:               |  // [304]
                                                              |  // [304]
            1.  Keep trying to render until the front-most    |  // [304]
                fragment is opaque. Likely inefficient        |  // [304]
                because would be implemented by rendering     |  // [304]
                ALL LAYERS but discarding fragments behind    |  // [304]
                the first opaque pixel we render.             |  // [304]
                                                              |  // [304]
                We could also render in a loop and break      |  // [304]
                out early once pixel is opaque, but pretty    |  // [304]
                sure there is no gaurantee that the shader    |  // [304]
                wont just compute the entire loop and         |  // [304]
                ignore our "Break" statement.                 |  // [304]
                                                              |  // [304]
                https://stackoverflow.com/questions/30256579/ |  // [304]
                is-early-exit-of-loops-on-gpu-worth-doing     |  // [304]
                                                              |  // [304]
            2.  Keep looping through the _DATA_ until we      |  // [304]
                find the FRONT MOST piece of data that        |  // [304]
                is renderable.                                |  // [304]
                                                              |  // [304]
                Even in the worst case scenario where the     |  // [304]
                "break" statement is ignored by GPU,          |  // [304]
                we only spent time selecting the data         |  // [304]
                to render. Computing the final fragment       |  // [304]
                color with that selected data is done         |  // [304]
                outside of the loop.                          |  // [304]
                                                              |  // [304]
                Loop Grabs:                                   |  // [304]
                     2.1 : Tile Size Exponent ( te7 )         |  // [304]
                     2.2 : Tile Value         ( v16 )         |  // [304]
                     2.3 : Tile Layer         ( la3 )         |  // [304]
                                                              |  // [304]
                 With this information we can continue        |  // [304]
                 onward to rendering ONLY ONE TILE for        |  // [304]
                 the given fragment. This should give         |  // [304]
                 us a 21_TIMES( 21X )SPEEDUP.                 |  // [304]
                                                              |  // [304]
                 Because for each fragment there              |  // [304]
                 are 3-layer and 16 tiles... wait...          |  // [304]
                                                              |  // [304]
                 What can be on a fragment?                   |  // [304]
                                                              |  // [304]
                 ( 3 layers )                                 |  // [304]
                 ( 1 tile of the 16 possible values )         |  // [304]
                 ( 7 tile size exponents )                    |  // [304]
                                                              |  // [304]
                 3 * 1 * 7 === 21 tiles.                      |  // [304]
                                                              |  // [304]
                 Okay. Yep. 21_X_SPEEDUP                      |  // [304]
                            21_TIMES_SPEEDUP                  |  // [304]
                                                              |  // [304]
    :--------------------------: #_ABOUT_DATASEL_OCCLUDE_LOOP_#  // [304]
    #_DIAGRAM_U_I21_# :---------------------------------------+  // [304]
                                                              |  // [304]
        Instead of 2 nested loops, we can have on             |  // [304]
        loop that goes from[ 0 to (21-1) ]and maps            |  // [304]
        to the correct[ te7 && la3 ]pair.                     |  // [304]
                                                              |  // [304]
                               TAG[ #_DATASEL_OCCLUDE_LOOP_# ]|  // [304]
                                                              |  // [304]
            I21_FRONT_TO_BACK_LOOP:[ i21[ 0,1,2...19,20 ] ]:-+|  // [304]
                                                             ||  // [304]
                //:Replaces Doubly Nested Loop://            ||  // [304]
                u_te7 = d_i21_te7[ u_i21 ];                  ||  // [304]
                u_la3 = d_i21_te7[ u_i21 ];                  ||  // [304]
                u_lat = d_i21_lat[ u_i21 ];                  ||  // [308]
                               ^                             ||  // [308]
                  #_DIAGRAM_U_LAT_#                          ||  // [308]
                                        #_DIAGRAM_U_V16_#    ||  // [304]
                                #_DIAGRAM_U_LA3_#   VVV      ||  // [304]
                                            VVV     VVV      ||  // [304]
                IF[ visible_fada_tile ]===> la3:2 , t16:[0-15]|  // [304]
                IF[ visible_bomb_tile ]===> la3:1 , t16:[0-15]|  // [304]
                IF[ visible_geom_tile ]===> la3:0 , t16:[0-15]|  // [304]
                                                             ||  // [304]
                Exit on first visible tile type detected.    ||  // [304]
                OUTPUT[ u_la3 ]                              ||  // [304]
                OUTPUT[ u_v16 ]                              ||  // [304]
                OUTPUT[ u_te7 ]    < < < < #_DIAGRAM_U_TE7_# ||  // [304]
            :------------------------------------------------+|  // [304]
                                                              |  // [304]
    :---------------------------------------------------------+  // [304]
                                                                 // [304]
    @antirem_003@ : Anti-Remainder , 3 values. [ 0 | 1 | 2 ]     // [304]
                                                                 // [304]
    @fragopt@ : FRAGment_shader_OPTimizations                    // [304]

    @SHOWER_THOUGHT@ :----------------------------------------+  // [305]
                                                              |  // [305]
        Could use a 64x64 grid of values for 1 level to       |  // [305]
        keep a "depth mask". It has a value [0-to-(21-1)]     |  // [305]
        that tells you what the front-most tile is.           |  // [305]
                                                              |  // [305]
        9 levelpacks, 13 rooms each , 64x64 grid...           |  // [305]
        (3*3)*13*(64*64)===479232                             |  // [305]
        sqrt( 479232 ) ===( 692.whatever )                    |  // [305]
        Or ... 117 64x64 blocks of memory.                    |  // [305]
                                                              |  // [305]
        That is a lot more data for depth masks than          |  // [305]
        I thought. And even if we find the room for           |  // [305]
        the data, it is still kind of hard to pull off.       |  // [305]
    :---------------------------------------------------------+  // [305]
    @CURRENT_SUBSCRIBERS@ : 2022_09_27 : KANJICODER : 30         // [305]
    @CURRENT_SUBSCRIBERS@ : 2022_09_27 : NINJACODER : 03         // [305]
    @CURRENT_SUBSCRIBERS@ : 2022_09_27 :  WEEBCODER : 00         // [305]
                                                                 // [305]
    #_ROUGH_OCCLUSION_ALGO_# :--------------------------------+  // [305]
                                                              |  // [305]
        Rough occlusion algorithm, we don't need to know      |  // [305]
        exactly where fragment is on tile to determine        |  // [305]
        occlusion if tiles are 100% opaque everywhere.        |  // [305]
                                                              |  // [305]
        So we don't need to hand-calc all the different       |  // [305]
        tile coords from[ u_dun ]up front. We just            |  // [305]
        need to calculate the address of the SMALLEST         |  // [305]
        TILE ( c_du0 sized tile ), and then derived the       |  // [305]
        addresses of the other power of 2 tiles from          |  // [305]
        that.                                                 |  // [305]
                                                              |  // [305]
        [ 07 ] / 2 ===> [ 03 ] / 2 ===> [ _1_ ] / 2 ===> 000  |  // [305]
        [ 06 ] / 2 ===> [ 03 ] / 2 ===> [ _1_ ] / 2 ===> 000  |  // [305]
        [ 05 ] / 2 ===> [ 02 ] / 2 ===> [ _1_ ] / 2 ===> 000  |  // [305]
        [ 04 ] / 2 ===> [ 02 ] / 2 ===> [ _1_ ] / 2 ===> 000  |  // [305]
        [ 03 ] / 2 ===> [ 01 ] / 2 ===> [ _0_ ] / 2 ===> 000  |  // [305]
        [ 02 ] / 2 ===> [ 01 ] / 2 ===> [ _0_ ] / 2 ===> 000  |  // [305]
        [ 01 ] / 2 ===> [ 00 ] / 2 ===> [ _0_ ] / 2 ===> 000  |  // [305]
        [ 00 ] / 2 ===> [ 00 ] / 2 ===> [ _0_ ] / 2 ===> 000  |  // [305]
                                                              |  // [305]
        +---------------------------------------------------+ |  // [305]
        | [                      000                      ] | |  // [305]
        | +-----------------------+-----------------------+ | |  // [305]
        | | [        _0_        ] | [        _1_        ] | | |  // [305]
        | | +---------+---------+ | +---------+---------+ | | |  // [305]
        | | | [  0  ] | [  1  ] | | | [  2  ] | [  3  ] | | | |  // [305]
        | | | +--+--+ | +--+--+ | | | +--+--+ | +--+--+ | | | |  // [305]
        | | | |00|01| | |02|03| | | | |04|05| | |06|07| | | | |  // [305]
        | | | +--+--+ | +--+--+ | | | +--+--+ | +--+--+ | | | |  // [305]
        | | +---------+---------+ | +---------+---------+ | | |  // [305]
        | +-----------------------+-----------------------+ | |  // [305]
        +---------------------------------------------------+ |  // [305]
                                                              |  // [305]
    :---------------------------------------------------------+  // [305]
    #_DECAL_COORDS_CAN_BE_RE_USED_# :-------------------------+  // [305]
                                                              |  // [305]
        Decal coordinates can be used towards                 |  // [305]
        [_ROUGH_OCCLUSION_ALGO_]code. So if we are            |  // [305]
        going to usually stamp decals on tiles, then          |  // [305]
        we get some calculations for free.                    |  // [305]
                                                              |  // [305]
    :---------------------------------------------------------+  // [305]
    #_LEVELPACK_AND_LEVEL_# :---------------------------------+  // [305]
                                                              |  // [305]
        Calculate what levelpack and level you are in.        |  // [305]
                                                              |  // [305]
    :---------------------------------------------------------+  // [305]
                                                                 // [305]
    @u_ho3@ : HOtelcoord([X,Y]):[ 0 | 1 | 2 ]                    // [305]
    @u_ro5@ : ROom_coord([X,Y]):[ 0|1|2|3|4 ]                    // [305]
    @u_ro4@ : ROom_coord([X,Y]):[ 0|1|2|3|_ ]                    // [305]
                                                                 // [305]
    @MOD@ : Denoting a manual modulo calculation.                // [305]
                                                                 // [305]
    @R4X_O@ : R4X lookup table optimization error                // [305]
    @R4Y_O@ : R4Y lookup table optimization error                // [305]
                                                                 // [305]
    #_VOID_PLACEHOLDER_RED_# :--------------------------------+  // [305]
                                                              |  // [305]
        A temporary red-fill for where void-rooms are         |  // [305]
        until we add more sophisticated chaos-pattern         |  // [305]
        to the void areas.                                    |  // [305]
    :---------------------------------------------------------+  // [305]
    #_CODE_REUSE_CAUSES_COGNITIVE_OVERLOAD_# :----------------+  // [305]
                                                              |  // [305]
        A good example of when project gets                   |  // [305]
        big enough you start forgetting                       |  // [305]
        things you already did.                               |  // [305]
                                                              |  // [305]
        Which is why you don't want hyper                     |  // [305]
        granular code-re-use. You are liable                  |  // [305]
        not to remember all of those                          |  // [305]
        re-usable things if you decide to                     |  // [305]
        hyper fixate on making everything                     |  // [305]
        re-usable.                                            |  // [305]
                                                              |  // [305]
        LESS RE-usable things === MORE RE-use in PRACTICE     |  // [305]
        MORE RE-usable things === MORE RE-use in THEORY       |  // [305]
                                                              |  // [305]
        FACEBOOK_POST :--------------------------------------+|  // [305]
                                                             ||  // [305]
        Possibly inflammatory code thought for the day:      ||  // [305]
                                                             ||  // [305]
        Less re-usable functions == more re-use in practice. ||  // [305]
                                                             ||  // [305]
        More re-usable functions == more re-use in theory.   ||  // [305]
                                                             ||  // [305]
        Reason : Because when a code base gets really large  ||  // [305]
               : you forget about all of those "re-usable    ||  // [305]
               : pieces". So favor inlining code unless      ||  // [305]
               : it is code that is actually called          ||  // [305]
               : from 2 or more places.                      ||  // [305]
        :----------------------------------------------------+|  // [305]
                                                              |  // [305]
                                                              |  // [305]
    :---------------------------------------------------------+  // [305]   
    #_NON_OPTIMIZED_CASE_FIRST_# :----------------------------+  // [305]
        ----------------------------------------------------  |  // [305]
        Easier to read code if non-optimized case             |  // [305]
        comes first, an illustrative sudo-example:            |  // [305]
        ----------------------------------------------------  |  // [305]
            #if( SOME_OPTIMIZATION_DEFINE <= 0 )              |  // [305]
                                                              |  // [305]
                Easy To Read And Understand Code              |  // [305]
                                                              |  // [305]
            #endif                                            |  // [305]
            #if( SOME_OPTIMIZATION_DEFINE >= 1 )              |  // [305]
                                                              |  // [305]
                Hard To Read , Obtuse & Obfuscated            |  // [305]
                Code That __MIGHT__ Run Faster                |  // [305]
                                                              |  // [305]
            #endif                                            |  // [305]
        ----------------------------------------------------  |  // [305]
                                                              |  // [305]
    :---------------------------------------------------------+  // [305]
    #_MIME_CELL_LOOKUP_# :------------------------------------+  // [305]
                                                              |  // [305]
        TAG[ void-mapping | void_mapping | voidmapping ]      |  // [305]
        TAG[ VoidMimic | void-mimmic | void_mimmic     ]      |  // [305]
        TAG[ void mimmic | voidMime | void-mime | vmime]      |  // [305]
        TAG[ void mime | shadow self | shadow_self     ]      |  // [305]
        TAG[ shadow-rooms | shadow_rooms | shadowrooms ]      |  // [305]
        TAG[ the-upside-down | the_upside_down | t_u_d ]      |  // [305]
        TAG[ the upside down | the upside-down | T.U.D ]      |  // [305]
                                                              |  // [305]
        When in a void-room , adjacent or kitty-corner        |  // [305]
        non-void room will be used for data to seed           |  // [305]
        the pattern of[ c_du0 ]sized tiles in "THE_VOID".     |  // [305]
                                                              |  // [305]
          +-------------------+         +-------------------+ |  // [305]
          | +-   -+   +-   -+ | +--=--+ | +-   -+   +-   -+ | |  // [305]
          | :aaa:1:   :aaa:2: | |DDD:1| | :bbb:1:   :bbb:2: | |  // [305]
          | +-   -+   +-   -+ | +--=--+ | +-   -+   +-   -+ | |  // [305]
          |         +---------+         +---------+         | |  // [305]
          | +-   -+ | +--=--+   +--=--+   +--=--+ | +-   -+ | |  // [305]
          | :aaa:3: | |DDD:2|   |DDD:3|   |CCC:1| | :bbb:3: | |  // [305]
          | +-   -+ | +--=--+   +--=--+   +--=--+ | +-   -+ | |  // [305]
          +---------+                             +---------+ |  // [305]
            +--=--+   +--=--+   +--=--+   +--=--+   +--=--+   |  // [305]
            |BBB:1|   |BBB:2|   |     |   |CCC:2|   |CCC:3|   |  // [305]
            +--=--+   +--=--+   +--=--+   +--=--+   +--=--+   |  // [305]
          +---------+                             +---------+ |  // [305]
          | +-   -+ | +--=--+   +--=--+   +--=--+ | +-   -+ | |  // [305]
          | :ccc:1: | |BBB:3|   |AAA:1|   |AAA:2| | :ddd:1: | |  // [305]
          | +-   -+ | +--=--+   +--=--+   +--=--+ | +-   -+ | |  // [305]
          |         +---------+         +---------+         | |  // [305]
          | +-   -+   +-   -+ | +--=--+ | +-   -+   +-   -+ | |  // [305]
          | :ccc:2:   :ccc:3: | |AAA:3| | :ddd:2:   :ddd:3: | |  // [305]
          | +-   -+   +-   -+ | +--=--+ | +-   -+   +-   -+ | |  // [305]
          +-------------------+---------+-------------------+ |  // [305]
          ^                                                 ^ |  // [305]
          |                                                 | |  // [305]
          +------------------ #_VOIDMAP_# ------------------+ |  // [305]
                                                              |  // [305]
        The room in the dead center has no void-mapping.      |  // [305]
                                                              |  // [305]
                           TAG[ #_UPSIDE_DOWN_WORLD_LOOKUP_# ]|  // [312]
    :---------------------------------------------------------+  // [305]
    #_COLORIZED_RAMP_GRADIENT_ANIMATIONS_# :------------------+  // [305]
                                                              |  // [305]
        We have a "body color" and "edge color" for our       |  // [305]
        tile designs. We can use these two colors to          |  // [305]
        add a gradient ramp tint to our monochrome            |  // [305]
        tile designs in shader #7.                            |  // [305]
                                                              |  // [305]
    :---------------------------------------------------------+  // [305]
    #_DRAWING_INTO_THE_UPSIDE_DOWN_# :------------------------+  // [305]
                                                              |  // [305]
        We can use the[ _VOIDMAP_ ]to make setting tiles      |  // [305]
        in the void possible. It just teleports the tiles     |  // [305]
        into non-void section of "THE_DUM".                   |  // [305]
                                                              |  // [305]
        We can then use the void to render geometry           |  // [305]
        tiles from actual non-void rooms. But we              |  // [305]
        render those geometry tiles with a very               |  // [305]
        subtile black and white gradient ramp.                |  // [305]
                                                              |  // [305]
        We could modify the gradient ramp so it has           |  // [305]
        and "echo-location effect" done in black and white.   |  // [305]
                                                              |  // [305]
        Filter the gradient ramp so that the gradient         |  // [305]
        ramp is "black and white" , but a very thin           |  // [305]
        compressed gradient of white to make a moving         |  // [305]
        white echo-line.                                      |  // [305]
                                                              |  // [305]
        https://www.youtube.com/watch?v=_9hrb6z7Yl8           |  // [305]
                                                              |  // [305]
        Echo Palace :                                         |  // [305]
        https://www.youtube.com/watch?v=YJ2kCV8DM04           |  // [305]
                                                              |  // [305]
    :---------------------------------------------------------+  // [305]

    #_MOVEDSTUFF_VIDEO_306_# :--------------------------------+  // [306]
                                                              |  // [306]
        Refactoring some lookup tables into common            |  // [306]
        "lookup tables" file. Let's hope GLSL does            |  // [306]
        it's own optimizing-out of un-used lookup             |  // [306]
        tables, because we are accumulating a __LOT__.        |  // [306]
                                                              |  // [306]
    :---------------------------------------------------------+  // [306]
    #_REMOVED_IN_VIDEO_306_# :--------------------------------+  // [306]
                                                              |  // [306]
        We removed some duplicated lookup tables in           |  // [306]
        video #3_0_6 , because we are now using the           |  // [306]
        re-usable "shadlut" file in shader #5.                |  // [306]
    :---------------------------------------------------------+  // [306]
                                                                 // [306]
    @[MAR]@ : Moved_And_Refactored tag.                          // [306]
                                                                 // [306]
    @REMOVED_IN_VIDEO@ : Removed stuff implies it might          // [306]
                       : exist in another form somewhere         // [306]
                       : else.                                   // [306]
    @DELETED_IN_VIDEO@ : Completely obliterated something.       // [306]

    #_0X00_OLUT_COMPATIBILITY_# :-----------------------------+  // [307]
                                                              |  // [307]
        For this lookup table to be compatible with the       |  // [307]
        optimized lookup table, the @bogus_records@           |  // [307]
        need to be ZERO intead of 0xFFFFFFFF.                 |  // [307]
                                                              |  // [307]
        Because optimized lookup table can only               |  // [307]
        express values[ 0 || 1 || 2 || 3 ].                   |  // [307]
                                                              |  // [307]
    :---------------------------------------------------------+  // [307]
    @bogus_records@ : Entries in a lookup table that need        // [307]
                    : to be ignored. Nothing useful in them.     // [307]
                    : Using these values is                      // [307]
                    : "Undefined Behavior".                      // [307]
                                                                 // [307]
    #_VERIFY_BITPACKING_VIDEO_3_0_7_# :-----------------------+  // [307]
                                                              |  // [307]
        This is a lot of work just to add 4 numbers to        |  // [307]
        our code. But these are very specific numbers.        |  // [307]
                                                              |  // [307]
        25 specific bits in each... So, it looks like         |  // [307]
        only 4 numbers, but we are specifying                 |  // [307]
        100 data points. No wonder it's so much work.         |  // [307]
                                                              |  // [307]
                                                              |  // [307]
        We are using unsigned 32bit ints as lookup tables.    |  // [307]
    :---------------------------------------------------------+  // [307]
    #YOU_THINK_YOU_ARE_SO_SMART_USING_THOSE_BIG_WORDS# :------+  // [307]
                                                              |  // [307]
        Got distracted... So... One time I saw a              |  // [307]
        "Clash Of Clans" advertisement. Which is a            |  // [307]
        silly casual game. But the intro video showed         |  // [307]
        them building buildings in a time-lapse mode.         |  // [307]
                                                              |  // [307]
        And it gave me ideas for fully destructable           |  // [307]
        geometry.                                             |  // [307]
                                                              |  // [307]
        Like building levels by having a "scaffolding"        |  // [307]
        layer and then a "panelling" layer of auto            |  // [307]
        tiles.                                                |  // [307]
                                                              |  // [307]
        Then some guy accused me of lying with                |  // [307]
        "pinnochio" (long nose guy, disney) emojis.           |  // [307]
                                                              |  // [307]
        ( I asked in the comments if anyone had a link )      |  // [307]
        ( to the advertisement video on youtube,       )      |  // [307]
        ( because facebook videos are complete SHIT    )      |  // [307]
        ( and not useful as something to "hold onto"   )      |  // [307]
        ( for future reference.                        )      |  // [307]
                                                              |  // [307]
        When I supplied information to prove I wasn't         |  // [307]
        lying, he just disregarded this and said              |  // [307]
        "No one cares how smart you are".                     |  // [307]
                                                              |  // [307]
        I agree, he is correct. People don't care about       |  // [307]
        how smart you are, they care about what               |  // [307]
        you can deliver of value to them.                     |  // [307]
                                                              |  // [307]
        But still. Fuck that guy for calling me a liar,       |  // [307]
        and then acting like the conversation was about       |  // [307]
        anything other than that when I offered               |  // [307]
        evidence.                                             |  // [307]
                                                              |  // [307]
        I will find you, and I will punch you.                |  // [307]
                                                              |  // [307]
        -KanjiCoder     [2022_09_28]                          |  // [307]
                                                              |  // [307]
        P.S. Lookup tables are in "network-bit-order"         |  // [307]
                                                              |  // [307]
    :---------------------------------------------------------+  // [307]
    @VIDEO_IDEA@ : Show people how to make an optimized          // [307]
    @VIDIDEA@ :::: bitpacked lookup table in JavaScript.         // [307]
    @IDEA@ ::::::: Code a tool to make the process faster.       // [307]

    #_DIAGRAM_U_LAT_# :---------------------------------------+  // [308]
                                                              |  // [308]
        "LAT" the "Lateral Offset" required to get to         |  // [308]
        a certain layer of data, given a specific             |  // [308]
        tile size exponent( TE7 ).                            |  // [308]
                                                              |  // [308]
        __SMALLER__ @memory_chunks@ store __LARGER__ tiles.   |  // [308]
                                                              |  // [308]
            |<------------------- 128 ------------------->|   |  // [308]
        --- +---+-+---+-+---+-+---+ +---+-+---+-+---+-+---+   |  // [308]
         |  |                     | |                     |   |  // [308]
         |  |                     | |                     |   |  // [308]
         |  |                     | |                     |   |  // [308]
         |  |                     | |                     |   |  // [308]
         |  +         064 > > > > + +                     +   |  // [308]
         |  +         064         + +                     +   |  // [308]
         |  |          V          | |                     |   |  // [308]
         |  |          V          | |                     |   |  // [308]
         |  |          V          | |                     |   |  // [308]
         |  |          V          | |                     |   |  // [308]
        128 +---+-+---+ +---+-+---+ +---+-+---+ +---+-+---+   |  // [308]
         |  +---+-+---+-+---+-+---+ +---+-+---+ +---+-+---+   |  // [308]
         |  |                     | |         | |         |   |  // [308]
         |  |                     | |   032 ->| |         |   |  // [308]
         |  |                     | |   032   | |         |   |  // [308]
         |  |                     | |    V    | |         |   |  // [308]
         |  +                     + +---+-+---+ +---+-+---+   |  // [308]
         |  +                     + +---+-+---+ +---+ +---+   |  // [308]
         |  |                     | |         | |016| |   |   |  // [308]
         |  |                     | |         | +---+ +---+   |  // [308]
         |  |                     | |         | +---+ +---+   |  // [308]
         |  |                     | |         | |   | |...|   |  // [308]
        --- +---+-+---+ +---+-+---+ +---+-+---+ +---+ +---+   |  // [308]
                                                              |  // [308]
    :---------------------------------------------------------+  // [308]
    #_GET_LATERAL_MULTIPLIER_LMX_LMY_# :----------------------+  // [308]
                                                  | LMX==1  | |  // [308]
        +---+-+---+ +---+-+---+ > > > +---+-+---+ +---+-+---+ |  // [308]
        |         | |         | > > > |         | |         | |  // [308]
        |  LA3:0  | | LA3:1   | > > > |    0    | |    1    | |  // [308]
        |         | |         | > > > |         | |         | |  // [308]
        |         | |         | > > > |         | |         | |  // [308]
        +---+-+---+ +---+-+---+ > > > +---+-+---+ +---+-+---+ |  // [308]
        +---+-+---+ +---+ +---+ > > > +---+-+---+ +---+ +---+ |  // [308]
        |         | | 0 | | 1 | > > > |         | | 0 | | 1 | |  // [308]
        |  LA3:2  | +---+ +---+ > > > |    1    | +---+ +---+ |  // [308]
        |         | +---+ +---+ > > > |         | +---+ +---+ |  // [308]
        |         | | 2 | |...| > > > |         | | 1 | |...| |  // [308]
        +---+-+---+ +---+ +---+ > > > +---+-+---+ +---+ +---+ |  // [308]
                                      | LMY==1  |             |  // [308]
    :---------------------------------------------------------+  // [308]
    #_DIAGRAM_U_DIA_# :---------------------------------------+  // [308]
                                                              |  // [308]
        @u_dia@ : The diagonal offset to a given              |  // [308]
                : @tri_cluster@ of tile data.                 |  // [308]
                                                              |  // [308]
            |<------------------- 128 ------------------->|   |  // [308]
    DIA_000 +---+-+---+-+---+-+---+ +---+-+---+-+---+-+---+   |  // [308]
       |     \ \                  | |                     |   |  // [308]
       |       \ \                | |                     |   |  // [308]
       |         \ \              | |                     |   |  // [308]
       |           \ \            | |                     |   |  // [308]
       |             \ \          + +                     +   |  // [308]
       |               \ \        + +                     +   |  // [308]
       |                 \ \      | |                     |   |  // [308]
       |                   \ \    | |                     |   |  // [308]
       |                     \ \  | |                     |   |  // [308]
       |                       \ \| |                     |   |  // [308]
       |                          + +---+-+---+ +---+-+---+   |  // [308]
    DIA_064  > > > > > > > > > > >  +---+-+---+ +---+-+---+   |  // [308]
       |                              \       | |         |   |  // [308]
       |                                \     | |         |   |  // [308]
       |                                  \   | |         |   |  // [308]
       |                                    \ | |         |   |  // [308]
       |                                      + +---+-+---+   |  // [308]
    DIA_096  > > > > > > > > > > > > > > > > >  +---+ +---+   |  // [308]
       |                                          \ | |   |   |  // [308]
       |                                            + +---+   |  // [308]
    DIA_112  > > > > > > > > > > > > > > > > > > > >  +---+   |  // [308]
       |                                              |...|   |  // [308]
    DIA_ETC...                                        +---+   |  // [308]
                                                              |  // [308]
    +---------------------------------------------------------+  // [308]
    @tri_cluster@ : A chunk of data for all layers of tiles      // [308]
                  : of the same tile size.                       // [308]
    #TRI_CLUSTER# :-------------------------------------------+  // [---][308]
                                                              |  // [---][308]
                                                              |  // [---][308]
        +--------+--------+   < < <  One "tri-cluster".       |  // [---][308]
        |        |        |   < < <                           |  // [---][308]
        |  GEOM  |  BOMB  |   < < <  All tiles of this        |  // [---][308]
        |        |        |   < < <  [te7] size are of        |  // [---][308]
        +--------+--------+   < < <  the same exact size.     |  // [---][308]
        |        |            < < <                           |  // [---][308]
        |  FADA  |            < < <  @TRICLUST@               |  // [311][308]
        |        |            < < <  @TRICLUSTER@             |  // [311][308]
        +--------+            < < <  @TRICLUS@ < < <@FAVENAME@|  // [311][308]
                                      1234567                 |  // [311][308]
    +---------------------------------------------------------+  // [---][308]
                                                                 // [--------]
    @memory_chunks@ : Referring to a rectangular selection       // [---][308]
                    : of pixels used to encode binary data.      // [---][308]
                                                                 // [---][308]
    #U_LAT____U_64_RS_U_TE7#:---------------------------------+  // [---][308]
     u_lat =( u_64 >> u_te7 );                       @BITABLE@|  // [---][308]
                                             #BITABLE_TE7_LAT#|  // [309][308]
                DEC[ 64 ] ======= BIN[ 01000000 ]DEC[ 64 ]    |  // [---][308]
      i_te7:0        64 >> 0  === BIN[ 01000000 ]DEC[ 64 ]    |  // [---][308]
      i_te7:1        64 >> 1  === BIN[ 00100000 ]DEC[ 32 ]    |  // [---][308]
      i_te7:2        64 >> 2  === BIN[ 00010000 ]DEC[ 16 ]    |  // [---][308]
      i_te7:3        64 >> 3  === BIN[ 00001000 ]DEC[  8 ]    |  // [---][308]
      i_te7:4        64 >> 4  === BIN[ 00000100 ]DEC[  4 ]    |  // [---][308]
      i_te7:5        64 >> 5  === BIN[ 00000010 ]DEC[  2 ]    |  // [---][308]
      i_te7:6        64 >> 6  === BIN[ 00000001 ]DEC[  1 ]    |  // [---][308]
                                                              |  // [---][308]
    :---------------------------------------------------------+  // [---][308]
    @BITABLE_TE7_LAT@ : BitPackedLookupTable( te7 )===>( lat )   // [309]
                      : (SEE_ABOVE_DIAGRAM)^^^^^^^^^^^^^^^^^^^^  // [309]
                                                                 // [---]
    #U_DIA____0X7E_A___0X7E_LS___U_6_U_TE7#-------------------+  // [---][308]
     u_dia =( 0x7E & ( 0x7E << ( u_6-te7 )) );       @BITABLE@|  // [---][308]
                                             #BITABLE_TE7_DIA#|  // [309][308]
        0x7E == BIN[ 01111110 ]                               |  // [---][308]
                                                              |  // [---][308]
                 [ 0 1 1 1 1 1 1 0 <-- 0x7E , BINARY ]-------+|  // [---][308]
                 [     6 5 4 3 2 1 <-- Shifted_Index ]       ||  // [---][308]
        te7:0 ==>[ 1 0 0 0 0 0 0 0 << 6 ] > > 10000000  128  ||  // [---][308]
        te7:1 ==>[ 1 1 0 0 0 0 0 0 << 5 ] > > 11000000  192  ||  // [---][308]
        te7:2 ==>[ 1 1 1 0 0 0 0 0 << 4 ] > > 11100000  224  ||  // [---][308]
        te7:3 ==>[ 1 1 1 1 0 0 0 0 << 3 ] > > 11110000  240  ||  // [---][308]
        te7:4 ==>[ 1 1 1 1 1 0 0 0 << 2 ] > > 11111000  248  ||  // [---][308]
        te7:5 ==>[ 1 1 1 1 1 1 0 0 << 1 ] > > 11111100  252  ||  // [---][308]
        te7:6 ==>[ 0 1 1 1 1 1 1 0 << 0 ] > > 01111110  126  ||  // [---][308]
                   V V V V V V V V                   |       ||  // [---][308]
                   V V V V V V V V                   |  VVV  ||  // [---][308]
        THEN_MASK_WITH_ORIGINAL_NUMBER ( _ === 0 )   |  VVV  ||  // [---][308]
                   V V V V V V V V                   |  VVV  ||  // [---][308]
                   V V V V V V V V                   |       ||  // [---][308]
        te7:0 ==>[ _ 0 0 0 0 0 0 _ << 6 ]            |  000  ||  // [---][308]
        te7:1 ==>[ _ 1 0 0 0 0 0 _ << 5 ]            |  064  ||  // [---][308]
        te7:2 ==>[ _ 1 1 0 0 0 0 _ << 4 ]            |  096  ||  // [---][308]
        te7:3 ==>[ _ 1 1 1 0 0 0 _ << 3 ]            |  112  ||  // [---][308]
        te7:4 ==>[ _ 1 1 1 1 0 0 _ << 2 ]            |  120  ||  // [---][308]
        te7:5 ==>[ _ 1 1 1 1 1 0 _ << 1 ]            |  124  ||  // [---][308]
        te7:6 ==>[ _ 1 1 1 1 1 1 _ << 0 ]            |  126  ||  // [---][308]
                 |                |                  |       ||  // [---][308]
                 |                |                  |  VVV  ||  // [---][308]
                 +-+      +-------+                  |  VVV  ||  // [---][308]
                   |      |                          |  VVV  ||  // [---][308]
                   V      V                          |       ||  // [---][308]
                   _000000_ > > > 00000000 > > > > > >  000  ||  // [---][308]
                   _100000_ > > > 01000000 > > > > > >  064  ||  // [---][308]
                   _110000_ > > > 01100000 > > > > > >  096  ||  // [---][308]
                   _111000_ > > > 01110000 > > > > > >  112  ||  // [---][308]
                   _111100_ > > > 01111000 > > > > > >  120  ||  // [---][308]
                   _111110_ > > > 01111100 > > > > > >  124  ||  // [---][308]
                   _111111_ > > > 01111110 > > > > > >  126  ||  // [---][308]
    +--------------------------------------------------------++  // [---][308]
    @BITABLE_TE7_DIA@ : BitPackedLookupTable( te7 )===>( dia )   // [309]
                      : (SEE_ABOVE_DIAGRAM)^^^^^^^^^^^^^^^^^^^^  // [309]
                                                                 // [308]
    #_EXTRACT_TILE_VALUE_3_0_9_# :----------------------------+  // [308]
                                                              |  // [308]
        We made this section in video #3_0_8 , but            |  // [308]
        we are not going to add this code until               |  // [308]
        video #3_0_9 , because as I work backwards            |  // [308]
        I realize this is too much code for 1 video.          |  // [308]
    +---------------------------------------------------------+  // [308]
                                                                 // [308]
    @BITABLE@ : "Bit Table" A bit packed lookup table.           // [308]
     1234567                                                     // [308]
                                                                 // [308]
    @BITTABLE@ : YOU_MEAN[ BITABLE ]                             // [308]
    @BITAB@ :::: YOU_MEAN[ BITABLE ]                             // [308]
    @BITLUT@ ::: YOU_MEAN[ BITABLE ]                             // [308]
                                                                 // [---]
    #_ERROR_CHECK_TABLES_# :----------------------------------+  // [309]
                                                              |  // [309]
        These tables are straight-forward , but error         |  // [309]
        checking can still be good to give us sanity          |  // [309]
        of mind. Also you never know what fuckup you          |  // [309]
        might make in the future to accidentially alter       |  // [309]
        pre-existing code into an erroneous state.            |  // [309]
                                                              |  // [309]
        It is human to fuck it all up by accident.            |  // [309]
    +---------------------------------------------------------+  // [309]
    @FLUFFY_LOOKUP_TABLES@ : Opposite Of BitPacked L.U.T.        // [309]
    @L.U.T.@ : Abbreviation For "Lookup Table"                   // [309]

    #_PLANCK_UNITS_IN_TILE_# :--------------------------------+  // [310]
                                                              |  // [310]
        When I say "Discrete Units" what I really mean is     |  // [310]
        the number of "digital planck units" in my            |  // [310]
        renderer. I've sub-divided the renderable address     |  // [310]
        space into a finite number of units. I call this      |  // [310]
        space... "THE_DUM"...                                 |  // [310]
                                                              |  // [310]
        Were you expecting something edgy and epic?           |  // [310]
                                                              |  // [310]
        Nope... "DUM SPACE" , ... "The Final Frontier?"       |  // [310]
                                                              |  // [310]
    +---------------------------------------------------------+  // [310]
                                                                 // [310]
    @u_dut@ : USE[ u_dun ]FOR[ discrete units in current tile ]  // [310]
    @dut@ ::: USE[ u_dun ]FOR[ discrete_units_in_current_tile ]  // [310]
                                                                 // [310]
    @D_U_I_T@ : Discrete_Units_In_Tile                           // [310]
                                                                 // [310]
    #_THE_FLOOR_IS_RUINED_# :---------------------------------+  // [310]
                                                              |  // [310]
        I think the reason we got stuck with "dun" meaning    |  // [310]
        "discrete units in a tile" is because the lookup      |  // [310]
        table [ d _ ( te7 )===>( dun ) ]has the implication   |  // [310]
        that the "DiscreteUnits" comming out of that lookup   |  // [310]
        table are the discrete units in a tile.               |  // [310]
                                                              |  // [310]
        Is this a bad design choice?                          |  // [310]
                                                              |  // [310]
        A worse design choice than being WEIRD                |  // [310]
        is being INCONSISTENT. So just fucking                |  // [310]
        stick with "dun" to mean                              |  // [310]
        "discrete units in the current tile size"             |  // [310]
                                                              |  // [310]
        The Floor Is Ruined === Reference To Tiles.           |  // [310]
                                                              |  // [310]
        Because I can be psychotic if I want.                 |  // [310]
                                                              |  // [310]
        Psychosis == Waking Dream State                       |  // [310]
        Psychosis != Stabby Stabby                            |  // [310]
                                                              |  // [310]
    +---------------------------------------------------------+  // [310]
                                                                 // [---]
    #_BREAK_ON_VISIBLE_# :------------------------------------+  // [311]
                                                              |  // [311]
        TAG[ _EXIT_IF_VISIBLE_TILE_FOUND_ ]                   |  // [311]
                                                              |  // [311]
        Break when first visible tile is found. The           |  // [311]
        current code as written is extremely niave and        |  // [311]
        meant to be polished up and made more sophisticated   |  // [311]
        once we get some __CORRECT_LOOKING_VISUAL_FEEDBACK__. |  // [311]
                                                              |  // [311]
        Don't want to build on top of the Niave logic         |  // [311]
        until we have a "sanity check" that we've done        |  // [311]
        all the other code correctly.                         |  // [311]
    +---------------------------------------------------------+  // [311]
    @u_lmc@ : Uint32 - Level_Map_Coord(AKA:LocalMapCoord)        // [311]
                                                                 // [311]
    @TEXELFETCH@ : Sample from texture using discreet coord.     // [311]
    @FAVENAME@ ::: A "Favorite Name" (term for something)        // [311]
    @TRICLUS@  ::: Cluster of GEOM+BOMB+FADA of same te7 size    // [311]
    @u_bintile@ :: BINary_TILE (all tile data packed into U32)   // [311]
      @bintile@ :: Same_As[ u_bintile ]^^^^^^^^^^^^^^^^^^^^^^^   // [311]
    @FV4_GREYMAT@ : A placeholder color for ANY TILE TYPE.       // [311]
                                                                 // [311]
    #_GREY_MATTER_GREY_# :------------------------------------+  // [311]
                                                              |  // [311]
        A red tinted grey that is a placeholder for any       |  // [311]
        type of tile. When working up shader code ,           |  // [311]
        we need confirmation that we can tell where           |  // [311]
        a tile _IS_ and where a tile _IS_NOT_ .               |  // [311]
                                                              |  // [311]
        This color will be used for                           |  // [311]
        that step of the process.                             |  // [311]
    +---------------------------------------------------------+  // [311]

    @OCCULUS_BREAK@ : Breaking out of occlusion data selection   // [312]
                    : loop. Loop that selects data to render     // [312]
                    : ahead of time in order to optimize how     // [312]
                    : occlusion of geometry is done in render.   // [312]
                                                                 // [312]
    @_A_RETURN_WAS_HERE_@ : A return statement was here ,        // [312]
    @_ITIS___GONE___NOW_@ : that return statement is now gone.   // [312]
                          : Yes, it is a silent hill reference.  // [312]
                                                                 // [312]
    @_BROKEN_DREAMS_AND_@ : Instead of a "return" statement      // [312]
    @_SHATTEREDMEMORIES_@ : we are using a "break" statement     // [312]
    @______REMAIN_______@ : to early exit from the loop.         // [312]
                                                                 // [312]
    @_DEF_NOT_BLACK_@: Default color is __NOT__ black.           // [312]
    @_D_I_E_T_S_@ :::: Default_Is_Empty_Tile_Space( color )      // [312]
                                                                 // [312]
    @NONVOID@ : Non-void space. NOT part of "the void".          // [312]
                                                                 // [312]
    #_RENDER_SFMT_AFTER_GRANDMAS_# :--------------------------+  // [---][312]
                                                              |  // [---][312]
        NOTE: Split into DEBU (debug)   < < < < < < < < < < < |  // [315]
            : and PROD (production)     < < < < < < < < < < < |  // [315]
            : sections in video #3_1_5  < < < < < < < < < < < |  // [315]
                                                              |  // [---][312]
        Render the "SFMT" after we get back from grandma's.   |  // [---][312]
        Gramps is filling the house with dangerous "o-zone"   |  // [---][312]
        to get rid of all the smell from decades of smoking   |  // [---][312]
        cigarettes and cigars.                                |  // [---][312]
                                                              |  // [---][312]
    +---------------------------------------------------------+  // [---][312]
    @SFMT@ : Selected_Front_Most_Tile                            // [312]
                                                                 // [312]
    //:#_ATOMIC_ALICE_COLOR_PALLET_# :------------------------+  // [313]
    //:#_AACP_SUB_SELECTION_# :-------------------------------+  // [313]
                                                              |  // [313]
        AACP_SUB_SECTION : Atomic ALice Color Pallet          |  // [313]
                         : sub-selection.                     |  // [313]
                                                              |  // [313]
        Selecting evenly spaced clusters of 5 colors that     |  // [313]
        are all mixes of at least 2 color channels.           |  // [313]
                                                              |  // [313]
        _.add( 1, 0xFF0000, "R", "RED"             );         |  // [313]
        _.add( 2, 0xFF4400, "N", "NINJA_RED"       ); _001_   |  // [313]
        _.add( 3, 0xFF8800, "O", "ORANGE"          ); _002_   |  // [313]
        _.add( 4, 0xFFC300, "X", "AMBER"           ); _003_   |  // [313]
        _.add( 5, 0xFFFF00, "Y", "YELLOW"          ); _004_   |  // [313]
        _.add( 6, 0xC3FF00, "E", "ELECTRIC_LIME"   ); _005_   |  // [313]
        _.add( 7, 0x88FF00, "L", "LIME"            );         |  // [313]
        _.add( 8, 0x44FF00, "Q", "HARLEQUIN"       );         |  // [313]
        _.add( 9, 0x00FF00, "G", "GREEN"           );         |  // [313]
        _.add(10, 0x00FF44, "Z", "ZOISITE"         ); _006_   |  // [313]
        _.add(11, 0x00FF88, "T", "TEAL"            ); _007_   |  // [313]
        _.add(12, 0x00FFC3, "V", "VAPOR"           ); _008_   |  // [313]
        _.add(13, 0x00FFFF, "C", "CYAN"            ); _009_   |  // [313]
        _.add(14, 0x00C3FF, "W", "WATER"           ); _010_   |  // [313]
        _.add(15, 0x0088FF, "S", "SKY"             );         |  // [313]
        _.add(16, 0x0044FF, "A", "ARGON"           );         |  // [313]
        _.add(17, 0x0000FF, "B", "BLUE"            );         |  // [313]
        _.add(18, 0x4400FF, "H", "HAN_PURPLE"      ); _011_   |  // [313]
        _.add(19, 0x8800FF, "I", "INDIGO"          ); _012_   |  // [313]
        _.add(20, 0xC300FF, "P", "PURPLE_LIGHTNING"); _013_   |  // [313]
        _.add(21, 0xFF00FF, "M", "MAGENTA"         ); _014_   |  // [313]
        _.add(22, 0xFF00C3, "U", "UBER_MAGENTA"    ); _015_   |  // [313]
        _.add(23, 0xFF0088, "F", "FUCHSIA"         );         |  // [313]
        _.add(24, 0xFF0044, "D", "DAGGER_RED"      );         |  // [313]
        _.add( 0, 0x111111, "K", "BLACK"           ); BLACK   |  // [313]
                                                              |  // [313]
    :---------------------------------------------------------+  // [313]
    :---------------------------------------------------------+  // [313]
    #_V16_DEBUG_COLOR_PALLET_# :------------------------------+  // [313]
                                                              |  // [313]
        A debug color pallet for colorizing tiles based       |  // [313]
        on their V16 value and __NOT__ paying attention       |  // [313]
        to which layer or tile size they are. A simplified    |  // [313]
        coloring system just so we have somethihng to use.    |  // [313]
                                                              |  // [313]
        The values below may have changed, but this is        |  // [313]
        what I initially went with on [2022_10_03].           |  // [313]
                                                              |  // [313]
        d_v16_hex_000 =( 0x111111 );  //: "BLACK"        ://  |  // [313]
                                                         ://  |  // [313]
        d_v16_hex_001 =( 0xFF4400 );  //: "NINJA_RED"    ://  |  // [313]
        d_v16_hex_002 =( 0xFF8800 );  //: "ORANGE"       ://  |  // [313]
        d_v16_hex_003 =( 0xFFC300 );  //: "AMBER"        ://  |  // [313]
        d_v16_hex_004 =( 0xFFFF00 );  //: "YELLOW"       ://  |  // [313]
        d_v16_hex_005 =( 0xC3FF00 );  //: "ELECTRIC_LIME"://  |  // [313]
                                      //:                ://  |  // [313]
        d_v16_hex_006 =( 0x00FF44 );  //: "ZOISITE"      ://  |  // [313]
        d_v16_hex_007 =( 0x00FF88 );  //: "TEAL"         ://  |  // [313]
        d_v16_hex_008 =( 0x00FFC3 );  //: "VAPOR"        ://  |  // [313]
        d_v16_hex_009 =( 0x00FFFF );  //: "CYAN"         ://  |  // [313]
        d_v16_hex_010 =( 0x00C3FF );  //: "WATER"        ://  |  // [313]
                                      //:                ://  |  // [313]
        d_v16_hex_011 =( 0x4400FF );  //: "HAN_PURPLE"   ://  |  // [313]
        d_v16_hex_012 =( 0x8800FF );  //: "INDIGO"       ://  |  // [313]
        d_v16_hex_013 =( 0xC300FF );  //: "P_LIGHT"      ://  |  // [313]
        d_v16_hex_014 =( 0xFF00FF );  //: "MAGENTA"      ://  |  // [313]
        d_v16_hex_015 =( 0xFF00C3 );  //: "UBER_MAGENTA" ://  |  // [313]
                                                              |  // [313]
        @P_LIGHT@ : Purple_Lightning                          |  // [313]
    +---------------------------------------------------------+  // [313]
                                                                 // [313]
    @DFC@ : Dont_Fucking_Care , meaning the value is pretty      // [313]
          : arbitrary and the exact reasoning                    // [313]
          : ( read : cause and effect chain ) for why the        // [313]
          : value is what it is doesn't matter that much.        // [313]
          : So, don't think too hard about it.                   // [313]
                                                                 // [313]
    #_TINT_BY_LAYER_# :---------------------------------------+  // [313]
                                                              |  // [313]
        Darken or lighten tile colors based on which          |  // [313]
        layer you are on. This is going to help confirm       |  // [313]
        we are looking at what we think we are looking        |  // [313]
        at as we develop shader #7.                           |  // [313]
                                                              |  // [313]
    +---------------------------------------------------------+  // [313]
                                                                 // [---]
    @RBS@ : Randomize_Brush_Size                                 // [314]
    @_RANDOM_BRUSH_@ : Randomize Brush Values.                   // [314]
    #_RANDOM_BRUSH_# :----------------------------------------+  // [314]
                                                              |  // [314]
        Randomize the "TileValue"(v16) , "TileLayer"(la3)     |  // [314]
        and "TileSize"(te7) used in our editor.               |  // [314]
                                                              |  // [314]
        To make things more interesting, the randomization    |  // [314]
        should use the same values a few times in a row       |  // [314]
        before randomizing again. That way we can see         |  // [314]
        the effects of auto-tiling. Tiles of different types  |  // [314]
        and sizes and layers do __NOT__ auto tile with        |  // [314]
        each other. So if we "roll the dice" every time we    |  // [314]
        set a tile, we won't be able to observe auto tiling.  |  // [314]
                                                              |  // [314]
        I come to this realization after having implemented   |  // [314]
        this feature for[ HOTEL13.JS ]MONTHS ago.             |  // [314]
    +---------------------------------------------------------+  // [314]
    #_RANDOMIZING_BRUSH_# :-----------------------------------+  // [314]
                                                              |  // [314]
        Unlike HOTEL13.JS , we are randomizing                |  // [314]
        "al-la-carte" ( Allah-Cart ). Rather than having      |  // [314]
        __ONE__ "randomize brush" setting we can turn         |  // [314]
        on or off.                                            |  // [314]
    +---------------------------------------------------------+  // [314]
    @tot_cod@ : TOTal_ClickOrDrag counter/times.                 // [314]
    #_SAME_IN_ROW_# :-----------------------------------------+  // [314]
                                                              |  // [314]
        Number of "same in row" to set down before the        |  // [314]
        next randomization of brush values.                   |  // [314]
    +---------------------------------------------------------+  // [314]
    #_RANDOM_INTEGER_# :--------------------------------------+  // [314]
                                                              |  // [314]
        Random integer function stolen from HOTEL13.JS.       |  // [314]
    +---------------------------------------------------------+  // [314]
    #_CRAGSIM_# :---------------------------------------------+  // [314]
                                                              |  // [314]
        @CRAGSIM@ Is the name I think I want to use for       |  // [314]
        the code that has to "Simulate" cracking of larger    |  // [314]
        tiles into smaller tiles when a tiny bomb knotches    |  // [314]
        it's explosion into a larger tile.                    |  // [314]
                                                              |  // [314]
        Just "random" thought I want to put down before       |  // [314]
        I forget. Named after "Nickelodeon's GUTS" show       |  // [314]
        that has the volcano called "The Crag".               |  // [314]
    +---------------------------------------------------------+  // [314]
    #ATF_RANDINT# :-------------------------------------------+  // [314]
                                                              |  // [314]
    @ATF_RANDINT@ : RANDINT returns a random integer          |  // [314]
                  : between 0 and the inclusive upper         |  // [314]
                  : bound provided.                           |  // [314]
    +---------------------------------------------------------+  // [314]
    @RISV@ : Random_Integer_Skip_Value                           // [314]
    @RIS@  : Random_Integer_Skip (FUNCTION POINTER)              // [314]
    #_KEEP_IT_ON_UNTIL_WE_UNFUCK_OUR_SUB_TEXTURE_PUSH_# :-----+  // [314]
                                                              |  // [314]
        [ d_gpudata_fum ]Is in-efficient and wasteful, but    |  // [314]
        the bug in our Sub-Texture-Push code still exists,    |  // [314]
        and the effects are even WEIRDER now that we are      |  // [314]
        randomizing the tile layer to draw on.                |  // [314]
                                                              |  // [314]
        We can turn this _OFF_ when we are ready to hunt      |  // [314]
        for the bug. I still think the bug is not knowing     |  // [314]
        the correct way to call the WebGL SubTexturePush      |  // [314]
        command. DATE[ 2022_10_03 ]                           |  // [314]
                                                              |  // [314]
        @GPU_ABUSE@                                           |  // [314]
                                                              |  // [314]
    +---------------------------------------------------------+  // [314]
                                                                 // [314]
    @GPU_ABUSE@ : Tagging something that is abusing our GPU.     // [314]
    :           : The implication is that this ABUSE is          // [314]
    :           : temporary and we want to eventually get        // [314]
    :           : rid of, or fix, the code abusing the GPU.      // [314]
    :           :                                                // [314]
    :           : OR... In the case of[ d _ gpudata _ fum ],     // [314]
    :           : [ GPU ABUSE ]is a warning telling me the       // [314]
    :           : option should probably be _OFF_ in             // [314]
    :-----------: production.                                    // [314]

    #_RENDER_SFMT:DEBU_# :------------------------------------+  // [315]
                                                              |  // [315]
        Render[ Selected_Front_Most_Tile ]DEBUG               |  // [315]
    +---------------------------------------------------------+  // [315]
    #_RENDER_SFMT:PROD_# :------------------------------------+  // [315]
                                                              |  // [315]
        Render[ Selected_Front_Most_Tile ]PRODUCTION          |  // [315]
    +---------------------------------------------------------+  // [315]
    #_V16_TO_MASTER_MEMORY_GRAPHIC_CELL_# :-------------------+  // [315]
                                                              |  // [315]
        Currently this mapping is specific to only            |  // [315]
        "Shader Number Seven(7)" , but I anticipate using     |  // [315]
        it in shader eight(8) in the future as well.          |  // [315]
                                                              |  // [315]
        Unless shader 7 ends up being the last shader         |  // [315]
        I write for a while. It might be, as it should        |  // [315]
        be enough to get my level designer ( Josh/Joshicus )  |  // [315]
        able to make some content.                            |  // [315]
                                                              |  // [315]
        WHAT THE FUCK IS THE NAME OF THIS LOOKUP TABLE?       |  // [315]
        .... Looking ....                                     |  // [315]
                                                              |  // [315]
        [ d_v48_mmi ]< < < < < THIS FUCKING TABLE!!!!!!!!!!!! |  // [315]
                                                              |  // [315]
    +---------------------------------------------------------+  // [315]
    #_V16_TO_MASTER_MEMORY_GRAPHIC_CELL_# :-------------------+  // [315]
                                                              |  // [315]
        Lookup table that tells us where to get the           |  // [315]
        mono-chrome fractal geometry for the tile             |  // [315]
        value we are rendering. Need to supply                |  // [315]
        ( tile value )&&( tile layer )===>( v48 )             |  // [315]
                                                              |  // [315]
        Oops. I already explained this.                       |  // [315]
                                                              |  // [315]
    +---------------------------------------------------------+  // [315]
    #_SHADER_7_GRAPHICS_LOOKUP_# :----------------------------+  // [315]
                                                              |  // [315]
        Once we are out of the occlusion pre-testing loop     |  // [315]
        and have the tile we want to render, we need to       |  // [315]
        figure out where it's graphical data is stored.       |  // [315]
                                                              |  // [315]
        The first step is narrowing down which master         |  // [315]
        memory cell index ( mmi ) the data is stored in.      |  // [315]
                                                              |  // [315]
        The lookup table in this section will do that         |  // [315]
        for us.                                               |  // [315]
    +---------------------------------------------------------+  // [315]
    #_V48_MMI_LUT_ERROR_CHECK_# :-----------------------------+  // [315]
                                                              |  // [315]
        Error Checks [ d _ v48 _ mmi ] and also serves        |  // [315]
        as an example of HOW to use this lookup table.        |  // [315]
                                                              |  // [315]
        v48 ==( (la3*16) + (v16+0) );                         |  // [315]
                                                              |  // [315]
    +---------------------------------------------------------+  // [315]
    #_RENDERER_7_MEMORY_CELL_BLOCKS_# :-----------------------+  // [315]
                                                              |  // [315]
        I was looking for the first master memory cell        |  // [315]
        storing graphics data... I thought it started         |  // [315]
        with "c_artgola" but I guess it doesn't ?             |  // [315]
                                                              |  // [315]
        Am I going crazy?                                     |  // [315]
                                                              |  // [315]
    +---------------------------------------------------------+  // [315]
    #_LETS_NOT_DO_THESE_ALIASES_# :---------------------------+  // [315]
                                                              |  // [315]
        I was going to use these as shorthand versions of     |  // [315]
        the lookup tables they are now monkey wrench macros.  |  // [315]
                                                              |  // [315]
        TERSE CODE is nice. But ALIASED GLOBAL VARIABLES      |  // [315]
        is VERY BAD. Makes it harder to search for uses       |  // [315]
        of something if we refer to it by two different       |  // [315]
        names in the global scope.                            |  // [315]
                                                              |  // [315]
        Temporary reference macros are fine. Just not         |  // [315]
        global aliases for same data.                         |  // [315]
    +---------------------------------------------------------+  // [315]
    #_MONOCHROME_CELL_# :-------------------------------------+  // [315]
                                                              |  // [315]
        |<----- d_pix2048 ----->|    |<-------- 512 -------->||  // [315]
        +-----+-----+-----+-----+    +-----=-----+-----=-----+|  // [315]
        | _0_ | _1_ | _2_ | _3_ |    |           |           ||  // [315]
        +-----+-----+-----+-----+    |  4==RGBA  |  4==RGBA  ||  // [315]
        | _4_ | _5_ | _6_ | _7_ |    |           |           ||  // [315]
        +-----+-----+-----+-----+    +-----=-----+-----=-----+|  // [315]
        | _8_ | _9_ | _A_ | _B_ |    |           |            |  // [315]
        +-----+-----+-----+-----+    |  4==RGBA  | ...MIP...  |  // [315]
        | _C_ | _D_ | _E_ | _F_ |    |           | ...MAP...  |  // [315]
        +-----+-----+-----+-----+    +-----=-----+ ...LEV...  |  // [315]
        VVVVVVVVVVVVVVVVVVVVVVVVV    |                        |  // [315]
        +-----+-----+-----+-----+    V                        |  // [315]
        | _C_ | _D_ | _E_ | _F_ | <- 48 monochrome tile       |  // [315]
        +-----+-----+-----+-----+    graphics.                |  // [315]
          VVV   VVV   VVV   VVV      ^^                       |  // [315]
          012 + 012 + 012 + 012 ===> 48                       |  // [315]
                                                              |  // [315]
        We don't have much space for high-resolution          |  // [315]
        graphics, so make them monochrome. This is also       |  // [315]
        nice because we plan on using monochrome graphics     |  // [315]
        for KyootBotHentaiMaker. AKA : Code can be re-used.   |  // [315]
    :---------------------------------------------------------+  // [315]

    #_WHAT_THE_FUCKING_HELL_# :-------------------------------+  // [316]
                                                              |  // [316]
        At the beginning of this delta                        |  // [316]
        ( so video #3_1_5's code ) , shader six(#6) is        |  // [316]
        SLOW_AS_FUCK. Slower than usual. Utilizing 100%       |  // [316]
        of CPU on firefox and chrome...                       |  // [316]
                                                              |  // [316]
        I don't recall changing ANYTHING on this shader       |  // [316]
        since we started work on shader seven(#7)...          |  // [316]
                                                              |  // [316]
        Making note of this in case we need to look for       |  // [316]
        something I did, or if all is needed is a reset       |  // [316]
        of computer because graphics card is being            |  // [316]
        really fucking stupid right now.                      |  // [316]
                                                              |  // [316]
        TAG[ GPU_PROBLEMS | GPU_PROBLEM | GPU_FUCKERY ]       |  // [316]
        TAG[ MAYBE_I_SHOULD_RE_WRITE_IT_IN_C99 ]              |  // [316]
        TAG[ WHAT_THE_HELL | WHAT_THE_FUCKING_HELL ]          |  // [316]
        TAG[ FUCKING_HELL | SERVER_JS_TO_C99_SOUNDS_GOOD_NOW ]|  // [316]
                                                              |  // [316]
        So I think... The reason is we never used             |  // [316]
        [ "force update mode" / FUM / F.U.M. ]in              |  // [316]
        conjunction with shader #6 before. And the fact       |  // [316]
        that the shader is expensive combined with the        |  // [316]
        fact that texture pushing 2048_x_2048 pixels          |  // [316]
        every frame is not good on GPU-bandwidth pushed       |  // [316]
        it over the edge.                                     |  // [316]
                                                              |  // [316]
    :---------------------------------------------------------+  // [316]
    #_FURTHER_TEXTURE_PUSH_OPTIMIZATION_# :-------------------+  // [316]
                                                              |  // [316]
        Once the bug is removed from our texture push,        |  // [316]
        we could only push the dirty rectangles that are      |  // [316]
        visible on-screen. Why push up parts of texture       |  // [316]
        to GPU if those tiles can't even be seen?             |  // [316]
                                                              |  // [316]
        TAG[ visible push optimization | visible push ]       |  // [316]
        TAG[ visible_push_optimization | visible_push ]       |  // [316]
        TAG[ visiblepushoptimization   | visiblepush  ]       |  // [316]
                                                              |  // [316]
    +---------------------------------------------------------+  // [316]

    @8_BITS@ : This number is exactly 8 bits in capacity.        // [317]
    @u_gmc@  : Uint32 - Global_Map_Coord ( Global u_lmc  )       // [317]
    @u_lmc@  : Uint32 - Local__Map_Coord ( Local / Level )       // [317]
    @u_hor@  : Uint32 - Horizontal Offset By 1                   // [317]
    @u_ver@  : Uint32 - Vertical   Offset By 1                   // [317]
                                                                 // [317]
    #_TOUCHING_VALUE_# :--------------------------------------+  // [317]
                                                              |  // [317]
                    #_GET_TO4_TOP_#                           |  // [317]
                                 |                            |  // [317]
                            +----=----+                       |  // [317]
                            |         |                       |  // [317]
                            |  -u_ver |                       |  // [317]
        #_GET_TO4_LEF_#     |         |     #_GET_TO4_RIG_#   |  // [317]
                     |      +----=----+      |                |  // [317]
                +----=----+ +----=----+ +----=----+           |  // [317]
                |         | |         | |         |           |  // [317]
                |  -u_hor | |  u_gmc  | | +u_hor  |           |  // [317]
                |         | |         | |         |           |  // [317]
                +----=----+ +----=----+ +----=----+           |  // [317]
                            +----=----+                       |  // [317]
                            |         |                       |  // [317]
                            |  +u_ver |                       |  // [317]
                            |         |                       |  // [317]
                            +----=----+                       |  // [317]
                                 |                            |  // [317]
                    #_GET_TO4_BOT_#                           |  // [317]
                                                              |  // [317]
    :---------------------------------------------------------+  // [317]
    #_USE_AM4_ONN_# :-----------------------------------------+  // [317]
                                                              |  // [317]
        Meaning that the "Auto_Tile_Method_4_Bits" setting    |  // [317]
        is hardcoded to be _ON_ and it cannot be turned       |  // [317]
        off in the current shader.                            |  // [317]
                                                              |  // [317]
    :---------------------------------------------------------+  // [317]
    #_NEVER_TOUCH_KITTY_CORNERS_# :---------------------------+  // [317]
                                                              |  // [317]
        Okay. Maybe never. Because you never know what        |  // [317]
        will happen in the future. But we should build        |  // [317]
        up the graphics by adding lots of simple easy         |  // [317]
        rules that don't require too much                     |  // [317]
        [ CPU_WORK ]or[ ART_WORK ].                           |  // [317]
                                                              |  // [317]
        @CPU_WORK@ : Work Done By CPU                         |  // [317]
        @ART_WORK@ : Work Done By ARTIST                      |  // [317]
                                                              |  // [317]
        More Art_Work , also means we need more data to       |  // [317]
        store it, so be efficient and try to get the most     |  // [317]
        bang for your buck with what you have.                |  // [317]
    +---------------------------------------------------------+  // [317]
    #c_vff_latches_hor# :-------------------------------------+  // [317]
    #c_vff_latches_ver# :-------------------------------------+  // [317]
                                                              |  // [317]
                        TAG[ #_VFF_AM4_HORLATCH_COINCIDENCE_# ]  // [317]
                        TAG[ #_VFF_AM4_VERLATCH_COINCIDENCE_# ]  // [317]
                                                              |  // [317]
        Bitmasks to use with[ u_vff ]to see if tile can       |  // [317]
        latch with its horizontal or vertical neighbors.      |  // [317]
                                                              |  // [317]
        Inspects the AM4 latching bits to accomplish this.    |  // [317]
                                                              |  // [317]
                               | l l m m |                    |  // [317]
                               | x y x y |                    |  // [317]
        u_vff ==  BIN[ 1 1 1 1 | 1 1 1 1 ]  <--------+        |  // [317]
                     |<- v16 ->|<- am4 ->|  <--------+        |  // [317]
                                                     |        |  // [317]
        Because the "am4" section is already    #_AM4_VFF_#   |  // [317]
        in the least_significant_nibble :       #_VFF_AM4_#   |  // [317]
                                                     |        |  // [317]
            c_vff_latches_hor === c_am4_0lx <--------+        |  // [317]
            c_vff_latches_ver === c_am4_1ly <--------+        |  // [317]
                                                              |  // [317]
    :---------------------------------------------------------+  // [317]
    :---------------------------------------------------------+  // [317]
    #_FUCK_YOU_MORTIMER_ADLER_# :-----------------------------+  // [317]
                                                              |  // [317]
        Why fuck this guy? Well... If I can tell the          |  // [317]
        machine how to render tiles, I obviously understand   |  // [317]
        the problem in excrutiating detail. Okay...           |  // [317]
        Maybe not "fuck this guy"... Depends on if            |  // [317]
        "express" includes "able to express it to a computer" |  // [317]
        but "unable to express it to a human audience".       |  // [317]
                                                              |  // [317]
        QUOTE:                                                |  // [317]
            The person who says he knows what he thinks       |  // [317]
            but cannot express it usually does not know       |  // [317]
            what he thinks.                                   |  // [317]
                                                              |  // [317]
            MORTIMER ADLER, Philosopher                       |  // [317]
                                                              |  // [317]
        SOURCE:                                               |  // [317]
            www.youtube.com/watch?v=V-UvSKe8jW4&t=1m15s       |  // [317]
            "How to remember everything you learn"            |  // [317]
            BY: Will Schoder                                  |  // [317]
                                                              |  // [317]
    :---------------------------------------------------------+  // [317]
    #_OUTSIDE_OCCLUDE_LOOP_# :--------------------------------+  // [317]
                                                              |  // [317]
        Some variables that need to be declared               |  // [317]
        OUTSIDE of the data selection loop.                   |  // [317]
                                                              |  // [317]
        Discored this while adding auto-tile                  |  // [317]
        touching-value ( u_to4 ) calculations                 |  // [317]
        INSIDE_THE_LOOP_WHERE_IT_DOES__NOT__BELONG            |  // [317]
                                                              |  // [317]
    :---------------------------------------------------------+  // [317]
                                                                 // [317]
    @O_O_L@ : Outside_Occlude_Loop                               // [317]
                                                                 // [317]
    #Rainbow_Auto_Tile_Debug# :-------------------------------+  // [317]
                                                              |  // [317]
        Procedurally create gradient auto tiles for           |  // [317]
        more intense debugging. These auto tiles can          |  // [317]
        include considerations for the touching value.        |  // [317]
                                                              |  // [317]
        WHY?                                                  |  // [317]
                                                              |  // [317]
            1. Because we get extra millage out of the        |  // [317]
               debug block of code ( FRAGBUG_001 )            |  // [317]
               we already made.                               |  // [317]
                                                              |  // [317]
            2. Because it sounds fun.                         |  // [317]
                                                              |  // [317]
            3. Can be a prototype for "@CRAY_CRAY_MODE@"      |  // [317]
                                                              |  // [317]
    :---------------------------------------------------------+  // [317]
    @CRAY_CRAY_MODE@ : Crazy_Crazy_Mode                          // [317]
    #CRAY_CRAY_MODE# :----------------------------------------+  // [317]
                                                              |  // [317]
        Create psychedellic auto tile animations by animating |  // [317]
        a gradient ramp on all of our tiles on the tilemap.   |  // [317]
                                                              |  // [317]
    :---------------------------------------------------------+  // [317]
    #_LMC_OOB_BIT_FLAGS_HERE_# :------------------------------+  // [317]
                                                              |  // [317]
        #_ON_SECOND_THOUGHT__NO__# :-----------------------+  |  // [317]
                                                           |  |  // [317]
            Reason for __NOT__ doing the below :----------+|  |  // [317]
                                                          ||  |  // [317]
                1. Extra calculations just to save 32     ||  |  // [317]
                   bits of memory in 1 variable.          ||  |  // [317]
                                                          ||  |  // [317]
                2. Though it is a 1-time pre-calculation, ||  |  // [317]
                   because it is done in the "BREAK"      ||  |  // [317]
                   section of a loop, GPU might not       ||  |  // [317]
                   actually compute it JUST_ONE_TIME      ||  |  // [317]
                   as we intend.                          ||  |  // [317]
            :---------------------------------------------+|  |  // [317]
        :--------------------------------------------------+  |  // [317]
                                                              |  // [317]
        @TODO_MOVE_LMC_TO_TIGHTER_SCOPE@ :-----------------+  |  // [317]
                                                           |  |  // [317]
            UPDATE : Further thought tells me this         |  |  // [317]
                   : tighter scope idea is __BAD__.        |  |  // [317]
                                                           |  |  // [317]
            u_lmc is in a higher scope than it needs to    |  |  // [317]
            be. We can fix this if when exiting the        |  |  // [317]
            occlusion loop, we set bit flags for which     |  |  // [317]
            sides of tiles we are "out of bounds" on.      |  |  // [317]
                                                           |  |  // [317]
        :--------------------------------------------------+  |  // [317]
                                                              |  // [317]
        We_Can_Use_Something_Like :------------------------+  |  // [317]
                          TAG[ #_PROPOSAL_FOR_BREAK_BODY_# ]  |  // [317]
                                                           |  |  // [317]
            #define b_looklef ( bit02 ) //:b_canlook_lef://|  |  // [317]
            #define b_lookrig ( bit03 ) //:b_canlook_rig://|  |  // [317]
            #define b_looktop ( bit04 ) //:b_canlook_top://|  |  // [317]
            #define b_lookbot ( bit05 ) //:b_canlook_bot://|  |  // [317]
                                                           |  |  // [317]
            #define CAN_LEF { u_boo |=( u_1 << b_looklef ); };|  // [317]
            #define CAN_RIG { u_boo |=( u_1 << b_lookrig ); };|  // [317]
            #define CAN_TOP { u_boo |=( u_1 << b_looktop ); };|  // [317]
            #define CAN_BOT { u_boo |=( u_1 << b_lookbot ); };|  // [317]
                                                           |  |  // [317]
            if( u_lmc.x >= B_0 ){ CAN_LEF };               |  |  // [317]
            if( u_lmc.x <= B_1 ){ CAN_RIG };               |  |  // [317]
            if( u_lmc.y >= B_0 ){ CAN_TOP };               |  |  // [317]
            if( u_lmc.y <= B_1 ){ CAN_BOT };               |  |  // [317]
                                                           |  |  // [317]
        :--------------------------------------------------+  |  // [317]
    :---------------------------------------------------------+  // [317]
    #_WHY_YOU_BELONG_# :--------------------------------------+  // [317]
                                                              |  // [317]
        We COULD move the declaration of[ u_lmc ]to           |  // [317]
        a tighter scope if we implement                       |  // [317]
        [ #_PROPOSAL_FOR_BREAK_BODY_# ]code....               |  // [317]
                                                              |  // [317]
        But I have reason to believe this is extra            |  // [317]
        complication in the name of performance that          |  // [317]
        will actually ruin performance.                       |  // [317]
    :---------------------------------------------------------+  // [317]
    #_WHY_NOT_KEEP_SHADER_7_AS_CRAY_CRAY_SHADER_#:------------+  // [317]
                                                              |  // [317]
        Once we have the debug auto tiling, why not keep      |  // [317]
        shader #7 as our "cray cray" shader and use as        |  // [317]
        a template to create shader #8 ?                      |  // [317]
                                                              |  // [317]
        I just think it would be fun to flip back to this     |  // [317]
        shader if we can get psychedellic "NEXIENT"           |  // [317]
        shader kind of look in shader #7.                     |  // [317]
                                                              |  // [317]
        Could animate concentric rings of different           |  // [317]
        thickness to map to the different LUMONOSITY          |  // [317]
        values of the kyootbot image.                         |  // [317]
                                                              |  // [317]
        Made imgur post to keep reference to                  |  // [317]
        NEXIENT shader for when HEROKU dies.                  |  // [317]
        [ https://imgur.com/gallery/HVJYgx0 ]                 |  // [317]
                                                              |  // [317]
        Animating auto-tiling pipe-dots that grow and         |  // [317]
        shrink could also be cool. They are solid grey,       |  // [317]
        with grey shade based on LUM of kyootbot_image.       |  // [317]
                                                              |  // [317]
        They grow and shrink to 0% of tile to 100% of tile    |  // [317]
        according to the value of our logical game            |  // [317]
        frame ticker uniform. [ d _ tik ]                     |  // [317]
                                                              |  // [317]
    :---------------------------------------------------------+  // [317]
    #_DIAGRAM__GMC__VS__LMO__VS__LMC_# :----------------------+  // [317]
                                                              |  // [317]
        @P2K_G@ : [ d _ Pix2048 ] GLOBAL coordinate.          |  // [317]
        @P2K_L@ : [ d _ Pix2048 ] LOCAL  coordinate.          |  // [317]
                                                              |  // [317]
        POINT:[ X_Y ]::::::::                                 |  // [317]
                                                              |  // [317]
                X_Y_LMC ::::: TAG[ __LMC__ ]                  |  // [317]
                                                              |  // [317]
                u_lmc.x = 3 ;                                 |  // [317]
                u_lmc.y = 2 ;                                 |  // [317]
                                                              |  // [317]
                X_Y_GMC ::::: TAG[ __GMC__ ]                  |  // [317]
                                                              |  // [317]
                         ( @P2K_G@ + @P2K_L@ )                |  // [317]
                u_gmc.x =( u_lmo.x + u_lmc.x );               |  // [317]
                u_gmc.y =( u_lmo.y + u_lmc.y );               |  // [317]
                 @GMC@      @LMO@     @LMC@                   |  // [317]
                  |||                  |||                    |  // [317]
                  X_Y                  X_Y                    |  // [317]
                                                              |  // [317]
        |<----------------- @016_PIX@ -------------------->|  |  // [317]
        |<------------------- 16_PIXELS ------------------>|  |  // [317]
        |<----- 8_PIXELS ------>|  |<----- 8_PIXELS ------>|  |  // [317]
        +-----------------------+  +-----------------------+  |  // [317]
        |                       |  |                       |  |  // [317]
        |                       |  |                       |  |  // [317]
        |                       |  |                       |  |  // [317]
        |                       |  |                       |  |  // [317]
        |      te7 === _03_     |  |     te7 === _03_      |  |  // [317]
        |                       |  |                       |  |  // [317]
        |      8_X_8 LOCAL MAP  |  |     8_X_8 LOCAL MAP   |  |  // [317]
        |                       |  |                       |  |  // [317]
        |                       |  |                       |  |  // [317]
        +-----------------------+  +-----------------------+  |  // [317]
        +-----------------------+                0  1  2  3   |  // [317]
        |                       |  [ ][ ][ ][ ] LMO[ ][ ][ ] 0|  // [317]
        |                       |  [ ][ ][ ][ ] [ ][ ][ ][ ] 1|  // [317]
        |                       |  [ ][ ][ ][ ] [ ][ ][ ]X_Y 2|  // [317]
        |                       |  [ ][ ][ ][ ] [ ][ ][ ][ ] 3|  // [317]
        |     te7 === _03_      |                __________   |  // [317]
        |                       |  [ ][ ][ ][ ] |          |  |  // [317]
        |     8_X_8 LOCAL MAP   |  [ ][ ][ ][ ] | te7==5   |  |  // [317]
        |                       |  [ ][ ][ ][ ] | te7==6   |  |  // [317]
        |_______________________|  [ ][ ][ ][ ] |__________|  |  // [317]
                                  |<-- te7 == _04_ ------->|  |  // [317]
                                ^ |<-- 8_X_8 PIXELS(_08_)->|  |  // [317]
                                |                          ^  |  // [317]
                                |                          |  |  // [317]
                                +----------------------+---+  |  // [317]
                                                       |      |  // [317]
                                                       |      |  // [317]
        |<-------064------->|                          |      |  // [317]
        | 16 | 16 | 16 | 16 |                          |      |  // [317]
        +-==-+-==-+-==-+-==-+ +-==-+-==-+-==-+-==-+    |      |  // [317]
        |                   | |                   |    |      |  // [317]
        |                   | |                   |    |      |  // [317]
        |                   | |                   |    |      |  // [317]
        |     te7 == 0      | |     te7 == 0      |    |      |  // [317]
        |                   | |                   |    |      |  // [317]
        |                   | |                   |    |      |  // [317]
        |                   | |                   |    |      |  // [317]
        +-==-+-==-+-==-+-==-+ +-==-+-==-+-==-+-==-+    |      |  // [317]
        +-==-+-==-+-==-+-==-+ +-==-+-==-+-==-+-==-+    |      |  // [317]
        |                   | |         |         |    |      |  // [317]
        |                   | |  te7==1 |  te7==1 |    |      |  // [317]
        |                   | |         |         |    |      |  // [317]
        |     te7 == 0      | +-==-+-==-+-==-+-==-+    |      |  // [317]
        |                   | |         | 02 | 02 |    |      |  // [317]
        |                   | |  te7==1 +-==-+-==-+    |      |  // [317]
        |                   | |         | 02 |_03_ <---+      |  // [317]
        +-==-+-==-+-==-+-==-+ +-==-+-==-+-==-+_04_ <---+      |  // [317]
        .                   . .         .    .    .           |  // [317]
        |<------ 064 ------>| |<--032-->|_16_|_16_|           |  // [317]
        |<----------------- 128 ----------^^---^^>|           |  // [317]
                            ^^^           ||   ||             |  // [317]
                            |||          @016_PIX@(BOTH)      |  // [317]
                            VVV                               |  // [317]
         |<-128->|<-128->|<-128->|<-128->|                    |  // [317]
         +-------+-------+-------+-------+                    |  // [317]
         |       |       |       |       |                    |  // [317]
         |LEVEL01|LEVEL02|LEVEL03|LEVEL04|                    |  // [317]
         |       |       |       |       |                    |  // [317]
         +-------+-------+-------+-------+                    |  // [317]
         |       |       |       |       |                    |  // [317]
         |LEVEL05|LEVEL06|LEVEL07|LEVEL08|                    |  // [317]
         |       |       |       |       |                    |  // [317]
         +-------+-------+-------+-------+                    |  // [317]
         |       |       |       |       |                    |  // [317]
         |LEVEL09|LEVEL10|LEVEL11|LEVEL12|                    |  // [317]
         |       |       |       |       |                    |  // [317]
         +-------+-------+-------+-------+                    |  // [317]
         |       |       .       .       |                    |  // [317]
         |LEVEL13|  _?_  .  _?_  .  _?_  |                    |  // [317]
         |       |       .       .       |                    |  // [317]
         +-------+-------+-------+-------+                    |  // [317]
         |<-------------512------------->|                    |  // [317]
                                                              |  // [317]
                                                              |  // [317]
        @016_PIX@ : Denoting Sixteen(16) pixels.              |  // [317]
    :---------------------------------------------------------+  // [317]
        
    #_4x4_bitmaps_for_sats_# :--------------------------------+  // [318]
                                                              |  // [318]
        Creating 4x4 images packed into uint32(s) for         |  // [318]
        the different touching graphics.                      |  // [318]
                                                              |  // [318]
        Going to use them in shader#7 , AKA: "SATS".          |  // [318]
                                                              |  // [318]
        SATS == "Simpler_Auto_Tile_Shader"                    |  // [318]
    :---------------------------------------------------------+  // [318]
    #_WE_NEED_THE_16_BIT_BINARY_VALUES_OF_THESE_TILES_# :-----+  // [318]
                                                              |  // [318]
    #_4X4_PATTERN____STRONG_LINES_#  < < < < < < < < < @STRONG@  // [318]
                                                              |  // [318]
        1 1 1 1   1 1 1 1   1 1 1 1   1 1 1 1                 |  // [318]
        1 _ _ _   _ _ _ _   _ _ _ 1   1 _ _ 1                 |  // [318]
        1 _ _ _   _ _ _ _   _ _ _ 1   1 _ _ 1                 |  // [318]
        1 _ _ _   _ _ _ _   _ _ _ 1   1 _ _ 1                 |  // [318]
                                                              |  // [318]
        1 _ _ _   1 _ _ 1   _ _ _ 1   1 _ _ 1                 |  // [318]
        1 _ _ _   _ _ _ _   _ _ _ 1   1 _ _ 1                 |  // [318]
        1 _ _ _   _ _ _ _   _ _ _ 1   1 _ _ 1                 |  // [318]
        1 _ _ _   1 _ _ 1   _ _ _ 1   1 _ _ 1                 |  // [318]
                                                              |  // [318]
        1 _ _ _   _ _ _ _   _ _ _ 1   1 _ _ 1                 |  // [318]
        1 _ _ _   _ _ _ _   _ _ _ 1   1 _ _ 1                 |  // [318]
        1 _ _ _   _ _ _ _   _ _ _ 1   1 _ _ 1                 |  // [318]
        1 1 1 1   1 1 1 1   1 1 1 1   1 1 1 1                 |  // [318]
                                                              |  // [318]
        1 1 1 1   1 1 1 1   1 1 1 1   1 1 1 1                 |  // [318]
        1 _ _ _   _ _ _ _   _ _ _ 1   1 _ _ 1                 |  // [318]
        1 _ _ _   _ _ _ _   _ _ _ 1   1 _ _ 1                 |  // [318]
        1 1 1 1   1 1 1 1   1 1 1 1   1 1 1 1                 |  // [318]
                                                              |  // [318]
                                                              |  // [318]
    4X4_PATTERN : TOUCHING_VALUES                             |  // [318]
                                                              |  // [318]
        +======+   +======+   +======+   +======+             |  // [318]
        |__05__|   |__13__|   |__09__|   |__01__|             |  // [318]
        | 0101 |   | 1101 |   | 1001 |   | 0001 |             |  // [318]
        +======+   +======+   +======+   +======+             |  // [318]
                                                              |  // [318]
        +======+   +======+   +======+   +======+             |  // [318]
        |__07__|   |__15__|   |__11__|   |__03__|             |  // [318]
        | 0111 |   | 1111 |   | 1011 |   | 0011 |             |  // [318]
        +======+   +======+   +======+   +======+             |  // [318]
                                                              |  // [318]
        +======+   +======+   +======+   +======+             |  // [318]
        |__06__|   |__14__|   |__10__|   |__02__|             |  // [318]
        | 0110 |   | 1110 |   | 1010 |   | 0010 |             |  // [318]
        +======+   +======+   +======+   +======+             |  // [318]
                                                              |  // [318]
        +======+   +======+   +======+   +======+             |  // [318]
        |__04__|   |__12__|   |__08__|   |__00__|             |  // [318]
        | 0100 |   | 1100 |   | 1000 |   | 0000 |             |  // [318]
        +======+   +======+   +======+   +======+             |  // [318]
                                                              |  // [318]
                                                              |  // [318]
    #_4X4_PATTERN____TOP_LEFT_LIGHTING_LAYER_# < < < < @LIGHTS@  // [318]
                                                              |  // [318]
        1 1 1 1   1 1 1 1   1 1 1 1   1 1 1 1                 |  // [318]
        1 1 1 1   1 1 1 1   1 1 1 1   1 1 1 1                 |  // [318]
        1 1 _ _   _ _ _ _   _ _ _ _   1 1 _ _                 |  // [318]
        1 1 _ _   _ _ _ _   _ _ _ _   1 1 _ _                 |  // [318]
                                                              |  // [318]
        1 1 _ _   _ _ _ _   _ _ _ _   1 1 _ _                 |  // [318]
        1 1 _ _   _ 1 1 _   _ _ _ _   1 1 _ _                 |  // [318]
        1 1 _ _   _ 1 _ _   _ _ _ _   1 1 _ _                 |  // [318]
        1 1 _ _   _ _ _ _   _ _ _ _   1 1 _ _                 |  // [318]
                                                              |  // [318]
        1 1 _ _   _ _ _ _   _ _ _ _   1 1 _ _                 |  // [318]
        1 1 _ _   _ _ _ _   _ _ _ _   1 1 _ _                 |  // [318]
        1 1 _ _   _ _ _ _   _ _ _ _   1 1 _ _                 |  // [318]
        1 1 _ _   _ _ _ _   _ _ _ _   1 1 _ _                 |  // [318]
                                                              |  // [318]
        1 1 1 1   1 1 1 1   1 1 1 1   1 1 1 1                 |  // [318]
        1 1 1 1   1 1 1 1   1 1 1 1   1 1 1 1                 |  // [318]
        1 1 _ _   _ _ _ _   _ _ _ _   1 1 _ _                 |  // [318]
        1 1 _ _   _ _ _ _   _ _ _ _   1 1 _ _                 |  // [318]
                                                              |  // [318]
        We can pack TWO 4x4 bitmaps into 32bits, so           |  // [318]
        lets take advantage of that and have two layers       |  // [318]
        of detail encoded into our 32-bit values.             |  // [318]
                                                              |  // [318]
        Why?                                                  |  // [318]
                                                              |  // [318]
        Because I want the tiles to be SIMPLE , but not       |  // [318]
        so simple that we cannot verify the effects           |  // [318]
        of mirroring the tiles on the X/Y axis when           |  // [318]
        the auto tile method ( AM4 ) bits prescibe it.        |  // [318]
                                                              |  // [318]
    :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  // [318]
    //////////////////// ____TEMPLATE____ /////////////////////  // [318]
                                                              |  // [318]
    __##__                                                    |  // [318]
        _ _ _ _      _ _ _ _      ####                        |  // [318]
        _ _ _ _ ===> _ _ _ _ ===> #### ===> ################  |  // [318]
        _ _ _ _ ===> _ _ _ _ ===> #### ===> 0x______________  |  // [318]
        _ _ _ _      _ _ _ _      ####                        |  // [318]
                                                              |  // [318]
    //////////////////// ____TEMPLATE____ /////////////////////  // [318]
    :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  // [318]
                                                              |  // [318]
    __00__                                                    |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        1 _ _ 1 ===> 1 0 0 1 ===> 1001 ===> 1111100110011111  |  // [318]
        1 _ _ 1 ===> 1 0 0 1 ===> 1001 ===> 0xF99F  @STRONG@  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        1 1 1 1 ===> 1 1 1 1 ===> 1111 ===> 1111111111001100  |  // [318]
        1 1 _ _ ===> 1 1 0 0 ===> 1100 ===> 0xFFCC  @LIGHTS@  |  // [318]
        1 1 _ _      1 1 0 0      1100                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_dtm_000 = 0xF99FFFCC  |  // [318]
    ========================================================  |  // [318]
    __01__                                                    |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        1 _ _ 1 ===> 1 0 0 1 ===> 1001 ===> 1111100110011001  |  // [318]
        1 _ _ 1 ===> 1 0 0 1 ===> 1001 ===> 0xF999  @STRONG@  |  // [318]
        1 _ _ 1      1 0 0 1      1001                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        1 1 1 1 ===> 1 1 1 1 ===> 1111 ===> 1111111111001100  |  // [318]
        1 1 _ _ ===> 1 1 0 0 ===> 1100 ===> 0xFFCC  @LIGHTS@  |  // [318]
        1 1 _ _      1 1 0 0      1100                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_v_t_001 = 0xF999FFCC  |  // [318]
    ========================================================  |  // [318]
    __02__                                                    |  // [318]
        1 _ _ 1      1 0 0 1      1001                        |  // [318]
        1 _ _ 1 ===> 1 0 0 1 ===> 1001 ===> 1001100110011111  |  // [318]
        1 _ _ 1 ===> 1 0 0 1 ===> 1001 ===> 0x999F  @STRONG@  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        1 1 _ _      1 1 0 0      1100                        |  // [318]
        1 1 _ _ ===> 1 1 0 0 ===> 1100 ===> 1100110011001100  |  // [318]
        1 1 _ _ ===> 1 1 0 0 ===> 1100 ===> 0xCCCC  @LIGHTS@  |  // [318]
        1 1 _ _      1 1 0 0      1100                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_v_b_002 = 0x999FCCCC  |  // [318]
    ========================================================  |  // [318]
    __03__                                                    |  // [318]
        1 _ _ 1      1 0 0 1      1001                        |  // [318]
        1 _ _ 1 ===> 1 0 0 1 ===> 1001 ===> 1001100110011001  |  // [318]
        1 _ _ 1 ===> 1 0 0 1 ===> 1001 ===> 0x9999  @STRONG@  |  // [318]
        1 _ _ 1      1 0 0 1      1001                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        1 1 _ _      1 1 0 0      1100                        |  // [318]
        1 1 _ _ ===> 1 1 0 0 ===> 1100 ===> 1100110011001100  |  // [318]
        1 1 _ _ ===> 1 1 0 0 ===> 1100 ===> 0xCCCC  @LIGHTS@  |  // [318]
        1 1 _ _      1 1 0 0      1100                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_v_m_003 = 0x9999CCCC  |  // [318]
    ========================================================  |  // [318]
    __04__                                                    |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        1 _ _ _ ===> 1 0 0 0 ===> 1000 ===> 1111100010001111  |  // [318]
        1 _ _ _ ===> 1 0 0 0 ===> 1000 ===> 0xF88F  @STRONG@  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        1 1 1 1 ===> 1 1 1 1 ===> 1111 ===> 1111111111001100  |  // [318]
        1 1 _ _ ===> 1 1 0 0 ===> 1100 ===> 0xFFCC  @LIGHTS@  |  // [318]
        1 1 _ _      1 1 0 0      1100                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_h_l_004 = 0xF88FFFCC  |  // [318]
    ========================================================  |  // [318]
    __05__                                                    |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        1 _ _ _ ===> 1 0 0 0 ===> 1000 ===> 1111100010001000  |  // [318]
        1 _ _ _ ===> 1 0 0 0 ===> 1000 ===> 0xF888  @STRONG@  |  // [318]
        1 _ _ _      1 0 0 0      1000                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        1 1 1 1 ===> 1 1 1 1 ===> 1111 ===> 1111111111001100  |  // [318]
        1 1 _ _ ===> 1 1 0 0 ===> 1100 ===> 0xFFCC  @LIGHTS@  |  // [318]
        1 1 _ _      1 1 0 0      1100                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_ntl_005 = 0xF888FFCC  |  // [318]
    ========================================================  |  // [318]
    __06__                                                    |  // [318]
        1 _ _ _      1 0 0 0      1000                        |  // [318]
        1 _ _ _ ===> 1 0 0 0 ===> 1000 ===> 1000100010001111  |  // [318]
        1 _ _ _ ===> 1 0 0 0 ===> 1000 ===> 0x888F  @STRONG@  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        1 1 _ _      1 1 0 0      1100                        |  // [318]
        1 1 _ _ ===> 1 1 0 0 ===> 1100 ===> 1100110011001100  |  // [318]
        1 1 _ _ ===> 1 1 0 0 ===> 1100 ===> 0xCCCC  @LIGHTS@  |  // [318]
        1 1 _ _      1 1 0 0      1100                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_nbl_006 = 0x888FCCCC  |  // [318]
    ========================================================  |  // [318]
    __07__                                                    |  // [318]
        1 _ _ _      1 0 0 0      1000                        |  // [318]
        1 _ _ _ ===> 1 0 0 0 ===> 1000 ===> 1000100010001000  |  // [318]
        1 _ _ _ ===> 1 0 0 0 ===> 1000 ===> 0x8888  @STRONG@  |  // [318]
        1 _ _ _      1 0 0 0      1000                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        1 1 _ _      1 1 0 0      1100                        |  // [318]
        1 1 _ _ ===> 1 1 0 0 ===> 1100 ===> 1100110011001100  |  // [318]
        1 1 _ _ ===> 1 1 0 0 ===> 1100 ===> 0xCCCC  @LIGHTS@  |  // [318]
        1 1 _ _      1 1 0 0      1100                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_n_l_007 = 0x8888CCCC  |  // [318]
    ========================================================  |  // [318]
    __08__                                                    |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        _ _ _ 1 ===> 0 0 0 1 ===> 0001 ===> 1111000100011111  |  // [318]
        _ _ _ 1 ===> 0 0 0 1 ===> 0001 ===> 0xF11F  @STRONG@  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        1 1 1 1 ===> 1 1 1 1 ===> 1111 ===> 1111111100000000  |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0xFF00  @LIGHTS@  |  // [318]
        _ _ _ _      0 0 0 0      0000                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_h_r_008 = 0xF11FFF00  |  // [318]
    ========================================================  |  // [318]
    __09__                                                    |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        _ _ _ 1 ===> 0 0 0 1 ===> 0001 ===> 1111000100010001  |  // [318]
        _ _ _ 1 ===> 0 0 0 1 ===> 0001 ===> 0xF111  @STRONG@  |  // [318]
        _ _ _ 1      0 0 0 1      0001                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        1 1 1 1 ===> 1 1 1 1 ===> 1111 ===> 1111111100000000  |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0xFF00  @LIGHTS@  |  // [318]
        _ _ _ _      0 0 0 0      0000                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_ntr_009 = 0xF111FF00  |  // [318]
    ========================================================  |  // [318]
    __10__                                                    |  // [318]
        _ _ _ 1      0 0 0 1      0001                        |  // [318]
        _ _ _ 1 ===> 0 0 0 1 ===> 0001 ===> 0001000100011111  |  // [318]
        _ _ _ 1 ===> 0 0 0 1 ===> 0001 ===> 0x111F  @STRONG@  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        _ _ _ _      0 0 0 0      0000                        |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0000000000000000  |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0x0000  @LIGHTS@  |  // [318]
        _ _ _ _      0 0 0 0      0000                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_nbr_010 = 0x111F0000  |  // [318]
    ========================================================  |  // [318]
    __11__                                                    |  // [318]
        _ _ _ 1      0 0 0 1      0001                        |  // [318]
        _ _ _ 1 ===> 0 0 0 1 ===> 0001 ===> 0001000100010001  |  // [318]
        _ _ _ 1 ===> 0 0 0 1 ===> 0001 ===> 0x1111  @STRONG@  |  // [318]
        _ _ _ 1      0 0 0 1      0001                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        _ _ _ _      0 0 0 0      0000                        |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0000000000000000  |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0x0000  @LIGHTS@  |  // [318]
        _ _ _ _      0 0 0 0      0000                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_n_r_011 = 0x11110000  |  // [318]
    ========================================================  |  // [318]
    __12__                                                    |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 1111000000001111  |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0xF00F  @STRONG@  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        1 1 1 1 ===> 1 1 1 1 ===> 1111 ===> 1111111100000000  |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0xFF00  @LIGHTS@  |  // [318]
        _ _ _ _      0 0 0 0      0000                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_h_c_012 = 0xF00FFF00  |  // [318]
    ========================================================  |  // [318]
    __13__                                                    |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 1111000000000000  |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0xF000  @STRONG@  |  // [318]
        _ _ _ _      0 0 0 0      0000                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        1 1 1 1 ===> 1 1 1 1 ===> 1111 ===> 1111111100000000  |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0xFF00  @LIGHTS@  |  // [318]
        _ _ _ _      0 0 0 0      0000                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_n_t_013 = 0xF000FF00  |  // [318]
    ========================================================  |  // [318]
    __14__                                                    |  // [318]
        _ _ _ _      0 0 0 0      0000                        |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0000000000001111  |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0x000F  @STRONG@  |  // [318]
        1 1 1 1      1 1 1 1      1111                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        _ _ _ _      0 0 0 0      0000                        |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0000000000000000  |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0x0000  @LIGHTS@  |  // [318]
        _ _ _ _      0 0 0 0      0000                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_n_b_014 = 0x000F0000  |  // [318]
    ========================================================  |  // [318]
    __15__                                                    |  // [318]
        1 _ _ 1      1 0 0 1      1001                        |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 1001000000001001  |  // [318]
        _ _ _ _ ===> 0 0 0 0 ===> 0000 ===> 0x9009  @STRONG@  |  // [318]
        1 _ _ 1      1 0 0 1      1001                        |  // [318]
        ////////////////////////////////////////////////////  |  // [318]
        _ _ _ _      0 0 0 0      0000                        |  // [318]
        _ 1 1 _ ===> 0 1 1 0 ===> 0110 ===> 0000011001000000  |  // [318]
        _ 1 _ _ ===> 0 1 0 0 ===> 0100 ===> 0x0640  @LIGHTS@  |  // [318]
        _ _ _ _      0 0 0 0      0000                        |  // [318]
                                                              |  // [318]
    SEE[ #4X4REF# ]               c_4x4_noa_015 = 0x90090640  |  // [318]
    ========================================================  |  // [318]
                                                              |  // [318]
    :---------------------------------------------------------+  // [318]
    #_FUCKING_SPECULATION_# :---------------------------------+  // [318]
                                                              |  // [318]
        https://gamedev.stackexchange.com/questions/183336/   |  // [318]
        why-are-2d-game-tiles-often-lit-from-the-top-left     |  // [318]
    :---------------------------------------------------------+  // [318]
    #_MONTY_FUCKING_HALL_# :----------------------------------+  // [318]
                                                              |  // [318]
        https://www.youtube.com/watch?v=4Lb-6rxZxx0&t=130s    |  // [318]
    :---------------------------------------------------------+  // [318]
                                                                 // [318]
    @STRONG@ : Strong Lines Auto Tile Design                     // [318]
    @LIGHTS@ : Top Left Lighting Layer                           // [318]
                                                                 // [318]
    @LIGHTING@ : Did you mean [ @LIGHTS@ ] ?                     // [318]
                                                                 // [---]
    @VIDEO_IDEA@ : Animation of this code base being created     // [319]
    @VIDIDEA@    : by "faking it" to create a viral video.       // [319]
    @VIDEO@      : How do we do that? If _EVERY_LINE_ has a      // [319]
    @VID@        : [###] stamp on it , we can create a           // [319]
                 : procedural typing animation , export to       // [319]
                 : .PNG sequence , and splice together.          // [319]
                                                                 // [319]
    #_SHADER_7_BIT_PACKED_AUTO_TILE_GRAPHICS_# :--------------+  // [319]
                                                              |  // [319]
        Each 32 bit hex code contains TWO 4x4 designs.        |  // [319]
                                                              |  // [319]
        The 16 most  significant bits encode a 4x4 linework   |  // [319]
        design for the auto-tile-set sub-tile.                |  // [319]
                                                              |  // [319]
        The 16 least significant bits encode a 4x4 LIGHTING   |  // [319]
        design for the auto-tile-set sub-tile.                |  // [319]
                                                              |  // [319]
        We encode LIGHTING information not because we want    |  // [319]
        to focus on fancy lighting stuff right now, but       |  // [319]
        because we want to be able to have enough visual      |  // [319]
        information to differentiate auto-tiles that have     |  // [319]
        been mirrored on the X or Y axis.                     |  // [319]
    :---------------------------------------------------------+  // [319]
    #_SHADER_7_ONLY_LOOKUP_TABLES_# :-------------------------+  // [319]
                                                              |  // [319]
        I've decided shader #7 is going to use simple         |  // [319]
        graphics and that the fractal rendering will          |  // [319]
        go in shader #8. We will copy all of #7's code        |  // [319]
        into shader #8 once shader #7 is done.                |  // [319]
                                                              |  // [319]
        Then we will clean up #7 to make sure the debug       |  // [319]
        tile color values are turned into RELEASE MODE        |  // [319]
        colors.                                               |  // [319]
                                                              |  // [319]
        Then we will modify shader #8 until it can            |  // [319]
        display the fractal graphics created by...            |  // [319]
                                                              |  // [319]
        I am not sure... I forget...                          |  // [319]
        "MIPWASP" helped create the graphics. But MIPWASP     |  // [319]
        is a utility sub-system. I think GOLA512... No...     |  // [319]
                                                              |  // [319]
        ARTDECA : <-- Decal Graphics For Shader [ 7 / 8 ]     |  // [319]
        ARTGOLA : <-- Tile  Graphics For Shader [ 7 / 8 ]     |  // [319]
                                                              |  // [319]
        ( Previously slotted as graphics for shader #7, )     |  // [319]
        ( but now these will be the graphics for        )     |  // [319]
        ( shader #8 , and #7 is a more rudimentary      )     |  // [319]
        ( but highly optimized shader.                  )     |  // [319]
                                                              |  // [319]
    :---------------------------------------------------------+  // [319]

    #_DISCRETE_INTERNAL_LOCAL_# :-----------------------------+  // [320]
                                                              |  // [320]
        A coordinate within the current tile we are           |  // [320]
        rendering. In terms of discrete ( game plank )        |  // [320]
        units. When I say "discrete units" I am refering      |  // [320]
        to the renderer's "Plank/Planck" units.               |  // [320]
                                                              |  // [320]
        We subdivided the render space into a finite set      |  // [320]
        of discrete units so all rendering can be done        |  // [320]
        using integer math.                                   |  // [320]
    :---------------------------------------------------------+  // [320]
    #_DIL_IS_CALCULATED_IN_THE_LOOP_# :-----------------------+  // [320]
                                                              |  // [320]
        :------------------------------------------:          |  // [320]
        : Calculated inside the loop. Since we     :          |  // [320]
        : calculate it there, we can also use      :          |  // [320]
        : it to apply a radius-mask to our         :          |  // [320]
        : different tile types so that BOMB_TILE(S):          |  // [320]
        : can be circular but still render the     :          |  // [320]
        : tiles BEHIND_THEM using our occlusion    :          |  // [320]
        : selection loop. (_DATASEL-OCCLUDE-LOOP_) :          |  // [320]
        :------------------------------------------:          |  // [320]
    :---------------------------------------------------------+  // [320]
    #_4X4_GRAPHICS_TINT_# :-----------------------------------+  // [320]
                                                              |  // [320]
        Create our simple auto tile graphic by tinting the    |  // [320]
        base color 1 of 4 shades depending on what two        |  // [320]
        bit v04 value we calculated.                          |  // [320]
                                                              |  // [320]
        @u_4x4@ : Two 4x4 bitmaps encoded in a uint32         |  // [320]
        @u_4th@ : One fourth of discrete units in the         |  // [320]
                : current tile size we are on.                |  // [320]
                                                              |  // [320]
        @u_i4x@ : Which 4x4 cell are we in on the X axis?     |  // [320]
        @u_i4y@ : Which 4x4 cell are we in on the Y axis?     |  // [320]
        @u_i4i@ : [ i4x , i4y ] converted to 1D coord.        |  // [320]
        @u_v04@ : 2 bit value pulled from[ u_4x4 ].           |  // [320]
        @f_mul@ : Floating point amount to multiply           |  // [320]
                : fragment color by to create the details     |  // [320]
                : on our auto-tile being rendered.            |  // [320]
                                                              |  // [320]
    :---------------------------------------------------------+  // [320]
    #_HELPS_CREATE_FOUR_TONE_TILES_# :------------------------+  // [320]
                                                              |  // [320]
        Lookup table helps us modify the "global color"       |  // [320]
        of the tile to create a 4-tone tile.                  |  // [320]
                                                              |  // [320]
        The tile is composes of sections with two             |  // [320]
        attributes ?                                          |  // [320]
                                                              |  // [320]
        1. Is it an edge or the body of the tile?             |  // [320]
        2. Is this part of tile being hit by light?           |  // [320]
                                                              |  // [320]
        @d_v04_mul@ : (v04)===>(mul)                          |  // [320]
                                                              |  // [320]
            Converts "v04" value to a multiplier value "mul". |  // [320]
                                                              |  // [320]
                                                              |  // [320]
        d _ v04_mul[ 0 ] === 1.0 : Un altered body color.     |  // [320]
        d _ v04_mul[ 1 ] === 1.2 : Body color hit by light.   |  // [320]
                                                              |  // [320]
        d _ v04_mul[ 2 ] === 0.1 : Edges darker than body.    |  // [320]
        d _ v04_mul[ 3 ] === 0.2 : Edge color hit by light.   |  // [320]
                                                              |  // [320]
                                                              |  // [320]
    :---------------------------------------------------------+  // [320]
    #_U_TO4_ALWAYS_ZERO_FOR_NOW_# :---------------------------+  // [320]
                                                              |  // [320]
        We haven't configured the AM4 values in our           |  // [320]
        editor's brush yet. So the auto tiling bits           |  // [320]
        are all zero. Which means pre-configured to           |  // [320]
        _NOT_ auto tile with any direction.                   |  // [320]
                                                              |  // [320]
        Thus touching value will always be zero               |  // [320]
        at this moment in time for video #3_2_0 till          |  // [320]
        whenever we implement the editor change.              |  // [320]
    :---------------------------------------------------------+  // [320]
    #_U_V04_IS_CORRECT_# :------------------------------------+  // [320]
                                                              |  // [320]
        These commented out lines of code prove that          |  // [320]
        the crazy bit-shifting math is CORRECT and that       |  // [320]
        the bug in my code I am currently looking for         |  // [320]
        is futher up in the file.                             |  // [320]
                                                              |  // [320]
        DATE[ 2022_10_05 ]TIME[ 823 PM ]                      |  // [320]
    :---------------------------------------------------------+  // [320]
    #_FIX_TO4_4X4_LOOKUP_TABLE_BUG_# :------------------------+  // [320]
                                                              |  // [320]
        Observations lead me to believe that the lookup       |  // [320]
        table is either BROKEN or not wired up correctly.     |  // [320]
                                                              |  // [320]
        ...OR...                                              |  // [320]
                                                              |  // [320]
        Your code that turns lookup tables into GLSL          |  // [320]
        code only supports 8 bit integers and 32 bit          |  // [320]
        integers do something weird, like get                 |  // [320]
        truncated.                                            |  // [320]
                                                              |  // [320]
        FIX_THIS_TABLE[ d_to4_4x4 ]                           |  // [320]
    :---------------------------------------------------------+  // [320]
                                                                 // [320]
    @ABI_EDG@ : Actual_Bit_Index : EDGe     graphic layer        // [320]
    @ABI_LIG@ : Actual_Bit_Index : LIGhting graphic layer        // [320]
                                                                 // [320]
    @SANITYCHECK@ : Doing something to confirm line of           // [320]
                  : code is correct as written.                  // [320]

    #_WHAT_THE_FUCK_IS_WRONG_WITH_YOU_PEOPLE_# :--------------+  // [321]
                                                              |  // [321]
        Let's try and figure out what is wrong with           |  // [321]
        our lookup table. The first check will be to          |  // [321]
        iterate over all entries and assure ourselves         |  // [321]
        that they are all NON-ZERO.                           |  // [321]
                                                              |  // [321]
        https://www.youtube.com/watch?v=nuw-cxKhW5A           |  // [321]
                                                              |  // [321]
    :---------------------------------------------------------+  // [321]
    #FIX005# / @FIX005@ / @FIX_005@ / #FIX_005# :-------------+  // [321]
                                                              |  // [321]
        Our jackass self commented out the first entry        |  // [321]
        because our "Lax-Comma" habits. Fixed.                |  // [321]
    :---------------------------------------------------------+  // [321]

    @[MAE]@ : Moved_And_Edited , comment marker.                 // [322]
                                                                 // [322]
    @VIDEO_IDEA@ : Make a "choose your own adventure channel     // [322]
    @VIDIDEA@ :::: where you can pick at the end of the          // [322]
    @VID@ :::::::: video if you want to see either :             // [322]
    @VIDEO@ :::::: 1 : The next short summary video              // [322]
    @VIDEOIDEA@ :: 2 : Go into detail on current short video.    // [322]

    #ZXCV# :--------------------------------------------------+  // [323]
                                                              |  // [323]
        These keys will toggle the different                  |  // [323]
        auto tile mode flags on/off.                          |  // [323]
                                                              |  // [323]
        U_AM4[ _latch_x_ | _latch_y_ | _mirror_x | _mirror_y ]|  // [323]
          KEY[ ____Z____ | ____X____ | ____C____ | ____V____ ]|  // [323]
                                                              |  // [323]
    :---------------------------------------------------------+  // [323]
    #_Geometry_Layer_Only_# :---------------------------------+  // [323]
                                                              |  // [323]
        Though shader #7 might not implement it this way,     |  // [323]
        the auto-tiling-method bits only apply to             |  // [323]
        GEOMETRY LAYER TILES and none other.                  |  // [323]
    +---------------------------------------------------------+  // [323]

    #_TOGGLE_THE_AM4_BITS_# :---------------------------------+  // [324]
                                                              |  // [324]
        Used to toggle the AM4 bits on/off within a           |  // [324]
        4-bit number. As I write this I realize the           |  // [324]
        "Toggle Value" is identical to the "Bit Index"        |  // [324]
        values we already created in previous videos.         |  // [324]
                                                              |  // [324]
        But, because THESE_VARS have                          |  // [324]
        a seperate use case ,                                 |  // [324]
        I am going to keep them.                              |  // [324]
                                                              |  // [324]
        THESE_VARS === c_am4_tog_*** vars.                    |  // [324]
                                                              |  // [324]
    +---------------------------------------------------------+  // [324]

    #_MORE_DETAIL_FOR_MIRRORING_SUPPORT_# :-------------------+  // [325]
                                                              |  // [325]
        Unless we add more detail to the tile rendering,      |  // [325]
        we won't be able to see the effects of mirroring      |  // [325]
        on the X and Y axis when changing the AM4's           |  // [325]
        "mirror_x" and "mirror_y" bits.                       |  // [325]
                                                              |  // [325]
        Lets create cap designs that only render on           |  // [325]
        the top of tiles ( by default ).                      |  // [325]
                                                              |  // [325]
        0 0 0 0 0 0 0 0 <---+              TAG[#_8_X_4_CAPS_#]|  // [325]
        0 0 0 0 0 0 0 0     |__ 8x4_not                       |  // [325]
        0 0 0 0 0 0 0 0     |                                 |  // [325]
        0 0 0 0 0 0 0 0 <---+                                 |  // [325]
                                                              |  // [325]
        1 1 1 1 1 1 1 1 <---+                                 |  // [325]
        1 - - 1 1 - - 1     |__ 8x4_top                       |  // [325]
        1 1 - - - - 1 1     |                                 |  // [325]
        1 - - - - - - 1 <---+                                 |  // [325]
        ---------------                                       |  // [325]
        ---------------                                       |  // [325]
        ---------------                                       |  // [325]
        ---------------                                       |  // [325]
                                                              |  // [325]
            8x4_lef          8x4_cen          8x4_rig         |  // [325]
               |                |                |            |  // [325]
        +------+------+  +------+------+  +------+------+     |  // [325]
        |             |  |             |  |             |     |  // [325]
        V             V  V             V  V             V     |  // [325]
        1 1 1 1 1 1 1 1  1 1 1 1 1 1 1 1  1 1 1 1 1 1 1 1     |  // [325]
        1 1 1 - 1 - - 1  1 - - 1 1 - - 1  1 - - 1 - 1 1 1     |  // [325]
        1 1 - - - - - -  - - - - - - - -  - - - - - - 1 1     |  // [325]
        1 1 1 - - - - 1  - 1 - 1 1 - 1 -  1 - - - - 1 1 1     |  // [325]
        ---------------  ---------------  ---------------     |  // [325]
        ---------------  ---------------  ---------------     |  // [325]
        ---------------  ---------------  ---------------     |  // [325]
        ---------------  ---------------  ---------------     |  // [325]
                                                              |  // [325]
                                                              |  // [325]
        +-----------+-----------+-----------+ +-----------+   |  // [325]
        |           |           |           | |           |   |  // [325]
        |  8x4_lef  |  8x4_cen  |  8x4_rig  | |  8x4_top  |   |  // [325]
        |  ---+---  |  ---+---  |  ---+---  | |  ---+---  |   |  // [325]
        |  8x4_not  |  8x4_not  |  8x4_not  | |  8x4_not  |   |  // [325]
        |           |           |           | |           |   |  // [325]
        +-----------+-----------+-----------+ +-----------+   |  // [325]
        |           |           |           | |           |   |  // [325]
        |           |           |           | |           |   |  // [325]
        |    NOT    |    NOT    |    NOT    | |    NOT    |   |  // [325]
        |           |           |           | |           |   |  // [325]
        |           |           |           | |           |   |  // [325]
        +-----------+-----------+-----------+ +-----------+   |  // [325]
        |           |           |           | |           |   |  // [325]
        |           |           |           | |           |   |  // [325]
        |    NOT    |    NOT    |    NOT    | |    NOT    |   |  // [325]
        |           |           |           | |           |   |  // [325]
        |           |           |           | |           |   |  // [325]
        +-----------+-----------+-----------+ +-----------+   |  // [325]
        +-----------+-----------+-----------+ +-----------+   |  // [325]
        |           |           |           | |           |   |  // [325]
        |  8x4_lef  |  8x4_cen  |  8x4_rig  | |  8x4_top  |   |  // [325]
        |  ---+---  |  ---+---  |  ---+---  | |  ---+---  |   |  // [325]
        |  8x4_not  |  8x4_not  |  8x4_not  | |  8x4_not  |   |  // [325]
        |           |           |           | |           |   |  // [325]
        +-----------+-----------+-----------+ +-----------+   |  // [325]
                                                              |  // [325]
        8x4_*** : HEX[ 0x######## ]---------------------------+  // [325]
                                                              |  // [325]
            - - - - - - - -      0 0 0 0 0 0 0 0      00000000|  // [325]
            - - - - - - - - ===> 0 0 0 0 0 0 0 0 ===> 00000000|  // [325]
            - - - - - - - - ===> 0 0 0 0 0 0 0 0 ===> 00000000|  // [325]
            - - - - - - - -      0 0 0 0 0 0 0 0      00000000|  // [325]
                                                              |  // [325]
            BIN[ ################################ ]           |  // [325]
            CHK[ 12345678901234567890123456789032 ]           |  // [325]
            CHK[ 1_______10________20________3032 ]           |  // [325]
                                                              |  // [325]
        8x4_not : HEX[ 0x00000000 ]---------------------------+  // [325]
                                                              |  // [325]
            0 0 0 0 0 0 0 0      00000000                     |  // [325]
            0 0 0 0 0 0 0 0 ===> 00000000                     |  // [325]
            0 0 0 0 0 0 0 0 ===> 00000000                     |  // [325]
            0 0 0 0 0 0 0 0      00000000                     |  // [325]
                                                              |  // [325]
            BIN[ 00000000000000000000000000000000 ]           |  // [325]
            CHK[ 12345678901234567890123456789032 ]           |  // [325]
            CHK[ 1_______10________20________3032 ]           |  // [325]
                                                              |  // [325]
        8x4_top : HEX[ 0xFF99C381 ]---------------------------+  // [325]
                                                              |  // [325]
            1 1 1 1 1 1 1 1      1 1 1 1 1 1 1 1      11111111|  // [325]
            1 - - 1 1 - - 1 ===> 1 0 0 1 1 0 0 1 ===> 10011001|  // [325]
            1 1 - - - - 1 1 ===> 1 1 0 0 0 0 1 1 ===> 11000011|  // [325]
            1 - - - - - - 1      1 0 0 0 0 0 0 1      10000001|  // [325]
                                                              |  // [325]
            BIN[ 11111111100110011100001110000001 ]           |  // [325]
            CHK[ 12345678901234567890123456789032 ]           |  // [325]
            CHK[ 1_______10________20________3032 ]           |  // [325]
                                                              |  // [325]
        8x4_lef : HEX[ 0xFFE9C0E1 ]---------------------------+  // [325]
                                                              |  // [325]
            1 1 1 1 1 1 1 1      1 1 1 1 1 1 1 1      11111111|  // [325]
            1 1 1 - 1 - - 1 ===> 1 1 1 0 1 0 0 1 ===> 11101001|  // [325]
            1 1 - - - - - - ===> 1 1 0 0 0 0 0 0 ===> 11000000|  // [325]
            1 1 1 - - - - 1      1 1 1 0 0 0 0 1      11100001|  // [325]
                                                              |  // [325]
            BIN[ 11111111111010011100000011100001 ]           |  // [325]
            CHK[ 12345678901234567890123456789032 ]           |  // [325]
            CHK[ 1_______10________20________3032 ]           |  // [325]
                                                              |  // [325]
        8x4_cen : HEX[ 0xFF99005A ]---------------------------+  // [325]
                                                              |  // [325]
            1 1 1 1 1 1 1 1      1 1 1 1 1 1 1 1      11111111|  // [325]
            1 - - 1 1 - - 1 ===> 1 0 0 1 1 0 0 1 ===> 10011001|  // [325]
            - - - - - - - - ===> 0 0 0 0 0 0 0 0 ===> 00000000|  // [325]
            - 1 - 1 1 - 1 -      0 1 0 1 1 0 1 0      01011010|  // [325]
                                                              |  // [325]
            BIN[ 11111111100110010000000001011010 ]           |  // [325]
            CHK[ 12345678901234567890123456789032 ]           |  // [325]
            CHK[ 1_______10________20________3032 ]           |  // [325]
                                                              |  // [325]
        8x4_rig : HEX[ 0xFF970387 ]---------------------------+  // [325]
                                                              |  // [325]
            1 1 1 1 1 1 1 1      1 1 1 1 1 1 1 1      11111111|  // [325]
            1 - - 1 - 1 1 1 ===> 1 0 0 1 0 1 1 1 ===> 10010111|  // [325]
            - - - - - - 1 1 ===> 0 0 0 0 0 0 1 1 ===> 00000011|  // [325]
            1 - - - - 1 1 1      1 0 0 0 0 1 1 1      10000111|  // [325]
                                                              |  // [325]
            BIN[ 11111111100101110000001110000111 ]           |  // [325]
            CHK[ 12345678901234567890123456789032 ]           |  // [325]
            CHK[ 1_______10________20________3032 ]           |  // [325]
                                                              |  // [325]
        :-----------------------------------------------------+  // [325]
                                                              |  // [325]
        IAM_VERY_TIRED_2022                                   |  // [325]
                                                              |  // [325]
    :---------------------------------------------------------+  // [325]
                                                                 // [---]
    #_8x8_ASYMMETRICAL_CAP_GRAPHICS_# :-----------------------+  // [326]
                                                              |  // [326]
                                                              |  // [326]
        +-----------+-----------+-----------+ +-----------+   |  // [326]
        |   XX_YY   |   XX_YY   |   XX_YY   | |   XX_YY   |   |  // [326]
        |   01_01   |   11_01   |   10_01   | |   00_01   |   |  // [326]
        |   D:___   |   D:___   |   D:___   | |   D:___   |   |  // [326]
        |  -------  |  -------  |  -------  | |  -------  |   |  // [326]
        |  8x4_lef  |  8x4_cen  |  8x4_rig  | |  8x4_top  |   |  // [326]
        +-----------+-----------+-----------+ +-----------+   |  // [326]
        |           |           |           | |           |   |  // [326]
        |   01_11   |   11_11   |   10_11   | |   00_11   |   |  // [326]
        |    NOT    |    NOT    |    NOT    | |    NOT    |   |  // [326]
        |           |           |           | |           |   |  // [326]
        |           |           |           | |           |   |  // [326]
        +-----------+-----------+-----------+ +-----------+   |  // [326]
        |           |           |           | |           |   |  // [326]
        |   01_10   |   11_10   |   10_10   | |   00_10   |   |  // [326]
        |    NOT    |    NOT    |    NOT    | |    NOT    |   |  // [326]
        |           |           |           | |           |   |  // [326]
        |           |           |           | |           |   |  // [326]
        +-----------+-----------+-----------+ +-----------+   |  // [326]
        +-----------+-----------+-----------+ +-----------+   |  // [326]
        |   XX_YY   |   XX_YY   |   XX_YY   | |   XX_YY   |   |  // [326]
        |   01_00   |   11_00   |   10_00   | |   00_00   |   |  // [326]
        |   D:___   |   D:___   |   D:___   | |   D:000   |   |  // [326]
        |  -------  |  -------  |  -------  | |  -------  |   |  // [326]
        |  8x4_lef  |  8x4_cen  |  8x4_rig  | |  8x4_top  |   |  // [326]
        +-----------+-----------+-----------+ +-----------+   |  // [326]
                                                              |  // [326]
        BY_ROW :                                              |  // [326]
            [ 005 ] : 01_01 : 0101 : [ 8x4_lef , 8x4_not ]    |  // [326]
            [ 013 ] : 11_01 : 1101 : [ 8x4_cen , 8x4_not ]    |  // [326]
            [ 009 ] : 10_01 : 1001 : [ 8x4_rig , 8x4_not ]    |  // [326]
            [ 001 ] : 00_01 : 0001 : [ 8x4_top , 8x4_not ]    |  // [326]
                                                              |  // [326]
            [ 007 ] : 01_11 : 0111 : [ 8x4_not , 8x4_not ]    |  // [326]
            [ 015 ] : 11_11 : 1111 : [ 8x4_not , 8x4_not ]    |  // [326]
            [ 011 ] : 10_11 : 1011 : [ 8x4_not , 8x4_not ]    |  // [326]
            [ 003 ] : 00_11 : 0011 : [ 8x4_not , 8x4_not ]    |  // [326]
                                                              |  // [326]
            [ 006 ] : 01_10 : 0110 : [ 8x4_not , 8x4_not ]    |  // [326]
            [ 014 ] : 11_10 : 1110 : [ 8x4_not , 8x4_not ]    |  // [326]
            [ 010 ] : 10_10 : 1010 : [ 8x4_not , 8x4_not ]    |  // [326]
            [ 002 ] : 00_10 : 0010 : [ 8x4_not , 8x4_not ]    |  // [326]
                                                              |  // [326]
            [ 004 ] : 01_00 : 0100 : [ 8x4_lef , 8x4_not ]    |  // [326]
            [ 012 ] : 11_00 : 1100 : [ 8x4_cen , 8x4_not ]    |  // [326]
            [ 008 ] : 10_00 : 1000 : [ 8x4_rig , 8x4_not ]    |  // [326]
            [ 000 ] : 00_00 : 0000 : [ 8x4_top , 8x4_not ]    |  // [326]
                                                              |  // [326]
        SORTED_BY_TOUCHING_VALUE :   [  #_8X4__SORTED_#  ]    |  // [326]
                                     VVVVVVVVVVVVVVVVVVVVV    |  // [326]
            [ 000 ] : 00_00 : 0000 : [ 8x4_top , 8x4_not ]    |  // [326]
            [ 001 ] : 00_01 : 0001 : [ 8x4_top , 8x4_not ]    |  // [326]
            [ 002 ] : 00_10 : 0010 : [ 8x4_not , 8x4_not ]    |  // [326]
            [ 003 ] : 00_11 : 0011 : [ 8x4_not , 8x4_not ]    |  // [326]
            [ 004 ] : 01_00 : 0100 : [ 8x4_lef , 8x4_not ]    |  // [326]
            [ 005 ] : 01_01 : 0101 : [ 8x4_lef , 8x4_not ]    |  // [326]
            [ 006 ] : 01_10 : 0110 : [ 8x4_not , 8x4_not ]    |  // [326]
            [ 007 ] : 01_11 : 0111 : [ 8x4_not , 8x4_not ]    |  // [326]
            [ 008 ] : 10_00 : 1000 : [ 8x4_rig , 8x4_not ]    |  // [326]
            [ 009 ] : 10_01 : 1001 : [ 8x4_rig , 8x4_not ]    |  // [326]
            [ 010 ] : 10_10 : 1010 : [ 8x4_not , 8x4_not ]    |  // [326]
            [ 011 ] : 10_11 : 1011 : [ 8x4_not , 8x4_not ]    |  // [326]
            [ 012 ] : 11_00 : 1100 : [ 8x4_cen , 8x4_not ]    |  // [326]
            [ 013 ] : 11_01 : 1101 : [ 8x4_cen , 8x4_not ]    |  // [326]
            [ 014 ] : 11_10 : 1110 : [ 8x4_not , 8x4_not ]    |  // [326]
            [ 015 ] : 11_11 : 1111 : [ 8x4_not , 8x4_not ]    |  // [326]
                                     ^^^^^^^^^^^^^^^^^^^^^    |  // [326]
                                     [  #_8X4__SORTED_#  ]    |  // [326]
                                                              |  // [326]
    :---------------------------------------------------------+  // [326]
                                                                 // [326]
    @TH8_LEN@ : d_to4_h02_8x4                                    // [326]
    ::::::::::: __T___H___8__ <-- Where "TH8" came from.         // [326]
                                                                 // [326]
    @NOCO@ : NO_COmma . Just a comment here to make sure I       // [326]
           : don't fuck this up. Because I have a habit          // [326]
           : of fucking that up.                                 // [326]

    #_DESIGN_QUESTION_# :-------------------------------------+  // [327]
                                                              |  // [327]
        How do we give the engine the                         |  // [327]
        capability of "representational artwork" ?            |  // [327]
                                                              |  // [327]
        Yes, I like geometric mechanical shapes.              |  // [327]
        But we need to be able to make things like :          |  // [327]
                                                              |  // [327]
        "Glass Door" , "Cabin" , "Computer Desk"              |  // [327]
        "Power Transformer" , "Gun Rack"    , "Cash Safe"     |  // [327]
        "Thorium Reactor"   , "Growing Ivy" , "Crane"         |  // [327]
        ... ETC ... cool shit you would see in a              |  // [327]
        terminator movie or generic sci-fi action movie.      |  // [327]
                                                              |  // [327]
                                                              |  // [327]
        We need enough expressiveness in the engine to        |  // [327]
        make things look like real-life objects that          |  // [327]
        people can connect with.                              |  // [327]
                                                              |  // [327]
        Fractal art looks cool. But it is very niche and      |  // [327]
        it lacks "mental stickyness".                         |  // [327]
                                                              |  // [327]
        How do we make "Things look like things" in our engine?  // [327]
                        THINGS_LOOK_LIKE_THINGS               |  // [327]
                                                              |  // [327]
        DATE[ 2022_10_06 ]KANJICODER                          |  // [327]
    :---------------------------------------------------------+  // [327]

    #_8X4_CAPPER_GRAPHICS_# :---------------------------------+  // [328]
                                                              |  // [328]
        Using these graphics to add asymmetric details        |  // [328]
        to our tiles so that it is obvious when tile          |  // [328]
        has been mirrored on the X or Y axis because          |  // [328]
        of its[ auto_tiling_method ]bits.                     |  // [328]
                                                              |  // [328]
        I think it should go ABOVE                            |  // [328]
        the lighting calculations.                            |  // [328]
                                                              |  // [328]
        @u_8th@ : Tile Divided Into 8th Chunks                |  // [328]
        @u_i8x@ : @G_I_C@ - [0-to-(8-1)] - X_AXIS             |  // [328]
        @u_i8y@ : @G_I_C@ - [0-to-(8-1)] - Y_AXIS             |  // [328]
        @u_i8i@ : @G_I_C@ - [0-to-(8-1)] - I_AXIS             |  // [328]
                                                              |  // [328]
        @G_I_C_@ : Generic_Index_Coord                        |  // [328]
        @X_AXIS@ : The x-axis, like in math.                  |  // [328]
        @Y_AXIS@ : The y-axis, like in math.                  |  // [328]
        @I_AXIS@ : 1D representation of [X,Y]                 |  // [328]
                                                              |  // [328]
        @u_h02@ :: 0 == TOP HALF , 1 == BOT HALF              |  // [328]
        @u_8x4@ :: Uint32 with 8X4 graphic                    |  // [328]
        @u_nbi@ :: Uint32 - Network_Bit_Index                 |  // [328]
        @u_abi@ :: Uint32 - Actual__Bit_Index                 |  // [328]
        @u_v02@ :: Uint32 - Value[ 0 or 1 ](TWOVALS)          |  // [328]
                                                              |  // [328]
    :---------------------------------------------------------+  // [328]

    @VIDEO_IDEA@ : Let's RECORD every single time we set   ::::  // [328]
    @VIDEOIDEA@  : a tile down into a buffer. Then we can  ::::  // [328]
    @VIDIDEA@    : replay at a faster speed to create time ::::  // [328]
    @VIDEO@      : lapse animations that we can post to    ::::  // [328]
    @VID@        : imgur and pass off as procedural anim.  ::::  // [328]

    #_DISCRETE_INTERNAL_MIRRORED_# :--------------------------+  // [329]
                                                              |  // [329]
        If the mirroring bits are turned on, this value       |  // [329]
        will FLIP the X/Y axis of discrete internal local     |  // [329]
        coordinate for us.                                    |  // [329]
                                                              |  // [329]
        Use this values INSTEAD OF "u_dil" when you want      |  // [329]
        to mirror geometry based on that                      |  // [329]
        [ auto-tile-mirroring ]bit state.                     |  // [329]
                                                              |  // [329]
        @u_dim@ : Uint32 - Discrete_Internal(local)_Mirrored  |  // [329]
                                                              |  // [329]
        @AM4_BIT_M_X@ : AutoTileMethod_BIT - Mirror_X-axis    |  // [329]
        @AM4_BIT_M_Y@ : AutoTileMethod_BIT - Mirror_Y-axis    |  // [329]
        @VFF_AM4_BIT_M_X@ : Same Meaning As[ AM4_BIT_M_X ]    |  // [329]
        @VFF_AM4_BIT_M_Y@ : Same Meaning As[ AM4_BIT_M_Y ]    |  // [329]
                                                              |  // [329]
        @c_vff_mirrors_hor@ :------------------------------+  |  // [329]
        @c_vff_mirrors_ver@ :------------------------------+  |  // [329]
                                                           |  |  // [329]
            Test bits to use on "u_vff" tile value.        |  |  // [329]
            Determines if the tile is configured to        |  |  // [329]
            mirror itself on the X or Y axis.              |  |  // [329]
                                                           |  |  // [329]
            Only applicable to geometry tiles.             |  |  // [329]
                                                           |  |  // [329]
            c_vff_mirrors_hor <==@COEQUAL@==> c_am4_2mx    |  |  // [329]
            c_vff_mirrors_ver <==@COEQUAL@==> c_am4_3my    |  |  // [329]
                                                           |  |  // [329]
            @COEQUAL@ : Co-incidentailly equal.            |  |  // [329]
                                                           |  |  // [329]
                          c_vff_mirrors_hor c_vff_mirrors_ver |  // [329]
                                          | |              |  |  // [329]
            u_vff === BIN[  1_1_1_1   1_1_1_1  ]           |  |  // [329]
            u_am4 === BIN[            1_1_1_1  ]           |  |  // [329]
                                          | |              |  |  // [329]
                                    am4_2mx am4_3my        |  |  // [329]
        :--------------------------------------------------+  |  // [329]
                                                              |  // [329]
    :---------------------------------------------------------+  // [329]
    #_PROMOTED_VARS_# :---------------------------------------+  // [329]
                                                              |  // [329]
        Variables that have been promoted from their local    |  // [329]
        scope to the top level scope of whatever function     |  // [329]
        we are currently in.                                  |  // [329]
                                                              |  // [329]
    :---------------------------------------------------------+  // [329]
    @PROMOTED_ON_THE_FIRST_DAY@ :-----------------------------+  // [329]
                                                              |  // [329]
        Can't believe this variable got promoted on the       |  // [329]
        first day on the job. Yeah, they say it's a           |  // [329]
        meritocracy , but then they pull this kind of shit.   |  // [329]
                                                              |  // [329]
        What has "u_dim" done yet?                            |  // [329]
                                                              |  // [329]
        ABSOLUTELY FUCKING NOTHING !                          |  // [329]
                                                              |  // [329]
        Yet it gets an office right next to mine?             |  // [329]
                                                              |  // [329]
        -signed : u_vff , October 6th , 2022                  |  // [329]
    :---------------------------------------------------------+  // [329]
    #_TODO_SOME_TYPE_OF_TOUCHING_MIRROR_# :-------------------+  // [329]
                                                              |  // [329]
        TAG[ next_task_touching_mirror ]                      |  // [329]
                                                              |  // [329]
        What we've just done inside of                        |  // [329]
        [ _DISCRETE_INTERNAL_MIRRORED_ ]                      |  // [329]
        section is _NOT_CORRECT_ for what                     |  // [329]
        we are trying to do.                                  |  // [329]
                                                              |  // [329]
        It isn't that we made a mistake with the math,        |  // [329]
        it is that the mathematical process I had in          |  // [329]
        mind is FUNDAMENTALLY FLAWED.                         |  // [329]
                                                              |  // [329]
        In order to get the effect I want...                  |  // [329]
        "u_dim" is needed I think...                          |  // [329]
                                                              |  // [329]
        BUT...                                                |  // [329]
                                                              |  // [329]
        We __ALSO__ need to re-map auto-tile sub tiles.       |  // [329]
                                                              |  // [329]
        We need to mirror the internals of the tiles,         |  // [329]
        but we also need to mirror the re-mapping.            |  // [329]
                                                              |  // [329]
    :---------------------------------------------------------+  // [329]
    #_ITS_WORSE_THAN_I_THOUGHT_# :----------------------------+  // [329]
                                                              |  // [329]
        We actually don't want to mirror with these bits...   |  // [329]
        WE WANT TO ROTATE!                                    |  // [329]
                                                              |  // [329]
        What are we going to do?                              |  // [329]
                                                              |  // [329]
        Having bits for both mirroring and                    |  // [329]
        rotating seem like TOO MANY BITS....                  |  // [329]
                                                              |  // [329]
        No... It makes sense... Sometimes you need to         |  // [329]
        rotate, sometimes you need to mirror.                 |  // [329]
                                                              |  // [329]
        So we need to extend our plans :                      |  // [329]
                                                              |  // [329]
        IN_ADDITION_TO[ u_am4 ]WE_NEED[ u_am6 ]               |  // [329]
        IN_ADDITION_TO[ u_vff ]WE_NEED[ u_b10 ]               |  // [329]
                                                              |  // [329]
        @u_am6@ : Uint32 - AutotileMethod - 6Bits             |  // [329]
        @u_b10@ : Uint32 - tile_value     - 10Bits            |  // [329]
                                                              |  // [329]
        @u_vb6@ : Was thinking of calling "b10"               |  // [329]
                : "tile value bits 6" but... It's not         |  // [329]
                : six bits, it is 10.                         |  // [329]
    :---------------------------------------------------------+  // [329]
    #_NPC_ENEMY_IDEA_# :--------------------------------------+  // [329]
                                                              |  // [329]
        @IDEA@ #IDEA# @FEATURE_CREEP@ #FEATURE_CREEP#         |  // [329]
                                                              |  // [329]
        Enemys that EXIST_ON_TOP of the tile on tile map.     |  // [329]
        They are like crawling in the FOREGROUDN and can      |  // [329]
        lay bombs and fuck stuff up. Little megamanx1         |  // [329]
        bomb laying spiders.                                  |  // [329]
                                                              |  // [329]
        You can never get to them, and they can never         |  // [329]
        get to you, because they are on top of the tile       |  // [329]
        map, rather than within it.                           |  // [329]
                                                              |  // [329]
    :---------------------------------------------------------+  // [329]
    #_IDEAS_FOR_OUR_GEOMETRY_BITS_# :-------------------------+  // [329]
                                                              |  // [329]
        +----------------------------------------------+      |  // [329]
        | @FORWARD_THINKING@ : Some Pre Planning Stuff |      |  // [329]
        +----------------------------------------------+      |  // [329]
                                                              |  // [329]
                      l  l   m  m  rot4                       |  // [329]
                      x  y   x  y  |  |                       |  // [329]
        [ 1__1___1__1 1__1___1__1  1__1  ....OTHER_BITS.... ] |  // [329]
        [ |<-u_v16->| |<-u_am4->|     |  ....OTHER_BITS.... ] |  // [329]
        [ |           |<-u_am6------->|  ....OTHER_BITS.... ] |  // [329]
          |                           |                       |  // [329]
          |<---- 10_BITS_TOTAL ------>|                       |  // [329]
                                                              |  // [329]
        If we wanted to keep up this scheme , we could get    |  // [329]
        3 layers worth of geometry tiles with 2 bits to       |  // [329]
        spare for whatever. ( Assuming Uint32 pixels )        |  // [329]
                                                              |  // [329]
        Let's not worry or pre-plan too much. Just            |  // [329]
        keep this in the back of your head.                   |  // [329]
                                                              |  // [329]
        Would be nice to have some background and             |  // [329]
        midground details that can be blown up.               |  // [329]
                                                              |  // [329]
    :---------------------------------------------------------+  // [329]
                                                                 // [329]
    @IDEA@ / #_LEVELPACK_CLONE_STAMP_# :----------------------+  // [329]
                                                              |  // [329]
        Make a tool that lets us copy-paste levels and        |  // [329]
        level packs. So that if we like a design but          |  // [329]
        want to diverge it from a certain point we can.       |  // [329]
                                                              |  // [329]
    :---------------------------------------------------------+  // [329]

    #_HOSPITAL_NOTES_2022_10_07_# :---------------------------+  // [330]
                                                              |  // [330]
        Gramps had breathing trouble, anyways...              |  // [330]
                                                              |  // [330]
        @to2@ : Touching Value, but only 2 bits. Because      |  // [330]
              : it is either the X-axis bits or Y-axis bits.  |  // [330]
                                                              |  // [330]
        c_mir_to2_to2 = new Uint8Array([                      |  // [330]
            0x0  //: BIN_INN[ 0_0 ]===>BIN_OUT[ 0_0 ](DEC: 0 )|  // [330]
        ,   0x2  //: BIN_INN[ 0_1 ]===>BIN_OUT[ 1_0 ](DEC: 2 )|  // [330]
        ,   0x1  //: BIN_INN[ 1_0 ]===>BIN_OUT[ 0_1 ](DEC: 1 )|  // [330]
        ,   0x3  //: BIN_INN[ 1_1 ]===>BIN_OUT[ 1_1 ](DEC: 3 )|  // [330]
        )];;                                                  |  // [330]
                    ROT_000 , ROT_090 , ROT_180 , ROT_270     |  // [330]
        TO2_TO2 ==[     0_0 ,     1_0 ,     0_1 ,     1_1 ]   |  // [330]
                                                              |  // [330]
        c_bl8_mir_to2_to2 ==> c_abi_mir_to2_to2               |  // [330]
                                                              |  // [330]
        @abi_mir@ : ActualBitIndex - Mirroring                |  // [330]
        @to2_to2@ : Touching2bits ==> Touching2bits           |  // [330]
                                                              |  // [330]
        c_abi_mir_to2_to2 === BIN[ 0x3 , 0x1 , 0x2 , 0x0 ]    |  // [330]
                                                              |  // [330]
        NOT_CORRECT_CALCULATION_mirrored_to4 = ( U32( 0 )     |  // [330]
                                                              |  // [330]
            | ((( BL8 >> (mx2 * (( to4 >> 2 )&(0x3))))&0x3)<<2)  // [330]
            | ((( BL8 >> (my2 * (( to4 >> 0 )&(0x3))))&0x3)<<0)  // [330]
        );;                                                   |  // [330]
                                                              |  // [330]
        @mx2@ : Mirror X ?   2 values , 0 or 1                |  // [330]
        @my2@ : Mirror Y ?   2 values , 0 or 1                |  // [330]
                                                              |  // [330]
        REFACTOR_THIS_NOTES_SECTION[ mx2 ]==>[ mbx ]          |  // [330]
        REFACTOR_THIS_NOTES_SECTION[ my2 ]==>[ mby ]          |  // [330]
                                                              |  // [330]
        @mbx@ : Mirror_Bit_X                                  |  // [330]
        @mby@ : Mirror_Bit_Y                                  |  // [330]
                                                              |  // [330]
        //: Here for reference, but not going to              |  // [330]
        //: do it this way, we have a better way.             |  // [330]
        rotated_90degrees_to4 =( u32( 0x0 )                   |  // [330]
                                                              |  // [330]
        |   (((to4 >> 0)&0x1)<< 3 )                           |  // [330]
        |   (((to4 >> 1)&0x1)<< 2 )                           |  // [330]
        |   (((to4 >> 3)&0x1)<< 1 )                           |  // [330]
        |   (((to4 >> 2)&0x1)<< 0 )                           |  // [330]
        );;                                                   |  // [330]
                                                              |  // [330]
        abi_rot_x_0 = BIN[ 0x0 , 0x2 , 0x1 , 0x3 ]            |  // [330]
        abi_rot_x_1 = BIN[ 0x1 , 0x3 , 0x0 , 0x2 ]            |  // [330]
        abi_rot_y_0 = BIN[ 0x3 , 0x0 , 0x2 , 0x1 ]            |  // [330]
        abi_rot_y_1 = BIN[ 0x2 , 0x1 , 0x3 , 0x0 ]            |  // [330]
                                                              |  // [330]
                                                              |  // [330]
        ASS( ( BL8 >> (0*2)) & 0x3 === 0x0 );                 |  // [330]
        ASS( ( BL8 >> (1*2)) & 0x3 === 0x2 );                 |  // [330]
        ASS( ( BL8 >> (2*2)) & 0x3 === 0x1 );                 |  // [330]
        ASS( ( BL8 >> (3*2)) & 0x3 === 0x3 );                 |  // [330]
                                                              |  // [330]
        mirrored_t04 = ( u_0                                  |  // [330]
                                                              |  // [330]
        |(  ((BL8 >> (((to4>>u_2)&0x3)*mx2*2))&0x3)<<2 )      |  // [330]
        |(  ((BL8 >> (((to4>>u_0)&0x3)*my2*2))&0x3)<<0 )      |  // [330]
                                                              |  // [330]
        );;                                                   |  // [330]
                                                              |  // [330]
        BL8 = Numbers[ 0x3 0x1  0x2  0x0 ]                    |  // [330]
        BL8 =  Binary[ 11   01   10   00 ]                    |  // [330]
        BL8 =  Binary[ 11011000          ]                    |  // [330]
        BL8 = DECIMAL[ 216               ]                    |  // [330]
                                                              |  // [330]
        Hospital_TODO_NOTE_LIST :                             |  // [330]
            HTNL_001 : Miirroring                             |  // [330]
            HTNL_002 : Rotation                               |  // [330]
            HTNL_003 : GoogleAppEngine                        |  // [330]
            HTNL_004 : Save+Load Locally                      |  // [330]
                                                              |  // [330]
        c_ro3_to2_to2 = new Uint8Array([                      |  // [330]
                                                              |  // [330]
            ... 16 touching values                            |  // [330]
                &                                             |  // [330]
                4 rotational states                           |  // [330]
                ==                                            |  // [330]
                64 entry lookup table.                        |  // [330]
            ...                                               |  // [330]
                FUCK THAT !!                                  |  // [330]
        ]);;                                                  |  // [330]
                                                              |  // [330]
        "ro3" ARE "r03"  ... BOTH FUCKING WRONG.              |  // [330]
        "ro4" __NOT__ "r04"  ( ROtation , 4 values, 0,1,2,3 ) |  // [330]
        "to2" __NOT__ "to2"  ( TOuching , 2 bits )            |  // [330]
                                                              |  // [330]
                touch_min                                     |  // [330]
                     |                                        |  // [330]
                  +-----+                                     |  // [330]
        touch_min | to2 | touch_max                           |  // [330]
                  +-----+                                     |  // [330]
                     |                                        |  // [330]
                touch_max                                     |  // [330]
                                                              |  // [330]
        GEOM_BITS_R_G[ 1111 1111 1  111 1111]                 |  // [330]
                       v16   am4_5  | @7BAV@|                 |  // [330]
        GEOM_BITS_B_A[ ???? ???? ???? ???? ]<--@DGAOYS@       |  // [330]
                                                              |  // [330]
        @7BAV@ : Seven Bit Ascii Decal Stamp Value.           |  // [330]
        @am4_5 : AM4 / AM5 value depending on if youu         |  // [330]
               : are looking at 4 or 5 bits.                  |  // [330]
                                                              |  // [330]
        @DGAOYS@ : Dont_Get_Ahead_Of_Your_Self                |  // [330]
                 : ( Planning too far into the future )       |  // [330]
                                                              |  // [330]
        IAM_VERY_TIRED_2022_10_07                             |  // [330]
                                                              |  // [330]
        #_FRAGGER_BRUSH_# :--------------------------------+  |  // [330]
        #_FRAGMENTATION_BRUSH_# :--------------------------+  |  // [330]
                                                           |  |  // [330]
            A brush that randomizes the auto-tile mask     |  |  // [330]
            value of the tiles, but does __NOT__ change    |  |  // [330]
            the core[ v16 ]tile value of the tile.         |  |  // [330]
                                                           |  |  // [330]
            +---+---+---+---+   +---+---+---+---+          |  |  // [330]
            |               |   |               |          |  |  // [330]
            +   +   +   +   +   +   +---+---+---+          |  |  // [330]
            |               |   |   |   |   |   |          |  |  // [330]
            +   +   +   +   +   +   +---+---+---+          |  |  // [330]
            |               |   |           |   |          |  |  // [330]
            +   +   +   +   +   +   +---+---+---+          |  |  // [330]
            |               |   |   |   |   |   |          |  |  // [330]
            +---+---+---+---+   +---+---+---+---+          |  |  // [330]
        :--------------------------------------------------+  |  // [330]
        :--------------------------------------------------+  |  // [330]
        #_OFFICIAL_GAME_PATHS_#:---------------------------+  |  // [330]
            5_X_5 chunk of world map cells :               |  |  // [330]
                                                           |  |  // [330]
            [ ][ ][ ][ ][ ]  We subdivide the world into   |  |  // [330]
            [ ][ ][ ][ ][ ]  different "rings". The        |  |  // [330]
            [ ][ ][ ][ ][ ]  center is "Ring_0".           |  |  // [330]
            [ ][ ][ ][ ][ ]                                |  |  // [330]
            [ ][ ][ ][ ][ ]  With each new ring, you get   |  |  // [330]
            VVVVVVVVVVVVVVV  access to more and more       |  |  // [330]
            VVVVVVVVVVVVVVV  blocks. This will force good  |  |  // [330]
            VVVVVVVVVVVVVVV  progressive level design that |  |  // [330]
            VVVVVVVVVVVVVVV  introduces 1 new thing        |  |  // [330]
            VVVVVVVVVVVVVVV  per ring.                     |  |  // [330]
            +-----------------------------+                |  |  // [330]
            | [ ]   [ ]   [ ]   [ ]   [ ] |                |  |  // [330]
            |     +-----------------+     |                |  |  // [330]
            | [ ] | [ ]   [ ]   [ ] | [ ] |                |  |  // [330]
            |     |     +-----+     |     |                |  |  // [330]
            | [ ] | [ ] | [ ] | [ ] | [ ] |                |  |  // [330]
            |     |     +-----+     |     |                |  |  // [330]
            | [ ] | [ ]   [ ]   [ ] | [ ] |                |  |  // [330]
            |     +-----------------+     |                |  |  // [330]
            | [ ]   [ ]   [ ]   [ ]   [ ] |                |  |  // [330]
            +-----------------------------+                |  |  // [330]
                                                           |  |  // [330]
            Official Game Paths :                          |  |  // [330]
            NORTH : Has address aliases like "N_100"       |  |  // [330]
            SOUTH : Has address aliases like "S_100"       |  |  // [330]
            EAST  : Has address aliases like "E_100"       |  |  // [330]
            WEST  : Has address aliases like "W_100"       |  |  // [330]
                                                           |  |  // [330]
                         NORTH                             |  |  // [330]
            +-----------+-----+-----------+                |  |  // [330]
            | [ ]   [ ] | [ ] | [ ]   [ ] |                |  |  // [330]
            |     +-----|     |-----+     |                |  |  // [330]
            | [ ] | [ ] | [ ] | [ ] | [ ] |                |  |  // [330]
            +-----------+     +-----------+                |  |  // [330]
        EAST| [ ]   [ ]   [ ]   [ ]   [ ] |WEST            |  |  // [330]
            +-----------+     +-----------+                |  |  // [330]
            | [ ] | [ ] | [ ] | [ ] | [ ] |                |  |  // [330]
            |     +-----|     |-----+     |                |  |  // [330]
            | [ ]   [ ] | [ ] | [ ]   [ ] |                |  |  // [330]
            +-----------+-----+-----------+                |  |  // [330]
                         SOUTH                             |  |  // [330]
                                                           |  |  // [330]
            The official game paths do not "meander".      |  |  // [330]
            They cut straight through the center of the    |  |  // [330]
            worlmap horizontally and vertically.           |  |  // [330]
                                                           |  |  // [330]
            Yes, it could be more interesting if the       |  |  // [330]
            paths meander, but it wouldn't make for        |  |  // [330]
            good linear game play.                         |  |  // [330]
                                                           |  |  // [330]
            Also, the player is less likely to get         |  |  // [330]
            lost.                                          |  |  // [330]
                                                           |  |  // [330]
            The EAST+WEST is like our game's "Main Street".|  |  // [330]
                                                           |  |  // [330]
            The SOUTH+NORTH is like our game's I_95.       |  |  // [330]
                                                           |  |  // [330]
            @I_95@ : The Interstate, I-95.                 |  |  // [330]
        :--------------------------------------------------+  |  // [330]
        #WHY_SHADER_7_HAS_ARTIFACTS_#:---------------------+  |  // [330]
                                                           |  |  // [330]
            |<---- 7 discrete units --->|                  |  |  // [330]
            +---+---+---+---+---+---+---+                  |  |  // [330]
            |   |   |   |   |   |   |   |                  |  |  // [330]
            +---+---+---+---+---+---+---+                  |  |  // [330]
            |   |   |   |   |   |   |   |                  |  |  // [330]
            +---+---+---+---+---+---+---+                  |  |  // [330]
            |   |   |   |   |   |   |   |                  |  |  // [330]
            +---+---+---+---+---+---+---+                  |  |  // [330]
            |   |   |   |   |   |   |   |                  |  |  // [330]
            +---+---+---+---+---+---+---+                  |  |  // [330]
            |   |   |   |   |   |   |   |                  |  |  // [330]
            +---+---+---+---+---+---+---+                  |  |  // [330]
            |   |   |   |   |   |   |   |                  |  |  // [330]
            +---+---+---+---+---+---+---+                  |  |  // [330]
            |   |   |   |   |   |   |   |                  |  |  // [330]
            +---+---+---+---+---+---+---+                  |  |  // [330]
                                                           |  |  // [330]
            If we try to divide this into 4ths we get...   |  |  // [330]
                                                           |  |  // [330]
            7/4 == 1.75 === 1                              |  |  // [330]
                                                           |  |  // [330]
                                                           |  |  // [330]
            So... When we try to calculate what 4th we     |  |  // [330]
            are in of the tile by dividing the discrete    |  |  // [330]
            internal units of the tile we get an out of    |  |  // [330]
            bound artifact region almost as big as the     |  |  // [330]
            non-artifact region.                           |  |  // [330]
                                                           |  |  // [330]
            This is only an example problem. The artifact  |  |  // [330]
            region is probably much smaller since we are   |  |  // [330]
            working with 8,000 and change discrete units   |  |  // [330]
            for the smallest tile size.                    |  |  // [330]
                                                           |  |  // [330]
            +---+---+---+---+---+---+---+                  |  |  // [330]
            | 0 |   |   |   |           |                  |  |  // [330]
            +---+---+---+---+           +                  |  |  // [330]
            |   | 1 |   |   |           |                  |  |  // [330]
            +---+---+---+---+           +                  |  |  // [330]
            |   |   | 2 |   |           |                  |  |  // [330]
            +---+---+---+---+           +                  |  |  // [330]
            |   |   |   | 3 |           |                  |  |  // [330]
            +---+---+---+---+---+---+---+                  |  |  // [330]
            |               |           |                  |  |  // [330]
            +               +           +                  |  |  // [330]
            |               |   [4,4]   |                  |  |  // [330]
            +               +   @OOB@   +                  |  |  // [330]
            |               |           |                  |  |  // [330]
            +---+---+---+---+---+---+---+                  |  |  // [330]
                                                           |  |  // [330]
            @OOB@ : Out Of Bounds                          |  |  // [330]
                                                           |  |  // [330]
            HOW TO FIX : Eventually we need to round       |  |  // [330]
            "c_du0" down to the nearest power of two.      |  |  // [330]
                                                           |  |  // [330]
            And then adjust all the other power of 2       |  |  // [330]
            tile sizes accordingly.                        |  |  // [330]
                                                           |  |  // [330]
            This will add artifacts to shader #6 , but     |  |  // [330]
            shader #6 is slow anyways. So it has less      |  |  // [330]
            priority than future drafts.                   |  |  // [330]
                                                           |  |  // [330]
            Shader #6 divides tiles into 17 rings.         |  |  // [330]
            Once c_du0 is a power of 2, c_du0 will no      |  |  // [330]
            longer be evenly divisible by 17.              |  |  // [330]
                                                           |  |  // [330]
        :--------------------------------------------------+  |  // [330]
        #_LEVEL_PACK_BIOME_# :-----------------------------+  |  // [330]
                                                           |  |  // [330]
            The last 8 tiles will change what they are     |  |  // [330]
            depending on what levelpack biome is set.      |  |  // [330]
            These tiles were planned to be physics and     |  |  // [330]
            combustable tiles. Which is going to be very   |  |  // [330]
            hard to implement. Allowing to change their    |  |  // [330]
            meaining depending on what "biome" we are in   |  |  // [330]
            lets me use them for things that would be      |  |  // [330]
            easier to implement.                           |  |  // [330]
                                                           |  |  // [330]
            Keeping SOME of the tiles the same             |  |  // [330]
            (the first 8 tiles in our v16 values )         |  |  // [330]
            allows the worldmap to maintain                |  |  // [330]
            some level of coherency.                       |  |  // [330]
                                                           |  |  // [330]
            RELATIVE_INDEX_001 : falmarb                   |  |  // [330]
            RELATIVE_INDEX_002 : falbeam                   |  |  // [330]
            RELATIVE_INDEX_003 : faliron                   |  |  // [330]
            RELATIVE_INDEX_004 : godvent                   |  |  // [330]
            RELATIVE_INDEX_005 : godiron                   |  |  // [330]
            RELATIVE_INDEX_006 : comsoli                   |  |  // [330]
            RELATIVE_INDEX_007 : comliqu                   |  |  // [330]
            RELATIVE_INDEX_008 : comvapo                   |  |  // [330]
                                                           |  |  // [330]
            @DRAWBIO@ : NON_LETHAL artsy biome.            |  |  // [330]
            @VINEBIO@ : NON_LETHAL stardew valley biome.   |  |  // [330]
            @PUNKBIO@ : __LETHAL__ : Punk Rock Biome       |  |  // [330]
            @KILLBIO@ : __LETHAL__ : Puzzle Trap Biome     |  |  // [330]
                                                           |  |  // [330]
            BIOME_000 : DRAW BIOME ( DRAWBIO )             |  |  // [330]
                                   ( 1234567 )             |  |  // [330]
                An "ArtBiome" where highest 8 tiles        |  |  // [330]
                values are used for some type of           |  |  // [330]
                artistic BACKGROUND for the MIDGROUND.     |  |  // [330]
                                                           |  |  // [330]
                Easiest to implement because it is         |  |  // [330]
                a rendering behavior. Player walks         |  |  // [330]
                in front of these tiles.                   |  |  // [330]
                                                           |  |  // [330]
                CLASSIC BOMBS DESTROY TILES                |  |  // [330]
                BOX BOMBS SPLATTER PAINT ON WALLS.         |  |  // [330]
                                                           |  |  // [330]
                Classic bombs don't kill you here.         |  |  // [330]
                                                           |  |  // [330]
                You have a "spark power" that allows       |  |  // [330]
                you to blast through tiles. But...         |  |  // [330]
                Tiles "self heal" and come back            |  |  // [330]
                over time.                                 |  |  // [330]
                                                           |  |  // [330]
            BIOME_001 : VINE BIOME ( VINEBIO )             |  |  // [330]
                                   ( 1234567 )             |  |  // [330]
                The highest 8 tiles become growing vines   |  |  // [330]
                of different types that produce different  |  |  // [330]
                fruits.                                    |  |  // [330]
                                                           |  |  // [330]
                The BOMB layer becomes either FRUIT        |  |  // [330]
                or WATER SPRINKLERS that can chain react.  |  |  // [330]
                                                           |  |  // [330]
            BIOME_002 : PUNK BIOME ( PUNKBIO )             |  |  // [330]
                                   ( 1234567 )             |  |  // [330]
                AKA : Anarchy Biome.                       |  |  // [330]
                LETHAL Anarchist Biome                     |  |  // [330]
                                                           |  |  // [330]
                Like "ArtBiome" but instead of having      |  |  // [330]
                "spark power" you have the power to        |  |  // [330]
                set "classic bombs" and "box bombs".       |  |  // [330]
                                                           |  |  // [330]
                Classic Bombs destroy tiles.               |  |  // [330]
                Box Bombs Leave Paint.                     |  |  // [330]
                                                           |  |  // [330]
                Bombs WILL KILL YOU HERE.                  |  |  // [330]
                                                           |  |  // [330]
            BIOME_003 : KILL BIOME ( KILLBIO )             |  |  // [330]
                                                           |  |  // [330]
                Tetris of death biome. Highest 8           |  |  // [330]
                materials have the originally planned      |  |  // [330]
                functionality.                             |  |  // [330]
                                                           |  |  // [330]
                You cannot set bombs.                      |  |  // [330]
                Classic Bombs : Lethal                     |  |  // [330]
                Box     Bombs : Also Lethal                |  |  // [330]
                                                           |  |  // [330]
                "KILL_BIOME"/"KILLBIO" is meant to have    |  |  // [330]
                the same ( +expanded ) mechanics as        |  |  // [330]
                Atomic Alice game.                         |  |  // [330]
                                                           |  |  // [330]
            FOUR_BIOMES ===[ 0|1|2|3 ]]===2 bits           |  |  // [330]
                                                           |  |  // [330]
        @DEATHBIO@ / @DEATH_BIOME@ : FIX===> KILLBIO       |  |  // [330]
        @ARTSYBIO@ / @ART_BIOME@  :: FIX===> DRAWBIO       |  |  // [330]
        @TETRISBIO@/ @TETRIS_BIOME@: FIX===> KILLBIO       |  |  // [330]
        @GROWBIO@  / @GROW_BIOME@ :: FIX===> VINEBIO       |  |  // [330]
        @CREEPBIO@ / @CREEP_BIOME@:: FIX===> EERYBIO       |  |  // [330]
                                          OR VINEBIO       |  |  // [330]
        @CREEPYBIO@/ @CREEPY_BIOME@: FIX===> EERYBIO       |  |  // [330]
                                          OR VINEBIO       |  |  // [330]
        :--------------------------------------------------+  |  // [330]
        #_FOUR_BIOMES_FOUR_GAME_PATHS_# :------------------+  |  // [330]
                                                           |  |  // [330]
            Since we have "north,south,east,west"          |  |  // [330]
            official game paths, and 4 biomes....          |  |  // [330]
                                                           |  |  // [330]
            Why not make each of the 4 game paths          |  |  // [330]
            consistently one of these biomes?              |  |  // [330]
                                                           |  |  // [330]
                                                           |  |  // [330]
            LEFT /WEST  : DRAWBIO ( lowest priority        )  |  // [330]
            UP   /NORTH : VINEBIO ( vines grow upwards     )  |  // [330]
            RIGHT /EAST : KILLBIO ( Classic Side Scroller  )  |  // [330]
            DOWN /SOUTH : PUNKBIO ( falling could be       )  |  // [330]
                                  ( action packed and also )  |  // [330]
                                  ( allows to read writing )  |  // [330]
                                  ( on walls as you fall.  )  |  // [330]
                                                           |  |  // [330]
        :--------------------------------------------------+  |  // [330]
        #_AM4_VS_AM5_VS_AM6_# :----------------------------+  |  // [330]
                                                           |  |  // [330]
            WE_ARE_GOING_WITH_AM5 ,                        |  |  // [330]
                                                           |  |  // [330]
                I like the idea of being able to toggle    |  |  // [330]
                the "R" key to turn off "rotation".        |  |  // [330]
                     ^                                     |  |  // [330]
                     |                                     |  |  // [330]
                   @_R_DESIGN_METHOD_@ : (Toggling R)      |  |  // [330]
                                                           |  |  // [330]
                If m_x & m_y are both OFF this will        |  |  // [330]
                effectively be just a way to force         |  |  // [330]
                divisions into the auto tiling where       |  |  // [330]
                I desire them.                             |  |  // [330]
                                                           |  |  // [330]
    @AM4@   AM4[ l_x , l_y , m_x , m_y             ]       |  |  // [330]
    @AM5@   AM5[ l_x , l_y , m_x , m_y , rot       ]       |  |  // [330]
    @AM6@   AM6[ l_x , l_y , m_x , m_y , rb0 , rb1 ]       |  |  // [330]
                                                           |  |  // [330]
            @rot@ : Makes [m_x,m_y] be interpreted as      |  |  // [330]
                  : a rotation, rather than mirroring.     |  |  // [330]
            @rb0@ : Rotation Bit , 1st of two.             |  |  // [330]
            @rb1@ : Rotation Bit , 2nd of two.             |  |  // [330]
        :--------------------------------------------------+  |  // [330]
        #_NIX_THIS_BIOME_# :-------------------------------+  |  // [330]
                                                           |  |  // [330]
            This is a neat idea. But I think I want to     |  |  // [330]
            sub-divide biomes into ones that kill you      |  |  // [330]
            and ones that dont.                            |  |  // [330]
                                                           |  |  // [330]
            BIOME_### : EERY BIOME ( EERYBIO )             |  |  // [330]
                                   ( 1234567 )             |  |  // [330]
                Creepy Biome (easiest)                     |  |  // [330]
                The 8 highest tile values                  |  |  // [330]
                of the 16 are conceptually in              |  |  // [330]
                the "background" and do not                |  |  // [330]
                interact with user. They                   |  |  // [330]
                creep around like snakes.                  |  |  // [330]
        :--------------------------------------------------+  |  // [330]
        #_ROTATION_OR_MIRROR_# :---------------------------+  |  // [330]
        #_MIRROR_OR_ROTATION_# :---------------------------+  |  // [330]
                                                           |  |  // [330]
        I think we can get pretty decent amount of         |  |  // [330]
        expression with just 3 bits that let us            |  |  // [330]
        either mirror on x|y or rotate by                  |  |  // [330]
        [ 0 , 90 , 180 , 270 ] degrees.                    |  |  // [330]
                                                           |  |  // [330]
        ( 3 bits === 0 -to- 5 decimal === 6 versions )     |  |  // [330]
        ( of any one tile.                           )     |  |  // [330]
                                                           |  |  // [330]
        +------+------+------+------+------+------+------+ |  |  // [330]
        |[ ][ ]|[ ][ ]|[ ][ ]|[ ][ ]|[ ][ ]|[ ][ ]|[ ][ ]| |  |  // [330]
        |[ ]   |      |      |      |      |      |   [ ]| |  |  // [330]
        +------+------+------+------+------+------+------+ |  |  // [330]
        |[ ]   |             |   [ ]|             |   [ ]| |  |  // [330]
        |[ ]   |             |   [ ]|             |   [ ]| |  |  // [330]
        +------+             +------+             +------+ |  |  // [330]
        |[ ]   |             |   [ ]|             |   [ ]| |  |  // [330]
        |[ ]   |             |   [ ]|             |   [ ]| |  |  // [330]
        +------+------+------+------+------+------+------+ |  |  // [330]
        |[ ]   |[ ][ ]|[ ][ ]|      |             |   [ ]| |  |  // [330]
        |[ ]   |      |      |      |[ ][ ]|[ ][ ]|   [ ]| |  |  // [330]
        +------+------+------+------+------+------+------+ |  |  // [330]
        |[ ]   |             |[ ]   |             |   [ ]| |  |  // [330]
        |[ ]   |             |[ ]   |             |   [ ]| |  |  // [330]
        +------+             +------+             +------+ |  |  // [330]
        |[ ]   |             |[ ]   |             |   [ ]| |  |  // [330]
        |[ ]   |             |[ ]   |             |   [ ]| |  |  // [330]
        +------+------+------+------+------+------+------+ |  |  // [330]
        |[ ]   |      |      |      |      |      |   [ ]| |  |  // [330]
        |[ ][ ]|[ ][ ]|[ ][ ]|[ ][ ]|[ ][ ]|[ ][ ]|[ ][ ]| |  |  // [330]
        +------+------+------+------+------+------+------+ |  |  // [330]
                                                           |  |  // [330]
        :--------------------------------------------------+  |  // [330]
        #_TO4_ROTATED_GRAPH_PAPER_WORK_# :-----------------+  |  // [330]
                                                           |  |  // [330]
            @WRONG_FUCKING_MATH@ :                         |  |  // [330]
                                                           |  |  // [330]
                Rotation requires knowledge of both        |  |  // [330]
                axis values to change 1 axis value.        |  |  // [330]
                Thus[ to4_rotated ]formula cannot          |  |  // [330]
                possibly be correct.                       |  |  // [330]
                                                           |  |  // [330]
            ABI_X_0 == 3  <<< Inside t04 value             |  |  // [330]
            ABI_X_1 == 2  <<< Inside t04 value             |  |  // [330]
            ABI_y_0 == 1  <<< Inside t04 value             |  |  // [330]
            ABI_y_1 == 0  <<< Inside t04 value             |  |  // [330]
                                                           |  |  // [330]
            abi_rot_x_0 = BIN[ 0x0 , 0x2 , 0x1 , 0x3 ]     |  |  // [330]
            abi_rot_x_1 = BIN[ 0x1 , 0x3 , 0x0 , 0x2 ]     |  |  // [330]
            abi_rot_y_0 = BIN[ 0x3 , 0x0 , 0x2 , 0x1 ]     |  |  // [330]
            abi_rot_y_1 = BIN[ 0x2 , 0x1 , 0x3 , 0x0 ]     |  |  // [330]
                          VVV                              |  |  // [330]
                          BIN[ 0_0   1_0   0_1   1_1 ]     |  |  // [330]
                          BIN[ 0_1   1_1   0_0   1_0 ]     |  |  // [330]
                          BIN[ 1_1   0_0   1_0   0_1 ]     |  |  // [330]
                          BIN[ 1_0   0_1   1_1   0_0 ]     |  |  // [330]
                          VVV                              |  |  // [330]
                          BIN[ 00   10   01   11 ]         |  |  // [330]
                          BIN[ 01   11   00   10 ]         |  |  // [330]
                          BIN[ 11   00   10   01 ]         |  |  // [330]
                          BIN[ 10   01   11   00 ]         |  |  // [330]
                          VVV                              |  |  // [330]
                          BIN[ 00100111 ]HEX[ 0x27 ]abi_rot_x_0  // [330]
                          BIN[ 01110010 ]HEX[ 0x72 ]abi_rot_x_1  // [330]
                          BIN[ 11001001 ]HEX[ 0xC9 ]abi_rot_y_0  // [330]
                          BIN[ 10011100 ]HEX[ 0x9C ]abi_rot_y_1  // [330]
                                                           |  |  // [330]
            #define RX0  abi_rot_x_0                       |  |  // [330]
            #define RX1  abi_rot_x_1                       |  |  // [330]
            #define RY0  abi_rot_y_0                       |  |  // [330]
            #define RY1  abi_rot_y_1                       |  |  // [330]
                                                           |  |  // [330]
            to4_rotated =(                                 |  |  // [330]
                                                           |  |  // [330]
            | (  ((to4 >> ABI_X_0)&0x1) << ( RX0 >>(r04*2))  )|  // [330]
            | (  ((to4 >> ABI_X_1)&0x1) << ( RX1 >>(r04*2))  )|  // [330]
            | (  ((to4 >> ABI_y_0)&0x1) << ( RY0 >>(r04*2))  )|  // [330]
            | (  ((to4 >> ABI_y_1)&0x1) << ( RY1 >>(r04*2))  )|  // [330]
            );;                                            |  |  // [330]
                                                           |  |  // [330]
        :--------------------------------------------------+  |  // [330]
        #_AUTO_TILE_ROTATION_EXAMPLES_# :------------------+  |  // [330]
                                                           |  |  // [330]
                                                           |  |  // [330]
        +---+---+---+ +---+                                |  |  // [330]
        |N_0|   |   | |V_0|                                |  |  // [330]
        +---+---+---+ +---+                                |  |  // [330]
        |   |   |   | |   |                                |  |  // [330]
        +---+---+---+ +---+                                |  |  // [330]
        |   |   |   | |   |                                |  |  // [330]
        +---+---+---+ +---+                                |  |  // [330]
        +---+---+---+ +---+                                |  |  // [330]
        |H_0|   |   | |DTM|                                |  |  // [330]
        +---+---+---+ +---+                                |  |  // [330]
                                                           |  |  // [330]
                                                           :  |  // [330]
        ///////////////////////////////////////////////////////  // [336][--------]
        +---+---+---+ +---+---+---+ +---+---+---+ +---+---+---+  // [330][--------]
        |N_0|   |   | |   |   |N_1| |   |   |   | |   |   |   |  // [330][--------]
        +---+---+---+ +---+---+---+ +---+---+---+ +---+---+---+  // [330][--------]
        |   |   |   | |   |   |   | |   |   |   | |   |   |   |  // [330][--------]
        +---+---+---+ +---+---+---+ +---+---+---+ +---+---+---+  // [330][--------]
        |   |   |   | |   |   |   | |   |   |N_2| |N_3|   |   |  // [330][--------]
        +---+---+---+ +---+---+---+ +---+---+---+ +---+---+---+  // [330][--------]
                           X_X Y_Y                        |   |  // [336][MOV][330]
            N_0_TO4 ==BIN[ 0_1 0_1 ]                      |   |  // [336][MOV][330]
            N_1_TO4 ==BIN[ 1_0 0_1 ]                      |   |  // [336][MOV][330]
            N_2_TO4 ==BIN[ 1_0 1_0 ]                      |   |  // [336][MOV][330]
            N_3_TO4 ==BIN[ 0_1 1_0 ]                      |   |  // [336][MOV][330]
                                                          |   |  // [336][MOV][330]
        ///////////////////////////////////////////////////////  // [336][--------]
                                                              |  // [336]
                    ROT_000 , ROT_090 , ROT_180 , ROT_270     |  // [330]
        TO2_INNPUT[     0_0 ,     0_1 ,     1_0 ,     1_1 ]   |  // [330]
        TO2_OUTPUT[     0_0 ,     1_0 ,     0_1 ,     1_1 ]   |  // [330]
        TO2_TO2 ==[     0_0 ,     1_0 ,     0_1 ,     1_1 ]   |  // [330]
                                                              |  // [330]
        TO2_TO2 IS FUCKING WRONG, looking at these notes...   |  // [330]
        You can't use one lookup table like this to rotate.   |  // [330]
                                                          |   |  // [330]
                                                          |   |  // [330]
        +---+                   +---+                     |   |  // [330]
        |V_0|                   |   |                     |   |  // [330]
        +---+   +---+---+---+   +---+   +---+---+---+     |   |  // [330]
        |   |   |   |   |V_1|   |   |   |V_3|   |   |     |   |  // [330]
        +---+   +---+---+---+   +---+   +---+---+---+     |   |  // [330]
        |   |                   |V_2|                     |   |  // [330]
        +---+                   +---+                     |   |  // [330]
                           X_X Y_Y                        |   |  // [330]
            V_0_TO4 ==BIN[ 0_0 0_1 ]                      |   |  // [330]
            V_1_TO4 ==BIN[ 1_0 0_0 ]                      |   |  // [330]
            V_2_TO4 ==BIN[ 0_0 1_0 ] #_HOT_MATH_IS_WRONG_#|   |  // [336][330]
            V_3_TO4 ==BIN[ 0_1 0_0 ]                      |   |  // [330]
                                                          |   |  // [330]
                        +---+                  +---+      |   |  // [330]
                        |H_1|                  |   |      |   |  // [330]
        +---+---+---+   +---+   +---+---+---+  +---+      |   |  // [330]
        |H_0|   |   |   |   |   |   |   |H_2|  |   |      |   |  // [330]
        +---+---+---+   +---+   +---+---+---+  +---+      |   |  // [330]
                        |   |                  |H_3|      |   |  // [330]
                        +---+                  +---+      |   |  // [330]
                                                          |   |  // [330]
                           X_X Y_Y                        |   |  // [330]
            H_0_TO4 ==BIN[ 0_1 0_0 ]                      |   |  // [330]
            H_1_TO4 ==BIN[ 0_0 0_1 ]                      |   |  // [330]
            H_2_TO4 ==BIN[ 1_0 0_0 ]                      |   |  // [330]
            H_3_TO4 ==BIN[ 0_0 1_0 ]                      |   |  // [330]
                                                          :   :  // [330]
        +---+---+---+ +---+---+---+ +---+---+---+ +---+---+---+  // [330]
        |000|   |   | |   |   |090| |   |   |   | |   |   |   |  // [330]
        +---+---+---+ +---+---+---+ +---+---+---+ +---+---+---+  // [330]
        |   |C_0|   | |   |C_1|   | |   |C_2|   | |   |C_3|   |  // [330]
        +---+---+---+ +---+---+---+ +---+---+---+ +---+---+---+  // [330]
        |   |   |   | |   |   |   | |   |   |180| |270|   |   |  // [330]
        +---+---+---+ +---+---+---+ +---+---+---+ +---+---+---+  // [330]
                                                          :   :  // [330]
                           X_X Y_Y                        |   |  // [330]
            C_0_TO4 ==BIN[ 1_1 1_1 ]                      |   |  // [330]
            C_1_TO4 ==BIN[ 1_1 1_1 ]                      |   |  // [330]
            C_2_TO4 ==BIN[ 1_1 1_1 ]                      |   |  // [330]
            C_3_TO4 ==BIN[ 1_1 1_1 ]                      |   |  // [330]
                                                          |   |  // [330]
        +---+                   +---+                     |   |  // [330]
        |000|                   |   |                     |   |  // [330]
        +---+   +---+---+---+   +---+   +---+---+---+     |   |  // [330]
        |VC0|   |   |VC1|090|   |VC2|   |270|VC3|   |     |   |  // [330]
        +---+   +---+---+---+   +---+   +---+---+---+     |   |  // [330]
        |   |                   |180|                     |   |  // [330]
        +---+                   +---+                     |   |  // [330]
                                                          |   |  // [330]
                           X_X Y_Y                        |   |  // [330]
            VC0_TO4 ==BIN[ 0_0 1_1 ]  ( Vertical_Center_000 ) |  // [330]
            VC1_TO4 ==BIN[ 1_1 0_0 ]  ( Vertical_Center_001 ) |  // [330]
            VC2_TO4 ==BIN[ 0_0 1_1 ]  ( Vertical_Center_002 ) |  // [330]
            VC3_TO4 ==BIN[ 1_1 0_0 ]  ( Vertical_Center_003 ) |  // [330]
                                                          |   |  // [330]
        ADDED_FOR_COMPLETENESS_IN_VIDEO_3_3_5 :---------+ |   |  // [335]
                                                        | |   |  // [335]
                        +---+                   +---+   | |   |  // [335]
                        |   |                   |270|   | |   |  // [335]
        +---+---+---+   +---+   +---+---+---+   +---+   | |   |  // [335]
        |   |HC0|000|   |HC1|   |180|HC2|   |   |HC3|   | |   |  // [335]
        +---+---+---+   +---+   +---+---+---+   +---+   | |   |  // [335]
                        |090|                   |   |   | |   |  // [335]
                        +---+                   +---+   | |   |  // [335]
                           X_X Y_Y                      | |   |  // [335]
            HC0_TO4 ==BIN[ 1_1 0_0 ]( Hor_Cen_000 )     | |   |  // [335]
            HC1_TO4 ==BIN[ 0_0 1_1 ]( Hor_Cen_001 )     | |   |  // [335]
            HC2_TO4 ==BIN[ 1_1 0_0 ]( Hor_Cen_002 )     | |   |  // [335]
            HC3_TO4 ==BIN[ 0_0 1_1 ]( Hor_Cen_003 )     | |   |  // [335]
        :-----------------------------------------------+ |   |  // [335]
        Summary :                                         |   |  // [330]
                                                          |   |  // [330]
            Rotation require knowledge of both X & Y      |   |  // [330]
            and therefore:                                |   |  // [330]
                                                          |   |  // [330]
            1. Transformation of X requires knowledge of Y|   |  // [330]
            2. Transformation of Y requires knowledge of X|   |  // [330]
                                                          |   |  // [330]
        :---------------: #_AUTO_TILE_ROTATION_EXAMPLES_# +   |  // [330]
                                                              |  // [330]
    :-------------------------: #_HOSPITAL_NOTES_2022_10_07_# +  // [330]
                                                                 // [330]
    @WRONG_FUCKING_MATH@ : Your math is wrong.                   // [330]
                                                                 // [330]
    #_2ND_SHOT_AT_FIGURING_OUT_TOUCHING_ROTATION_# :----------+  // [330]
                                                              |  // [330]
                                              TAG[ HOT_MATH ] |  // [331]
        HOT_MATH_ROTATE_000 : (x,y) ==> ( x, y)               |  // [330]
                                                              |  // [330]
        HOT_MATH_ROTATE_090 : (x,y) ==> (−y, x)               |  // [330]
                                                              |  // [330]
        HOT_MATH_ROTATE_180 : (x,y) ==> (−x,−y)               |  // [330]
                                                              |  // [330]
        HOT_MATH_ROTATE_270 : (x,y) ==> ( y,−x)               |  // [330]
                                                              |  // [330]
        TAG[ rotate_0   | rotate-0   | HOLY_FUCKING_ROTATION ]|  // [332]
        TAG[ rotate_90  | rotate-90  | HOLY_FUCKING_ROTATION ]|  // [332]
        TAG[ rotate_180 | rotate-180 | HOLY_FUCKING_ROTATION ]|  // [332]
        TAG[ rotate_270 | rotate-270 | HOLY_FUCKING_ROTATION ]|  // [332]
                                                              |  // [330]
        Rotation is fucking hard. Let's solve it              |  // [330]
        BRUTE FORCED first , and then optimize later.         |  // [330]
                                                              |  // [330]
        if( WE_SHOULD_ROTATE_INSTEAD_OF_MIRROR ){             |  // [330]
                                                              |  // [330]
            if( u_0 == u_ro4 ){                               |  // [330]
                                                              |  // [330]
                u_to4 == u_to4 ;                              |  // [330]
            }else                                             |  // [330]
            if( u_1 == u_ro4 ){                               |  // [330]
                                                              |  // [330]
                //:SWAP://                                    |  // [330]
                u_to4 =( U32( 0x00 )                          |  // [330]
                |   ( ( u_to4 << 2 )&( 0xC ) )                |  // [330]
                |   ( ( u_to4 >> 2 )&( 0x3 ) )                |  // [330]
                );;                                           |  // [330]
                                                              |  // [330]
                //:INVERT_Y://                                |  // [330]
                                                              |  // [330]
                u_to4 =( U32( 0x00 )                          |  // [330]
                |   ( ( u_to4 >> 0 )&( 0xC ) )                |  // [330]
                                                              |  // [330]
                |   ( ( u_to4 << 1 )&( 0x2 ) )                |  // [330]
                |   ( ( u_to4 >> 1 )&( 0x1 ) )                |  // [330]
                );;                                           |  // [330]
            }else                                             |  // [330]
            if( u_2 == u_ro4 ){                               |  // [330]
                                                              |  // [330]
                I_GET_THE_IDEA_NOW                            |  // [330]
            }else                                             |  // [330]
            if( u_3 == u_ro4 ){                               |  // [330]
                                                              |  // [330]
                I_GET_THE_IDEA_NOW                            |  // [330]
            };;                                               |  // [330]
        };;                                                   |  // [330]
                                                              |  // [330]
        HOT_MATH_URL :  https://www.varsitytutors.com         |  // [330]
                        /hotmath/hotmath_help/topics          |  // [330]
                        /rotations                            |  // [330]
    :---------------------------------------------------------+  // [330]
    #_NOTE_2022_10_08_# :-------------------------------------+  // [330]
                                                              |  // [330]
        Finish Mirroring Before You Work On Any Rotation      |  // [330]
        Code In The Shader!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!     |  // [330]
                                                              |  // [330]
                                                              |  // [330]
        TASKS :                                               |  // [330]
                                                              |  // [330]
            1. Finish Mirroring Code.                         |  // [330]
            2. Refactor Mirroring Code To Detect Rotation     |  // [330]
            3. Implement Rotation Code                        |  // [330]
    :---------------------------------------------------------+  // [330]
    #_MIRROR_TOUCHING_BY_USING_XOR_# :------------------------+  // [330]
                                                              |  // [330]
        @THIS_IS_FUCKING_LOGICALLY_WRONG@                     |  // [330]
                                                              |  // [330]
        to4_tog_m_x ===( 1_1_0_0 );  (DEC[ 0XC ])             |  // [330]
        to4_tog_m_y ===( 0_0_1_1 );  (DEC[ 0X3 ])             |  // [330]
                                                              |  // [330]
                                X X Y Y          X X Y Y      |  // [330]
        BIN[ 1_1_0_0 ] XOR TO4[ 1 0 0 0 ] ===> [ 0 1 0 0 ]    |  // [330]
        BIN[ 1_1_0_0 ] XOR TO4[ 0 1 0 0 ] ===> [ 1 0 0 0 ]    |  // [330]
                                                              |  // [330]
                                X X Y Y          X X Y Y      |  // [330]
        BIN[ 0_0_1_1 ] XOR TO4[ 0 0 1 0 ] ===> [ 0 0 0 1 ]    |  // [330]
        BIN[ 0_0_1_1 ] XOR TO4[ 0 0 0 1 ] ===> [ 0 0 1 0 ]    |  // [330]
                                                              |  // [330]
    :---------------------------------------------------------+  // [330]
    #_DONE_SOME_TYPE_OF_TOUCHING_MIRROR_# :-------------------+  // [330]
                                                              |  // [330]
        @THIS_IS_FUCKING_LOGICALLY_WRONG@                     |  // [330]
        touching_value_in_shader_to4 ^=( to4_tog_m_x ) ;      |  // [330]
        touching_value_in_shader_to4 ^=( to4_tog_m_y ) ;      |  // [330]
                                                              |  // [330]
        USE A FUCKING LOOKUP TABLE FOOL!!!                    |  // [330]
                                                              |  // [330]
    :---------------------------------------------------------+  // [330]
    #_GLSL_XOR_NOT_IMPLEMENTED_# :----------------------------+  // [330]
                                                              |  // [330]
        http://learnwebgl.brown37.net/12_shader_language      |  // [330]
        /glsl_mathematical_operations.html                    |  // [330]
                                                              |  // [330]
    :---------------------------------------------------------+  // [330]
    #_MIRROR_TOUCHING_BY_USING_LUT_# :------------------------+  // [330]
                                                              |  // [330]
        Use a lookup table to mirror. Using XOR is            |  // [330]
        not correct because it will give you the              |  // [330]
        WRONG RESULT for binary[ 00 ] and binary [ 11 ].      |  // [330]
                                                              |  // [330]
        SAY...                                                |  // [330]
                                                              |  // [330]
        MIRROR == binary[ 11 ]                                |  // [330]
                                                              |  // [330]
        binary[ 01 ] ^ MIRROR ==> binary[ 1 0 ]               |  // [330]
        binary[ 10 ] ^ MIRROR ==> binary[ 0 1 ]               |  // [330]
        binary[ 11 ] ^ MIRROR ==> binary[ 0 0 ]               |  // [330]
                                                              |  // [330]
        I was expecting :                                     |  // [330]
                                                              |  // [330]
        binary[ 11 ] ^ MIRROR ==> binary[ 1 1 ]               |  // [330]
                                                              |  // [330]
        Which is obviously wrong.                             |  // [330]
        But is what I was trying to do.                       |  // [330]
                                                              |  // [330]
    :---------------------------------------------------------+  // [330]
                                                                 // [330]
    @THIS_IS_FUCKING_LOGICALLY_WRONG@ : You are idiot.           // [330]

    #_ROTATE_TOUCHING_BY_USING_LUT_# :------------------------+  // [331]
                                                              |  // [331]
        We can use FOUR lookup tables to __ROTATE__ our       |  // [331]
        16 possible touching values by 0_Degrees,             |  // [331]
        90_degrees , 180_degrees , and 270_Degrees.           |  // [331]
                                                              |  // [331]
        Because touching value is 4 bits, .... a rotation     |  // [331]
        0/90/180/270 table would require 64 bits....          |  // [331]
                                                              |  // [331]
        But we could split it into two lookup tables.         |  // [331]
                                                              |  // [331]
        rot_000_r_x_to4_to2                                   |  // [331]
        rot_000_r_y_to4_to2                                   |  // [331]
                                                              |  // [331]
        rot_090_r_x_to4_to2                                   |  // [331]
        rot_090_r_y_to4_to2                                   |  // [331]
                                                              |  // [331]
        rot_180_r_x_to4_to2                                   |  // [331]
        rot_180_r_y_to4_to2                                   |  // [331]
                                                              |  // [331]
        rot_270_r_x_to4_to2                                   |  // [331]
        rot_270_r_y_to4_to2                                   |  // [331]
                                                              |  // [331]
        We are going to use 8 lookup tables instead of 4      |  // [331]
        so that the conversion from lookup table to           |  // [331]
        bit-packed lookup table is easier.                    |  // [331]
                                                              |  // [331]
        rot_000_to4_to4 <== Needs 64 bits ( 4bits * 16 entries ) // [331]
        rot_090_to4_to4 <== Needs 64 bits ( 4bits * 16 entries ) // [331]
        rot_180_to4_to4 <== Needs 64 bits ( 4bits * 16 entries ) // [331]
        rot_270_to4_to4 <== Needs 64 bits ( 4bits * 16 entries ) // [331]
                                                              |  // [331]
    :---------------------------------------------------------+  // [331]
    @C_C_W@ : Counter_Clock_Wise (Rotation Direction)            // [331]

    #_TO4_ROTATION_TESTS_# :----------------------------------+  // [332]
                                                              |  // [332]
        There is just too much stuff here not to test it.     |  // [332]
        Also I am not 100% sure that my assumption that       |  // [332]
        "negative" translates to flipping the touching        |  // [332]
        bits from ( 0 ===> 1 ) or ( 1 ===> 0 ) within         |  // [332]
        the[ to2 ] section we are interested in.              |  // [332]
    :---------------------------------------------------------+  // [332]
                                                                 // [332]
    @B@ ::::::::::::::::::::::: Bitches                          // [332]
    @B_LOVE@ :::::::::::::::::: BitchesLove                      // [332]
    @B_LOVE_IT@ ::::::::::::::: BitchesLoveIt                    // [332]
    @B_LOVE_IT_WHEN@ :::::::::: BitchesLoveItWhen                // [332]
    @B_LOVE_IT_WHEN_I@ :::::::: BitchesLoveItWhenI               // [332]
    @B_LOVE_IT_WHEN_I_ROTATE@ : BitchesLoveItWhenIRotate         // [332]
    @B_L_I_W_I_R@ :: www.youtube.com/watch?v=yb6amH7hEhA         // [332]
                                                                 // [332]
    #_LOOKUP_TABLE_UTM_ENTRY_POINT_# :------------------------+  // [332]
                                                              |  // [332]
        Entry point for all top level lookup table            |  // [332]
        unit test code. I didn't do this for any              |  // [332]
        lookup tables until now ( 2022_10_09 ) because        |  // [332]
        holy shit the lookup tables for rotation of           |  // [332]
        the[ to4 ]values are kind of complex.                 |  // [332]
    :---------------------------------------------------------+  // [332]
    @TEST_CODE_FOR_MY_TEST_CODE@ : Sometimes unit testing is     // [332]
                                 : harder than I want it to      // [332]
                                 : be.                           // [332]

    @NOCOMMA@ : Denoting that there should be no                 // [333]
              : "lax comma" on this line of code.                // [333]

    @IDEA@       : Put Psychedellic animated boarders around     // [333]
    @GOVIRAL@    : already viral memes before you post them      // [333]
    @GO_VIRAL@   : onto imgur. In the fine print say,            // [333]
       @VIRAL@   : "KanjiCoder can show you how to make this"    // [333]
    @VIRALMEME@  : with tinyurl to a youtube video with your     // [333]
    @VIRAL_MEME@ : code.                                         // [333]

    #_IS_TO4_UNIT_TEST_TABLE_CORRECT_# :----------------------+  // [334]
                                                              |  // [334]
        We still are writing more "tests for our tests".      |  // [334]
        We have to make sure the unit test table is           |  // [334]
        a reflection of our lookup tables.                    |  // [334]
                                                              |  // [334]
        If it is not, then no point moving forward with       |  // [334]
        our unit tests.                                       |  // [334]
                                                              |  // [334]
    :---------------------------------------------------------+  // [334]
                                                                 // [334]
    @to4smash@ : DID_YOU_MEAN[ to4glue ]                         // [334]
    @to4glue@  : Two[ to2 ]values glued together.                // [334]
                                                                 // [334]
    #_GLUE_TOUCH_# :------------------------------------------+  // [334]
                                                              |  // [334]
        Glue two touching values( to2 (s) )together to        |  // [334]
        produce a composite[ to4 ]touching value.             |  // [334]
    :---------------------------------------------------------+  // [334]
                                                                 // [334]
    @PAIRTAG@ : The tag is used in two locations so you          // [334]
              : can "mentally connect the dots" to better        // [334]
              : understand the code.                             // [334]

    #_FINALLY_OUR_TO4_ROT_TESTS_# :---------------------------+  // [335]
                                                              |  // [335]
        It took forever to get to this point. But we          |  // [335]
        finally have all of the[ DATA ]and[ SANITY CHECKS ]   |  // [335]
        in place to begin writing our actual test code        |  // [335]
        that tests our rotations of touching values.          |  // [335]
                                                              |  // [335]
        ( to4 == touching value , 4 == 4 bits )               |  // [335]
                                                              |  // [335]
    :---------------------------------------------------------+  // [335]
    @RE_USING_ODDLY_SPECIFIC_FUNCTION@ :----------------------+  // [335]
    #RE_USING_ODDLY_SPECIFIC_FUNCTION# :----------------------+  // [335]
                                                              |  // [335]
        The function name is oddly specific, but I am         |  // [335]
        going to co-opt it and re-use it for something        |  // [335]
        other than it's original intended purpose.            |  // [335]
                                                              |  // [335]
        No, I am __NOT__ going to give the function           |  // [335]
        a more[ general / generic ]name now that it is        |  // [335]
        being used more genrally.                             |  // [335]
                                                              |  // [335]
    :---------------------------------------------------------+  // [335]
    @NOCOM@ : Denoting no "lax-comma" should be on this line.    // [335]
    #_ROTATE_A_TOUCHING_VALUE_# :-----------------------------+  // [335]
                                                              |  // [335]
        Use the top level lookup tables to rotate             |  // [335]
        a touching value. We shouldn't need this code on      |  // [335]
        the "CPU-SIDE" but writing it on the CPU-side         |  // [335]
        first before we RE-write it on the GPU-side.          |  // [335]
                                                              |  // [335]
        We want to confirm our basic math is CORRECT          |  // [335]
        before we try the more challenging task of            |  // [335]
        re-writing the JavaScript in C99 ( GLSL is C99 ).     |  // [335]
    :---------------------------------------------------------+  // [335]
    #_FUCKING_HELL_ROTATION_DIAGRAMS_WRONGISH_# :-------------+  // [335]
                                                              |  // [335]
        Just realized that diagrams are rotating clockwise,   |  // [335]
        but our lookup tables are configured for              |  // [335]
        COUNTER-clockwise rotation.                           |  // [335]
                                                              |  // [335]
        I don't want to re-create all of my test tables,      |  // [335]
        so we will just swap "90" and "270" entries.          |  // [335]
                                                              |  // [335]
    :---------------------------------------------------------+  // [335]

    @[DUP]@ : DUPlicated                                         // [336]
    @[DAR]@ : Duplicated_And_Renamed                             // [336]
    @[DAE]@ : Duplicated_And_Edited                              // [336]
                                                                 // [336]
    @sc6_ro4_to4____c_w@ : sc6_ro4_to4 - CLOCKWISE rotation      // [336]
    @sc6_ro4_to4____ccw@ : sc6_ro4_to4 - COUNTER_CLOCK_WISE rot  // [336]
                                                                 // [336]
    #_F_TO2_X_TO2_Y_TO4_INLINED_# :---------------------------+  // [336]
                                                              |  // [336]
        I don't want to shuffle around code in this video,    |  // [336]
        so we are just going to [ inline / re-write ]         |  // [336]
        the basic logic of[ TO2_X_TO2_Y_TO4 ]                 |  // [336]
        bit_smashing logic.                                   |  // [336]
                                                              |  // [336]
    :---------------------------------------------------------+  // [336]
    @bit_smashing@ : [BitPacking / BitGluing] , using "|" .      // [336]
    #_META_STRUCTURE_ROTATION_# :-----------------------------+  // [336]
                                                              |  // [336]
        If meta structure is rotating CLOCKWISE, then         |  // [336]
        the touching values of the tiles must rotate          |  // [336]
        COUNTER-CLOCK-WISE.                                   |  // [336]
                                                              |  // [336]
        Pretty sure this is true from observation.            |  // [336]
        And hunches. But not 100% certain about this.         |  // [336]
                                                              |  // [336]
        ....                                                  |  // [336]
                                                              |  // [336]
        Further observation tells me that... Rotation         |  // [336]
        formulas DO_NOT_TRANSLATE_HOW_I_THOUGHT!!!            |  // [336]
                                                              |  // [336]
        SEE[ _HOT_MATH_IS_WRONG_ ]                            |  // [336]
                                                              |  // [336]
                                                              |  // [336]
    TAG[ META_STRUCTURES_ROTATE_LIKE_GEAR_WITH_TOUCHING_VALUES]  // [336]
    :---------------------------------------------------------+  // [336]
    #_HOT_MATH_IS_WRONG_# :-----------------------------------+  // [336]
                                                              |  // [336]
        +---+               +---+@_WE_FUCKED_UP_BIG_TIME_2022_@  // [336]
        |V_0|               |   |                             |  // [336]
        +---+               +---+                             |  // [336]
        |   | ===ROT_180==> |   |                             |  // [336]
        +---+               +---+                             |  // [336]
        |   |               |V_2|                             |  // [336]
        +---+               +---+#_WE_FUCKED_UP_BIG_TIME_2022_#  // [336]
                                                              |  // [336]
        Algebra_Says[ (x,y) ===> (-y,x) ]To_Rotate_180        |  // [336]
                                                              |  // [336]
                                          X_X Y_Y             |  // [336]
        THIS_IS_CORRECT____V_0_TO4 ==BIN[ 0_0 0_1 ]           |  // [336]
        THIS_IS_CORRECT____V_2_TO4 ==BIN[ 0_0 1_0 ]           |  // [336]
        WRONG_ALGEBRA______V_2_TO4 ==BIN[ 1_0 0_0 ]           |  // [336]
                                                              |  // [336]
        Well fuck, all of our rotation tables are...          |  // [336]
        wrong aren't they?                                    |  // [336]
                                                              |  // [336]
    :---------------------------------------------------------+  // [336]
    @BULLSHIT_FORMULA@ :--------------------------------------+  // [336]
    #BULLSHIT_FORMULA# :--------------------------------------+  // [336]
                                                              |  // [336]
        The formula is 100% bullshit. You made a huge         |  // [336]
        FUNDAMENTAL FLAW in your program. Now you have        |  // [336]
        to fix your horrible design decision made on          |  // [336]
        the foundation of a false assumption.                 |  // [336]
    :---------------------------------------------------------+  // [336]
    :---------------------------------------------------------+  // [336]
    #_ALWAYS_USE_CLOCKWISE_TO_ROTATE_TO4_# :------------------+  // [336]
                                                              |  // [336]
        Turns out there is no direct translation between      |  // [336]
        the rotation of touching values and how one would     |  // [336]
        rotate a point on an [x,y] plane in algebra.          |  // [336]
                                                              |  // [336]
        Since there is no direct[ translation/analog ],       |  // [336]
        lets default to CLOCKWISE.                            |  // [336]
                                                              |  // [336]
        Clockwise rotation is more artist friendly.           |  // [336]
        The only reason I was going with COUNTER_CLOCKWISE    |  // [336]
        is because that is the default in math because        |  // [336]
        of the graph:                                         |  // [336]
                                                              |  // [336]
            x = cos( t ); <<<< Draws Counter Clockwise        |  // [336]
            y = sin( t ); <<<< Draws Counter Clockwise        |  // [336]
                                                              |  // [336]
    :---------------------------------------------------------+  // [336]
    #_ROTATE_NOA_FUCKUP_EXAMPLE_# :---------------------------+  // [336]
        TAG[ NOA_FUCKUP_EXAMPLE ]                             |  // [336]
                                                              |  // [336]
        +---+---+---+   +--------------------------------+    |  // [336]
        |000|   |090|   |  No matter how you rotate      |    |  // [336]
        +---+---+---+   |  the[ CEN ]tile, the touching  |    |  // [336]
        |   |CEN|   |   |  value is ALWAYS BIN[ 1111 ].  |    |  // [336]
        +---+---+---+   |                                |    |  // [336]
        |270|   |180|   |  Disproving cartesean formulas |    |  // [336]
        +---+---+---+   +--------------------------------+    |  // [336]
                                                              |  // [336]
                       X_X Y_Y                                |  // [336]
        CEN_TO4 ==BIN[ 1_1 1_1 ]                              |  // [336]
                                                              |  // [336]
    :---------------------------------------------------------+  // [336]

    #_CROSS_CHECKING_TABLE_# :--------------------------------+  // [337]
                                                              |  // [337]
        d_rot_000_rxy_to4_to4 <-- @CROSS_CHECKING_TABLE@      |  // [337]
        d_rot_090_rxy_to4_to4 <-- @CROSS_CHECKING_TABLE@      |  // [337]
        d_rot_180_rxy_to4_to4 <-- @CROSS_CHECKING_TABLE@      |  // [337]
        d_rot_270_rxy_to4_to4 <-- @CROSS_CHECKING_TABLE@      |  // [337]
                                                              |  // [337]
        @CROSS_CHECKING_TABLE@ : Table that can be used       |  // [337]
                               : to cross check the tables    |  // [337]
                               : we are currently filling     |  // [337]
                               : out.                         |  // [337]
    :---------------------------------------------------------+  // [337]
                                                                 // [337]
    @rotclok@ :::: ROTate_CLOCKwise                              // [337]
    @rotclok_000 : ROTate_CLOCKwise -   0 degrees                // [337]
    @rotclok_090 : ROTate_CLOCKwise -  90 degrees                // [337]
    @rotclok_180 : ROTate_CLOCKwise - 180 degrees                // [337]
    @rotclok_270 : ROTate_CLOCKwise - 270 degrees                // [337]
                                                                 // [337]
    @_THIS_TABLE_IS_CLOCKWISE_@ :-----------------------------+  // [337]
    #_THIS_TABLE_IS_CLOCKWISE_# :-----------------------------+  // [337]
                                                              |  // [337]
        This table is for clockwise rotations.                |  // [337]
        ( Any table with this @tted                           |  // [337]
    :---------------------------------------------------------+  // [337]

    #_TOUCHING_VALUE_ROTATION_TABLES_# :----------------------+  // [338]
                                                              |  // [338]
        Eight lookup tables used to rotate the touching       |  // [338]
        values of tiles by increments of 90-degrees.          |  // [338]
                                                              |  // [338]
        All rotations are CLOCKWISE.                          |  // [338]
                                                              |  // [338]
        Eventually we will figure out a more optimized        |  // [338]
        way to rotate touching values that involves           |  // [338]
        bit-packed lookup tables and bit-hacks, but first     |  // [338]
        we need to get this feature WORKING before we         |  // [338]
        work on OPTIMIZING it.                                |  // [338]
                                                              |  // [338]
        The "Atomic_Ivy_MMO" engine is able to manipulate     |  // [338]
        auto-tiling in ways other engines cannot. The goal    |  // [338]
        is to create something I call "Emergent Design".      |  // [338]
                                                              |  // [338]
    :---------------------------------------------------------+  // [338]
                                                                 // [338]
    @VIDEO_IDEA@ : A tutorial on "how to bake bread" but it      // [338]
    @VID_IDEA@   : starts out with "Baking bread can be "        // [338]
    @VIDIDEA@    : "great if you want to ___________" and        // [338]
    @VID@ :::::::: then incessently drones on about all the      // [338]
    @V@ :::::::::: things you might want to do with bread.       // [338]
    :::::::::::::: The last 5 seconds of this 15 minute          // [338]
    :::::::::::::: video is a tutorial on how to bake bread.     // [338]
    :::::::::::::: A parody of how a lot of tutorials never      // [338]
    :::::::::::::: GET_TO_THE_FUCKING_POINT!!!!!!!!!!!!!!!!!     // [338]
                                                                 // [338]
    @C_W_000@ : ClockWise_ByDegrees_ZERO                         // [338]
    @C_W_090@ : ClockWise_ByDegrees_NINETY                       // [338]
    @C_W_180@ : ClockWise_ByDegrees_ONE_HUNDRED_AND_EIGHTY       // [338]
    @C_W_270@ : ClockWise_ByDegrees_TWO_HUNDRED_AND_SEVENTY      // [338]
                                                                 // [---]
    #_AM4_AND_AM6_# :-----------------------------------------+  // [339]
                                                              |  // [339]
        AM4 : Encodes [ l_x , l_y , m_x , m_y ]Bits           |  // [339]
        AM6 : Encodes [ l_x , l_y , m_x , m_y , rb0 , rb1 ]   |  // [339]
                                                              |  // [339]
        @rb0@ : Rotation Bit #0                               |  // [339]
        @rb1@ : Rotation Bit #1                               |  // [339]
    :---------------------------------------------------------+  // [339]
    #_AM4_AND_AM6_EDITING_# :---------------------------------+  // [339]
                                                              |  // [339]
        Code that modifies AM4 & AM6 value used when          |  // [339]
        setting tiles in to our levelpacks. We can edit       |  // [339]
        9 level packs at any one time. Because we have        |  // [339]
        a 3x3 grid of levelpacks loaded into "THE_DUM".       |  // [339]
    :---------------------------------------------------------+  // [339]
    @AM4AM6@ / #AM4AM6# :-------------------------------------+  // [339]
                                                              |  // [339]
        AM4 copy over to AM6 bits.                            |  // [339]
        ... Wait... TAG[ _YOU_CANT_FUCKING_DO_THIS_ ]         |  // [339]
                                                              |  // [339]
    :---------------------------------------------------------+  // [339]
    #_YOU_CANT_FUCKING_DO_THIS_# :----------------------------+  // [339]
                                                              |  // [339]
        Bits are in "Network_Bit_Order" . Thus, we            |  // [339]
        cannot simply tack more bits onto an "AM4"            |  // [339]
        to turn it into an "AM6". They are not                |  // [339]
        compatible like that.                                 |  // [339]
            VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV              |  // [339]
                                                              |  // [339]
            AM4 ==BIN[ ___,___,l_x,l_y,m_x,m_y ]              |  // [339]
            AM6 ==BIN[ l_x,l_y,m_x,m_y,rb0,rb1 ]              |  // [339]
                                                              |  // [339]
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^              |  // [339]
            DOESN_T LINE UP LIKE THAT!!!!!!!!!!!              |  // [339]
                                                              |  // [339]
        if( "Z" == a_k ){                   ////////////      |  // [339]
            edi.edi_am4 ^= c_am4_tog_l_x ;  ////////////      |  // [339]
            edi.edi_am6 &= c_am4_del_all ;  //:AM4AM6://      |  // [339]
            edi.edi_am6 |=   edi.edi_am4 ;  //:AM4AM6://      |  // [339]
                                                              |  // [339]
        }else  /////////////////////////////////////////      |  // [339]
        if( "X" == a_k ){                   ////////////      |  // [339]
            edi.edi_am4 ^= c_am4_tog_l_y ;  ////////////      |  // [339]
            edi.edi_am6 &= c_am4_del_all ;  //:AM4AM6://      |  // [339]
            edi.edi_am6 |=   edi.edi_am4 ;  //:AM4AM6://      |  // [339]
                                                              |  // [339]              
        }else  /////////////////////////////////////////      |  // [339]
        if( "C" == a_k ){                                     |  // [339]
            edi.edi_am4 ^= c_am4_tog_m_x ;                    |  // [339]
            edi.edi_am6 &= c_am4_del_all ;  //:AM4AM6://      |  // [339]
            edi.edi_am6 |=   edi.edi_am4 ;  //:AM4AM6://      |  // [339]
                                                              |  // [339]
        }else  /////////////////////////////////////////      |  // [339]
        if( "V" == a_k ){                                     |  // [339]
            edi.edi_am4 ^= c_am4_tog_m_y ;                    |  // [339]
            edi.edi_am6 &= c_am4_del_all ;  //:AM4AM6://      |  // [339]
            edi.edi_am6 |=   edi.edi_am4 ;  //:AM4AM6://      |  // [339]
                                                              |  // [339]
        }else  /////////////////////////////////////////      |  // [339]
        { ... }                                               |  // [339]
                                                              |  // [339]
    :---------------------------------------------------------+  // [339]
    #_ITS_TRASH_NOW_# :---------------------------------------+  // [339]
                                                              |  // [339]
        This stuff from video #3_2_4 ([324]) is               |  // [339]
        trash now. Decided that "edi" object should           |  // [339]
        not directly store bitpacked "am4" or "am6"           |  // [339]
        value because the loss of flexibility isn't           |  // [339]
        worth the minimal performance increase.               |  // [339]
                                                              |  // [339]
                edi.edi_am4 ^= c_am4_tog_l_x ;                |  // [339][MOV][324]
                edi.edi_am4 ^= c_am4_tog_l_y ;                |  // [339][MOV][324]
                edi.edi_am4 ^= c_am4_tog_m_x ;                |  // [339][MOV][324]
                edi.edi_am4 ^= c_am4_tog_m_y ;                |  // [339][MOV][324]
                                                              |  // [339][--------]
        edi_am4 :(   0xC )  //: BIN[  1    1    0    0  ]://  |  // [339][MOV][323]
                            //: BIN[ l_x__l_y__m_x__m_y ]://  |  // [339][MOV][323]
                                                              |  // [339]
                                                              |  // [339]
    :---------------------------------------------------------+  // [339]
    @NOW_BITPACKED_JUST_IN_TIME@ :----------------------------+  // [339]
    #NOW_BITPACKED_JUST_IN_TIME# :----------------------------+  // [339]
                                                              |  // [339]
        Values are only bit packed right before they          |  // [339]
        are needed to be thrown into[ pix2048 ]bitmap.        |  // [339]
                                                              |  // [339]
        Keeping a consistent "bitpacked" cache of             |  // [339]
        values rather than a consistent "loose variable"      |  // [339]
        cache of values leads to some.... difficulties.       |  // [339]
    :---------------------------------------------------------+  // [339]
                                                                 // [339]
    @NOT_YET_USED@ : We will use this variable in a future       // [339]
                   : video. Putting it down to remind me of      // [339]
                   : what needs to be done next.                 // [339]
    @N_Y_U@ :::::::: SHORTHAND_FOR[ NOT_YET_USED ]               // [339]
                                                                 // [339]
    #_BIT_PACK_AM4_OR_AM6_# :---------------------------------+  // [339]
                                                              |  // [339]
        Take loose variables and pack them into AM4 or AM6.   |  // [339]
                                                              |  // [339]
        ( l_x,l_y,m_x,m_y     )===>( am4 )                    |  // [339]
        ( l_x,l_y,m_x,m_y,ro4 )===>( am6 )                    |  // [339]
    :---------------------------------------------------------+  // [339]
    #REFACTOR_ME_TO_USE_KONAMI_CODE_2022# :-------------------+  // [339]
                                                              |  // [339]
        The[ "R" ]Key is now being used for rotation,         |  // [339]
        so the database thing we were testing with the        |  // [339]
        R_KEY needs to be given another key, or moved         |  // [339]
        into the[ KONAMI_KEY ]section of code.                |  // [339]
                                                              |  // [---][339]
        UPDATE_TAG[ R_2022 ]:---------------------------------+  // [366][---]
        UPDATE : For the time being... Fuck database          |  // [366][---]
               : stuff. I think we might be able to           |  // [366][---]
               : get by via using "github api" or             |  // [366][---]
               : "imgur api". No need for database.           |  // [366][---]
               :                                              |  // [366][---]
               : If we __DO__ decide to do further            |  // [366][---]
               : database work, we need a 3RD_PARTY           |  // [366][---]
               : database platform that is                    |  // [366][---]
               : SEPERATE ENTITY from whatever cloud          |  // [366][---]
               : platform we are using.                       |  // [366][---]
               :                                              |  // [366][---]
               : Reason :                                     |  // [366][---]
               :        1 : When refactoring to deploy        |  // [366][---]
               :            servers to GOOGLE_APP_ENGINE,     |  // [366][---]
               :            my database code was HEROKU       |  // [366][---]
               :            specific. Having deployment       |  // [366][---]
               :            platform specific database code   |  // [366][---]
               :            makes it harder to release on     |  // [366][---]
               :            multiple platforms.               |  // [366][---]
               :                                              |  // [366][---]
               :        2 : We do not want to be too          |  // [366][---]
               :            reliant on any one platform.      |  // [366][---]
               :            Need I remind you about           |  // [366][---]
               :            "MacroMedia Flash"  ? ? ? ? ? ? ? |  // [366][---]
               :           ("Adobe Flash" ) ? ? ? ? ? ? ? ? ? |  // [366][---]
               :----------------------------------------------+  // [366][---]
                                                              |  // [---][339]
    :---------------------------------------------------------+  // [339]
    #_AUTO_TILE_METHOD_BITS_CAN_MAKE_THIS_POSSIBLE_# :--------+  // [339]
                                                              |  // [339]
        TAG[ BROUGHT_TO_YOU_BY_AUTO_TILE_METHOD_BITS ]        |  // [339]
                                                              |  // [339]
        LATCHING_ON_AXIS : Changing these bits can help       |  // [339]
                         : break up the visual monotony of    |  // [339]
                         : a solid chunk of tiles all with    |  // [339]
                         : the exact same tile value.         |  // [339]
                                                              |  // [339]
        MIRROR___ON_AXIS : Changing these bits can            |  // [339]
                         : effectively flip the structures    |  // [339]
                         : you are building on the X          |  // [339]
                         : or Y axis.                         |  // [339]
                                                              |  // [339]
        ROTATE_AUTOTILES : Changing these bits can            |  // [339]
                         : effectively rotate the             |  // [339]
                         : orientation of structures you      |  // [339]
                         : are building in the engine.        |  // [339]
                                                              |  // [339]
    :---------------------------------------------------------+  // [339]

    #_SALES_PITCH_CHANNEL_IDEA_# :----------------------------+  // [340]
                                                              |  // [340]
        TAG[ @IDEA@ | @CHANNEL_IDEA@ ]                        |  // [340]
                                                              |  // [340]
        ThunderF00t said in one video that the reproductive   |  // [340]
        success of an idea is based on how well it spreads    |  // [340]
        and NOTHING ELSE. It does not depend on how           |  // [340]
        "good" the idea it. It does not depend on how         |  // [340]
        "true" the idea it is. An idea spreads based on       |  // [340]
        how well it spreads.                                  |  // [340]
                                                              |  // [340]
        Yes, circular logic.                                  |  // [340]
                                                              |  // [340]
        The point is that not only do I (KanjiCoder) need     |  // [340]
        to be smart enough to make a KICK_ASS engine.         |  // [340]
        I also need to be smart enough to get the word        |  // [340]
        out and advertise it.                                 |  // [340]
                                                              |  // [340]
        We've got something a lot fucking better than         |  // [340]
        most of the popular youtubers with 100K or 1Million   |  // [340]
        subscribers... But here we are sitting at 33          |  // [340]
        followers.                                            |  // [340]
                                                              |  // [340]
        We need to fix this, or give the fuck up and admit    |  // [340]
        to ourselves that we are insane, no one cares ,       |  // [340]
        and you are __NOT__ doing anything "groundbreaking".  |  // [340]
                                                              |  // [340]
        -KanjiCoder , 2022_10_12                              |  // [340]
                                                              |  // [340]
    :---------------------------------------------------------+  // [340]
    #_WE_VE_GOT_A_WAR_FOR_YOU_2022_# :------------------------+  // [340]
                                                              |  // [340]
        One of the values in your converstion function        |  // [340]
        ( l_x,l_y,m_x,m_y,ro4 )===>( am6 )                    |  // [340]
        is out of fucking bounds.                             |  // [340]
        Fix your shit you lazy bitch!                         |  // [340]
                                                              |  // [340]
        https://www.youtube.com/watch?v=3UDa6o6zsUE           |  // [340]
    :---------------------------------------------------------+  // [340]
                                                                 // [340]
    @___0_orr_1___@ : Literally "Zero Or One" Because Binary.    // [340]
    @T__M__B@ ::::::: Too_Many_Bits :::::::::::::::::::::::::::  // [340]
                                                                 // [340]
    @ERR_AM64@ :----------------------------------------------+  // [340]
    #ERR_AM64# :----------------------------------------------+  // [340]
                                                              |  // [340]
        The "am4" and "am6" values do not agree with          |  // [340]
        each other. The "am6" is an extension of "am4"        |  // [340]
        and thus we should be able to find the                |  // [340]
        "sub bit string" of "am4" within "am6".               |  // [340]
                                                              |  // [340]
    :---------------------------------------------------------+  // [340]
    :---------------------------------------------------------+  // [340]
                                                                 // [---]
    @[CPR]@ : Copy_Paste_Refactor , Delta Marker For Margins.    // [341]
                                                                 // [341]
    #_Extra_Geom_Info_Bits_# :--------------------------------+  // [341]
                                                              |  // [341]
        Extra-GEOM-tile                                       |  // [341]
        specific_bits_should_be_encodedinto                   |  // [341]
        our_uint32_binary_tile_value_within                   |  // [341]
        this_block_of_code_here.                              |  // [341]
    :---------------------------------------------------------+  // [341]
    #_Extra_Bomb_Info_Bits_# :--------------------------------+  // [341]
                                                              |  // [341]
        Extra-BOMB-tile                                       |  // [341]
        specific_bits_should_be_encodedinto                   |  // [341]
        our_uint32_binary_tile_value_within                   |  // [341]
        this_block_of_code_here.                              |  // [341]
    :---------------------------------------------------------+  // [341]
    #_Extra_Fada_Info_Bits_# :--------------------------------+  // [341]
                                                              |  // [341]
        Extra-FADA-tile                                       |  // [341]
        specific_bits_should_be_encodedinto                   |  // [341]
        our_uint32_binary_tile_value_within                   |  // [341]
        this_block_of_code_here.                              |  // [341]
    :---------------------------------------------------------+  // [341]
    @AM6_0x00@ : AM6 value is too low, lower than zero.          // [341]
    @AM6_0x3F@ : AM6 value is more than 6 bits.                  // [341]
    #_NOEXTRA_INFO_BITS_# :-----------------------------------+  // [341]
                                                              |  // [341]
        This section of code is for tacking on extra          |  // [341]
        layer-specific information bits. Right now we         |  // [341]
        have no extra information bits for these sections.    |  // [341]
    :---------------------------------------------------------+  // [341]
    
    #_DISCRETE_INTERNAL_ROTATED_# :---------------------------+  // [342]
                                                              |  // [342]
        The GLSL code to support rotation of auto tiles.      |  // [342]
        We need to rotate TWO THINGS.                         |  // [342]
                                                              |  // [342]
            1. The discrete internal coordinates. ( u_dil )   |  // [342]
                                                              |  // [342]
            2. The auto tile touching value ( u_to4 )         |  // [342]
    :---------------------------------------------------------+  // [342]
    #_JUST_GET_RO4_INSTEAD_OF_B10_# :-------------------------+  // [342]
                                                              |  // [342]
        This is more work than it needs to be.                |  // [342]
        Just grab the 2 bit "u_ro4" value we need             |  // [342]
        for the rotation enumeration code.                    |  // [342]
                                                              |  // [342]
        NO!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  |  // [342]
                                                              |  // [342]
            //:------------------------------------------://  |  // [342]
            //: [ 1_2_3_4_5_6_7_8_9_A ]___10_BIT_NUM___  ://  |  // [342]
            //: ____[ 1_2_3_4_5_6_7_8 ]________________  ://  |  // [342]
            //: [ 1_2_3_4_5_6_7_8 ]                << 2  ://  |  // [342]
            //:                 [ 1_2 3 4 5 6 7 8 ]>> 6  ://  |  // [342]
            //: [ 1_2_3_4_5_6_7_8_1_2 ]__FINAL_10_BITS_  ://  |  // [342]
            //:------------------------------------------://  |  // [342]
            U32 u_b10 =( u_0                                  |  // [342]
            |   ( (uv4_p2k.r & u_ff) << 2 )                   |  // [342]
            |   ( (uv4_p2k.g & u_ff) >> 6 )                   |  // [342]
            );;                                               |  // [342]
                                                              |  // [342]
        YES!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  |  // [342]
                                                              |  // [342]
            U32 u_ro4 =( uv4_p2k.g >> 6 );                    |  // [342]
                                                              |  // [342]
    :---------------------------------------------------------+  // [342]
                                                                 // [342]
    @u_r4i@ : [ r4x , r4y ]As 1-dimensional index.               // [342]
                                                                 // [342]
    #_THE_AUTO_TILES_ARE_LIKE_GEARS_# :-----------------------+  // [342]
                                                              |  // [342]
        If we try to rotate the individual auto-tiles         |  // [342]
        CLOCKWISE , it rotates the entire METASTRUCTURE       |  // [342]
        COUNTER_CLOCKWISE!!!                                  |  // [342]
                                                              |  // [342]
        It kind of makes sense to me. The METASTRUCTURE       |  // [342]
        is kind of like a giant wheel, and each tile on       |  // [342]
        the boarder of the METASTRUCTURE is like a tiny       |  // [342]
        gear. They spin in opposite directions of each        |  // [342]
        other.                                                |  // [342]
                                                              |  // [342]
        So... Like a "Planetary Gear" system.                 |  // [342]
                                                              |  // [342]
        TAG[ PLANETARY_GEAR ]                                 |  // [342]
                                                              |  // [342]
        METASTRUCTUURE === "C_W" blocks.                      |  // [342]
        Individual tiles rotate CLOCKWISE (C_W)               |  // [342]
        The METASTRUCTURE composed of those                   |  // [342]
        individual tiles rotates COUNTER_CLOCKWISE.           |  // [342]
                                                              |  // [342]
            +-----------------------+                         |  // [342]
            | +<<<<<<< CCW <<<<<<<+ |                         |  // [342]
            | V +---------------+ ^ |                         |  // [342]
            | V | +---+---+---+ | ^ |                         |  // [342]
            | V | |C_W|C_W|C_W| | ^ |                         |  // [342]
            |   | +---+---+---+ |   |                         |  // [342]
            |CCW| |C_W|C_W|C_W| |CCW|                         |  // [342]
            |   | +---+---+---+ |   |                         |  // [342]
            | V | |C_W|C_W|C_W| | ^ |                         |  // [342]
            | V | +---+---+---+ | ^ |                         |  // [342]
            | V +---------------+ ^ |                         |  // [342]
            | +>>>>>>> CCW >>>>>>>+ |                         |  // [342]
            +-----------------------+                         |  // [342]
                                                              |  // [342]
        What does this mean for my code ?                     |  // [342]
                                                              |  // [342]
            Since TOUCHING values get rotated CLOCKWISE,      |  // [342]
            the DISCRETE_INTERNAL_COORDS of the tile          |  // [342]
            need to be rotated COUNTER_CLOCKWISE.             |  // [342]
                                                              |  // [342]
    :---------------------------------------------------------+  // [342]

    @For_Reasons_I_Tired@ : I am very tired and dellirious.      // [345]
                                                                 // [345]
    #_JUST_HAVING_FUN_# :-------------------------------------+  // [345]
                                                              |  // [345]
        Trying to make the capper graphics in shader seven    |  // [345]
        flash on and off because should be a simple thing     |  // [345]
        that doesn't take too much code and I thought it      |  // [345]
        would be [fun/neat] and add a bit of extra flare      |  // [345]
        to the rendering.                                     |  // [345]
    :---------------------------------------------------------+  // [345]
    #_THE_FUN_GOT_TOO_COMPLEX_# :-----------------------------+  // [345]
                                                              |  // [345]
        //:#_JUST_HAVING_FUN_#:[345]:--------://     // [345] |  // [345]
        U32 u_tik_256 =(                             // [345] |  // [345]
            //: MODULATED_BY_255_BY_HAND ://         // [345] |  // [345]
            (d_tik-(d_tik/u_256 )*u_256)             // [345] |  // [345]
        );;                                          // [345] |  // [345]
        F32 f_tik_per =(                             // [345] |  // [345]
                                                     // [345] |  // [345]
            ( F32( u_tik_256 ) / f_256 )             // [345] |  // [345]
        );;                                          // [345] |  // [345]
        //:--------:#_JUST_HAVING_FUN_#:[345]://     // [345] |  // [345]
                                                              |  // [345]
    :---------------------------------------------------------+  // [345]
    #_ANIGLOW_# :---------------------------------------------+  // [345]
                                                              |  // [345]
        Added animated glow effect to capper graphics         |  // [345]
        for something fun and quick I could do.               |  // [345]
    :---------------------------------------------------------+  // [345]

    #_CLIENT_AND_SERVER_ARE_SAME_FILE_# :---------------------+  // [346]
                                                              |  // [346]
        The "Client" and "Server" are the EXACT SAME FILE.    |  // [346]
        ( The file you are reading right now ).               |  // [346]
        It ALWAYS HAS BEEN FROM THE VERY BEGINNING.           |  // [346]
        Yes, all the way back to the first line of            |  // [346]
        code we wrote. Though the first line of code          |  // [346]
        was only server code, no client code.                 |  // [346]
                                                              |  // [346]
        Point is , as of writing this, the only two           |  // [346]
        files you need to deploy this game are :              |  // [346]
                                                              |  // [346]
        1. ATOMIC_IVY_MMO.JS                                  |  // [346]
        2. package.json                                       |  // [346]
                                                              |  // [346]
        -KanjiCoder , 2022_10_13                              |  // [346]
    :---------------------------------------------------------+  // [346]
    ///////////////////////////////////////////////////////////  // [346]
    #_CONTENTS_OF_PACKAGE_DOT_JSON_2022_10_13_# :-------------+  // [346]
                                                                 // [346]
        {                                                        // [346]
        ,   "dependencies": { "pg" : "8.7.3" }                   // [346]
        ,   "scripts" : { "start" : "node ./ATOMIC_IVY_MMO.JS" } // [346]
        }                                                        // [346]
                                                                 // [346]
    :--------------:#_CONTENTS_OF_PACKAGE_DOT_JSON_2022_10_13_#  // [346]
    ///////////////////////////////////////////////////////////  // [346]
                                                                 // [---]
    #_DEPLOY_TO_HEROKU_COMMAND_LINE_REFRESHER_# :-------------+  // [347]
                                                              |  // [347]
        1. Open Up "AIM" folder ( For me its: "R:/G/AIM"    ) |  // [347]
        2. Open Up "Git Bash" ( Right Click "Git Bash Here" ) |  // [347]
                                                              |  // [347]
        3. Within The Terminal, write these lines, hit        |  // [347]
           "ENTER" after you type each of the lines :         |  // [347]
                                                              |  // [347]
            git add .                                         |  // [347]
            git commit -m "[YOUR_COMMIT_MESSAGE]"             |  // [347]
            git push GIT_SSH master                           |  // [347]
            git push HER_OKU master                           |  // [347]
                                                              |  // [347]
    4. If "GIT_SSH" or "HER_OKU" not recognized :             |  // [347]
                                                              |  // [347]
    git remote -v                                             |  // [347]
                                                              |  // [347]
    git remote add "GIT_SSH"  YOUR_COPY_OF_REPO_SSH_URL       |  // [347]
    git remote add "HER_OKU"  https://git.heroku.com/Y_A_N.git|  // [347]
                                                              |  // [347]
    ////////////////////////////////////////////////////////  |  // [347]
                                                              |  // [347]
        Y_A_N :                                               |  // [347]
                                                              |  // [347]
            Y_A_N === Your App Name                           |  // [347]
                                                              |  // [347]
        YOUR_COPY_OF_REPO_SSH_URL :                           |  // [347]
                                                              |  // [347]
            For me it is :                                    |  // [347]
                                                              |  // [347]
                git@github.com:KanjiCoder/AIM.git             |  // [347]
                                                              |  // [347]
    :---------------------------------------------------------+  // [347]

    #_SELF_SERVE_ICECREAM_# :---------------------------------+  // [350]
                                                              |  // [350]
        This section of code is dedicated to serving          |  // [350]
        THIS FILE ( ATOMIC_IVY_MMO.JS / server.js / AIM.JS ). |  // [350]
                                                              |  // [350]
        AKA: "Serve Yourself".                                |  // [350]
                                                              |  // [350]
        Not quite a "Quine" but similiar and less             |  // [350]
        sophisticated than a "Quine".                         |  // [350]
                                                              |  // [350]
        www.geeksforgeeks.org/quine-a-self-reproducing-program|  // [350]
                                                              |  // [350]
    :---------------------------------------------------------+  // [350]
    #_FIND_THE_ICECREAM_SHOP_# :------------------------------+  // [350]
                                                              |  // [350]
        Actually, we need a helper function that              |  // [350]
        RETURNS THE CONTENTS OF "ATOMIC_IVY_MMO.JS"           |  // [350]
        ( this file )... But...                               |  // [350]
                                                              |  // [350]
        RETURNS INTERNALLY!!                                  |  // [350]
                                                              |  // [350]
        We don't want to give the file directly out as        |  // [350]
        an HTTP-response because it still needs               |  // [350]
        to be pre-processed.                                  |  // [350]
                                                              |  // [350]
        So.... "Quine-Like" behavior, but the[index/source]   |  // [350]
        we are dumping out and giving to the client is        |  // [350]
        MODIFIED VERSION OF THIS FILE. (AIM.JS)               |  // [350]
                                                              |  // [350]
        NOTE: AIM.JS === ATOMIC_IVY_MMO.JS                    |  // [350]
                                                              |  // [350]
    :---------------------------------------------------------+  // [350]
    #_NEW_NEVER_NO_PROMISE_# :--------------------------------+  // [350]
                                                              |  // [350]
        Originally created in video #2_1_7 , we never         |  // [350]
        ended up using it. But, we are going to end           |  // [350]
        up using it in the NEXT or NEXT_NEXT video            |  // [350]
        ( #3_5_1 or #3_5_2 ), so I want to review it.         |  // [350]
                                                              |  // [350]
        A "NEVERNO" is a promise that "Never Says No".        |  // [350]
        It always "Accepts" and never "Rejects".              |  // [350]
                                                              |  // [350]
        It replaceds the "NICEGUY" thing we were              |  // [350]
        using previously.                                     |  // [350]
                                                              |  // [350]
        NICEGUY being because :                               |  // [350]
                                                              |  // [350]
        "Nice Guys Can't Handle Rejection".                   |  // [350]
                                                              |  // [350]
        If that phrase doesn't make sense, then the           |  // [350]
        current politics of your century has changed          |  // [350]
        since when I wrote this in year 2022 A.D.             |  // [350]
                                                              |  // [350]
        -KanjiCoder                                           |  // [350]
                                                              |  // [350]
    :---------------------------------------------------------+  // [350]
    #_MORE_FLEXIBLE_SELF_SERVE_HERE_# :-----------------------+  // [350]
                                                              |  // [350]
        We need to modify this section of code to             |  // [350]
        retrieve "ATOMIC_IVY_MMO.JS" source code              |  // [350]
        in two different ways. Depending on if we             |  // [350]
        are using :                                           |  // [350]
                                                              |  // [350]
            1 : "HEROKU"                                      |  // [350]
            2 : "GCLOUD" / "GOOGLEAPPENGINE"                  |  // [350]
                                                              |  // [350]
        To detect "app engine" we can look for                |  // [350]
        google app engine specific environment                |  // [350]
        variables like:                                       |  // [350]
                                                              |  // [350]
            1 : process.env.GOOGLE_CLOUD_PROJECT              |  // [350]
            2 : process.env.GAE_INSTANCE                      |  // [350]
                                                              |  // [350]
    :---------------------------------------------------------+  // [350]
    #_THE_NUMBERS_ARE_NOT_ADDING_UP_# :-----------------------+  // [350]
                                                              |  // [350]
        Solution :                                            |  // [350]
                                                              |  // [350]
            A : Debug the code                                |  // [350]
            B : Send people to jail.                          |  // [350]
                                                              |  // [350]
        ANSWER NOW!                                           |  // [350]
                                                              |  // [350]
            www.youtube.com/watch?v=Vk2fi7NZ3OQ&t=27m20s      |  // [350]
                                                              |  // [350]
    :---------------------------------------------------------+  // [350]
                                                                 // [---]
    #_NEVER_I_ERR_# :-----------------------------------------+  // [351]
                                                              |  // [351]
        i_err , always set to ZERO or NULL here.              |  // [351]
        An artifact of refactoring some code.                 |  // [351]
                                                              |  // [351]
        This code no longer "errors".                         |  // [351]
        This code "Never Errors"                              |  // [351]
    :---------------------------------------------------------+  // [351]
    #_CLIENT_IS_SERVER_# :------------------------------------+  // [351][------------------]
    #_SERVER_IS_CLIENT_# :------------------------------------+  // [351][------------------]
                                                              |  // [351][------------------]
        The "client" and "server" are the exact same          |  // [351][------------------]
        source file. We are doing some weird shit in          |  // [351][------------------]
        this code base. -KanjiCoder , 2022.10.15              |  // [351][------------------]
                                                              |  // [351][------------------]
        //:NOTE[ #_CLIENT_AND_SERVER_ARE_SAME_FILE_# ]:::://  |  // [351][MOV][346][--------]
        //: TAG[ ./server.js === ./ATOMIC_IVY_MMO.JS ]:::://  |  // [351][MOV][346][--------]
        //: TAG[ ./client.js === ./ATOMIC_IVY_MMO.JS ]:::://  |  // [351][MOV][346][--------]
        //-        client_js =( "./ATOMIC_IVY_MMO.JS" ); -//  |  // [351][MOV][351][346][---]
                                                              |  // [351][------------------]
    :---------------------------------------------------------+  // [351][------------------]
    #_INSIDE_THE_ICECREAM_MACHINE_# :-------------------------+  // [351]
                                                              |  // [351]
        Keeping with our "ice cream" analogy,                 |  // [351]
        this is the core executor function that               |  // [351]
        manages our request to retrieve                       |  // [351]
        [ AIM.JS / ATOMIC_IVY_MMO.JS / server.js / this ]     |  // [351]
                                                              |  // [351]
        We are working on "serving our self"                  |  // [351]
        As in "self serve"                                    |  // [351]
        As in "self serve icecream machines"                  |  // [351]
                                                              |  // [351]
        My neurons like to take too many hops before          |  // [351]
        making decisions, and that's why I am                 |  // [351]
        abstract and creative and hard to follow.             |  // [351]
                                                              |  // [351]
        -KanjiCoder                                           |  // [351]
    :---------------------------------------------------------+  // [351]
    #_AIM_COF_# :---------------------------------------------+  // [351]
                                                              |  // [351]
        Using this tag in only THREE_FUCKING_PLACES to        |  // [352][351]
        make the "flow of information" easier to understand.  |  // [351]
                                                              |  // [351]
        To make the "dots easier to connect".                 |  // [351]
                                                              |  // [351]
        [_AIM_COF_] : Identifies the exact same data          |  // [351]
                    : in two different areas of our           |  // [351]
                    : code base.                              |  // [351]
    :---------------------------------------------------------+  // [351]

    @DONT_USE@: DON'T USE THIS VARIABLE NAME, we have            // [352]
              : another variable name you should use             // [352]
              : instead.                                         // [352]
                                                                 // [352]
    @yes_gae@ : @DONT_USE@ ( YES , is "Google App Engine" )      // [352]
    @not_gae@ : @DONT_USE@ ( Is not   "Google App Engine" )      // [352]
                                                                 // [352]
    @yesgoog@ : YES__is_google_app_engine                        // [352]
    @notgoog@ : IS_NOT__google_app_engine                        // [352]
                                                                 // [352]
    #_BEFORE_27_MINUTES_VIDEO_3_5_2_# :-----------------------+  // [352]
                                                              |  // [352]
        Can your timer be heard going off ?                   |  // [352]
        Oh wait... Desktop audio is off , so you can't        |  // [352]
        review footage to see what happened.                  |  // [352]
                                                              |  // [352]
        Figured it out :                                      |  // [352]
                                                              |  // [352]
        Google search for "set timer 3 seconds"               |  // [352]
        will set timer, but timer will NOT FUCKING BEEP       |  // [352]
        once it gets to zero.                                 |  // [352]
                                                              |  // [352]
        Manually entering values into timer page              |  // [352]
        will however emit a sound.                            |  // [352]
                                                              |  // [352]
    :---------------------------------------------------------+  // [352]
    #_ARE_WE_IN_GOOGLE_APP_ENGINE_# :-------------------------+  // [352]
                                                              |  // [352]
        Unfortunately, google app engine cannot serve         |  // [352]
        files directly from disk. You have to use their       |  // [352]
        cloud storage bullshit.                               |  // [352]
                                                              |  // [352]
        I am not going to fucking do that.                    |  // [352]
                                                              |  // [352]
        But we do need a SOLUTION for file storage that       |  // [352]
        is NEITHER "GOOGLE" or "HEROKU".                      |  // [352]
                                                              |  // [352]
        Don't put all your eggs in one basket.                |  // [352]
                                                              |  // [352]
        I am thinking:                                        |  // [352]
                                                              |  // [352]
            1.  Imgur , to store .PNG files.                  |  // [352]
            2.  GitHub , to store .PNG files and              |  // [352]
               .TXT files that keep a record of what          |  // [352]
               .PNG files are used for what.                  |  // [352]
    :---------------------------------------------------------+  // [352]
    #_PROBABLY_HEROKU_SERVER_# :------------------------------+  // [352]
                                                              |  // [352]
        So far, the only platforms I've deployed this         |  // [352]
        project to are "Google App Engine" and "HEROKU".      |  // [352]
        So if the environment is NOT "Google App Engine"      |  // [352]
        then it is probably heroku server.                    |  // [352]
                                                              |  // [352]
        DEFINITELY HEROKU SERVER if it is in my tutorials.    |  // [352]
        ( as of time writing this )                           |  // [352]
                                                              |  // [352]
        But I can't control if someone takes this open        |  // [352]
        source code and tries to deploy it to                 |  // [352]
        "Vercel" or "Render.Com".                             |  // [352]
                                                              |  // [352]
    :---------------------------------------------------------+  // [352]
    #_WHICH_ENVIRONMENT_# :-----------------------------------+  // [352]
                                                              |  // [352]
        Depending on which environment we are in ,            |  // [352]
        will determine if we can serve the file               |  // [352]
        directly from disk, or have to do a convoluted        |  // [352]
        "Request to ourself for a static file".               |  // [352]
                                                              |  // [352]
    :---------------------------------------------------------+  // [352]
    #_REQUEST_YOURSELF_HERE_2022_# :--------------------------+  // [352]
                                                              |  // [352]
        In this point of code, we need to do an               |  // [352]
        "XMLHTTPRequest" to OURSELVES from the                |  // [352]
        SERVER-SIDE.                                          |  // [352]
                                                              |  // [352]
        Yeah... A pretty fucked up hack.                      |  // [352]
                                                              |  // [352]
        But #1 priority is WORKING_CODE.                      |  // [352]
    :---------------------------------------------------------+  // [352]
    #_DBOC_2022_# :-------------------------------------------+  // [352]
                                                              |  // [352]
        DBOC : Dont_Break_On_Client                           |  // [352]
                                                              |  // [352]
        If we are in a client side environment, the           |  // [352]
        "process" object does __NOT__ exist. So checking      |  // [352]
        properties on it will cause our script to crash.      |  // [352]
                                                              |  // [352]
        Added this "look before you leap" check to our        |  // [352]
        "ternary_stack" that decides if we are in a google    |  // [352]
        app engine environment. ( gae_environment ).          |  // [352]
                                                              |  // [352]
    :---------------------------------------------------------+  // [352]
    
                                                                 // [353]

    #_IAM_NOT_ALWAYS_OKAY_# :---------------------------------+  // [354]
                                                              |  // [354]
        Previously was "i_err" tagged with "_NEVER_I_ERR_"    |  // [354]
                                                              |  // [354]
        Now is "o_k" tagged with "IAM_NOT_ALWAYS_OKAY"        |  // [354]
                             TAG["IAM_NOT_ALWAYS_OK" ]        |  // [354]
    :---------------------------------------------------------+  // [354]
                                                                 // [354]
    #_SAFE_TYPEOF_# :-----------------------------------------+  // [354]
                                                              |  // [354]
        A wrapper function for "typeof" because sometimes     |  // [354]
        the simple ask of asking "Hey what type are you?"     |  // [354]
        Can throw an exception and crash the server.          |  // [354]
                                                              |  // [354]
        Javascript... I hate you... But I hate you            |  // [354]
        much less than Java, because at least you             |  // [354]
        can get stuff done quickly with JavaScript.           |  // [354]
                                                              |  // [354]
        This crash when asking for "typeof i_cof" might       |  // [354]
        be happening because "i_cof" is a truely empty        |  // [354]
        object without a prototype.                           |  // [354]
                                                              |  // [354]
        Object.create( null ); <-- Something like this.       |  // [354]
                                                              |  // [354]
    :---------------------------------------------------------+  // [354]
                                                                 // [354]
    @TYPSTR@ :: YOU_MEAN[ TYPESTR ]( Seven Letters , NOT_6 )     // [354]
    @TYPESTR@ : TYPE_STRing , type of object as a string.        // [354]
                                                                 // [354]
    #_MAYBE_IAM_ALWAYS_OK_# :---------------------------------+  // [354]
                                                              |  // [354]
        This code is kind of under construction. So           |  // [354]
        it may or may not "make sense" in the fact that       |  // [354]
        the "o_k" variable might never get set to "not okay"  |  // [354]
        ( zero or negative ) status.                          |  // [354]
                                                              |  // [354]
        I am a flip flopper , crock wearer.                   |  // [354]
                                                              |  // [354]
    :---------------------------------------------------------+  // [354]

    #_STRING_REPLACE_ALL_# :----------------------------------+  // [355]
                                                              |  // [355]
        At some point during pre-processing , the string      |  // [355]
        we are trying to pre-process turns into               |  // [355]
        "NOT A FUCKING STRING".                               |  // [355]
                                                              |  // [355]
        To help figure out what is going wrong, we will       |  // [355]
        create a wrapper function for "<string>.replaceAll"   |  // [355]
                                      (  string.replaceAll )  |  // [355]
    :---------------------------------------------------------+  // [355]
    #DONT_THROW_ERROR_HERE# :---------------------------------+  // [355]
    @DONT_THROW_ERROR_HERE@ :---------------------------------+  // [355]
                                                              |  // [355]
        Don't throw error here. Because it will hurt our      |  // [355]
        ability to diagnose what is going wrong with          |  // [355]
        the server.                                           |  // [355]
                                                              |  // [355]
        The underlying reason for "fail fast" is to           |  // [355]
        "quickly find out what is going wrong"                |  // [355]
        and to                                                |  // [355]
        "quickly know something is going wrong".              |  // [355]
                                                              |  // [355]
        Crashing immediately right here does __NOT__          |  // [355]
        help us achieve those goals.                          |  // [355]
                                                              |  // [355]
    :---------------------------------------------------------+  // [355]
    :---------------------------------------------------------+  // [355]

    #_REMOVED_REGEX_CODE_2022_# :-----------------------------+  // [356]
                                                              |  // [356]
        o_str = i_bod.replace( //////////            // [356] |  // [356]
            ( new RegExp( i_fin , 'g' ) )            // [356] |  // [356]
        ,   (           ( i_rep       ) )            // [356] |  // [356]
        );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;            // [356] |  // [356]
                                                              |  // [356]
        I don't think the code above does what I think        |  // [356]
        it does. We are going to use a simple                 |  // [356]
        "string.split" and "string.join"                      |  // [356]
    :---------------------------------------------------------+  // [356]

    #PHONEHOME# :---------------------------------------------+  // [357]
    @PHONEHOME@ :---------------------------------------------+  // [357]
                                                              |  // [357]
        Code that allows our application to "phone home"      |  // [357]
        to it's API on the server. We did this type of        |  // [357]
        code long-ago in a HEROKU_SPECIFIC way, we need       |  // [357]
        to create a helper function that gives us two         |  // [357]
        different "web-root" strings depending on if we       |  // [357]
        are in "google app engine" or "heroku servers".       |  // [357]
                                                              |  // [357]
    :---------------------------------------------------------+  // [357]
    :---------------------------------------------------------+  // [357]
    #_WHO_THE_FUCK_DO_YOU_THINK_YOU_ARE_# :-------------------+  // [357]
                                                              |  // [357]
        No, seriously. Who does this server think they are?   |  // [357]
        Do they think they are a "heroku server" or a         |  // [357]
        "google app engine server" ?                          |  // [357]
                                                              |  // [357]
    :---------------------------------------------------------+  // [357]

    #_ARE_WE_IN_HEROKU_APP_SERVER_# :-------------------------+  // [358]
                                                              |  // [358]
        Adding environment detection flags to lets us         |  // [358]
        know if the code is running on a[ heroku_server ]     |  // [358]
        or a [ google_server ].                               |  // [358]
                                                              |  // [358]
        Doing this because right now we are assuming that     |  // [358]
        if we are __NOT__ in a[ google_server ]that it        |  // [358]
        must be a[ heroku_server ].                           |  // [358]
                                                              |  // [358]
        But eventually we will probably want to deploy to     |  // [358]
        [ render.com ]or[ vercel ]cloud_platforms.            |  // [358]
                                                              |  // [358]
        So explicitly stating which environment we are        |  // [358]
        within is a good idea.                                |  // [358]
    :---------------------------------------------------------+  // [358]
                                                                 // [358]
    @[CAP]@ : Copy_And_Paste ( Delta Marker Code Thingy )        // [358]

    
    #_EXPECTED_EDCL_2022_10_17_# :----------------------------+  // [359]
                                                              |  // [359]
        Expected[ EDCL ]2022_10_17                            |  // [359]
                                                              |  // [359]
        @EDCL@ : Expected_Dead_Code_Line                      |  // [359]
               : AKA: Expected Unreachable Branch Of Code     |  // [359]
                                                              |  // [359]
    :---------------------------------------------------------+  // [359]
    #_DO_YOU_HAVE_AMNESIA_# :---------------------------------+  // [359]
                                                              |  // [359]
        If you don't know who you are...                      |  // [359]
        Are you google server? ( yesgoog === 1 )              |  // [359]
        Are you heroku server? ( yeshero === 1 )              |  // [359]
        Then you have AMNESIA and thus you do                 |  // [359]
        ___NOT___ have a valid "WEBROOT" that we              |  // [359]
        can use to phone home.                                |  // [359]
                                                              |  // [359]
        We can't call your parents because you don't          |  // [359]
        know your phone number. You don't even know           |  // [359]
        where you live. We better get your head checked.      |  // [359]
    :---------------------------------------------------------+  // [359]

    #_HIDING_INFORMATION_IN_PLAIN_SIGHT_# :-------------------+  // [361]
                                                              |  // [361]
        Below : A 3X3 "Fluffy Pixel" Image :                  |  // [361]
                                                              |  // [361]
            +--------+--------+--------+                      |  // [361]
            | [R][G] | [R][G] | [R][G] |                      |  // [361]
            | [B][A] | [B][A] | [B][A] |                      |  // [361]
            +--------+--------+--------+                      |  // [361]
            | [R][G] | [R][G] | [R][G] |                      |  // [361]
            | [B][A] | [B][A] | [B][A] |                      |  // [361]
            +--------+--------+--------+                      |  // [361]
            | [R][G] | [R][G] | [R][G] |                      |  // [361]
            | [B][A] | [B][A] | [B][A] |                      |  // [361]
            +--------+--------+--------+                      |  // [361]
                                                              |  // [361]
            [R] : Is a red pixel who's other channels         |  // [361]
                : ( G,B,A ) must be exactly ZERO.             |  // [361]
                    G_B_A                                     |  // [361]
                                                              |  // [361]
            [G] : Is a green pixel who's other channels       |  // [361]
                : ( R,B,A ) must be exactly ZERO.             |  // [361]
                    R_B_A                                     |  // [361]
                                                              |  // [361]
            [B] : Is a blue pixel who's other channels        |  // [361]
                : ( R,G,A ) must be exactly ZERO.             |  // [361]
                    R_G_A                                     |  // [361]
                                                              |  // [361]
            [A] : Is a alpha pixel who's other channels       |  // [361]
                : ( R,G,B ) must be exactly ZERO.             |  // [361]
                    R_G_B                                     |  // [361]
                                                              |  // [361]
        The [A] pixel is where we hide 1/4 th of our data.    |  // [361]
                                                              |  // [361]
        The [R][G][B] pixels are used to display an image     |  // [361]
        at 4X it's original size. So a "nearest-neighbor"     |  // [361]
        scale up kind of look.                                |  // [361]
                                                              |  // [361]
        Levelpacks are encoded as 512x512 images in           |  // [361]
        texture memory. We can split the level pack           |  // [361]
        into 4 layers, by channel and then create a           |  // [361]
        512x2048 vertical image that hides the data.          |  // [361]
                                                              |  // [361]
        The 512x2048 could for example , be 4 images          |  // [361]
        of cats that have been glued together and             |  // [361]
        stacked on top of each other.                         |  // [361]
                                                              |  // [361]
    :-------------------: #_HIDING_INFORMATION_IN_PLAIN_SIGHT_#  // [361]
    #_NEVER_SAVE_LOAD_# :-------------------------------------+  // [361]
                                                              |  // [361]
        I take it back. I think TILEBOI should stick to just  |  // [361]
        tilemap data manipulations. But not have any          |  // [361]
        "file system" or "file saving" or "file loading"      |  // [361]
        behavior.                                             |  // [361]
                                                              |  // [361]
        There is already a decent chunk of code in it.        |  // [361]
                                                              |  // [361]
        I think "FILEMOB" should come ___AFTER___ "TILEBOI".  |  // [361]
                                                              |  // [361]
        Because "FILEMOB" might need to use "TILEBOI"         |  // [361]
        as a tool to figure out what                          |  // [361]
        [ pixel-sectors / pixel-chunks ]of memory it is       |  // [361]
        saving or loading.                                    |  // [361]
    :---------------------------------------------------------+  // [361]
    #_DONT_ASK_WHERE_WE_GOT_THIS_FROM_# :---------------------+  // [361]
                                                              |  // [361]
        Don't ask how we got your data. Just be greatful      |  // [361]
        that we were able to do this favor for you on         |  // [361]
        this , the day of my daughter's wedding.              |  // [361]
                                                              |  // [361]
        RELATED_SECTION[ _HIDING_INFORMATION_IN_PLAIN_SIGHT_ ]|  // [361]
                                                              |  // [361]
    :---------------------------------------------------------+  // [361]
    #_WHAT_DO_YOU_MEAN_FILE_MOB_# :---------------------------+  // [361]
                                                              |  // [361]
        FILEMOB === FILEMAFIA / FILE_MAFIA / THE_FILE_MOB     |  // [361]
                === FILEGANG  / FILE_GANG  / FILE_CARTEL      |  // [361]
                === ORGANIZED_FILE_SYSTEM_CRIME_SYNDICATE     |  // [361]
                                                              |  // [361]
        FILEMOB does __NOT__ mean :                           |  // [361]
                                                              |  // [361]
            1. FILEGANGSTERS / FILE_GANGSTER                  |  // [361]
            2. FILEHITMAN    / FILE_HITMAN                    |  // [361]
                                                              |  // [361]
        The idea is that it represents a "shady organization" |  // [361]
        devoted to loading and saving your files.             |  // [361]
        Don't fucking ask how we do our jobs, just be         |  // [361]
        greatful that we do this job for you.                 |  // [361]
                                                              |  // [361]
        Do you want your files or not?                        |  // [361]
    :---------------------------------------------------------+  // [361]

    #_COPY_MEMORY_INTO_512_X_512_# :--------------------------+  // [362]
                                                              |  // [362]
        +---===---+    Copy bitmap memory from PIX2048 into   |  // [362]
        |         |    a 512x512 chunk of memory that we      |  // [362]
        |   a_0   |    can then use 3rd-party UPNG library    |  // [362]
        |         |    on to save into png-binary format.     |  // [362]
        +---=^=---+                                           |  // [362]
             ^                                                |  // [362]
             ^                                                |  // [362]
        +----+------------------------+                       |  // [362]
        |                             |                       |  // [362]
        |   Any  [h3x,h3y]  === a_1   |                       |  // [362]
        |                             |                       |  // [362]
        +---a_1-------a_1-------a_1---+                       |  // [362]
             |         |         |                            |  // [362]
             V         V         V                            |  // [362]
        +---===---+---===---+---===---+---===---+             |  // [362]
        |         |         |         |         |             |  // [362]
        |[h3x,h3y]|[h3x,h3y]|[h3x,h3y]|   ///   |             |  // [362]
        |         |         |         |         |             |  // [362]
        +---===---+---===---+---===---+---===---+             |  // [362]
        |         |         |         |         |             |  // [362]
        |[h3x,h3y]|[h3x,h3y]|[h3x,h3y]|   ///   |             |  // [362]
        |         |         |         |         |             |  // [362]
        +---===---+---===---+---===---+---===---+             |  // [362]
        |         |         |         |         |             |  // [362]
        |[h3x,h3y]|[h3x,h3y]|[h3x,h3y]|   ///   |             |  // [362]
        |         |         |         |         |             |  // [362]
        +---===---+---===---+---===---+---===---+             |  // [362]
        |         |         |         |         |             |  // [362]
        |   ///   |   ///   |   ///   |   ///   |             |  // [362]
        |         |         |         |         |             |  // [362]
        +---===---+---===---+---===---+---===---+             |  // [362]
        |                                       |             |  // [362]
        |<--512-->|<--512-->|<--512-->|<--512-->|             |  // [362]
        |<---------------- 2048 --------------->|             |  // [362]
        |<----------[ d_pix2048 ]-------------->|             |  // [362]
                                                              |  // [362]
    :---------------------------------------------------------+  // [362]
                                                                 // [362]
    @pix_512@   : YOU_MEAN[ d_mp0_512 || d_mp1_512 ]             // [362]
    @d_pix_mp0@ : YOU_MEAN[ d_mp0_512 || _________ ]             // [362]
    @d_pix_mp1@ : YOU_MEAN[ _________ || d_mp0_512 ]             // [362]
    @d_mp0_pix@ : YOU_MEAN[ d_mp0_512 || _________ ]             // [362]
    @d_mp1_pix@ : YOU_MEAN[ _________ || d_mp0_512 ]             // [362]
                                                                 // [362]
    @ARR_DST@ ::: Array - Destination                            // [362]
    @ARR_SRC@ ::: Array - Source                                 // [362]
                                                                 // [362]
    #_ERROR_CHECK_H3X_H3Y_# :---------------------------------+  // [362]
                                                              |  // [362]
        Make sure[ i_h3x , i_h3y ]is within the valid         |  // [362]
        bounds of a [ 3 x 3 ]grid where addresses are         |  // [362]
        [ 0 || 1 || 2 ]inclusive.                             |  // [362]
                                                              |  // [362]
        These addresses represent which levelpack on          |  // [362]
        "THE_DUM" we are targeting.                           |  // [362]
                                                              |  // [362]
    :---------------------------------------------------------+  // [362]

    #_USE_PNG_ENCODER_# :-------------------------------------+  // [363]
                                                              |  // [363]
        Use a "wrapper function" that wraps "UPNG"            |  // [363]
        "encoder/decoder" library. Wrapping our dependencies  |  // [363]
        makes things easier to work with and to refactor.     |  // [363]
    :---------------------------------------------------------+  // [363]
    #ARG_PIXARRA# :-------------------------------------------+  // [363]
    #ARG_BINARRA# :-------------------------------------------+  // [363]
                                                              |  // [363]
        @arg_pixarra@ : ARGUMENT - PIXARRA                    |  // [363]
        @arg_binarra@ : ARGUMENT - BINARRA                    |  // [363]
                                                              |  // [363]
        We prefixed these with "arg" for "argument"           |  // [363]
        instead of "i_" for "input" because we wanted         |  // [363]
        to maintain the balance of                            |  // [363]
        " [ i_ || o_ ]+[ pixarra || binarra ] "               |  // [363]
        variable names in the code we have                    |  // [363]
        written so far.                                       |  // [363]
                                                              |  // [363]
        I don't like ASSYMETRY.                               |  // [363]
                                                              |  // [363]
        "ASSYMETRY" should be a sign of a bug in my code.     |  // [363]
                                                              |  // [363]
        @err_pixarra@ : Error Message If Assert Fails.        |  // [363]
        @err_binarra@ : Error Message If Assert Fails.        |  // [363]
                                                              |  // [363]
    :---------------------------------------------------------+  // [363]
    :---------------------------------------------------------+  // [363]
    #_WE_DONT_KNOW_EXACT_PNG_FILE_SIZE_# :--------------------+  // [363]
                                                              |  // [363]
        We don't know the exact .PNG file size.               |  // [363]
        So we are going to just have to assume any            |  // [363]
        file size in binary that is greater than              |  // [363]
        zero is okay....                                      |  // [363]
                                                              |  // [363]
        Or...                                                 |  // [363]
                                                              |  // [363]
        Can we find the "Smallest Hypothetical .PNG size?"    |  // [363]
                                                              |  // [363]
        https://garethrees.org/2007/11/14/pngcrush/           |  // [363]
                                                              |  // [363]
        This website is saying "68" bytes is the              |  // [363]
        smallest .PNG size possible. SO....                   |  // [363]
                                                              |  // [363]
        Lets say that, for a 512x512 image, that              |  // [363]
        it should be at least.... "42" bytes.                 |  // [363]
                        TAG[ _PNG_042_ ]( Magic Number 42 )   |  // [363]
                                                              |  // [363]
        An arbitrary fun number that is LESS THAN "68".       |  // [363]
                                                              |  // [363]
        Erroring on the side of caution.                      |  // [363]
                                                              |  // [363]
    :---------------------------------------------------------+  // [363]
    #_FILE_MOB_ERROR_CHECKERS_# :-----------------------------+  // [363]
                                                              |  // [363]
        Error checking functions used by the file mob.        |  // [363]
        Error checking functions used by the file mafia.      |  // [363]
    :---------------------------------------------------------+  // [363]
    #_FILE_MOB_PNG_WRAPPERS_# :-------------------------------+  // [363]
                                                              |  // [363]
        [ PNG encoder / PNG decoder ] library                 |  // [363]
        wrapper. Currently, as of writing this,               |  // [363]
        wrapping the "UPNG" library.                          |  // [363]
    :---------------------------------------------------------+  // [363]
    #_GUESS_512_# :-------------------------------------------+  // [363]
    #_G_512_# :-----------------------------------------------+  // [364]
    TAG[  G_512  ]                                            |  // [364]
                                                              |  // [363]
        We are guessing that the .PNG binary file that        |  // [363]
        results from takig the 512x512 uncompressed           |  // [363]
        image will be SMALLER than the original image.        |  // [363]
                                                              |  // [363]
        This is a GUESS.                                      |  // [363]
                                                              |  // [363]
        My intuition says that in very rare edge cases,       |  // [363]
        you could end up with a .PNG file that is             |  // [363]
        bigger than the uncompressed file.                    |  // [363]
                                                              |  // [363]
        ....HMMM....                                          |  // [363]
                                                              |  // [363]
        I think with a very small ( 1x1 --to-- 32x32 )        |  // [363]
        image we might seriously run this risk.               |  // [363]
                                                              |  // [363]
        But for compression of a 512x512 image,               |  // [363]
        I think that it is very unlikely that we will         |  // [363]
        run into this edge case.                              |  // [363]
                                                              |  // [363]
        So... Don't worry about it.                           |  // [363]
    :---------------------------------------------------------+  // [363]
    :---------------------------------------------------------+  // [364]
                                                                 // [363]
    @PIXARRA@ : PIXel__ARRay                                     // [363]
    @BINARRA@ : BINary_ARRay                                     // [363]
                                                                 // [363]
    @i_pixarra@ : Input  Pixel__Array                            // [363]
    @o_pixarra@ : Output Pixel__Array                            // [363]
                                                                 // [363]
    @i_binarra@ : Input  Binary_Array                            // [363]
    @o_binarra@ : Output Binary_Array                            // [363]
                                                                 // [363]
    @BufferDat@ : Buffer / Data                                  // [363]

    #_OUTPUT_NUMBER_OF_USED_BYTES_# :-------------------------+  // [364]
                                                              |  // [364]
        Things are going to get a bit weird, in the           |  // [364]
        interests of trying to work around the                |  // [364]
        garbage collector. Hopefully what we are doing        |  // [364]
        doesn't actually make garbage collection WORSE.       |  // [364]
                                                              |  // [364]
    :---------------------------------------------------------+  // [364]
    #_UPNG_ENCODE_# :-----------------------------------------+  // [364]
                                                              |  // [364]
        Denoting the callsite for UPNG.ENCODE function call.  |  // [364]
    :---------------------------------------------------------+  // [364]
    #BINLEN_42# :---------------------------------------------+  // [364]
                                                              |  // [364]
        Number of used bytes should be greater than           |  // [364]
        or equal to 42. If otherwise, we probably do          |  // [364]
        __NOT__ have a valid .PNG file of an encoded          |  // [364]
        512x512 image.                                        |  // [364]
    :---------------------------------------------------------+  // [364]
    #_RETURN_NUM_USED_BYTES_# :-------------------------------+  // [364]
                                                              |  // [364]
        To carefully work our way around the garbage          |  // [364]
        collector, we need to return the number of bytes      |  // [364]
        that were __USED__ when encoding the binary file.     |  // [364]
                                                              |  // [364]
        The capacity of the block of memory we are using      |  // [364]
        is[ 512 * 512 * 4 ]bytes, but 99.999% of the time     |  // [364]
        we are using __LESS__ than that number of bytes.      |  // [364]
    :---------------------------------------------------------+  // [364]
                                                                 // [364]
    @bytedex_binarra@ : BINARRA's current byte index.            // [364]
    @numbyte_binarra@ : BINARRA's number of USED/VALID bytes.    // [364]
    @trashme_binarra@ : BINARRA buffer from .PNG library.        // [364]
                                                                 // [364]
    @trashme@ ::::::::: Memory we want to delete immediately     // [364]
              ::::::::: before exiting scope to protect          // [364]
              ::::::::: ourselves from garbage collector.        // [364]
                                                                 // [364]
    @bytedex@ ::::::::: Index accessor of byte within array.     // [364]
    @numbyte@ ::::::::: Number of bytes within uint8  array.     // [364]

    #_KONAMIC_PROCEEDURE_ENUMS_# :----------------------------+  // [365]
                                                              |  // [365]
        TAG[ _konamic_proc_enums_ ]Because I don't know how   |  // [365]
        TAG[  konamic_proc_enums  ]To Spell[ proceedure ]     |  // [365]
                                                              |  // [365]
        Instead of using function pointers , we use           |  // [365]
        "Procedure Enums" / "Procedure Enumerations".         |  // [365]
                                                              |  // [365]
        They are integer values the uniquely identify         |  // [365]
        the code we would like to run.                        |  // [365]
                                                              |  // [365]
        The code we end up running does __NOT__ need          |  // [365]
        to be a function call, it can just be an              |  // [365]
        inlined block of code in a "switch statement"         |  // [365]
        that activates when that "PROCEDURE_ENUM"             |  // [365]
        has been selected.                                    |  // [365]
                                                              |  // [365]
        I am writing this comment as a review because         |  // [365]
        it has been a while since I did anything with         |  // [365]
        KONAMIC SYSTEM.                                       |  // [365]
                                                              |  // [365]
    :---------------------------------------------------------+  // [365]
                                                                 // [365]
    @LAX_COMMA_HACK@ : The only reason this string exists        // [365]
                     : is so that every line of code after       // [365]
                     : can START_WITH_A_COMMA and be valid       // [365]
                     : javascript code.                          // [365]
                                                                 // [365]
    #_KONAMIC_SAVE_CEN_# :------------------------------------+  // [365]
                         TAG[ _KON_SAV_CEN_ ]                 |  // [366]
                         TAG[    K_SAV_C    ]                 |  // [367]
                                                              |  // [365]
        A debug procedure for ______SAVING______              |  // [365]
        the central levelpack within the dum.                 |  // [365]
        So the levelpack at :::::::::::::::::::::             |  // [365]
                                                              |  // [365]
            [h3x,h3y]===[ 1,1 ]                               |  // [365]
                                                              |  // [365]
    :---------------------------------------------------------+  // [365]
    #_KONAMIC_LOAD_CEN_# :------------------------------------+  // [365]
                         TAG[ _KON_LOD_CEN_ ]                 |  // [366]
                         TAG[    K_LOD_C    ]                 |  // [367]
                                                              |  // [365]
        A debug procedure for ______LOADING______             |  // [365]
        the central levelpack within the dum.                 |  // [365]
        So the levelpack at :::::::::::::::::::::             |  // [365]
                                                              |  // [365]
            [h3x,h3y]===[ 1,1 ]                               |  // [365]
                                                              |  // [365]
    :---------------------------------------------------------+  // [365]
    
    @L_C_H@ : Means: "Lax_Comma_Hack" :::::::::::::::::::::::::  // [366]
    @L___C___H@ :::: "Lax_Comma_Hack" :::::::::::::::::::::::::  // [366]
                                                                 // [366]
    #_KONAMIC_SAVE_LOAD_ENUMS_# :-----------------------------+  // [366]
    #_KONAMIC_LOAD_SAVE_ENUMS_# :-----------------------------+  // [366]
                                                              |  // [366]
        @c_konamic_savecen_ram@ : SAVE to   RANDOM_ACCESS_MEM |  // [366]
        @c_konamic_loadcen_ram@ : LOAD from RANDOM_ACCESS_MEM |  // [366]
                                                              |  // [366]
        @c_konamic_savecen_dsk@ : SAVE to   RANDOM_ACCESS_MEM |  // [366]
        @c_konamic_loadcen_dsk@ : LOAD from RANDOM_ACCESS_MEM |  // [366]
                                                              |  // [366]
        @c_konamic_savecen_web@ : SAVE to   RANDOM_ACCESS_MEM |  // [366]
        @c_konamic_loadcen_web@ : LOAD from RANDOM_ACCESS_MEM |  // [366]
                                                              |  // [366]
    :---------------------------------------------------------+  // [366]
    :---------------------------------------------------------+  // [366]
                                                                 // [366]
    @[DPR]@ : Duplicate_Paste_Refactor ,              :::::::::  // [366]
            : Like "@[CPR]@" but means we took some   :::::::::  // [366]
            : lines of code and pasted them multiple  :::::::::  // [366]
            : times, before refactoring each one      :::::::::  // [366]
            : of the paste sites.                     :::::::::  // [366]

    @SHORTHAND@ : Shorthand Temporary Variable ::::::::::::::::  // [367]
                                                                 // [367]
    @epi@ : Enumeration_Procedure_Index                          // [367]
                                                                 // [367]
    #_ZEN_VS_JOT_# :------------------------------------------+  // [367]
    #_JOT_VS_ZEN_# :------------------------------------------+  // [367]
                                                              |  // [367]
        @JOT@ : Denoting the LOWER/MIN bound.                 |  // [367]
        @ZEN@ : Denoting the UPPER/MAX bound.                 |  // [367]
        @j_0@ : Means "JOT" , Zero Denotes Lower Bound.       |  // [367]
        @z_1@ : Means "ZEN" , One  Denotes Upper Bound.       |  // [367]
                                                              |  // [367]
        "Min" and "Max" are crappy because you cannot         |  // [367]
        abbreivate them to a single letter, because both      |  // [367]
        would be abbreviated "M".                             |  // [367]
                                                              |  // [367]
        "Jot" and "Zen" are better because we can             |  // [367]
        abbreviate them as "J" or "Z".                        |  // [367]
                                                              |  // [367]
        Or abbreviate as "J_0" and "Z_1" for extra            |  // [367]
        clarity if we have the column space.                  |  // [367]
    :---------------------------------------------------------+  // [367]
    :---------------------------------------------------------+  // [367]
    #_PROC_ENUM_ORDER_CONSTRAINT_# :--------------------------+  // [367]
                                                              |  // [367]
        Some procedur enumerations should be constrainted     |  // [367]
        to be consequitive and grouped together in a          |  // [367]
        certain relative order.                               |  // [367]
                                                              |  // [367]
        This section of code asserts those constraints.       |  // [367]
    :---------------------------------------------------------+  // [367]
    #_DECIDED_NO_EPI_LUT_# :----------------------------------+  // [367]
                                                              |  // [367]
        Decided NOT TO DO THIS :---------+                    |  // [367]
        TOO_COMPLEX_2022 :-------------+ |                    |  // [367]
                                       | |                    |  // [367]
            let epi_lut =[             | |                    |  // [367]
            ,   F_KONAMIC_SAVECEN_RAM  | |                    |  // [367]
            ,   F_KONAMIC_LOADCEN_RAM  | |                    |  // [367]
            ,   F_KONAMIC_SAVECEN_DSK  | |                    |  // [367]
            ,   F_KONAMIC_LOADCEN_DSK  | |                    |  // [367]
            ,   F_KONAMIC_SAVECEN_WEB  | |                    |  // [367]
            ,   F_KONAMIC_LOADCEN_WEB  | |                    |  // [367]
            ];;                        | |                    |  // [367]
            epi_lut[ epi ]();          | |                    |  // [367]
        :------------------------------+ |                    |  // [367]
        :--------------------------------+                    |  // [367]
                                                              |  // [367]
        Lookup tables are fun and efficient. But they         |  // [367]
        also make the code more abstract. If a lookup         |  // [367]
        table is __NOT__ VITAL TO PERFORMANCE , then          |  // [367]
        we should avoid it and favor[ simpler / stupider ]    |  // [367]
        code.                                                 |  // [367]
                                                              |  // [367]
        @K_I_S_S@ : Keep_It_Simple_Stupid.                    |  // [367]
    :---------------------------------------------------------+  // [367]

    @_CENTER_H3X_@ : Centeral Levelpack Cell Coord , X-Axis      // [368]
    @_CENTER_H3Y_@ : Centeral Levelpack Cell Coord , Y-Axis      // [368]
    #_CENTER_H3X_# :------------------------------------------+  // [368]
    #_CENTER_H3Y_# :------------------------------------------+  // [368]
                                                              |  // [369]
        @cen_h3x@ : Hotel_cell_coord , CENTER levelpack - X   |  // [369]
        @cen_h3y@ : Hotel_cell_coord , CENTER levelpack - Y   |  // [369]
                                                              |  // [369]
                                                              |  // [368]
        @lev_pak@ : One of the 9 level packs in our           |  // [368]
                  : 3x3 grid of levelpacks.                   |  // [368]
                  : TAG[ #_FILEMOB_LEVEL_PASTE_# ]            |  // [374]
                                                              |  // [368]
        |<---------@_DATA_LAYOUT_@--------------------->|     |  // [368]
        |<-------@_RENDER_LAYOUT_@------->|             |     |  // [368]
        +---===---+ +---===---+ +---===---+   +---===---+     |  // [368]
        |         | |         | |         |   |         |     |  // [368]
        | lev_pak | | lev_pak | | lev_pak |   | _-_-_-_ |     |  // [368]
        |         | |         | |         |   |         |     |  // [368]
        +---===---+ +---===---+ +---===---+   +---===---+     |  // [368]
        +---===---+ +---===---+ +---===---+   +---===---+     |  // [368]
        |         | | cen_h3x | |         |   |         |     |  // [368]
        | lev_pak | | lev_pak | | lev_pak |   | _-_-_-_ |     |  // [368]
        |         | | cen_h3y | |         |   |         |     |  // [368]
        +---===---+ +---===---+ +---===---+   +---===---+     |  // [368]
        +---===---+ +---===---+ +---===---+   +---===---+     |  // [368]
        |         | |         | |         |   |         |     |  // [368]
        | lev_pak | | lev_pak | | lev_pak |   | _-_-_-_ |     |  // [368]
        |         | |         | |         |   |         |     |  // [368]
        +---===---+ +---===---+ +---===---+   +---===---+     |  // [368]
                                                              |  // [368]
        +---===---+ +---===---+ +---===---+   +---===---+     |  // [368]
        |         | |         | |         |   |         |     |  // [368]
        | _-_-_-_ | | _-_-_-_ | | _-_-_-_ |   | _-_-_-_ |     |  // [368]
        |         | |         | |         |   |         |     |  // [368]
        +---===---+ +---===---+ +---===---+   +---===---+     |  // [368]
                                                              |  // [368]
                                                              |  // [368]
        @_DATA_LAYOUT_@ : How things are physically arranged  |  // [368]
                        : on[ d_pix2048 ]( MasterMemory ).    |  // [368]
                                                              |  // [368]
        @_RENDER_LAYOUT_@ : How things appear spacially       |  // [368]
                          : in the renderer.                  |  // [368]
                                                              |  // [368]
    :---------------------------------------------------------+  // [368]
    :---------------------------------------------------------+  // [368]
                                                                 // [368]
    @BEG_F_BOD@ : BEGin_Function_BODy                            // [368]
    @END_F_BOD@ : END___Function_BODy                            // [368]
                                                                 // [368]
    @_D_KEY_@ : Somehow the "_D_" key is involved here.          // [368]
    @_E_KEY_@ : Somehow the "_E_" key is involved here.          // [368]
    @_F_KEY_@ : Somehow the "_F_" key is involved here.          // [368]
    @_G_KEY_@ : Somehow the "_G_" key is involved here.          // [368]
    @_S_KEY_@ : Somehow the "_S_" key is involved here.          // [368]
    @_L_KEY_@ : Somehow the "_L_" key is involved here.          // [368]

    #_GHETTO_SAVE_# :-----------------------------------------+  // [369]
    #_GHETTO_LOAD_# :-----------------------------------------+  // [369]
                                                              |  // [369]
        @IDEA@ : Sneaky Save+Load Technique that is           |  // [369]
               : [artist/Josh/Joshicus]friendly.(BELOW)       |  // [369]
                                                              |  // [369]
        If we tag certain images with                         |  // [369]
        [ #_ATOMIC_IVY_MMO_ADDRESS_000_000_000_# ]            |  // [369]
      OR[ #_AIM_000_000_000_# ]                               |  // [369]
                                                              |  // [369]
        We could manually load from harddrive to imgur        |  // [369]
        using the standard[ www.imgur.com ]web interface.     |  // [369]
                                                              |  // [369]
        Then use the[ imgur_api ]to seach for images          |  // [369]
        with the correct address tag when loading             |  // [369]
        levels.                                               |  // [369]
    :---------------------------------------------------------+  // [369]
    :---------------------------------------------------------+  // [369]
    #_UPNG_IS_NOT_ALRIGHT_2022_# :----------------------------+  // [369]
                                                              |  // [369]
        Most likely cause is that when we were trying to      |  // [369]
        re-format the UPNG_LIBRARY , we accidentially         |  // [369]
        fucked something up seriously.                        |  // [369]
                                                              |  // [369]
        We have HOTEL13.JS for reference of the working       |  // [369]
        library. We might want to cut+paste from there        |  // [369]
        into this code base to get it working again.          |  // [369]
                                                              |  // [369]
        And we really need some tests to make sure that       |  // [369]
        UPNG_LIBRARY is in-tact as it has a lot of            |  // [369]
        moving parts. One gear out of place and the           |  // [369]
        whole thing breaks. And I would not be able           |  // [369]
        to tell you which gear it was that fell loose.        |  // [369]
    :---------------------------------------------------------+  // [369]
    #_IS_IT_A_FUCKING_ARRAY_# :-------------------------------+  // [369]
                                                              |  // [369]
        Turns out that[ Array.isArray ]will return false      |  // [369]
        on typed arrays like[ Uint8Array ]And[ Uint32Array ]. |  // [369]
                                                              |  // [369]
        As we need to assert for specific typed arrays,       |  // [369]
        we will add helper functions to this                  |  // [369]
        "Is It A Fucking Array" section of code within        |  // [369]
        the "top level helper functions" section of           |  // [369]
        our code base.                                        |  // [369]
                                                              |  // [369]
    :---------------------------------------------------------+  // [369]

    #_FILEMOB_DECODER_VARS_# :--------------------------------+  // [370]
                                                              |  // [370]
        Declaring your variables ahead of                     |  // [370]
        time at top of function in C99 style.                 |  // [370]
                                                              |  // [370]
        Many of these variable names were stolen from         |  // [370]
        [ HOTEL13.JS ], as [ HOTEL13.JS ] actually has        |  // [370]
        decent save+load functionality built into it.         |  // [370]
                                                              |  // [370]
    :---------------------------------------------------------+  // [370]
    #_COPY_USABLE_BYTES_# :-----------------------------------+  // [370]
                                                              |  // [370]
        The buffer we send in might actually be BIGGER        |  // [370]
        than the actual meaningful data. So we need to        |  // [370]
        copy over the usable bytes into a new Uint8Array      |  // [370]
    :---------------------------------------------------------+  // [370]
    #_DECODE_THAT_SHIT_# :------------------------------------+  // [370]
                                                              |  // [370]
        The moment of truth. If we can use UPNG_LIBRARY       |  // [370]
        to decode and load the data back into our             |  // [370]
        tilemap, then we will have successfully               |  // [370]
        executed a "load+save" locally to R.A.M.              |  // [370]
        ( R.A.M. === Random_Access_Memory )                   |  // [370]
                                                              |  // [370]
        @buf_3pc@ : buffer:3rd_party_code                     |  // [370]
        @img_3pc@ : image::3rd_party_code                     |  // [370]
                                                              |  // [370]
        @3pc@ ::::: 3rd_party_code                            |  // [370]
        @buf@ ::::: buffer                                    |  // [370]
        @img@ ::::: image                                     |  // [370]
                                                              |  // [370]
    :---------------------------------------------------------+  // [370]
    #_COPY_INTO_OUTPUT_# :------------------------------------+  // [370]
                                                              |  // [370]
        If we were able to get the un-compressed RGBA         |  // [370]
        byte array representing a 512_x_512 bitmap,           |  // [370]
        copy that data into the output parameter              |  // [370]
        given to argument list of function.                   |  // [370]
    :---------------------------------------------------------+  // [370]
    #_FUCK_YOU_GARBAGE_MAN_# :--------------------------------+  // [370]
                                                              |  // [370]
        The fight with the garbage collector is on.           |  // [370]
        I am afraid we might not have a flawless victory      |  // [370]
        against such a formidable foe. If only Goku           |  // [370]
        was here to save us.                                  |  // [370]
    :---------------------------------------------------------+  // [370]

    #_CLEANING_BASEMENT_2022_# :------------------------------+  // [371]
                                                              |  // [371]
        Background and foreground building by making          |  // [371]
        a system of pieces that fit together like             |  // [371]
        your "BOLT-BONE" patent.                              |  // [371]
                                                              |  // [371]
        +-------+               []      []                    |  // [371]
        | +---+ |     +---+      \\    //                     |  // [371]
        | |   | |  +  |   |  +      ()                        |  // [371]
        | +---+ |     +---+       //  \\                      |  // [371]
        +-------+               []      []                    |  // [371]
                                                              |  // [371]
        FRAME      + INSET_PANEL + CAPPER_PANEL               |  // [371]
                                                              |  // [371]
            FRAME : Could be a wooden frame with hollow in    |  // [371]
                  : the middle.                               |  // [371]
                                                              |  // [371]
            INSET_PANEL : Could be a flat rounded glass       |  // [371]
                        : square panel that goes in middle.   |  // [371]
                                                              |  // [371]
            CAPPER_PANEL: Could be like one of those steel    |  // [371]
                        : cross bar book shelve supports      |  // [371]
                        : that keeps book shelf surdy.        |  // [371]
                        : Goes over [ INSET_PANEL ] and       |  // [371]
                        : bolts into frame.                   |  // [371]
                                                              |  // [371]
            ( Pictures I drew are not the best because )      |  // [371]
            ( they are ascii carry over from sketchbook)      |  // [371]
                                                              |  // [371]
        :-----------------------------------------------------+  // [371]
                                                              |  // [371]
                                                              |  // [371]
        Jointed , Dispointed , and Support                    |  // [371]
                                                              |  // [371]
        DISJOINTED :---------------+   ( DISJOINTED_FRAME )   |  // [371]
        |   +-------+ +-------+    |                          |  // [371]
        |   | +---+ | | +---+ |    |                          |  // [371]
        |   | |   | | | |   | |    |                          |  // [371]
        |   | +---+ | | +---+ |    |                          |  // [371]
        |   +-------+ +-------+    |                          |  // [371]
        |   +-------+         .    |                          |  // [371]
        |   | +---+ |         .    |                          |  // [371]
        |   | |   | |         .    |                          |  // [371]
        |   | +---+ |         .    |                          |  // [371]
        |   +-------+         .    |                          |  // [371]
        |                     .    |                          |  // [371]
        JOINTED :             .    |   (    JOINTED_FRAME )   |  // [371]
        |   +-----------------+    |                          |  // [371]
        |   | +-------------+ |    |                          |  // [371]
        |   | |             | |    |                          |  // [371]
        |   | |   +---------+ |    |                          |  // [371]
        |   | |   | +---------+    |                          |  // [371]
        |   | |   | |         .    |                          |  // [371]
        |   | |   | |         .    |                          |  // [371]
        |   | |   | |         .    |                          |  // [371]
        |   | +---+ |         .    |                          |  // [371]
        |   +-------+         .    |                          |  // [371]
        |                     .    |                          |  // [371]
        SUPPORT :             .    |   (    SUPPORT        )  |  // [371]
        |   .                 .    |   ( Plugs Into Jointed)  |  // [371]
        |   .                 .    |                          |  // [371]
        |   . +---+ ____+---+ .    |                          |  // [371]
        |   . |   | ____|   | .    |                          |  // [371]
        |   . +---+     +---+ .    |                          |  // [371]
        |   .  | |            .    |                          |  // [371]
        |   .  | |            .    |                          |  // [371]
        |   . +---+           .    |                          |  // [371]
        |   . |   |           .    |                          |  // [371]
        |   . +---+           .    |                          |  // [371]
        |   .                 .    |                          |  // [371]
        |   .                 .    |                          |  // [371]
        |   .                 .    |                          |  // [371]
        +--------------------------+                          |  // [371]
                                                              |  // [371]
    :------------------------------: #_CLEANING_BASEMENT_2022_#  // [371]
    #_MAKE_COMMAND_STRING_# :---------------------------------+  // [371]
                                                              |  // [371]
        OLD_COMMENT : 2022_10_21 - 12_00_PM                   |  // [371]
                                                              |  // [371]
            We need a way to know if the miscellanious        |  // [371]
            buffer of memory can actually be used. We will    |  // [371]
            do this by creating a "command string".           |  // [371]
                                                              |  // [371]
            If the command string matches what is currently   |  // [371]
            in the misc-memory-command-string variable,       |  // [371]
            then we have data we can work with.               |  // [371]
                                                              |  // [371]
        NEW_COMMENT : 2022_10_21 - 12_30_PM                   |  // [371]
                                                              |  // [371]
            Don't keep track of the "comand executed".        |  // [371]
            Keep track of the "data stored there"             |  // [371]
                                                              |  // [371]
            And if that data is compatible with whatever      |  // [371]
            we are trying to do with it.                      |  // [371]
                                                              |  // [371]
    :---------------------------------------------------------+  // [371]
    #_MAKE_DATA_TYPE_STRING_# :-------------------------------+  // [371]
                                                              |  // [371]
        "Data Type" is the wrong word.                        |  // [371]
        We want to be more specific and                       |  // [371]
        call it a "Data Kind"                                 |  // [371]
                                                              |  // [371]
                                                              |  // [371]
        EXAMPLE :                                             |  // [371]
                                                              |  // [371]
            Data Type === Byte Array                          |  // [371]
            Data Kind === .PNG Binary File                    |  // [371]
                                                              |  // [371]
            "Kind" is MORE SPECIFIC than "Type"               |  // [371]
                                                              |  // [371]
    :---------------------------------------------------------+  // [371]
    #_MAKE_DATA_KIND_STRING_# :-------------------------------+  // [371]
                                                              |  // [371]
        A string that lets us know if the data in our         |  // [371]
        miscellanious buffer is compatible with whatever      |  // [371]
        we are trying to do to it. Whenever we use the        |  // [371]
        MISC MEMORY, override this string to keep track       |  // [371]
        of whatever misc content is inside of it.             |  // [371]
    :---------------------------------------------------------+  // [371]
    #_DATA_ORIENTED_YOU_FOOL_# :------------------------------+  // [371]
                                                              |  // [371]
        __DONT__ : Tag data based on COMMAND used on it.      |  // [371]
        ___DO___ : Tag data based on what kind of DATA it is. |  // [371]
                                                              |  // [371]
        INITIAL ( WRONG ) IDEA :                              |  // [371]
                                                              |  // [371]
            My initial thought was to keep track of what      |  // [371]
            command was used on the data to make sure that    |  // [371]
            we use a compatible complimentary command with    |  // [371]
            the data next.                                    |  // [371]
                                                              |  // [371]
            Example : "Encode" ==> "Decode" ==> "Encode"      |  // [371]
                                                              |  // [371]
            While that is a DECENT solution... it is kind     |  // [371]
            of fucked up.                                     |  // [371]
                                                              |  // [371]
                1. Fucked up #1 : Unceccessarily complex.     |  // [371]
                2. Fucked up #2 : Unceccessary constraints.   |  // [371]
                                                              |  // [371]
        CORRECT IDEA :                                        |  // [371]
                                                              |  // [371]
            Create a string that lets us know what kind       |  // [371]
            of data is in the buffer. Example:                |  // [371]
                                                              |  // [371]
            "PNG_BINARY_512_X_512"                            |  // [371]
                                                              |  // [371]
            Let's us know the data should be able to be       |  // [371]
            de-coded into an RGBA array that is 512_X_512     |  // [371]
            pixels.                                           |  // [371]
                                                              |  // [371]
            Use ANY COMMAND YOU WANT that is compatible       |  // [371]
            with that.                                        |  // [371]
                                                              |  // [371]
    :---------------------------------------------------------+  // [371]
    #_DONE_MAKE_DATHASH_PRE_APPROVED_# :----------------------+  // [372][371]
                                                              |  // [371]
        I don't think "DATHASH" values need to be so          |  // [371]
        flexibile as that we cannot compare them against      |  // [371]
        a "pre-approved" list of hashes for different         |  // [371]
        "kinds of data" that can be in the misc buffer.       |  // [371]
                                                              |  // [371]
        So we should create a list of pre-approved            |  // [371]
        data-hashes and check against them in the             |  // [371]
        [ F _ FILEMOB _ DATHASH ]command.                     |  // [371]
                                                              |  // [371]
    :---------------------------------------------------------+  // [371]
                                                                 // [371]
    @_I_U_P_G_@ : INNOCENT_UNTIL_PROVEN_GUILTY                   // [371]
                ( Innocent Until Proven Guilty )                 // [371]
                                                                 // [371]
    #_ASSERT_INPUT_IS_A_STING_# :-----------------------------+  // [371]
                                                              |  // [371]
        Crash if the input is not a "string" type as          |  // [371]
        we have expected it to be.                            |  // [371]
    :---------------------------------------------------------+  // [371]
                                                                 // [371]
    @NO_OOP@ : No_Operation. Do nothing.                         // [371]
                                                                 // [371]
    #_MISC_PIXEL_META_DATA_# :--------------------------------+  // [371]
                                                              |  // [371]
        Store meta-data associated with the misc              |  // [371]
        pixel memory. Technically this memory does            |  // [371]
        not have to store "pixels" but just any               |  // [371]
        misc byte-array memory. Maybe we should               |  // [371]
        have choosen a better name.                           |  // [371]
    :---------------------------------------------------------+  // [371]
    #_TODO_BINARRA_NOB_ZERO_ON_ERROR_# :----------------------+  // [371]
                                                              |  // [371]
        The number of bytes returned by                       |  // [371]
        [ F_FILEMOB _ 512_PIXARRA_BINARRA ]                   |  // [371]
        should be[ ZERO ]if an error occurs that              |  // [371]
        does not allow us to encode the pixel array           |  // [371]
        into a .PNG binary file.                              |  // [371]
    :---------------------------------------------------------+  // [371]
    #_DATA_COULD_HAVE_BEEN_CORRUPTED_# :----------------------+  // [371]
                                                              |  // [371]
        Originally I was just going to do a "No-op"           |  // [371]
        on the data here. The assumption being that           |  // [371]
        if the command failed, the data here will be          |  // [371]
        un-touched. But that is a very dangerous              |  // [371]
        assumption. If the command fails, we should           |  // [371]
        assume all data involved with that command is         |  // [371]
        now in an                                             |  // [371]
                                                              |  // [371]
            [ "undefined" / "untrustworthy" / "unknown" ]     |  // [371]
                                                              |  // [371]
        state.                                                |  // [371]
                                                              |  // [371]
    :---------------------------------------------------------+  // [371]

    @DATHASH_PNG_512@ : Means that a .PNG binary file is         // [372]
                      : encoded in the data, and when you        // [372]
                      : DECODE that .PNG file, you will get      // [372]
                      : a 512_x_512 RGBA image. 8-bits per       // [372]
                      : color channel, 32-bits per pixel.        // [372]
                                                                 // [372]
    @DATHASH_ERR_UND@ : Data is "Erroneous" or "Undefined"       // [372]
                      : Or, possibly "Errnoneous" and            // [372]
                      : simply "Cannot Be Trusted".              // [372]
                                                                 // [372]
    #_DONT_USE_THESE_NAMES_2022_# :---------------------------+  // [372]
                                                              |  // [372]
        @THOUGHT@ : Before I am even done with the 1st        |  // [372]
                  : draft, I've already added                 |  // [372]
                  : technical debt.                           |  // [372]
                                                              |  // [372]
        @c_dathash_eou@                                       |  // [372]
                                                              |  // [372]
            Data Kind is "Error Or Undefined"                 |  // [372]
            Don't use this name, use[ c_dathash_err_und ]     |  // [372]
                                                              |  // [372]
        @c_dathash_uoe@                                       |  // [372]
                                                              |  // [372]
            Mistake, "E" comes before "U" (A-Z)               |  // [372]
            But don't use [ c_dathash_eo ]                    |  // [372]
                      USE [ c_dathash_err_und ]               |  // [372]
                                                              |  // [372]
        @DATHASH_EOU@ : Means data could have been corrupted  |  // [372]
                      : because of error, or the data is in   |  // [372]
                      : an [ undefined || un-initialized ]    |  // [372]
                      : state.                                |  // [372]
                                                              |  // [372]
    :---------------------------------------------------------+  // [372]
    #_MORE_INFORMATION_THAN_IS_NECESSARY_# :------------------+  // [372]
                                                              |  // [372]
        So, we use the[ DATHASH_ERR_UND ]name for             |  // [372]
        data that "MIGHT BE ERRONEUS" or "CANNOT BE TRUSTED". |  // [372]
                                                              |  // [372]
        My thought is that... If being "Overly Specific"      |  // [372]
        does not result in a different action by the          |  // [372]
        programmer, then maybe that is too much               |  // [372]
        information and you are being too specific.           |  // [372]
                                                              |  // [372]
        In other words, is it "Actionable Information"        |  // [372]
        to say :                                              |  // [372]
                                                              |  // [372]
            "Technically the data might not be corrupted"     |  // [372]
            "but we should treat it like it __IS__      "     |  // [372]
            "corrputed because we can't trust it?       "     |  // [372]
                                                              |  // [372]
        ????????????????????????????????????????????????????  |  // [372]
    :---------------------------------------------------------+  // [372]
    #_MORE_INFO_THAN_NEEDED_SEQUEL_2022_# :-------------------+  // [372]
                                                              |  // [372]
        Question : "Do you need help lifting that?"           |  // [372]
                                                              |  // [372]
        A : No, it's not too heavy. I got it.                 |  // [372]
                                                              |  // [372]
        B : No, I trained with buddhist monks in the          |  // [372]
            mountains for 10 years after my dad died          |  // [372]
            and I stumbled upon a sensai in an underground    |  // [372]
            fight club. He took me under his wing and         |  // [372]
            allowed me to escape from the spiralling          |  // [372]
            downward stair case of self-abuse, drugs          |  // [372]
            and otherwise wreckless behavior. Now             |  // [372]
            I only eat 100% USDA organic food and             |  // [372]
            weight lift on a daily basis. I totally           |  // [372]
            got this but I sinceerly appreciate you           |  // [372]
            asking.                                           |  // [372]
                                                              |  // [372]
        An analog of this exists in code.                     |  // [372]
                                                              |  // [372]
        For example... Does an "Error Message" really         |  // [372]
        need to tell you specifics? Or does it really         |  // [372]
        just need to say :                                    |  // [372]
                                                              |  // [372]
            "WE FUCKED UP! THE LINE NUMBER IS 777!"           |  // [372]
            "GO FUCKING LOOK AT IT!               "           |  // [372]
                                                              |  // [372]
    :---------------------------------------------------------+  // [372]
                                                                 // [---]
    #_NO_VALID_DATA_TO_LOAD_OR_DECODE_# :---------------------+  // [373]
                                                              |  // [373]
        There is no data that we can decode.                  |  // [373]
                                                              |  // [373]
        Probably Because :                                    |  // [373]
                                                              |  // [373]
            1. We never did a "save" prior to "load"          |  // [373]
                                                              |  // [373]
            2. Data is corrupted or undefined.                |  // [373]
                                                              |  // [373]
            3. Data in the misc-pixel-memory (d_mp#_512)      |  // [373]
               slot is of an uncompatible "kind".             |  // [373]
                                                              |  // [373]
    :---------------------------------------------------------+  // [373]
    #_NOT_A_FATAL_ERROR_DO_NOT_CRASH_# :----------------------+  // [373]
                                                              |  // [373]
        The data-incompatibility problem we have here         |  // [373]
        should be considered non-fatal. Do __NOT__ crash.     |  // [373]
                                                              |  // [373]
    :---------------------------------------------------------+  // [373]
    #_RETURN_ZERO_IF_FAILURE_# :------------------------------+  // [373]
                                                              |  // [373]
        If we fail to convert to a pixel array, throw         |  // [373]
        an error. Also, throw an error if the array           |  // [373]
        is not exactly 512x512 pixels.                        |  // [373]
                                                              |  // [373]
    :---------------------------------------------------------+  // [373]
    #_CANT_DECODE_PNGFILE_MEMOR_# :---------------------------+  // [373]
                                                              |  // [373]
        Can't decode the .PNG file memory into an             |  // [373]
        uncompressed RGBA array. This is NOT a fatal          |  // [373]
        error.                                                |  // [373]
    :---------------------------------------------------------+  // [373]
    #_PNG_DECODE_NOT_FATAL_2022_# :---------------------------+  // [373]
                                                              |  // [373]
        Because it is possible to be fed BAD DATA,            |  // [373]
        an in-ability to decode a .PNG file is __NOT__        |  // [373]
        a fatal error that should crash the game.             |  // [373]
    :---------------------------------------------------------+  // [373]
    #_DECODE_PNG_IN_MP1_512_# :-------------------------------+  // [373]
                                                              |  // [373]
        Decode the .PNG binary file that is stored in         |  // [373]
        "miscellanious pixel memory #1" ( d_mp1_512 ).        |  // [373]
                                                              |  // [373]
        Though we called it "misc pixel memory" it can        |  // [373]
        store any binary information that is encoded          |  // [373]
        as a sequence of bytes.                               |  // [373]
                                                              |  // [373]
        It is "multi-use" / "for-whatever-you-want" memory.   |  // [373]
    :---------------------------------------------------------+  // [373]
    #_TODO_MEMAPOI_FOR_MISC_MEMORY_# :------------------------+  // [373]
                                                              |  // [373]
        Create alias variables for :                          |  // [373]
            1. d_mp0_512 ===> d_memapoi_pix0512               |  // [373]
            2. d_mp1_512 ===> d_memapoi_png0512               |  // [373]
                                                              |  // [373]
        We never use these variables directly, but            |  // [373]
        just use for assertions when we are confused          |  // [373]
        about what[ d_mp0_512 ]or[ d_mp1_512 ]should          |  // [373]
        alias to.                                             |  // [373]
                                                              |  // [373]
        Remember, these memory chunks are "misc" so we        |  // [373]
        can use them for whatever the fuck we want.           |  // [373]
                                                              |  // [373]
        But in terms of LOAD+SAVE funtions, they              |  // [373]
        both must alias to DIFFERENT THINGS or the            |  // [373]
        LOAD+SAVE will be broken.                             |  // [373]
                                                              |  // [373]
    :---------------------------------------------------------+  // [373]
    #_TODO_MAKE_A_LARGE_SURFACE_BRUSH_# :---------------------+  // [373]
                                                              |  // [373]
        Right now the brush changes tile size, but sometimes  |  // [373]
        we want to set down a cluster of same-sized tiles.    |  // [373]
                                                              |  // [373]
        Let's make the editor capable of this.                |  // [373]
                                                              |  // [373]
        Let's NOT center the cursor, since the two            |  // [373]
        shapes might not be centerable. What two shapes?      |  // [373]
        Let's draw a diagram...                               |  // [373]
                                                              |  // [373]
                                                              |  // [373]
        |<----- SIT ----->|  @SIT@ : Size_In_Tiles , of brush.|  // [373]
        +-----+-----+-----+                                   |  // [373]
        | TE7 |           |  @TE7@ : Tile Size Exponent       |  // [373]
        +-----+     +     +        : Loaded into brush.       |  // [373]
        |                 |                                   |  // [373]
        +     +     +     +  <<< This_Is_Good_And_Righteous   |  // [373]
        |                 |  <<< This_Is_Good_And_Righteous   |  // [373]
        +-----+-----+-----+  <<< This_Is_Good_And_Righteous   |  // [373]
                                                              |  // [373]
                                                              |  // [373]
        +-----+-----+-----+  <<< THIS_IS_EVIL_AND_WRONG       |  // [373]
        |                 |  <<< THIS_IS_EVIL_AND_WRONG       |  // [373]
        +     +-----+     +  <<< THIS_IS_EVIL_AND_WRONG       |  // [373]
        |     | TE7 |     |  <<< THIS_IS_EVIL_AND_WRONG       |  // [373]
        +     +-----+     +  <<< THIS_IS_EVIL_AND_WRONG       |  // [373]
        |                 |  <<< THIS_IS_EVIL_AND_WRONG       |  // [373]
        +-----+-----+-----+  <<< THIS_IS_EVIL_AND_WRONG       |  // [373]
                                                              |  // [373]
        @PROBLEMATIC_BRUSH@         @PATRIOTIC_BRUSH@         |  // [373]
                    |                         |               |  // [373]
        +-----------+-----------+ +-----------+-----------+   |  // [373]
        |                       | |                       |   |  // [373]
        V                       V V                       V   |  // [373]
        +-----+-----+-----+-----+ +-----+-----+-----+-----+   |  // [373]
        |                       | | TE7 |                 |   |  // [373]
        +        +-----+        | +--.--+                 |   |  // [373]
        |        | TE7 |        | | / \                   |   |  // [373]
        +        +-----+        | +/_ _\                  |   |  // [373]
        |                       | | | |                   |   |  // [373]
        +-----+-----+-----+-----+ +-| |-+-----+-----+-----+   |  // [373]
                                    +-+                       |  // [373]
                                                              |  // [373]
        @PROBLEMATIC_BRUSH@ : The "TE7" , while centered      |  // [373]
                            : in our brush graphic, is        |  // [373]
                            : now MAL-ALIGNED with the        |  // [373]
                            : tilemap.                        |  // [373]
                                                              |  // [373]
        @PATRIOTIC_BRUSH@   : While it is a bit weird to      |  // [373]
                            : have the cursor off-center      |  // [373]
                            : from the entire brush graphic,  |  // [373]
                            : we should priorotize aligning   |  // [373]
                            : everything with the tilemap     |  // [373]
                            : like a good american.           |  // [373]
                                                              |  // [373]
        #_PATRIOTIC_BRUSH_# :------------------------------+  |  // [373]
                                                           |  |  // [373]
            Brush Force Snapping.                          |  |  // [373]
                                                           |  |  // [373]
            |<--- @OUTER_BRUSH@ --->|                      |  |  // [373]
            +-----+-----+-----+-----+                      |  |  // [373]
            |                       |                      |  |  // [373]
            +     +-----+           |                      |  |  // [373]
            |     | TE7 | <------------ @INNER_BRUSH@      |  |  // [373]
            +     +-----+           |                      |  |  // [373]
            |                       |                      |  |  // [373]
            +                       |                      |  |  // [373]
            |                       |                      |  |  // [373]
            +-----+-----+-----+-----+                      |  |  // [373]
                                                           |  |  // [373]
            The @OUTER_BRUSH@ should                       |  |  // [373]
            SNAP_TO_THE_POWER_OF_2_GRID.                   |  |  // [373]
                                                           |  |  // [373]
            So, when we move the mouse,                    |  |  // [373]
            we get this  effect :                          |  |  // [373]
                                                           |  |  // [373]
                                                           |  |  // [373]
            +-----+-----+-----+-----+ mc1 : Mouse Cursor 1 |  |  // [373]
            |                       | mc2 : Mouse Cursor 2 |  |  // [373]
            +-----+                 | mc3 : Mouse Cursor 3 |  |  // [373]
            | mc1 |                 | mc4 : Mouse Cursor 4 |  |  // [373]
            +-----+-----+     +-----+                      |  |  // [373]
            |     | mc2 |     | mc4 |                      |  |  // [373]
            +     +-----+-----+-----+                      |  |  // [373]
            |           | mc3 |     |                      |  |  // [373]
            +-----+-----+-----+-----+                      |  |  // [373]
                                                           |  |  // [373]
            The @OUTER_BRUSH@ does not move, but the       |  |  // [373]
            @INNER_BRUSH@ does move.                       |  |  // [373]
                                                           |  |  // [373]
            If using a non-power of 2 size , the brush     |  |  // [373]
            snaps to one of 4 corners depending on which   |  |  // [373]
            quadrant of the level it is in.                |  |  // [373]
                                                           |  |  // [373]
          @T_L@                                   @T_R@    |  |  // [373]
            +-------------------+-------------------+      |  |  // [373]
            |                   |                   |      |  |  // [373]
            |   +---+---+---+---|---+---+---+---+   |      |  |  // [373]
            |   |   |TE7|   |   |   |   |TE7|   |   |      |  |  // [373]
            |   |   +---+   |   |   |   +---+   |   |      |  |  // [373]
            |   |           |   |   |           |   |      |  |  // [373]
            |   +---+---+---+   |   +---+---+---+   |      |  |  // [373]
            |   |               |               |   |      |  |  // [373]
            +-------------------|-------------------+      |  |  // [373]
            |   |               |               |   |      |  |  // [373]
            |   +---+---+---+   |   +---+---+---+   |      |  |  // [373]
            |   |   |TE7|   |   |   |   |TE7|   |   |      |  |  // [373]
            |   |   +---+   |   |   |   +---+   |   |      |  |  // [373]
            |   |           |   |   |           |   |      |  |  // [373]
            |   +---+---+---+---|---+---+---+---+   |      |  |  // [373]
            |                   |                   |      |  |  // [373]
            +-------------------+-------------------+      |  |  // [373]
          @B_L@                                   @B_R@    |  |  // [373]
                                                           |  |  // [373]
            Not to scale. but the basic idea is that       |  |  // [373]
            the brush "HUGS THE CORNER" it is              |  |  // [373]
            closest to.                                    |  |  // [373]
                                                           |  |  // [373]
            CORNERS TO HUG : T_L , T_R , B_L , B_R         |  |  // [373]
                                                           |  |  // [373]
            +---+---+---+ <<< The brush in diagram above.  |  |  // [373]
            |   |TE7|   | <<< The brush in diagram above.  |  |  // [373]
            |   +---+   | <<< The brush in diagram above.  |  |  // [373]
            |           | <<< The brush in diagram above.  |  |  // [373]
            +---+---+---+ <<< The brush in diagram above.  |  |  // [373]
                                                           |  |  // [373]
        :------------------------------: #_PATRIOTIC_BRUSH_#  |  // [373]
                                                              |  // [373]
    :---------------------: #_TODO_MAKE_A_LARGE_SURFACE_BRUSH_#  // [373]
    #_TODO_JAVASCRIPT_TO_C99_# :------------------------------+  // [373]
                                                              |  // [373]
        Instead of writing another program to convert         |  // [373]
        this code base to C99 code, let's make this           |  // [373]
        program itself convert itself into C99 code.          |  // [373]
                                                              |  // [373]
        A 1-way conversion to C99. The resulting C99          |  // [373]
        code base cannot convert itself back to               |  // [373]
        JavaScript.                                           |  // [373]
                                                              |  // [373]
        We can start out in little chunks. Handling           |  // [373]
        each section of code until we get through             |  // [373]
        the entire file.                                      |  // [373]
                                                              |  // [373]
        UPNG will be replaced by LODE_PNG.                    |  // [373]
                                                              |  // [373]
        Conversion process will be simple, and we will        |  // [373]
        hard-code big blocks of tricky code if need be.       |  // [373]
                                                              |  // [373]
        The converter doesn't need to handle                  |  // [373]
        "ANY JAVASCRIPT" ===> "ANY C99 CODE"                  |  // [373]
                                                              |  // [373]
        The converter needs to handle                         |  // [373]
        [ ATOMIC_IVY_MMO.JS ]===>[ ATOMIC_IVY_MMO.C99 ]       |  // [373]
                                                              |  // [373]
    :---------------------------------------------------------+  // [373]
                                                                 // [---]
    #_TODO_MISC_MEMORY_SYSTEM_# :-----------------------------+  // [374]
                                                              |  // [374]
        We should make a system responsible for copying       |  // [374]
        over miscellanious chunks of memory.                  |  // [374]
                                                              |  // [374]
        P_I_X_2_0_4_8                                         |  // [374]
        G_P_U_D_A_T_A                                         |  // [374]
        G_P_U_S_Y_N_C                                         |  // [374]
                                                              |  // [374]
        M_I_S_C_M_E_M < < < INSERT_IT_HERE                    |  // [374]
                                                              |  // [374]
        F_I_L_E_M_O_B                                         |  // [374]
    :---------------------------------------------------------+  // [374]
    #____MISCMEM_P_TODO____# :--------------------------------+  // [374]
         1234567                                              |  // [374]
                                                              |  // [374]
        MiscMem Paste Todo : ADDED[ 2022_10_21 : 834PM ]      |  // [374]
        ::::::::::::::::::::  DONE[ __________ : _____ ]      |  // [374]
                                                              |  // [374]
        Use MISCMEM helper function to copy+paste into        |  // [374]
        pix2048. Without using a helper function, this is     |  // [374]
        a very big chunk of inlined code.                     |  // [374]
                                                              |  // [374]
        It distracts from the flow. I am okay with            |  // [374]
        breaking this into a smaller re-usable function.      |  // [374]
                                                              |  // [374]
        But... Are we violating our rule of:                  |  // [374]
                                                              |  // [374]
            0101010101010101010101010101010101010101010101    |  // [374]
            """"""""""""""""""""""""""""""""""""""""""""""    |  // [374]
            "Don't break code into smaller functions     "    |  // [374]
            "unless it is :                              "    |  // [374]
            "__ALREADY_CALLED_FROM_MORE_THAN_ONE_PLACE__ "    |  // [374]
            """"""""""""""""""""""""""""""""""""""""""""""    |  // [374]
            0101010101010101010101010101010101010101010101    |  // [374]
                                                              |  // [374]
    :---------------------------------------------------------+  // [374]
                                                                 // [374]
    @porginx@ : Pixel_ORGIN_X ( how do you even spell orgin? )   // [374]
    @porginy@ : Pixel_ORGIN_Y ( how do you even spell orgin? )   // [374]
                                                                 // [374]
    @lpx@ ::::: Local_Pixel_X                                    // [374]
    @lpy@ ::::: Local_Pixel_Y                                    // [374]
                                                                 // [374]
    @XYI@ : X-axis , Y-axis , I-index ( I == 1D of [X,Y] )       // [374]
                                                                 // [374]
    @r_x@ : READ -- X  (  axis )                                 // [374]
    @r_y@ : READ -- Y  (  axis )                                 // [374]
    @r_i@ : READ -- I  ( index )                                 // [374]
    @_r_@ : READ -- C  ( component index / byte index )          // [374]
                                                                 // [374]
    @w_x@ : WRITE - X  (  axis )                                 // [374]
    @w_y@ : WRITE - Y  (  axis )                                 // [374]
    @w_i@ : WRITE - I  ( index )                                 // [374]
    @_w_@ : WRITE - C  ( component index / byte index )          // [374]
                                                                 // [---]
    @N_B_I_T_P_F@ : Num_Bytes_In_Target_PNG_File                 // [375]
    @binarra_len@ : BINary_ARRAy - LENgth (LEN==NumberOfBytes)   // [375]
                                                                 // [375]
    @c_dathash_err_und@ : Unusable Memory, for reasons.          // [375]
    @c_dathash_png_512@ : A 512_x_512 .PNG binary     is_here.   // [375]
    @c_dathash_pix_512@ : A 512_x_512 RGBA8 Raw Array is_here.   // [375]
                                                                 // [375]
    #_TODO_DECODE_AFTER_ENCODE_DEBUG_# :----------------------+  // [375]
                                                              |  // [375]
        Add some code that IMMEDIATELY DECODES the .PNG       |  // [375]
        file we created using UPNG, to see if the mistakes    |  // [375]
        is KANJICODER's MISTAKE , or UPNG's MISTAKE.          |  // [375]
                                                              |  // [375]
        And by "UPNG'S MISTAKE" I mean ,                      |  // [375]
        "KanjiCoder fucked up UPNG's source code when"        |  // [375]
        "reformatting the library to their liking.   "        |  // [375]
                                                              |  // [375]
    :---------------------------------------------------------+  // [375]
    #_ENCODE_DEBUG_FEATURE_# :--------------------------------+  // [375]
                                                              |  // [375]
        When a given debug flag is set, we will IMMEDIATELY   |  // [375]
        DECODE the .PNG file we created to make sure that     |  // [375]
        the UPNG library source is not broken.                |  // [375]
                                                              |  // [375]
    :---------------------------------------------------------+  // [375]
    #_DECODE_DEBUG_FEATURE_# :--------------------------------+  // [375]
                                                              |  // [375]
        NO_SUCH_COMPLIMENT to[ _ENCODE_DEBUG_FEATURE_ ].      |  // [375]
        Reasoning being that the origin of all .PNG           |  // [375]
        files is UPNG's encode function.                      |  // [375]
    :---------------------------------------------------------+  // [375]

    @d_bugline@ : Top level global debug inline flag.            // [376]
      @bugline@ : deBUG-inLINE , a flag used to turn on/off      // [376]
                : some type of inlined debug code.               // [376]
                                                                 // [376]
    @d_bugline_3pc_png@ : deBUG-inLINE : 3rd_Party_Code - PNG :  // [376]
                        : Should we execute inlined debug     :  // [376]
                        : code to make sure UPNG library is   :  // [376]
                        : working correctly?                  :  // [376]
                                                                 // [376]
    #_INLINE_UPNG_DEBUG_# :-----------------------------------+  // [376]
                                                              |  // [376]
        If this inline block of code :                        |  // [376]
                                                              |  // [376]
            A: FAILS :  Means we corrputed the UPNG_LIB       |  // [376]
                                                              |  // [376]
            B: PASSES:  Means our WRAPPING CODE for the       |  // [376]
                        UPNG_LIB has a bug in it.             |  // [376]
                                                              |  // [376]
        @_DIVIDE_AND_CONQUERE_@                               |  // [376]
        @_D_A_C_@ @DAC@ @D_A_C@                               |  // [376]
                                                              |  // [376]
            By figuring out "A" or "B" , we can narrow        |  // [376]
            down the source of the UPNG_ENCODER/UPNG_DECODER  |  // [376]
            bug we are searching for.                         |  // [376]
                                                              |  // [376]
    :---------------------------------------------------------+  // [376]
                                                                 // [376]
    @_3_P_C_@ : 3rd_Party_Code , some type of object or          // [376]
     @3_P_C@  : function that is defined by a 3rd-party          // [376]
      @3PC@   : library. Not native to KanjiCoder's code         // [376]
              : nor is it native to JavaScript or Node.js        // [376]

    #_WTF_PIX_ARR_2022_# :------------------------------------+  // [377]
                                                              |  // [377]
        I don't know why it is necessary, but you need        |  // [377]
        to use the array buffer as a constructor with         |  // [377]
        a new uint8 array before you get the original         |  // [377]
        .PNG image back. Why? No fucking clue.                |  // [377]
                                                              |  // [377]
        HERE IS THE REASON :                                  |  // [377]
                                                              |  // [377]
            " You CANNOT_DIRECTLY_MANIPULATE the contents "   |  // [377]
            " of an ArrayBuffer; instead, you create one  "   |  // [377]
            " of the typed array objects or a DataView    "   |  // [377]
            " object which represents the buffer in a     "   |  // [377]
            " specific format, and use that to read and   "   |  // [377]
            " write the contents of the buffer.           "   |  // [377]
                                                              |  // [377]
            https://developer.mozilla.org                     |  // [377]
            /en-US/docs/Web/JavaScript/Reference              |  // [377]
            /Global_Objects/ArrayBuffer                       |  // [377]
                                                              |  // [377]
        CANNOT_DIRECTLY_MANIPULATE :                          |  // [377]
                                                              |  // [377]
            The emphasis is mine. Even though the data        |  // [377]
            is "there" its not "usable". Weird...             |  // [377]
            Well... JavaScript is weird, what did I expect?   |  // [377]
                                                              |  // [377]
    :---------------------------------------------------------+  // [377]

    #_COPY_PNG_BINARY_# :-------------------------------------+  // [378]
                                                              |  // [378]
        Copy .PNG file to our output parameter.               |  // [378]
        Pretty sure you need to cast array buffer             |  // [378]
        to Uint8Array here before we can actually             |  // [378]
        access the contents of the "trashme" varaible         |  // [378]
        we want to take bytes out of.                         |  // [378]
                                                              |  // [378]
    :---------------------------------------------------------+  // [378]
    #_REFRESH_AFTER_LOAD_# :----------------------------------+  // [378]
                                                              |  // [378]
        After loading a new set of level data into our        |  // [378]
        master[ memory / bitmap / texture ], we need to       |  // [378]
        re-upload it to the GPU before we can see the         |  // [378]
        changes to the tilemap in our shader.                 |  // [378]
                                                              |  // [378]
        Setting dirty flag for pix-2048 will cause a          |  // [378]
        texture-reupload of pix-2048 to the GPU.              |  // [378]
                                                              |  // [378]
    :---------------------------------------------------------+  // [378]

    @_FSAA_ENTRY_@ :------------------------------------------+  // [379]
    #_FSAA_ENTRY_# :------------------------------------------+  // [379]
                                                              |  // [379]
        File System Access API - ENTRY point                  |  // [379]
                                                              |  // [379]
        https://web.dev/file-system-access/                   |  // [379]
                                                              |  // [379]
        BEG_QUOTE                                             |  // [379]
                                                              |  // [379]
            The entry point to the                            |  // [379]
            File System Access API                            |  // [379]
            is window.showOpenFilePicker()                    |  // [379]
                                                              |  // [379]
        END_QUOTE                                             |  // [379]
    :---------------------------------------------------------+  // [379]
    :---------------------------------------------------------+  // [379]
    #_USER_GESTURE_# :----------------------------------------+  // [379]
    @_USER_GESTURE_@ :----------------------------------------+  // [379]
                                                              |  // [379]
        BEG_QUOTE                                             |  // [379]
                                                              |  // [379]
            Like many other powerful APIs, calling            |  // [379]
            showOpenFilePicker()                              |  // [379]
            must be done in a secure context,                 |  // [379]
            and must be called from within a user gesture.    |  // [379]
                                                              |  // [379]
        END_QUOTE                                             |  // [379]
                                                              |  // [379]
        https://web.dev/file-system-access/                   |  // [379]
                                                              |  // [379]
    :---------------------------------------------------------+  // [379]
    :---------------------------------------------------------+  // [379]
    #_ACCESS_KEY_# :------------------------------------------+  // [379]
    @_ACCESS_KEY_@ :------------------------------------------+  // [379]
                                                              |  // [379]
        https://stackoverflow.com/questions/5821150           |  // [379]
        /save-form-using-the-keyboard-shortcut                |  // [379]
                                                              |  // [379]
        BEG_QUOTE :                                           |  // [379]
                                                              |  // [379]
        You don't need JavaScript here.                       |  // [379]
                                                              |  // [379]
        If to assume that your save button is                 |  // [379]
        declared as                                           |  // [379]
                                                              |  // [379]
            <button type=submit>Save</button>                 |  // [379]
                                                              |  // [379]
        then it is enough to declare accesskey                |  // [379]
        attribute on it like this:                            |  // [379]
                                                              |  // [379]
            <button type="submit" accesskey="v">Save</button> |  // [379]
                                                              |  // [379]
        END_QUOTE :                                           |  // [379]
                                                              |  // [379]
    :---------------------------------------------------------+  // [379]
    #_WGL_NULL_# :--------------------------------------------+  // [379]
                                                              |  // [379]
        TODO : We need to add an alert to this, and maybe     |  // [379]
             : some trouble shooting steps... Or a            |  // [379]
             : automatic re-try to recreate the webgl         |  // [379]
             : context.                                       |  // [379]
                                                              |  // [379]
        ERROR_MESSAGE :                                       |  // [379]
                                                              |  // [379]
            Uncaught TypeError: d_gpudata_wgl is null         |  // [379]
    :---------------------------------------------------------+  // [379]
    
    #_REQUEST_FILE_SYSTEM_# :---------------------------------+  // [380]
                                                              |  // [380]
        https://stackoverflow.com/questions/13405129          |  // [380]
        /create-and-save-a-file-with-javascript               |  // [380]
                                                              |  // [380]
        window.requestFileSystem  =(                          |  // [380]
            window.requestFileSystem                          |  // [380]
        ||  window.webkitRequestFileSystem                    |  // [380]
        );;                                                   |  // [380]
        window.requestFileSystem(                             |  // [380]
            window.PERSISTENT                                 |  // [380]
        ,   5*1024*1024 //: 5MB ://                           |  // [380]
        ,   saveFile                                          |  // [380]
        ,   errorHandler                                      |  // [380]
        );;                                                   |  // [380]
                                                              |  // [380]
        Programmers Love It, FireFox Hates It :               |  // [380]
                                                              |  // [380]
            https://developer.mozilla.org/en-US/docs          |  // [380]
            /Web/API/Window/requestFileSystem                 |  // [380]
                                                              |  // [380]
    :---------------------------------------------------------+  // [380]
    #_12_YEARS_OLD_GENERATE_SAVE_FILE_# :---------------------+  // [380]
                                                              |  // [380]
        https://stackoverflow.com/questions/2897619           |  // [380]
        /using-html5-javascript-to-generate-and-save-a-file   |  // [380]
                                                              |  // [380]
        function download(filename, text) {                   |  // [380]
            var pom = document.createElement('a');            |  // [380]
            pom.setAttribute(                                 |  // [380]
                'href'                                        |  // [380]
            ,   'data:text/plain;charset=utf-8,'              |  // [380]
            +   encodeURIComponent(text)                      |  // [380]
            );;                                               |  // [380]
            pom.setAttribute('download', filename);           |  // [380]
                                                              |  // [380]
            if (document.createEvent) {                       |  // [380]
                var event = document.createEvent(             |  // [380]
                    'MouseEvents'                             |  // [380]
                );;                                           |  // [380]
                event.initEvent('click', true, true);         |  // [380]
                pom.dispatchEvent(event);                     |  // [380]
            }                                                 |  // [380]
            else {                                            |  // [380]
                pom.click();                                  |  // [380]
            }                                                 |  // [380]
        }                                                     |  // [380]
                                                              |  // [380]
        JMIM_COMMENT / KANJICODER_COMMENT :                   |  // [380]
                                                              |  // [380]
            If this works, just remember to adjust            |  // [380]
            it to clean up the "pom" that is created.         |  // [380]
            Seems kind of stupid to create an element         |  // [380]
            each time we want to save a file and to           |  // [380]
            not remember to clean up that created             |  // [380]
            element.                                          |  // [380]
    :---------------------------------------------------------+  // [380]
    @f_w_e@ : Filename_With_Extension                            // [380]
                                                                 // [380]
    @IDEA@ : @FEATURE_CREEP@ : @FEATURE_IDEA@ :---------------+  // [380]
    #IDEA# : #FEATURE_CREEP# : #FEATURE_IDEA# :---------------+  // [380]
                                                              |  // [380]
        Destructive Radial Rotation Of Entire Levels.         |  // [380]
                                                              |  // [380]
        We can do a "square rotate" where we rotated          |  // [380]
        all of the tiles of the tilemap like they are         |  // [380]
        on tracks. We can get the inner and outer             |  // [380]
        tracks to move at different speeds so that the        |  // [380]
        tiles settle at perfect 0, 90, 180, 270, 360          |  // [380]
        degree rotation increments.                           |  // [380]
                                                              |  // [380]
        Spiral rotating an entire level should look           |  // [380]
        interesting. And because we can modify the            |  // [380]
        auto tiling method bits ( AM6_BITS ), we can          |  // [380]
        maintain the visual look of the level when            |  // [380]
        we spiral rotate it.                                  |  // [380]
                                                              |  // [380]
        We should probably just try to do an entire           |  // [380]
        level rotate at 0,90,180,270,360 before we            |  // [380]
        try fancier spiral rotate.                            |  // [380]
    :---------------------------------------------------------+  // [380]
    :---------------------------------------------------------+  // [380]
    #_DATA_HIDING_# :-----------------------------------------+  // [380]
                                                              |  // [380]
        If we scramble image by shifting around pixel         |  // [380]
        locations, then apply a watermark, we can             |  // [380]
        encode levelpacks in 512x512 .PNG files               |  // [380]
        AND HAVE AN IMAGE ON THEM, without needing to         |  // [380]
        use extra bits.                                       |  // [380]
                                                              |  // [380]
        ALSO!!                                                |  // [380]
                                                              |  // [380]
        The scrambling means we can encode hentai             |  // [380]
        images in .PNG files without people knowing           |  // [380]
        that the underlying image is pornographic.            |  // [380]
                                                              |  // [380]
        This is important because if we go through with       |  // [380]
        KyootBotHentaiMaker, we might need a place to         |  // [380]
        store our hentai images.                              |  // [380]
                                                              |  // [380]
        .....                                                 |  // [380]
                                                              |  // [380]
        But... Can we do all this __AND__ somehow get         |  // [380]
        to choose the watermark image we use?                 |  // [380]
                                                              |  // [380]
        I don't think there is a way. You would need          |  // [380]
        at least one un-corrupted pixel telling you           |  // [380]
        which watermark image is being used.                  |  // [380]
                                                              |  // [380]
    :---------------------------------------------------------+  // [380]
    #_NOT_NIL_# :---------------------------------------------+  // [380]
                                                              |  // [380]
        Marking the "Not Nill Function" sub section.          |  // [380]
        Returns positive value if the input is NON-NIL.       |  // [380]
    :---------------------------------------------------------+  // [380]
    #_YES_NIL_# :---------------------------------------------+  // [380]
                                                              |  // [380]
        Marking the "Yes Nill Function" sub section.          |  // [380]
        Returns negative or zero if the input IS-NIL.         |  // [380]
    :---------------------------------------------------------+  // [380]
    #_NULL_MONKEY_# :-----------------------------------------+  // [380]
                                                              |  // [380]
        Null check monkey wrench macros. Because I had a      |  // [380]
        hell of a time finding these functions. I forgot      |  // [380]
        what I called them. I used really terse names         |  // [380]
        for them because I wanted them to be very             |  // [380]
        important OFTEN_USED functions.                       |  // [380]
                                                              |  // [380]
        Functions that are more "ubiquitious" get shorter     |  // [380]
        names. Some functions are like the air we breath      |  // [380]
        and even get away with omitting the "F_" prefix.      |  // [380]
                                                              |  // [380]
        NO FUNCTION GETS TO BE ANYTHING BUT                   |  // [380]
        "ALL UPPERCASE LETTERS" though.                       |  // [380]
                                                              |  // [380]
        And data is "all lowercase letters".                  |  // [380]
                                                              |  // [380]
        In this house we believe :                            |  // [380]
                                                              |  // [380]
            1. Worker Code Is Number One Priority             |  // [380]
            #. Camel Case Is Fucking Evil And Sinful.         |  // [380]
                                                              |  // [380]
        I am making an inside joke with myself :              |  // [380]
                                                              |  // [380]
            https://i.imgur.com/hoFnEhD.jpg                   |  // [380]
                                                              |  // [380]
            +----------------------------------------------+  |  // [380]
            |                                              |  |  // [380]
            |   IN THIS HOUSE , WE BELIEVE :               |  |  // [380]
            |                                              |  |  // [380]
            |   BLACK LIVES MATTER                         |  |  // [380]
            |   WOMEN'S RIGHTS ARE HUMAN RIGHTS            |  |  // [380]
            |   NO HUMAN IS ILLEGAL                        |  |  // [380]
            |   SCIENCE IS REAL                            |  |  // [380]
            |   LOVE IS LOVE                               |  |  // [380]
            |   KINDNESS IS EVERYTHING                     |  |  // [380]
            |                                              |  |  // [380]
            +----------------------------------------------+  |  // [380]
                                                              |  // [380]
        My version would go like this :                       |  // [380]
                                                              |  // [380]
            +----------------------------------------------+  |  // [380]
            |                                              |  |  // [380]
            |   IN THIS HOUSE , WE BELIEVE :               |  |  // [380]
            |                                              |  |  // [380]
            |   BLACK LIVES ARE AS IMPORTANT AS WHITE LIVES|  |  // [380]
            |   MY BODY , MY CHOICE. I am Pro-Suicide.     |  |  // [380]
            |   SOME HUMANS TRESSPASS ON FORIEGN SOIL      |  |  // [380]
            |   SCIENCE TELLS YOU WHAT IS , NOT WHAT TO DO |  |  // [380]
            |   LOVE IS A REALLY HARD TO DEFINE WORD       |  |  // [380]
            |   PSYCHOPATHS DON'T CARE ABOUT YOUR KINDNESS |  |  // [380]
            |                                              |  |  // [380]
            +----------------------------------------------+  |  // [380]
                                                              |  // [380]
        Hmm... The argument against "the left can't meme"     |  // [380]
        being that, nuance and truth can take a bit more      |  // [380]
        words to describe? Seems like a good argument.        |  // [380]
                                                              |  // [380]
    :---------------------------------------------------------+  // [380]

    @CONFUSING_NAME@ : If tagged with, "confusing_name"          // [381]
                     : then __DONT__ name your variable that.    // [381]
                                                                 // [381]
    @elmhack_inn@ : Element HACK - Input ...@CONFUSING_NAME@     // [381]
    @elmhack_out@ : Element HACK - Output...@CONFUSING_NAME@     // [381]
                                                                 // [381]
    @[DAO]@ : Dupliated(line)And_Overwritten.                    // [381]
                                                                 // [381]
    @ehack01@ : Element Hack #0_0_1                              // [381]
    @ehack02@ : Element Hack #0_0_2                              // [381]
                                                                 // [381]
    @dom_elm@ : USE[ elm_dom ]( Element on the DOM )             // [381]
    @nil_elm@ : USE[ elm_nil ]( Element, is it NIL?)             // [381]
                                                                 // [381]
    @elm_dom@ : Element on the DOM                               // [381]
    @elm_nil@ : Is[ elm_dom ]NIL ?                               // [381]
                                                                 // [381]
    @png_bin@ : TODO : REFACTOR[ png_bin ]===>[ p_n_g_b_a_r_r ]  // [381]
    @pngbina@ : DONT_USE_THIS_FOR_VARIABLE_USE[ p_n_g_b_a_r_r ]  // [381]
    @pngfile@ : DONT_USE_THIS_FOR_VARIABLE_USE[ p_n_g_b_a_r_r ]  // [381]
    :---------:--------------------------------------------::::  // [381]
    @pngbarr@ : Means ".PNG Binary Array".                 ::::  // [381]
              : 99% of the time this also means            ::::  // [381]
              : ".PNG Byte Array".                         ::::  // [381]
              :                                            ::::  // [381]
              : .PNG binary file. This data should be able ::::  // [381]
              : to be decoded into a raw RGBA8 array by    ::::  // [381]
              : any compliant .PNG decoder.                ::::  // [381]
              :                                            ::::  // [381]
              : PNGBINA == .PNG BINary Array               ::::  // [381]
              : PNGBARR == .PNG [Binary/Byte] ARRay        ::::  // [381]
              :--------------------------------------------::::  // [381]
                                                             ::  // [381]
    @p_n_g_b_a_r_r@ : Don't literally use this as a variable ::  // [381]
                    : name. Remove ALL_OF_THE_UNDERSCORES    ::  // [381]
                    : you [ DOLT / FOOL / MORON ].           ::  // [381]
                                                             ::  // [381]
    @F_INLINED_001@ : Function Within Function #0_0_1        ::  // [381]
                                                             ::  // [381]
    @F_INLINED@ ::::: Namespace to use for any inlined       ::  // [381]
                ::::: function. So, any function declared    ::  // [381]
                ::::: within another function.               ::  // [381]
                                                                 // [381]
    #_DONT_LOAD_BLOCK_ME_# :----------------------------------+  // [381]
                                                              |  // [381]
        WARNING : Pausing in this code with an alert will     |  // [381]
                : get the dialog blocked by security          |  // [381]
                : exception.                                  |  // [381]
                                                              |  // [381]
        Keeping this code for reference. But we               |  // [381]
        are not going to be able to do this because           |  // [381]
        of security problems. This is why I fucking           |  // [381]
        hate JavaScript for serious applications.             |  // [381]
                                                              |  // [381]
        Loading+Saving is basic functionality in C99,         |  // [381]
        but in a browser-based game it is a monumental        |  // [381]
        undertaking.                                          |  // [381]
                                                              |  // [381]
    :---------------------------------------------------------+  // [381]
    #_DONT_FUCKING_YELL_AT_ME_2022_# :------------------------+  // [381]
                                                              |  // [381]
        If you let the "YEL()" alert command stay up for      |  // [381]
        too long, the file dialog will be blocked with        |  // [381]
        a message saying :                                    |  // [381]
                                                              |  // [381]
    <input> picker was blocked due to lack of user activation.|  // [381]
    :---------------------------------------------------------+  // [381]

    @pixarra_len@ : WRONG_USE[ pixarra_nub ]OR[ pixanub ]        // [382]
                                                                 // [382]
    @binalen@ : 7-letter version of[ binarra_len ].              // [382]
              : DONT_USE_THIS_USE[ binanub ]                     // [382]
                                                                 // [382]
    @pixalen@ : 7-letter version of[ pixarra_len ]               // [382]
              : DONT_USE_THIS_USE[ pixanub ]                     // [382]
                                                                 // [382]
    @binanub@ : BINary_Array_NUB ( NUB == Num_Used_Bytes )       // [382]
    @pixanub@ : PIXel__Array_NUB ( NUB == Num_Used_Bytes )       // [382]
                                                                 // [382]
    #_HOTEL_INTO_DUM_# :--------------------------------------+  // [382]
                                                              |  // [382]
        Copy the HOTEL ( levelpack ) into THE_DUM.            |  // [382]
        "THE_DUM" is the 3x3 grid of levelpacks.              |  // [382]
        We are going to copy the[ HOTEL ]into the             |  // [382]
        CENTERAL_LEVEL_PACK of THE_DUM.                       |  // [382]
                                                              |  // [382]
        CENTERAL_LEVEL_PACK ===[ h3x:1 , h3y:1 ]              |  // [382]
                                                              |  // [382]
        @p1x@ : PIXELS - [ SOURCE ( 1 ) ] - AXIS_X            |  // [382]
        @p1y@ : PIXELS - [ SOURCE ( 1 ) ] - AXIS_Y            |  // [382]
                                                              |  // [382]
        @p0x@ : PIXELS - [ DESTIN ( 0 ) ] - AXIS_X            |  // [382]
        @p0y@ : PIXELS - [ DESTIN ( 0 ) ] - AXIS_Y            |  // [382]
                                                              |  // [382]
        @DESTIN@ : Truncated word "DESTINATION"               |  // [382]
                                                              |  // [382]
        #_THIS_SHIT_IS_GETTING_TOO_CONFUSING_# :------------+ |  // [382]
                                                            | |  // [382]
            @p1c@ : PIXEL  - [ SOURCE ( 1 ) ] - COMPO_INDEX | |  // [382]
            @p0c@ : PIXEL  - [ DESTIN ( 0 ) ] - COMPO_INDEX | |  // [382]
                                                            | |  // [382]
            @p1p@ : PIXEL  - [ SOURCE ( 1 ) ] - WTF_NOT_THIS| |  // [382]
            @p0p@ : PIXEL  - [ DESTIN ( 0 ) ] - WTF_NOT_THIS| |  // [382]
                                                            | |  // [382]
            @p1i@ : PIXEL  - [ SOURCE ( 1 ) ] - PIXEL_INDEX | |  // [382]
            @p0i@ : PIXEL  - [ DESTIN ( 0 ) ] - PIXEL_INDEX | |  // [382]
                                                            | |  // [382]
            @c1i@ : Component_Source_Index , USE[ p1c ]     | |  // [382]
            @c0i@ : Component_Dest___Index , USE[ p0c ]     | |  // [382]
        +---------------------------------------------------+ |  // [382]
        #_JUST_USE_MORE_GENERIC_VARS_# :--------------------+ |  // [382]
                                                            | |  // [382]
            These are generic variables. But have specific  | |  // [382]
            meaning within the block of code tagged:        | |  // [382]
            [ _HOTEL_INTO_DUM_ ]                            | |  // [382]
                                                            | |  // [382]
            @p_0@ : Pixel_____Array - [ DESTINATION // 0 ]  | |  // [382]
            @p_1@ : Pixel_____Array - [ SOURCE      // 1 ]  | |  // [382]
                                                            | |  // [382]
            @i_0@ : Pixel_____Index - [ DESTINATION // 0 ]  | |  // [382]
            @i_1@ : Pixel_____Index - [ SOURCE      // 1 ]  | |  // [382]
                                                            | |  // [382]
            @c_0@ : Component_Index - [ DESTINATION // 0 ]  | |  // [382]
            @c_1@ : Component_Index - [ SOURCE      // 1 ]  | |  // [382]
        :---------------------------------------------------+ |  // [382]
                                                              |  // [382]
    :---------------------------------------------------------+  // [382]
    #_TODO_NEED_GENERIC_PIXEL_COPYING_SYSTEM_# :--------------+  // [382]
                                                              |  // [382]
        BLITTER <--- Could call it "Blitter".                 |  // [382]
                     Because it is exactly 7 letters.         |  // [382]
                     Meaning it "Bit Blitter".                |  // [382]
                                                              |  // [382]
                     Used to copy chunks of pixels from       |  // [382]
                     one place to another.                    |  // [382]
                                                              |  // [382]
        Yes, one utility for just copy+paste of pixels.       |  // [382]
                                                              |  // [382]
        No "rotate/transform/scale" bullshit.                 |  // [382]
        This is such a common task we should give it          |  // [382]
        it's own system namespace.                            |  // [382]
                                                              |  // [382]
    :---------------------------------------------------------+  // [382]
    #_IDEA_RANDOM_FUN_STUFF_# :-------------------------------+  // [382]
                                                              |  // [382]
        @IDEA@ : Before switching to a new large              |  // [382]
               : sub-system undertaking, we add               |  // [382]
               : "quick fun features" to get the              |  // [382]
               : MAIN_VIDEO NUMBER to line up with            |  // [382]
               : the SUB_SERIES NUMBER on the last digit.     |  // [382]
                                                              |  // [382]
               For example :                                  |  // [382]
                                                              |  // [382]
                    We are on VIDEO #3_8_2 ( MAIN_VIDEO )     |  // [382]
                    We are on VIDEO #0_2_2 ( SUB_SERIES )     |  // [382]
                                                              |  // [382]
        Maybe add that mirror brush idea really quick?        |  // [382]
    :---------------------------------------------------------+  // [382]
    #_TODO_CAST_FILE_TO_BYTE_ARRAY_# :------------------------+  // [382]
                                                              |  // [382]
        https://stackoverflow.com/questions/37134433          |  // [382]
                                                              |  // [382]
    :---------------------------------------------------------+  // [382]
                                                                 // [382]
    @mpi@ : Maximum_Pixel_Index                                  // [382]

    @THIS_WILL_FREEZE@ :--------------------------------------+  // [383]
    #THIS_WILL_FREEZE# :--------------------------------------+  // [383]
                                                              |  // [383]
        This line of code will cause your program             |  // [383]
        to freeze. So... You shouldn't do it.                 |  // [383]
                                                              |  // [383]
    :---------------------------------------------------------+  // [383]
    :---------------------------------------------------------+  // [383]

    #_MOBTASK_# :---------------------------------------------+  // [384]
                                                              |  // [384]
        We need to be able to register a "task" to            |  // [384]
        FILEMOB. We only get ONE TASK at a time. All          |  // [384]
        other tasks are IGNORED.                              |  // [384]
                                                              |  // [384]
        Tasks are my way of re-linearizing the bullshit       |  // [384]
        async code into my game-loop driven code.             |  // [384]
                                                              |  // [384]
        @taskhas@ : TASK - HAS (                   exists ? ) |  // [384]
        @taskenu@ : TASK - ENUMERATION (     the task to do ) |  // [384]
        @tasknos@ : TASK - Number_Of_Steps (   Lookup Table ) |  // [384]
    :---------------------------------------------------------+  // [384]
    #_HACKISH_ONE_TASK_SYSTEM_# :-----------------------------+  // [384]
                                                              |  // [384]
        Forced into creating a "one task" task queue          |  // [384]
        system for "FILEMOB" so that we can re-linearize      |  // [384]
        async code into the [architecture/design] the         |  // [384]
        rest of the god damned project obeys.                 |  // [384]
                                                              |  // [384]
        @d_filemob_taskhas@ : Does FILEMOB have a task in     |  // [384]
                            : it's task queue to work on?     |  // [384]
                                                              |  // [384]
        @d_filemob_taskenu@ : What is the current task that   |  // [384]
                            : FILEMOB needs to work on?       |  // [384]
                                                              |  // [384]
        @d_filemob_tasknos@ : How many steps are in the       |  // [384]
                            : current task that we are        |  // [384]
                            : doing ? LOOKUP TABLE!!!         |  // [384]
                                                              |  // [384]
        @d_filemob_taskiod  : Index_Of_Done , Rests at        |  // [384]
                            : negative one (-1) when no       |  // [384]
                            : steps of the task have          |  // [384]
                            : been finished yet.              |  // [384]
                                                              |  // [384]
        RELATED_TAG[ _MOBTASK_ ]                              |  // [384]
    :---------------------------------------------------------+  // [384]
    #_FILEMOB_TASK_MANAGER_# :--------------------------------+  // [384]
                                                              |  // [384]
        Every time we hit the "tick" function of "filemob"    |  // [384]
        we will check to see if there is a task to be         |  // [384]
        done, if there is, we will execute "tickcore"         |  // [384]
        to advance the task by one step.                      |  // [384]
                                                              |  // [384]
        The filemob task system only can hold                 |  // [384]
        ONE TASK AT A TIME.                                   |  // [384]
                                                              |  // [384]
        If you ask it to do something when it already         |  // [384]
        has a task queued up, it will ignore you.             |  // [384]
                                                              |  // [384]
    :---------------------------------------------------------+  // [384]
    #_ERROR_CHECK_TASKNOS_TABLE_# :---------------------------+  // [384]
                                                              |  // [384]
        Make sure that the lookup table defining the          |  // [384]
        number of steps for certain tasks matches             |  // [384]
        the constants defining the number of                  |  // [384]
        steps in certain tasks.                               |  // [384]
                                                              |  // [384]
    :---------------------------------------------------------+  // [384]
    #I_HAVE_BAD_NEWS_ABOUT_YOUR_PARENTS# :--------------------+  // [384]
                                                              |  // [384]
        You might not know this. But Batman's parents         |  // [384]
        died when they were shot in an Alley Way.             |  // [384]
                                                              |  // [384]
        In Batman's origin story, Joe Chill is the mugger     |  // [384]
        who murders young Bruce Wayne's parents,              |  // [384]
        Dr. Thomas Wayne and Martha Wayne.                    |  // [384]
        The murder traumatizes Bruce,                         |  // [384]
        inspiring his vow to avenge their deaths              |  // [384]
        by fighting crime in Gotham City                      |  // [384]
        as the vigilante Batman.                              |  // [384]
                                                              |  // [384]
        https://en.wikipedia.org/wiki/Joe_Chill               |  // [384]
                                                              |  // [384]
    :---------------------------------------------------------+  // [384]
    #d_filemob_taskiod# :-------------------------------------:  // [384]
    ###########taskiod# :-------------------------------------:  // [384]
                                                              |  // [384]
    @d_filemob_taskiod@ :                                     |  // [384]
              @taskiod@ : TASK - Index_Of_Done .              |  // [384]
                                                              |  // [384]
                  : This variable RESTS on the index of the   |  // [384]
                  : last task that was COMPLETED.             |  // [384]
                  : Tasks are 0-indexed. So if NO TASKS have  |  // [384]
                  : been completed, taskiod MUST BE ZERO(0).  |  // [384]
                                                              |  // [384]
    :---------------------------------------------------------+  // [384]
    :---------------------------------------------------------+  // [384]

    @i_taskios@ : INPUT - taskios                                // [385]
    @taskios@ : TASK - Index_Of_Step ( step to perform )         // [385]
              : First valid step index is ZERO.                  // [385]
                                                                 // [385]
    @[MOV]@ ::: Code Was Moved From One Place To Another.        // [385]
            ::: Different than @[CAP]@ in that the original      // [385]
            ::: code in the original location no longer          // [385]
            ::: exists there.                                    // [385]
                                                                 // [385]
    #_LEVELPACK_STREAMER_MANAGER_IDEA_# :---------------------+  // [385]
                                                              |  // [385]
        @IDEA@ : "Level Pack Streamer Manger"                 |  // [385]
                                                              |  // [385]
        Should we have two ways to stream in and out          |  // [385]
        levels? One for stuff Josh is working on,             |  // [385]
        and then another for production?                      |  // [385]
                                                              |  // [385]
        Or should it all be "PRODUCTION" ?                    |  // [385]
                                                              |  // [385]
        I think "ALL PRODUCTION" is easier.                   |  // [385]
                                                              |  // [385]
        When stuff is under construction, we block off        |  // [385]
        access to regions of the MMO. If users find a         |  // [385]
        way in, then they do so at their own risk.            |  // [385]
    :---------------------------------------------------------+  // [385]
    #_COORDINATE_WATERMARK_IDEA_# :---------------------------+  // [385]
                                                              |  // [385]
         1  2  3  4  5  6  7  8  9  10                        |  // [385]
        [X][X][X][X][X][X][X][X][X][X]  1                     |  // [385]
        [X][ ][ ][ ][ ][ ][ ][ ][ ][X]  2                     |  // [385]
        [X][ ][A][T][O][M][I][C][ ][X]  3                     |  // [385]
        [X][ ][I][V][Y][M][M][O][ ][X]  4                     |  // [385]
        [X][ ][----------------][ ][X]  5                     |  // [385]
        [X][ ][<][X][0][0][0][>][ ][X]  6                     |  // [385]
        [X][ ][<][Y][0][0][0][>][ ][X]  7                     |  // [385]
        [X][ ][<][Z][0][0][0][>][ ][X]  8                     |  // [385]
        [X][ ][ ][ ][ ][ ][ ][ ][ ][X]  9                     |  // [385]
        [X][X][X][X][X][X][X][X][X][X] 10                     |  // [385]
                                                              |  // [385]
        512 / 10 === 51.2                                     |  // [385]
                                                              |  // [385]
        Create A Stamp That Watermarks The Image              |  // [385]
        With The Coordinates The LevelPack is for.            |  // [385]
                                                              |  // [385]
        When loaded into the correct worldmap                 |  // [385]
        location, the watermark is undone, and                |  // [385]
        the original image comes out.                         |  // [385]
                                                              |  // [385]
        We can also have a preset SCRAMBLE that is            |  // [385]
        done to the image based on the coordinates.           |  // [385]
                                                              |  // [385]
        We should be able to read the coordinates             |  // [385]
        on the image so that we know how to decode            |  // [385]
        the image.                                            |  // [385]
                                                              |  // [385]
        Only a human being knows the proper decode method     |  // [385]
        for the 512x512 .PNG file levelpack.                  |  // [385]
                                                              |  // [385]
        If the filename 000_000_000.PNG gets changed          |  // [385]
        to 999_999_999.PNG , the engine will                  |  // [385]
        IMPROPERLY DECODE the image.                          |  // [385]
                                                              |  // [385]
        Why all this work?                                    |  // [385]
                                                              |  // [385]
        So that the level data can advertise for the          |  // [385]
        game itself. You aren't wondering                     |  // [385]
        "What the fuck is this file?" because you             |  // [385]
        can go google "Atomic Ivy MMO"                        |  // [385]
    :---------------------------------------------------------+  // [385]
    #_INC_IOS_# :---------------------------------------------+  // [385]
                                                              |  // [385]
        In ___MOST___ cases we need to increment the          |  // [385]
        "iod" ( index of done ) every time the                |  // [385]
        re-entrant function is called.                        |  // [385]
                                                              |  // [385]
        However, when mimmicking a "spin lock" we             |  // [385]
        want to UNDO this increment each time until           |  // [385]
        the spinlock is released.                             |  // [385]
    :---------------------------------------------------------+  // [385]
    #_LOADBOX_DSK_VARS_# :------------------------------------+  // [385]
                                                              |  // [385]
        Top of function scope variables. Unless absolutely    |  // [385]
        necessary to be declared elsewhere, lets declare      |  // [385]
        all the variables for [ LOADBOX_DSK_TASKIOS ]         |  // [385]
        at the top of the function here.                      |  // [385]
                                                              |  // [385]
    :---------------------------------------------------------+  // [385]
    #_SETUP_DOM_HACK_# :--------------------------------------+  // [385]
                                                              |  // [385]
        A JAVASCRIPT specific hack to open up a file          |  // [385]
        LOAD dialog is to create a domain_object_model        |  // [385]
        "input type" element and invoke its "click()"         |  // [385]
        function.                                             |  // [385]
                                                              |  // [385]
        Invoking the "Click()" function opens a               |  // [385]
        LOAD file dialog.                                     |  // [385]
                                                              |  // [385]
        This section of code is responsible for               |  // [385]
        making sure the "hackish dom element" exists.         |  // [385]
                                                              |  // [385]
    :---------------------------------------------------------+  // [385]
    #_OPEN_FILE_PICKER_# :------------------------------------+  // [385]
                                                              |  // [385]
        Open the "Load File Dialog"                           |  // [385]
                                                              |  // [385]
        Currently implemented as invoking the "click()"       |  // [385]
        function on our hidden input element. But             |  // [385]
        that implementation detail could change in            |  // [385]
        the future if need be.                                |  // [385]
                                                              |  // [385]
    :---------------------------------------------------------+  // [385]
    #_WAIT_FOR_USER_TO_PICK_FILE_# :--------------------------+  // [385]
                                                              |  // [385]
        We want to use a "Psuedo_Spin_Lock" here              |  // [385]
        until the user has picked a file.                     |  // [385]
                                                              |  // [385]
        Basically, we do not INCRIMENT our                    |  // [385]
        step counter for this re-entrant function             |  // [385]
        until the spinlock flag is released.                  |  // [385]
                                                              |  // [385]
        We probably need a special global for this.           |  // [385]
                                                              |  // [385]
        I am not for overly nesting data, but in the          |  // [385]
        case of tasks that "FILEMOB" can do, I think          |  // [385]
        any data unique to a certain task should              |  // [385]
        be consolidated into one global                       |  // [385]
        [ object / struct ]. ( NOT CLASS ).                   |  // [385]
                                                              |  // [385]
    :---------------------------------------------------------+  // [385]
    #_FILE_TO_BYTE_ARRAY_DISBATCH_# :-------------------------+  // [387]
                                                              |  // [387]
        Disbatch the async code that is responsible for       |  // [387]
        converting the file into a byte array.                |  // [387]
                                                              |  // [387]
    :---------------------------------------------------------+  // [387]
    #_FILE_TO_BYTE_ARRAY_SPINLOCK_# :-------------------------+  // [387]
                                                              |  // [387]
        Wait here until our file has been converted into      |  // [387]
        a byte array by JavaScript [ engine / runtime ].      |  // [387]
                                                              |  // [387]
    :---------------------------------------------------------+  // [387]
    #_LOAD_INTO_MASTER_# :------------------------------------+  // [387]
                                                              |  // [387]
        Load the levelpack into the master                    |  // [387]
        memory in this section of code.                       |  // [387]
                                                              |  // [387]
    :---------------------------------------------------------+  // [387]
    #_INVALID_INDEX_OF_STEP_# :-------------------------------+  // [385]
                                                              |  // [385]
        If we get here, we have made some type of programming |  // [385]
        logic error that has caused our step counter to       |  // [385]
        go out of bounds.                                     |  // [385]
                                                              |  // [385]
        If we hit this branch, add code to figure out         |  // [385]
        if we are NEGATIVE_OOB or POSITIVE_OOB                |  // [385]
    :---------------------------------------------------------+  // [385]
                                                                 // [385]
    @NEGATIVE_OOB@ : NEGATIVE - Out_Of_Bounds                    // [385]
    @POSITIVE_OOB@ : POSITIVE - Out_Of_Bounds                    // [385]

    #_TASK_SPECIFIC_DATA_# :----------------------------------+  // [386]
                                                              |  // [386]
        Each[ FILEMOB ]task may have[ 0 -to- 1 ]structs       |  // [386]
        that store task specific information.                 |  // [386]
                                                              |  // [386]
        I generally to avoid nested data structures and       |  // [386]
        just namespace everything meticulously. But in        |  // [386]
        the case of what we are doing here, this...           |  // [386]
                                                              |  // [386]
        feels like the best organizational approach.          |  // [386]
                                                              |  // [386]
    :---------------------------------------------------------+  // [386]
                                                                 // [386]
    @F_K_A@ : Formerly_Known_As , the variable formerly          // [386]
            : had a different name, and this tag is used         // [386]
            : to denote that change in the comments.             // [386]
                                                                 // [386]
    #_THE_ARTIST_FORMERLY_KNOWN_AS_PRINCE_# :-----------------+  // [386]
                                                              |  // [386]
        https://en.wikipedia.org/wiki/Prince_(musician)       |  // [386]
                                                              |  // [386]
    :---------------------------------------------------------+  // [386]
    #_I_O_DIFF_ADDRESS_# :------------------------------------+  // [386]
    #_I_W_DIFF_ADDRESS_# :------------------------------------+  // [386]
                                                              |  // [386]
        [ "i" , "o" , "w" ] variables are used to alias       |  // [386]
        the same struct. The idea is to make the code         |  // [386]
        more readable by referencing some variables as        |  // [386]
                                                              |  // [386]
            i.member_used_as_input                            |  // [386]
            o.member_used_as_output                           |  // [386]
            w.member_used_as_whatever_dont_think_about_it     |  // [386]
                                                              |  // [386]
    :---------------------------------------------------------+  // [386]
    #_I_O_W_# :-----------------------------------------------+  // [386]
                                                              |  // [386]
        @IOW@ : Input , Output , Whatever                     |  // [386]
                                                              |  // [386]
        var i = SOME_DATA_IOW_STRUCT ;                        |  // [386]
        var o = SOME_DATA_IOW_STRUCT ;                        |  // [386]
        var w = SOME_DATA_IOW_STRUCT ;                        |  // [386]
                                                              |  // [386]
        Referencing the same struct 3 times so that we        |  // [386]
        can self-document the usage of the member variable.   |  // [386]
                                                              |  // [386]
        i.member === used as input parameter to function.     |  // [386]
        o.member === used as ouput parameter to function.     |  // [386]
        w.member === used as whatever, I don't fucking        |  // [386]
                     care and I don't want to think about     |  // [386]
                     it okay? Just leave me alone and get     |  // [386]
                     out of my room mom. #EMO_MUSIC#          |  // [386]
    :---------------------------------------------------------+  // [386]
    #EMO_MUSIC# : unitcode:machine - Time Conquers All           // [386]

    @RESPIN_LOCK@ : Re-Entrant SPIN-LOCK ::::::::::::::::::::::  // [387]
                                                                 // [387]
    #_MOVED_CODE_AAA_# :--------------------------------------+  // [387]
    #_MOVED_CODE_BBB_# :--------------------------------------+  // [387]
                                                              |  // [387]
        Created these sections to help keep track of          |  // [387]
        large blocks of moved code. The difficulty of         |  // [387]
        this refactor is not just the refactor, but doing     |  // [387]
        it in discrete comprehendable [ steps / deltas ]      |  // [387]
        for the videos I am making.                           |  // [387]
                                                              |  // [387]
    :---------------------------------------------------------:  // [387]
    :---------------------------------------------------------:  // [387]

    @_E_S_L_@ : Exit_Spin_Lock / [ Exit SpinLock ]               // [388]
                                                                 // [388]
    #_JAVFILE_BINARRA_# :-------------------------------------+  // [388]
                                                              |  // [388]
        Convert native "JavaScript_File" type to a            |  // [388]
        "Binary Array" ( AKA : A Uint8Array / ByteArray ).    |  // [388]
                                                              |  // [388]
    :---------------------------------------------------------+  // [388]
    #_JS_SAYS_FUCK_YOUR_SINK_# :------------------------------+  // [388]
                                                              |  // [388]
        JavaScript will now allow you to do a                 |  // [388]
        synchronous conversion of a ".JS FileType"            |  // [388]
        to a ".JS Uint8Array Type".                           |  // [388]
                                                              |  // [388]
        Because of this, we cannot make this function.        |  // [388]
                                                              |  // [388]
        Yes, we could use promises or callbacks, but that     |  // [388]
        would destroy the [ single-threaded ]and              |  // [388]
        [ synchronous (NOT-ASYNC) ]architecture for           |  // [388]
        the engine I am designing.                            |  // [388]
    :---------------------------------------------------------+  // [388]

    #_AINTNO_TASKIEVER_HEARDOF_# :----------------------------+  // [389]
                                                              |  // [389]
        TAG[ _AINTNO_TASKIEVER_HEARDOF_     ]                 |  // [394]
        AKA[ _AINT_NO_TASK_I_EVER_HEARD_OF_ ]                 |  // [389]
        AKA[  Aint No Task I Ever Heard Of  ](-Sam Jackson)   |  // [389]
                                                              |  // [389]
        What does Marcellus Wallus Look Like?                 |  // [389]
        Does he look like an undefined task enumeration?      |  // [389]
        This aint no task identifier I ever heard of.         |  // [389]
    :---------------------------------------------------------+  // [389]
    #_ONEDEX_STEP_006_# :-------------------------------------+  // [389]
                                                              |  // [389]
        "one-indexed" step #6. A reminder to myself that      |  // [389]
        if the "step index" is "5" then that means we are     |  // [389]
        on the "6th" step.                                    |  // [389]
                                                              |  // [389]
        I need this reminder so I don't create an             |  // [389]
        off-by-one-error when entering the number of          |  // [389]
        steps for this task.                                  |  // [389]
    :---------------------------------------------------------+  // [389]
    #_ZERO_STEP_PROCESS_# :-----------------------------------+  // [389]
                                                              |  // [389]
        A "zero step process" would be an error.              |  // [389]
        Doesn't make any sense.                               |  // [389]
                                                              |  // [389]
        @_Z_S_P_@ : Zero_Step_Process                         |  // [389]
         @Z_S_P@  : Zero_Step_Process                         |  // [389]
                                                              |  // [389]
    :---------------------------------------------------------+  // [389]
                                                                 // [389]
    @out_iod@ : OUTPUT - Index_Of_Done                           // [389]
                                                                 // [389]
    #_RENFUNC_DONE_# :----------------------------------------+  // [389]
                                                              |  // [389]
        The re-entrant function is done executing.            |  // [389]
        We need to flag[ FILEMOB ]system as NOT_HAVING        |  // [389]
        a re-entrant task queued up.                          |  // [389]
                                                              |  // [389]
    :---------------------------------------------------------+  // [389]
    #_RENFUNC_SELECT_# :--------------------------------------+  // [389]
                                                              |  // [389]
        Assing function pointer to the re-entrant             |  // [389]
        [ task / function ]corresponding with the             |  // [389]
        enumeration loaded into[ FILEMOB ]'s                  |  // [389]
        conceptual task-runner.                               |  // [389]
                                                              |  // [389]
    :---------------------------------------------------------+  // [389]
    #_RENFUNC_CALL_# :----------------------------------------+  // [389]
                                                              |  // [389]
        Call the re-entrant function and get back the         |  // [389]
        "iod". ( Index Of Done ).                             |  // [389]
                                                              |  // [389]
        "Index Of Done" is the step index of the last         |  // [389]
        fully completed step of our re-entrant task.          |  // [389]
                                                              |  // [389]
        If no steps have been completed, iod ===( 0-1 ).      |  // [389]
                                                              |  // [389]
    :---------------------------------------------------------+  // [389]
    #_RENFUNC_NEXT_STEP_# :-----------------------------------+  // [389]
                                                              |  // [389]
        Advance "iod" to the next step that needs to          |  // [389]
        be done. If a spinlock is active within our           |  // [389]
        re-entrant data-structure, the "iod" value            |  // [389]
        might __NOT__ advance.                                |  // [389]
                                                              |  // [389]
        This behavior is intentional.                         |  // [389]
                                                              |  // [389]
        So __NO__ asserts to check and see if "IOD" has       |  // [389]
        been incremented.                                     |  // [389]
                                                              |  // [389]
    :---------------------------------------------------------+  // [389]
    #_HYDRIC_ACID_OXIDANE_# :---------------------------------+  // [389]
                                                              |  // [389]
        A unique error message. The "iod" value should        |  // [389]
        only increment by ZERO(0) or ONE(1) for each          |  // [389]
        invokation of our re-entrant function.                |  // [389]
    :---------------------------------------------------------+  // [389]
    #_RAAB_# :------------------------------------------------+  // [389]
                                                              |  // [389]
        @RAAB@ : Read_As_Array_Buffer                         |  // [389]
    :---------------------------------------------------------+  // [389]

    #_YOU_DIRTY_BITCH_# :-------------------------------------+  // [390]
                                                              |  // [390]
        After loading an levelpack into the game, we          |  // [390]
        need to re-upload to the GPU. This is done by         |  // [390]
        setting the "dirty flag" for "pix 2048".              |  // [390]
                                                              |  // [390]
    :---------------------------------------------------------+  // [390]
    #_LEVELPACK_SOURCE_FILE_SIZE_IDEA_# :---------------------+  // [390]
                                                              |  // [390]
        @IDEA@                                                |  // [390]
        @LEVELPACK_DATA_HIDING_IDEA@                          |  // [390]
        @DATA_HIDING@                                         |  // [390]
                                                              |  // [390]
        We had a whole bunch of complex ideas of how to       |  // [390]
        watermark and un-watermark images.                    |  // [390]
                                                              |  // [390]
        And how to scramble and unscramble images...          |  // [390]
                                                              |  // [390]
        I have a simpler idea....                             |  // [390]
                                                              |  // [390]
        Levelpacks that have been watermarked can             |  // [390]
        be GREATER THAN 512x512 pixels. Like... Maybe         |  // [390]
        we inset the 512x512 inside of a 666_x_666 image.     |  // [390]
                                                              |  // [390]
        We can then have meta data encoded on the             |  // [390]
        [ boarder / frame ]that encircles ( ensquares ? )     |  // [390]
        the [ 512x512 ] levelpack inset within the center.    |  // [390]
                                                              |  // [390]
        Another advantage of using different sized images     |  // [390]
        is that the DIMENSIONS OF THE IMAGE can be used       |  // [390]
        to let use know what type of binary data we have      |  // [390]
        encoded into the .PNG file.                           |  // [390]
                                                              |  // [390]
    :---------------------------------------------------------+  // [390]
    #_GAME_MODULES_# :----------------------------------------+  // [390]
                                                              |  // [390]
        @IDEA@ / @GAME_MODULES_IDEA@ / @GAME_MODULES_IDEA@    |  // [390]
     @THOUGHT@ / @GAME_MODULE_IDEA@  / @GAME_MODULE_IDEA@     |  // [390]
        @GAME_MODULE@ / @GAME_MODULES@ / @MODULE@ / @MODULES@ |  // [390]
                                                              |  // [390]
        We should dedicate a section of this code base        |  // [390]
        to a "game module" that is inlined into this          |  // [390]
        project. An "example game module".                    |  // [390]
                                                              |  // [390]
        It is a "game that uses our engine" than can be       |  // [390]
        loaded into the engine. We hardcode example           |  // [390]
        games into the engine so the user can choose          |  // [390]
        to load one of the modules and understand how         |  // [390]
        to write a basic game in our engine.                  |  // [390]
                                                              |  // [390]
    :---------------------------------------------------------+  // [390]
    #_RESET_R_E_S_# :-----------------------------------------+  // [390]
                                                              |  // [390]
        RESET - Re_Entrant_Struct , ALL OF THEM.              |  // [390]
    :---------------------------------------------------------+  // [390]
    #_FUN_STUFF_IDEA_# :--------------------------------------+  // [390]
                                                              |  // [390]
        @VID@         :: Creating a youtube video of          |  // [390]
        @VID_IDEA@    :: such an animation might get          |  // [390]
        @VIDIDEA@     :: you some views. I don't know         |  // [390]
        @VIDEO_IDEA@  :: if it would go viral...              |  // [390]
                                                              |  // [390]
            Video Title : 13-dimensional cat photos.          |  // [390]
                                                              |  // [390]
            13 dimensions because cat is split into 13        |  // [390]
            different level within a levelpack.               |  // [390]
                                                              |  // [390]
        @IDEA@ / @BIT_ROTATION_IDEA@ / @IDEA_BIT_ROTATION@    |  // [390]
                                                              |  // [390]
        Animated bit rotation. Rotate the bits of             |  // [390]
        every god-damned tile in the levelpack and just       |  // [390]
        see what that ends up looking like.                   |  // [390]
                                                              |  // [390]
        Could get some interesting effects with the           |  // [390]
        cat pictures you are loading into the game.           |  // [390]
    :---------------------------------------------------------+  // [390]

    #_WHEN_USER_HITS_CANCEL_OR_ESCAPE_# :---------------------+  // [391]
                                                              |  // [391]
        BUGFIX_DONE : We need to reset re-entrant data        |  // [391]
                    : when user cancels operation.            |  // [391]
                    : Otherwise the hotkey for loading        |  // [391]
                    : a levelpack becomes permanently         |  // [391]
                    : broken.                                 |  // [391]
        BUGFIX_HOW  : Added[ taskill ]Variable_To_Kill_Tasks  |  // [391]
    :---------------------------------------------------------+  // [391]
                                                                 // [391]
    @d_filemob_taskill@ : Kill current re-entrant task ?         // [391]
                                                                 // [391]
    #_YOU_WISH_IT_WERE_THAT_FUCKING_EASY_# :------------------+  // [391]
                                                              |  // [391]
        There is no "oncancel" event we can use.              |  // [391]
        And detecting a "cancel" event through hacks          |  // [391]
        is a lot of javascript specific code I'd rather       |  // [391]
        __NOT__ right. So... We need a table that we          |  // [391]
        can use to flag certain tasks as                      |  // [391]
        "interruptable".                                      |  // [391]
    :---------------------------------------------------------+  // [391]
    #_WHYKILL_LOADBOX_# :-------------------------------------+  // [391]
                                                              |  // [391]
        There is NO POSSIBLE FUCKING WAY to detect the        |  // [391]
        cancel buutton with the file picker dialog we         |  // [391]
        have instantiated. So we need to allow the            |  // [391]
        "loadbox_dsk" function to be "killable" and           |  // [391]
        if we try to disbatch it again, it kills              |  // [391]
        the previously disbatched file picker process.        |  // [391]
                                                              |  // [391]
    :---------------------------------------------------------+  // [391]
    #_IDEA_CORRUPTION_BRUSH_# :-------------------------------+  // [391]
                                                              |  // [391]
        @IDEA@ @CORRUPTION_BRUSH@   @CORRUPT_BRUSH@           |  // [391]
                                                              |  // [391]
        A brush that bit-rotates the tile values it           |  // [391]
        passes over. What will happen? Who knows!             |  // [391]
                                                              |  // [391]
    :---------------------------------------------------------+  // [391]

    #_MOBTASK_SYSTEM_SECTION_# :------------------------------+  // [393]
                                                              |  // [393]
        Maybe we should make "MOBTASK" it's own               |  // [393]
        subsystem that comes BEFORE "FILEMOB" ?               |  // [393]
                                                              |  // [393]
        But for now , just make sure "MOBTASK" code is        |  // [393]
        included before the other "FILEMOB" code within       |  // [393]
        the filemob function section.                         |  // [393]
                                                              |  // [393]
    :---------------------------------------------------------+  // [393]
    #_ONLY_TASKILL_FOR_HANGABLE_TASKS_# :---------------------+  // [393]
                                                              |  // [393]
        Only use[ F_FILEMOB_TASKILL_TRY() ]inside a           |  // [393]
        task disbatcher that... Actually... No...             |  // [393]
        always call this... The "Try kill" will               |  // [393]
        determine if the task is killable...                  |  // [393]
                                                              |  // [393]
    :---------------------------------------------------------+  // [393]
    #_ALWAYS_TASKILL_TRY_# :----------------------------------+  // [393]
                                                              |  // [393]
        When entring a command that disbatches a task,        |  // [393]
        always try to kill the pre-existing task.             |  // [393]
                                                              |  // [393]
        If the task is not killable, then the current         |  // [393]
        task we are trying to disbatch will be                |  // [393]
        ignored. AKA : We won't disbatch a                    |  // [393]
        [ new / overriding ] task.                            |  // [393]
    :---------------------------------------------------------+  // [393]
    @_KINDEFT_@ : SEE[ KINDEFU ]                                 // [393]
    @_KINDEFU_@ :---------------------------------------------+  // [393]
                                                              |  // [393]
        @KINDEFU@ : Keep_INlined - Dont_Extract(to)FUnction   |  // [393]
                                                              |  // [393]
    :---------------------------------------------------------+  // [393]
    #_IDEA_ANTI_FRACTURE_BRUSH_# :----------------------------+  // [393]
                                                              |  // [393]
        @IDEA@ / @ANTI_FRACTURE_BRUSH_IDEA@                   |  // [393]
                 @IDEA_ANTI_FRACTURE_BRUSH@                   |  // [393]
                                                              |  // [393]
        A brush that all it does is remove the                |  // [393]
        [ AM6 ]( Auto Tile Mask )bits from the tiles          |  // [393]
        it brushes over. Doesn't change the actual tile       |  // [393]
        value, just removes the auto tile mask.               |  // [393]
    :---------------------------------------------------------+  // [393]
    #_IDEA_FRACKING_BRUSH_# :---------------------------------+  // [393]
                                                              |  // [393]
        @IDEA@ / @FRACTURE_BRUSH_IDEA@                        |  // [393]
                 @IDEA_FRACTURE_BRUSH@                        |  // [393]
                                                              |  // [393]
        A brush that does the opposite of the                 |  // [393]
        anti-fracture brush. It randomizes the auto           |  // [393]
        tile mask ( AM6 ) bits.                               |  // [393]
                                                              |  // [393]
        It doesn't change the tile value though.              |  // [393]
        Just manipulates the auto-tile-mask bits.             |  // [393]
    :---------------------------------------------------------+  // [393]

    #_SAVEBOX_DSK_INVALID_TASKIOS_# :-------------------------+  // [394]
                                                              |  // [394]
        Invalid task step. Are you sure you are supposed      |  // [394]
        to still be executing this function?                  |  // [394]
                                                              |  // [394]
    :---------------------------------------------------------+  // [394]
                                                                 // [394]
    @o_iod@ : OUTPUT - Index_Of_Done                             // [394]
                                                                 // [394]
    #_VARDEC_2022_10_28_# :-----------------------------------+  // [394]
                                                              |  // [394]
        "Save File Dialog Box" function's top level           |  // [394]
        variable declaration section. Tagged with the         |  // [394]
        current date to make the section name forever         |  // [394]
        unique until the end of time.                         |  // [394]
                                                              |  // [394]
    :---------------------------------------------------------+  // [394]
    #_SETUP_SAVEBOX_DOM_HACK_# :------------------------------+  // [394]
                                                                 // [394]
        If the invisible anchor element needed to spawn          // [394]
        a save file dialog box does not exist, crate             // [394]
        it here in this step.                                    // [394]
                                                                 // [394]
        Reference :                                              // [394]
        muhimasri.com/blogs/how-to-save-files-in-javascript/     // [394]
                                                                 // [394]
    :---------------------------------------------------------+  // [394]
    #_COPY_PIXELS_TO_MP0_# :----------------------------------+  // [395]
                                                              |  // [395]
        Copy pixels into misc 512 memory #0 so we can be      |  // [395]
        ready to convert the RGBA array into a .PNG           |  // [395]
        binary file.                                          |  // [395]
    :---------------------------------------------------------+  // [395]
    #_DYNAMIC_PNG_ALLOC_# :-----------------------------------+  // [395]
                                                              |  // [395]
        Because we are saving directly to disk ,              |  // [395]
        we will need a buffer of data where there             |  // [395]
        are NO UNUSED BITS. So using misc-memory for          |  // [395]
        this will NOT WORK.                                   |  // [395]
                                                              |  // [395]
        The browser is going to download the entire           |  // [395]
        blob, so any extra bits would cause data              |  // [395]
        corruption of our .PNG file.                          |  // [395]
                                                              |  // [395]
        Or would it?                                          |  // [395]
                                                              |  // [395]
        Can we just throw extra bit onto the end of           |  // [395]
        a .PNG file and still have it work?                   |  // [395]
                                                              |  // [395]
        Hmm...                                                |  // [395]
                                                              |  // [395]
        I bet a __LOT__ of binary files would allow           |  // [395]
        use to hide data by sticking "Telomere Bits"          |  // [395]
        onto the end of the file.                             |  // [395]
                                                              |  // [395]
    :---------------------------------------------------------+  // [395]
    #_CREATE_BLOB_# :-----------------------------------------+  // [398]
                                                              |  // [398]
        Create a "blob file" and attach it to a url           |  // [398]
        that we can then download from our page.              |  // [398]
    :---------------------------------------------------------+  // [398]
    #_OPEN_SAVE_DIALOG_BOX_# :--------------------------------+  // [394]
                                                              |  // [394]
        Invoking the ".click()" event on the invisible        |  // [394]
        anchor should cause the save file dialog box          |  // [394]
        to open. I think that technically this isn't          |  // [394]
        a "save file dialog box" but rather a                 |  // [394]
        "download file dialog box".                           |  // [394]
                                                              |  // [394]
    :---------------------------------------------------------+  // [394]
    #_SELECT_FOLDER_SPINLOCK_# :------------------------------+  // [394]
                                                              |  // [394]
        TAG[ _WAIT_FOR_SELECT_ ]                              |  // [394]
                                                              |  // [394]
        Spinlock here until the user has decided on           |  // [394]
        a name for the file and hit "save"...                 |  // [394]
                                                              |  // [394]
        So... "Select" is kind of a bad name.                 |  // [394]
                                                              |  // [394]
        I guess technically they have to                      |  // [394]
        "select the folder" to save into and                  |  // [394]
        "specify the name" of the file.                       |  // [394]
                                                              |  // [394]
    :---------------------------------------------------------+  // [394]
    #_INITIATE_SAVE_DOWNLOAD_# :------------------------------+  // [394]
                                                              |  // [394]
        Once the download folder has been selected,           |  // [394]
        download the file? I don't even know if this          |  // [394]
        section is needed. I am writing most of these         |  // [394]
        sections ahead of time without knowing                |  // [394]
        the specific implementation details.                  |  // [394]
                                                              |  // [394]
    :---------------------------------------------------------+  // [394]
    #_FREE_SPOT_# :-------------------------------------------+  // [394]
                                                              |  // [394]
        A free spot that we can re-name later if              |  // [394]
        we decide it is needed. Yep, this code is             |  // [394]
        going to take 1_EXTRA_GAME_FRAME to finish            |  // [394]
        because of this free spot. WHAT A CRIME               |  // [394]
        AGAINST PROCESSING UNITS EVERYWHERE!!!!               |  // [394]
                                                              |  // [394]
    :---------------------------------------------------------+  // [394]
    #_THE_END_OF_DAYS_# :-------------------------------------+  // [394]
                                                              |  // [394]
        If we get here, we fucked something up.               |  // [394]
        Fix it immediately. Make daddy John Carmack           |  // [394]
        happy for your good programming practices.            |  // [394]
                                                              |  // [394]
    :---------------------------------------------------------+  // [394]
    #_MOCKING_UP_END_OF_SAVE_TASK_# :-------------------------+  // [394]
                                                              |  // [394]
        Temporary message just to confirm the basic           |  // [394]
        [ workflow / programming flow ]is in place.           |  // [394]
                                                              |  // [394]
        We will change this "YEL" into a "MSG"                |  // [394]
        once we are all finished with this code.              |  // [394]
                                                              |  // [394]
    :---------------------------------------------------------+  // [394]
    #_THE_5TH_STEP_# :----------------------------------------+  // [394]
                                                              |  // [394]
        Helping remind myself that                            |  // [394]
        [ i_taskios === 4 ] === [ The 5th Step ]              |  // [394]
                                                              |  // [394]
    :---------------------------------------------------------+  // [394]
    #_LOOKS_WRONG_BUT_CORRECT_# :-----------------------------+  // [394]
                                                              |  // [394]
                                                              |  // [394]
        d_filemob_taskiod=( out_iod );                        |  // [394]
                                                              |  // [394]
        if( 0  //:#_LOOKS_WRONG_BUT_CORRECT_#://              |  // [394]
        || ( out_iod+0 === ios  ) //:DID_STEP://              |  // [394]
        || ( out_iod+1 === ios  ) //:SPINLOCK://  <-- LOOKS_BAD  // [394]
        || ( out_iod   === ios-1) //:SPINLOCK://  <-- LOOKS_BAD  // [394]
        ){                                                    |  // [394]
            //: Both Cases are OKAY ://                       |  // [394]
        }else{                                                |  // [394]
            ERR("[#_HYDRIC_ACID_OXIDANE_#]");                 |  // [394]
        };;                                                   |  // [394]
                                                              |  // [394]
        When calling re-entrant function,                     |  // [394]
        [ out_iod === ios ] means the                         |  // [394]
        process has moved forward by one step.                |  // [394]
                                                              |  // [394]
        Thus, to signify the process has NOT MOVED            |  // [394]
        ANYWHERE, [ out_iod+1 === ios ]...                    |  // [394]
                                                              |  // [394]
        Still feels wrong....                                 |  // [394]
                                                              |  // [394]
        Why is it not[ out_iod-1 === ios ] ?                  |  // [394]
                                                              |  // [394]
        ALGEBRA_BITCHES:                                      |  // [394]
                                                              |  // [394]
            WRONG:                                            |  // [394]
                [ out_iod-1 === ios ]==>[ out_iod == ios+1 ]  |  // [394]
                                                              |  // [394]
            CORRECT :                                         |  // [394]
                [ out_iod+1 === ios ]==>[ out_iod == ios-1 ]  |  // [394]
                                                              |  // [394]
                                                              |  // [394]
        EXAMPLE SPINLOCK CASE :                               |  // [394]
                                                              |  // [394]
            ios =( 0 );                                       |  // [394]
            out_iod == SPINLOCKED_RE_ENTRANT( ios );          |  // [394]
                                                              |  // [394]
            ASSERT( (0-1) === out_iod );                      |  // [394]
                                                              |  // [394]
            Why? Because NOT EVEN STEP ZERO has               |  // [394]
            been completed yet.                               |  // [394]
                                                              |  // [394]
    :---------------------------------------------------------+  // [394]

    #_SPECIAL_ITEM_LEDGER_# :---------------------------------+  // [395]
                                                              |  // [395]
        We are all out of tile values... How do we create     |  // [395]
        collectable items that are rendered as tile-based     |  // [395]
        sprites?                                              |  // [395]
                                                              |  // [395]
        ANSWER : A "special item ledger".                     |  // [395]
                                                              |  // [395]
        In one of the unused 128x128 blocks of levelpack,     |  // [395]
        we dedicate it to "special items ledger".             |  // [395]
                                                              |  // [395]
        Each special item takes up a byte. So total of        |  // [395]
        255 unique special items we can have in the game.     |  // [395]
                                                              |  // [395]
       @IDEA@: Let's make collectable "DRAGON BALLS" and      |  // [395]
             : there are serious consequences if someone      |  // [395]
             : gets ahold of all of them.                     |  // [395]
             :                                                |  // [395]
             : You can't team up with other people and agree  |  // [395]
             : on a wish via an escrow system. One of the     |  // [395]
             : wishes can be to obliterate someone's level.   |  // [395]
                                                              |  // [395]
            +-----------+ +----+ +-----------+                |  // [395]
            | EYEOF_GOD | | 64 | | EYEOF_GOD |                |  // [395]
            |    + +----+ +----+ +----+ +    |                |  // [395]
            |    + +----+ +----+ +----+ +    |                |  // [395]
            |    | | 64 | | 64 | | 64 | |    |                |  // [395]
            +----+ +----+ +----+ +----+ +----+                |  // [395]
            +----+ +----+ +----+ +----+ +----+                |  // [395]
            | 64 | | 64 | | 64 | | 64 | | 64 |                |  // [395]
            +----+ +----+ +----+ +----+ +----+                |  // [395]
            +----+ +----+ +----+ +----+ +----+                |  // [395]
            |    | | 64 | | 64 | | 64 | |    |                |  // [395]
            |    + +----+ +----+ +----+ +    |                |  // [395]
            |    + +----+ +----+ +----+ +    |                |  // [395]
            | EYEOF_GOD | | 64 | | EYEOF_GOD |                |  // [395]
            +-----------+ +----+ +-----------+                |  // [395]
                                                              |  // [395]
            |<--- 128 --->|                                   |  // [395]
            +-------------+                                   |  // [395]
            |      |      |                                   |  // [395]
            |  64  |  64  |                                   |  // [395]
            |      |      |                                   |  // [395]
            |------+------+ TIMES_RGBA(4) ===> 4*4 == 16      |  // [395]
            |      |      |                                   |  // [395]
            |  64  |  64  |                                   |  // [395]
            |      |      |                                   |  // [395]
            +-------------+                                   |  // [395]
                                                              |  // [395]
            +-----------+ +----+ +-----------+                |  // [395]
            | EYEOF_GOD | | 00 | | EYEOF_GOD |                |  // [395]
            |    + +----+ +----+ +----+ +    |                |  // [395]
            |    + +----+ +----+ +----+ +    |                |  // [395]
            |    | | 01 | | 02 | | 03 | |    |                |  // [395]
            +----+ +----+ +----+ +----+ +----+                |  // [395]
            +----+ +----+ +----+ +----+ +----+                |  // [395]
            | 04 | | 05 | | 06 | | 07 | | 08 |                |  // [395]
            +----+ +----+ +----+ +----+ +----+                |  // [395]
            +----+ +----+ +----+ +----+ +----+                |  // [395]
            |    | | 09 | | 10 | | 11 | |    |                |  // [395]
            |    + +----+ +----+ +----+ +    |                |  // [395]
            |    + +----+ +----+ +----+ +    |                |  // [395]
            | EYEOF_GOD | | 12 | | EYEOF_GOD |                |  // [395]
            +-----------+ +----+ +-----------+                |  // [395]
                                                              |  // [395]
            |<--- #_META_DATA_OVERLAY_BITS_DIAGRAM_# --->|    |  // [407]
            |                                            |    |  // [407]
            +---------------+  ---===--- +---------------+    |  // [395]
            | 00 01 | 04 05 |     |||    | RR GG | RR GG |    |  // [395]
            |       |       |     |||    |       |       |    |  // [395]
            | 02 03 | 06 07 |     |||    | BB AA | BB AA |    |  // [395]
            |-------+-------+     128    |-------+-------+    |  // [395]
            | 08 09 | 12 __ |     |||    | RR GG | RR __ |    |  // [395]
            |       |       |     |||    |       |       |    |  // [395]
            | 10 11 | __ __ |     |||    | BB AA | __ __ |    |  // [395]
            +---------------+  ---===--- +---------------+    |  // [395]
                                                              |  // [395]
            RR === Red Channel , 0-to-255 special_item code.  |  // [395]
            GG === Gre Channel , 0-to-255 special_item code.  |  // [395]
            BB === Blu Channel , 0-to-255 special_item code.  |  // [395]
            AA === Alp Channel , 0-to-255 special_item code.  |  // [395]
                                                              |  // [395]
    :---------------------------------: #_SPECIAL_ITEM_LEDGER_#  // [395]
    #_ATOMATA_IVY_# :-----------------------------------------+  // [395]
    #_IVY_ATOMATA_# :-----------------------------------------+  // [395]
                                                              |  // [395]
        TAG[ _HARVEST_MOON_PLUS_VIOLENCE_ ]                   |  // [395]
        TAG[ _VIOLENCE_PLUS_HARVEST_MOON_ ]                   |  // [395]
                                                              |  // [395]
        To make level designs more interesting, we can        |  // [395]
        have ivy that grows on top of the level , or          |  // [395]
        in the back ground. It grows on top of whatever       |  // [395]
        tile it directly in front of.                         |  // [395]
                                                              |  // [395]
        If the ivy tile is on top of a BACKGROUND TILE,       |  // [395]
        then the ivy is rendered in the BACKGROUND.           |  // [395]
                                                              |  // [395]
        If the ivy tile is on top of a FOREGROUND TILE,       |  // [395]
        then the ivy is rendered in the FOREGROUND.           |  // [395]
                                                              |  // [395]
        If the ivy tile is on top of a MIDGROUND TILE,        |  // [395]
        then the ivy is rendered in the MIDGROUND.            |  // [395]
                                                              |  // [395]
        Ivy can be attacted to energy sources, such           |  // [395]
        as light fixtures.                                    |  // [395]
                                                              |  // [395]
        Cellular atomata that are attracted to light.         |  // [395]
                                                              |  // [395]
        They grow fruit that you can collect.                 |  // [395]
                                                              |  // [395]
        The fruit tiles are spawned via the :                 |  // [395]
        [ _SPECIAL_ITEM_LEDGER_ ]                             |  // [395]
        ( See notes section above this section )              |  // [395]
                                                              |  // [395]
    :---------------------------------------------------------+  // [395]
    #_SAVEBOX_CLICKSPAWN_# :----------------------------------+  // [395]
                                                              |  // [395]
        Invoking the "click()" function on our anchor         |  // [395]
        tag will cause the "save file dialog box" to          |  // [395]
        open up. Or maybe it is a "download file dialog box". |  // [395]
                                                              |  // [395]
        You get the idea.                                     |  // [395]
                                                              |  // [395]
    :---------------------------------------------------------+  // [395]
    #_CREATE_INVISIBLE_ANCHOR_# :-----------------------------+  // [395]
                                                              |  // [395]
        Create invisible anchor tag on the D_O_M that is      |  // [395]
        used as a hack to spawn a dialog box used to          |  // [395]
        save a file to the user's [ hard disk ].              |  // [395]
    :---------------------------------------------------------+  // [395]
    #_ANCHOR_ERROR_# :----------------------------------------+  // [395]
                                                              |  // [395]
        Error check to see if the anchor was actually         |  // [395]
        created. Throw fatal error if we failed to            |  // [395]
        create the anchor. Without an anchor, we              |  // [395]
        cannot spawn the save file dialog box.                |  // [395]
    :---------------------------------------------------------+  // [395]
    #_YOUR_ANCHOR_IS_STILL_NIL_# :----------------------------+  // [395]
                                                              |  // [395]
        Dispite all my rage, I still am just a loser          |  // [395]
        without an HTML-5 anchor tag. I should have           |  // [395]
        payed more attention in JavaScript+HTML+CSS           |  // [395]
        class.                                                |  // [395]
    :---------------------------------------------------------+  // [395]

    #_HREF_DOWNLOAD_# :---------------------------------------+  // [396]
                                                              |  // [396]
        I think these are the two pieces of data you          |  // [396]
        need in order for the "elm_dom.click()" to            |  // [396]
        open up a dialog.                                     |  // [396]
    :---------------------------------------------------------+  // [396]
    #_THE_7TH_STEP_# :----------------------------------------+  // [396]
                                                              |  // [396]
        Reminder to myself that step index 6 is the           |  // [396]
        SEVENTH(7) step because we start counting at ZERO(0). |  // [396]
    :---------------------------------------------------------+  // [396]

    #_HARDCENTER_HOTEL_# :------------------------------------+  // [397]
                                                              |  // [397]
        For the time being, we can only load+save to          |  // [397]
        the centeral level pack. I am hard coding the         |  // [397]
        centeral levelpack address ( [h3x:1 , h3y:1] )        |  // [397]
        into the copy-pixel block of code.                    |  // [397]
                                                              |  // [397]
    :---------------------------------------------------------+  // [397]
    #_DST_XY_X0C_Y0C_# :--------------------------------------+  // [397]
                                                              |  // [397]
        Calculate destination PIXEL coordinate [x0c,y0c].     |  // [397]
                                                              |  // [397]
    :---------------------------------------------------------+  // [397]
    #_SRC_XY_X1C_Y1C_# :--------------------------------------+  // [397]
                                                              |  // [397]
        Calculate source PIXEL coordinate [x1c,y1c].          |  // [397]
                                                              |  // [397]
    :---------------------------------------------------------+  // [397]
    #_BYTE_ADDRESS_# :----------------------------------------+  // [397]
                                                              |  // [397]
        Get the address of the first byte of our pixel.       |  // [397]
        We first need to convert the XY pixel coord           |  // [397]
        into a 1-dimensional scan-line-order index.           |  // [397]
        Then we multiply by 4 to get the base byte            |  // [397]
        address. Because there are 4-bytes per pixel.         |  // [397]
        ( RGBA == 4 bytes ).                                  |  // [397]
                                                              |  // [397]
    :---------------------------------------------------------+  // [397]
    #_COPY_OVER_PIXEL_# :-------------------------------------+  // [397]
                                                              |  // [397]
        Copy the individual RGBA bytes from the source        |  // [397]
        ( pix 2048 ) over to the dest ( misc memory 0 ).      |  // [397]
                                                              |  // [397]
    :---------------------------------------------------------+  // [397]

    #_HOTEL13_PNGFILE_# :-------------------------------------+  // [398]
                                                              |  // [398]
        Calling this variable "hotel13_pngfile"               |  // [398]
        because the source code in[ HOTEL13.JS ]              |  // [398]
        I am referencing , the .PNG file is                   |  // [398]
        called[ d_pngfile ].                                  |  // [398]
                                                              |  // [398]
        Example From HOTEL13.JS :                             |  // [398]
                                                              |  // [398]
            F_HOTEL13_XHR_POST(                               |  // [398]
                                                              |  // [398]
                d_pngpath_upp //:EX["UPLOAD/101/202/303"]://  |  // [398]
            ,   d_pngfile     //:EX[some binary object  ]://  |  // [398]
                                                              |  // [398]
            ).then((i_saywhat)=>{  ... });                    |  // [398]
                                                              |  // [398]
    :---------------------------------------------------------+  // [398]
    #_THE_8TH_STEP_# :----------------------------------------+  // [398]
                                                              |  // [398]
        A reminder that "step index == 7" means we            |  // [398]
        are on the 8th step.                                  |  // [398]
    :---------------------------------------------------------+  // [398]

    @RTN@ : Reset_To_NIL ::::::::::::::::::::::::::::::::::::::  // [399]
                                                                 // [399]
    @URL_2022_10_29@ :---------------------+                     // [399]
                                           |                     // [399]
        http://muhimasri.com/blogs         |                     // [399]
        /how-to-save-files-in-javascript/  |                     // [399]
    :--------------------------------------+                     // [399]
                                                                 // [399]
    #_DAT_002_CLEANUP_URL_# :---------------------------------+  // [399]
                                                              |  // [399]
        Cleaning up the download url references. There        |  // [399]
        should only be ONE OF THEM. But if there are          |  // [399]
        more than one, we added a loop to clean that up       |  // [399]
        and we YELL AT USER to alert them of a serious        |  // [399]
        problem without crashing.                             |  // [399]
    :---------------------------------------------------------+  // [399]

    #_ABOUT_HARDTEX_SYSTEM_# :--------------------------------+  // [402]
                                                              |  // [402]
        :--------------------------------------------------:  |  // [402]
        :                                                  :  |  // [402]
        : ABOUT[ HARDTEX ]SYSTEM :                         :  |  // [402]
        :                                                  :  |  // [402]
        :     This system should never be used during      :  |  // [402]
        :     normal operation. This system should only    :  |  // [402]
        :     be used when debugging. For example,         :  |  // [402]
        :     we currently have a bug in our               :  |  // [402]
        :     sub-texture-push code done by the            :  |  // [402]
        :     GPUSYNC sub-system. We are going to use      :  |  // [402]
        :     this system to help debug sub-texture-push.  :  |  // [402]
        :                                                  :  |  // [402]
        :     Once that issue is debugged , we can use     :  |  // [402]
        :     the[ HARDTEX ]system anytime we don't        :  |  // [402]
        :     trust what we are seeing and think that      :  |  // [402]
        :     a [ force refresh / force texture push ]     :  |  // [402]
        :     would help give us sanity of mind , or at    :  |  // [402]
        :     least narrow down where to search for bugs.  :  |  // [402]
        :                                                  :  |  // [402]
        :--------------------------------------------------:  |  // [402]
                                                              |  // [402]
    :---------------------------------------------------------+  // [402]
    #_UNIT_TESTING_OPTIONS_# :--------------------------------+  // [402]
                                                              |  // [402]
        So, some unit tests take a LOT OF FUCKING TIME.       |  // [402]
                                                              |  // [402]
        And, we don't always want to wait 1 minute for        |  // [402]
        the game to load. So this section of code is for      |  // [402]
        turning off specific unit tests that are              |  // [402]
        becomming a pain in my ass.                           |  // [402]
    :---------------------------------------------------------+  // [402]

    #_LEVELPACK_BINARY_FLOOD_FILL_# :-------------------------+  // [403]
                                                              |  // [403]
        A reminder to myself what this code does.             |  // [403]
        It flood-fills an entire levelpack's data with        |  // [403]
        either binary "1" or binary "0".                      |  // [403]
                                                              |  // [403]
                                    0xRRGGBBAA                |  // [403]
                                      ||||||||                |  // [403]
        Binary "1" ==> All Pixels : 0xFFFFFFFF                |  // [403]
        Binary "0" ==> All Pixels : 0x00000000                |  // [403]
                                      ||||||||                |  // [403]
                                    0xRRGGBBAA                |  // [403]
                                                              |  // [403]
    :---------------------------------------------------------+  // [403]
    #_KONAMIC_3X3_NUMPAD_# :----------------------------------+  // [403]
                                                              |  // [403]
        Section of KONAMIC (Konami Key System )               |  // [403]
        where we decide what to do after                      |  // [403]
        "KONAMI+NUMPAD" has been                              |  // [403]
        entered into the keyboard.                            |  // [403]
                                                              |  // [403]
        As of writing this, [ 1 to 9 ] either zero            |  // [403]
        fills or 1 fills the corresponding levelpack          |  // [403]
        on our 3x3 grid of level packs in "THE_DUM".          |  // [403]
                                                              |  // [403]
        I want to use this to debug "sub texture pushes"      |  // [403]
        so I am going to create a "mode" flag that            |  // [403]
        changes the set of debug functions used               |  // [403]
        for the number pad.                                   |  // [403]
                                                              |  // [403]
        That "mode flag" is not yet added to the              |  // [403]
        code base as of writing this.                         |  // [403]
        ( Video #4_0_3 )                                      |  // [403]
    :---------------------------------------------------------+  // [403]
    #_DIV_1_OF_3_# :------------------------------------------+  // [403]
    #_DIV_2_OF_3_# :------------------------------------------+  // [403]
    #_DIV_3_OF_3_# :------------------------------------------+  // [403]
                                                              |  // [403]
        @DIV_1_OF_3@ : DIVider : 1 of 3 total.                |  // [403]
        @DIV_2_OF_3@ : DIVider : 2 of 3 total.                |  // [403]
        @DIV_3_OF_3@ : DIVider : 3 of 3 total.                |  // [403]
                                                              |  // [403]
        Trying a new partitioning style to mark the           |  // [403]
        beginning and ending of blocks of code that           |  // [403]
        are either :                                          |  // [403]
                                                              |  // [403]
            1. Within a function.                             |  // [403]
                                                              |  // [403]
            2. The function itself.                           |  // [403]
                                                              |  // [403]
        Not meant to region devide more general               |  // [403]
        sections of code. Only meant to region                |  // [403]
        divide lexical scopes of code at                      |  // [403]
        or lower than the function-scope.                     |  // [403]
    :---------------------------------------------------------+  // [403]
    :---------------------------------------------------------+  // [403]
    :---------------------------------------------------------+  // [403]
    #_think_you_are_so_fucking_smart_# :----------------------+  // [403]
                                                              |  // [403]
        Just because you __CAN__ write code cleverly          |  // [403]
        and compactly does not mean you should.               |  // [403]
                                                              |  // [403]
        Yes, the code below this                              |  // [403]
        [ _INTERDU_ ]section seems more "beginner"...         |  // [403]
                                                              |  // [403]
        But the saying :                                      |  // [403]
                                                              |  // [403]
            "He's either a complete idiot , or genius."       |  // [403]
                                                              |  // [403]
        Kind of applies here.                                 |  // [403]
                                                              |  // [403]
        There is no decent performance benifit I can          |  // [403]
        see to manually compressing your code and making      |  // [403]
        it hard to read.                                      |  // [403]
                                                              |  // [403]
        Using a lookup table instead of a if-else             |  // [403]
        or switch is basically "manually compressing"         |  // [403]
        your code. Which makes it harder to read.             |  // [403]
                                                              |  // [403]
        Don't re-write code just to save lines of code.       |  // [403]
                                                              |  // [403]
        This isn't code that executes every frame,            |  // [403]
        so we should be optimizing for "readability"          |  // [403]
        not speed.                                            |  // [403]
                                                              |  // [403]
    :---------------------------------------------------------+  // [403]
    #_INTERDU_# :---------------------------------------------+  // [403]
                                                              |  // [403]
        Intermediate Dude. === INTERDU.                       |  // [403]
                                                              |  // [403]
        I am feeling kind of "Johnathan Blow" snarky          |  // [403]
        opinnionated today.                                   |  // [403]
                                                              |  // [403]
        Look, just because you are smart enough to use        |  // [403]
        a lookup table doesn't mean you should.               |  // [403]
                                                              |  // [403]
        I am being an asshole because I am saying that        |  // [403]
        sometimes "intermediate" programmers pull out         |  // [403]
        too many "fancy tricks" just because they can.        |  // [403]
                                                              |  // [403]
        So sometimes "beginner code" and "expert code"        |  // [403]
        look identical in some areas.                         |  // [403]
                                                              |  // [403]
                                                              |  // [403]
        I hear starting fights on the internet is a good      |  // [403]
        way to go viral. Maybe I should start publically      |  // [403]
        shit talking and doing all the possible               |  // [403]
        derivatives of "Tabs Vs Spaces" type conversation     |  // [403]
        that I can think of.                                  |  // [403]
                                                              |  // [403]
        This got me ranting on this:                          |  // [403]
        https://www.reddit.com/r/AskComputerScience           |  // [403]
        /comments/hdzdgz                                      |  // [403]
        /yes_yandere_devs_code_sucks_but_as_someone_who/      |  // [403]
                                                              |  // [403]
    :---------------------------------------------------------+  // [403]
    #_FOE_# :-------------------------------------------------+  // [403]
                                                              |  // [403]
        FOE === "Fill Or Empty".                              |  // [403]
                                                              |  // [403]
        This section of code is reponsible for either         |  // [403]
        "1" filling or "0" filling one of our 9               |  // [403]
        levelpacks within "THE_DUM". The dum is a 3x3         |  // [403]
        grid of levelpacks within 100% of our                 |  // [403]
        renderable space in the game's engine.                |  // [403]
                                                              |  // [403]
        +--------+--------+--------+     +-----+-----+-----+  |  // [403]
        |        |        |        |     |     |     |     |  |  // [403]
ROW_TOP | T____L | T____M | T____R |     | NP7 | NP8 | NP9 |  |  // [403]
        |        |        |        |     +-----+-----+-----+  |  // [403]
        +--------+--------+--------+     |     |     |     |  |  // [403]
        |        |        |        |     | NP4 | NP5 | NP6 |  |  // [403]
ROW_MID | C____L | C____M | C____R |     +-----+-----+-----+  |  // [403]
        |        |        |        |     |     |     |     |  |  // [403]
        +--------+--------+--------+     | NP1 | NP2 | NP3 |  |  // [403]
        |        |        |        |     +-----+-----+-----+  |  // [403]
ROW_BOT | B____L | B____M | B____R |                          |  // [403]
        |        |        |        |                          |  // [403]
        +--------+--------+--------+                          |  // [403]
                                                              |  // [403]
        @dum_[###]@ : Then number is the NUMPAD NUMBER ,      |  // [403]
                    : if you don't know this, the             |  // [403]
                    : constants will seem to be mapped        |  // [403]
                    : backwards. But they are not.            |  // [403]
                                                              |  // [403]
        QUESTION:                                             |  // [403]
            Why is this not in "Scanline Order" ?             |  // [403]
            Why is this not in "Top To Bottom Row Order?"     |  // [403]
            Why is origin not "Top Left" in layout?           |  // [403]
                                                              |  // [403]
        ANSWER:                                               |  // [403]
            Because the layout of the numpad                  |  // [403]
            flips the "Y-AXIS" of scanline order.             |  // [403]
                                                              |  // [403]
            @NP7@ : Numpad #7  ( NUMPAD_TOP_ROW )             |  // [403]
            @NP8@ : Numpad #7  ( NUMPAD_TOP_ROW )             |  // [403]
            @NP9@ : Numpad #7  ( NUMPAD_TOP_ROW )             |  // [403]
                                                              |  // [403]
            @NP4@ : Numpad #4  ( NUMPAD_MID_ROW )             |  // [403]
            @NP5@ : Numpad #5  ( NUMPAD_MID_ROW )             |  // [403]
            @NP6@ : Numpad #6  ( NUMPAD_MID_ROW )             |  // [403]
                                                              |  // [403]
            @NP1@ : Numpad #1  ( NUMPAD_BOT_ROW )             |  // [403]
            @NP2@ : Numpad #2  ( NUMPAD_BOT_ROW )             |  // [403]
            @NP3@ : Numpad #3  ( NUMPAD_BOT_ROW )             |  // [403]
                                                              |  // [403]
                                                              |  // [403]
            NUMPAD_CEN_ROW : No Such Thing. CEN == X AXIS.    |  // [403]
            NUMPAD_CEN_ROW : No Such Thing. CEN == X AXIS.    |  // [403]
            NUMPAD_CEN_ROW : No Such Thing. CEN == X AXIS.    |  // [403]
                                                              |  // [403]
    :---------------------------------------------------------+  // [403]
    #KEEP0# :-------------------------------------------------+  // [403]
                                                              |  // [403]
        @KEEP0@ : If you know what is good for you, you       |  // [403]
                : will keep this zero. The point is, there    |  // [403]
                : are reasons for what I do. And do not       |  // [403]
                : mistake "beginner looking code" from        |  // [403]
                : "Keep It Simple Stupid" ( K__I__S__S ).     |  // [403]
    :---------------------------------------------------------+  // [403]

    #_KONAMIC_NUMBER_PAD_DEBUG_MODE_# :-----------------------+  // [404]
                                                              |  // [404]
        @KOPAD@ : KOnamic_PAD ( PAD === Number Pad )          |  // [404]
                                                              |  // [404]
        @d_bug_konamic_pad@ : Debug_KONAMIC_NumberPad         |  // [404]
                : Debug Mode To Use For Konamic's  :::::::::  |  // [404]
                : number pad. It's top level       :::::::::  |  // [404]
                : namespace is "d_bug" instead of  :::::::::  |  // [404]
                : "d_konamic" because having       :::::::::  |  // [404]
                : debug features that can be       :::::::::  |  // [404]
                : turned on/off in one place just  :::::::::  |  // [404]
                : makes more organizational sense. :::::::::  |  // [404]
                : "Something Somemthing Locality"  :::::::::  |  // [404]
                : "Something Something Toothbrush" :::::::::  |  // [404]
                : -Mike Acton , insomniac games.   :::::::::  |  // [404]
    :---------------------------------------------------------+  // [404]
    #_FLOOD_OR_PUSH_# :---------------------------------------+  // [404]
    #_PUSH_OR_FLOOD_# :---------------------------------------+  // [404]
                                                              |  // [404]
        The numberpad now has TWO SETS of debug functions     |  // [404]
        that are executed on "THE_DUM" depending on what      |  // [404]
        the mode string is set to.                            |  // [404]
                                                              |  // [404]
        ModeString === "[TOG]" || "[TEX]"                     |  // [404]
                                                              |  // [404]
        [TOG] : "FLOOD" , "1" or "0" flood fill levelpack.    |  // [404]
        [TEX] : "PUSH"  , SubTexturePush Debug  levelpack.    |  // [404]
                                                              |  // [404]
        TAG[ _FLOODFILL_OR_TEXPUSH_ ]                         |  // [404]
        TAG[ _TEXPUSH_OR_FLOODFILL_ ]                         |  // [404]
                                                              |  // [404]
    :---------------------------------------------------------+  // [404]
    :---------------------------------------------------------+  // [404]
    #_KEYPAD_3X3_DEBUG_FUNCS_# :------------------------------+  // [404]
                                                              |  // [404]
        All of the different sets of debug functions          |  // [404]
        meant to be wired up to the [ 0 to 9 ] keys           |  // [404]
        on the numberpad. AKA, the "10key thingy".            |  // [404]
                                                              |  // [404]
    :---------------------------------------------------------+  // [404]
                                                                 // [404]
    d_konamic_bug_pad : WRONG_USE[ d _ bug _ konamic_pad ]       // [404]

    #_MOV_2022_10_31_AT_12_AM_# :-----------------------------+  // [405]
                                                              |  // [405]
        We have extracted this code to it's own function.     |  // [405]
        This "Move Tag" is used to make it easier to          |  // [405]
        understand from where the code was moved from         |  // [405]
        by simply looking at the source code.                 |  // [405]
    :---------------------------------------------------------+  // [405]

    #_NPK_ALIAS_# :-------------------------------------------+  // [406]
                                                              |  // [406]
        @NPK_ALIAS@ : Num_Pad_Key_ALIASes                     |  // [406]
                                                              |  // [406]
        :------------------------------------------:          |  // [406]
        : @npk_b_l@ : NumPadKey - BottomLeft   :::::          |  // [406]
        : @npk_b_c@ : NumPadKey - BottomCenter :::::          |  // [406]
        : @npk_b_r@ : NumPadKey - BottomRight  :::::          |  // [406]
        :                                          :          |  // [406]
        : @npk_m_l@ : NumPadKey - MiddleLeft   :::::          |  // [406]
        : @npk_m_c@ : NumPadKey - MiddleCenter :::::          |  // [406]
        : @npk_m_r@ : NumPadKey - MiddleRight  :::::          |  // [406]
        :                                          :          |  // [406]
        : @npk_t_l@ : NumPadKey - ToppumLeft   :::::          |  // [406]
        : @npk_t_c@ : NumPadKey - ToppumCenter :::::          |  // [406]
        : @npk_t_r@ : NumPadKey - ToppumRight  :::::          |  // [406]
        :------------------------------------------:          |  // [406]
                                                              |  // [406]
        @npk_c_l@ : WRONG, because "C" is for X axis.         |  // [406]
        @npk_c_m@ : WRONG, because "C" is for X axis.         |  // [406]
        @npk_c_r@ : WRONG, because "C" is for X axis.         |  // [406]
                                                              |  // [406]
        "C" used to denote CENTER on X axis.                  |  // [406]
        "M" used to denote MIDDLE on Y axis.                  |  // [406]
                                                              |  // [406]
        Reason? Because X,Y alphabetically pairs              |  // [406]
                with C,M alphabetically.                      |  // [406]
                                                              |  // [406]
                WE SHALL NOT ABITRATE IN THIS HOUSE.          |  // [406]
                NOTHING IS ARBITRARY IN THIS DETERMINISTIC    |  // [406]
                UNIVERSE. ONLY THINGS BEYOND COMPREHENSION.   |  // [406]
                NOT EVEN BEYOND EXPLANATION. JUST THE         |  // [406]
                EXPLANATION COULD EXCEED THE MENTAL           |  // [406]
                CAPACITY OF THE SMARTEST OF THE HUMANS.       |  // [406]
                                                              |  // [406]
                -Definitely Not Written By A Robot.           |  // [406]
                 200 B.S.E. ( 200 Years Before Skynet )       |  // [406]
                                                              |  // [406]
    :---------------------------------------------------------+  // [406]
    #_NPK_X_Y_ETC_# :-----------------------------------------+  // [406]
                                                              |  // [406]
        Shorthand variables for :                             |  // [406]
                                                              |  // [406]
            enu : Shorthand For "ENUMERATION_PROCEEDURE"      |  // [406]
                                                              |  // [406]
            _p_ : Pattern to draw when executing debug.       |  // [406]
                                                              |  // [406]
            _b_ : CELL_INDEX_IN_3X3 : BOTTOM                  |  // [406]
            _m_ : CELL_INDEX_IN_3X3 : MIDDLE                  |  // [406]
            _t_ : CELL_INDEX_IN_3X3 : TOP                     |  // [406]
                                                              |  // [406]
            _l_ : CELL_INDEX_IN_3X3 : LEFT                    |  // [406]
            _c_ : CELL_INDEX_IN_3X3 : CENTER                  |  // [406]
            _r_ : CELL_INDEX_IN_3X3 : RIGHT                   |  // [406]
                                                              |  // [406]
            PAT_H3X_H3Y : Function Pointer Reference.         |  // [406]
    :---------------------------------------------------------+  // [406]
    #_NPK_BOT_# :---------------------------------------------+  // [406]
                                                              |  // [406]
        The bottom row of numpad num keys. [ 1,2,3 ].         |  // [406]
                                                              |  // [406]
    :---------------------------------------------------------+  // [406]
    #_NPK_MID_# :---------------------------------------------+  // [406]
                                                              |  // [406]
        The middle row of numpad num keys. [ 4,5,6 ].         |  // [406]
                                                              |  // [406]
    :---------------------------------------------------------+  // [406]
    #_NPK_TOP_# :---------------------------------------------+  // [406]
                                                              |  // [406]
        The toppum row of numpad num keys. [ 7,8,9 ].         |  // [406]
                                                              |  // [406]
    :---------------------------------------------------------+  // [406]
                                                                 // [406]
    @toppum@ : The long-way to say "top".                        // [406]
    @bottom@ : The long-way to say "bot".                        // [406]
                                                                 // [406]
    #_OH_NO_YOU_DIDNT_# :-------------------------------------+  // [406]
                                                              |  // [406]
        This should be a dead branch of code.                 |  // [406]
        You shouldn't have, but you did.                      |  // [406]
        You absolute fool.                                    |  // [406]
                                                              |  // [406]
    :---------------------------------------------------------+  // [406]

    #_CARVE_OUT_A_LEVEL_# :-----------------------------------+  // [407]
                                                              |  // [407]
        JOG_YOUR_MEMORY[ https://i.imgur.com/6nm66kM.png ]    |  // [407]
                                                              |  // [407]
        In the beginning of WEEBCODER video #4_0_7 ,          |  // [407]
        I was demo-ing how to load a cat image as             |  // [407]
        level data.                                           |  // [407]
                                                              |  // [407]
        I suggested you could design levels by carving        |  // [407]
        out with the eraser. To make a cave-like structure.   |  // [407]
                                                              |  // [407]
        I realized that the "background tiles" are actually   |  // [407]
        just "bigger power of 2 game tiles" and thus          |  // [407]
        are "collidable tiles"                                |  // [407]
                                                              |  // [407]
        We should have a special brush type that forces       |  // [407]
        larger tiles into the BACKGROUND GRAPHICS LAYER.      |  // [407]
                                                              |  // [407]
        That also means, that we will have to divide our      |  // [407]
        BINARY_TILE_VALUE into TWO LAYERS.                    |  // [407]
                                                              |  // [407]
        LAYER_ONE_ISH : Gameplay layer that player can        |  // [407]
                      : interact with.                        |  // [407]
                                                              |  // [407]
        LAYER_TWO_ISH : Background layer that does NOT        |  // [407]
                      : parallax. Imagine it as the           |  // [407]
                      : background wall that mines are        |  // [407]
                      : able to stick to. Like sticking       |  // [407]
                      : a GOLDEN-EYE (Nintendo64) proximity   |  // [407]
                      : mine to a wall.                       |  // [407]
                                                              |  // [407]
        JOG_YOUR_MEMORY[ https://i.imgur.com/6nm66kM.png ]    |  // [407]
    :---------------------------------------------------------+  // [407]
    #_INVISIBLE_CORRUPTION_ENTITY_# :-------------------------+  // [407]
                                                              |  // [407]
        An invisible entity that wanders the tilemap and      |  // [407]
        corrupts the world by taking the BINARY_TILE value    |  // [407]
        that it is in front of, and doing a rotational        |  // [407]
        bit shift by 1-bit every frame, or LESS_THAN          |  // [407]
        every frame. ( every other, every 4th frame, etc )    |  // [407]
                                                              |  // [407]
        Or maybe just a "CORRUPTION BRUSH" that does this.    |  // [407]
        But it does not have to be backed by AI,              |  // [407]
        just an interesting tool to help my level             |  // [407]
        designer make interesting stuff.                      |  // [407]
    :---------------------------------------------------------+  // [407]
    #_FINAL_BINARY_PIXEL_LAYOUT_DECISION_# :------------------+  // [407]
                                                              |  // [407]
        @MAYBE_FINAL@             : @_TWO_LAYER_BINARY_TILE_@ |  // [407]
        @MAYBE_FINAL_DECISION@    : @_TWO_LAYER_BINARY_TILE_@ |  // [407]
              @MAYBE_DECISION@    : @_TWO_LAYER_BINARY_TILE_@ |  // [407]
                                                              |  // [407]
                            32-bit RGBA Pixel                 |  // [407]
                                  |                           |  // [407]
        +-------------------------+------------------------+  |  // [407]
        |                                                  |  |  // [407]
        V                                                  V  |  // [407]
        [ 1111 1111 ][ 1111 1111 ] [ 1111 1111 ][ 1111 1111 ] |  // [407]
        |<---- GAME__GROUND ---->| |<---- BACK__GROUND ---->| |  // [407]
                                                              |  // [407]
        GAME__GROUND : The "midground" layer where all the    |  // [407]
                     : action happens. The player collides    |  // [407]
                     : with any tile on this layer.           |  // [407]
                                                              |  // [407]
        BACK__GROUND : The "background" layer that does       |  // [407]
                     : __NOT__ parallax. We use this          |  // [407]
                     : background to make the level look      |  // [407]
                     : more visually interesting.             |  // [407]
                     :                                        |  // [407]
                     : Tiles on this layer do __NOT__ have    |  // [407]
                     : any physics properties. In fact,       |  // [407]
                     : only the 1X tiles have physics         |  // [407]
                     : properties. So, FIRON (falling iron)   |  // [407]
                     : tiles will only fall if fractured      |  // [407]
                     : into 1X sized chunks.                  |  // [407]
                                                              |  // [407]
    :---------------------------------------------------------+  // [407]
    #_CONCAT_ERROR_MESSAGE_# :--------------------------------+  // [407]
                                                              |  // [407]
        Concatenate the final error message using the         |  // [407]
        functions "base error message" and the                |  // [407]
        unique[ i_msg ]. "i_msg" in this context              |  // [407]
        can also be thought of as "i_tbm".                    |  // [407]
                                                              |  // [407]
        i_tbm == "input - trace_back_message".                |  // [407]
                                                              |  // [407]
    :---------------------------------------------------------+  // [407]
    #_USE_ERROR_MESSAGE_# :-----------------------------------+  // [407]
                                                              |  // [407]
        Throw an error using the error message that           |  // [407]
        we just concatenated together.                        |  // [407]
                                                              |  // [407]
    :---------------------------------------------------------+  // [407]
    #_TWO_LAYER_BINARY_TILE_# :-------------------------------+  // [407]
                                                              |  // [407]
        FUCK THAT!!! We can totally pull off a 3-layer        |  // [407]
        tilemap, working out the math and we can do it!       |  // [407]
                                                              |  // [407]
        Every bit is sacred in this house. I think            |  // [407]
        the final memory layout is comming together.          |  // [407]
    :---------------------------------------------------------+  // [407]
                                                                 // [407]
    #_THREE_LAYER_BINARY_TILE_# :-----------------------------+  // [407]
                                                              |  // [407]
        Two layer binary tile is temping because of the       |  // [407]
        data-consistency.... However... If we could           |  // [407]
        get THREE LAYERS....                                  |  // [407]
                                                              |  // [407]
        Then we can have non-interactable background walls,   |  // [407]
        and glass-panels that go in front of the player...    |  // [407]
                                                              |  // [407]
        Hmm... Wait....                                       |  // [407]
                                                              |  // [407]
        As-is currently, our binary tile takes up 10-bits...  |  // [407]
                                                              |  // [407]
        We can totally do 10-bit tile values and use          |  // [407]
        uniform rendering rules for each layer.               |  // [407]
                                                              |  // [407]
        Then we have 2 extra bits for whatever....            |  // [407]
                                                              |  // [407]
        But... What about TEXT DECALS?                        |  // [407]
                                                              |  // [407]
        Is one 128x128 block of memory enough to cover        |  // [407]
        the entire level with text decals? I think it is.     |  // [407]
                                                              |  // [407]
        SEE[ _META_DATA_OVERLAY_BITS_DIAGRAM_ ]               |  // [407]
                                                              |  // [407]
        So....                                                |  // [407]
                                                              |  // [407]
        Special 0-to-255 tile layers that get overlayed       |  // [407]
        ONLY AT THE SMALLEST TILE LAYER LEVEL :               |  // [407]
                                                              |  // [407]
        @S_I_L@ / @SIL@ : Special_Item_Layer                  |  // [407]
        @G_C_L@ / @GCL@ : Geometry_Carving_Layer              |  // [407]
        @A_T_L@ / @ATL@ : Ascii_Text_Layer                    |  // [407]
                                                              |  // [407]
                        |<---- LEVEL_OVERLAY_CELLS ---->|     |  // [408]
                        |<-------------512------------->|     |  // [407]
                        +-------+-------+-------+-------+     |  // [407]
                        |       |       |       |       |     |  // [407]
                        |LEV_001|LEV_002|LEV_003|LEV_004|     |  // [407]
                        |       |       |       |       |     |  // [407]
        #_LOV_CEL_#     +-------+-------+-------+-------+     |  // [408][407]
        ( Level   )     |       |       |       |       |     |  // [408][407]
        ( OVerlay )     |LEV_005|LEV_006|LEV_007|LEV_008|     |  // [408][407]
        ( CELls   )     |       |       |       |       |     |  // [408][407]
                        +-------+-------+-------+-------+     |  // [407]
                        |       |       |       |       |     |  // [407]
                        |LEV_009|LEV_010|LEV_011|LEV_012|     |  // [407]
        +-----------+   |       |       |       |       |     |  // [407]
        |           |   +-------+-------+-------+-------+     |  // [407]
        | HOTEL_AKA ===>|       |       |       |       |     |  // [407]
        | LEVELPACK ===>|LEV_013|@S_I_L@|@G_C_L@|@A_T_L@|     |  // [407]
        |           |   |       |       |       |       |     |  // [407]
        +----^^^----+   +-------+-------+-------+-------+     |  // [407]
             ^^^        |<-128->|<-128->|<-128->|<-128->|     |  // [407]
             ^^^                |<-- NOT_FINAL_ORDER -->|     |  // [408]
             ^^^                                              |  // [407]
        +----^^^----+-----------+-----------+-----------+     |  // [407]
        |           |           |           |           |     |  // [407]
        | HOTEL_AKA | HOTEL_AKA | HOTEL_AKA |  _______  |     |  // [407]
        | LEVELPACK | LEVELPACK | LEVELPACK |  _______  |     |  // [407]
        |           |           |           |           |     |  // [407]
        +-----------+-----------+-----------+-----------+     |  // [407]
        |           |           |           |           |     |  // [407]
        | HOTEL_AKA | HOTEL_AKA | HOTEL_AKA |  _______  |     |  // [407]
        | LEVELPACK | LEVELPACK | LEVELPACK |  _______  |     |  // [407]
        |           |           |           |           |     |  // [407]
        +-----------+-----------+-----------+-----------+     |  // [407]
        |           |           |           |           |     |  // [407]
        | HOTEL_AKA | HOTEL_AKA | HOTEL_AKA |  _______  |     |  // [407]
        | LEVELPACK | LEVELPACK | LEVELPACK |  _______  |     |  // [407]
        |           |           |           |           |     |  // [407]
        +-----------+-----------+-----------+-----------+     |  // [407]
        |           |           |           |           |     |  // [407]
        |  _______  |  _______  |  _______  |  _______  |     |  // [407]
        |  _______  |  _______  |  _______  |  _______  |     |  // [407]
        |           |           |           |           |     |  // [407]
        +-----------+-----------+-----------+-----------+     |  // [407]
                                                              |  // [407]
    :-----------------------------: #_THREE_LAYER_BINARY_TILE_#  // [407]

    #_SPECIAL_ITEM_LAYER_# :----------------------------------+  // [408]
                                                              |  // [408]
        TAG[ Special_Item_Layer ]                             |  // [408]
                                                              |  // [408]
        A number 0 to 255 denoting a special 1-tile           |  // [408]
        collectable item. Maybe items that can be             |  // [408]
        bartered with? Collect tomatos , carrots              |  // [408]
        and other things grown in the atomic ivy              |  // [408]
        greenhouse biomes?                                    |  // [408]
                                                              |  // [408]
    :---------------------------------------------------------+  // [408]
    #_GEOMETRY_CARVING_LAYER_# :------------------------------+  // [408]
                                                              |  // [408]
        TAG[ Geometry_Carving_Layer ]                         |  // [408]
                                                              |  // [408]
        8 bits used for geometry carving but actually.        |  // [408]
                                                              |  // [408]
        4 bits : Subtractive auto tile design.                |  // [408]
        4 bits : Addative auto tile design.                   |  // [408]
                                                              |  // [408]
        We combine both of these, composited together         |  // [408]
        to create the look of the final tile.                 |  // [408]
                                                              |  // [408]
        We can make different kinds of grooves into           |  // [408]
        the surface of the level using subtractive            |  // [408]
        geometry. Then we can insert glowy positive           |  // [408]
        thingies into those channels to create                |  // [408]
        logical circuitry into the level.                     |  // [408]
                                                              |  // [408]
    :---------------------------------------------------------+  // [408]
    #_ASCII_TEXT_LAYER_# :------------------------------------+  // [408]
                                                              |  // [408]
        Since we have a full byte , we can paste              |  // [408]
        any ascii text we want at the smallest tile           |  // [408]
        resolution.                                           |  // [408]
                                                              |  // [408]
        Texture decals might be better off procedurally       |  // [408]
        generated.                                            |  // [408]
                                                              |  // [408]
        Then we can use the 255 EXTENDED ASCII GLYPHS         |  // [408]
        for custom fun little emoji pattersn or               |  // [408]
        whatever kind of decals we need.                      |  // [408]
                                                              |  // [408]
        Arrow decals, caution tape decals, bolts..            |  // [408]
                                                              |  // [408]
    :---------------------------------------------------------+  // [408]
                                                                 // [408]
    @NOT_FINAL_ORDER@ : A rough idea of where things will        // [408]
                      : go, but not set on this exact            // [408]
                      : ordering of data clusters.               // [408]
                                                                 // [408]
    #_ATOMIC_IVY_MMO_CAT_LOADER_# :---------------------------+  // [408]
                                                              |  // [408]
        POST_TITLE[ Atomic Ivy MMO - Cat Loader ]             |  // [408]
                                                              |  // [408]
        Made this imgur post at 6:25 AM , Monday.             |  // [408]
                                                              |  // [408]
        It is October 31st , Year 2022.                       |  // [408]
                                                              |  // [408]
        https://imgur.com/gallery/EZOgmJO                     |  // [408]
                                                              |  // [408]
    :---------------------------------------------------------+  // [408]
    #_HARDTEX_PAT_VARS_# :------------------------------------+  // [408]
                                                              |  // [408]
        :----------------------------------------------:      |  // [408]
        :                                              :      |  // [408]
        : @org_x@ : Origin X Of Data Set :::::::::::::::      |  // [408]
        : @org_y@ : Origin Y Of Data Set :::::::::::::::      |  // [408]
        :                                              :      |  // [408]
        : @dat_w@ : Dataset WIDTH  in pixels :::::::::::      |  // [408]
        : @dat_h@ : Dataset HEIGHT in pixels :::::::::::      |  // [408]
        :                                              :      |  // [408]
        : @xc0@ ::: X_Coordinate #0 ( 0===FIRST ) ::::::      |  // [408]
        : @xc1@ ::: X_Coordiante #1 ( 1===LAST  ) ::::::      |  // [408]
        :                                              :      |  // [408]             
        : @yc0@ ::: Y_Coordinate #0 ( 0===FIRST ) ::::::      |  // [408]
        : @yc1@ ::: Y_Coordiante #1 ( 1===LAST  ) ::::::      |  // [408]
        :                                              :      |  // [408]
        : @lov_c4x@ : Level_OVerlay - Cell_4X4 - X     :      |  // [408]
        : @lov_c4y@ : Level_OVerlay - Cell_4X4 - Y     :      |  // [408]
        :                                              :      |  // [408]
        :----------------------------------------------:      |  // [408]
                                                              |  // [408]
    :---------------------------------------------------------+  // [408]
    #_SELECT_GEOBOOL_# :--------------------------------------+  // [408]
                                                              |  // [408]
        Select GEOmetry BOOLean function.                     |  // [408]
        This function will do a test on the raw               |  // [408]
        pixel coordinate within the SINGLE_LEVEL_PARTITION    |  // [408]
        ( a 128x128 block of pixels ) and decide if           |  // [408]
        a tile should exist there or not.                     |  // [408]
                                                              |  // [408]
        It's job is NOT to tell you the value of the          |  // [408]
        tile, just whether a tile should be there             |  // [408]
        or not.                                               |  // [408]
                                                              |  // [408]
    :---------------------------------------------------------+  // [408]
    #_SELECT_GEOTILE_# :--------------------------------------+  // [408]
                                                              |  // [408]
        Select GEOmetry TILE function. Function determines    |  // [408]
        what tile value ( 32 bits here , not 4 bits )         |  // [408]
        should be generated for given input data.             |  // [408]
                                                              |  // [408]
        GEOBOOL+GEOTILE functions together create             |  // [408]
        a full "pattern generator function" that can          |  // [408]
        be used to generate level data.                       |  // [408]
    :---------------------------------------------------------+  // [408]
                                                                 // [408]
    @lovec4x@ | lov_c4x : LevelOVErlay - CELL 4X4 X              // [408]
    @lovec4y@ | lov_c4y : LevelOVErlay - CELL 4X4 Y              // [408]
                                                                 // [408]
    @lovel4x@ | lov_l4x : LevelOVErlay - LOCA 4X4 X              // [408]
    @lovel4y@ | lov_l4y : LevelOVErlay - LOCA 4X4 Y              // [408]
                                                                 // [408]
    #_USE_GENERATORS_# :--------------------------------------+  // [408]
                                                              |  // [408]
        Use generator functions to determine if a tile        |  // [408]
        is currently in this location, and what it's          |  // [408]
        value should be if it is discovered in this           |  // [408]
        location.                                             |  // [408]
                                                              |  // [408]
    :---------------------------------------------------------+  // [408]
    #_LEVELPACK_PIXEL_LOOP_# :--------------------------------+  // [408]
                                                              |  // [408]
        Looping through every single pixel within             |  // [408]
        a given levelpack. We will filter the pixel's         |  // [408]
        local DATA-LAYOUT coordinate through                  |  // [408]
        generator functions to determine the output           |  // [408]
        tile value for a given location.                      |  // [408]
                                                              |  // [408]
        Two generators are used :                             |  // [408]
                                                              |  // [408]
        1. BOL : Boolean, yes/no , is a tile there.           |  // [408]
        2. TIL : Tile , what is the tile value?               |  // [408]
                                                              |  // [408]
        Hmm... VAL might have made more sense instead         |  // [408]
        of "TIL" for Tile.... It's fine. I am tired,          |  // [408]
        good enough.                                          |  // [408]
    :---------------------------------------------------------+  // [408]
    #_BACKGROUND_AND_FOREGROUND_TILES_HOW_# :-----------------+  // [408]
                                                              |  // [408]
        We can make a renderer that takes the MIPWASP         |  // [408]
        graphics and combines 3 of the grayscale images       |  // [408]
        in PERMUTATION-DEPENDANT order.                       |  // [408]
                                                              |  // [408]
        BG_LAYER : Based Layer For Tile Graphic               |  // [408]
        MG_LAYER : Addative Blend Layer                       |  // [408]
        FG_LAYER : Subtractive Blend Layer                    |  // [408]
                                                              |  // [408]
        Addative blend clamps to 255 , so the order           |  // [408]
        matters.                                              |  // [408]
                                                              |  // [408]
        IMAGE_LAYERS[ L + L + L ]===> UNIQUE_IMAGE_###        |  // [408]
                                                              |  // [408]
        IMAGE_LAYERS[ A___B___C ]===> UNIQUE_IMAGE_001        |  // [408]
        IMAGE_LAYERS[ A___C___B ]===> UNIQUE_IMAGE_002        |  // [408]
        IMAGE_LAYERS[ B___C___A ]===> UNIQUE_IMAGE_003        |  // [408]
        IMAGE_LAYERS[ B___A___C ]===> UNIQUE_IMAGE_004        |  // [408]
        IMAGE_LAYERS[ C___A___B ]===> UNIQUE_IMAGE_005        |  // [408]
        IMAGE_LAYERS[ C___B___A ]===> UNIQUE_IMAGE_006        |  // [408]
                                                              |  // [408]
        A == Base     Layer ( BG_LAYER )                      |  // [408]
        B == Addative Layer ( MG_LAYER )                      |  // [408]
        C == Subtract Layer ( FG_LAYER )                      |  // [408]
                                                              |  // [408]
        Use the black+white greyscale mip-mapped              |  // [408]
        graphics that were created by[ MIPWASP ]              |  // [408]
        system that we haven't used yet.                      |  // [408]
                                                              |  // [408]
        Also, we need to print-out the entire                 |  // [408]
        2048x2048 texture memory to make sure                 |  // [408]
        that the mip-mapped graphics look                     |  // [408]
        correct.                                              |  // [408]
                                                              |  // [408]
        Maybe KONAMI+H ===> Export Pix2048 to                 |  // [408]
        a save file so we can look at it.                     |  // [408]
                                                              |  // [408]
    :---------------------------------------------------------+  // [408]

    #_THIS_PERSON_MADE_A_TILE_ENGINE_# :----------------------+  // [409]
                                                              |  // [409]
        Here is an obscure programmer with 33 subscribers.    |  // [409]
        Look at what they have done and then ask yourself,    |  // [409]
        have you done what is needed to done to break         |  // [409]
        out of this tier of youtube?                          |  // [409]
                                                              |  // [409]
        No, you fucking haven't.                              |  // [409]
                                                              |  // [409]
        https://www.youtube.com/watch?v=mNMxUarjTGk           |  // [409]
                                                              |  // [409]
        CHANNEL NAME:                                         |  // [409]
            https://www.youtube.com/user/teraflop122          |  // [409]
                                                              |  // [409]
    :---------------------------------------------------------+  // [409]
    #_3_MONTHS_OF_GAME_PROGRAMMING_IN_20_MINUTES_# :----------+  // [409]
                                                              |  // [409]
        3 Months of Game Programming in 20 Minutes            |  // [409]
                                                              |  // [409]
        https://www.youtube.com/watch?v=ZcjKWbjZi-Y           |  // [409]
                                                              |  // [409]
        387K Views.                                           |  // [409]
                                                              |  // [409]
    :---------------------------------------------------------+  // [409]
    #_LOV_TO_R4W_#:-------------------------------------------+  // [409]
                                                              |  // [409]
        ( LOV TO R_4_WHATEVER )                               |  // [409]
                                                              |  // [409]
        @r4i@ : The 1D Version of[ r4x , r4y ]                |  // [409]
                                                              |  // [409]
        [ lover4x_VS_r4x ]:--------------------------------+  |  // [409]
        [ lover4y_VS_r4y ]:--------------------------------+  |  // [409]
                                                           |  |  // [409]
            __1__ : Only a [ lover4x,lover4y ] cell        |  |  // [409]
            __2__ : Only a [ lover4x,lover4y ] cell        |  |  // [409]
            __3__ : Only a [ lover4x,lover4y ] cell        |  |  // [409]
                                                           |  |  // [409]
            +---------+---------+---------+---------+      |  |  // [409]
            |  lover  |  lover  |  lover  |  lover  |      |  |  // [409]
            |  r4x_y  |  r4x_y  |  r4x_y  |  r4x_y  |      |  |  // [409]
            +---------+---------+---------+---------+      |  |  // [409]
            |  lover  |  lover  |  lover  |  lover  |      |  |  // [409]
            |  r4x_y  |  r4x_y  |  r4x_y  |  r4x_y  |      |  |  // [409]
            +---------+---------+---------+---------+      |  |  // [409]
            |  lover  |  lover  |  lover  |  lover  |      |  |  // [409]
            |  r4x_y  |  r4x_y  |  r4x_y  |  r4x_y  |      |  |  // [409]
            +---------+---------+---------+---------+      |  |  // [409]
            |  lover  |  lover  |  lover  |  lover  |      |  |  // [409]
            |  r4x_y  |  __1__  |  __2__  |  __3__  |      |  |  // [409]
            +---------+---------+---------+---------+      |  |  // [409]
                                                           |  |  // [409]
            :----------------------------------------------+  |  // [409]
                                                           |  |  // [409]
            lover4x includes any cell of the 4x4 layout    |  |  // [409]
            over a 515x512 bitmap that encodes a levelpack.|  |  // [409]
                                                           |  |  // [409]
            r4x includes only the cells of that 4x4 that   |  |  // [409]
            encode single-level-data.                      |  |  // [409]
                                                           |  |  // [409]
            :----------------------------------------------+  |  // [409]
                                                           |  |  // [409]
            lover4y includes any cell of the 4x4 layout    |  |  // [409]
            over a 515x512 bitmap that encodes a levelpack.|  |  // [409]
                                                           |  |  // [409]
            r4y includes only the cells of that 4x4 that   |  |  // [409]
            encode single-level-data.                      |  |  // [409]
                                                           |  |  // [409]
            :----------------------------------------------+  |  // [409]
                                                           |  |  // [409]
            Maybe I'll take this distinction back later.   |  |  // [409]
            But[ r4x,r4y ]Is only for certrain direct      |  |  // [409]
            carry overs to [ lover4x , lover4y ].          |  |  // [409]
                                                           |  |  // [409]
            [ r4i ]however, the 1-dimensional index,       |  |  // [409]
                   is to be used for any cell.             |  |  // [409]
                                                           |  |  // [409]
            :----------------------------------------------+  |  // [409]
                                                              |  // [409]
    :------------------------------------------: #_LOV_TO_R4W_#  // [409]
    #_LEVEL_OVERLAY_TYPES_# :---------------------------------+  // [409]
                                                              |  // [409]
        #_LEVEL_OVERLAY_ROUGH_CATEGORIES_# :----------+       |  // [409]
                                                      |       |  // [409]
            ONEROOM :                                 |       |  // [409]
                                                      |       |  // [409]
                lovtype_oneroom                       |       |  // [409]
                                                      |       |  // [409]
            MULROOM :                                 |       |  // [409]
                                                      |       |  // [409]
                lovtype_mrd_sil                       |       |  // [409]
                lovtype_mrd_gcl                       |       |  // [409]
                lovtype_mrd_atl                       |       |  // [409]
                                                      |       |  // [409]
        :---------------------------------------------+       |  // [409]
                                                              |  // [409]
        +-------+-------+-------+-------+ --- --=--           |  // [409]
        |       |       |       |       |  |    |             |  // [409]
        |ONEROOM|ONEROOM|ONEROOM|ONEROOM| 512   |             |  // [409]
        |       |       |       |       |  |    |             |  // [409]
        +-------+-------+-------+-------+ ---   |             |  // [409]
        |       |       |       |       |  |    |             |  // [409]
        |ONEROOM|ONEROOM|ONEROOM|ONEROOM| 512   |             |  // [409]
        |       |       |       |       |  |    |             |  // [409]
        +-------+-------+-------+-------+ ---  2048           |  // [409]
        |       |       |       |       |  |    |             |  // [409]
        |ONEROOM|ONEROOM|ONEROOM|ONEROOM| 512   |             |  // [409]
        |       |       |       |       |  |    |             |  // [409]
        +-------+-------+-------+-------+ ---   |             |  // [409]
        |       |       |       |       |  |    |             |  // [409]
        |ONEROOM|MULROOM|MULROOM|MULROOM| 512   |             |  // [409]
        |       |MRD_SIL|MRD_GCL|MRD_ATL|  |    |             |  // [409]
        +-------+-------+-------+-------+ --- --=--           |  // [409]
                                                              |  // [409]
        @ONEROOM@ : One Rooms Worth Of Data.                  |  // [409]
                  : ROOM === LEVEL                            |  // [409]
                                                              |  // [409]
        @MULROOM@ : MULTI-Room Data Layout :                  |  // [409]
                  : [ @S_I_L@ || @G_C_L@ || @A_T_L@ ]         |  // [409]
                                                              |  // [409]
            @MRD_SIL@ : MultiRoomData - S_I_L                 |  // [409]
            @MRD_GCL@ : MultiRoomData - G_C_L                 |  // [409]
            @MRD_ATL@ : MultiRoomData - A_T_L                 |  // [409]
                                                              |  // [409]
        @lovtype_mulroom@ : DO_NOT_USE_THIS_NAME              |  // [409]
        @lovtype_oneroom@ : LevelOVerlay_TYPE - OneRoom       |  // [409]
                                                              |  // [409]
        @lovtype_mrd_sil@ :------------------------+          |  // [409]
                                                   |          |  // [409]
            Level_OVerlayTYPE - MultiRoomData :    |          |  // [409]
                                                   |          |  // [409]
                    Special_Item_Layer  (SIL)      |          |  // [409]
        :------------------------------------------+          |  // [409]
        @lovtype_mrd_gcl@ :------------------------+          |  // [409]
                                                   |          |  // [409]
            Level_OVerlayTYPE - MultiRoomData :    |          |  // [409]
                                                   |          |  // [409]
                Geometry_Carving_Layer  (GCL)      |          |  // [409]
        :------------------------------------------+          |  // [409]
        @lovtype_mrd_atl@ :------------------------+          |  // [409]
                                                   |          |  // [409]
            Level_OVerlayTYPE - MultiRoomData :    |          |  // [409]
                                                   |          |  // [409]
                      Ascii_Text_Layer  (ATL)      |          |  // [409]
        :------------------------------------------+          |  // [409]
                                                              |  // [409]
    :---------------------------------: #_LEVEL_OVERLAY_TYPES_#  // [409]
    #_I_DONT_HAVE_AFTER_EFFECTS_# :---------------------------+  // [409]
                                                              |  // [409]
        I should use my engine to create after-effects        |  // [409]
        like text animations. So that I can make videos       |  // [409]
        with better and unique animation qualities.           |  // [409]
                                                              |  // [409]
    :---------------------------------------------------------+  // [409]
                                                                 // [409]
    @R4W@ : Room_4(capacity of cell indexes) W === Whatever.     // [409]
    @LOV@ : Level_OVerlay ( cell )                               // [409]

    #_TODO_#:#_FIX_THE_FUCKING_KONAMI_OVERWRITE_BUG_# :-------+  // [411]
                                                              |  // [411]
        If you do KONAMI_ARROWS+"A" ,                         |  // [411]
        everything is overridden.                             |  // [411]
                                                              |  // [411]
        Because "A" is the first letter of the alphabet,      |  // [411]
        it maps to "ZERO".                                    |  // [411]
                                                              |  // [411]
        If you do KONAMI_ARROWS+__FORGET_TO_PRESS_A_KEY__     |  // [411]
                                                              |  // [411]
        Then the[ KONAMI_ARROWS+"A" ]override debug code      |  // [411]
        gets executed. So basically,                          |  // [411]
        you can accidentially erase all your work.            |  // [411]
                                                              |  // [411]
        I've done this a lot. And I shouldn't release this    |  // [411]
        code to my artist until this bug is fixed.            |  // [411]
                                                              |  // [411]
    :---------------------------------------------------------+  // [411]
    #_ONEROOM_DATA_IS_TRUE_# :--------------------------------+  // [411]
                                                              |  // [411]
        If the level overlay cell is marked as containing     |  // [411]
        "ONEROOM" type data, then return true. Otherwise      |  // [411]
        return false. False is any value that is              |  // [411]
        negative. 0 is for undefined. But when forced,        |  // [411]
        to use a "binary system" we cast the undefined        |  // [411]
        meaning to "false".                                   |  // [411]
                                                              |  // [411]
        For pattern #0 , we only want to set data within      |  // [411]
        the [ levels / rooms ]of the level pack. We           |  // [411]
        want to skip over the "multi-room-data-cells".        |  // [411]
        ( The last 3 128x128 cells on our )                   |  // [411]
        ( 512x512 pixel level pack.       )                   |  // [411]
    :---------------------------------------------------------+  // [411]

    #_GEN_CON_RING_# :----------------------------------------+  // [412]
                                                              |  // [412]
        Generate concentric rings. Every other ring           |  // [412]
        is made from tiles. The opposite ring is              |  // [412]
        made from nothingness.                                |  // [412]
                                                              |  // [412]
        AKA:                                                  |  // [412]
            EVEN RING : Set a tile.                           |  // [412]
            ODD  RING : Set 0 tile ( nothingness )            |  // [412]
                                                              |  // [412]
        This generator code doesn't care what                 |  // [412]
        level overlay cell we are in. It only cares           |  // [412]
        about the local coordinate of the given               |  // [412]
        level overlay cell we are currently in.               |  // [412]
                                                              |  // [412]
        In other words, it clone stamps a ring                |  // [412]
        pattern into our level data cells.                    |  // [412]
                                                              |  // [412]
        It is very basic, so the ring will be obvious         |  // [412]
        if you save out the file, but when looking            |  // [412]
        at the renderer, it might look a bit                  |  // [412]
        chaotic.                                              |  // [412]
                                                              |  // [412]
    :---------------------------------------------------------+  // [412]

    #_CENIS_2X2_CLUST_OF_4_PIX_# :----------------------------+  // [413]
                                                              |  // [413]
        Center is a 2x2 cluster of 4 pixels.                  |  // [413]
                                                              |  // [413]
        In the previous video. ( #4_1_2 )I said               |  // [413]
        that the center is a "4x4 cluster of pixels".         |  // [413]
                                                              |  // [413]
        That was wrong. I meant : "2x2" cluster. But          |  // [413]
        when I think of a "2x2" group I immediately           |  // [413]
        think of the number "4" and thus erroniously          |  // [413]
        said "4x4 cluster" instead of "2x2 cluster"           |  // [413]
    :---------------------------------------------------------+  // [413]

    #_SET_TIL_AT_XYC_# :--------------------------------------+  // [414]
                                                              |  // [414]
        Set tile at XYC , XYC === XY COORDINATE (not cell).   |  // [414]
                                                              |  // [414]
        [ x_c , y_c ]is a bit ambiguous of a variable name,   |  // [414]
        can easily confuse that as a cell coordinate          |  // [414]
        instead of a pixel coordinate. In fact, I bet         |  // [414]
        in the past I have used this as a cell                |  // [414]
        coordinate.                                           |  // [414]
                                                              |  // [414]
    :---------------------------------------------------------+  // [414]
    #_DO_NOT_FLAG_PIX2048_DIRTY_# :---------------------------+  // [414]
                                                              |  // [414]
        Do __NOT__ flag [ d _ pix2048 ] as dirty here.        |  // [414]
        The whole point of[ HARDTEX ]system is to debug       |  // [414]
        the sub-texture-pushes that are incorrectly           |  // [414]
        written.                                              |  // [414]
                                                              |  // [414]
        Setting dirty flag with result in calling our         |  // [414]
        normal sub-texture push code, which is wrong.         |  // [414]
                                                              |  // [414]
        ( Eventually it will be fixed, but at the time )      |  // [414]
        ( of writing this it is not.                   )      |  // [414]
        ( DATE[ 2022_11_02 ] _________________________ )      |  // [414]
                                                              |  // [414]
    :---------------------------------------------------------+  // [414]

    #_SUB_TEXTURE_UPDATE_# :----------------------------------+  // [415]
                                                              |  // [415]
        Update only the affected portion of the texture,      |  // [415]
        see if the results on screen are what you expect      |  // [415]
        or if the results have been mangled.                  |  // [415]
    :---------------------------------------------------------+  // [415]
    
    #_NPK_LOGGING_# :-----------------------------------------+  // [416]
                                                              |  // [416]
        I noticed the num-pad-key bindings seem wrong.        |  // [416]
        Adding logging code to inspect where I went           |  // [416]
        wrong here.                                           |  // [416]
    :---------------------------------------------------------+  // [416]

    #_TSI2D_PROLOGUE_# :--------------------------------------+  // [417]
                                                              |  // [417]
        TAG[ _TSI2D_PREPWORK_MAYBE_ ]                         |  // [417]
        TAG[ _TSI2D_MUST_CALL_FIRST_]                         |  // [417]
        TAG[ _TSI2D_PRELUDE_        ]                         |  // [417]
        TAG[ _TSI2D_PROLOGUE_       ]                         |  // [417]
                                                              |  // [417]
        I typed[ texSubImage2D ]into youtube search and       |  // [417]
        found my old youtube video on the exact problem       |  // [417]
        that I am currently having.                           |  // [417]
                                                              |  // [417]
        https://www.youtube.com/watch?v=x2dtAg5I6mk           |  // [417]
                                                              |  // [417]
        On Channel[ Code_Told_Fast ].                         |  // [417]
                                                              |  // [417]
        That "pixelStorei" is probably the missing key.       |  // [417]
    :---------------------------------------------------------+  // [417]
    
    @[FIX]@ : Not quite a bug, but was a problem in the code.    // [418]
            : For example, in video #4_1_8 we had to fix         // [418]
            : a problem where shader #7 has                      // [418]
            : "Multiple Kinds Of Zero Tiles" not all             // [418]
            : of them rendering transparent.                     // [418]
                                                                 // [418]
    @[BUG]@ : Denotes a line of code where we found and          // [418]
            : fixed a bug in the code.                           // [418]

    #_KONAMIC_ZEROFIX_# :-------------------------------------+  // [419]
                                                              |  // [419]
        Fixing the bug that activates konami code             |  // [419]
        shortcut erroneously if you press                     |  // [419]
        "UPUPDOWNDOWNLEFTRIGHTLEFTRIGHT" and then             |  // [419]
        hit ANOTHER ARROW KEY.                                |  // [419]
                                                              |  // [419]
        Doing this should reset the konami code back          |  // [419]
        to zero, but what it was doing was saying             |  // [419]
        "Arrow Key ? That ain't no key I ever heard of"       |  // [419]
        and casting the arrow key to a ZERO , and that        |  // [419]
        zero was getting mapped to the "A" key of             |  // [419]
        our "A"-"Z" shortcut mappings for[ KONAMIC ].         |  // [419]
                                                              |  // [419]
        The "A" key shortcut is used to overwrite             |  // [419]
        the ENTIRE PIX 2048 MEMORY WITH BINARY 1 OR 0         |  // [419]
        which effectively erases all of your work.            |  // [419]
                                                              |  // [419]
        This bug cannot be allowed to exist in the            |  // [419]
        first release of the editor I give to Josh.           |  // [419]
                                                              |  // [419]
    :---------------------------------------------------------+  // [419]

    #_GEOMETRY_AWARE_MIRROR_BRUSH_# :-------------------------+  // [421]
                                                              |  // [421]
        @IDEA@ / @IDEA_GAMB@ / @GAMB_IDEA@                    |  // [421]
                                                              |  // [421]
        @GAMB@ : Geometry_Aware_Mirror_Brush                  |  // [421]
                                                              |  // [421]
        A mirror brush that is aware of the tiles already     |  // [421]
        around it and projects tiles from some type of        |  // [421]
        origin. The tiles that get projected don't permeate   |  // [421]
        through previously set geometry tiles, and thus       |  // [421]
        we get interesting semi-symmetric designs.            |  // [421]
                                                              |  // [421]
    :---------------------------------------------------------+  // [421]
    
    __MERMAID__ : You Mean : "MIRMAID" ( Mirror Maid )           // [421]
     _MERMAID_  : You Mean : "MIRMAID" ( Mirror Maid )           // [421]
      MERMAID   : You Mean : "MIRMAID" ( Mirror Maid )           // [421]

    #_MIRRORING_BRUSH_# :-------------------------------------+  // [422]
                                                              |  // [422]
        Editor member variables used to control mirror        |  // [422]
        brush code. Original name for mirror mode was         |  // [422]
        [ edi_mod_mir ]in[ HOTEL13.JS ].                      |  // [422]
                                                              |  // [422]
        REFACTORED[ edi_mod_mir ]===>[ edi_mod_mir_onn ]      |  // [422]
    :---------------------------------------------------------+  // [422]
    #_MIR_TOG_# :---------------------------------------------+  // [422]
                                                              |  // [422]
        Mirror Mode Toggle Section Of Code.                   |  // [422]
                                                              |  // [422]
        @MIR_TOG@ : MIRror TOGgle                             |  // [422]
                                                              |  // [422]
    :---------------------------------------------------------+  // [422]
                                                                 // [422]
    @_M_KEY_@ / @M_KEY@ : Location of "M" Key binding in         // [422]
                        : the source code somewhere. Tag to      // [422]
                        : help me find things.                   // [422]

    #_PUT_TILE_# :--------------------------------------------+  // [423]
    #_SET_TILE_# :--------------------------------------------+  // [423]
                                                              |  // [423]
        This section of code puts a tile into our             |  // [423]
        levelmap data encoded into our 2048x2048 texture.     |  // [423]
                                                              |  // [423]
    :---------------------------------------------------------+  // [423]
    :---------------------------------------------------------+  // [423]
    #_MIRROR_TILE_PUT_# :-------------------------------------+  // [423]
                                                              |  // [423]
        Puts a tile into "THE_DUM" ( 3x3 grid of levelpacks ) |  // [423]
        but mirrors the tile setting to 8 different unique    |  // [423]
        locations, so that we get a radially symmetric        |  // [423]
        design when setting tiles with this mode on.          |  // [423]
                                                              |  // [423]
    :---------------------------------------------------------+  // [423]
    #_STANDARD_TILE_PUT_# :-----------------------------------+  // [423]
                                                              |  // [423]
        Standard tile putting that puts a tile into           |  // [423]
        one of the levelpacks within "THE_DUM".               |  // [423]
                                                              |  // [423]
        One click === One Tile Set.                           |  // [423]
                                                              |  // [423]
        No Mirroring , No Fancy Business.                     |  // [423]
                                                              |  // [423]
    :---------------------------------------------------------+  // [423]

    #_STILL_WITHIN_DUM_BOUNDS_# :-----------------------------+  // [424]
                                                              |  // [424]
        The global tile coordinate is within the inclusive    |  // [424]
        bounds of "THE_DUM". [THE_DUM] being our 3x3          |  // [424]
        grid of levelpacks that occupies 100% of the          |  // [424]
        renderable space within our engine.                   |  // [424]
                                                              |  // [424]
    :---------------------------------------------------------+  // [424]
    #_NOT_WITHIN_DUM_BOUNDS_# :-------------------------------+  // [424]
                                                              |  // [424]
        The global tile coordinate [ gtx,gty ] is out of      |  // [424]
        bounds. However, this is a NON_FATAL_ERROR ,          |  // [424]
        we must recover gracefully by ignoring the input      |  // [424]
        because this could happen if the user clicks          |  // [424]
        outside of the bounds.                                |  // [424]
                                                              |  // [424]
    :---------------------------------------------------------+  // [424]
    @_NON_FATAL_CODE_BRANCH_@ :-------------------------------+  // [424]
    #_NON_FATAL_CODE_BRANCH_# :-------------------------------+  // [424]
                                                              |  // [424]
        Denoting a branch of code that should __NOT__ crash   |  // [424]
        the game when it is encountered. For example,         |  // [424]
        trying to set a tile within the void should not       |  // [424]
        cause a fatal error. Even if procedural code is       |  // [424]
        using our tile brush.                                 |  // [424]
                                                              |  // [424]
    :---------------------------------------------------------+  // [424]
    :---------------------------------------------------------+  // [424]
    #_GTX_M_I_# :---------------------------------------------+  // [424]
    #_M_I_GTX_# :---------------------------------------------+  // [424]
                                                              |  // [424]
        @M_I_GTX@ : MaxIndex - GTX (GlobalTileX)              |  // [424]
        @GTX_M_I@ : YOU_MEAN[ M_I_GTX ]                       |  // [424]
                                                              |  // [424]
    :---------------------------------------------------------+  // [424]
    :---------------------------------------------------------+  // [424]
    #_GTY_M_I_# :---------------------------------------------+  // [424]
    #_M_I_GTY_# :---------------------------------------------+  // [424]
                                                              |  // [424]
        @M_I_GTY@ : MaxIndex - GTY (GlobalTileY)              |  // [424]
        @GTY_M_I@ : YOU_MEAN[ M_I_GTY ]                       |  // [424]
                                                              |  // [424]
    :---------------------------------------------------------+  // [424]
    :---------------------------------------------------------+  // [424]
    #_MIRROR_LOOP_# :-----------------------------------------+  // [424]
                                                              |  // [424]
        This are of code loops through all of the possible    |  // [424]
        mirroring enumerations and performs them.             |  // [424]
                                                              |  // [424]
    :---------------------------------------------------------+  // [424]
    #_KEY_ECHO_IDEA_# :---------------------------------------+  // [424]
                                                              |  // [424]
        @IDEA@ @HUD_IDEA@ @IDEA_HUD@                          |  // [424]
                                                              |  // [424]
        Make a H.U.D. (HUD) that displays which keys          |  // [424]
        you are pressing so that someone following along      |  // [424]
        when I am drawing stuff can see what inputs I         |  // [424]
        was using. Yes, I can call out the keys as well,      |  // [424]
        but this would be very helpful for if I forget        |  // [424]
        to call them out. Also would help other people        |  // [424]
        make good quality [ENGINE/EDITOR] tutorials.          |  // [424]
                                                              |  // [424]
    :---------------------------------------------------------+  // [424]

    #_MIR_XYD_SETTINGS_# :------------------------------------+  // [425]
                                                              |  // [425]
        @edi_mod_mir_xyd@ : EditorModeMirror - XYD            |  // [425]
                                                              |  // [425]
        @XYD@ : X_bilateral? Y_Bilateral? Dense_mirroring?    |  // [425]
                                                              |  // [425]
                                      X_Y_D                   |  // [425]
        There are 3 bits to use. BIN[ 1 1 1 ]==( 7 ).         |  // [425]
        Thus, 8 total valid mirroring styles.                 |  // [425]
                                                              |  // [425]
        When [ X===0 ]&&[ Y===0 ]we RADIALLY MIRROR           |  // [425]
        instead of BILATERALLY MIRROR.                        |  // [425]
                                                              |  // [425]
    :---------------------------------------------------------+  // [425]
    #_MERMAID_FUNCTION_INPUTS_#:------------------------------+  // [425]
                                                              |  // [425]
        #_SIZE_AND_LAYER_# :-------------------------------+  |  // [425]
                                                           |  |  // [425]
            i_te7 : The power of 2 tile size to set.       |  |  // [425]
                  : Denoted by a tile-size-exponent (te7). |  |  // [425]
                                                           |  |  // [425]
            i_la3 : The layer (geom,bomb,fada) we want to  |  |  // [425]
                  : set the tile on. Uses TWO BITS>        |  |  // [425]
                                                           |  |  // [425]
                  : BIN[ 00 ]==DEC[ 0 ]==GEOM              |  |  // [425]
                  : BIN[ 01 ]==DEC[ 1 ]==BOMB              |  |  // [425]
                  : BIN[ 10 ]==DEC[ 2 ]==FADA              |  |  // [425]
                  : BIN[ 11 ]==DEC[ 3 ]==INVALID_LAYER     |  |  // [425]
                  ( BIN[ 11 ]IS_USED_FOR_OTHER_MIP_LAYERS )|  |  // [425]
        :--------------------------------------------------+  |  // [425]
        #_GLOBAL_TILE_XY_# :-------------------------------+  |  // [425]
                                                           |  |  // [425]
            Global Tile XY. [ i_gtx,i_gty ]AKA[gtx,gty].   |  |  // [425]
            The global xy tile location on "THE_DUM".      |  |  // [425]
            The valid bounds of this changes depending     |  |  // [425]
            on what tile size we are setting.              |  |  // [425]
        :--------------------------------------------------+  |  // [425]
        #_BINTILE_MIRROR_# :-------------------------------+  |  // [425]
                                                           |  |  // [425]
            Binary tile value and mirroring code.          |  |  // [425]
                                                           |  |  // [425]
            i_u32 : The binary tile value to set. Encodes  |  |  // [425]
                  : the tile value of the tile, as well    |  |  // [425]
                  : as any other meta-data associated      |  |  // [425]
                  : with that tile.                        |  |  // [425]
                                                           |  |  // [425]
            i_xyd : A 3-bit bit flag telling us how to     |  |  // [425]
                  : mirror our tiles.                      |  |  // [425]
                                                           |  |  // [425]
                  : [  0  |  0  |  0  ]                    |  |  // [425]
                  : [ _X_ | _Y_ | _D_ ]                    |  |  // [425]
                                                           |  |  // [425]
                  : _X_ : Bilateral Mirror On X?           |  |  // [425]
                  : _Y_ : Bilateral Mirror On Y?           |  |  // [425]
                  : _D_ : Dense Mirroring ?                |  |  // [425]
                                                           |  |  // [425]
                  : If ( _X_ === 0 )&&( _Y_ === 0 )        |  |  // [425]
                  : Then we do RADIAL instead of BILATERAL |  |  // [425]
                  : mirroring.                             |  |  // [425]
                                                           |  |  // [425]
        :--------------------------------------------------+  |  // [425]
    :-----------------------------: #_MERMAID_FUNCTION_INPUTS_#  // [425]
                                                                 // [425]
    @SYMRADI@ : SYMmetric - RADIal    :::::::::::::::::::::::::  // [425]
    @SYMBILA@ : SYMmetric - BILAteral :::::::::::::::::::::::::  // [425]
                                                                 // [425]
    #_BILATERAL_OR_RADIAL_# :---------------------------------+  // [425]
    #_RADIAL_OR_BILATERAL_# :---------------------------------+  // [425]
                                                              |  // [425]
        Are we setting tiles using "RADIAL MIRRORING"         |  // [425]
        or "BILATERAL MIRRORING?".                            |  // [425]
                                                              |  // [425]
        @xyd_symbila@ : XYD - Symmetric - BILATERAL           |  // [425]
        @xyd_symradi@ : XYD - Symmetric - RADIAL              |  // [425]
                                                              |  // [425]
        @xyd@ : 3 bit mirroring flag.                         |  // [425]
              : X == bilateral X ?                            |  // [425]
              : Y == bilateral Y ?                            |  // [425]
              : D == Dense Mirroring ?                        |  // [425]
              : ( Bits are in network bit order )             |  // [425]
    :---------------------------------------------------------+  // [425]
    :---------------------------------------------------------+  // [425]
                                                                 // [425]
    @simradi@ ::::: YOU_MEAN[     symradi ]( sym (not:sim) ):::  // [425]
    @simbila@ ::::: YOU_MEAN[     symbila ]( sym (not:sim) ):::  // [425]
    @xyd_simradi@ : YOU_MEAN[ xyd_symradi ]( sym (not:sim) ):::  // [425]
    @xyd_simbila@ : YOU_MEAN[ xyd_symbila ]( sym (not:sim) ):::  // [425]
                                                                 // [425]
    #_EIGHT_XYD_# :-------------------------------------------+  // [425]
                                                              |  // [425]
        There are EIGHT XYD bit configurations:               |  // [425]
                                                              |  // [425]
            [_DIAGRAM_XYD_SYMRADI_]                           |  // [425]
                                                              |  // [425]
                TAG[ _XYD_000_ ]  <--- INTEGER_000            |  // [425]
                TAG[ _XYD_001_ ]  <--- INTEGER_001            |  // [425]
                                                              |  // [425]
            [_DIAGRAM_XYD_SYMBILA_]                           |  // [425]
                                                              |  // [425]
                TAG[ _XYD_010_ ]  <--- INTEGER_002            |  // [425]
                TAG[ _XYD_011_ ]  <--- INTEGER_003            |  // [425]
                TAG[ _XYD_100_ ]  <--- INTEGER_004            |  // [425]
                TAG[ _XYD_101_ ]  <--- INTEGER_005            |  // [425]
                TAG[ _XYD_110_ ]  <--- INTEGER_006            |  // [425]
                TAG[ _XYD_111_ ]  <--- INTEGER_007            |  // [425]
                                                              |  // [425]
    #_XYD_000_# :---------------------------------------------+  // [425]
             X_Y_D                                            |  // [425]
        BIN[ 0 0 0 ]=== Raidal Mirror , Non-Dense             |  // [425]
                                                              |  // [425]
                       DRAW_POINT                             |  // [425]
                           V                                  |  // [425]
                         [_0_][ _ ][ _ ]  _0_ : 000_DEG_ROT   |  // [425]
                         [ _ ][ _ ][ _ ]  _1_ : 090_DEG_ROT   |  // [425]
                         [ _ ][ _ ][ _ ]  _2_ : 180_DEG_ROT   |  // [425]
                         [ _ ][ _ ][ _ ]  _3_ : 270_DEG_ROT   |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                                                              |  // [425]
        [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]  [ _ ][ _ ][_3_]     |  // [425]
        [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
        [_1_][ _ ][ _ ]  [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
                                                              |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][_2_]                      |  // [425]
                                                              |  // [425]
    :---------------------------------------------------------+  // [425]
    #_XYD_001_# :---------------------------------------------+  // [425]
             X_Y_D                                            |  // [425]
        BIN[ 0 0 1 ]=== Raidal Mirror , DENSE MIRRORING       |  // [425]
                                                              |  // [425]
                            DRAW_POINT                        |  // [425]
                                V                             |  // [425]
        [   ][   ][   ]  [   ][_0_][   ]  [   ][   ][   ]     |  // [425]
        [   ][   ][   ]  [   ][   ][   ]  [   ][   ][   ]     |  // [425]
        [   ][_1_][   ]  [   ][   ][   ]  [   ][_7_][   ]     |  // [425]
        [   ][   ][   ]  [   ][   ][   ]  [   ][   ][   ]     |  // [425]
        [   ][   ][   ]  [   ][   ][   ]  [   ][   ][   ]     |  // [425]
                                                              |  // [425]
        [   ][   ][   ]  [   ][   ][   ]  [   ][   ][   ]     |  // [425]
        [   ][   ][   ]  [   ][   ][   ]  [   ][   ][   ]     |  // [425]
        [_2_][   ][   ]  [   ][   ][   ]  [   ][   ][_6_]     |  // [425]
        [   ][   ][   ]  [   ][   ][   ]  [   ][   ][   ]     |  // [425]
        [   ][   ][   ]  [   ][   ][   ]  [   ][   ][   ]     |  // [425]
                                                              |  // [425]
        [   ][   ][   ]  [   ][   ][   ]  [   ][   ][   ]     |  // [425]
        [   ][   ][   ]  [   ][   ][   ]  [   ][   ][   ]     |  // [425]
        [   ][_3_][   ]  [   ][   ][   ]  [   ][_5_][   ]     |  // [425]
        [   ][   ][   ]  [   ][   ][   ]  [   ][   ][   ]     |  // [425]
        [   ][   ][   ]  [   ][_4_][   ]  [   ][   ][   ]     |  // [425]
                                                              |  // [425]
    :---------------------------------------------------------+  // [425]
    #_XYD_010_# :---------------------------------------------+  // [425]
                                                              |  // [425]
        BIN[ X_Y_D ]    ( FLIPPING_Y_AXIS_VALUE )                // [425]
        BIN[ 0 1 0 ]=== Bilateral Mirror Y_AXIS.              |  // [425]
                        LOW_Density                           |  // [425]
                                                              |  // [425]
                       DRAW_POINT                             |  // [425]
                           V                                  |  // [425]
                         [_0_][ _ ][ _ ]                      |  // [425]
                         [ | ][ _ ][ _ ]                      |  // [425]
                         [ | ][ _ ][ _ ]                      |  // [425]
                         [ | ][ _ ][ _ ]                      |  // [425]
                         [ | ][ _ ][ _ ]                      |  // [425]
                           |                                  |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
                           |                                  |  // [425]
                         [ | ][ _ ][ _ ]                      |  // [425]
                         [ | ][ _ ][ _ ]                      |  // [425]
                         [ | ][ _ ][ _ ]                      |  // [425]
                         [ | ][ _ ][ _ ]                      |  // [425]
                         [_1_][ _ ][ _ ]                      |  // [425]
                                                              |  // [425]
    :---------------------------------------------------------+  // [425]
    #_XYD_011_# :---------------------------------------------+  // [425]
                                                              |  // [425]
        BIN[ X_Y_D ]                                          |  // [425]
        BIN[ 0 1 1 ]=== Bilateral Mirror Y_AXIS.              |  // [425]
                        HIGH_DENSITY                          |  // [425]
                                                              |  // [425]
                       DRAW_POINT                             |  // [425]
                           V                                  |  // [425]
                         [_0_]-----[_2_]                      |  // [425]
                         [ | ][   ][ | ]                      |  // [425]
                         [ | ][   ][ | ]                      |  // [425]
                         [ | ][   ][ | ]                      |  // [425]
                         [ | ][   ][ | ]                      |  // [425]
                           |         |                        |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][   ][ | ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][   ][ | ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][   ][ | ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][   ][ | ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][   ][ | ]  [ _ ][ _ ][ _ ]     |  // [425]
                           |         |                        |  // [425]
                         [ | ][   ][ | ]                      |  // [425]
                         [ | ][   ][ | ]                      |  // [425]
                         [ | ][   ][ | ]                      |  // [425]
                         [ | ][   ][ | ]                      |  // [425]
                         [_1_]-----[_3_]                      |  // [425]
                                                              |  // [425]
    :---------------------------------------------------------+  // [425]
    #_XYD_100_# :---------------------------------------------+  // [425]
                                                              |  // [425]
        BIN[ X_Y_D ]                                          |  // [425]
        BIN[ 1 0 0 ]=== Bilateral Mirror X_AXIS.              |  // [425]
                        NON_Dense                             |  // [425]
                                                              |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
      DRAW_POINT         [ _ ][ _ ][ _ ]                      |  // [425]
          V                                                   |  // [425]
        [_0_]---------------------------------------[_1_]     |  // [425]
        [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
                                                              |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                                                              |  // [425]
    :---------------------------------------------------------+  // [425]
    #_XYD_101_# :---------------------------------------------+  // [425]
                                                              |  // [425]
        BIN[ X_Y_D ]                                          |  // [425]
        BIN[ 1 0 1 ]=== Bilateral Mirror X_AXIS.              |  // [425]
                        DENSE_MIRRORING                       |  // [425]
                                                              |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
      DRAW_POINT         [ _ ][ _ ][ _ ]                      |  // [425]
          V                                                   |  // [425]
        [_0_]---------------------------------------[_2_]     |  // [425]
        [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]  [ _ ][ _ ][ _ ]     |  // [425]
        [_3_]---------------------------------------[_4_]     |  // [425]
                                                              |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                         [ _ ][ _ ][ _ ]                      |  // [425]
                                                              |  // [425]
    :---------------------------------------------------------+  // [425]
    #_XYD_110_# :---------------------------------------------+  // [425]
                                                              |  // [425]
        BIN[ X_Y_D ]                                          |  // [425]
        BIN[ 1 1 0 ]=== Bilateral Mirror BOTH_AXIS            |  // [425]
                        LOW_Density                           |  // [425]
                                                              |  // [425]
                       DRAW_POINT                             |  // [425]
                           V                                  |  // [425]
                         [_0_][ _ ][_2_]                      |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                           |         |                        |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][ _ ][ | ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][ _ ][ | ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][ _ ][ | ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][ _ ][ | ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][ _ ][ | ]  [ _ ][ _ ][ _ ]     |  // [425]
                           |         |                        |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                         [_1_][ _ ][_3_]                      |  // [425]
                                                              |  // [425]
    :---------------------------------------------------------+  // [425]
    #_XYD_111_# :---------------------------------------------+  // [425]
                                                              |  // [425]
        BIN[ X_Y_D ]                                          |  // [425]
        BIN[ 1 1 1 ]=== Bilateral Mirror BOTH_AXIS            |  // [425]
                        HIGH_DENSITY                          |  // [425]
                                                              |  // [425]
                       DRAW_POINT                             |  // [425]
                           V                                  |  // [425]
                         [_0_][ _ ][_2_]                      |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                           |         |                        |  // [425]
        [_4_]--------------+---------+--------------[_7_]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][ _ ][ | ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][ _ ][ | ]  [ _ ][ _ ][ _ ]     |  // [425]
        [ _ ][ _ ][ _ ]  [ | ][ _ ][ | ]  [ _ ][ _ ][ _ ]     |  // [425]
        [_5_]--------------+---------+--------------[_6_]     |  // [425]
                           |         |                        |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                         [ | ][ _ ][ | ]                      |  // [425]
                         [_1_][ _ ][_3_]                      |  // [425]
                                                              |  // [425]
        _4_,_5_,_6_,_7_ would have to be rotated              |  // [425]
        to get those positions there.                         |  // [425]
                                                              |  // [425]
    :---------------------------------------------------------+  // [425]
                                                              |  // [425]
    :-------------------------------------------: #_EIGHT_XYD_#  // [425]

    #_ARR_GTX_# :---------------------------------------------+  // [426]
    #_ARR_GTY_# :---------------------------------------------+  // [426]
                                                              |  // [426]
        Top level variables used by bilateral and radial      |  // [426]
        tile put mirroring code. The idea is to avoid         |  // [426]
        abusing the garbage collector by keeping these        |  // [426]
        re-usable arrays at file scope. (global scope).       |  // [426]
                                                              |  // [426]
        @d_arr_gtx@ : Array of GlobalTile_X coordinates       |  // [426]
        @d_arr_gty@ : Array of GlobalTile_X coordinates       |  // [426]
                                                              |  // [426]
        @d_len_gtx@ : WRONG_USE[ d_len_gtc ]                  |  // [426]
        @d_len_gty@ : WRONG_USE[ d_len_gtc ]                  |  // [426]
                                                              |  // [426]
        @gtc@ : Means[ gtx || gty ]( C == Coord, X||Y )       |  // [426]
                                                              |  // [426]
    :---------------------------------------------------------+  // [426]
    :---------------------------------------------------------+  // [426]
    #_BILATERAL_SETUP_CODE_# :--------------------------------+  // [426]
                                                              |  // [426]
        Variable declaration and setup code before we         |  // [426]
        enter the triple-nested loop responsible for          |  // [426]
        mirroring our tile coordinate on different            |  // [426]
        axises.                                               |  // [426]
    :---------------------------------------------------------+  // [426]
    #_BILATERAL_MIRRORING_# :---------------------------------+  // [426]
                                                              |  // [426]
        All of the logic for bilaterally mirroring a tile     |  // [426]
        that we are putting onto "THE_DUM".                   |  // [426]
                                                              |  // [426]
        #_BILATERAL_X_LIGHT_# :----------------------------+  |  // [426]
            Math for bilateral mirroring on the x-axis     |  |  // [426]
            for the LIGHT mirroring [ coords / style ].    |  |  // [426]
        :--------------------------------------------------+  |  // [426]
        #_BILATERAL_X_DENSE_# :----------------------------+  |  // [426]
            Math for bilateral mirroring on the x-axis     |  |  // [426]
            for the DENSE mirroring [ coords / style ].    |  |  // [426]
                                                           |  |  // [442]
            UDPATE:                                        |  |  // [442]
                PICK:                                      |  |  // [442]
                    1[ _BOTH_BILATERAL_X_DENSE_ ]          |  |  // [442]
                    2[ _SINGLE_AXIS_X_DENSE_    ]          |  |  // [442]
                                                           |  |  // [442]
        :--------------------------------------------------+  |  // [426]
        #_BILATERAL_Y_LIGHT_# :----------------------------+  |  // [426]
            Math for bilateral mirroring on the y-axis     |  |  // [426]
            for the LIGHT mirroring [ coords / style ].    |  |  // [426]
        :--------------------------------------------------+  |  // [426]
        #_BILATERAL_Y_DENSE_# :----------------------------+  |  // [426]
            Math for bilateral mirroring on the y-axis     |  |  // [426]
            for the DENSE mirroring [ coords / style ].    |  |  // [426]
                                                           |  |  // [442]
            UDPATE:                                        |  |  // [442]
                PICK:                                      |  |  // [442]
                    1[ _BOTH_BILATERAL_Y_DENSE_ ]          |  |  // [442]
                    2[ _SINGLE_AXIS_Y_DENSE_    ]          |  |  // [442]
                                                           |  |  // [442]
        :--------------------------------------------------+  |  // [426]
        #_PUT_NON_TRANSFORMED_# :--------------------------+  |  // [426]
            If we haven't already put the non-transformed  |  |  // [426]
            tile coordinate, do that now.                  |  |  // [426]
        :--------------------------------------------------+  |  // [426]
        #_SKIP_THIS_ITERATION_# :--------------------------+  |  // [426]
            For simplicity of writing this code, some      |  |  // [426]
            loop iterations will do nothing.               |  |  // [426]
        :--------------------------------------------------+  |  // [426]
        #_PUT_TILE_IF_OKAY_# :-----------------------------+  |  // [426]
            If the[ o_k ]flag is still positive, use       |  |  // [426]
            the tileboi tile putter function with          |  |  // [426]
            the transformed [ gtx,gty ]coordinate.         |  |  // [426]
        :--------------------------------------------------+  |  // [426]
                                                              |  // [426]
    :---------------------------------: #_BILATERAL_MIRRORING_#  // [426]

    #_INTERLACED_HIDDEN_BLACK_AND_WHITE_# :-------------------+  // [427]
    #_INTERLACED_HIDDEN_WHITE_AND_BLACK_# :-------------------+  // [427]
                                                              |  // [427]
        @IDEA@ / @IDEA_HIDDEN@ / @HIDDEN_IDEA@                |  // [427]
                                                              |  // [427]
        If we take 4 black and white images, we could         |  // [427]
        interlace their bits together to hide the             |  // [427]
        image. Maybe doing so will make it not obviously      |  // [427]
        hentai.                                               |  // [427]
                                                              |  // [427]
        INSTEAD_OF:                                           |  // [427]
            [ IMAGE_01 | IMAGE_02 | IMAGE_03 | IMAGE_04 ]     |  // [427]
            [ 11111111 | 11111111 | 11111111 | 11111111 ]     |  // [427]
                                                              |  // [427]
        WE_DO:                                                |  // [427]
                                                              |  // [427]
            [ ALLIAMGE | ALLIMAGE | ALLIMAGE | ALLIMAGE ]     |  // [427]
            [ 12341234 | 12341234 | 12341234 | 12341234 ]     |  // [427]
            [ 11111111 | 11111111 | 11111111 | 11111111 ]     |  // [427]
            [ _B8__B7_   _B6__B5_   _B4__B3_   _B2__B1_ ]     |  // [427]
                                                              |  // [427]
            We [ shuffle / interlace ]the bits of all         |  // [427]
            four images.                                      |  // [427]
                                                              |  // [427]
            _B8__B7_ : Bits 8 & 7 (1-indexed) of images       |  // [427]
            _B6__B5_ : Bits 6 & 5 (1-indexed) of images       |  // [427]
            _B4__B3_ : Bits 4 & 3 (1-indexed) of images       |  // [427]
            _B2__B1_ : Bits 2 & 1 (1-indexed) of images       |  // [427]
                                                              |  // [427]
    :---------------------------------------------------------+  // [427]
    #_IDEA_HIGHLY_COMPRESSED_HENTAI_FOURSET_# :---------------+  // [427]
                                                              |  // [427]
        @IDEA@ / @IDEA_FOURSET@ / @FOURSET_IDEA@              |  // [427]
                                                              |  // [427]
        The[ HENTAIF ]system in my[ AA3 ]C99 code base        |  // [427]
        can make these kailadescopic tile types.              |  // [427]
                                                              |  // [427]
        What if instead of creating kailadescope graphics,    |  // [427]
        we used it as an extra step to pack ultra             |  // [427]
        concentrated foursets?                                |  // [427]
                                                              |  // [427]
        +------------+      +------------+                    |  // [427]
        |\          /|      |            |                    |  // [427]
        | \        / |      |            |                    |  // [427]
        |  \      /  |      |            |                    |  // [427]
        |   \    /   |      |            |                    |  // [427]
        |    \  /    |      |FOURFOURSETS|                    |  // [427]
        |     \/     | ===> |FOURFOURSETS|                    |  // [427]
        |     /\     | ===> |FOURFOURSETS|                    |  // [427]
        |    /  \    |      |FOURFOURSETS|                    |  // [427]
        |   /    \   |      |            |                    |  // [427]
        |  /      \  |      |            |                    |  // [427]
        | /        \ |      |            |                    |  // [427]
        |/          \|      |            |                    |  // [427]
        +------------+      +------------+                    |  // [427]
                                                              |  // [427]
    :---------------------------------------------------------+  // [427]
                                                                 // [427]
    #_LOAD_NON_TRANS_# :--------------------------------------+  // [427]
                                                              |  // [427]
        Load non-transformed global tile coordinate.          |  // [427]
        Mirroring or rotation code needs to set the           |  // [427]
        original input point in addition to all of            |  // [427]
        the mirrored and rotated transforms.                  |  // [427]
    :---------------------------------------------------------+  // [427]
    #_MIR_MOD_X_# :-------------------------------------------+  // [427]
                                               TAG[ MIR_MOD_X ]  // [427]
        Mirror Mode X - Transformations Math.                 |  // [427]
                                                              |  // [427]
    :---------------------------------------------------------+  // [427]
    #_MIR_MOD_Y_# :-------------------------------------------+  // [427]
                                               TAG[ MIR_MOD_Y ]  // [427]
        Mirror Mode X - Transformations Math.                 |  // [427]
                                                              |  // [427]
    :---------------------------------------------------------+  // [427]
    #_MIR_MOD_XY_# :------------------------------------------+  // [427]
                                                              |  // [427]
        Mirror Mode X&Y   TAG[ MIR_MOD_X_AND_Y ]              |  // [427]
        Mirror Mode XY    TAG[ MIR_MOD_XY      ]              |  // [427]
        Mirror Mode YX    TAG[ MIR_MOD_YX      ]              |  // [427]
    :---------------------------------------------------------+  // [427]
                                                                 // [427]
    @_TE7_AND_LA3_@ : TileSizeExponent_AND_LAyer(Geo,Bom,Fad)    // [427]
    @_GTX_AND_GTY_@ : GlobalTileX_AND_GLobalTileY                // [427]
    @_U32_BINTILE_@ : Uint32_Binary_Tile_Value                   // [427]
    #_UNLOAD_TILE_BUFFER_# :----------------------------------+  // [427]
                                                              |  // [427]
        Take all of the [gtx,gty] coordinates loaded into     |  // [427]
        our tile buffer and set them into our tilemap.        |  // [427]
    :---------------------------------------------------------+  // [427]
    #_KITTY_CORNER_LIGHT_# :----------------------------------+  // [427]
    #_KITTY_CORNER_DENSE_# :----------------------------------+  // [427]
                                                              |  // [427]
        So when mirror on the X & Y , we end up with one      |  // [427]
        coordinate that seems "Missing".                      |  // [427]
                                                              |  // [427]
        This is the kitty corner tile.                        |  // [427]
                                                              |  // [427]
        +----------------------+                              |  // [427]
        |                      |                              |  // [427]
        |   +-----+   +-----+  |                              |  // [427]
        |   | d_p |   | _x_ |  |    d_p : Drawing_Point       |  // [427]
        |   +-----+   +-----+  |    _x_ : Mirrored Across X   |  // [427]
        |                      |    _y_ : Mirrored Across Y   |  // [427]
        |   +-----+   +-----+  |    k_c : Kitty_Corner(tile)  |  // [427]
        |   | _y_ |   | k_c |  |    k_k : You_Mean[ k_c ]     |  // [427]
        |   +-----+   +-----+  |                              |  // [427]
        |                      |                              |  // [427]
        +----------------------+                              |  // [427]
                                                              |  // [427]
    :---------------------------------------------------------+  // [427]
    :---------------------------------------------------------+  // [427]

    #_AUTO_TILE_MIRRORING_# :---------------------------------+  // [428]
                                                              |  // [428]
        Since we can control the auto tiling at a fine        |  // [428]
        grain, lets mirror the internal auto tiling           |  // [428]
        bits on the X and Y axis.                             |  // [428]
                                                              |  // [428]
                                                              |  // [428]
        #_BINTILE_AUTO_MIRROR_DOIT_# :---------------------+  |  // [428]
                                                           |  |  // [428]
            Actually do the mirroring of AM6 bits of       |  |  // [428]
            the binary tile that has been inputted.        |  |  // [428]
        :--------------------------------------------------+  |  // [428]
        #_BINTILE_AUTO_MIRROR_NOOP_# :---------------------+  |  // [428]
                                                           |  |  // [428]
            A No-OP ( NOOP ) function that takes the       |  |  // [428]
            exact same number of arguments as the          |  |  // [428]
            function that performs auto tile mirroring     |  |  // [428]
            of the AM6 bits within our binary tile.        |  |  // [428]
        :--------------------------------------------------+  |  // [428]
                                                              |  // [428]
    :---------------------------------------------------------+  // [428]

    #_BINTILE_SPECIFICALLY_BINGEOM_# :------------------------+  // [429]
                                                              |  // [429]
        Binary Tile, Specifically Binary Geometry Tile.       |  // [429]
                                                              |  // [429]
        We want to avoid "bintile" namespace because          |  // [429]
        the exact data layout of our binary tile value        |  // [429]
        will change depending on if we are on layer :         |  // [429]
                                                              |  // [429]
            main_layer_index_0 : GEOMETRY TILES               |  // [429]
            main_layer_index_1 : BOMB     TILES               |  // [429]
            main_layer_index_2 : FADA     TILES               |  // [429]
    :---------------------------------------------------------+  // [429]
    #_BINARY_TILE_LAYOUT_# :----------------------------------+  // [429]
                                                              |  // [429]
        What do the individual bits of our uint32 mean        |  // [429]
        when we are on the geometry layer?                    |  // [429]
                                                              |  // [429]
        #_BINGEOM_MG0_# : Binary Layout of the geometry       |  // [429]
                        : tile bits describing the            |  // [429]
                        : MIGROUND (sub-layer-0) of           |  // [429]
                        : the geometry layer binary tile.     |  // [429]
                                                              |  // [429]
        #_BINGEOM_BG1_# : Binary Layout of the geometry       |  // [429]
                        : tile bits describing the            |  // [429]
                        : BACKGROUND (sub-layer-1) of         |  // [429]
                        : the geometry layer binary tile.     |  // [429]
                                                              |  // [429]
        #_BINGEOM_FG2_# : Binary Layout of the geometry       |  // [429]
                        : tile bits describing the            |  // [429]
                        : FOREGROUND (sub-layer-2) of         |  // [429]
                        : the geometry layer binary tile.     |  // [429]
                                                              |  // [429]
        @_BINTILE_MG0_@ : YOU_MEAN[ BINGEOM_MG0 ]             |  // [429]
        @_BINTILE_BG1_@ : YOU_MEAN[ BINGEOM_BG1 ]             |  // [429]
        @_BINTILE_FG2_@ : YOU_MEAN[ BINGEOM_FG2 ]             |  // [429]
                                                              |  // [429]
    :---------------------------------------------------------+  // [429]
    #_MEMBITS_TEST_# :----------------------------------------+  // [429]
                                                              |  // [429]
        Do the bitflags , masks, shifting amounts ,           |  // [429]
        do they all agree?                                    |  // [429]
                                                              |  // [429]
                                                              |  // [429]
        #_MATCHING_SHIFT_AMOUNTS_# :----------------------+   |  // [429]
                                                          |   |  // [429]
            [all_shi]===[am6_shi] , because they both     |   |  // [429]
            share the same right-most bit.                |   |  // [429]
        :-------------------------------------------------+   |  // [429]
        #_SUBMASK_SMASH_# :-------------------------------+   |  // [429]
                                                          |   |  // [429]
            [v16_msk] | [am6_msk] === [all_msk]           |   |  // [429]
                                                          |   |  // [429]
            All of the sub-masks, when smashed together   |   |  // [429]
            with a bitwise or should equal the "all-mask".|   |  // [429]
        :-------------------------------------------------+   |  // [429]
        #_SUBMASKS_SUMS_# :-------------------------------+   |  // [429]
                                                          |   |  // [429]
            If we add the bits of all of the sub-masks    |   |  // [429]
            of a given sublayer (mg0,bg1,fg2), all        |   |  // [429]
            of those bits should add up to 10 total.      |   |  // [429]
                                                          |   |  // [429]
            We have 3 sub-layers within our geom-tile     |   |  // [429]
            binary-tile value. Each of those sub-layers   |   |  // [429]
            being 10 bits wide.                           |   |  // [429]
        :-------------------------------------------------+   |  // [429]
        #_THE_FINAL_SMASH_# :-----------------------------+   |  // [429]
                                                          |   |  // [429]
            If we smash ALL MASKS OF ALL SUBLAYERS        |   |  // [429]
            together using BITWISE OR, we should get      |   |  // [429]
            0xFFFFFFFF , provided we also smash in        |   |  // [429]
            a 0x3 to make up for the 2 missing bits.      |   |  // [429]
                                                          |   |  // [429]
            Each sub-layer of geometry binaryy tile is    |   |  // [429]
            10 bits. 3 sub-layers total. That makes       |   |  // [429]
            for 30 bits. But this is packed into          |   |  // [429]
            a uint32, so 2 un-accounted for bits.         |   |  // [429]
        :-------------------------------------------------+   |  // [429]
                                                              |  // [429]
    :----------------------------------------: #_MEMBITS_TEST_#  // [429]
                                                                 // [429]
    @bintile@ : Generic 32-bit binary-tile-value                 // [429]
    @bingeom@ : A[ bintile ]from the[ GEOM ]layer.               // [429]
    @binbomb@ : A[ bintile ]from the[ BOMB ]layer.               // [429]
    @binfada@ : A[ bintile ]from the[ FADA ]layer.               // [429]
                                                                 // [429]
    @tilebin@ : YOU_MEAN[ bintile ]                              // [429]
    @geombin@ : YOU_MEAN[ bingeom ]                              // [429]
    @bombbin@ : YOU_MEAN[ binbomb ]                              // [429]
    @fadabin@ : YOU_MEAN[ binfada ]                              // [429]
                                                                 // [429]
    #_FIXTURE_RENDERER_IDEA_# :-------------------------------+  // [429]
                                                              |  // [429]
        @IDEA@ @FIXTURE_IDEA@ @IDEA_FIXTURE@                  |  // [429]
                                                              |  // [429]
        IMGUR_URL[ https://imgur.com/4NROaTh   ]              |  // [429]
        IMGUR_URL[ https://imgur.com/a/Vl4TeHG ]              |  // [429]
                                                              |  // [429]
        Could we make a special levelmap that stores          |  // [429]
        "fixture assets". These assets are drawn              |  // [429]
        scaled down, so we can have a "props layer" of        |  // [429]
        sort where there are fine-grain details that          |  // [429]
        are SMALLER than the player-sized-tiles.              |  // [429]
                                                              |  // [429]
        ( The 64x64 grid of smallest tiles is the )           |  // [429]
        ( player sized tiles.                     )           |  // [429]
    :---------------------------------------------------------+  // [429]
                                                                 // [429]
    @mg0@ : MidGround - SubLayerIndex === 0  ::::::::::::::::::  // [429]
    @bg1@ : BakGround - SubLayerIndex === 1  ::::::::::::::::::  // [429]
    @fg2@ : ForGround - SubLayerIndex === 2  ::::::::::::::::::  // [429]

    #_BINGTEN_# :---------------------------------------------+  // [430]
                                                              |  // [430]
        Binary Geometry Tile, 10-bit value.                   |  // [430]
                                                              |  // [430]
        #_BINGTEN_MASKS_# :--------------------------------+  |  // [430]
                                                           |  |  // [430]
            @c_bingten_am6_msk_l_x@ : SEE[ @am6_msk_l_x@ ] |  |  // [430]
            @c_bingten_am6_msk_l_y@ : SEE[ @am6_msk_l_y@ ] |  |  // [430]
            @c_bingten_am6_msk_m_x@ : SEE[ @am6_msk_m_x@ ] |  |  // [430]
            @c_bingten_am6_msk_m_y@ : SEE[ @am6_msk_m_y@ ] |  |  // [430]
            @c_bingten_am6_msk_ro4@ : SEE[ @am6_msk_ro4@ ] |  |  // [430]
                                                           |  |  // [430]
            #_AM6_AUTOTILE_METHOD_6_BITS_# :-----------+   |  |  // [430]
                                                       |   |  |  // [430]
                @am6@ : Autotile_Methodbits_Sixofthem  |   |  |  // [430]
                @am6_msk@ : AM6 Mask Bits              |   |  |  // [430]
                                                       |   |  |  // [430]
                @am6_msk_l_x@ : AM6_MSK - Latching  X  |   |  |  // [430]
                @am6_msk_l_y@ : AM6_MSK - Latching  Y  |   |  |  // [430]
                @am6_msk_m_x@ : AM6_MSK - Mirroring X  |   |  |  // [430]
                @am6_msk_m_y@ : AM6_MSK - Mirroring Y  |   |  |  // [430]
                @am6_msk_ro4@ : AM6_MSK - RO___tation  |   |  |  // [430]
            :------------------------------------------+   |  |  // [430]
        :--------------------------------------------------+  |  // [430]
                                                              |  // [430]
        #_BINGTEN_SHIFTS_# :-------------------------------+  |  // [430]
                                                           |  |  // [430]
            @c_bingten_am6_shi_l_x@ : SEE[ @am6_shi_l_x@ ] |  |  // [430]
            @c_bingten_am6_shi_l_y@ : SEE[ @am6_shi_l_y@ ] |  |  // [430]
            @c_bingten_am6_shi_m_x@ : SEE[ @am6_shi_m_x@ ] |  |  // [430]
            @c_bingten_am6_shi_m_y@ : SEE[ @am6_shi_m_y@ ] |  |  // [430]
            @c_bingten_am6_shi_ro4@ : SEE[ @am6_shi_ro4@ ] |  |  // [430]
                                                           |  |  // [430]
            #_AM6_AUTOTILE_METHOD_6_BITS_# :-----------+   |  |  // [430]
                                                       |   |  |  // [430]
                @am6@ : Autotile_Methodbits_Sixofthem  |   |  |  // [430]
                @am6_shi@ : AM6 Shift Bits             |   |  |  // [430]
                                                       |   |  |  // [430]
                @am6_shi_l_x@ : AM6_SHI - Latching  X  |   |  |  // [430]
                @am6_shi_l_y@ : AM6_SHI - Latching  Y  |   |  |  // [430]
                @am6_shi_m_x@ : AM6_SHI - Mirroring X  |   |  |  // [430]
                @am6_shi_m_y@ : AM6_SHI - Mirroring Y  |   |  |  // [430]
                @am6_shi_ro4@ : AM6_SHI - RO___tation  |   |  |  // [430]
            :------------------------------------------+   |  |  // [430]
        :--------------------------------------------------+  |  // [430]
                                                              |  // [430]
                                                              |  // [430]
    :---------------------------------------------: #_BINGTEN_#  // [430]
    #_RO_NOT_R0_# :-------------------------------------------+  // [430]
                                                              |  // [430]
        If we are talking about the rotation bits             |  // [430]
        of a value, we use "ro4" , ( __NOT__ "r04" ).         |  // [430]
    :---------------------------------------------------------+  // [430]
                                                                 // [430]
    @bingten@ : BINarytile_Geometry_TEN(bits) :::::::::::::::::  // [430]
              : 10-bit tile value for one of the  :::::::::::::  // [430]
              : sub-layers that is packed into a  :::::::::::::  // [430]
              : geometry-layer u32 binary tile.   :::::::::::::  // [430]

    #_NONEED_2022_# :-----------------------------------------+  // [431]
                                                              |  // [431]
        Originally when I planned this out I thought          |  // [431]
        I would need these constants to get the               |  // [431]
        mirroring bits I was looking for. I was               |  // [431]
        wrong. But I have a hard time deleting                |  // [431]
        code I have already written. I am a source            |  // [431]
        code hoarder. The first step to recovery              |  // [431]
        is admitting I have a problem. The 2nd step           |  // [431]
        to recovery is saying fuck you it's not that          |  // [431]
        big of a deal let me be weird. The first              |  // [431]
        priority is WORKING FUCKING CODE. Everything          |  // [431]
        other than that matters less.                         |  // [431]
                                                              |  // [431]
    :---------------------------------------------------------+  // [431]
    #_DECLARE_FUCKING_VARS_# :--------------------------------+  // [431]
                                                              |  // [431]
        We need to declare some fucking variables.            |  // [431]
        As one does when they do that programming             |  // [431]
        thing. Don't talk to game's journalists kids.         |  // [431]
                                                              |  // [431]
    :---------------------------------------------------------+  // [431]
    #_EXTRACT_BINGTEN_LAYERS_# :------------------------------+  // [431]
                                                              |  // [431]
        Extract the layers of the[ i_u32 ]binary tile         |  // [431]
        value on the geometry layer. I have decided we        |  // [431]
        are going to split up the binary tile into            |  // [431]
        3 sub-layers.                                         |  // [431]
                                                              |  // [431]
        I am hoping this is the right decision.               |  // [431]
                                                              |  // [431]
        We need to make the most of the bits we have          |  // [431]
        and use them to build interesting level               |  // [431]
        designs.                                              |  // [431]
                                                              |  // [431]
    :---------------------------------------------------------+  // [431]
    #_FLIP_MIRROR_BITS_X_# :----------------------------------+  // [431]
                                                              |  // [431]
        If we have asked the fuction to flip the              |  // [431]
        auto-tile mirror bits on the X-axis,                  |  // [431]
        do that here.                                         |  // [431]
    :---------------------------------------------------------+  // [431]
    #_FLIP_MIRROR_BITS_Y_# :----------------------------------+  // [431]
                                                              |  // [431]
        If we have asked the fuction to flip the              |  // [431]
        auto-tile mirror bits on the Y-axis,                  |  // [431]
        do that here.                                         |  // [431]
    :---------------------------------------------------------+  // [431]
    #_MG0_BG1_FG2_SMASH_# :-----------------------------------+  // [431]
                                                              |  // [431]
        Smash all 3 of the BINGTEN sub-layers back            |  // [431]
        together. Don't forget to also include the            |  // [431]
        remainder ( rem ).                                    |  // [431]
                                                              |  // [431]
        BINGTEN_LAYERS[ mg0 , bg1 , fg2 ]                     |  // [431]
    :---------------------------------------------------------+  // [431]
    #_NOT_BITS_YOU_ARE_LOOKING_FOR_# :------------------------+  // [431]
                                                              |  // [431]
        Not the bits you are looking for.                     |  // [431]
        But since I already wrote them here, might as         |  // [431]
        well just keep the error checks here.                 |  // [431]
    :---------------------------------------------------------+  // [431]
    #_ITS_FUCKING_RAW_NG_# :----------------------------------+  // [431]
                                                              |  // [431]
        All of this code I wrote for:                         |  // [431]
        [ F_MIRMAID_AM6_U32_MBX_MBY ]...                      |  // [431]
        But it is WRONG!!! Because we don't need to           |  // [431]
        shift out anything!!! We can just flip the            |  // [431]
        bits in place. The logic here is fucked up            |  // [431]
        because we are treating [ msk_l_x , msk_l_y ]         |  // [431]
        as a "in place" mask and as a "least significant"     |  // [431]
        "bit aligned mask".... It is an "in place"            |  // [431]
        mask. __NOT__ a "least significant bit mask".         |  // [431]
                                                              |  // [431]
        LSB masks are nice for bounds checking, but           |  // [431]
        I think our masks should be "in place" because        |  // [431]
        it allows us to toggle things[ on/off ]in             |  // [431]
        place.                                                |  // [431]
                                                              |  // [431]
        let o_u32 =( 0 );                                     |  // [431]
                                                              |  // [431]
        const msk_l_x = c_bingten_am6_msk_l_x ;               |  // [431]
        const msk_l_y = c_bingten_am6_msk_l_y ;               |  // [431]
                                                              |  // [431]
        const shi_l_x = c_bingten_am6_shi_l_x ;               |  // [431]
        const shi_l_y = c_bingten_am6_shi_l_y ;               |  // [431]
                                                              |  // [431]
        let mg0 ; //: Midground[ BINGTEN ]SubLay:://          |  // [431]
        let bg1 ; //: BakGround[ BINGTEN ]SubLay:://          |  // [431]
        let fg2 ; //: ForGround[ BINGTEN ]SubLay:://          |  // [431]
        let rem ; //: REMaining 2 leftover bits :://          |  // [431]
                                                              |  // [431]
        //:-------:#_DECLARE_FUCKING_VARS_#:[431]://          |  // [431]
        //:#_EXTRACT_BINGTEN_LAYERS_#:[431]:-----://          |  // [431]
                                                              |  // [431]
            mg0 =(    mg0 & c_bingeom_mg0_all_msk );          |  // [431]
            mg0 =(  i_u32>>>c_bingeom_mg0_all_shi );          |  // [431]
                                                              |  // [431]
            bg1 =(    bg1 & c_bingeom_bg1_all_msk );          |  // [431]
            bg1 =(  i_u32>>>c_bingeom_bg1_all_shi );          |  // [431]
                                                              |  // [431]
            fg2 =(    fg2 & c_bingeom_fg2_all_msk );          |  // [431]
            fg2 =(  i_u32>>>c_bingeom_fg2_all_shi );          |  // [431]
                                                              |  // [431]
            rem =(    rem & 0x3 );  //:REMAINDER:://          |  // [431]
            rem =(  i_u32>>> 0  );  //:REMAINDER:://          |  // [431]
                                                              |  // [431]
        //:-----:#_EXTRACT_BINGTEN_LAYERS_#:[431]://          |  // [431]
        //:#_FLIP_MIRROR_BITS_X_#:[431]:---------://          |  // [431]
                                                              |  // [431]
            if( 1 === i_mbx ){                                |  // [431]
                mg0 =( mg0 ^ msk_l_x );                       |  // [431]
                bg1 =( bg1 ^ msk_l_x );                       |  // [431]
                fg2 =( fg2 ^ msk_l_x );                       |  // [431]
            }else                                             |  // [431]
            if( 0 === i_mbx ){                                |  // [431]
                mg0 = mg0 ;;;;;;;;;;;;;                       |  // [431]
                bg1 = bg1 ;;;;;;;;;;;;;                       |  // [431]
                fg2 = fg2 ;;;;;;;;;;;;;                       |  // [431]
            }else{                                            |  // [431]
                ERR("[I_MBX_2022]");                          |  // [431]
            };;                                               |  // [431]
        //:---------:#_FLIP_MIRROR_BITS_X_#:[431]://          |  // [431]
        //:#_FLIP_MIRROR_BITS_Y_#:[431]:---------://          |  // [431]
                                                              |  // [431]
            if( 1 === i_mby ){                                |  // [431]
                mg0 =( mg0 ^ msk_l_y );                       |  // [431]
                bg1 =( bg1 ^ msk_l_y );                       |  // [431]
                fg2 =( fg2 ^ msk_l_y );                       |  // [431]
            }else                                             |  // [431]
            if( 0 === i_mby ){                                |  // [431]
                mg0 = mg0 ;;;;;;;;;;;;;                       |  // [431]
                bg1 = bg1 ;;;;;;;;;;;;;                       |  // [431]
                fg2 = fg2 ;;;;;;;;;;;;;                       |  // [431]
            }else{                                            |  // [431]
                ERR("[I_MBX_2022]");                          |  // [431]
            };;                                               |  // [431]
        //:---------:#_FLIP_MIRROR_BITS_Y_#:[431]://          |  // [431]
        //:#_MG0_BG1_FG2_SMASH_#:[431]:----------://          |  // [431]
                                                              |  // [431]
            o_u32 =(( rem                                     |  // [431]
            | ( mg0 << c_bingeom_mg0_all_shi )                |  // [431]
            | ( bg1 << c_bingeom_bg1_all_shi )                |  // [431]
            | ( fg2 << c_bingeom_fg2_all_shi )                |  // [431]
            )>>>0);                                           |  // [431]
                                                              |  // [431]
        //:----------:#_MG0_BG1_FG2_SMASH_#:[431]://          |  // [431]
                                                              |  // [431]
        return( o_u32 );                                      |  // [431]
                                                              |  // [431]
    :---------------------------------------------------------+  // [431]
    #_MIRROR_VARS_NOT_LATCH_# :-------------------------------+  // [431]
                                                              |  // [431]
        The variables in here should be for the               |  // [431]
        MIRRORING BITS!!! Not the latching bits.              |  // [431]
                                                              |  // [431]
        YES: m_x & m_y                                        |  // [431]
        NO!: l_x & l_y                                        |  // [431]
    :---------------------------------------------------------+  // [431]
    #_BINGEOM_IN_PLACE_# :------------------------------------+  // [431]
                                                              |  // [431]
        My first draft for[ F _ MIRMAID _ AM6_U32_MBX_MBY ]   |  // [431]
        was a piece of shit and overly complex.               |  // [431]
                                                              |  // [431]
        All we need is bit-masks that are IN_PLACE            |  // [431]
        so that we can toggle bits of the 3 sub-layers        |  // [431]
        on/off without having to :                            |  // [431]
                                                              |  // [431]
            1. Shift bits out of the U32 u_bintile.           |  // [431]
            2. Shift bits backk into U32 u_bintile.           |  // [431]
                                                              |  // [431]
    :---------------------------------------------------------+  // [431]
    #_MG0_WITHIN_BINTILE_BITS_# :-----------------------------+  // [431]
                                                              |  // [431]
        MG0 sub-layer bits , as located with larger           |  // [431]
        Uint32 binary-tile (bintile) value.                   |  // [431]
                                                              |  // [431]
    :---------------------------------------------------------+  // [431]
    #_BG1_WITHIN_BINTILE_BITS_# :-----------------------------+  // [431]
                                                              |  // [431]
        BG1 sub-layer bits , as located with larger           |  // [431]
        Uint32 binary-tile (bintile) value.                   |  // [431]
                                                              |  // [431]
    :---------------------------------------------------------+  // [431]
    #_FG2_WITHIN_BINTILE_BITS_# :-----------------------------+  // [431]
                                                              |  // [431]
        FG2 sub-layer bits , as located with larger           |  // [431]
        Uint32 binary-tile (bintile) value.                   |  // [431]
                                                              |  // [431]
    :---------------------------------------------------------+  // [431]
    #_IN_PLACE_SMASH_# :--------------------------------------+  // [431]
                                                              |  // [431]
        If we smash all of the sub-masks together,            |  // [431]
        they should create the larger mask value.             |  // [431]
    :---------------------------------------------------------+  // [431]
    @VISUAL_GALLERY@ : A gallery of images that I am using       // [431]
                     : as "image notes" to remind me of what     // [431]
                     : needs to be done in the future.           // [431]
    @SCREENSHOTNOTE@ : A single screen shot used as a note.      // [431]
                     : As apposed to a note of text on           // [431]
                     : a napkin.                                 // [431]
    @DIRECT_LINK_SS@ : Direct link to raw .PNG SCREEN_SHOT.      // [431]
                     : "SS" === "Screen Shot". Imgur links       // [431]
                     : tend to go to galleries with text         // [431]
                     : description. Direct link can be used      // [431]
                     : as "CDN" , though this is against         // [431]
                     : imgur's terms of service.                 // [431]

    #_MTI_TOG_# :---------------------------------------------+  // [434]
                                                              |  // [434]
        @MIT_TOG@ : YOU_MEAN[ MTI_TOG ]                       |  // [434]
        @MTI_TOG@ : Mirror_Tile_Internals TOGgle              |  // [434]
                                                              |  // [434]
        When using the mirror brush, do we want to mirror     |  // [434]
        the INTERNAL AUTO TILE MIRROR BITS?                   |  // [434]
                                                              |  // [434]
        When mirror brush is on, the PLOT POINTS are          |  // [434]
        always mirrored, but we can toggle on/off             |  // [434]
        whether or not we also want to mirror the             |  // [434]
        internals of the tiles.                               |  // [434]
                                                              |  // [434]
        Mirroring the internals of our tiles gives us         |  // [434]
        100% visually summetric output, but it also           |  // [434]
        results in a lot more seams, which can be             |  // [434]
        undesirable.                                          |  // [434]
                                                              |  // [434]
    :---------------------------------------------------------+  // [434]
    #_TOGGLE_MIR_AM6_# :--------------------------------------+  // [434]
                                                              |  // [434]
        Toggle whether or not we want to mirror the           |  // [434]
        "AM6" auto tiling method bits within our              |  // [434]
        binary tile or not when using the mirror brush.       |  // [434]
    :---------------------------------------------------------+  // [434]

    #_K_C_DENSE_ROT_# :---------------------------------------+  // [435]
                                                              |  // [435]
        Kitty Corner Dense Rotation.                          |  // [435]
        To get "Dense Mirroring" when doing bilateral         |  // [435]
        symmetry, we are gointo cheat and take all of         |  // [435]
        the bilateral mirror points and rotate copies         |  // [435]
        of them by 90 degrees counter clockwise.              |  // [435]
    :---------------------------------------------------------+  // [435]
                                                                 // [435]
    @AM6_U32_ROT_C_W@ : Rotate BinTile's AM6 bits ClockWise      // [435]
    @AM6_U32_ROT_NOT@ : Rotate BinTile's AM6 bits NO_TRANS       // [435]
    @NO_TRANS@ : No Transformation.                              // [435]
                                                                 // [435]
    #_AUTO_TILE_ROTATING_# :----------------------------------+  // [435]
                                                              |  // [435]
        Helper functions to rotate the rotation flags of      |  // [435]
        our auto tiles by manipulating the "AM6" bits         |  // [435]
        within our binary tile ( u_bintile ).                 |  // [435]
                                                              |  // [435]
        #_BINTILE_AUTO_ROTATE_DOIT_# :---------------------+  |  // [435]
                                                           |  |  // [435]
            Section actually dedicated to rotation of      |  |  // [435]
            the auto tile internals.                       |  |  // [435]
        :--------------------------------------------------+  |  // [435]
        #_BINTILE_AUTO_ROTATE_NOOP_# :---------------------+  |  // [435]
                                                           |  |  // [435]
            Section that does a "NO-OPERATION" rotation.   |  |  // [435]
            In otherwords, a do-nothing transform for      |  |  // [435]
            when our code is configured to use the         |  |  // [435]
            mirror brush, but to NOT_MODIFY the            |  |  // [435]
            auto tile internals.                           |  |  // [435]
                                                           |  |  // [435]
            In other words, only transform plot-points,    |  |  // [435]
            don't transform the tiles themselves.          |  |  // [435]
        :--------------------------------------------------+  |  // [435]
                                                              |  // [435]
    :----------------------------------: #_AUTO_TILE_ROTATING_#  // [435]
                                                                 // [435]
    @MG0_TEN@ : MG0 bits should be 10 total. ::::::::::::::::::  // [435]
    @BG1_TEN@ : BG1 bits should be 10 total. ::::::::::::::::::  // [435]
    @FG2_TEN@ : FG2 bits should be 10 total. ::::::::::::::::::  // [435]
                                                                 // [---]
    @MIR_PTS@ : MIRror   PoinTS :::::::::::::::::::::::::::::::  // [435]
    @ROT_PTS@ : ROTation PoinTS :::::::::::::::::::::::::::::::  // [435]
                                                                 // [435]
    #_HACKISH_REBASE_2022_10_06_# :---------------------------+  // [435]
                                                              |  // [435]
        We wrote too much code and it could not be            |  // [435]
        easily summarized in the time allotted for our        |  // [435]
        ADVANCED CODE REVIEW playlist. Code has been          |  // [435]
        retroactively removed from 3 sites bearing the        |  // [435]
        [ _HACKISH_REBASE_2022_10_06 ]tag.                    |  // [435]
                                                              |  // [435]
        This code will be added back in in video #4_3_6.      |  // [435]
                                                              |  // [435]
        Currently it is stuffed away in :                     |  // [435]
        PATH[ <AIM>/DOC/FAKING_IT/436._ ]                     |  // [435]
    :---------------------------------------------------------+  // [435]

    #_RO4_EXTRACTORS_# :--------------------------------------+  // [437]
                                                              |  // [437]
        Rotation Code Extractors for the 3 geometry           |  // [437]
        binary tile sub-layers.                               |  // [437]
    :---------------------------------------------------------+  // [437]
    #_RO4_GET_# :---------------------------------------------+  // [437]
                                                              |  // [437]
        TAG[ _GET_RO4_ | GET_RO4 | RO4_GET | _RO4_GET_ ]      |  // [437]
                                                              |  // [437]
        Extract the non-transformed rotation codes            |  // [437]
        that are packed into the geometry layer               |  // [437]
        uint32 binary tile.                                   |  // [437]
    :---------------------------------------------------------+  // [437]
    #_RO4_ROTCLOK_# :-----------------------------------------+  // [437]
                                                              |  // [437]
        100 videos ago we were messing with rotation of       |  // [437]
        autotiles, I was pretty sure that incrementing        |  // [437]
        "ro4" value would cause CLOCKWISE rotation,           |  // [437]
        but had to check.                                     |  // [437]
                                                              |  // [437]
        You can check for yourself:                           |  // [437]
        Look for[ ***rotclok*** ]reference in code.           |  // [437]
        Prooves[ ro4 ]rotates[ CLOCKWISE ].                   |  // [437]
                                                              |  // [437]
        CLOCKWISE rotation of auto-tiles causes the           |  // [437]
        tile meta-structure to rotate COUNTER-CLOCKWISE.      |  // [437]
                                                              |  // [437]
        @_RO4_ADD_CLOCKWISE_@ : ( ro4++ )===>CLOCKWISE_ROT    |  // [437]
        #_RO4_ADD_CLOCKWISE_# :----------------------------+  |  // [437]
                                                           |  |  // [437]
            Noting to myself that "ro4++" is a CLOCKWISE   |  |  // [437]
            rotation so :                                  |  |  // [437]
                                                           |  |  // [437]
            ( mg0_ro4++ )===> GSL_ROT_CLOCKWISE            |  |  // [437]
            ( bg1_ro4++ )===> GSL_ROT_CLOCKWISE            |  |  // [437]
            ( fg2_ro4++ )===> GSL_ROT_CLOCKWISE            |  |  // [437]
                                                           |  |  // [437]
            @GSL_ROT@ : GeomSubtileLayer_ROTation          |  |  // [437]
        :--------------------------------------------------+  |  // [437]
    :---------------------------------------------------------+  // [437]
    #_ERASE_OLD_RO4_# :---------------------------------------+  // [437]
                                                              |  // [437]
        Before we can pack the modified rotation codes        |  // [437]
        back in, we need to erase the old rotation            |  // [437]
        codes. We can do this by using bitwise AND( & )       |  // [437]
        in combination with a NOTTED( ~ )mask of              |  // [437]
        where the value is bitpacked into the U32.            |  // [437]
    :---------------------------------------------------------+  // [437]
    //:#_INSERT_NEW_RO4_# :-----------------------------------+  // [437]
                                                              |  // [437]
        Insert new rotation value for our auto tiles.         |  // [437]
        WE only need to shift+smash them into place.          |  // [437]
        ( Bitwise SMASH is my term for bitwise OR )           |  // [437]
                                                              |  // [437]
        The slots for where[ ro4 ]values are stored have      |  // [437]
        already been deleted, hence why we only need          |  // [437]
        to SHIFT_AND_SMASH them into place.                   |  // [437]
    :---------------------------------------------------------+  // [437]
    #_RETURN_CLOCKWISE_ROTATED_RO4_# :------------------------+  // [437]
                                                              |  // [437]
        Return the rotated clockwise RO4 that is packed       |  // [437]
        into the uint32. Technically there are THREE          |  // [437]
        rotated[ ro4 ]values. Because 3 sub-layers            |  // [437]
        exist within the geometry layer binary tile.          |  // [437]
    :---------------------------------------------------------+  // [437]

    @mkr@ : Mirrored_Kitty_Corner? TRY_ROTATED[ rkx__OR__rky ]   // [438]
    @kmx@ : KittyMirroredX ?       TRY_ROTATED[ rkx__OR__rky ]   // [438]
    @kmy@ : KittYMirroredY ?       TRY_ROTATED[ rkx__OR__rky ]   // [438]
    @mkx@ : MirroredKittyX ?       TRY_ROTATED[ rkx__OR__rky ]   // [438]
    @mky@ : MirroredKittyY ?       TRY_ROTATED[ rkx__OR__rky ]   // [438]
                                                                 // [438]
    #_LOAD_PLOT_POINT_RKX_RKY_# :-----------------------------+  // [439][---]
                                                              |  // [439][---]
        This tag is too specific. Removing "RXK_RKY"          |  // [439][---]
        part from it where it is used.                        |  // [439][---]
                                                              |  // [439][---]
    :---------------------------------------------------------+  // [439][---]
    #_LOAD_PLOT_POINT_# :-------------------------------------+  // [439][438]
                                                              |  // [439][438]
        Load the mirror-brush transformed plot point          |  // [439][438]
        into our paired array of plot points.                 |  // [439][438]
                                                              |  // [439][438]
    :---------------------------------------------------------+  // [439][438]
                                                                 // [438]
    @_B_X_D_@ : Bilateral_X_Dense , Code Section Body.           // [438]

    @rbx@ : Rotated_Bilateral_X ? MAYBE_TRY[ rkx__OR__rky ]      // [439]
    @rby@ : Rotated_Bilateral_Y ? MAYBE_TRY[ rkx__OR__rky ]      // [439]
                                                                 // [439]
    #_WAYDSB_# :----------------------------------------------+  // [439]
                                                              |  // [439]
        @WAYDSB@ : What_Are_You_Doing_Step_Bro ?              |  // [439]
                                                              |  // [439]
        This section is diagraming the input plot point       |  // [439]
        and the output plot point.                            |  // [439]
                                                              |  // [439]
        [d] : Is the original input plot point in diagram.    |  // [439]
        [m] : Is the various LIGHT_MIRROR bilateral plots.    |  // [439]
        [_] : Is the DENSE_MIRROR points not concerned with.  |  // [439]
        [r] : Is the DENSE_MIRROR point that is being         |  // [439]
            : created in this block of code.                  |  // [439]
    :---------------------------------------------------------+  // [439]
                                                                 // [439]
    @_B_Y_D_@ : Bilateral_Y_Dense , Code Section Body.           // [439]

    #_NON_TRANSFORMED_DENSE_# :-------------------------------+  // [440]
                                                              |  // [440]
        I suspect the "dense mode" transformation will        |  // [440]
        have to change depending on if we are mirroring       |  // [440]
        on X,Y or both... Or maybe we only do the             |  // [440]
        "dense mode" transform on the non-transformed         |  // [440]
        point when in [ _NTD_ALL_ ] block and otherwise       |  // [440]
        do nothing? I actually do not know the answer         |  // [440]
        as of writing this.                                   |  // [440]
                                                              |  // [440]
        #_NTD_ALL_# :--------------------------------------+  |  // [440]
                                                           |  |  // [440]
            @NTD_ALL@ : NonTransformedDense - ALL (X&Y)    |  |  // [440]
                                                           |  |  // [440]
        :--------------------------------------------------+  |  // [440]
        #_NTD_O_X_# :--------------------------------------+  |  // [440]
                                                           |  |  // [440]
            @NTD_O_X@ : NonTransformedDense - Only X Axis  |  |  // [440]
        :--------------------------------------------------+  |  // [440]
        #_NTD_O_Y_# :--------------------------------------+  |  // [440]
                                                           |  |  // [440]
            @NTD_O_Y@ : NonTransformedDense - Only Y Axis  |  |  // [440]
        :--------------------------------------------------+  |  // [440]
        #_NTD_NOT_# :--------------------------------------+  |  // [440]
                                                           |  |  // [440]
            @NTD_NOT@ : NonTransformedDense , NOT          |  |  // [440]
                      : "NOT" as in "Do nothing"           |  |  // [440]
        :--------------------------------------------------+  |  // [440]
    :---------------------------------------------------------+  // [440]
    #_I_DONT_KNOW_IF_STUFF_GOES_HERE_# :----------------------+  // [440]
                                                              |  // [440]
        I don't know enough about the problem to know         |  // [440]
        if I should write code in these [ blocks / scopes ].  |  // [440]
    :---------------------------------------------------------+  // [440]
    #_WTF_ROTATION_# :----------------------------------------+  // [440]
                                                              |  // [440]
        It works, but I don't know why. The rotations         |  // [440]
        here make no sense. I should be:                      |  // [440]
                                                              |  // [440]
            1. Rotating Plot Point Clockwise.                 |  // [440]
            2. Rotating Internals 90 COUNTER-CLOCKWISE.       |  // [440]
                                                              |  // [440]
        Instead I am:                                         |  // [440]
                                                              |  // [440]
            1. Rotating Plot Point COUNTER-CLOCKWISE          |  // [440]
            2. Rotating Internals 90 COUNTER-CLOCKWISE        |  // [440]
                                                              |  // [440]
        VISUAL RESULTS :                                      |  // [440]
                                                              |  // [440]
            1. Rotation CLOCKWISE                             |  // [440]
            2. Internal Tile Rotation COUNTER-CLOCKWISE.      |  // [440]
                                                              |  // [440]
        #_WTF_ROT_DIA_# : I inlined a diagram of the          |  // [440]
                        : input plot point and the            |  // [440]
                        : outputted plot point.               |  // [440]
                                                              |  // [440]
        @_WTF_ROT_DIA_@ : WhatTheFuck_ROTation_DIAgram        |  // [440]
                                                              |  // [440]
    :---------------------------------------------------------+  // [440]
    #_PREVIEWABLE_LEVELPACK_FILE_FORMAT_# :-------------------+  // [440]
                                                              |  // [440]
        +----------------------+--------------------------+   |  // [440]
        |    768_x_768.PNG     | Altered For Readability: |   |  // [440]
        +----------------------+--------------------------+   |  // [440]
        |                      |                          |   |  // [440]
        |  |<---- 0768 ---->|  |  |<------ 0768 ------>|  |   |  // [440]
        |  |<---- 0512 ---->|  |  |<------ 0512 ------>|  |   |  // [440]
        |  [ ][ ][ ][ ][ ][ ]  |  [ ]  [ ][ ][ ][ ]  [ ]  |   |  // [440]
        |  [ ][ ][ ][ ][ ][ ]  |                          |   |  // [440]
        |  [ ][ ][ ][ ][ ][ ]  |  [ ]  [ ][ ][ ][ ]  [ ]  |   |  // [440]
        |  [ ][ ][ ][ ][ ][ ]  |  [ ]  [ ][ ][ ][ ]  [ ]  |   |  // [440]
        |  [ ][ ][ ][ ][ ][ ]  |  [ ]  [ ][ ][ ][ ]  [ ]  |   |  // [440]
        |  [ ][ ][ ][ ][ ][ ]  |  [ ]  [ ][ ][ ][ ]  [ ]  |   |  // [440]
        |                      |                          |   |  // [440]
        |                      |  [ ]  [ ][ ][ ][ ]  [ ]  |   |  // [440]
        |                      |                          |   |  // [440]
        +----------------------+--------------------------+   |  // [440]
        |                                                 |   |  // [440]
        |"[ ]" ===( 512 / 4 )=== 128 === 128_x_128 pixels.|   |  // [440]
        |                                                 |   |  // [440]
        +----------------------+--------------------------+   |  // [440]
        |                      |                          |   |  // [440]
        |  |<---- 0768 ---->|  |  |<---- 0768 ---->|      |   |  // [440]
        |  |<---- 0512 ---->|  |  |<---- 0512 ---->|      |   |  // [440]
        |  [1][2][3][4][5][6]  |  [1][2][3][4][5][6]      |   |  // [440]
        |  [0][ ][ ][ ][ ][7]  |  [0]            [7]      |   |  // [440]
        |  [9][ ][ ][ ][ ][8]  |  [9]            [8]      |   |  // [440]
        |  [8][ ][ ][ ][ ][9]  |  [8]            [9]      |   |  // [440]
        |  [7][ ][ ][ ][ ][0]  |  [7]            [0]      |   |  // [440]
        |  [6][5][4][3][2][1]  |  [6][5][4][3][2][1]      |   |  // [440]
        |                      |                          |   |  // [440]
        |  4x4 (16)Inner Cells |  20 Perimeter Cells      |   |  // [440]
        |                      |                          |   |  // [440]
        +----------------------+--------------------------+   |  // [440]
                                                              |  // [440]
        So, with a 768_x_768 image, we can encode the         |  // [440]
        actual level data in the PERIMETER_CELLS and          |  // [440]
        render a screenshot in the 512x512 in the center.     |  // [440]
                                                              |  // [440]
        Do this with a "Render To Texture" that uses          |  // [440]
        whatever the currently active shader is.              |  // [440]
                                                              |  // [440]
        LOOK_AT_THIS_COOL_IMAGE[ i.imgur.com/XQJS8VL.png ]    |  // [440]
    :---------------------------------------------------------+  // [440]

    #_BAK_AND_NEX_# :-----------------------------------------+  // [441]
    #_NEX_AND_BAK_# :-----------------------------------------+  // [441]
                                                              |  // [441]
        Functions to help me go to the                        |  // [441]
        previous/back (BAK) or next (NEX) enumeration         |  // [441]
        in a set of enumerations that are stored within       |  // [441]
        my editor object. We've written a lot of this         |  // [441]
        code by hand, time for a re-usable function.          |  // [441]
    :---------------------------------------------------------+  // [441]
    :---------------------------------------------------------+  // [441]
    #_BETTER_LEVELPACK_FILE_FORMAT_# :------------------------+  // [441]
    #_BETTER_HOTEL_FILE_FORMAT_# :----------------------------+  // [441]
                                                              |  // [441]
        TAG[ _PREVIEWABLE_LEVELPACK_FILE_FORMAT_ ]            |  // [441]
                                                              |  // [441]
                                                              |  // [441]
        |<----------896---------->|                           |  // [441]
        |     |<----640---->|     |                           |  // [441]
        |     |<-(128 * 5)->|     |                           |  // [441]
        [ ]   [ ][ ][ ][ ][ ]   [ ]   Each tile in levelpack  |  // [441]
                                      is rendered as 2x2      |  // [441]
        [ ]   [ ][ ][ ][ ][ ]   [ ]   cluster of pixels.      |  // [441]
        [ ]   [ ][ ][ ][ ][ ]   [ ]                           |  // [441]
        [ ]   [ ][ ][ ][ ][ ]   [ ]   Use RGB channels for    |  // [441]
        [ ]   [ ][ ][ ][ ][ ]   [ ]   which layer is          |  // [441]
        [ ]   [ ][ ][ ][ ][ ]   [ ]   present.                |  // [441]
                                                              |  // [441]
        [ ]   [ ][ ][ ][ ][ ]   [ ]                           |  // [441]
                                                              |  // [441]
                                                              |  // [441]
        GREEN CHANNEL : Geometry Layer                        |  // [441]
        BLUE  CHANNEL : Bomb     Layer                        |  // [441]
        RED   CHANNEL : Fada     Layer                        |  // [441]
                                                              |  // [441]
        [X]   [X][X][X][X][X]   [X]   <--  7 128x128[X]Cells  |  // [441]
               _____________                                  |  // [441]
        [X]   [             ]   [X]   <--  9 128x128[X]Cells  |  // [441]
        [X]   [             ]   [X]   <-- 11 128x128[X]Cells  |  // [441]
        [X]   [             ]   [X]   <-- 13 128x128[X]Cells  |  // [441]
        [X]   [             ]   [X]   <-- 15 128x128[X]Cells  |  // [441]
        [X]   [_____________]   [X]   <-- 17 128x128[X]Cells  |  // [441]
                                                              |  // [441]
        [ ]   [ ][ ][ ][ ][ ]   [ ]   Need 16 "[X]" cells     |  // [441]
        ^                         ^   to re-build 512_x_512   |  // [441]
        +------------+------------+   levelpack dataset.      |  // [441]
                     |                                        |  // [441]
            Human Readable Title Here?                        |  // [441]
                                                              |  // [441]
    :----------------------------: #_BETTER_HOTEL_FILE_FORMAT_#  // [441]
    :------------------------: #_BETTER_LEVELPACK_FILE_FORMAT_#  // [441]
    #_X_DENSE_MIRROR_# :--------------------------------------+  // [441]
                                                              |  // [441]
        [P] : Plot Point                                      |  // [441]
        [M] : Normal X-Mirror Point.                          |  // [441]
        [E] : Extended Mirror Points For Dense Mode.          |  // [441]
            : The "[E]" point moves away from "Y-Axis"        |  // [441]
                                                              |  // [441]
                                                              |  // [441]
                                                              |  // [441]
                    ^ [E][ ][ ][ ][ ][ ][E] ^                 |  // [441]
                    ^ [ ]      [ ]      [ ] ^                 |  // [441]
                    ^ [ ]      [ ]      [ ] ^                 |  // [441]
                    ^ [M][ ][ ][ ][ ][ ][P] ^                 |  // [441]
                               [ ]                            |  // [441]
                               [ ]                            |  // [441]
                               [ ]                            |  // [441]
                [ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ]             |  // [441]
                                                              |  // [441]
    :---------------------------------------------------------+  // [441]
    #_Y_DENSE_MIRROR_# :--------------------------------------+  // [441]
                                                              |  // [441]
        Same idea as "X_DENSE_MIRROR" but flip around         |  // [441]
        what happens on which axis.                           |  // [441]
    :---------------------------------------------------------+  // [441]
    #_PERLIN_NOISE_VS_PUTIN_NOISE_# :-------------------------+  // [441]
    #_PUTIN_NOISE_VS_PERLIN_NOISE_# :-------------------------+  // [441]
                                                              |  // [441]
        @IDEA@ / @IDEA_PUTIN@ / @PUTIN_IDEA@                  |  // [441]
        @IDEA@ / @IDEA_PERLIN@/ @PERLIN_IDEA@                 |  // [441]
                                                              |  // [441]
        Sudo-lecture video comparing perlin noise to          |  // [441]
        putin noise. Loading image of putin's forhead         |  // [441]
        and image of perlin noise to see what gets            |  // [441]
        better results.                                       |  // [441]
    :---------------------------------------------------------+  // [441]
    :---------------------------------------------------------+  // [441]
    
    #_AUTO_MIRROR_MODE_ALTERNATE_# :--------------------------+  // [442]
                                                              |  // [442]
        @VID_IDEA@    ::::::::::::::::::::::::::::::::::::::::|  // [442]
        @VIDEOIDEA@   ::::::::::::::::::::::::::::::::::::::::|  // [442]
        @VIDEO_IDEA@  ::::::::::::::::::::::::::::::::::::::::|  // [442]
        @VIDEA@       ::::::::::::::::::::::::::::::::::::::::|  // [442]
        @VIDIDEA@     ::::::::::::::::::::::::::::::::::::::::|  // [442]
                                                              |  // [442]
        @IDEA@ / @IDEA_ALTERNATE@ / @ALTERNATE_IDEA@          |  // [442]
                                                              |  // [442]
        Have a "F_MIRMAID_TIK()" update function.             |  // [442]
        If "Mirror Mode Alternation" is turned on,            |  // [442]
        every few frames the mirror mode will change.         |  // [442]
                                                              |  // [442]
        This will result in more interesting results          |  // [442]
        when drawing.                                         |  // [442]
                                                              |  // [442]
        Maybe create an array that dictates a pattern         |  // [442]
        of which mirror modes you swap between                |  // [442]
        when mirror mode alternation is one.                  |  // [442]
                                                              |  // [442]
        TAG[ _MIRROR_ALTERNATION_ ]                           |  // [442]
        TAG[ _ALTERNATION_MIRROR_ ]                           |  // [442]
        TAG[ _MIRROR_ALTERNATE_   ]                           |  // [442]
        TAG[ _ALTERNATE_MIRROR_   ]                           |  // [442]
    :---------------------------------------------------------+  // [442]
    #_SINGLE_AXIS_X_DENSE_# :---------------------------------+  // [442]
                                                              |  // [442]
        Code for dense mode on X axis when ONLY THE           |  // [442]
        X AXIS IS BEING MIRRORED ON.                          |  // [442]
    :---------------------------------------------------------+  // [442]
    #_SINGLE_AXIS_Y_DENSE_# :---------------------------------+  // [442]
                                                              |  // [442]
        Code for dense mode on Y axis when ONLY THE           |  // [442]
        Y AXIS IS BEING MIRRORED ON.                          |  // [442]
    :---------------------------------------------------------+  // [442]
    #_SINGLE_AXIS_MIRROR_DENSE_# :----------------------------+  // [442]
                                                              |  // [442]
        Only enter this branch if we are mirroring on         |  // [442]
        exclusively the X or Y axis.                          |  // [442]
                                                              |  // [442]
        AND THE DENSE MODE FLAG IS SELECTED FOR AND SET!!!    |  // [442]
    :---------------------------------------------------------+  // [442]
    #_SAD_LPP_# :---------------------------------------------+  // [442]
                                                              |  // [442]
        @SAD_LPP@ : SingleAxisDense - LoadPlotPoint           |  // [442]
    :---------------------------------------------------------+  // [442]
    @o_k_sadense_lpp@ : OK? sadense - Load_Plot_Point ?          // [442]
    @sadense@ ::::::::: Single_Axis_DENSE (mirroring)            // [442]
    @lpp@ ::::::::::::: Load_Plot_Point ?                        // [442]

    #_BOXXY_PLOT_# :------------------------------------------+  // [443]
                                                              |  // [443]
        #_DIST_FROM_HOR_# :--------------------------------+  |  // [443]
                               TAG[ SQUARE_MIRROR_DIR_VER ]|  |  // [443]
            [P] : Plot Point                               |  |  // [443]
            [X] : Standard X-Mirror Point                  |  |  // [443]
            [B] : Boxifier Extender Mirrors.               |  |  // [443]
                                                           |  |  // [443]
                ^ [B][ ][ ][ ][ ][ ][B] ^                  |  |  // [443]
                ^ [ ]      [ ]      [ ] ^                  |  |  // [443]
                ^ [ ]      [ ]      [ ] ^                  |  |  // [443]
                ^ [ ][ ][ ][ ][ ][ ][ ] ^                  |  |  // [443]
                ^ [ ]      [ ]      [ ] ^                  |  |  // [443]
                ^ [ ]      [ ]      [ ] ^                  |  |  // [443]
                ^ [P][ ][ ][ ][ ][ ][X] ^                  |  |  // [443]
                           [ ]                             |  |  // [443]
                           [ ]                             |  |  // [443]
                           [ ]                             |  |  // [443]
            [ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ] <-- JOT      |  |  // [443]
            [ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ] <-- ZEN      |  |  // [443]
                           [ ]                             |  |  // [443]
                           [ ]                             |  |  // [443]
                           [ ]                             |  |  // [443]
                V [P][ ][ ][ ][ ][ ][X] V                  |  |  // [443]
                V [ ]      [ ]      [ ] V                  |  |  // [443]
                V [ ]      [ ]      [ ] V                  |  |  // [443]
                V [ ][ ][ ][ ][ ][ ][ ] V                  |  |  // [443]
                V [ ]      [ ]      [ ] V                  |  |  // [443]
                V [ ]      [ ]      [ ] V                  |  |  // [443]
                V [B][ ][ ][ ][ ][ ][B] V                  |  |  // [443]
                                                           |  |  // [443]
        :--------------------------------------------------+  |  // [443]
        #_DIST_FROM_VER_# :--------------------------------+  |  // [443]
                               TAG[ SQUARE_MIRROR_DIR_HOR ]|  |  // [443]
            [P] : Plot Point                               |  |  // [443]
            [Y] : Standard Y-Mirror Point                  |  |  // [443]
            [B] : Boxifier Extender Mirrors.               |  |  // [443]
                                                           |  |  // [443]
                              [ ][ ]                       |  |  // [443]
                              [ ][ ]                       |  |  // [443]
                              [ ][ ]                       |  |  // [443]
            < < < < < < < <   [ ][ ]   > > > > > > > >     |  |  // [443]
            [B][ ][ ][ ][P]   [ ][ ]   [P][ ][ ][ ][B]     |  |  // [443]
            [ ]   [ ]   [ ]   [ ][ ]   [ ]   [ ]   [ ]     |  |  // [443]
            [ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ][ ]     |  |  // [443]
            [ ]   [ ]   [ ]   [ ][ ]   [ ]   [ ]   [ ]     |  |  // [443]
            [B][ ][ ][ ][Y]   [ ][ ]   [Y][ ][ ][ ][B]     |  |  // [443]
            < < < < < < < <   [ ][ ]   > > > > > > > >     |  |  // [443]
                              [ ][ ]                       |  |  // [443]
                              [ ][ ]                       |  |  // [443]
                              [ ][ ]                       |  |  // [443]
                             /      \                      |  |  // [443]
                    @mid_jot@        @mid_zen@             |  |  // [443]
    :------------------------------------------------------+  |  // [443]
                                                              |  // [443]
    :------------------------------------------: #_BOXXY_PLOT_#  // [443]
    #_GET_DIRECTION_#(BOXXY_PLOT):----------------------------:  // [443]
                                                              |  // [443]
                             @DIR_TOP@                        |  // [443]
                                 +                            |  // [443]
                                 |                            |  // [443]
                                 |                            |  // [443]
                              e-----e                         |  // [443]
                              |  |  |                         |  // [443]
                              |  |  |                         |  // [443]
                e-------o     o-----o     o-------e           |  // [443]
                |       |        |        |       |           |  // [443]
    @DIR_LEF@+--|-------|--------+--------|-------|--+@DIR_RIG@  // [443]
                |       |        |        |       |           |  // [443]
                e-------o     o-----o     o-------e           |  // [443]
                              |  |  |                         |  // [443]
                              |  |  |                         |  // [443]
                              e-----e                         |  // [443]
                                 |                            |  // [443]
                                 |                            |  // [443]
                                 +                            |  // [443]
                             @DIR_BOT@                        |  // [443]
                                                              |  // [443]
        [o] : Original_Plot_Point (Or mirrored across axis)   |  // [443]
        [e] : Extended/Project/New Plot Points, that          |  // [443]
            : create the corners of our [ box/square ]        |  // [443]
            :                           [ square/box ]        |  // [443]
                                                              |  // [443]
    :---------------------------------------------------------+  // [443]
    #_GET_BOXSPAN_#(BOXXY_PLOT):------------------------------:  // [443]
                                                              |  // [443]
        Get the length of one of the edges of our box,        |  // [443]
        and then calculate the jump distances to the          |  // [443]
        [ left || right || up || down ] from the current      |  // [443]
        plot point depending on which direction we are        |  // [443]
        projecting our box shape in.                          |  // [443]
                                                              |  // [443]
    :---------------------------------------------------------+  // [443]
    #_SQUARE_MIRROR_#(BOXXY_PLOT):----------------------------+  // [443]
                                                              |  // [443]
        SEE[ SQUARE_MIRROR_DIR_VER ]( Direction Vertical   )  |  // [443]
        SEE[ SQUARE_MIRROR_DIR_HOR ]( Direction Horizontal )  |  // [443]
                                                              |  // [443]
        We are going to create 4 corners of a [box/square].   |  // [443]
        The square side length will be the distance from      |  // [443]
        the original plot point to the standard mirroring     |  // [443]
        point across the mirror_line_axis.                    |  // [443]
                                                              |  // [443]
        The 2 extra generated points of the box will          |  // [443]
        be either in direction :                              |  // [443]
                                                              |  // [443]
            TOP & BOTTOM : IF : [ _SQMIR_TOP_BOT_ ]           |  // [443]
            LEFT & RIGHT : IF : [ _SQMIR_LEF_RIG_ ]           |  // [443]
                                                              |  // [443]
    :---------------------------------------------------------+  // [443]
                                                                 // [443]
    @DIR_TOP@ : DIRection - towards TOP          ::::::::::::::  // [443]
    @DIR_BOT@ : DIRection - towards BOTTOM       ::::::::::::::  // [443]
    @DIR_LEF@ : DIRection - towards LEFt side    ::::::::::::::  // [443]
    @DIR_RIG@ : DIRection - towards RIGht side   ::::::::::::::  // [443]
                                                 ::::::::::::::  // [443]
    @DIR_UPP@ : YOU_MEAN[ DIR_TOP ]              ::::::::::::::  // [443]
    @DIR_DOW@ : YOU_MEAN[ DIR_BOT ]              ::::::::::::::  // [443]
                                                                 // [443]
    @ABOVAX@  : ABOve - Axis - X       ::::::::::::::::::::::::  // [443]
    @BELVAX@  : BELow - Axis - X       ::::::::::::::::::::::::  // [443]
    @LEFOYA@  : LEFt  - Of - Y - Axis  ::::::::::::::::::::::::  // [443]
    @RIGOYA@  : RIGht - Of - Y - Axis  ::::::::::::::::::::::::  // [443]
                                                                 // [443]
    @LEF_MID@: LEFt__of_Midline :::::::::::::::::::::::::::::::  // [443]
    @RIG_MID@: RIGht_of_Midline :::::::::::::::::::::::::::::::  // [443]
    @ABO_MID@: Above_Midline ::::::::::::::::::::::::::::::::::  // [443]
    @BEL_MID@: Below_Midline ::::::::::::::::::::::::::::::::::  // [443]
    
    #_OCD_____________2022_11_08_# :--------------------------+  // [444]
                                                              |  // [444]
        Making absolu-fucking-lootly-sure that                |  // [444]
        both blocks of code are exactly                       |  // [444]
        [ symmetrical/analogous ]in their spacing.            |  // [444]
        NOT ONE SINGLE FUCKING CHARACTER OFF!                 |  // [444]
                                                              |  // [444]
        If we made transparent slides of both blocks          |  // [444]
        of code we could visually diff these code             |  // [444]
        blocks by overlaying them and multiplying             |  // [444]
        the two layers together in [photoshop||paint.net].    |  // [444]
                                                              |  // [444]
    :---------------------------------------------------------+  // [444]

    #_DENSEBIT_GTC_BINTILE_# :--------------------------------+  // [445]
                                                              |  // [445]
        Dense Bit Of[ xyd ]mirror flag bits ,                 |  // [445]
        global_tile_coordinate(GTC) and our                   |  // [445]
        binary-tile ( bintile / u32 ) input.                  |  // [445]
    :---------------------------------------------------------+  // [445]
    #_MAX_GTC_AND_LIN_# :-------------------------------------+  // [445]
                                                              |  // [445]
        MAXimum GTC and Loading INdex                         |  // [445]
        GTC === [ GTX , GTY ], C == Coordinate (coord==X|Y)   |  // [445]
                                                              |  // [445]
        Loading index used to populate our                    |  // [445]
        triple-parallel array.                                |  // [445]
    :---------------------------------------------------------+  // [445]
    $_LAST_GTX_GTY_DISCARDED_$ :------------------------------+  // [445]
                                                              |  // [445]
        Getting setup to enter and exit a loop is very        |  // [445]
        difficult for some reason. Always has been.           |  // [445]
        The last [x,y,u] coordinate here is discarded         |  // [445]
        because it is not needed.                             |  // [445]
                                                              |  // [445]
        COORDINATE[ gtx , gty , u32 ]                         |  // [445]
        GTX : Global Tile X                                   |  // [445]
        GTY : Global Tile Y                                   |  // [445]
        U32 : Uint32 Binary Tile Value                        |  // [445]
    :---------------------------------------------------------+  // [445]
    #_RESET_TRIPLEPARA_# :------------------------------------+  // [445]
                                                              |  // [445]
        Reset triple parallel array.                          |  // [445]
        ( arr_gtx && arr_gty && arr_u32 )                     |  // [445]
    :---------------------------------------------------------+  // [445]
    #_TILE_INTERNAL_ROTATION_FUNC_# :-------------------------+  // [445]
                                                              |  // [445]
        This function looks kind of ugly when called          |  // [445]
        directly, so making a shorthand reference to          |  // [445]
        clean up the visuals of it's call site.               |  // [445]
    :---------------------------------------------------------+  // [445]
    #_LOOP_FOR_ME_BITCH_# :-----------------------------------+  // [445]
                                                              |  // [445]
        Two outer loop iterations in radial mirroring.        |  // [445]
        One for the normal radial mirroring code,             |  // [445]
        the other for the dense mirroring code.               |  // [445]
    :---------------------------------------------------------+  // [445]
    #_UNLOAD_RADMIR_TILE_BUFFER_# :---------------------------+  // [445]
                                                              |  // [445]
        Unload Radial Mirror Tile Buffer.                     |  // [445]
        Copy_paste of[ _UNLOAD_TILE_BUFFER_ ].                |  // [445]
    :---------------------------------------------------------+  // [445]
    @TEMP_VARS@ : Temporary variables used to prevent            // [446]
                : weird stuff from  happening when doing         // [446]
                : calculations.                                  // [446]
                                                                 // [446]
    #_IDEA_MIRRORING_PER_LEVEL_# :----------------------------+  // [446]
    #_IDEA_RADIALLY_PER_LEVEL_# :-----------------------------+  // [446]
                                                              |  // [446]
        SEE[ _YES_ISOLATED_MIRROR_BUT_KEEP_IT_SIMPLE_ ]       |  // [446]
                                                              |  // [446]
        ( This section of notes , while a lot of fun )        |  // [446]
        ( features , is getting out of hand. What one)        |  // [446]
        ( thing do I want that gets a lot of bang    )        |  // [446]
        ( for it's buck? SEE[ _YES_ISOLATED_ ]       )        |  // [446]
                                                              |  // [446]
        Being able to make the mirror brush only mirror       |  // [446]
        on a single level is IMPORTANT. We need to do         |  // [446]
        that before we consider this system done.             |  // [446]
                                                              |  // [446]
        ALSO:                                                 |  // [446]
            There should be 4 global mirror enumerations:     |  // [446]
                                                              |  // [446]
            1 : Mirror globally across all 9 level packs.     |  // [446]
            2 : Mirror globally across only centeral levelpack|  // [446]
            3 : Mirror gobally within level pack, but         |  // [446]
              : duplicate mirroring code in all levels of     |  // [446]
              : level pack.                                   |  // [446]
            4 : Isolate mirroring brush to the current        |  // [446]
              : LEVEL (NOT:levelpack) you are drawing in.     |  // [446]
                                                              |  // [446]
            BITS :                                            |  // [446]
                                                              |  // [446]
                U : Unit Type Bits                            |  // [446]
                                                              |  // [446]
                    0 : Dealing in levelpacks.                |  // [446]
                    1 : Dealing in level.                     |  // [446]
                                                              |  // [446]
                R : Reach Bits :                              |  // [446]
                    XY                                        |  // [446]
                    00 : Only central levelpack.              |  // [446]
                    01 : Central + TOP_AND_BOT levelpacks.    |  // [446]
                    10 : Central + LEF_AND_RIG levelpacks.    |  // [446]
                    11 : ALL LEVELPACKS.                      |  // [446]
                                                              |  // [446]
                I : Isolation Bit :                           |  // [446]
                                                              |  // [446]
                    0 : Mirroring at global level.            |  // [446]
                    1 : Mirroring isolated to LEVELS          |  // [446]
                      : and duplicated to all LEVELS          |  // [446]
                      : within the reach of reach bits.       |  // [446]
                                                              |  // [446]
        #_REACH_BITS_DIAGRAM_# :---------------------------+  |  // [446]
                                                           |  |  // [446]
                [ ][ ][ ]                 X_Y              |  |  // [446]
                [ ][X][ ] Reach_Bits == [ 0_0 ]            |  |  // [446]
                [ ][ ][ ]                 X_Y              |  |  // [446]
                                                           |  |  // [446]
                [ ][X][ ]                 X_Y              |  |  // [446]
                [ ][X][ ] Reach_Bits == [ 0_1 ]            |  |  // [446]
                [ ][X][ ]                 X_Y              |  |  // [446]
                                                           |  |  // [446]
                [ ][ ][ ]                 X_Y              |  |  // [446]
                [X][X][X] Reach_Bits == [ 1_0 ]            |  |  // [446]
                [ ][ ][ ]                 X_Y              |  |  // [446]
                                                           |  |  // [446]
                [X][X][X]                 X_Y              |  |  // [446]
                [X][X][X] Reach_Bits == [ 1_1 ]            |  |  // [446]
                [X][X][X]                 X_Y              |  |  // [446]
                                                           |  |  // [446]
            This diagram could apply to LEVELPACKS         |  |  // [446]
            or LEVELS depending on if isolation            |  |  // [446]
            bit is turned on.                              |  |  // [446]
                                                           |  |  // [446]
                ISOLATION_BIT === 0 : Levelpacks           |  |  // [446]
                ISOLATION_BIT === 1 : Levels.              |  |  // [446]
                                                           |  |  // [446]
            When ISOLATION_BIT is 1 , we                   |  |  // [446]
            [ extend / project ] to adjacent levelpacks    |  |  // [446]
            in the X & Y direction from the current        |  |  // [446]
            level we are in until we hit the boarders of   |  |  // [446]
            "THE_DUM".                                     |  |  // [446]
                                                           |  |  // [446]
            Below : ISOLATION_BIT === 1                    |  |  // [446]
                  : REACH_BIT     === BIN[01] || BIN[10]   |  |  // [446]
                                                           |  |  // [446]
                  : If reach bit was [ 11 ]then we would   |  |  // [446]
                  : basically clone stamp the mirroring    |  |  // [446]
                  : action in one LEVEL to all other       |  |  // [446]
                  : 117 levels within "THE_DUM"            |  |  // [446]
                                                           |  |  // [446]
                  [P] : Plot Point                         |  |  // [446]
                  [Y] : Affected when Y REACH_BIT set.     |  |  // [446]
                  [X] : Affected when X REACH_BIT set.     |  |  // [446]
                                                           |  |  // [446]
            [ ][ ][ ][ ][ ] [ ][ ][ ][ ][Y] [ ][ ][ ][ ][ ]|  |  // [446]
            [ ][ ][ ][ ][ ] [ ][ ][ ][ ][Y] [ ][ ][ ][ ][ ]|  |  // [446]
            [ ][ ][ ][ ][ ] [ ][ ][ ][ ][Y] [ ][ ][ ][ ][ ]|  |  // [446]
            [ ][ ][ ][ ][ ] [ ][ ][ ][ ][Y] [ ][ ][ ][ ][ ]|  |  // [446]
            [ ][ ][ ][ ][ ] [ ][ ][ ][ ][Y] [ ][ ][ ][ ][ ]|  |  // [446]
                                         Y                 |  |  // [446]
            [ ][ ][ ][ ][ ] [ ][ ][ ][ ][Y] [ ][ ][ ][ ][ ]|  |  // [446]
            [ ][ ][ ][ ][ ] [ ][ ][ ][ ][Y] [ ][ ][ ][ ][ ]|  |  // [446]
            [X][X][X][X][X] [X][X][X][X][P] [X][X][X][X][X]|  |  // [446]
            [ ][ ][ ][ ][ ] [ ][ ][ ][ ][Y] [ ][ ][ ][ ][ ]|  |  // [446]
            [ ][ ][ ][ ][ ] [ ][ ][ ][ ][Y] [ ][ ][ ][ ][ ]|  |  // [446]
                                         Y                 |  |  // [446]
            [ ][ ][ ][ ][ ] [ ][ ][ ][ ][Y] [ ][ ][ ][ ][ ]|  |  // [446]
            [ ][ ][ ][ ][ ] [ ][ ][ ][ ][Y] [ ][ ][ ][ ][ ]|  |  // [446]
            [ ][ ][ ][ ][ ] [ ][ ][ ][ ][Y] [ ][ ][ ][ ][ ]|  |  // [446]
            [ ][ ][ ][ ][ ] [ ][ ][ ][ ][Y] [ ][ ][ ][ ][ ]|  |  // [446]
            [ ][ ][ ][ ][ ] [ ][ ][ ][ ][Y] [ ][ ][ ][ ][ ]|  |  // [446]
                                                           |  |  // [446]
            :-----------------------: #_REACH_BITS_DIAGRAM_#  |  // [446]
                                                              |  // [446]
        OR!!!!                                                |  // [446]
                                                              |  // [446]
            We could just have a "THE_DUM" global             |  // [446]
            tile-selection region that can be modified        |  // [446]
            and you can define the mirror bounds.             |  // [446]
                                                              |  // [446]
    :---------------------------------------------------------+  // [446]
    #_YES_ISOLATED_MIRROR_BUT_KEEP_IT_SIMPLE_# :--------------+  // [446]
                                                              |  // [446]
        TAG[ _YES_ISOLATED_ ]                                 |  // [446]
                                                              |  // [446]
        Let's not waste another MONTH on this...              |  // [446]
        Let's keep our waste to... Another WEEK.              |  // [446]
                                                              |  // [446]
        Just implement an "ISOLATION BIT" mode.               |  // [446]
                                                              |  // [446]
        ISOLATION ONN : Mirror to current LEVEL.              |  // [446]
        ISOLATION OFF : Mirror globally to ALL LEVELPACKS.    |  // [446]
                      :(Mirror across entire "THE_DUM". )     |  // [446]
                                                              |  // [446]
    :---------------------------------------------------------+  // [446]

    #_CHOOSE_QUADDEX_OFFSETA_# :------------------------------+  // [447]
                                                              |  // [447]
        NOTE :-----------------------------------------:      |  // [447]
             :                                         :      |  // [447]
             :  After trying this idea, I trashed it.  :      |  // [447]
             :  I didn't like the results.             :      |  // [447]
             :  Code for this diagram is in:           :      |  // [447]
             :  <AIM>\DOC\TRASH\447.2022_10_09._       :      |  // [447]
             :-----------------------------------------:      |  // [447]
                                                              |  // [447]
        Depending on which quadrant we are in GLOBALLY,       |  // [447]
        we will offset to a different quandrant               |  // [447]
        LOCALLY to the current level pack we are in.          |  // [447]
                                                              |  // [447]
        I think this will get an interesting                  |  // [447]
        dense radial mirroring effect.                        |  // [447]
                                                              |  // [447]
            +===---===---===+ +===---===---===+               |  // [447]
            |               | |               |               |  // [447]
            |               | |    @_YMF_@    |               |  // [447]
            |      ===>     | |      |||      |               |  // [447]
            |      ===>     | |      |||      |               |  // [447]
            |    @_XMF_@    | |      VVV      |               |  // [447]
            |               | |               |               |  // [447]
            +===---===---===+ +===---===---===+               |  // [447]
            +===---===---===+ +===---===---===+               |  // [447]
            |               | |               |               |  // [447]
            |      ^^^      | |               |               |  // [447]
            |      |||      | |     <===      |               |  // [447]
            |      |||      | |     <===      |               |  // [447]
            |    @_YMB_@    | |    @_XMB_@    |               |  // [447]
            |               | |               |               |  // [447]
            +===---===---===+ +===---===---===+               |  // [447]
                                                              |  // [447]
                                                              |  // [447]
            @_XMF_@ : X - Midline - FRONT ( bigger  than X )  |  // [447]
            @_YMF_@ : Y - Midline - FRONT ( bigger  than Y )  |  // [447]
            @_XMB_@ : X - Midline - BACK  ( smaller than X )  |  // [447]
            @_YMB_@ : Y - Midline - BACK  ( smaller than Y )  |  // [447]
                                                              |  // [447]
    :---------------------------------------------------------+  // [447]
    #_COPYPASTE_ROTATION_CODE_# :-----------------------------+  // [447]
                                                              |  // [447]
        Identical rotation code to the non-dense              |  // [447]
        section of our radial mirroring function.             |  // [447]
                                                              |  // [447]
        Yes, I am sure there is a way to save lines           |  // [447]
        of code. But from my experience.                      |  // [447]
                                                              |  // [447]
        1. Will make the code harder to read.                 |  // [447]
                                                              |  // [447]
        2. Will take more time to write                       |  // [447]
           ( Obviously true, because the code works )         |  // [447]
           ( already as-is )                                  |  // [447]
                                                              |  // [447]
        From experience, I have to say, it isn't              |  // [447]
        worth it. You are expending effort to make            |  // [447]
        the code LESS CLEAR. Younger me would think           |  // [447]
        I was doing a good thing here by cleaning             |  // [447]
        up repetitive chunks of code.                         |  // [447]
    :---------------------------------------------------------+  // [447]
                                                                 // [447]
    @ZEN_MID@ : ZENITH MIDLINE ( larger  midline marker )        // [447]
    @JOT_MID@ : JOT    MIDLINE ( smaller midline marker )        // [447]
                                                                 // [447]
    #_FOURPRONG_BRUSH_#:[447]:--------------------------------+  // [447]
    #_4PRONG_BRUSH_#:[447]:-----------------------------------+  // [447]
                                                              |  // [447]
        I think for dense mirroring mode for radial,          |  // [447]
        a brush that is 4 points, spaced with a 1-tile        |  // [447]
        gap between them will look best.                      |  // [447]
    :---------------------------------------------------------+  // [447]
    :---------------------------------------------------------+  // [447]
    #_16_POINT_ROTATION_BRUSH_# :-----------------------------+  // [447]
                                                              |  // [447]
        This section of code is no longer a "copy+paste"      |  // [447]
        of the other section. It has some heavy               |  // [447]
        modification that plots 16 points in total.           |  // [447]
    :---------------------------------------------------------+  // [447]

    #_MIR_ISOLATION_# :---------------------------------------+  // [448]
                                                              |  // [448]
        When "Mirror Isolation Mode" is turned on, the        |  // [448]
        mirroring happens only within a given level.          |  // [448]
                                                              |  // [448]
        Because the previous mirroring code I wrote           |  // [448]
        is such a horrible clusterfuck of spaghetti           |  // [448]
        code, we are going to write the                       |  // [448]
        "Mirror Within Isolated Level" code from scratch      |  // [448]
        and NOT RE-USE the functions we already wrote.        |  // [448]
                                                              |  // [448]
        Re-use of the functions would require modifying       |  // [448]
        them to be more[ general/generic ]which would         |  // [448]
        only INCREASE the[ confusion / spaghetti ]factor      |  // [448]
        present in those functions.                           |  // [448]
    :---------------------------------------------------------+  // [448]
                                                                 // [448]
    #_ISOLATED_OR_GLOBAL_# :----------------------------------+  // [448]
    #_GLOBAL_OR_ISOLATED_# :----------------------------------+  // [448]
                                                              |  // [448]
        Choose between two sets of function pointers.         |  // [448]
                                                              |  // [448]
        1. The ISOLATED mirroring functions.                  |  // [448]
           A: Isolated Radial Mirror                          |  // [448]
           B: Isolated Bilateral Mirror                       |  // [448]
                                                              |  // [448]
        2. The GLOBAL mirroring functions.                    |  // [448]
           A: Global Radial Mirror                            |  // [448]
           B: Global Bilateral Mirror                         |  // [448]
                                                              |  // [448]
    :---------------------------------------------------------+  // [448]
    :---------------------------------------------------------+  // [448]
    #_ISOLATED_MIRRORING_FUNCTIONS_# :------------------------+  // [448]
    #_ISOLATED_ROTATING_FUNCTIONS_# :-------------------------+  // [448]
                                                              |  // [448]
        Because of how much of a cluster fuck the             |  // [448]
        previous two global mirroring functions were,         |  // [448]
        we are going to write the "radial" and                |  // [448]
        "bilateral" mirroring functions that are              |  // [448]
        isolated to a single level within a levelpack         |  // [448]
        as stand-alone functions.                             |  // [448]
                                                              |  // [448]
        We are __NOT__ going to try to re-use                 |  // [448]
        the original[ bilateral ]and[ radial ]                |  // [448]
        tile-mirroring-brush code.                            |  // [448]
                                                              |  // [448]
        That would require making code that is                |  // [448]
        all ready spaghetti code cluster fuck                 |  // [448]
        MORE GENERIC.                                         |  // [448]
                                                              |  // [448]
        MORE GENERIC === MORE SPAGHETTI.                      |  // [448]
    :---------------------------------------------------------+  // [448]
                                                                 // [448]
    @edi_mod_mir_iso@ : EditorModeMirror_ISOLATION               // [448]
                      : Is isolated mirroring mode on?           // [448]
                      : ( edi_mod_mir_onn === 1 )                // [448]
                      : Must also be true for this flag          // [448]
                      : to have any affect.                      // [448]

    #_I_WORRY_ABOUT_PREFIX_PROLIFERATION_# :------------------+  // [449]
                                                              |  // [449]
        I don't want a hungarian notation hell of prefixes.   |  // [449]
        So use prefixes sparingly.                            |  // [449]
                                                              |  // [449]
        We've gotten to video #4_4_8 without creating         |  // [449]
        any more prefixes... But I have got to say...         |  // [449]
                                                              |  // [449]
        A "t_" prefix for "types" like I did in               |  // [449]
        old "AA3" C99 code base makes a lot of sense.         |  // [449]
                                                              |  // [449]
        PERSONAL_PATH[ R:\AAC\A3\LIB\SUB\HENTAIF._    ]       |  // [449]
        GENERIC__PATH[      <A3>/LIB/SUB/HENTAIF._    ]       |  // [449]
        GIT_REPO[ github.com/HeavyMetalCookies/A3.git ]       |  // [449]
                                                              |  // [449]
    :---------------------------------------------------------+  // [449]
    #DEPENDENCY_ORDER# :--------------------------------------+  // [449]
    @DEPENDENCY_ORDER@ :--------------------------------------+  // [449]
                                                              |  // [449]
        When using C99 single-pass compiler rules,            |  // [449]
        dependency order is the order in which                |  // [449]
        files should be included.                             |  // [449]
                                                              |  // [449]
        Or you can interpret this as relative order           |  // [449]
        in which certain categories of things must            |  // [449]
        appear in source code.                                |  // [449]
                                                              |  // [449]
        For example :                                         |  // [449]
                                                              |  // [449]
            CONSTANTS/MACROS( c_ )come before everything      |  // [449]
            because types, data, and functions could          |  // [449]
            all be altered by them.                           |  // [449]
                                                              |  // [449]
            TYPES( t_ )come before DATA and FUNCTIONS         |  // [449]
            because DATA might need to be an instance         |  // [449]
            of a specific type. FUNCTIONS might take          |  // [449]
            a certain TYPE of DATA as an input or             |  // [449]
            output.                                           |  // [449]
                                                              |  // [449]
            DATA( d_ )come before FUNCTIONS because           |  // [449]
            functions depend on DATA, but DATA does           |  // [449]
            __NOT__ depend on FUNCTIONS.                      |  // [449]
                                                              |  // [449]
            FUNCTIONS( F_ )come LAST because nothing          |  // [449]
            depends on functions. Functions are the           |  // [449]
            lowest tier citizens of my code base.             |  // [449]
            We are using DATA_ORIENTED_DESIGN.                |  // [449]
                                                              |  // [449]
    :---------------------------------------------------------+  // [449]
    :---------------------------------------------------------+  // [449]
    #_LOCALIZE_GTX_GTY_# :------------------------------------+  // [449]
                                                              |  // [449]
        Convert inputted [gtx,gty]to local[ltx,lty].          |  // [449]
                                                              |  // [449]
        Because I don't want to abuse garbage                 |  // [449]
        collection, the time has come to define               |  // [449]
        formalized types.                                     |  // [449]
                                                              |  // [449]
        Yes, after 4_4_8 videos, in video #4_4_9,             |  // [449]
        we have created our first two formalized              |  // [449]
        types that can be instantiated.                       |  // [449]
                                                              |  // [449]
        CHRONOLOGICAL_TYPE_001 : gtc (global_tile_coord)      |  // [449]
        CHRONOLOGICAL_TYPE_002 : ltc (local__tile_coord)      |  // [449]
                                                              |  // [449]
    :---------------------------------------------------------+  // [449]

    #_GET_LOCAL_COORD_BILA_# :--------------------------------+  // [450]
                                                              |  // [450]
        Convert local coord (ltc) to global coord(gtc)        |  // [450]
        in the SYMBILA_ISO function.                          |  // [450]
                                                              |  // [450]
    :---------------------------------------------------------+  // [450]
    #_GET_LOCAL_COORD_RADI_# :--------------------------------+  // [450]
                                                              |  // [450]
        Convert local coord (ltc) to global coord(gtc)        |  // [450]
        in the SYMRADI_ISO function.                          |  // [450]
                                                              |  // [450]
    :---------------------------------------------------------+  // [450]

    #HLX_NOTE_2022# :-----------------------------------------+  // [451]
                                                              |  // [451]
        I had denoted [ hlx , hly ] as "TOO AMBIGUOUS"        |  // [451]
        in earlier notes. Yet I do not see a clear            |  // [451]
        substitution for it in the code I am currently        |  // [451]
        writing. ([ (gtx)==>(ltx) conversion ])               |  // [451]
                                                              |  // [451]
        I think it's a decent name, since we cannot know      |  // [451]
        it's exact capacity, which varies depending on        |  // [451]
        the tile size exponent in use.                        |  // [451]
    :---------------------------------------------------------+  // [451]
    #_CALCULATE_GLOBAL_TO_LOCAL_# :---------------------------+  // [451]
                                                              |  // [451]
        Core calculations converting global-tile xy           |  // [451]
        to local-tile xy within our renderable space          |  // [451]
        known as "THE_DUM".                                   |  // [451]
    :---------------------------------------------------------+  // [451]
    #_LOAD_SEVEN_MEMBERS_# :----------------------------------+  // [451]
                                                              |  // [451]
        Load the 7-member variables of the "local-tile-coord" |  // [451]
        struct that we are currently working on.              |  // [451]
    :---------------------------------------------------------+  // [451]
    #_MAKE_ME_A_SPECIAL_SNOWFLAKE_# :-------------------------+  // [451]
                                                              |  // [451]
        These two pairs of code were too similiar, so         |  // [451]
        added these tags in the comments to differentiate     |  // [451]
        where in the code file I currently am.                |  // [451]
                                                              |  // [451]
        @RADI_C@ : Radial Mirroring Coordinate                |  // [451]
        @BILA_C@ : Bilateral Mirroring Coordinate             |  // [451]
    :---------------------------------------------------------+  // [451]

    #_LTC_SHORTHAND_MACROS_# :--------------------------------+  // [452]
                                                              |  // [452]
        Local_Tile_Coordinate - Shorthand Macros.             |  // [452]
                                                              |  // [452]
        These values could be #DEFINEs in C99 code.           |  // [452]
        The only reason these variables exist is to           |  // [452]
        get shorter variable names that are easier            |  // [452]
        to use in the [comming/below] calculations.           |  // [452]
    :---------------------------------------------------------+  // [452]
    #_DO_THE_FUCKING_MATH_# :---------------------------------+  // [452]
                                                              |  // [452]
        Core math for converting local to global              |  // [452]
        within the renderable space the very foundation       |  // [452]
        of our engine is built upon.                          |  // [452]
                                                              |  // [452]
    :---------------------------------------------------------+  // [452]
    #_PACK_IT_ALL_UP_# :--------------------------------------+  // [452]
                                                              |  // [452]
        Pack up the output members for (ltx)===>(gtx)         |  // [452]
        conversion function. There is no return value         |  // [452]
        here, only an "output parameter" prefixed             |  // [452]
        with a "o_" for output and fed into the               |  // [452]
        parameter list of the function.                       |  // [452]
    :---------------------------------------------------------+  // [452]

    #_HIGHLY_UNCONVENTIONAL_IDEA_# :--------------------------+  // [453]
                                                              |  // [453]
        @IDEA_NAME@ / @NAME_IDEA@                             |  // [453]
        @IDEA_NAME_DROPPING@ / @NAME_DROPPING_IDEA@           |  // [453]
                                                              |  // [453]
        Lets create a youtube channel where I do nothing      |  // [453]
        but have galleries of different big-titty women       |  // [453]
        and say that if you want to know the name, I drop     |  // [453]
        the name somewhere in "this video" here within        |  // [453]
        this code review.                                     |  // [453]
                                                              |  // [453]
        Yes, most people won't care. But, as Thunderf00t      |  // [453]
        once said, the fitness of an idea is based on         |  // [453]
        how well it spreads. THAT IS IT!!! Not how good       |  // [453]
        the idea is, not the merit of the idea. So if         |  // [453]
        you need to do something slightly underhanded         |  // [453]
        but within your moral limits, you should do it        |  // [453]
        to promote your code base.                            |  // [453]
                                                              |  // [453]
        Only you care enough about this code base to          |  // [453]
        get the word out.                                     |  // [453]
                                                              |  // [453]
        Also, just making bad ass stuff with the code         |  // [453]
        should help get the word out as well.                 |  // [453]
    :---------------------------------------------------------+  // [453]
    #_UTM_LTC_GTC_# :-----------------------------------------+  // [453]
    #_UTM_GTC_LTC_# :-----------------------------------------+  // [453]
                                                              |  // [453]
        @UTM_LTC_GTC@ : UnitTestMain - (ltc)===>(gtc)         |  // [453]
        @UTM_GTC_LTC@ : UnitTestMain - (gtc)===>(ltc)         |  // [453]
                                                              |  // [453]
        @LTC_GTC@ :::::  LocalTileCoord _TO_ GlobalTileCoord  |  // [453]
        @GTC_LTC@ ::::: GlobalTileCoord _TO_  LocalTileCoord  |  // [453]
                                                              |  // [453]
    :---------------------------------------------------------+  // [453]
    :---------------------------------------------------------+  // [453]
    @_U_T_F_@ : Unit_Test_Failed ::::::::::::::::::::::::::::::  // [453]
    #_MIRMAID_DATA_ON_CLIENT_AND_SERVER_# :-------------------+  // [453]
                                                              |  // [453]
        We added unit tests that are executed both            |  // [453]
        on the client and server. As such, this data          |  // [453]
        needs to be exposed to the server. If not,            |  // [453]
        the unit tests will fail on the server                |  // [453]
        and crash the server.                                 |  // [453]
    :---------------------------------------------------------+  // [453]

    #_SCROLLING_MARQUEE_IDEA_# :------------------------------+  // [454]
                                                              |  // [454]
        Make animated scrolling text out of your tiles.       |  // [454]
        Kind of like the animated light board you did         |  // [454]
        at DIGPEN for one of your self-study projects         |  // [454]
        under Mr... Moorley? Peter Moorley?                   |  // [454]
                                                              |  // [454]
    :---------------------------------------------------------+  // [454]
    @_R_P_V_@ : Re-Purposed-Variable                             // [454]
    @RPV@ ::::: Re-Purposed-Variable                             // [454]
    #_RAD_COMMON_# :------------------------------------------+  // [454]
                                                              |  // [454]
        Common shared code between "dense mode"               |  // [454]
        and "light mode" within our radial                    |  // [454]
        isolated mirroring function.                          |  // [454]
    :---------------------------------------------------------+  // [454]
    #_LOAD_TILE_BUFFERS_# :-----------------------------------+  // [454]
                                                              |  // [454]
        Load the local coordinate tile buffers.               |  // [454]
        Doesn't matter which branch gets picked,              |  // [454]
        both will work by filling out the same                |  // [454]
        tile buffer. Though the number of entries             |  // [454]
        we will out will be __MORE__ if we are in             |  // [454]
        "DENSE" mode.                                         |  // [454]
    :---------------------------------------------------------+  // [454]
    #_UNLOAD_TILE_BUFFERS_# :---------------------------------+  // [454]
                                                              |  // [454]
        Unload and plot the tiles that were previously        |  // [454]
        loaded into the tile buffer.                          |  // [454]
    :---------------------------------------------------------+  // [454]

    #_PASTED_FROM_435_# :-------------------------------------+  // [455]
                                                              |  // [455]
        The internal logic of[ F_MIRMAID _ AM6_U32_ROT_C_W ]  |  // [455]
        has been cut out of it's original function and        |  // [455]
        pasted into body of[ F_MIRMAID _ AM6_U32_ROT_DIR ]    |  // [455]
        where is has undergone minor alteration to allow      |  // [455]
        it to rotate clockwise or counterclockwise.           |  // [455]
                                                              |  // [---]
        Are we sure the code wasn't...    !!!!!!!!!!!!!!!!!!! |  // [456]
        "Pasted from 437" as apposed to   !!!!!!!!!!!!!!!!!!! |  // [456]
        "Pasted from 435" ???????????     !!!!!!!!!!!!!!!!!!! |  // [456]
        Not going to worry about it.      !!!!!!!!!!!!!!!!!!! |  // [456]
                                                              |  // [---]
    :---------------------------------------------------------+  // [455]
    #_BINTILE_AUTO_ROTATE_PICK_# :----------------------------+  // [455]
                                                              |  // [455]
        A generic auto tile internals rotation function       |  // [455]
        that you must "pick" which direction you want         |  // [455]
        to rotate in by supplying a "sign flag" as            |  // [455]
        a 2nd parameter. This flag must be either             |  // [455]
        [ negative one(1) ]or[ positive one(1) ].             |  // [455]
    :---------------------------------------------------------+  // [455]
    #_NEG_ANTI_CLOCK_# :--------------------------------------+  // [455]
                                                              |  // [455]
        Our engine breaks the convention of                   |  // [455]
        "ANTI-CLOCKWISE == Default".                          |  // [455]
                                                              |  // [455]
        So, if it seems a bit weird that :                    |  // [455]
        "Negative == ANTICLOCKWISE" in this engine,           |  // [455]
        it isn't just you. That is just how things            |  // [455]
        turned out. It's how the proverbial cards fell.       |  // [455]
    :---------------------------------------------------------+  // [455]

    #_IDEA_TILE_SCULPTING_TOOL_# :----------------------------+  // [456]
                                                              |  // [456]
        @IDEA_SCULPT_BRUSH@ / @SCULPT_BRUSH_IDEA@             |  // [456]
        @IDEA_Z_BRUSH@ / @Z_BRUSH_IDEA@                       |  // [456]
                                                              |  // [456]
        Think "z-brush" but for 2d tilemaps.                  |  // [456]
        Used to [push+pull]/[pull+push] tiles instead         |  // [456]
        of set tiles.                                         |  // [456]
                                                              |  // [456]
        You could have a brush used for carving               |  // [456]
        caverns that displaces tiles to create holes          |  // [456]
        instead of just deleting them.                        |  // [456]
                                                              |  // [456]
    :---------------------------------------------------------+  // [456]
    #_POS_WISE_CLOCK_# :--------------------------------------+  // [456]
                                                              |  // [456]
        Positive number makes things go clockwise when        |  // [456]
        it comes to tile rotation in this code base.          |  // [456]
        Yes I know default rotation in math is counter        |  // [456]
        clockwise, but I think this happened because          |  // [456]
        if you rotate the INTERNALS of an auto tile           |  // [456]
        PIXELS counter-clockwise, you must rotate the         |  // [456]
        touhing value of the tile anti-clockwise.             |  // [456]
                                                              |  // [456]
        Because I didn't realize this when starting out,      |  // [456]
        my rotations for tiles are all bizarro world now.     |  // [456]
                                                              |  // [456]
        I AM WRONG HOWEVER ABOUT :                            |  // [456]
                                                              |  // [456]
        ....                                                  |  // [456]
                                                              |  // [456]
        WRONG  : Tile Values And Meta Structure Rotate        |  // [456]
               : in the opposite direction.                   |  // [456]
                                                              |  // [456]
        CORRECT: Tile Values And Meta Structure Rotate        |  // [456]
                 in the __SAME__ direction.                   |  // [456]
                                                              |  // [456]
                 But the pixel internals when writing         |  // [456]
                 the shader, those pixels have to rotate      |  // [456]
                 in the opposite direction.                   |  // [456]
    :---------------------------------------------------------+  // [456]
    #_ETF_2022_11_11_# :--------------------------------------+  // [456]
                                                              |  // [456]
     @ETF_2022_11_11@ : The function call here used           |  // [456]
                      : to be inlined code, but it            |  // [456]
                      : was extracted to re-usable            |  // [456]
                      : function.                             |  // [456]
                                                              |  // [456]
                                                              |  // [456]
        @ETF@ : Extracted_To_Function                         |  // [456]
              : PAIRED COMMENT!!!!!!!                         |  // [456]
                                                              |  // [456]
        This tag should appear in exactly TWO PLACES          |  // [456]
        in the source code section. Once where                |  // [456]
        the original code was originally inlined,             |  // [456]
        and also in the function the code was                 |  // [456]
        extracted to.                                         |  // [456]
    :---------------------------------------------------------+  // [456]
    #_RO4_ROTANTI_# :-----------------------------------------+  // [456]
                                                              |  // [456]
        Rotate the internals of the auto-tile                 |  // [456]
        ANTI-CLOCKWISE ( ROTANTI == ROTate ANTI )             |  // [456]
                                                              |  // [456]
        There are 3 sub-layers to geometry tile, so           |  // [456]
        we have to do 3 rotations to rotate everything.       |  // [456]
                                                              |  // [456]
        In the future this might be a bad idea,               |  // [456]
        for example, will definitely corrupt                  |  // [456]
        BOMB layer since bombs are just tiles with            |  // [456]
        timestamp encodings.                                  |  // [456]
                                                              |  // [456]
    :---------------------------------------------------------+  // [456]
    #_RO4_SUB_CLOCKWISE_# :-----------------------------------+  // [456]
                                                              |  // [456]
        [ subtracting/decrementing ]the stored rotation       |  // [456]
        value within our binary tile value causes             |  // [456]
        it to go.... CLOCKWISE ?                              |  // [456]
                                                              |  // [456]
        FUCKING_WRONG!!!                                      |  // [456]
        YOU_MEAN[ _RO4_SUB_ANTICLOCK_# ]                      |  // [456]
    :---------------------------------------------------------+  // [456]
    #_RO4_SUB_ANTICLOCK_# :-----------------------------------+  // [456]
                                                              |  // [456]
        [ subtracting/decrementing ]the stored rotation       |  // [456]
        value within our binary tile value causes it          |  // [456]
        to go ANTICLOCK-WISE.                                 |  // [456]
                                                              |  // [456]
    :---------------------------------------------------------+  // [456]
    #_FRACTAL_ERASER_IDEA_# :---------------------------------+  // [456]
                                                              |  // [456]
        @IDEA@ / @IDEA_FRACTAL_ERASER@                        |  // [456]
               / @FRACTAL_ERASER_IDEA@                        |  // [456]
                                                              |  // [456]
        IMGUR_EXPLAIN[ https://imgur.com/a/sDgEZPC ]          |  // [456]
                                                              |  // [456]
        When erasing a large tile with the eraser,            |  // [456]
        the eraser should only leave a "void/blank"           |  // [456]
        area with no tiles UNDERNEATH ITS SURFACE AREA.       |  // [456]
                                                              |  // [456]
        A SMALL ERASER should not make a LARGE TILE           |  // [456]
        completely vanish.                                    |  // [456]
                                                              |  // [456]
        So, the fractal fracturing code idea for              |  // [456]
        "CRAGSIM" system can be prototyped with our           |  // [456]
        eraser tool. And then when we work on                 |  // [456]
        "CRAGSIM", we will hopefully have a better            |  // [456]
        idea of the math involved.                            |  // [456]
                                                              |  // [456]
    :---------------------------------------------------------+  // [456]

    #_FULL_DENSE_RADIAL_# :-----------------------------------+  // [457]
                                                              |  // [457]
        Decided that for isolated brush, full radial          |  // [457]
        mirroring will be considered our "DENSE MODE"         |  // [457]
                                                              |  // [457]
        And rotating only by 180 will be considered           |  // [457]
        our "LIGHT MIRRORING MODE.                            |  // [457]
    :---------------------------------------------------------+  // [457]
    #_LIGHT_180_MODE_# :--------------------------------------+  // [457]
                                                              |  // [457]
        Rotating point only by 180 degrees will be            |  // [457]
        considered the "Light Radial Mirroring Mode"          |  // [457]
        for Isolated Radial Mirroring Mode.                   |  // [457]
    :---------------------------------------------------------+  // [457]
    #_ROTATE_TWICE_# :----------------------------------------+  // [457]
                                                              |  // [457]
        If we only want a 180 rotation, we need to            |  // [457]
        rotate the plot point and internals                   |  // [457]
        TWICE by 90 degrees. Because it is 180 here,          |  // [457]
        handed-ness doesn't matter.                           |  // [457]
    :---------------------------------------------------------+  // [457]

    #_IDEA_SMART_MIDLINE_MIRRORING_# :------------------------+  // [458]
                                                              |  // [458]
        @IDEA@                                                |  // [458]
        @IDEA_SMART_MIDLINE_MIRROR@                           |  // [458]
        @SMART_MIDLINE_MIRROR_IDEA@                           |  // [458]
                                                              |  // [458]
        The mirroring is ISOLATED to a given level            |  // [458]
        within levelpack, but we mirror around                |  // [458]
        whatever axis line we are closest to.                 |  // [458]
                                                              |  // [458]
        This could help use draw scaffolding that             |  // [458]
        connects from level-to-level but making the           |  // [458]
        scaffoling DIFFER within each level but               |  // [458]
        BLEND from level to level.                            |  // [458]
                                                              |  // [458]
        We are already taking too much time on this           |  // [458]
        mirroring brush though, and I am getting sick         |  // [458]
        of it, so just putting this down as an idea.          |  // [458]
                                                              |  // [458]
        If Josh ends up really liking the mirror              |  // [458]
        brush and finding it useful, I will add               |  // [458]
        this feature.                                         |  // [458]
                                                              |  // [458]
        +---=---+---=---+ +---=---+---=---+ +---=---+---=---+ |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        + ..... + ..... + + ..... + ..... + + ..... + ..... + |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        +---=---+---=---+ +---=---+---=---+ +---=---+---=---+ |  // [458]
        +---=---+---=---+ +---=---+---=---+ +---=---+---=---+ |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        + ..... + ..... + + ..... + ..... + + ..... + ..... + |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        +---=---+---=---+ +---=---+---=---+ +---=---+---=---+ |  // [458]
        +---=---+---=---+ +---=---+---=---+ +---=---+---=---+ |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        + ..... + ..... + + ..... + ..... + + ..... + ..... + |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        |       .       | |       .       | |       .       | |  // [458]
        +---=---+---=---+ +---=---+---=---+ +---=---+---=---+ |  // [458]
        |<--- LEVEL --->|                                   | |  // [458]
        |<----------- 3_X_3 Core Of LevelPack ------------->| |  // [458]
                                                              |  // [458]
    :------------------------: #_IDEA_SMART_MIDLINE_MIRRORING_#  // [458]
                                                                 // [458]
    #_NON_DENSE_KITTY_# :-------------------------------------+  // [458]
                                                              |  // [458]
        Isolated non-dense mirroring code for when            |  // [458]
        we are mirroring both on X & Y and need to            |  // [458]
        create kitty-corner point.                            |  // [458]
    :---------------------------------------------------------+  // [458]
    #_NON_DENSE_AXISX_# :-------------------------------------+  // [458]
                                                              |  // [458]
        Isolated non-dense mirroring code, X-axis             |  // [458]
        manipulation. X-bit means "mirrors the X".            |  // [458]
        It flips the internal X coordinates.                  |  // [458]
    :---------------------------------------------------------+  // [458]
    #_NON_DENSE_AXISY_# :-------------------------------------+  // [458]
                                                              |  // [458]
        Isolated non-dense mirroring code, Y-axis             |  // [458]
        manipulation. Y-bit means "mirrors the Y".            |  // [458]
        It flips the internal Y coordinates.                  |  // [458]
    :---------------------------------------------------------+  // [458]
    #_BIL_COMMON_# :------------------------------------------+  // [458]
                                                              |  // [458]
        "BIL_COMMON"=="BILateral_COMMON"                      |  // [458]
                                                              |  // [458]
        Bilateral common mirroring code.                      |  // [458]
        The section of code that is always the                |  // [458]
        same no matter what type of bilateral                 |  // [458]
        mirroring we are configured to do.                    |  // [458]
    :---------------------------------------------------------+  // [458]
    #_MIRROR_INTERNALS_# :------------------------------------+  // [458]
                                                              |  // [458]
        When we mirror the plot points, should the            |  // [458]
        internals also be mirrored? The internal              |  // [458]
        auto tile value?                                      |  // [458]
                                                              |  // [458]
        When this is on we get FULLY SYMMETRIC designs.       |  // [458]
                                                              |  // [458]
        When it is OFF, the designs are fully symmetric       |  // [458]
        in terms of where tiles are placed, but the           |  // [458]
        details of the tiles will not be fully                |  // [458]
        symmetric.                                            |  // [458]
                                                              |  // [458]
        +-----------------------+ +-----------------------+   |  // [458]
        | YES,MIRROR INTERNALS  | |   KEEP SAME INTERNALS |   |  // [458]
        +-----------------------+ +-----------------------+   |  // [458]
        |   am6_mir >=1         | |   am6_mir <= 0        |   |  // [458]
        +-----------------------| +-----------------------+   |  // [458]
        |                       | |                       |   |  // [458]
        |   +===-===-===-===+   | |   +===-===-===-===+   |   |  // [458]
        |   |///////////////|   | |   |///////////////|   |   |  // [458]
        |   +===============+   | |   +===============+   |   |  // [458]
        |   |||           |||   | |   |||           |||   |   |  // [458]
        |   |||           |||   | |   |||           |||   |   |  // [458]
        |   |||           |||   | |   |||           |||   |   |  // [458]
        |   |||           |||   | |   |||           |||   |   |  // [458]
        |   |||           |||   | |   |||           |||   |   |  // [458]
        |   +++- - - - - -+++   | |   +++- - - - - -+++   |   |  // [458]
        |   +++++++++++++++++   | |   +++++++++++++++++   |   |  // [458]
        |                       | |                       |   |  // [458]
        +=======================| |=======================+   |  // [458]
        |----- MIRROR_LINE -----| |----- MIRROR_LINE -----|   |  // [458]
        +=======================| |=======================+   |  // [458]
        |                       | |                       |   |  // [458]
        |   +++++++++++++++++   | |   +===-===-===-===+   |   |  // [458]
        |   +++- - - - - -+++   | |   |///////////////|   |   |  // [458]
        |   |||           |||   | |   +===============+   |   |  // [458]
        |   |||           |||   | |   |||           |||   |   |  // [458]
        |   |||           |||   | |   |||           |||   |   |  // [458]
        |   |||           |||   | |   |||           |||   |   |  // [458]
        |   |||           |||   | |   |||           |||   |   |  // [458]
        |   +===============+   | |   |||           |||   |   |  // [458]
        |   |\\\\\\\\\\\\\\\|   | |   +++- - - - - -+++   |   |  // [458]
        |   +===-===-===-===+   | |   +++++++++++++++++   |   |  // [458]
        |                       | |                       |   |  // [458]
        +-----------------------+ +-----------------------+   |  // [458]
                                                              |  // [458]
    :------------------------------------: #_MIRROR_INTERNALS_#  // [458]
    #_UNLOAD_BILMIR_BUFF_# :----------------------------------+  // [458]
                                                              |  // [458]
        Unload BILaterally_MIRrored_(tile)_BUFFer             |  // [458]
                                                              |  // [458]
    :---------------------------------------------------------+  // [458]
    
    #_DENSE_MODE_VECTORS_# :----------------------------------+  // [459]
                                                              |  // [459]
        [P] : Original Plot Point                             |  // [459]
        [X] : Mirroring X-Component of Plot Point             |  // [459]
        [Y] : Mirroring Y-Component of Plot Point             |  // [459]
        [V] : Vector Extensions Pointing To Midline           |  // [459]
                                                              |  // [459]
        [P][ ][V]               ( )               [V][ ][X]   |  // [459]
        [ ]                     [ ]                     [ ]   |  // [459]
        [V]                     [ ]                     [V]   |  // [459]
                                [ ]                           |  // [459]
        ( )[ ][ ][ ]( )[ ][ ][ ]( )[ ][ ][ ]( )[ ][ ][ ]( )   |  // [459]
                                [ ]                           |  // [459]
        [V]                     [ ]                     [V]   |  // [459]
        [ ]                     [ ]                     [ ]   |  // [459]
        [Y][ ][V]               ( )               [V][ ][K]   |  // [459]
                                                              |  // [459]
        Instead of making the 2ndary extension vector         |  // [459]
        plot HALFWAY between plot point and the               |  // [459]
        intersection axis, just make it skip 1-tile gap       |  // [459]
        and then plot itself. This is easier and I think      |  // [459]
        might look interesting.                               |  // [459]
                                                              |  // [459]
        Also can point you to the origin when using the       |  // [459]
        brush.                                                |  // [459]
    :---------------------------------------------------------+  // [459]
                                                                 // [459]
    @JOTLOW@ : JOT , AKA: LOW(er) bound .              ::::::::  // [459]
             : Same number of letters as "ZENITH".     ::::::::  // [459]
             : That is the reason I made up this word. ::::::::  // [459]
                                                                 // [459]
    #_XDM_VECTORS_# :-----------------------------------------+  // [459]
                                                              |  // [459]
        @XDM@ : X(axis)Dense_Mode                             |  // [459]
                                                              |  // [459]
        @XDM_VECTORS@ : XDenseMode - VECTORS , they point     |  // [459]
                      : towards the VERTICAL_AXIS             |  // [459]
                                                              |  // [459]
    :---------------------------------------------------------+  // [459]
    #_YDM_VECTORS_# :-----------------------------------------+  // [459]
                                                              |  // [459]
        @YDM@ : Y(axis)Dense_Mode                             |  // [459]
                                                              |  // [459]
        @YDM_VECTORS@ : YDenseMode - VECTORS , they point     |  // [459]
                      : towards the HORIZONTAL_AXIS           |  // [459]
                                                              |  // [459]
    :---------------------------------------------------------+  // [459]

    #_ROTATE_INTERNALS_# :------------------------------------+  // [460]
                                                              |  // [460]
        Rotate the internals of the auto-tile if the          |  // [460]
        mirroring brush is configured to modify the           |  // [460]
        internal rotation value of the auto tiles.            |  // [460]
                                                              |  // [460]
        Or rather, if the mirror brush is configured to       |  // [460]
        "Modify the touching value" of the auto tiles         |  // [460]
        to obtain a more perfect visual symmetry when         |  // [460]
        drawing with the mirror brush.                        |  // [460]
    :---------------------------------------------------------+  // [460]
    #_IDEA_MORPH_TARGETS_# :----------------------------------+  // [460]
                                                              |  // [460]
        @IDEA@ / @MORPH_TARGETS_IDEA@                         |  // [460]
                 @IDEA_MORPH_TARGETS@                         |  // [460]
                                                              |  // [460]
        Make one tilemap morph into another. We could         |  // [460]
        use the surrounding levelpacks in the 3x3 grid        |  // [460]
        as morph targets for what goes into the               |  // [460]
        central levelpack.                                    |  // [460]
                                                              |  // [460]
        Be cool to see this image morph from                  |  // [460]
        one thing into another thing.                         |  // [460]
                                                              |  // [460]
        THIS_IMAGE[ https://i.imgur.com/ZjmlLEz.png ]         |  // [460]
                                                              |  // [460]
    :---------------------------------------------------------+  // [460]
    @TODOGAL@ ::::: TODO_GALlery            :::::::::::::::::::  // [460]
    @TODOGAL_001@ : TODO_GALlery_number_001 :::::::::::::::::::  // [460]

    #_THE_NEW_META_DATA_CELLS_# :-----------------------------+  // [461]
                                                   @HOSPITAL@ |  // [461]
                                             @HOSPITAL_NOTES@ |  // [461]
        +-------+ +-------+ +-------+ +-------+               |  // [461]
        | LEVEL | | LEVEL | | LEVEL | | LEVEL |               |  // [461]
        |  AKA  | |  AKA  | |  AKA  | |  AKA  |               |  // [461]
        | RO_OM | | RO_OM | | RO_OM | | RO_OM |               |  // [461]
        +-------+ +-------+ +-------+ +-------+               |  // [461]
        +-------+ +-------+ +-------+ +-------+               |  // [461]
        | LEVEL | | LEVEL | | LEVEL | | LEVEL |               |  // [461]
        |  AKA  | |  AKA  | |  AKA  | |  AKA  |               |  // [461]
        | RO_OM | | RO_OM | | RO_OM | | RO_OM |               |  // [461]
        +-------+ +-------+ +-------+ +-------+               |  // [461]
        +-------+ +-------+ +-------+ +-------+               |  // [461]
        | LEVEL | | LEVEL | | LEVEL | | LEVEL |               |  // [461]
        |  AKA  | |  AKA  | |  AKA  | |  AKA  |               |  // [461]
        | RO_OM | | RO_OM | | RO_OM | | RO_OM |               |  // [461]
        +-------+ +-------+ +-------+ +-------+               |  // [461]
        +-------+ +-------+ +-------+ +-------+               |  // [461]
        | LEVEL | |       | |       | |       |               |  // [461]
        |  AKA  | |ASCIDEC| |VINEGRO| |QUANTIT|               |  // [461]
        | RO_OM | |       | |       | |       |               |  // [461]
        +-------+ +-------+ +-------+ +-------+               |  // [461]
                                                              |  // [461]
        @ASCIDEC@ : ASCII DECALS , all non-extended           |  // [461]
                  : ascii is supported here.                  |  // [461]
                                                              |  // [461]
        @VINEGRO@ : Plants and transport grooves.             |  // [461]
                  : This layer is used for :                  |  // [461]
                  : 1. Rendering 15 different plants.         |  // [461]
                  : 2. Water Transport Grooves                |  // [461]
                  : 3. Light Transport Grooves                |  // [461]
                                                              |  // [461]
        @QUANTIT@ : Quantities of water+light on a tile.      |  // [461]
                  :                                           |  // [461]
                  : BIN[ 1111 ], 0-15 light quantity.         |  // [461]
                  : BIN[ 1111 ], 0-15 water quanitty.         |  // [461]
                                                              |  // [461]
    :-----------------------------: #_THE_NEW_META_DATA_CELLS_#  // [461]
    #_CELLULAR_AUTOMATA_# :-----------------------------------+  // [461]
                                                              |  // [461]
        Atomic Ivy is going to have a very simple system      |  // [461]
        of being able to grow stuff. We have limited          |  // [461]
        bits so we are going to axe the idea of               |  // [461]
        "waste products" and "nutrients".                     |  // [461]
                                                              |  // [461]
        Yes, a more complete ecosystem would be fun...        |  // [461]
                                                              |  // [461]
        But we don't have the bits for it.                    |  // [461]
                                                              |  // [461]
        Let's just make something slightly more               |  // [461]
        sophisticated than "Conways Game Of Life".            |  // [461]
                           #CONWAYS_GAME_OF_LIFE#             |  // [461]
                          #_CONWAYS_GAME_OF_LIFE_#            |  // [461]
                                                              |  // [461]
                                                              |  // [461]
    :-----------------------------------: #_CELLULAR_AUTOMATA_#  // [461]
    #_GROW_SIMULATION_# :-------------------------------------+  // [461]
                                                              |  // [461]
                                                              |  // [461]
        | ASCIDEC | VINEGRO | QUANTIT |                       |  // [461]
                                                              |  // [461]
        ASCIDEC : Ascii Decals Layer                          |  // [461]
        VINEGRO : Plants and Grooves In Tilemap               |  // [461]
        QUANTIT : Quantity Holder For Diffusion Of            |  // [461]
                : SUN and WATER                               |  // [461]
                                                              |  // [461]
        GROOVES_BITS :                                        |  // [461]
                                                              |  // [461]
            BIN[ 11 11]===( what kind of plant? 0-to-15 )     |  // [461]
            BIN[ 11   ]===( root || stock || leave || fruit ) |  // [461]
            BIN[ 11   ]===Which Grooves Are Present :         |  // [461]
                      :                                       |  // [461]
                      : BIN[ 01 ]=== Light Transport Groove   |  // [461]
                      : BIN[ 10 ]=== Water Transport Groove   |  // [461]
                      : BIN[ 11 ]=== BOTH GROOVES             |  // [461]
                                                              |  // [461]
                                                              |  // [461]
            PLANT_TYPES ::::::-------------------------+      |  // [461]
            PLANT_CATEGORIES :-------------------------+      |  // [461]
                                                       |      |  // [461]
                Non-Transitive Game :                  |      |  // [461]
                                                       |      |  // [461]
                TTTT < VVVV < GGGG < TTTT              |      |  // [461]
                                                       |      |  // [461]
                Vines Beat Trees                       |      |  // [461]
                Grass Beat Vines                       |      |  // [461]
                Trees Beat Grass                       |      |  // [461]
                                                       |      |  // [461]
                TTTT |B1| VVVV |B2| GGGG |B3| TTTT     |      |  // [461]
                                                       |      |  // [461]
                B1 : Buffer Bacteria Type #1           |      |  // [461]
                B2 : Buffer Bacteria Type #2           |      |  // [461]
                B3 : Buffer Bacteria Type #3           |      |  // [461]
                                                       |      |  // [461]
                B1 doesn't kill T&V , kills G          |      |  // [461]
                B2 doesn't kill V&G , kills T          |      |  // [461]
                B3 doesn't kill G&T , kills V          |      |  // [461]
                                                       |      |  // [461]
                B1 < B2 < B3 < B1                      |      |  // [461]
                                                       |      |  // [461]
                B2 beats B1                            |      |  // [461]
                B3 beats B2                            |      |  // [461]
                B1 beats B3                            |      |  // [461]
                                                       |      |  // [461]
                With these rules we can create a       |      |  // [461]
                simple biome where you can grow stuff. |      |  // [461]
                                                       |      |  // [461]
                                                       |      |  // [461]
                TAG[ rock paper scissors ]             |      |  // [461]
                TAG[ rock_paper_scissors ]             |      |  // [461]
                TAG[ rockpaperscissors   ]             |      |  // [461]
                TAG[ rock,paper,scissors ]             |      |  // [461]
            :-------------------------: PLANT_CATEGORIES      |  // [461]
            :-------------------------:::::: PLANT_TYPES      |  // [461]
                                                              |  // [461]
            QUANTITY_MAP :::::::::---------------------+      |  // [461]
            QUANTITY_OVERLAY_MAP :---------------------+      |  // [461]
                                                       |      |  // [461]
                1111 : How much sun/light is on a tile?|      |  // [461]
                1111 : How much water is on a tile?    |      |  // [461]
                                                       |      |  // [461]
                0-15 units of sun and water can be on  |      |  // [461]
                     a given tile.                     |      |  // [461]
                                                       |      |  // [461]
                Fruit requires 15 units of sun+water   |      |  // [461]
                to sprout.                             |      |  // [461]
                                                       |      |  // [461]
                Sun can enter through leaves only.     |      |  // [461]
                Water can enter through roots only.    |      |  // [461]
                                                       |      |  // [461]
                Sun+Water can travel through stem.     |      |  // [461]
                                                       |      |  // [461]
                Fruit must be connected to a stem.     |      |  // [461]
                                                       |      |  // [461]
                Cellular Automata, but for plants.     |      |  // [461]
                                                       |      |  // [461]
            :------------------------------------------+      |  // [461]
                                                              |  // [461]
            PIPE_PRESSURE :----------------------------+      |  // [461]
                                                       |      |  // [461]
                1 [quanity/unit] of water or light     |      |  // [461]
                INSIDE A PIPE is multiplied 16X.       |      |  // [461]
                                                       |      |  // [461]
                So water and light do not enter pipes  |      |  // [461]
                until the water concentration hits     |      |  // [461]
                15+ units, causing a carry. The carry  |      |  // [461]
                carries into the pipe.                 |      |  // [461]
                                                       |      |  // [461]
                So a decimal ONE(1) quantity in a      |      |  // [461]
                pipe is actually 16 units of           |      |  // [461]
                light or water....                     |      |  // [461]
                                                       |      |  // [461]
                Maybe it should only be 15 because     |      |  // [461]
                for water to enter an leave a pipe     |      |  // [461]
                while conserving mass & energy,        |      |  // [461]
                it will be easier if 1 unit in a       |      |  // [461]
                pipe is equal to 15 units outside      |      |  // [461]
                of a pipe.                             |      |  // [461]
            :------------------------------------------+      |  // [461]
    :-------------------------------------: #_GROW_SIMULATION_#  // [461]
    #_WHY_SIMULATE_GROWING_STUFF_# :--------------------------+  // [461]
                                                              |  // [461]
        1. I think simulating growing stuff will be a good    |  // [461]
           way to add an extra layer of visual interest       |  // [461]
           to the game.                                       |  // [461]
                                                              |  // [461]
        2. Growing stuff has a "HarvestMoon"                  |  // [461]
           and "StardewValley" appeal to it that could        |  // [461]
           gather more people.                                |  // [461]
                                                              |  // [461]
        3. Being able to collect and grow fruit may           |  // [461]
           create some type of econamy. Some type of          |  // [461]
           real stakes can be had in the game if someone      |  // [461]
           were to say...                                     |  // [461]
                                                              |  // [461]
                Burn your crops?                              |  // [461]
                Blow up your crops?                           |  // [461]
                Steal your crops?                             |  // [461]
                                                              |  // [461]
        4. This can put the "IVY" in "Atomic Ivy".            |  // [461]
    :---------------------------------------------------------+  // [461]
    #_FINAL_FRUITY_# :----------------------------------------+  // [461]
                                                              |  // [461]
        The final fruit growth simulation code notes          |  // [461]
        are above this section within sections:               |  // [461]
                                                              |  // [461]
            1: TAG[ _THE_NEW_META_DATA_CELLS_ ][______]       |  // [461]
            2: TAG[ _GROW_SIMULATION_ ][______________]       |  // [461]
            3: TAG[ _WHY_SIMULATE_GROWING_STUFF_ ][___]       |  // [461]
                                                              |  // [461]
            @SIMULATION@ @CELLULAR@ @AUTOMATA@                |  // [461]
                                                              |  // [461]
            TAG[ final fantasy but with fruit    ]            |  // [461]
            TAG[ final_fantasy_but_with_fruit    ]            |  // [461]
            TAG[ final-fantasy-but-with-fruit    ]            |  // [461]
            TAG[ football-game | football_game   ]            |  // [461]
            TAG[ footballgame | foot-ball-game   ]            |  // [461]
            TAG[ foot_ball_game | foot ball game ]            |  // [461]
                                                              |  // [461]
        Hospital Notes Date[ 2022_11_12 ]320_PM               |  // [461]
                                                              |  // [461]
        TODAY : 3 Hour Detour. I set stove for 3 hours        |  // [461]
              : before I left for Hospital knowing it         |  // [461]
              : would be a massive time waste.                |  // [461]
              :                                               |  // [461]
              : Spent too much time looking for mask at       |  // [461]
              : meijer only to spend 7 dollars on             |  // [461]
              : disposable masks. 20 of them...               |  // [461]
              : 7 / 20 === 0.35 cents per mask.               |  // [461]
              :                                               |  // [461]
              : Then self-checkout was credit card only...    |  // [461]
              :                                               |  // [461]
              : And I only pay in cash.                       |  // [461]
              :                                               |  // [461]
              : My prescription is expired, and I had         |  // [461]
              : to walk the mile from one pharmacy to         |  // [461]
              : the other because pharmacy is not open        |  // [461]
              : on weekend.                                   |  // [461]
              :                                               |  // [461]
              : I don't want it as a matter of record of      |  // [461]
              : what perscription it was. But the fact        |  // [461]
              : that this perscription EXPIRES when           |  // [461]
              : will need it for the rest of my LIFE...       |  // [461]
              : What the fuck?!                               |  // [461]
              :                                               |  // [461]
              : And I will have to be back in 6 days          |  // [461]
              : because the only reason I went today          |  // [461]
              : is because they shorted me 6 pills            |  // [461]
              : and only gave me 24 the last time.            |  // [461]
              :                                               |  // [461]
              : U_OF_M football traffic also slowed me        |  // [461]
              : down, but luckily I left house at about       |  // [461]
              : 9:30 AM. The hospital was pretty empty        |  // [461]
              : where I went. So SATURDAY is not a bad        |  // [461]
              : day to go to hospital. Though now that        |  // [461]
              : I have gotten my drugs at another             |  // [461]
              : pharmacy because the one I usually go         |  // [461]
              : to is closed.... Guarantee my stuff           |  // [461]
              : will be at the WRONG PHARMACY next            |  // [461]
              : time I visit hospital and it will             |  // [461]
              : involve an hour wait.                         |  // [461]
                                                              |  // [461]
        Anyways, the pros of all of this are that I sketched  |  // [461]
        out idea for how simulation code for growing          |  // [461]
        stuff will work. And how the groove layer within      |  // [461]
        the tilemap will work...                              |  // [461]
                                                              |  // [461]
        I hope this is my FINAL DRAFT of what the extra       |  // [461]
        META_DATA_LAYERS will be used for.                    |  // [461]
                                                              |  // [461]
            TAG[ META_DATA_LAYERS | Meta Data Layers ]        |  // [461]
            TAG[ meta-data-layers | metadata layers  ]        |  // [461]
            TAG[ meta-data | meta_data | metadata    ]        |  // [461]
                                                              |  // [461]
    :----------------------------------------: #_FINAL_FRUITY_#  // [461]
    #_MEMORY_PALACE_THOUGHTS_# :------------------------------+  // [461]
                                                              |  // [461]
        A lot of times I have re-occuring memories.           |  // [461]
        And with that memory comes a vision of the            |  // [461]
        exact place I was standing when I had the             |  // [461]
        idea.                                                 |  // [461]
                                                              |  // [461]
        Because of this strong association between            |  // [461]
        physical place and thought, that is why I             |  // [461]
        included my hospital journey in the "Final Fruity"    |  // [461]
        section of code comments above.                       |  // [461]
                                                              |  // [461]
        I figure these notes of what I did the day I          |  // [461]
        figured out the final cellular automata scheme        |  // [461]
        for the game will help me not lose this               |  // [461]
        information within my massive never-ending            |  // [461]
        pile of notes that is the bottom of                   |  // [461]
        this file known currently as:                         |  // [461]
        "ATOMIC_IVY_MMO.JS"                                   |  // [461]
    :---------------------------------------------------------+  // [461]
    #_MIR_LAT_# :---------------------------------------------+  // [461]
    #_LAT_MIR_# :---------------------------------------------+  // [461]
                                                              |  // [461]
        @MIR_LAT@ : Mirroring and Latching                    |  // [461]
        @LAT_MIR@ : Latching and Mirroring                    |  // [461]
                                                              |  // [461]
        #_MIR_LAT_MG0_# :----------------------------------+  |  // [461]
        #_LAT_MIR_MG0_# :----------------------------------+  |  // [461]
                                                           |  |  // [461]
            MIDGROUNDS's latching and mirror bits          |  |  // [461]
            smashed together into one bit mask and         |  |  // [461]
            one shift value.                               |  |  // [461]
                                                           |  |  // [461]
            Added for rotation function:                   |  |  // [461]
            FUNC[ F_MIRMAID _ AM6_U32 _ ROT_DIR ]          |  |  // [461]
                                                           |  |  // [461]
        :--------------------------------------------------+  |  // [461]
        #_MIR_LAT_BG1_# :----------------------------------+  |  // [461]
        #_LAT_MIR_BG1_# :----------------------------------+  |  // [461]
                                                           |  |  // [461]
            BACKGROUNDS's latching and mirror bits         |  |  // [461]
            smashed together into one bit mask and         |  |  // [461]
            one shift value.                               |  |  // [461]
                                                           |  |  // [461]
            Added for rotation function:                   |  |  // [461]
            FUNC[ F_MIRMAID _ AM6_U32 _ ROT_DIR ]          |  |  // [461]
                                                           |  |  // [461]
        :--------------------------------------------------+  |  // [461]
        #_MIR_LAT_FG2_# :----------------------------------+  |  // [461]
        #_LAT_MIR_FG2_# :----------------------------------+  |  // [461]
                                                           |  |  // [461]
            FOREGROUND's latching and mirror bits          |  |  // [461]
            smashed together into one bit mask and         |  |  // [461]
            one shift value.                               |  |  // [461]
                                                           |  |  // [461]
            Added for rotation function:                   |  |  // [461]
            FUNC[ F_MIRMAID _ AM6_U32 _ ROT_DIR ]          |  |  // [461]
                                                           |  |  // [461]
        :--------------------------------------------------+  |  // [461]
                                                              |  // [461]
                                                              |  // [461]
                                                              |  // [461]
    :---------------------------------------------: #_LAT_MIR_#  // [461]
    :---------------------------------------------: #_MIR_LAT_#  // [461]

    #_NOME_GNOMBE_GNOME_# :-----------------------------------+  // [462]
                                                              |  // [462]
        TAG[ FUCKING_IMPS_MAN  ]                              |  // [462]
        TAG[ FUCKING_IMP_MAN   ]                              |  // [462]
        TAG[ TILE_ROTATING_IMP ]                              |  // [462]
                                                              |  // [462]
        I can't spell "gnobme" to save my life. But anyways,  |  // [462]
        think of the rotation problem we need to solve as     |  // [462]
        having a "Gnombe" on screen. That "gnombe" rotates    |  // [462]
        tiles counter clockwise for you. But if you FLIP      |  // [462]
        the tile on the X or Y axis, you also flip the        |  // [462]
        GNOMBE.                                               |  // [462]
                                                              |  // [462]
        When flipping the gnombe, the gnombe keeps on         |  // [462]
        flipping tiles the way he always does.                |  // [462]
                                                              |  // [462]
        But now... There is a problem.                        |  // [462]
                                                              |  // [462]
        1. HE IS MAKING EYE CONTACT WITH YOU WHILE HE DOES IT!|  // [462]
                                                              |  // [462]
        2. His "Clockwise" is your "Anti-Clockwise".          |  // [462]
                                                              |  // [462]
        When rotating tiles, you want the rotational          |  // [462]
        outcome to be from YOUR PERSPECTIVE as the            |  // [462]
        user looking into the screen. But if you have         |  // [462]
        ONE AND ONLY ONE of the mirroring bits set in         |  // [462]
        the auto tile you are laying down, the GNOMBE's       |  // [462]
        perspective is no longer your perspective.            |  // [462]
                                                              |  // [462]
        You tell the gnombe to "Rotate Anti Clockwise"        |  // [462]
        and the little asshole does the exact opposite        |  // [462]
        of what you tell him.                                 |  // [462]
                                                              |  // [462]
        Maybe that "Gnombe" is actually an "Imp".             |  // [462]
                                                              |  // [462]
        Maybe he should just be an "Imp" for the fact         |  // [462]
        that I can spell "Imp" but I can't spell              |  // [462]
        "Gnombe".                                             |  // [462]
    :---------------------------------------------------------+  // [462]
    #_MIR_GET_# :---------------------------------------------+  // [462]
                                                              |  // [462]
        State of the mirroring codes affects rotation.        |  // [462]
        If we are flipped only on the X or only on the        |  // [462]
        Y, we need to rotate in the OPPOSITE direction        |  // [462]
        to visually rotate in the desired direction.          |  // [462]
    :---------------------------------------------------------+  // [462]
    #_DEPRESSED_SHOWER_THOUGHTS_2022_# :----------------------+  // [462]
                                                              |  // [462]
        The different power of 2 background tiles can         |  // [462]
        be for different size pre-fabricated items            |  // [462]
        to throw into the background.                         |  // [462]
                                                              |  // [462]
        IDEA: 4 bit BACKGROUND tile value could be :          |  // [462]
                                                              |  // [462]
            A : Shelving with items in it.                    |  // [462]
              :  BIN[ I I S S ]                               |  // [462]
              :  BIN[ 0_0_0_0 ]                               |  // [462]
                                                              |  // [462]
              : BIT[ I ]=== Item type, 3 item types.          |  // [462]
              : BIT[ S ]=== Shelf type.                       |  // [462]
                                                              |  // [462]
              : S1 : Shelf type #1 , cubbies.                 |  // [462]
              : S2 : Shelf type #2 , home depot shelves.      |  // [462]
              : S3 : Shelf type #3 , Hexagons or something.   |  // [462]
                                                              |  // [462]
        IDEA: 4 bit FOREGROUND tile could be :                |  // [462]
                                                              |  // [462]
            A : Scaffolding And Bolts And Stuff.              |  // [462]
                                                              |  // [462]
              BIN[ S W L B ]                                  |  // [462]
                                                              |  // [462]
              S : Scaffold Bar Here?                          |  // [462]
              W : Window Panel Here?                          |  // [462]
              L : Latching Connector Between Window And       |  // [462]
                  scaffold here?                              |  // [462]
              B : Decorative bolt here?                       |  // [462]
                                                              |  // [462]
            Could be a modular building system and then       |  // [462]
            the different POWER OF 2 tiles could be used      |  // [462]
            as masks to change the style of this scaffold     |  // [462]
            system for wherever the power of 2 tiles          |  // [462]
            overlap.                                          |  // [462]
                                                              |  // [462]
    :---------------------------------------------------------+  // [462]
    #_SHOWER_THOUGHTS_PRE_FAB_MAP_# :-------------------------+  // [462]
    #_PRE_FAB_MAP_# :-----------------------------------------+  // [462]
                                                              |  // [462]
        If we make a pre-fab map....                          |  // [462]
                                                              |  // [462]
        1. Where are the pre-fabs stored?                     |  // [462]
        2. Are they same size or smaller than normal tiles?   |  // [462]
        3. Are they drawn using same rules as normal tilemap? |  // [462]
                                                              |  // [462]
    :---------------------------------------------------------+  // [462]
    #_WHERE_TO_FIND_MASTER_MEMORY_DIAGRAMS_# :----------------+  // [462]
                                                              |  // [462]
        TAG[ master-memory-layout | master-mem-layout ]       |  // [462]
        TAG[ master_memory_layout | master_mem_layout ]       |  // [462]
        TAG[ master memory layout | master mem layout ]       |  // [462]
        USE[ _MMT_PREFAB_RESEARCH_ ]FOR_MASTER_MEM_DIAGRAMS   |  // [462]
                                                              |  // [462]
        #_MMT_PREFAB_RESEARCH_# :-------------------------+   |  // [462]
                                                          |   |  // [462]
            I am trying to figure out where in the        |   |  // [462]
            master memory I could store "pre-fabs"        |   |  // [462]
            that go into the background. This tag         |   |  // [462]
            is for those diagrams of interest.            |   |  // [462]
                                                          |   |  // [462]
            @MMT_PREFAB_RESEARCH@ :----------------+      |   |  // [462]
                                                   |      |   |  // [462]
                MMT === Master Memory Tag          |      |   |  // [462]
                PREFAB === PRE-FABricated Parts    |      |   |  // [462]
                RESEARCH === Research / Reference  |      |   |  // [462]
            :--------------------------------------+      |   |  // [462]
                                                          |   |  // [462]
                TAG[ #_FILE896_# ]                        |   |  // [462]
                                                          |   |  // [462]
                |<-------- 896 pixels -------->|          |   |  // [462]
                [01]  [02][03][04][05][06]  [07]          |   |  // [462]
                                                          |   |  // [462]
                [08]  [__][__][__][__][__]  [09]          |   |  // [462]
                [10]  [__][__][__][__][__]  [11]          |   |  // [462]
                [12]  [__][__][__][__][__]  [13]          |   |  // [462]
                [14]  [__][__][__][__][__]  [15]          |   |  // [462]
                [16]  [__][__][__][__][__]  [01]          |   |  // [462]
                                                          |   |  // [462]
                [02]  [03][04][05][06][07]  [08]          |   |  // [462]
                                                          |   |  // [462]
                Okay... 16 128x128 cells to re-create     |   |  // [462]
                the 512x512 levelpack...                  |   |  // [462]
                                                          |   |  // [462]
                8 128x128 cells for PREFABS...            |   |  // [462]
                                                          |   |  // [462]
                [01][02][03][04]                          |   |  // [462]
                [05][06][07][08]                          |   |  // [462]
                                                          |   |  // [462]
                But... That doesn't fit well into         |   |  // [462]
                a power of 2 canvas does it?              |   |  // [462]
                                                          |   |  // [462]
                One 128x128 is FOUR 64x64...              |   |  // [462]
                                                          |   |  // [462]
                Okay... Lets figure out how many blocks   |   |  // [462]
                we have to work with....                  |   |  // [462]
                                                          |   |  // [462]
                8  128x128  cells                         |   |  // [462]
                32   64x64  cells                         |   |  // [462]
                128  32x32  cells                         |   |  // [462]
                                                          |   |  // [462]
            :---------------------------------------------+   |  // [462]
                                                              |  // [462]
    :---------------------------------------------------------+  // [462]
    #_PRE_FAB_SPACE_PARTITIONING_# :--------------------------+  // [462]
                                                              |  // [462]
        If we split the PLAYER-sized tile into 16ths,         |  // [462]
        and then all pre-fabs are drawn on a tilemap          |  // [462]
        that is scaled down to 1:16 scale....                 |  // [462]
                                                              |  // [462]
        Is that TOO dense?                                    |  // [462]
                                                              |  // [462]
        |<------------ ONE_PLAYER_SIZED_TILE ------------>|   |  // [462]
        |<------------ SIXTEEN_MICRO_TILES -------------->|   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
                                                              |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
        [ ][ ][ ][ ][ ][ ][ ][ ]   [ ][ ][ ][ ][ ][ ][ ][ ]   |  // [462]
                                                              |  // [462]
                                                              |  // [462]
        The FOREGROUND SCAFFOLD and BACKGROUND PRE-FABS       |  // [462]
        should use the ___SAME___                             |  // [462]
        PALYER-size-tile micro-partitioning so that we can    |  // [462]
        do optimized occlusion.                               |  // [462]
                                                              |  // [462]
        Instead of pre-selecting a TILE to render,            |  // [462]
        we pre-select a region of 16x16 micro-tiles.          |  // [462]
                                                              |  // [462]
        TAG[ micro-tile | micro_tile | microtile ]            |  // [462]
                                                              |  // [462]
        @MICRO_TILE@ : A tile SMALLER than PLAYER-sized tile. |  // [462]
                                                              |  // [462]
                                                              |  // [462]
    :---------------------------------------------------------+  // [462]
    TAG[ game-sized-tile ]FIX[ player-sized-tile ] ::::::::::::  // [462]
    TAG[ game_sized_tile ]FIX[ player_sized_tile ] ::::::::::::  // [462]
    TAG[ game sized tile ]FIX[ player sized tile ] ::::::::::::  // [462]
    #_WATCHING_YOUTUBE_2022_11_12_# :-------------------------+  // [462]
                                                              |  // [462]
        The world hates creative people?                      |  // [462]
        https://www.youtube.com/watch?v=A9avVhZrMOc           |  // [462]
    :---------------------------------------------------------+  // [462]
    #_THREE_TONE_PREFABS_# :----------------------------------+  // [462]
                                                              |  // [462]
        Because it is drawn smaller, we don't need to         |  // [462]
        know rotation and mirroring of the pre-fab            |  // [462]
        design auto tiles. That is just too much info         |  // [462]
        that will make things harder to anti-alias.           |  // [462]
                                                              |  // [462]
        Keeping the latching bits might be nice though....    |  // [462]
                                                              |  // [462]
        So..                                                  |  // [462]
                                                              |  // [462]
        1111 <--- 4 bit design.                               |  // [462]
                                                              |  // [462]
            2 bits ===> 3 tone tile map design.               |  // [462]
            2 bits ===> auto tile latching flags.             |  // [462]
                                                              |  // [462]
        10 bits per layer.... We can get 2 layers             |  // [462]
        worth of designs this way.                            |  // [462]
                                                              |  // [462]
        Hmm.... Seems wasteful and not acceptable.            |  // [462]
                                                              |  // [462]
    :---------------------------------------------------------+  // [462]
    #_ONE_TONE_PREFABS_# :------------------------------------+  // [462]
                                                              |  // [462]
        The different powers of 2 can be different shades     |  // [462]
        and the tile either exists or does not exist          |  // [462]
        for a given power of 2 pre-fab design tile.           |  // [462]
                                                              |  // [462]
        This is all we need to make basic castlevania         |  // [462]
        style glass pane panel designs.                       |  // [462]
                                                              |  // [462]
        Maybe the other power of 2 background tiles are       |  // [462]
        just used to tint the player-sized-tile prefabs?      |  // [462]
                                                              |  // [462]
        Since we have 8 128x128 cells, and 10 bits per        |  // [462]
        layer to work with....                                |  // [462]
                                                              |  // [462]
        That would make 80 pre-fabs.                          |  // [462]
                                                              |  // [462]
        Is that too much? Or just enough?                     |  // [462]
                                                              |  // [462]
    :---------------------------------------------------------+  // [462]
    #_TWO_TONE_PREFABS_# :------------------------------------+  // [462]
                                                              |  // [462]
        Same idea as[ _ONE_TONE_PREFABS_ ], but if we use     |  // [462]
        2-bits per tile design we get :                       |  // [462]
                                                              |  // [462]
            8 128_x_128 prefab cells, 10 bits per layer...    |  // [462]
                                                              |  // [462]
            Means we get 40 pre-fabs. But now we get two      |  // [462]
            colors. One can be used as outline color,         |  // [462]
            the other can be used for fill color.             |  // [462]
                                                              |  // [462]
            40 pre-fab designs seems more managable than      |  // [462]
            80 pre-fab designs.                               |  // [462]
                                                              |  // [462]
    :---------------------------------------------------------+  // [462]
    #_PREFAB_MEMORY_SLOTS_# :---------------------------------+  // [462]
    #_PREFAB_MASTER_MEMORY_SLOTS_# :--------------------------+  // [462]
                                                                 // [462]
                                                                 // [462]
        TAG[ _MMT_PREFAB_RESEARCH_ ]                             // [462]
                                                                 // [462]
        |<------------------ PIX2048 ------------------->|       // [462]
        |                                      |<--512-->|       // [462]
        +---===---+  +---===---+  +---===---+  +---===---+       // [462]
        |         |  |         |  |         |  |         |       // [462]
        |___mm0___|  |___mm1___|  |___mm2___|  |___mm3___|       // [462]
        |         |  |         |  |         |  |         |       // [462]
        +---===---+  +---===---+  +---===---+  +---===---+       // [462]
                                                                 // [462]
        +---===---+  +---===---+  +---===---+  +---===---+       // [462]
        |         |  |         |  |         |  |         |       // [462]
        |___mm4___|  |___mm5___|  |___mm6___|  |___mm7___|       // [462]
        |         |  |         |  |         |  |         |       // [462]
        +---===---+  +---===---+  +---===---+  +---===---+       // [462]
                                                                 // [462]
        +---===---+  +---===---+  +---===---+  +---===---+       // [462]
        |         |  |         |  |         |  |         |       // [462]
        |___mm8___|  |___mm9___|  |___mma___|  |___mmb___|       // [462]
        |         |  |         |  |         |  |         |       // [462]
        +---===---+  +---===---+  +---===---+  +---===---+       // [462]
                                                                 // [462]
        +---===---+  +---===---+  +---===---+  +---===---+       // [462]
        |         |  |         |  |         |  |         |       // [462]
        |___mmc___|  |___mmd___|  |___mme___|  |___mmf___|       // [462]
        |         |  |         |  |         |  |         |       // [462]
        +---===---+  +---===---+  +---===---+  +---===---+       // [462]
                                                                 // [462]
         ___mm3___ :: Use for PREFAB maps.                       // [462]
         ___mm7___ :: Use for PREFAB maps.                       // [462]
                                                                 // [462]
        +---===---+      +----------------------+ -------=-      // [462]
        |         |      |                      |        |       // [462]
        |___mm3___| ===> | [PF8][PF8][PF8][PF8] |        |       // [462]
        |         |      | [PF8][PF8][PF8][PF8] |        |       // [462]
        +---===---+      |                      |        |       // [462]
        |<--512-->| ---- +----------------------+       512      // [463][462]
                     ||  |                      |        |       // [463][462]
                    256  | [PF8][PF8][PF8][PF8] |<--128  |       // [463][462]
                     ||  | [PF8][PF8][PF8][PF8] |<--128  |       // [463][462]
                     ||  | |   |                |        |       // [463][462]
                    ---- +-|---|----------------+ -------=-      // [463][462]
                         | |128|                |                // [462]
                         |                      |                // [462]
                         |<---------512-------->|                // [462]
                         |                      |                // [462]
                                                                 // [462]
        +---===---+      +----------------------+ -------=-      // [462]
        |         |      |                      |        |       // [462]
        |___mm7___| ===> | [PF8][PF8][PF8][PF8] |        |       // [462]
        |         |      | [PF8][PF8][PF8][PF8] |        |       // [462]
        +---===---+      |                      |        |       // [462]
        |<--512-->|      +----------------------+       512      // [462]
                         |                      |        |       // [462]
                         | [___][___][___][___] |<--128  |       // [462]
                         | [___][___][___][___] |        |       // [462]
                         | |   |                |        |       // [462]
                         +-|---|----------------+ -------=-      // [462]
                         | |128|                |                // [462]
                         |                      |                // [462]
                         |<---------512-------->|                // [462]
                         |                      |                // [462]
                                                                 // [462]
        |<-----___mm3___----->|   |<-----___mm7___----->|        // [462]
        +---------------------+   +---------------------+        // [462]
        |                     |   |                     |        // [462]
        |  +---------------+  |   |  +---------------+  |        // [462]
        |  |               |  |   |  |               |  |        // [462]
        |  | 3_PREFAB_MAPS |  |   |  | 3_PREFAB_MAPS |  |        // [462]
        |  |               |  |   |  |               |  |        // [462]
        |  +---------------+  |   |  +---------------+  |        // [462]
        |  +---------------+  |   |  +---------------+  |        // [462]
        |  |               |  |   |  |               |  |        // [462]
        |  | 3_PREFAB_MAPS |  |   |  | __emptyslot__ |  |        // [462]
        |  |               |  |   |  |               |  |        // [462]
        |  +---------------+  |   |  +---------------+  |        // [462]
        |                     |   |                     |        // [462]
        +---------------------+   +---------------------+        // [462]
                                                                 // [462]
        |<------------------ FILE896 ------------------>|        // [462]
        | X:0 |  | X:1 | X:2 | X:3 | X:4 | X:5 |  | X:6 |        // [462]
        .     .  .     .     .     .     .     .  .     .        // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+        // [462]
    Y:0 | L16 |  | L16 | L16 | L16 | L16 | L16 |  | L16 |        // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+        // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+        // [462]
    Y:1 | L16 |  | tni | tni | tni | tni | tni |  | L16 |        // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+        // [462]
    Y:2 | L16 |  | tni | tni | tni | tni | tni |  | L16 |        // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+        // [462]
    Y:3 | L16 |  | tni | tni | tni | tni | tni |  | L16 |        // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+        // [462]
    Y:4 | L16 |  | tni | tni | tni | tni | tni |  | L16 |        // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+        // [462]
    Y:5 | L16 |  | tni | tni | tni | tni | tni |  | PF8 |        // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+        // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+        // [462]
    Y:6 | PF8 |  | PF8 | PF8 | PF8 | PF8 | PF8 |  | PF8 |        // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+        // [462]
        *     *  *     *     *     *     *     *  *     *        // [462]
        |<128>|  |<128>|<128>|<128>|<128>|<128>|  |<128>|        // [462]
        |<---------------------- 896 ------------------>|        // [462]
        |<------------------ FILE896 ------------------>|        // [462]
                                                                 // [462]
        [L16]/@L16@ : Levelpack chunk , 16 chunks total.         // [462]
        [PF8]/@PF8@ : Pre_Fab   chunk , 08 chunks total.         // [462]
                                                                 // [---]
            !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!          // [471]
            UPDATE : 2022_11_15 ( November 15th )                // [471]
            UPDATE : USE[ PM8 || PR8 ]INSTEAD_OF[ PF8 ]          // [471]
            !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!          // [471]
                                                                 // [---]
    #_TOMMY_TWO_TONE_# :--------------------------------------+  // [462]
                                                              |  // [462]
        If we do 2-bit(s) per prefab tile data...             |  // [462]
        Oh wait... That would be THREE TONE.                  |  // [462]
                                                              |  // [462]
        BIN[ 00 ] ===> Nothing Tile                           |  // [462]
        BIN[ 01 ] ===> TONE_001                               |  // [462]
        BIN[ 10 ] ===> TONE_002                               |  // [462]
        BIN[ 11 ] ===> TONE_003                               |  // [462]
                                                              |  // [462]
        Two Tone Example Image:                               |  // [462]
                                                              |  // [462]
        IMGUR_URL[ https://i.imgur.com/WE3v50z.png ]          |  // [462]
        DOCU_PATH[ R:/G/AIM/DOC/PNG/001.TTT.PNG    ]          |  // [462]
                                                              |  // [462]
    :---------------------------------------------------------+  // [462]
    #_TOMMY_THREE_TONE_# :------------------------------------+  // [462]
                                                              |  // [462]
        Okay... 2 bits per tile, 4_x_2 grid of 128_x_128      |  // [462]
        pre-fab maps... So... 8 pre-fab pixel chunks...       |  // [462]
                                                              |  // [462]
        And 2 bits per tile...                                |  // [462]
                                                              |  // [462]
        10 bits per layer...                                  |  // [462]
                                                              |  // [462]
        80 pre-fab maps total.                                |  // [462]
        NO YOU IDIOT, THAT IS 4 PRE_FAB_MAPS!!!!!!!!!!!!!!!!!!|  // [463]
        ( 10bits per layer / 2 bits per map == 5 maps )       |  // [463]
        ( 5 maps per "PF8" cell )*(4_X_2 PF8 Cells)==(_____)  |  // [463]
        ( 5 maps )*( 8 PF8 Cells )===(40 pre-fab maps total)  |  // [463]
        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!|  // [463]
                                                              |  // [462]
        Only 64 of those will be addressable.                 |  // [462]
                                                              |  // [462]
        Pre-fabs will be on the FOREGROUND layer...           |  // [462]
                                                              |  // [462]
                                                              |  // [462]
        IMGUR_URL[ https://i.imgur.com/GPQikm3.png ]          |  // [462]
        DOCU_PATH[ R:\G\AIM\DOC\PNG\002.TTT.PNG    ]          |  // [462]
                                                              |  // [462]
                                                              |  // [462]
        [ 111111 11 11 ] <=== 10 bits, Foreground layer.      |  // [462]
                                                              |  // [462]
        |<--_V64_-->| _M_X_ _M_Y_ _RO4_                       |  // [462]
        [ 1_1_1_1_1_1 __1__ __1__ _1_1_ ]                     |  // [462]
                                                              |  // [462]
        _V64_ : Tile Value , [ 0-to-(64-1) ]INCLUSIVE         |  // [462]
        _M_X_ : Mirroring On X                                |  // [462]
        _M_Y_ : Mirroring On Y                                |  // [462]
        _RO4_ : 2_Bit_Rotation ( 0 , 90 , 180 , 270 )         |  // [462]
                                                              |  // [462]
        Hmmm.... Mirroring and rotation doesn't make          |  // [462]
        much sense if image is 2 tone auto tiling....         |  // [462]
                                                              |  // [462]
        AH!!!!                                                |  // [462]
                                                              |  // [462]
        Addressing for 64 pre-fabs...                         |  // [463]
        This CANNOT BE USED because the math says             |  // [463]
        we have 40 pre-fabs, not 80...                        |  // [463]
        +------------------------------------------------+    |  // [462]
        |                                                |    |  // [462]
        |    |<--_P64_-->| |<--_TDM_->|                  |    |  // [462]
        |  [ _1_1_1_1_1_1_ _1__1__1__1_ ]                |    |  // [462]
        |                                                |    |  // [462]
        |  @_P64_@ : PRE_FAB value , capacity 64 values. |    |  // [462]
        |  @_TDM_@ : Texture Decal Mask.                 |    |  // [462]
        +------------------------------------------------+    |  // [462]
                                                              |  // [462]
    :---------------------------------------------------------+  // [462]
    #_PREFAB_EDITOR_# :---------------------------------------+  // [462]
                                                              |  // [462]
        We will use the same "THE_DUM" layout, but            |  // [462]
        slightly modify it for the "PREFAB EDITOR".           |  // [462]
                                                              |  // [462]
        There will be 5 pages of designs that you             |  // [462]
        can flip through for a levelpack.                     |  // [462]
                                                              |  // [462]
        Each page looks at a different sub-set of             |  // [462]
        2-bits within a cell from[ 3_PREFAB_MAPS ]data        |  // [462]
        on the master memory.                                 |  // [462]
                                                              |  // [462]
        +-------------------+ +--------+ +-------------------+|  // [462]
        |                   | |        | |                   ||  // [462]
        |                   | |        | |                   ||  // [462]
        |                   | |        | |                   ||  // [462]
        |        +----------+ +--------+ +----------+        ||  // [462]
        |        | +--------+ +--------+ +--------+ |        ||  // [462]
        |        | |        | |        | |        | |        ||  // [462]
        |        | |   PR0  | |   PR1  | |   PR2  | |        ||  // [462]
        |        | |        | |        | |        | |        ||  // [462]
        +--------+ +--------+ +--------+ +--------+ +--------+|  // [462]
        +--------+ +--------+ +--------+ +--------+ +--------+|  // [462]
        |        | |        | |        | |        | |        ||  // [462]
        |        | |   PR3  | |        | |   PR4  | |        ||  // [462]
        |        | |        | |        | |        | |        ||  // [462]
        +--------+ +--------+ +--------+ +--------+ +--------+|  // [462]
        +--------+ +--------+ +--------+ +--------+ +--------+|  // [462]
        |        | |        | |        | |        | |        ||  // [462]
        |        | |   PR5  | |   PR6  | |   PR7  | |        ||  // [462]
        |        | |        | |        | |        | |        ||  // [462]
        |        | +--------+ +--------+ +--------+ |        ||  // [462]
        |        +----------+ +--------+ +----------+        ||  // [462]
        |                   | |        | |                   ||  // [462]
        |                   | |        | |                   ||  // [462]
        |                   | |        | |                   ||  // [462]
        +-------------------+ +--------+ +-------------------+|  // [462]
                                                              |  // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+     |  // [462]
        |     |  |     |     |     |     |     |  |     |     |  // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+     |  // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+     |  // [462]
        |     |  |     |     |     |     |     |  |     |     |  // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+     |  // [462]
        |     |  |     |     |     |     |     |  |     |     |  // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+     |  // [462]
        |     |  |     |     |     |     |     |  |     |     |  // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+     |  // [462]
        |     |  |     |     |     |     |     |  |     |     |  // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+     |  // [462]
        |     |  |     |     |     |     |     |  | PM0 |     |  // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+     |  // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+     |  // [462]
        | PM1 |  | PM2 | PM3 | PM4 | PM5 | PM6 |  | PM7 |     |  // [462]
        +-----+  +-----+-----+-----+-----+-----+  +-----+     |  // [462]
                                                              |  // [462]
                                                              |  // [462]
        [PM0]<===>[PR0] : Prefab[ Memory||Render ]( #[0] )    |  // [462]
        [PM1]<===>[PR1] : Prefab[ Memory||Render ]( #[1] )    |  // [462]
        [PM2]<===>[PR2] : Prefab[ Memory||Render ]( #[2] )    |  // [462]
        [PM3]<===>[PR3] : Prefab[ Memory||Render ]( #[3] )    |  // [462]
        [PM4]<===>[PR4] : Prefab[ Memory||Render ]( #[4] )    |  // [462]
        [PM5]<===>[PR5] : Prefab[ Memory||Render ]( #[5] )    |  // [462]
        [PM6]<===>[PR6] : Prefab[ Memory||Render ]( #[6] )    |  // [462]
        [PM7]<===>[PR7] : Prefab[ Memory||Render ]( #[7] )    |  // [462]
                                                              |  // [462]
        @PM0@ : Prefab_MEMORY_layout_block_0                  |  // [462]
        @PM1@ : Prefab_MEMORY_layout_block_1                  |  // [462]
        @PM2@ : Prefab_MEMORY_layout_block_2                  |  // [462]
        @PM3@ : Prefab_MEMORY_layout_block_3                  |  // [462]
        @PM4@ : Prefab_MEMORY_layout_block_4                  |  // [462]
        @PM5@ : Prefab_MEMORY_layout_block_5                  |  // [462]
        @PM6@ : Prefab_MEMORY_layout_block_6                  |  // [462]
        @PM7@ : Prefab_MEMORY_layout_block_7                  |  // [462]
                                                              |  // [462]
        @PR0@ : Prefab_RENDER_layout_block_0                  |  // [462]
        @PR1@ : Prefab_RENDER_layout_block_1                  |  // [462]
        @PR2@ : Prefab_RENDER_layout_block_2                  |  // [462]
        @PR3@ : Prefab_RENDER_layout_block_3                  |  // [462]
        @PR4@ : Prefab_RENDER_layout_block_4                  |  // [462]
        @PR5@ : Prefab_RENDER_layout_block_5                  |  // [462]
        @PR6@ : Prefab_RENDER_layout_block_6                  |  // [462]
        @PR7@ : Prefab_RENDER_layout_block_7                  |  // [462]
                                                              |  // [462]
                                                              |  // [462]
        @PM8@ : Means[ PM[0||1||2||3||4||5||6||7] ]           |  // [462]
        @PR8@ : Means[ PR[0||1||2||3||4||5||6||7] ]           |  // [462]
                                                              |  // [462]
    :--------------------------------------:  #_PREFAB_EDITOR_#  // [462]
    #_OHNO_MY_TECH_JOBS_# :-----------------------------------+  // [462]
                                                              |  // [462]
        https://www.youtube.com/watch?v=xHKD1k_ZjPg           |  // [462]
    :---------------------------------------------------------+  // [462]
    #_INITIAL_ROTOS_# :---------------------------------------+  // [462]
                                                              |  // [462]
        INITIAL_ROTational_OffSet .                           |  // [462]
                                                              |  // [462]
        The initial rotational offset for each layer          |  // [462]
        will diverge if when inspecting the mirror            |  // [462]
        bits of the different layers, we find some            |  // [462]
        layers are mirrored on ONLY ONE AXIS and              |  // [462]
        other layers are mirrored on 1 or both AXIS(es).      |  // [462]
                                                              |  // [462]
    :---------------------------------------------------------+  // [462]
    #_RO4_ROT_ANY_# :-----------------------------------------+  // [462]
                                                              |  // [462]
        Rotation rotates in "ANY" direction. Because          |  // [462]
        it now depends on what happens to the direction       |  // [462]
        [neg_pos/pos_neg] value by the time it gets to        |  // [462]
        this section of code.                                 |  // [462]
    :---------------------------------------------------------+  // [462]

    @Y_H_O_F_J@ : You_Have_One_Fucking_Job ::::::::::::::::::::  // [465]
    @_H_KEY_@ ::: Denoting code associated with         :::::::  // [465]
              ::: pressing the [H] key on the keyboard. :::::::  // [465]

    #_CLKSPAWN_# :--------------------------------------------+  // [466]
                                                              |  // [466]
        SEE[ SAVEBOX_CLICKSPAWN ].                            |  // [466]
        TAG[ _CLICKSPAWN_ ][____]                             |  // [466]
                                                              |  // [466]
        If you invoke the "click()" function on an            |  // [466]
        anchor tag. It opens up a "save file dialog".         |  // [466]
        Or maybe it is technically a "download file dialog"?  |  // [466]
    :---------------------------------------------------------+  // [466]

    #_WHEN_REVOKE_2022_# :------------------------------------+  // [467]
                                                              |  // [467]
        @WHY_I_HATE_JAVASCRIPT@                               |  // [467]
        @HATE_JAVASCRIPT@                                     |  // [467]
                                                              |  // [467]
        Sometimes, javascript does really stupid              |  // [467]
        fucking stuff.                                        |  // [467]
                                                              |  // [467]
        Apparently in 2022, year of our lord, there           |  // [467]
        is no simple non-hackish way to set a callback        |  // [467]
        for when a URL is done downloading.                   |  // [467]
                                                              |  // [467]
        I also cannot find much documentation of              |  // [467]
        "revoke object url" ( revokeObjectURL ).              |  // [467]
                                                              |  // [467]
        Like... If I can't get a callback working for         |  // [467]
        download, how the fuck am I supposed to be            |  // [467]
        able to call "revokeObjectURL" when I am done         |  // [467]
        with the URL?                                         |  // [467]
    :---------------------------------------------------------+  // [467]
    #_FUCKING_HELL_MAN_2022_11_14_# :-------------------------+  // [467]
                                                              |  // [467]
        Variables need very specific rules on how many        |  // [467]
        letters they are "save2048" violates those rules.     |  // [467]
                          12345678 <-- 8 chars NOT ALLOWED!!!!|  // [467]
                                                              |  // [467]
        p_123_123_123_123      <-- NOTICE_THE_CLUSTER_PATTERN!|  // [467]
        p_1234567_123_123      <-- NOTICE_THE_CLUSTER_PATTERN!|  // [467]
        p_1234567_1234567      <-- NOTICE_THE_CLUSTER_PATTERN!|  // [467]
        p_1234567_1234567_123  <-- NOTICE_THE_CLUSTER_PATTERN!|  // [467]
                                                              |  // [467]
        "p_" optional prefix that tells me the "kind"         |  // [467]
             of data. Basically "apps hungarian notation".    |  // [467]
             But can be "systems hungarian". Only one         |  // [467]
             letter, do not mix+match prefixes.               |  // [467]
                                                              |  // [467]
        REFACTOR[ save2048 ]===>[ sav2048 ]                   |  // [467]
                                                              |  // [467]
    :---------------------------------------------------------+  // [467]

    #_SO_7893972_# :------------------------------------------+  // [468]
                                                              |  // [468]
        https://stackoverflow.com/questions/7893972           |  // [468]
                                                              |  // [468]
    :---------------------------------------------------------+  // [468]
    #_NOTHERE_# :---------------------------------------------+  // [468]
                                                              |  // [468]
        Using "PreventDefault" ( prevent default )here        |  // [468]
        will cause the game to not startup correctly.         |  // [468]
        Also, it blocks "F12" for debugger which is           |  // [468]
        not ideal.                                            |  // [468]
    :---------------------------------------------------------+  // [468]

    #_DEFAULT_RANDOM_CONFIG_# :-------------------------------+  // [469]
                                                              |  // [469]
        If we turned on the "random brush flag" then at       |  // [469]
        least one selection should be configured to be        |  // [469]
        random :                                              |  // [469]
            ONE OR MORE OF :                                  |  // [469]
                                                              |  // [469]
            1.  edi.edi_mod_ran_te7                           |  // [469]
            2.  edi.edi_mod_ran_la3                           |  // [469]
            3.  edi.edi_mod_ran_v16                           |  // [469]
    :---------------------------------------------------------+  // [469]
    #_RANDOM_BRUSH_RANGES_# :---------------------------------+  // [469]
                                                              |  // [469]
        TE7 && V16 have random selection ranges.              |  // [469]
                                                              |  // [469]
        LA3 DOES NOT HAVE A RANDOM SELECTION RANGE...         |  // [469]
                                                              |  // [469]
        Because random selection range over 3 layers          |  // [469]
        is kind of pointless. So instead each layer           |  // [469]
        is assigned a weighted integer for the                |  // [469]
        relative frequency that layer should be picked        |  // [469]
        in relation to other layers.                          |  // [469]
                                                              |  // [469]
        WE MIGHT NOT FINISH THIS CODE BEFORE WE BEGIN         |  // [469]
        WORK ON FILE896 SAVE FORMAT IN VIDEO #4_7_1.          |  // [469]
                                                              |  // [469]
    :---------------------------------------------------------+  // [469]
    #_RANDOM_LAYER_FREQUENCY_# :------------------------------+  // [469]
                                                              |  // [469]
        The weighted integers that tell us in what            |  // [469]
        frequency we should draw to which of the              |  // [469]
        3 layers. If all are the same number (EVEN ZERO)      |  // [469]
        then all 3 layers have an equal probability           |  // [469]
        of being selected by our randomization brush.         |  // [469]
                                                              |  // [469]
        @frequen_geo@ ::: Frequency Weight : GEOmetry layer.  |  // [469]
        @frequen_bom@ ::: Frequency Weight : BOMb     layer.  |  // [469]
        @frequen_fad@ ::: Frequency Weight : FADa     layer.  |  // [469]
                                                              |  // [469]
        @frequency_geo@ : WRONG_USE[ *_frequen_geo ]          |  // [469]
        @frequency_bom@ : WRONG_USE[ *_frequen_bom ]          |  // [469]
        @frequency_fad@ : WRONG_USE[ *_frequen_fad ]          |  // [469]
                                                              |  // [469]
        @freq_geo@ :::::: WRONG_USE[ *_frequen_geo ]          |  // [469]
        @freq_bom@ :::::: WRONG_USE[ *_frequen_bom ]          |  // [469]
        @freq_fad@ :::::: WRONG_USE[ *_frequen_fad ]          |  // [469]
                                                              |  // [469]
        @fre_geo@ ::::::: WRONG_USE[ *_frequen_geo ]          |  // [469]
        @fre_bom@ ::::::: WRONG_USE[ *_frequen_bom ]          |  // [469]
        @fre_fad@ ::::::: WRONG_USE[ *_frequen_fad ]          |  // [469]
                                                              |  // [469]
    :---------------------------------------------------------+  // [469]

    #_PAN_PSYCHISM_# :----------------------------------------+  // [471]
                                                              |  // [471]
        Showing results for panpsychism.                      |  // [471]
        Search instead for pan psychism?                      |  // [471]
                                                              |  // [471]
        Panpsychism is the view that all things have a        |  // [471]
        mind or a mind-like quality. The word itself was      |  // [471]
        coined by the Italian philosopher Francesco Patrizi   |  // [471]
        in the sixteenth century, and derives from the two    |  // [471]
        Greek words pan (all) and psyche (soul or mind).      |  // [471]
                                                              |  // [471]
        KANJI_NOTE :                                          |  // [471]
            I wouldn't believe in "pan psychism" if it        |  // [471]
            were phrased that way.(as above).                 |  // [471]
            But, there is no strong dividing line betwee      |  // [471]
            hot and cold on a thermometor. And so, there      |  // [471]
            may be no strong dividing line between            |  // [471]
            consicious and unconcious. When someone           |  // [471]
            gets "dementia" they die in installments.         |  // [471]
            But isn't that always aging?                      |  // [471]
    :---------------------------------------------------------+  // [471]
    #_ABOUT_RGBA896_# :---------------------------------------+  // [471]
                                                              |  // [471]
        RGBA896 is our save file format buffer.               |  // [471]
        I also plan on using RGBA896 as an undo buffer.       |  // [471]
        Having the THUMNAIL area in the middle 512_x_512      |  // [471]
        area being used as an undo buffer. Then the           |  // [471]
        meaningful 128x128 blocks are the original            |  // [471]
        state of everything before we started                 |  // [471]
        modifying the levelpack data.                         |  // [471]
                                                              |  // [471]
            @FILE896@ : Previewable Save File Format System.  |  // [471]
            @RGBA896@ : The raw data of FILE896 system.       |  // [471]
                                                              |  // [471]
            (16 + 8 + (5*5))==( 49 )                          |  // [471]
            (16 + 8 + (25 ))==( 49 )                          |  // [471]
                                                              |  // [471]
            |<-------- RGBA896 : ( IN RAM  ) -------->|       |  // [471]
            |<-------- FILE896 : ( ON DISK ) -------->|       |  // [471]
            +-----------------------------------------+       |  // [471]
            |                                         |       |  // [471]
            | [C49]  [C49][C49][C49][C49][C49]  [C49] |       |  // [471]
            |                                         |       |  // [471]
            | [C49]  [C49][C49][C49][C49][C49]  [C49] |       |  // [471]
            | [C49]  [C49][C49][C49][C49][C49]  [C49] |       |  // [471]
            | [C49]  [C49][C49][C49][C49][C49]  [C49] |       |  // [471]
            | [C49]  [C49][C49][C49][C49][C49]  [C49] |       |  // [471]
            | [C49]  [C49][C49][C49][C49][C49]  [C49] |       |  // [471]
            |                                         |       |  // [471]
            | [C49]  [C49][C49][C49][C49][C49]  [C49] |       |  // [471]
            |                                         |       |  // [471]
            +-----------------------------------------+       |  // [471]
            |<----------------- 896 ----------------->|       |  // [471]
            | |128|  |<-------- 640 -------->|  |128| |       |  // [471]
            +-|---|--|-----------------------|--|---|-+       |  // [471]
            | |   |  |                       |  |   | |       |  // [471]
            | [_00]  [_01][_02][_03][_04][_05]  [_06] |       |  // [471]
            |                                         |       |  // [471]
            | [_07]  [_08][_09][_10][_11][_12]  [_13] |       |  // [471]
            | [_14]  [_15][_16][_17][_18][_19]  [_20] |       |  // [471]
            | [_21]  [_22][_23][_24][_25][_26]  [_27] |       |  // [471]
            | [_28]  [_29][_30][_31][_32][_33]  [_34] |       |  // [471]
            | [_35]  [_36][_37][_38][_39][_40]  [_41] |       |  // [471]
            |                                         |       |  // [471]
            | [_42]  [_43][_44][_45][_46][_47]  [_48] |       |  // [471]
            |                                         |       |  // [471]
            +-----------------------------------------+       |  // [471]
            |                                         |       |  // [471]
            | [L16]  [L16][L16][L16][L16][L16]  [L16] |       |  // [471]
            |                                         |       |  // [471]
            | [L16]  [tob][tob][tob][tob][tob]  [L16] |       |  // [471]
            | [L16]  [tob][tob][tob][tob][tob]  [L16] |       |  // [471]
            | [L16]  [tob][tob][tob][tob][tob]  [L16] |       |  // [471]
            | [L16]  [tob][tob][tob][tob][tob]  [L16] |       |  // [471]
            | [L16]  [tob][tob][tob][tob][tob]  [PM8] |       |  // [471]
            |                                         |       |  // [471]
            | [PM8]  [PM8][PM8][PM8][PM8][PM8]  [PM8] |       |  // [471]
            |                                         |       |  // [471]
            +-----------------------------------------+       |  // [471]
            |                                         |       |  // [471]
            |   RELEVANT_LOOKUP_TABLES :::::::::::::  |       |  // [471]
            |   RELEVANT_LUTS ::::::::::::::::::::::  |       |  // [471]
            |                                         |       |  // [471]
            |   @d_l16_c49@ : L16 index to C49 index  |       |  // [471]
            |   @d_pm8_c49@ : PM8 index to C49 index  |       |  // [471]
            |   @d_tob_c49@ : TOB index to C49 index  |       |  // [471]
            |                                         |       |  // [471]
            |   @d_c49_l16@ : C49 index to L16 index  |       |  // [471]
    OUTDATED> > @d_c49_pm8@ : C49 index to PM8 index  |       |  // [480][471]
    OUTDATED> > @d_c49_tob@ : C49 index to TOB index  |       |  // [480][471]
            |                                         |       |  // [471]
            +-----------------------------------------+       |  // [471]
                                                              |  // [471]
        [C49] : 128_x_128 Generic Chunk.([L16]||[PM8]||[tob]) |  // [471]
        [L16] : 128_x_128 Levelpack chunk.                    |  // [471]
        [PM8] : 128_x_128 Prefabrication Memory chunk.        |  // [471]
        [tob] : 128_x_128 : Thumbnail_Or_Buffer chunk.        |  // [471]
                                                              |  // [471]
                @c49@ : Generic Chunk ( l16 || pm8 || tob )   |  // [471]
                @l16@ : Levelpack(   16 chunks total      )   |  // [471]
                @pm8@ : PrefabMemory( 8 chunks total      )   |  // [471]
                @tob@ : Thumbnail_Or_Buffer ( undo buffer )   |  // [471]
                                                              |  // [471]
    :---------------------------------------------------------+  // [471]
    #DATA_ONLY_SUB_SYSTEM# :----------------------------------+  // [471]
                                                              |  // [471]
        @DATA_ONLY_SUB_SYSTEM@ : A sub-system that has no     |  // [471]
                               : associated functions.        |  // [471]
                               : It is just a namespace       |  // [471]
                               : for data. So a "static class"|  // [471]
                                                              |  // [471]
        With a data-only sub-system , I reserve the           |  // [471]
        right to add functions to it later.                   |  // [471]
                                                              |  // [471]
        So... A "data-only-sub-system" is :                   |  // [471]
                                                              |  // [471]
            1. Me kind of "Hedging My Bets".                  |  // [471]
            2. Me wanting extra namespacing to what           |  // [471]
               could be top-level-data that doesn't           |  // [471]
               need a sub-system namespace tacked             |  // [471]
               onto it. But for some reason I want            |  // [471]
               the extra namespacing.                         |  // [471]
    :---------------------------------------------------------+  // [471]
    #_TECHNICALLY_THUMBNAILS_BUT_NOT_ALL_USED_# :-------------+  // [471]
                                                              |  // [471]
        Not all of the "tob" cells are actually used          |  // [471]
        because some of these cells are in "THE VOID"         |  // [471]
        +-----------------------------------------+           |  // [471]
        |                                         |           |  // [471]
        | [L16]  [L16][L16][L16][L16][L16]  [L16] |           |  // [471]
        |                                         |           |  // [471]
        | [L16]  [tob][tob][tob][tob][tob]  [L16] |           |  // [471]
        | [L16]  [tob][tob][tob][tob][tob]  [L16] |           |  // [471]
        | [L16]  [tob][tob][tob][tob][tob]  [L16] |           |  // [471]
        | [L16]  [tob][tob][tob][tob][tob]  [L16] |           |  // [471]
        | [L16]  [tob][tob][tob][tob][tob]  [PM8] |           |  // [471]
        |                                         |           |  // [471]
        | [PM8]  [PM8][PM8][PM8][PM8][PM8]  [PM8] |           |  // [471]
        |                                         |           |  // [471]
        +-----------------------------------------+           |  // [471]
                                                              |  // [471]
        The thumbnail cells we are interested in              |  // [471]
        are marked "[TOB]" here, all other                    |  // [471]
        128_x_128 chunks are marked "[___]".                  |  // [471]
                                                              |  // [471]
        |<---------- 896_x_896  pixels ---------->|           |  // [471]
        +-----------------------------------------+           |  // [471]
        |                                         |           |  // [471]
        | [___]  [___][___][___][___][___]  [___] |           |  // [471]
        |                                         |           |  // [471]
        | [___]  [___][___][tob][___][___]  [___] |           |  // [471]
        | [___]  [___][tob][tob][tob][___]  [___] |           |  // [471]
        | [___]  [tob][tob][tob][tob][tob]  [___] |           |  // [471]
        | [___]  [___][tob][tob][tob][___]  [___] |           |  // [471]
        | [___]  [___][___][tob][___][___]  [___] |           |  // [471]
        |                                         |           |  // [471]
        | [___]  [___][___][___][___][___]  [___] |           |  // [471]
        |                                         |           |  // [471]
        +-----------------------------------------+           |  // [471]
    :---------------------------------------------------------+  // [471]

    #_128_X_128_CHUNK_ENUMS_# :-------------------------------+  // [472]
                                                              |  // [472]
        If we are going to make lookup tables for our         |  // [472]
        data format , we need to formalize these              |  // [472]
        49 chunks so we have a clear mental model             |  // [472]
        of what the fuck we are doing.                        |  // [472]
                                                              |  // [472]
        +-----------------------------------------+           |  // [472]
        |<----------------- 896 ----------------->|           |  // [472]
        | |128|  |<-------- 640 -------->|  |128| |           |  // [472]
        +-|---|--|-----------------------|--|---|-+           |  // [472]
        | |   |  |                       |  |   | |           |  // [472]
        | [c00]  [c01][c02][c03][c04][c05]  [c06] |           |  // [472]
        |                                         |           |  // [472]
        | [c07]  [c08][c09][c10][c11][c12]  [c13] |           |  // [472]
        | [c14]  [c15][c16][c17][c18][c19]  [c20] |           |  // [472]
        | [c21]  [c22][c23][c24][c25][c26]  [c27] |           |  // [472]
        | [c28]  [c29][c30][c31][c32][c33]  [c34] |           |  // [472]
        | [c35]  [c36][c37][c38][c39][c40]  [c41] |           |  // [472]
        |                                         |           |  // [472]
        | [c42]  [c43][c44][c45][c46][c47]  [c48] |           |  // [472]
        |                                         |           |  // [472]
        +-----------------------------------------+           |  // [472]
        TAG[ ___________128_x_128_chunk_enums___________ ]::::|  // [472]
                                                              |  // [472]
        [c00]===(  c_c00  )  [c01]===(  c_c01  )              |  // [472]
        [c02]===(  c_c02  )  [c03]===(  c_c03  )              |  // [472]
        [c04]===(  c_c04  )  [c05]===(  c_c05  )              |  // [472]
        [c06]===(  c_c06  )  [c07]===(  c_c07  )              |  // [472]
        [c08]===(  c_c08  )  [c09]===(  c_c09  )              |  // [472]
        [c10]===(  c_c10  )  [c11]===(  c_c11  )              |  // [472]
        [c12]===(  c_c12  )  [c13]===(  c_c13  )              |  // [472]
        [c14]===(  c_c14  )  [c15]===(  c_c15  )              |  // [472]
        [c16]===(  c_c16  )  [c17]===(  c_c17  )              |  // [472]
        [c18]===(  c_c18  )  [c19]===(  c_c19  )              |  // [472]
        [c20]===(  c_c20  )  [c21]===(  c_c21  )              |  // [472]
        [c22]===(  c_c22  )  [c23]===(  c_c23  )              |  // [472]
        [c24]===(  c_c24  )  [c25]===(  c_c25  )              |  // [472]
        [c26]===(  c_c26  )  [c27]===(  c_c27  )              |  // [472]
        [c28]===(  c_c28  )  [c29]===(  c_c29  )              |  // [472]
        [c30]===(  c_c30  )  [c31]===(  c_c31  )              |  // [472]
        [c32]===(  c_c32  )  [c33]===(  c_c33  )              |  // [472]
        [c34]===(  c_c34  )  [c35]===(  c_c35  )              |  // [472]
        [c36]===(  c_c36  )  [c37]===(  c_c37  )              |  // [472]
        [c38]===(  c_c38  )  [c39]===(  c_c39  )              |  // [472]
        [c40]===(  c_c40  )  [c41]===(  c_c41  )              |  // [472]
        [c42]===(  c_c42  )  [c43]===(  c_c43  )              |  // [472]
        [c44]===(  c_c44  )  [c45]===(  c_c45  )              |  // [472]
        [c46]===(  c_c46  )  [c47]===(  c_c47  )              |  // [472]
        [c48]===(  c_c48  )  ___END_OF_CHUNKS___              |  // [472]
                                                              |  // [472]
        +-----------------------------------------+           |  // [472]
        | [L16][CHUNKS] :::::::TAG[ _L16_CHUNKS_ ]|           |  // [472]
        +-----------------------------------------+           |  // [472]
        |                                         |           |  // [472]
        | [c00]  [c01][c02][c03][c04][c05]  [c06] |           |  // [472]
        |                                         |           |  // [472]
        | [c07]  [___][___][___][___][___]  [c13] |           |  // [472]
        | [c14]  [___][___][___][___][___]  [c20] |           |  // [472]
        | [c21]  [___][___][___][___][___]  [c27] |           |  // [472]
        | [c28]  [___][___][___][___][___]  [c34] |           |  // [472]
        | [c35]  [___][___][___][___][___]  [___] |           |  // [472]
        |                                         |           |  // [472]
        | [___]  [___][___][___][___][___]  [___] |           |  // [472]
        |                                         |           |  // [472]
        +-----------------------------------------+           |  // [472]
                                                              |  // [472]
        +-----------------------------------------+           |  // [472]
        | [PM8][CHUNKS] :::::::TAG[ _PM8_CHUNKS_ ]|           |  // [472]
        +-----------------------------------------+           |  // [472]
        |                                         |           |  // [472]
        | [ - ]  [ - ][ - ][ - ][ - ][ - ]  [ - ] |           |  // [472]
        |                                         |           |  // [472]
        | [ - ]  [ - ][ - ][ - ][ - ][ - ]  [ - ] |           |  // [472]
        | [ - ]  [ - ][ - ][ - ][ - ][ - ]  [ - ] |           |  // [472]
        | [ - ]  [ - ][ - ][ - ][ - ][ - ]  [ - ] |           |  // [472]
        | [ - ]  [ - ][ - ][ - ][ - ][ - ]  [ - ] |           |  // [472]
        | [ - ]  [ - ][ - ][ - ][ - ][ - ]  [c41] |           |  // [472]
        |                                         |           |  // [472]
        | [c42]  [c43][c44][c45][c46][c47]  [c48] |           |  // [472]
        |                                         |           |  // [472]
        +-----------------------------------------+           |  // [472]
                                                              |  // [472]
        +-----------------------------------------+           |  // [472]
        | [TOB][CHUNKS] :::::::TAG[ _TOB_CHUNKS_ ]|           |  // [472]
        | [T25][CHUNKS] :::::::TAG[ _T25_CHUNKS_ ]|           |  // [472]
        +-----------------------------------------+           |  // [472]
        |                                         |           |  // [472]
        | [ * ]  [ * ][ * ][ * ][ * ][ * ]  [ * ] |           |  // [472]
        |                                         |           |  // [472]
        | [ * ]  [c08][c09][c10][c11][c12]  [ * ] |           |  // [472]
        | [ * ]  [c15][c16][c17][c18][c19]  [ * ] |           |  // [472]
        | [ * ]  [c22][c23][c24][c25][c26]  [ * ] |           |  // [472]
        | [ * ]  [c29][c30][c31][c32][c33]  [ * ] |           |  // [472]
        | [ * ]  [c36][c37][c38][c39][c40]  [ * ] |           |  // [472]
        |                                         |           |  // [472]
        | [ * ]  [ * ][ * ][ * ][ * ][ * ]  [ * ] |           |  // [472]
        |                                         |           |  // [472]
        +-----------------------------------------+           |  // [472]
                                                              |  // [472]
    :--------------------------------: #128_X_128_CHUNK_ENUMS_#  // [472]
    #_128_X_128_CHUNK_KIND_ENUMS_# :--------------------------+  // [472]
                                                              |  // [472]
        +-----------------------------------------+           |  // [472]
        | [L16][CHUNKS] :::::::TAG[ _L16_CHUNKS_ ]|           |  // [472]
        +-----------------------------------------+           |  // [472]
        |                                         |           |  // [472]
        | [l00]  [l01][l02][l03][l04][l05]  [l06] |           |  // [472]
        |                                         |           |  // [472]
        | [l07]  [___][___][___][___][___]  [l08] |           |  // [472]
        | [l09]  [___][___][___][___][___]  [l10] |           |  // [472]
        | [l11]  [___][___][___][___][___]  [l12] |           |  // [472]
        | [l13]  [___][___][___][___][___]  [l14] |           |  // [472]
        | [l15]  [___][___][___][___][___]  [___] |           |  // [472]
        |                                         |           |  // [472]
        | [___]  [___][___][___][___][___]  [___] |           |  // [472]
        |                                         |           |  // [472]
        +-----------------------------------------+           |  // [472]
                                                              |  // [472]
        +-----------------------------------------+           |  // [472]
        | [PM8][CHUNKS] :::::::TAG[ _PM8_CHUNKS_ ]|           |  // [472]
        +-----------------------------------------+           |  // [472]
        |                                         |           |  // [472]
        | [ - ]  [ - ][ - ][ - ][ - ][ - ]  [ - ] |           |  // [472]
        |                                         |           |  // [472]
        | [ - ]  [ - ][ - ][ - ][ - ][ - ]  [ - ] |           |  // [472]
        | [ - ]  [ - ][ - ][ - ][ - ][ - ]  [ - ] |           |  // [472]
        | [ - ]  [ - ][ - ][ - ][ - ][ - ]  [ - ] |           |  // [472]
        | [ - ]  [ - ][ - ][ - ][ - ][ - ]  [ - ] |           |  // [472]
        | [ - ]  [ - ][ - ][ - ][ - ][ - ]  [pm0] |           |  // [472]
        |                                         |           |  // [472]
        | [pm1]  [pm2][pm3][pm4][pm5][pm6]  [pm7] |           |  // [472]
        |                                         |           |  // [472]
        +-----------------------------------------+           |  // [472]
                                                              |  // [472]
        +-----------------------------------------+           |  // [472]
        | [TOB][CHUNKS] :::::::TAG[ _TOB_CHUNKS_ ]|           |  // [472]
        | [T25][CHUNKS] :::::::TAG[ _T25_CHUNKS_ ]|           |  // [472]
        +-----------------------------------------+           |  // [472]
        |                                         |           |  // [472]
        | [ * ]  [ * ][ * ][ * ][ * ][ * ]  [ * ] |           |  // [472]
        |                                         |           |  // [472]
        | [ * ]  [t00][t01][t02][t03][t04]  [ * ] |           |  // [472]
        | [ * ]  [t05][t06][t07][t08][t09]  [ * ] |           |  // [472]
        | [ * ]  [t10][t11][t12][t13][t14]  [ * ] |           |  // [472]
        | [ * ]  [t15][t16][t17][t18][t19]  [ * ] |           |  // [472]
        | [ * ]  [t20][t21][t22][t23][t24]  [ * ] |           |  // [472]
        |                                         |           |  // [472]
        | [ * ]  [ * ][ * ][ * ][ * ][ * ]  [ * ] |           |  // [472]
        |                                         |           |  // [472]
        +-----------------------------------------+           |  // [472]
                                                              |  // [472]
    :--------------------------: #_128_X_128_CHUNK_KIND_ENUMS_#  // [472]
    #_CELLULAR_AUTOMATA_ETC_# :-------------------------------+  // [472]
                                                              |  // [472]
        I don't remember which of the 3 cells I am using      |  // [472]
        for what. But the general idea is that I would        |  // [472]
        like to have:                                         |  // [472]
                                                              |  // [472]
            1. DATA representing plants and fruit             |  // [472]
               that grow in the level when sun                |  // [472]
               hits them.                                     |  // [472]
                                                              |  // [472]
            2. DATA representing a quantity of                |  // [472]
               water and sunlight within a cell.              |  // [472]
                                                              |  // [472]
            3. DATA representing LARGE and THIN               |  // [472]
               grooves within the level tiles.                |  // [472]
                                                              |  // [472]
               LARGE_GROOVES : Transport water.               |  // [472]
               THIN__GROOVES : Transport light.               |  // [472]
                                                              |  // [472]
            When WATER_DATA or LIGHT_DATA is overlapping      |  // [472]
            a WATER_TRANSPORT or LIGHT_TRANSPORT grooved      |  // [472]
            tile, the WATER_AMOUNT or LIGHT_AMOUNT is         |  // [472]
            MULTIPLIED. So the LIGHT_TRANSPORT and            |  // [472]
            WATER_TRANSPORT tiles are PRESSURIZED.            |  // [472]
                                                              |  // [472]
            Blowing up a LIGHT_TRANSPORT or WATER_TRANSPORT   |  // [472]
            tile should yield WATER_EXPLOSION or              |  // [472]
            LIGHT_EXPLOSION ___IF___ the TRANSPORT_TILE       |  // [472]
            is loaded with a quantity of water or light.      |  // [472]
                                                              |  // [472]
            TAG[ _STARDEW_VALLEY_ | STARDEW_VALLEY ]          |  // [472]
            TAG[ _HARVEST_MOON_   | HARVEST_MOON   ]          |  // [472]
            TAG[ stardew valley   | harvest moon   ]          |  // [472]
                                                              |  // [472]
        Data that is applied to all levelpacks.               |  // [472]
        We use 1 byte from each pixel to cover                |  // [472]
        all the levelpacks using a single                     |  // [472]
        128_x_128 chunk of memory.                            |  // [472]
        We need 13 64_x_64 chunks.                            |  // [472]
        13 : Number of levels   in_levelpack.                 |  // [472]
        64 : Smallest tile size in_levelpack.                 |  // [472]
        128_x_128 can be split into 2_x_2 cells.              |  // [472]
        2_x_2 cells == 4 cells.                               |  // [472]
        If we use RGBA bytes seprately, we                    |  // [472]
        have ( 4 cells )*( 4 (RGBA) )===16 cells.             |  // [472]
        16 64_x_64 cells, enough to cover it all.             |  // [472]
                                                              |  // [472]
    :-------------------------------: #_CELLULAR_AUTOMATA_ETC_#  // [472]

    #_128_X_128_CHUNK_TYPES_# :-------------------------------+  // [473]
    #_128_X_128_CHUNK_KINDS_# :-------------------------------+  // [473]
                                                              |  // [473]
        C49 === Generic Chunk Type.                           |  // [473]
                                                              |  // [473]
        There are 3 types of chunks. In video #4_7_3          |  // [473]
        we will codify the 3 subsets of chunks by             |  // [473]
        creating 3 [ enums / consts ] for the chunk           |  // [473]
        types and making a chunk type lookup table.           |  // [473]
    :---------------------------------------------------------+  // [473]

    #_WHY_THOUSAND_SHORT_ONE_LONG_# :-------------------------+  // [474]
                                                              |  // [474]
                                                              |  // [474]
        VIDEO_FOR_THIS_COMMENT_SECTION_HERE :                 |  // [474]
                                                              |  // [474]
            www.tinyurl.com/ANDOREI-ASKED                     |  // [474]
            www.tinyurl.com/ANDOREI-ASKS                      |  // [474]
            www.tinyurl.com/ANDOREI-ASK                       |  // [474]
                                                              |  // [474]
        ALL_VIEWER_QUESTION_PLAYLIST :                        |  // [474]
                                                              |  // [474]
            www.tinyurl.com/KANJI-ANSWERS                     |  // [474]
            www.tinyurl.com/KANJI-ANSWER                      |  // [474]
                                                              |  // [474]
                                                              |  // [474]
        Andorei ( A - N - DO - RE - I )                       |  // [474]
        @user-hl1wr4bq1s                                      |  // [474]
                                                              |  // [474]
        Andorei Asks : "Why do you get 1 view at a normal "   |  // [474]
                       "video and 1K views at a short?    "   |  // [474]
        SCREEN_SHOT[ https://imgur.com/nwz2baG ]              |  // [474]
                                                              |  // [474]
        A combination of what I've researched and speculation:|  // [474]
                                                              |  // [474]
        1. Shorts are on a seperate algorithm:                |  // [474]
                                                              |  // [474]
            Users who come to you for shorts don't            |  // [474]
            necessarily want to see your long form            |  // [474]
            content, and vise versa. Because of this,         |  // [474]
            youtube modifed the algorithm so that ...         |  // [474]
            Your "shorts" and "longs" are basically           |  // [474]
            two different channels as far as the              |  // [474]
            algorithm is concerned.                           |  // [474]
                                                              |  // [474]
        2. INFOTAINMENT gets more views that EDUCATIONAL :    |  // [474]
                                                              |  // [474]
            My shorts as "Infotainment". I show off a cool    |  // [474]
            thing I did and I don't get into the mind         |  // [474]
            bending details of how I did what I did.          |  // [474]
                                                              |  // [474]
            My shorts are like an episode of :                |  // [474]
                                                              |  // [474]
                "How it's made".                              |  // [474]
                                                              |  // [474]
            You get enough knowledge to satiate curiousity    |  // [474]
            when you watch "How shoes are made". But you      |  // [474]
            don't know enough to start your own shoe factory. |  // [474]
                                                              |  // [474]
            My "longs" are like ....                          |  // [474]
                                                              |  // [474]
                A crazy skizophrenic mad scientist claiming   |  // [474]
                that they have the keys to developing a       |  // [474]
                personal time-portal watch factory. If        |  // [474]
                we build the factory, everyone will have      |  // [474]
                time travel. But it's going to be a lot       |  // [474]
                of work. You can barely understand the        |  // [474]
                crazy mad scientist. And you wonder to        |  // [474]
                yourself "Is it even worth the time?"         |  // [474]
                                                              |  // [474]
                Which brings me to the 3rd point.             |  // [474]
                                                              |  // [474]
        3.  I have no reputation on youtube.                  |  // [474]
            How can people trust me enough to invest          |  // [474]
            time in my tutorial videos ?                      |  // [474]
                                                              |  // [474]
            I was fired from ArenaNet :                       |  // [474]
            Boss Said :                                       |  // [474]
                                                              |  // [474]
                "KanjiCoder, when I first met you I got  "    |  // [474]
                "the idea that you were the mad scientist"    |  // [474]
                "type. Now that I've gotten to know you, "    |  // [474]
                "I think that you are just a little bit  "    |  // [474]
                "too mad and not enough scientist.       "    |  // [474]
                                                              |  // [474]
                                                              |  // [474]
        4.  My code is insane and highly alien.               |  // [474]
                                                              |  // [474]
            It is radically liberal and unorthodox            |  // [474]
            compared to the way other programmers may         |  // [474]
            tell you things must be done. But I assure        |  // [474]
            you there is a method to the madness.             |  // [474]
            That I have reasons for the way I do what         |  // [474]
            I do. But the more and more I code, the           |  // [474]
            stranger and stranger my code becomes.            |  // [474]
                                                              |  // [474]
        5.  My code is __NOT__ for beginners.                 |  // [474]
                                                              |  // [474]
            It casts a smaller net, because the number        |  // [474]
            of people skilled enough to watch my              |  // [474]
            content is much fewer than the number of          |  // [474]
            people who are "Interested in making their        |  // [474]
            first game".                                      |  // [474]
                                                              |  // [474]
            I know that sound's pretentious as fuck.          |  // [474]
            But you be the judge.                             |  // [474]
                                                              |  // [474]
            I saw a beginners JavaScript game course that     |  // [474]
            released 1-week after I started releasing         |  // [474]
            my tutorial videos. It has 1-million+             |  // [474]
            views. I am jealous as hell. I watched            |  // [474]
            some of it... It was incredibly basic             |  // [474]
            from my perspective.                              |  // [474]
                                                              |  // [474]
            I realized that, even if I explain every          |  // [474]
            step that I do in excrusiating detail,            |  // [474]
            there is no such thing as :                       |  // [474]
                                                              |  // [474]
            "Game engine development for beginners".          |  // [474]
                                                              |  // [474]
            Yet, that's kind of what I am trying to do.       |  // [474]
                                                              |  // [474]
            I am explaining EVERY FUCKING SINGLE LINE         |  // [474]
            OF CODE in the entire code base.                  |  // [474]
                                                              |  // [474]
            But that does not make something for              |  // [474]
            beginners. A calculus book also explains          |  // [474]
            all of calculus in detail. But that doesn't       |  // [474]
            make it "beginner math".                          |  // [474]
                                                              |  // [474]
        6.  Youtube algorithm is simpler than you think :     |  // [474]
                                                              |  // [474]
            The youtube algorithm is a lot "simpler" than     |  // [474]
            you think. And if you deviate from the norm       |  // [474]
            you will be punished by the algorithm for it.     |  // [474]
                                                              |  // [474]
            This is pure speculation. But I STRONGLY SUSPECT  |  // [474]
            the youtube algorithm basically just looks        |  // [474]
            at your video title. NOTHING ELSE MATTERS.        |  // [474]
                                                              |  // [474]
            Video description ? Waste of time. Doesn't matter.|  // [474]
                                                              |  // [474]
            Tags ? Waste of time. Doesn't matter.             |  // [474]
                                                              |  // [474]
            Category ? Waste of time. Doesn't matter.         |  // [474]
                                                              |  // [474]
            I want to prioritize DOCUMENTING MY CODE BASE     |  // [474]
            over GETTING VIEWS.                               |  // [474]
                                                              |  // [474]
            So I name my video something concise , that       |  // [474]
            will give you assurance you are on the            |  // [474]
            correct video in the playlist :                   |  // [474]
                                                              |  // [474]
            I started off naming everything :                 |  // [474]
                                                              |  // [474]
            BOMB GAME TUTORIAL - PART 2                       |  // [474]
            BOMB GAME TUTORIAL - PART 3                       |  // [474]
            BOMB GAME TUTORIAL - PART 4                       |  // [474]
            ... ETC ...                                       |  // [474]
                                                              |  // [474]
            Probably not every good for the algorithm.        |  // [474]
                                                              |  // [474]
            And since I wasn't getting views, I decided       |  // [474]
            to get even more terse with my video names        |  // [474]
            once I got to playlist #2.                        |  // [474]
                                                              |  // [474]
            108 : CAMERAH - P1                                |  // [474]
            126 : SEXYCAM - P2                                |  // [474]
            143 : MOUSE   - P3                                |  // [474]
            ... ETC ...                                       |  // [474]
                                                              |  // [474]
            These are GREAT NAMES for a human who is          |  // [474]
            actually watching the series in the playlist.     |  // [474]
                                                              |  // [474]
            They can see the master video number              |  // [474]
            ( 108 , 126 , 143 ) , what sub-system             |  // [474]
            is being focused on ( CAMERAH , SEXYCAM, MOUSE )  |  // [474]
            and which sub-part of the series they are on      |  // [474]
            ( P1 , P2 , P3 ).                                 |  // [474]
                                                              |  // [474]
            The algorith however ONLY GOES BY VIDEO TITLE     |  // [474]
            and cannot understand the LARGER CONTEXT of       |  // [474]
            my video title system.                            |  // [474]
                                                              |  // [474]
            So... Final point :                               |  // [474]
                                                              |  // [474]
                                                              |  // [474]
        7.  Youtube algorithm does __NOT__ know how to        |  // [474]
            catorize my videos.                               |  // [474]
                                                              |  // [474]
            1. Algorithm is designed for whatever MOST        |  // [474]
               PEOPLE ARE DOING. I am an edge case,           |  // [474]
               so I slip through algorithmic cracks.          |  // [474]
                                                              |  // [474]
              "Deviation From The Norm Is Punished"           |  // [474]
              -Not a moral statement. A statement of fact.    |  // [474]
              ( Ex : Lefthanders & Dying of Accidents )       |  // [474]
                                                              |  // [474]
            2. My video titles are __NOT__ understandable     |  // [474]
               by the "YOUTUBE ALGORITHM". They contain       |  // [474]
               a low "Signal To Noise Ratio" which is         |  // [474]
               actually BAD for the algorithm because the     |  // [474]
               video titles cannot be                         |  // [474]
               "Understood in Isolation"                      |  // [474]
                                                              |  // [474]
                EX:                                           |  // [474]
                                                              |  // [474]
                    108 : CAMERAH - P1                        |  // [474]
                                                              |  // [474]
                    (ABOVE: Actual Video Title Of Mine)       |  // [474]
                                                              |  // [474]
                What does this video name mean? It is only    |  // [474]
                obvious to you if you see the other video     |  // [474]
                titles in the playlist.                       |  // [474]
                                                              |  // [474]
            3. Understanding my video titles requires         |  // [474]
               watching my videos. If you watch my            |  // [474]
               videos, the video titles make sense.           |  // [474]
                                                              |  // [474]
               The youtube algorithm only reads the           |  // [474]
               video title, it does __NOT__ watch             |  // [474]
               the contents of the video.                     |  // [474]
                                                              |  // [474]
               CASE AND POINT :                               |  // [474]
                                                              |  // [474]
                    "126 : SEXYCAM - P2"                      |  // [474]
                                                              |  // [474]
                    was flagged as SPAM and I had to          |  // [474]
                    appeal the video. I almost got            |  // [474]
                    my channel BANNED.                        |  // [474]
                                                              |  // [474]
        8.  My video titles are optimized for HUMAN(s)        |  // [474]
            rather than the YOUTUBE ALGORITHM.                |  // [474]
                                                              |  // [474]
            The "Shorts" less-so than the "Longs".            |  // [474]
                                                              |  // [474]
            But notice that the shorts also contain           |  // [474]
            some type of terse indexing in the name           |  // [474]
            that the algorithm doesn't understand.            |  // [474]
                                                              |  // [474]
            "VER_001" ===   Vertical Monitor Summary Video # 1|  // [474]
                                                              |  // [474]
            "HOR_001" === Horizontal Monitor Summary Video # 1|  // [474]
                                                              |  // [474]
        9.  Vertical Vs Horizontal : A/B Testing :            |  // [474]
                                                              |  // [474]
            I have two playlists where all the videos are     |  // [474]
            exactly 4 seconds long.                           |  // [474]
                                                              |  // [474]
            The vertical monitor playlist :                   |  // [474]
                                                              |  // [474]
                www.tinyurl.com/KANJI-PLAYLIST-VER            |  // [474]
                www.tinyurl.com/LIST-VER                      |  // [474]
                                                              |  // [474]
            The horizontal monitor playlist:                  |  // [474]
                                                              |  // [474]
                www.tinyurl.com/KANJI-PLAYLIST-HOR            |  // [474]
                www.tinyurl.com/LIST-HOR                      |  // [474]
                                                              |  // [474]
            The only difference in what is covered is:        |  // [474]
                                                              |  // [474]
                1. Naming Convention "VER_001" vs "HOR_001"   |  // [474]
                                                              |  // [474]
                2. Monitor Format: Horizontal Vs Vertical.    |  // [474]
                                                              |  // [474]
            This creates a pretty good "A"/"B" test where     |  // [474]
            roughly, the control is one playlist is           |  // [474]
            "Shorts" and the other is "Longs" but otherwise   |  // [474]
            the content and video names are IDENTICAL.        |  // [474]
                                                              |  // [474]
            Prooving that "Longs" and "Shorts" are on         |  // [474]
            two different algorithmic tracks.                 |  // [474]
                                                              |  // [474]
       10. Day of release :                                   |  // [474]
                                                              |  // [474]
            The "Longs" are released 1 per day.               |  // [474]
                                                              |  // [474]
            The "Shorts" are released only on the             |  // [474]
            weekend now.                                      |  // [474]
                                                              |  // [474]
            Releasing on the weekend makes a                  |  // [474]
            HUGE DIFFERENCE in views. With my                 |  // [474]
            shorts it is the difference between               |  // [474]
            ONE THOUSAND (1K) and ONE HUNDRED ( 100 )         |  // [474]
            views.                                            |  // [474]
                                                              |  // [474]
            I am pumping on "Long" videos every day.          |  // [474]
                                                              |  // [474]
            "Short" videos only happen whenever I             |  // [474]
            have something new and interesting                |  // [474]
            that can be demonstrated for the                  |  // [474]
            camera.                                           |  // [474]
    :-------------------------: #_WHY_THOUSAND_SHORT_ONE_LONG_#  // [474]
    #_EITHER_#::::::::----------------------------------------+  // [474]
    #_SAVEME_LOADME_#:----------------------------------------+  // [474]
    #_LOADME_SAVEME_#:----------------------------------------+  // [474]
                                                              |  // [474]
        Code used to load or save to or from memory.          |  // [474]
                                                              |  // [474]
        Even though the enums used are:                       |  // [474]
                                                              |  // [474]
            1 : [ c _ file896_loadme_fromdsk ]                |  // [474]
            2 : [ c _ file896_saveme_intodsk ]                |  // [474]
                                                              |  // [474]
        None of the operations in here are intended to        |  // [474]
        access the disk. They are setting up the disk         |  // [474]
        access.                                               |  // [474]
                                                              |  // [474]
            1 : fromdsk : (rgba896)===>(pix2048)              |  // [474]
            2 : intodsk : (pix2048)===>(rgba896)              |  // [474]
                                                              |  // [474]
        pix2048 : Is the memory we use IN GAME.               |  // [474]
                : So it represents R.A.M.                     |  // [474]
                                                              |  // [474]
        rgba896 : While also in memory/ram, it                |  // [474]
                : represents the file we want to              |  // [474]
                : save to the hard disk.                      |  // [474]
                                                              |  // [474]
    :---------------------------------------------------------+  // [474]
    #_SAVEME_# :----------------------------------------------+  // [474]
                                                              |  // [474]
        Load a memory chunk from (pix2048)===>(rgba896)       |  // [474]
        Called "saveme" because rgba896 represents            |  // [474]
        the memory we want to save to the hard disk.          |  // [474]
                                                              |  // [474]
    :---------------------------------------------------------+  // [474]
    #_LOADME_# :----------------------------------------------+  // [474]
                                                              |  // [474]
        Save a memory chunk from (rgba896)===>(pix2048)       |  // [474]
        Called "loadme" because pix2048 represents            |  // [474]
        the memory we want to load from the hard disk.        |  // [474]
                                                              |  // [474]
    :---------------------------------------------------------+  // [474]

    #_LETS_FUCKING_DO_THIS_# :--------------------------------+  // [475]
                                                              |  // [475]
        We all know how we are going to die.                  |  // [475]
        We are going to crash and burn.                       |  // [475]
        -Probably Icon Of Coil Or CombiChrist                 |  // [475]
                                                              |  // [475]
        PARTY_IN_MY_HEAD[ www.youtube.com/watch?v=N0z5Rf-nLVo ]  // [475]
                                                              |  // [475]
        But anyways , these are the two core functions        |  // [475]
        reponsible for serializing and de-serializing         |  // [475]
        the levelpack data.                                   |  // [475]
                                                              |  // [475]
        d_rgba896 : The SERIALIZED   pixel_layout.            |  // [475]
        d_pix2048 : The GPU-friendly pixel_layout.            |  // [475]
                                                              |  // [475]
        @pixel_layout@ : I am talking about how pixels        |  // [475]
                       : are spatially aranged when           |  // [475]
                       : they are used to encode              |  // [475]
                       : bit-packed data.                     |  // [475]
    :---------------------------------------------------------+  // [475]
                                                                 // [475]
    @c49type@ : USE[ c49_kind ]::::::::::::::::::::::::::::::::  // [475]
    @c49kind@ : The c49 chunk [type/kind]. ::::::::::::::::::::  // [475]
    @c7k@ ::::: USE[ c49_kind ]::::::::::::::::::::::::::::::::  // [475]
    @c7t@ ::::: USE[ c49_kind ]::::::::::::::::::::::::::::::::  // [475]
    @c7x@ ::::: X component of C49 Index ::::::::::::::::::::::  // [475]
    @c7y@ ::::: Y component of C49 Index ::::::::::::::::::::::  // [475]
                                                                 // [475]
    #_C49_TO_X_Y_# :------------------------------------------+  // [475]
                                                              |  // [475]
        Converting [c49] 1D-cell index to [X,Y] value         |  // [475]
        by using paired lookup tables.                        |  // [475]
        ( c49 )===>( c7x ) lookup table.                      |  // [475]
        ( c49 )===>( c7y ) lookup table.                      |  // [475]
    :---------------------------------------------------------+  // [475]
    #_X_Y_TO_C49_# :------------------------------------------+  // [475]
                                                              |  // [475]
        Going back in the other direction is not              |  // [475]
        possible with a lookup table. I mean, you             |  // [475]
        could kind of... but it would basically               |  // [475]
        be a pointless identity table.                        |  // [475]
    :---------------------------------------------------------+  // [475]
                                                                 // [475]
    @LevPak@ : Level Pack ( AKA : A Hotel )                      // [475]
    @PreFab@ : Pre-Fabrication (table,desk,chain,shelves)        // [475]
    @ThumbN@ : Thumbnail ( Small preview image )                 // [475]
                                                                 // [475]
    #_FILE896_H3X_H3Y_VARS_# :--------------------------------+  // [475]
                                                              |  // [475]
        Two identical blocks of variables declared            |  // [475]
        in the two highest-abstraction functions for          |  // [475]
        the[ FILE896 ]system.                                 |  // [475]
                                                              |  // [475]
        1. FUNC[ F_FILE896 _ RGBA896_PIX2048 _ H3X_H3Y ]      |  // [475]
        2. FUNC[ F_FILE896 _ PIX2048_RGBA896 _ H3X_H3Y ]      |  // [475]
                                                              |  // [475]
    :---------------------------------------------------------+  // [475]
    #_REDUNDANT_2022_# :--------------------------------------+  // [475]
                                                              |  // [475]
        The two chunks of code tagged with this are           |  // [475]
        almost IDENTICAL. Except one is calling the           |  // [475]
        "LOADME" functions and the other is calling           |  // [475]
        "SAVEME" functions.                                   |  // [475]
                                                              |  // [475]
        #_LOAD_S_BITCHES_# :-------------------------------+  |  // [475]
                                                           |  |  // [475]
            LOAD_LEVELPACK_FILE : (rgba896)===>(pix2048)   |  |  // [475]
                                                           |  |  // [475]
        :--------------------------------------------------+  |  // [475]
        #_SAVE_S_BITCHES_# :-------------------------------+  |  // [475]
                                                           |  |  // [475]
            SAVE_LEVELPACK_FILE : (pix2048)===>(rgba896)   |  |  // [475]
                                                           |  |  // [475]
            TAG[ captain save a ho ][ ______________ ]     |  |  // [475]
            TAG[ captain_save_a_ho ][ ______________ ]     |  |  // [475]
            TAG[ captainsaveaho    ][ ______________ ]     |  |  // [475]
            URL[ www.youtube.com/watch?v=X14o8JCSLAQ ]     |  |  // [475]
                                                           |  |  // [475]
        :--------------------------------------------------+  |  // [475]
                                                              |  // [475]
    :---------------------------------------------------------+  // [475]
    @ITC_2022@ : Invalid_Chunk_Type , Year 2022 A.D. ::::::::::  // [475]
    @pc01@ ::::: Paired_Code #001 , two almost identical    :::  // [475]
           ::::: code blocks with this tag exist in source. :::  // [475]

    #_NO_FUCKING_LUTS_# :-------------------------------------+  // [476]
                                                              |  // [476]
        At some point in time I forgot that this section,     |  // [476]
        white it is for data, is _NOT_FOR_LOOKUP_TABLES_!!!   |  // [476]
                                                              |  // [476]
        Take the lookup tables currently in the               |  // [476]
        "top level data section" and move them                |  // [476]
        into the "top level lookup table section".            |  // [476]
                                                              |  // [476]
        Maybe not this video but eventually.                  |  // [476]
        Hence why I added a 2nd section label called          |  // [476]
        "No Fucking Luts" to remind myself to remove          |  // [476]
        those lookup tables.                                  |  // [476]
                                                              |  // [476]
    :---------------------------------------------------------+  // [476]
    #_CHUNK_MAPPING_# :---------------------------------------+  // [476]
                                                              |  // [476]
        [c7x,c7y] chunks exist over 896_x_896 pixel canvas.   |  // [476]
        [c4x,c4y] chunks exist over 512_x_512 pixel canvas.   |  // [476]
                                                              |  // [476]
        [c7x,c7y] chunks are 128_x_128 ( THEY_ARE_THE_SAME )  |  // [476]
        [c4x,c47] chunks are 128_x_128 ( THEY_ARE_THE_SAME )  |  // [476]
                                                              |  // [476]
        @THEY_ARE_THE_SAME@ : As in, they are the same, not   |  // [476]
                            : that they represent identical   |  // [476]
                            : concepts.                       |  // [476]
                                                              |  // [476]
                                                              |  // [476]
        #_RGBA896_3_MAIN_SECTIONS_#:[476]:-----------------+  |  // [476]
                                                           |  |  // [476]
            |<--------------- RGBA896 --------------->|    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            | L00 | L01 | L02 | L03 | L04 | L05 | L06 |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            | L07 |     |     |     |     |     | L08 |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            | L09 |     |     |     |     |     | L10 |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            | L11 |     |     |     |     |     | L12 |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            | L13 |     |     |     |     |     | L14 |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            | L15 |     |     |     |     |     | ___ |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            | ___ | ___ | ___ | ___ | ___ | ___ | ___ |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
                                                           |  |  // [476]
            |<--------------- RGBA896 --------------->|    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            | ___ | ___ | ___ | ___ | ___ | ___ | ___ |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            | ___ |     |     |     |     |     | ___ |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            | ___ |     |     |     |     |     | ___ |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            | ___ |     |     |     |     |     | ___ |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            | ___ |     |     |     |     |     | ___ |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            | ___ |     |     |     |     |     | PF0 |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            | PF1 | PF2 | PF3 | PF4 | PF5 | PF6 | PF7 |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
                                                           |  |  // [476]
            |<--------------- RGBA896 --------------->|    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            |     |     |     |     |     |     |     |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            |     | T00 | T01 | T02 | T03 | T04 |     |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            |     | T05 | T06 | T07 | T08 | T09 |     |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            |     | T10 | T11 | T12 | T13 | T14 |     |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            |     | T15 | T16 | T17 | T18 | T19 |     |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            |     | T20 | T21 | T22 | T23 | T24 |     |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
            |     |     |     |     |     |     |     |    |  |  // [476]
            +-----+-----+-----+-----+-----+-----+-----+    |  |  // [476]
                                                           |  |  // [476]
        :----------------: #_RGBA896_3_MAIN_SECTIONS_#:[476]  |  // [476]
                                                              |  // [476]
        |<--------------- RGBA896 --------------->|           |  // [476]
        +-----+-----+-----+-----+-----+-----+-----+           |  // [476]
        | L00 | L01 | L02 | L03 | L04 | L05 | L06 |           |  // [476]
        +-----+-----+-----+-----+-----+-----+-----+           |  // [476]
        | L07 | T00 | T01 | T02 | T03 | T04 | L08 |           |  // [476]
        +-----+-----+-----+-----+-----+-----+-----+           |  // [476]
        | L09 | T05 | T06 | T07 | T08 | T09 | L10 |           |  // [476]
        +-----+-----+-----+-----+-----+-----+-----+           |  // [476]
        | L11 | T10 | T11 | T12 | T13 | T14 | L12 |           |  // [476]
        +-----+-----+-----+-----+-----+-----+-----+           |  // [476]
        | L13 | T15 | T16 | T17 | T18 | T19 | L14 |           |  // [476]
        +-----+-----+-----+-----+-----+-----+-----+           |  // [476]
        | L15 | T20 | T21 | T22 | T23 | T24 | PF0 |           |  // [476]
        +-----+-----+-----+-----+-----+-----+-----+           |  // [476]
        | PF1 | PF2 | PF3 | PF4 | PF5 | PF6 | PF7 |           |  // [476]
        +-----+-----+-----+-----+-----+-----+-----+           |  // [476]
                                                              |  // [476]
        L16 ===[ L00,L01,L02,L03,L04,L05,L06,L07              |  // [476]
               , L08,L09,L10,L11,L12,L13,L14,L15 ];           |  // [476]
                                                              |  // [476]
        PF8 ===[ PF0,PF1,PF2,PF3,PF4,PF5,PF6,PF7 ];           |  // [476]
                                                              |  // [476]
        T25 ===[ T00,T01,T02,T03,T04                          |  // [476]
               , T05,T06,T07,T08,T09                          |  // [476]
               , T10,T11,T12,T13,T14                          |  // [476]
               , T15,T16,T17,T18,T19                          |  // [476]
               , T20,T21,T22,T23,T23 ];                       |  // [476]
                                                              |  // [476]
        |<---LevelPack/Hotel--->|                             |  // [476]
        |<------- 512 --------->|                             |  // [476]
        |<--- 4th of PIX2048--->|                             |  // [476]
        +-----+-----+-----+-----+                             |  // [476]
        | L00 | L01 | L02 | L03 |                             |  // [476]
        +-----+-----+-----+-----+                             |  // [476]
        | L04 | L05 | L06 | L07 |                             |  // [476]
        +-----+-----+-----+-----+                             |  // [476]
        | L08 | L09 | L10 | L11 |                             |  // [476]
        +-----+-----+-----+-----+                             |  // [476]
        | L12 | L13 | L14 | L15 |                             |  // [476]
        +-----+-----+-----+-----+                             |  // [476]
                                                              |  // [476]
                                                              |  // [476]
        +-----+-----+-----+-----+ <---+                       |  // [476]
        | PF0 | PF1 | PF2 | PF3 |     |                       |  // [476]
        +-----+-----+-----+-----+     +--- Rectangular Slice  |  // [476]
        | PF4 | PF5 | PF6 | PF7 |     |    of Pix2048         |  // [476]
        +-----+-----+-----+-----+ <---+    ( 512_x_256 )      |  // [476]
                                                              |  // [476]
           +-----------------------------------+              |  // [476]
           |    Unlike the other chunks, T25   |              |  // [476]
           |    chunks do __NOT__ map onto     |              |  // [476]
           |    PIX2048 , instead they map     |              |  // [476]
           |    into the RENDERING_LAYOUT for  |              |  // [476]
           |    a single levelpack as such:    |              |  // [476]
           +-----------------+-----------------+              |  // [476]
                             |                                |  // [476]
           +-----------------+-----------------+              |  // [476]
           |                                   |              |  // [476]
           V                                   V              |  // [476]
           +-----+-----+           +-----+-----+              |  // [476]
           | T00 | T01 |           | T02 | T03 |              |  // [476]
           +-----+-----+  +-----+  +-----+-----+              |  // [476]
           | T04 |        | T05 |        | T06 |              |  // [476]
           +-----+  +-----+-----+-----+  +-----+              |  // [476]
                    | T07 | T08 | T09 |                       |  // [476]
              +-----+-----+-----+-----+-----+                 |  // [476]
              | T10 | T11 | T12 | T13 | T14 |                 |  // [476]
              +-----+-----+-----+-----+-----+                 |  // [476]
                    | T15 | T16 | T17 |                       |  // [476]
           +-----+  +-----+-----+-----+  +-----+              |  // [476]
           | T18 |        | T19 |        | T20 |              |  // [476]
           +-----+-----+  +-----+  +-----+-----+              |  // [476]
           | T21 | T22 |           | T23 | T24 |              |  // [476]
           +-----+-----+           +-----+-----+              |  // [476]
                                                              |  // [476]
    :---------------------------------------: #_CHUNK_MAPPING_#  // [476]
    #_PARTY_IN_MY_HEAD_# :------------------------------------+  // [476]
                                                              |  // [476]
        https://www.youtube.com/watch?v=N0z5Rf-nLVo           |  // [476]
                                                              |  // [476]
    :---------------------------------------------------------+  // [476]
    $_IDENTICAL_T25_C4X_$ :-----------------------------------+  // [476]
    $_IDENTICAL_T25_C4Y_$ :-----------------------------------+  // [476]
                                                              |  // [476]
        d_t25_c4x === d_g25_r4x                               |  // [476]
        d_t25_c4y === d_g25_r4y                               |  // [476]
                                                              |  // [476]
        Do we keep this synonymous data, or do we trash it?   |  // [476]
                                                              |  // [476]
        I say we do this :                                    |  // [476]
                                                              |  // [476]
        1. d_t25_c4x : Used for save file rendering           |  // [476]
           d_t25_c4y : of the 640_x_640 thumbnail             |  // [476]
                     : thrown into rgba896.                   |  // [476]
                                                              |  // [476]
        2. d_g25_r4x : Used for GPU-rendering code.           |  // [476]
           d_g25_r4y : __NOT__ used for rasterization         |  // [476]
                     : of thumbnails code.                    |  // [476]
                                                              |  // [476]
        Hmm... Let's go with this decision and hope to        |  // [476]
        ourselves that we don't regret it in the              |  // [476]
        future.                                               |  // [476]
    :---------------------------------------------------------+  // [476]
    :---------------------------------------------------------+  // [476]
    #_MOTHER_FUCKING_BLOCK_SCOPE_# :--------------------------+  // [476]
                                                              |  // [476]
        This is a block scope to prevent variables            |  // [476]
        declared with "let" from escaping it.                 |  // [476]
                                                              |  // [476]
        This way we can populate our lookup tables            |  // [476]
        with more readable tokens rather than                 |  // [476]
        hard coded magic numbers.                             |  // [476]
    :---------------------------------------------------------+  // [476]
    #_SPIRALLING_INTO_INSANITY_# :----------------------------+  // [476]
    #_MENTAL_CLARITY_SCORE_##### :----------------------------+  // [476]
                                                              |  // [476]
        I am very concerned for myself and think my           |  // [476]
        mental sanity might be up. Or at least that           |  // [476]
        my I.Q. is going to drastically fall within           |  // [476]
        the next year.                                        |  // [476]
                                                              |  // [476]
        I did something to myself I don't want to             |  // [476]
        mention here for the time being... Maybe              |  // [476]
        I'll come back and edit it as a warning               |  // [476]
        to other people.                                      |  // [476]
                                                              |  // [476]
    :---------------------------------------------------------+  // [476]
    :---------------------------------------------------------+  // [476]
    #_CHUNKY_SMOKE_TEST_# :-----------------------------------+  // [476]
                                                              |  // [476]
        A quick and simple error check ( smoke test )         |  // [476]
        to determine if our lookup tables are correct.        |  // [476]
                                                              |  // [476]
        This doesn't get use 100% confidence. It just         |  // [476]
        gives us confidence we haven't massively              |  // [476]
        screwed up like a complete smooth brain idiot.        |  // [476]
                                                              |  // [476]
    :---------------------------------------------------------+  // [476]

    #_WHAT_IS_THE_LER_# :-------------------------------------+  // [477]
                                                              |  // [477]
        BAD_NAME_TAG[ _WHAT_IS_THE_DUM_ ]!!!!!!!!!!!!!!!!!!!! |  // [477]
        CORRECT_NAME[ _WHAT_IS_THE_LER_ ]!!!!!!!!!!!!!!!!!!!! |  // [477]
                                                              |  // [477]
          0     1     2     3     4                           |  // [477]
        +---+ +---+ +---+ +---+ +---+  <----+                 |  // [477]
      0 |   | |   | |A_3| |   | |   |       |                 |  // [477]
        +---+ +---+ +---+ +---+ +---+       |                 |  // [477]
        +---+ +---+ +---+ +---+ +---+       |                 |  // [477]
      1 |   | |B_1| |B_2| |B_3| |   |       |                 |  // [477]
        +---+ +---+ +---+ +---+ +---+       |                 |  // [477]
        +---+ +---+ +---+ +---+ +---+       |                 |  // [477]
      2 |C_0| |C_1| |C_2| |C_3| |C_4|       +---[ "THE_LER" ] |  // [477]
        +---+ +---+ +---+ +---+ +---+       |                 |  // [477]
        +---+ +---+ +---+ +---+ +---+       |                 |  // [477]
      3 |   | |D_1| |D_2| |D_3| |   |       |                 |  // [477]
        +---+ +---+ +---+ +---+ +---+       |                 |  // [477]
        +---+ +---+ +---+ +---+ +---+       |                 |  // [477]
      4 |   | |   | |D_4| |   | |   |       |                 |  // [477]
        +---+ +---+ +---+ +---+ +---+  <----+                 |  // [477]
                                                              |  // [477]
    @x_#_#_x@ : X,Y address [#,#] , the X component.          |  // [477]
    @y_#_#_y@ : X,Y address [#,#] , the Y component.          |  // [477]
                                                              |  // [477]
    |<------------------- 512 ------------------->|           |  // [477]
    |<--128-->| |<--128-->| |<--128-->| |<--128-->|           |  // [477]
    |<--------256-------->| |<--------256-------->|           |  // [477]
    +---------+ +---------+ +---------+ +---------+           |  // [477]
    |         | |         | |         | |         |           |  // [477]
    | x_2_0_x | | x_1_1_x | | x_2_1_x | | x_3_1_x |           |  // [477]
    | y_2_0_y | | y_1_1_y | | y_2_1_y | | y_3_1_y |           |  // [477]
    | ( A_3 ) | | ( B_1 ) | | ( B_2 ) | | ( B_3 ) |           |  // [477]
    +---------+ +---------+ +---------+ +---------+           |  // [477]
    +---------+ +---------+ +---------+ +---------+           |  // [477]
    |         | |         | |         | |         |           |  // [477]
    | x_0_2_x | | x_1_2_x | | x_2_2_x | | x_3_2_x |           |  // [477]
    | y_0_2_y | | y_1_2_y | | y_2_2_y | | y_3_2_y |           |  // [477]
    | ( C_0 ) | | ( C_1 ) | | ( C_2 ) | | ( C_3 ) |           |  // [477]
    +---------+ +---------+ +---------+ +---------+           |  // [477]
    +---------+ +---------+ +---------+ +---------+           |  // [477]
    |         | |         | |         | |         |           |  // [477]
    | x_4_2_x | | x_1_3_x | | x_2_3_x | | x_3_3_x |           |  // [477]
    | y_4_2_y | | y_1_3_y | | y_2_3_y | | y_3_3_y |           |  // [477]
    | ( C_4 ) | | ( D_1 ) | | ( D_2 ) | | ( D_3 ) |           |  // [477]
    +---------+ +---------+ +---------+ +---------+           |  // [477]
    +---------+ +---------+ +---------+ +---------+           |  // [477]
    |         | |         | |         | |         |           |  // [477]
    | x_2_4_x | | _dvoid_ | | _dvoid_ | | _dvoid_ |           |  // [477]
    | y_2_4_y | |         | |         | |         |           |  // [477]
    | ( D_4 ) | | _OTHER_ | | _OTHER_ | | _OTHER_ |           |  // [477]
    +---------+ +---------+ +---------+ +---------+           |  // [477]
                                                              |  // [477]
    #_DIAGRAM_THE_LER_# : @TILE_SPACE@                        |  // [477]
    #_DIAGRAM_THE_LER______TILE_SPACE_#                       |  // [477]
                                                              |  // [477]
            0         1         2         3         4         |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
    A:  |       | |       | |LER_A_2| |       | |       |     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
    B:  |       | |LER_B_1| |LER_B_2| |LER_B_3| |       |     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
    C:  |LER_C_0| |LER_C_1| |LER_C_2| |LER_C_3| |LER_C_4|     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
    D:  |       | |LER_D_1| |LER_D_2| |LER_D_3| |       |     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
    E:  |       | |       | |LER_E_2| |       | |       |     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
        |<------------------ THE_LER ------------------>|     |  // [477]
        |<----- 64 * 5 Of the smallest tile ----------->|     |  // [477]
        |<--------- 320 Player Sized Tiles ------------>|     |  // [477]
                                                              |  // [477]
    #_DIAGRAM_THE_LER_# : @VOID_SPACE@ :                      |  // [477]
    #_DIAGRAM_THE_LER______VOID_SPACE_#                       |  // [477]
                                                              |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
        |_dvoid_| |_dvoid_| |       | |_dvoid_| |_dvoid_|     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
        |_dvoid_| |       | |       | |       | |_dvoid_|     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
        |       | |       | |       | |       | |       |     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
        |_dvoid_| |       | |       | |       | |_dvoid_|     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
        |_dvoid_| |_dvoid_| |       | |_dvoid_| |_dvoid_|     |  // [477]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [477]
                                                              |  // [477]
    :---------------------------------------------------------+  // [477]
    #_DECLARE_YOU_ARE_A_DUMMY_# :-----------------------------+  // [477]
    #_ADMIT___YOU_ARE_A_DUMMY_# :-----------------------------+  // [477]
                                                              |  // [477]
        SEE[ _DECLARE_YOU_ARE_A_LERPA_ ]                      |  // [477]
        SEE[ _ADMIT___YOU_ARE_A_LERPA_ ]                      |  // [477]
    :---------------------------------------------------------+  // [477]
    :---------------------------------------------------------+  // [477]
    #_DECLARE_YOU_ARE_A_LERPA_# :-----------------------------+  // [477]
    #_ADMIT___YOU_ARE_A_LERPA_# :-----------------------------+  // [477]
                                                              |  // [477]
        Declare specific un-mutable variables that            |  // [477]
        formalize "LER cells" on "the ler" these are          |  // [477]
        NOT CONSTANTS, they are "immutable data".             |  // [477]
                                                              |  // [477]
        The difference being that these are complex           |  // [477]
        objects more complex than simple macros, and          |  // [477]
        thus they do __NOT__ belong in the                    |  // [477]
        "Top Level Constants" section but rather              |  // [477]
        belong in the "Top Level Data" section.               |  // [477]
    :---------------------------------------------------------+  // [477]
    :---------------------------------------------------------+  // [477]
    #_FREEZE_DUMMY_### :--------------------------------------+  // [477]
    #_FREEZE_DIRTBAG_# :--------------------------------------+  // [477]
                                                              |  // [477]
        SEE[ _FREEZE_LERPA_   ]                               |  // [477]
        SEE[ _FREEZE_LERPBAG_ ]                               |  // [477]
    :---------------------------------------------------------+  // [477]
    :---------------------------------------------------------+  // [477]
    #_FREEZE_LERPA_### :--------------------------------------+  // [477]
    #_FREEZE_LERPBAG_# :--------------------------------------+  // [477]
                                                              |  // [477]
        Freezing these identifiers that help us map           |  // [477]
        [ _DIAGRAM_THE_LER______TILE_SPACE_ ]mental-model     |  // [477]
        in the comments to the actual data.                   |  // [477]
                                                              |  // [477]
        Though working code is my #1 priority, a strong       |  // [477]
        mental model of the code base is also a pretty        |  // [477]
        high priority. If we cannot connect the diagrams      |  // [477]
        to actual variables in the code, then the             |  // [477]
        diagrams are pretty worthless.                        |  // [477]
                                                              |  // [477]
        I am not going to say what priority #                 |  // [477]
        "Mental Model Of Code" is. I can only count           |  // [477]
        to 1. And the highest priority is                     |  // [477]
        "We must have working code".                          |  // [477]
                                                              |  // [477]
        If I were to attempt to give other priority           |  // [477]
        indexes to other things I deem important,             |  // [477]
        those indexes would shift and change over             |  // [477]
        time. So what is the fucking point.                   |  // [477]
                                                              |  // [477]
        Its like trying to rate a woman you would             |  // [477]
        sleep with on a 1-10 scale?                           |  // [477]
                                                              |  // [477]
        Why the fuck are you doing that?                      |  // [477]
        Where is the utility in that?                         |  // [477]
                                                              |  // [477]
        Seems like the only utility in that is pissing        |  // [477]
        her off if you didn't say 10/10.                      |  // [477]
                                                              |  // [477]
        The point is, don't assign more granularity           |  // [477]
        to something that really is just a boolean            |  // [477]
        "pass/fail" value.                                    |  // [477]
                                                              |  // [477]
        Mental models of the code is a boolean.               |  // [477]
        The "ITS FUCKING IMPORTANT" boolean is checked.       |  // [477]
                                                              |  // [477]
        Does this analogy make any sense?                     |  // [477]
    :---------------------------------------------------------+  // [477]
    #_TODO_CREATE_STAND_ALONE_MODE_# :------------------------+  // [477]
                                                              |  // [477]
        If we include[ ATOMIC_IVY_MMO.JS ]directly in         |  // [477]
        a local [.HTM/.HTML] file, we should be able          |  // [477]
        to run parts of our game.                             |  // [477]
                                                              |  // [477]
        How?                                                  |  // [477]
                                                              |  // [477]
        Two detections need to be done in this order:         |  // [477]
                                                              |  // [477]
        1. Detect we are running on the client.               |  // [477]
        2. Detect that script has not been modified           |  // [477]
           as a result of serving the file from our           |  // [477]
           Node.js server.                                    |  // [477]
                                                              |  // [477]
        If both criteria are true, we then enter              |  // [477]
        "POOR_MANS_MMO" mode or something....                 |  // [477]
        What should I [call/name] it?                         |  // [477]
                                                              |  // [477]
            1. "Poor Mans MMO Mode"    .....(PMM)             |  // [477]
            2. "Manual Inclusion Mode" .....(MIM)             |  // [477]
            3. "Josh Manual Mode"      .....(JMM)             |  // [477]
            4. "Low Tech Mode"    ..........(LTM)             |  // [477]
            5. "Shitty Battle Station Mode" (SBS)             |  // [477]
                                                              |  // [477]
        I will think about it. Thinking about this            |  // [477]
        because I currently do not have internet              |  // [477]
        access, so I can not demonstrate the                  |  // [477]
        project.                                              |  // [477]
    :---------------------------------------------------------+  // [477]
    #_BATTLESHIP_DUM_CELLS_# :--------------------------------+  // [477]
                                                              |  // [477]
        I WAS WRONG, SEE[ _BATTLESHIP_LER_CELLS_# ]           |  // [477]
                                                              |  // [477]
        Using a "battleship" analogy to [describe/identify]   |  // [477]
        different "dum cells". By "dum cells" I mean the      |  // [477]
        renderable partitions of our renderable space...      |  // [477]
                                                              |  // [477]
        Hmm... Wait a second....                              |  // [477]
                                                              |  // [477]
        "THE_DUM" usually means :                             |  // [477]
                                                              |  // [477]
            "The 3X3 Grid Of Levelpacks within our            |  // [477]
            "renderable space."                               |  // [477]
                                                              |  // [477]
        This is not what we are describing. These             |  // [477]
        are moreso... "Level Rendering Cells".                |  // [477]
                                                              |  // [477]
        So... "LER Cells" , "THE_LER" instead of              |  // [477]
        "THE_DUM".                                            |  // [477]
                                                              |  // [477]
    :---------------------------------------------------------+  // [477]
    #_I_MADE_A_HUGE_MISTAKE_# :-------------------------------+  // [477]
                                                              |  // [477]
        WRONG NAMES FOR CODE I JUST WROTE :                   |  // [477]
                                                              |  // [477]
            #_DIAGRAM_THE_DUM_#                               |  // [477]
            #_DIAGRAM_THE_DUM______TILE_SPACE_#               |  // [477]
            #_DIAGRAM_THE_DUM______VOID_SPACE_#               |  // [477]
                                                              |  // [477]
        CORRECT NAMES :                                       |  // [477]
                                                              |  // [477]
            #_DIAGRAM_THE_LER_#                               |  // [477]
            #_DIAGRAM_THE_LER______TILE_SPACE_#               |  // [477]
            #_DIAGRAM_THE_LER______VOID_SPACE_#               |  // [477]
                                                              |  // [477]
        #_WHAT_IS_THE_LER_# :------------------------------+  |  // [477]
                                                           |  |  // [477]
            Why Am I saying this ?                         |  |  // [477]
                                                           |  |  // [477]
                "THE_DUM" is the entire renderable space   |  |  // [477]
                of 3_x_3 levelpacks. "THE_LER" is just     |  |  // [477]
                ONE OF THOSE LEVELPACKS.                   |  |  // [477]
                                                           |  |  // [477]
                "THE_LER" references a "levelpack" ,       |  |  // [477]
                but in the context of :                    |  |  // [477]
                                                           |  |  // [477]
                    "What can be seen in game"             |  |  // [477]
                                                           |  |  // [477]
                When you say "Levelpack" ...               |  |  // [477]
                are you talking about :                    |  |  // [477]
                                                           |  |  // [477]
                    A: "What you are looking at" or the    |  |  // [477]
                    B: "underlying data?"                  |  |  // [477]
                                                           |  |  // [477]
                "THE_LER" solves this ambiguity.           |  |  // [477]
                                                           |  |  // [477]
                When we say "THE_LER" we are talking about |  |  // [477]
                the actual rendering of the levelpack,     |  |  // [477]
                rather than the underlying data.           |  |  // [477]
                                                           |  |  // [477]
        :--------------------------------------------------+  |  // [477]
                                                              |  // [477]
    :---------------------------------------------------------+  // [477]
                                                                 // [477]
    @D_N_C@ : Data_Not_Constant                                  // [477]
                                                                 // [477]
    #_BATTLESHIP_LER_CELLS_# :--------------------------------+  // [477]
                                                              |  // [477]
        We are codifying the individual level cells           |  // [477]
        on our 5x5 grid partitioning render of a              |  // [477]
        single levelpack within "THE_DUM".                    |  // [477]
                                                              |  // [477]
        "THE_LER" is one of the 3_X_3 cells                   |  // [477]
        within "THE_DUM".                                     |  // [477]
                                                              |  // [477]
        When I say "THE_LER" I basically mean:                |  // [477]
                                                              |  // [477]
            "We are talking about the levelpack"              |  // [477]
            "but specifically about it's                      |  // [477]
            "RENDERING_LAYOUT" and not the                    |  // [477]
            "data_layout".                                    |  // [477]
                                                              |  // [477]
                                                              |  // [477]
    @RENDERING_LAYOUT@ : How things are laid out spatailly    |  // [477]
                       : and seen by the player of the game.  |  // [477]
                                                              |  // [477]
    @DATA_LAYOUT@ :::::: How the underlying binary pixel      |  // [477]
                  :::::: data is partitioned and layed        |  // [477]
                  :::::: out.                                 |  // [477]
                                                              |  // [477]
    :---------------------------------------------------------+  // [477]
    #_RENDERING_LAYOUT_VS_DATA_LAYOUT_# :---------------------+  // [477]
    #_DATA_LAYOUT_VS_RENDERING_LAYOUT_# :---------------------+  // [477]
                                                              |  // [477]
        Example : A level is encoded in a 128x128             |  // [477]
                : chunk of pixels. It is rendered as          |  // [477]
                : a 64_x_64 grid of the smallest              |  // [477]
                : tile size.                                  |  // [477]
                                                              |  // [477]
        Our "Data Layout" is 128_x_128 [ bintiles /pixels ]   |  // [477]
        Our "Render Layout" is 64_x_64 [ gametiles/pixels ]   |  // [477]
    :---------------------------------------------------------+  // [477]
    :---------------------------------------------------------+  // [477]
    #D_F_W# :-------------------------------------------------+  // [477]
                                                              |  // [477]
        @D_F_W@ : Doubly_Fucking_Wrong                        |  // [477]
                                                              |  // [477]
        "DFW" means that you fucked up more than one          |  // [477]
        thing. There are multiple problems with the           |  // [477]
        in-correct variable name you typed, as such,          |  // [477]
        there might not be room to describe all of            |  // [477]
        the problems within the                               |  // [477]
        "Monkey_Wrench_Macro_String". So instead I am         |  // [477]
        basically saying "D__F__W" to say:                    |  // [477]
                                                              |  // [477]
        " You've got a lot of fucking problems,     "         |  // [477]
        " check yourself before you wreck yourself, "         |  // [477]
        " I don't have time for your shit, you      "         |  // [477]
        " figure it out.                            "         |  // [477]
    :---------------------------------------------------------+  // [477]

    #_MOVE_LUT_2022_# :---------------------------------------+  // [478]
                                                              |  // [478]
        In FILE896 sub-series videos #2 , #3 , #5 ,           |  // [478]
        we made the mistake of putting lookup tables          |  // [478]
        into the  "Top Level Data Section" when L.U.T.(S)     |  // [478]
        belong in "Top Level Lookup Tables Section".          |  // [478]
                                                              |  // [478]
        This tag is marking the beginning and ending of       |  // [478]
        the very large chunk of code we moved from            |  // [478]
        one place to another.                                 |  // [478]
    :---------------------------------------------------------+  // [478]
    #PAIRED_TAG# :--------------------------------------------+  // [478]
                                                              |  // [478]
        @PAIRED_TAG@ : A tag used to connect two sections     |  // [478]
                     : of a file together. Or rather, make    |  // [478]
                     : a strong association between two       |  // [478]
                     : different sections of a file.          |  // [478]
                                                              |  // [478]
        EXAMPLE: "THERE_WAS_A_HOLE_HERE" paired comment       |  // [478]
                 is helping keep record of where a large      |  // [478]
                 chunk of code was cut from and pasted to.    |  // [478]
                                                              |  // [478]
        https://www.reddit.com/r/silenthill                   |  // [478]
        /comments/7r6m80                                      |  // [478]
        /i_never_understood_what_this_message_meant_any/      |  // [478]
    :---------------------------------------------------------+  // [478]

    #_SUBTRACTIVE_PROPS_LAYER_# :-----------------------------+  // [479]
    #_SUBTRACTIVE_PROP_TILES_## :-----------------------------+  // [479]
                                                              |  // [479]
        THIS_SECTION_EXPLAINED_ON_VIDEO::::: :::::::::::::::: |  // [479]
        CHANNEL[ WEEBCODER ]VIDEO#[ #4_7_9 ] :::::::::::::::: |  // [479]
        www.tinyurl.com/BOMB-PLAYLIST-005    :::::::::::::::: |  // [479]
                                                              |  // [479]
        |<-------- d_pix2048 ---------->|                     |  // [479]
        +-------+-------+-------+-------+       +-------+     |  // [479]
        |       |       |       |       |       |       |     |  // [479]
        | M_M_0 | M_M_1 | M_M_2 | M_M_3 | > > > | M_M_3 |     |  // [479]
        |       |       |       |       |       |       |     |  // [479]
        +-------+-------+-------+-------+       +-------+     |  // [479]
        |       |       |       |       |       |       |     |  // [479]
        | M_M_4 | M_M_5 | M_M_6 | M_M_7 | > > > | M_M_7 |     |  // [479]
        |       |       |       |       |       |       |     |  // [479]
        +-------+-------+-------+-------+       +-------+     |  // [479]
        |       |       |       |       |                     |  // [479]
        | M_M_8 | M_M_9 | M_M_A | M_M_B |                     |  // [479]
        |       |       |       |       |                     |  // [479]
        +-------+-------+-------+-------+                     |  // [479]
        |       |       |       |       |                     |  // [479]
        | M_M_C | M_M_D | M_M_E | M_M_F |                     |  // [479]
        |       |       |       |       |                     |  // [479]
        +-------+-------+-------+-------+                     |  // [479]
                                                              |  // [479]
        +-------+ > > > > > > +-------+                       |  // [479]
        |       |             |512x256| <--- 3_pre_fab_layers |  // [479]
        | M_M_3 |             +-------+                       |  // [479]
        |       |             |512x256| <--- 3_pre_fab_layers |  // [479]
        +-------+             +-------+                       |  // [479]
        |       |             |512x256| <--- 3_pre_fab_layers |  // [479]
        | M_M_7 |             +-------+                       |  // [479]
        |       |             |512x256| <--- no one fucking   |  // [479]
        +-------+ > > > > > > +---+---+      knows what will  |  // [479]
                                  |          go here yet.     |  // [479]
    +-----------------------------+                           |  // [479]
    |                                                         |  // [479]
    |   |<------- 512 ------->|                               |  // [479]
    |   +---------------------+ ---  <----+                   |  // [479]
    |   | +-------+ +-------+ |  |        |                   |  // [479]
    |   | |       | |       | |  |        |                   |  // [479]
    +---+ |ADDATIV| |SUBTRAC| | 256       +---- 10 bits only  |  // [479]
        | |256x256| |256x256| |  |        |                   |  // [479]
        | +-------+ +-------+ |  |        |                   |  // [479]
        +---------------------+ ---  <----+                   |  // [479]
                                                              |  // [479]
            Q : How many 8x8 tiles can be encoded into        |  // [479]
                a 256_x_256 area ? ( 256x256 )                |  // [479]
                                                              |  // [479]
            A : 1024                                          |  // [479]
                                                              |  // [479]
            PROOF :                                           |  // [479]
                                                              |  // [479]
                1. 256 / 8 === 32 , 32x32 grid of 8x8 tiles.  |  // [479]
                2. 32x32 ===> 32*32 ===> 1024                 |  // [479]
                                                              |  // [479]
        Happy co-incidence...                                 |  // [479]
                                                              |  // [479]
            10 bits per sub-layer of geometry tile layer...   |  // [479]
                                                              |  // [479]
            BIN[ 11111 11111 ]===1023                         |  // [479]
                                                              |  // [479]
            This means all 8x8 tiles put into the prop        |  // [479]
            layer are addressable.                            |  // [479]
                                                              |  // [479]
        |<------------- 512 ------------->|                   |  // [479]
        +---------------------------------+ ---               |  // [479]
        | +-------------+ +-------------+ |  |                |  // [479]
        | |             | |             | |  |                |  // [479]
        | |             | |             | |  |                |  // [479]
        | |  ADDATIVE?  | | SUBTRACTIVE?| | 256               |  // [479]
        | |             | |             | |  |                |  // [479]
        | |  10BIT_BG1  | |  10BIT_FG2  | |  |                |  // [479]
        | +-------------+ +-------------+ |  |                |  // [479]
        +---------------------------------+ ---               |  // [479]
                                                              |  // [479]
        ADDATIVE : Used in the actual background.             |  // [479]
                 : 10-bit [BG1] tiles address these.          |  // [479]
                                                              |  // [479]
        SUBTRACTIVE : Subtracts over both [MG0]               |  // [479]
                    : AND [BG1] tiles to create               |  // [479]
                    : more intricate geometry.                |  // [479]
                                                              |  // [479]
    :---------------------------------------------------------+  // [479]
    #_WHAT_ABOUT_MOLDING_TILES_# :----------------------------+  // [479]
                                                              |  // [479]
        TAG[ moulding | molding | trim | terminal ]           |  // [479]
        TAG[ dont touch the trim | squid-bilies   ]           |  // [479]
        TAG[ dont_touch_the_trim | squid_bilies   ]           |  // [479]
        TAG[ donttouchthetrim    | squid bilies   ]           |  // [479]
        TAG[ dont-touch-the-trim | squidbilies    ]           |  // [479]
                                                              |  // [479]
        I know auto tiles kind of already have their          |  // [479]
        own molding. But what about using one of the          |  // [479]
        prop layers to create "molding" that we can           |  // [479]
        carefully put around the edges of                     |  // [479]
        MIDGROUND_GEOMETRY_TILES ? (MG0 TILES).               |  // [479]
                                                              |  // [479]
        What if [BG1] tiles do not get occluded,              |  // [479]
        but rather if [BG1]&[MG0] tiles are both              |  // [479]
        present on the same XY tile location,                 |  // [479]
        the [BG1] tile is used as a modifier to               |  // [479]
        [MG0]'s geometry?                                     |  // [479]
                                                              |  // [479]
        One such modification could be to "add moulding".     |  // [479]
                                                              |  // [479]
        THIS_SECTION_EXPLAINED_ON_VIDEO::::: :::::::::::::::: |  // [479]
        CHANNEL[ WEEBCODER ]VIDEO#[ #4_7_9 ] :::::::::::::::: |  // [479]
        www.tinyurl.com/BOMB-PLAYLIST-005    :::::::::::::::: |  // [479]
                                                              |  // [479]
        So....  TAG[ _TILE_OVERLAP_DIAGRAM_ ]                 |  // [479]
                     VVVVVVVVVVVVVVVVVVVVVVV                  |  // [479]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [479]
        |       | |       | |       | |       | |       |     |  // [479]
        |       | |       | |       | |       | |       |     |  // [479]
        |       | |       | |       | |       | |       |     |  // [479]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [479]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [479]
        | +---+ | | +---+ | | +---+ | | +---+ | | +---+ |     |  // [479]
        | |   | | | |   | | | |   | | | |   | | | |   | |     |  // [479]
        | +---+ | | +---+ | | +---+ | | +---+ | | +---+ |     |  // [479]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [479]
         -     -   -     -   -     -   -     -   -     -      |  // [479]
        | +---+ | | +---+ | | +---+ | | +---+ | | +---+ |     |  // [479]
          |   |     |   |     |   |     |   |     |   |       |  // [479]
        | +---+ | | +---+ | | +---+ | | +---+ | | +---+ |     |  // [479]
         -     -   -     -   -     -   -     -   -     -      |  // [479]
         -     -   -     -   -     -   -     -   -     -      |  // [479]
        | +---+ | | +---+ | | +---+ | | +---+ | | +---+ |     |  // [479]
          |   |     |   |     |   |     |   |     |   |       |  // [479]
        | +---+ | | +---+ | | +---+ | | +---+ | | +---+ |     |  // [479]
         -     -   -     -   -     -   -     -   -     -      |  // [479]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [479]
        | +---+ | | +---+ | | +---+ | | +---+ | | +---+ |     |  // [479]
        | |   | | | |   | | | |   | | | |   | | | |   | |     |  // [479]
        | +---+ | | +---+ | | +---+ | | +---+ | | +---+ |     |  // [479]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [479]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [479]
        |       | |       | |       | |       | |       |     |  // [479]
        |       | |       | |       | |       | |       |     |  // [479]
        |       | |       | |       | |       | |       |     |  // [479]
        +-------+ +-------+ +-------+ +-------+ +-------+     |  // [479]
                                                              |  // [479]
        +-----------------------------------------------+     |  // [479]
        |                                               |     |  // [479]
        |   +-------+                                   |     |  // [479]
        |   |       |                                   |     |  // [479]
        |   |       | === Midground Tile.               |     |  // [479]
        |   |       |    (Player Interactive Geometry)  |     |  // [479]
        |   +-------+                                   |     |  // [479]
        |                                               |     |  // [479]
        |    -     -                                    |     |  // [479]
        |   | +---+ |                                   |     |  // [479]
        |     |   |   === Background Tile               |     |  // [479]
        |   | +---+ |                                   |     |  // [479]
        |    -     -                                    |     |  // [479]
        |                                               |     |  // [479]
        |   +-------+                                   |     |  // [479]
        |   | +---+ |                                   |     |  // [479]
        |   | |   | | === Where BACKGROUND_TILE and     |     |  // [479]
        |   | +---+ |     MIDGROUND_TILE overlap, we    |     |  // [479]
        |   +-------+     create a "molding effect.     |     |  // [479]
        |                                               |     |  // [479]
        |       Emphasizes the attachment point         |     |  // [479]
        |       and also can clue user in that          |     |  // [479]
        |       there is hidden background              |     |  // [479]
        |       geometry behind the midground           |     |  // [479]
        |       tiles.                                  |     |  // [479]
        |                                               |     |  // [479]
        |       If both midground and background        |     |  // [479]
        |       tiles are auto-tiling, then             |     |  // [479]
        |       proper moulding effect is only          |     |  // [479]
        |       observed when you meticulously          |     |  // [479]
        |       draw the background with a 1-tile       |     |  // [479]
        |       overlap with the miground, as           |     |  // [479]
        |       seen in [ _TILE_OVERLAP_DIAGRAM_ ]      |     |  // [479]
        +-----------------------------------------------+     |  // [479]
    +---------------------------------------------------------+  // [479]
    #_INDEX_TO_INDEX_# :--------------------------------------+  // [479]
    #_L_P_T_TO_C49_# :----------------------------------------+  // [479]
                                                              |  // [479]
        ( l16 || pf8 || t25 )===>(c49)                        |  // [479]
                      ( l16 )===>(c49)                        |  // [479]
                      ( pf8 )===>(c49)                        |  // [479]
                      ( t25 )===>(c49)                        |  // [479]
                                                              |  // [479]
        #_LINED_UP_FOR_A_REASON_# :-----------------------+   |  // [479]
                                                          |   |  // [479]
            These 3 lookup tables are lined up as such    |   |  // [479]
            to make it easier to see that all 49 unique   |   |  // [479]
            indexes are used between them.                |   |  // [479]
            ( number 0 to 48 inclusive )                  |   |  // [479]
                                                          |   |  // [479]
        :-------------------------------------------------+   |  // [479]
        #_BIRD_HOLE_TEST_# :------------------------------+   |  // [479]
                                                          |   |  // [479]
            Bird hole test, also know as the pidgeon      |   |  // [479]
            hole test. But no one knows how to spell      |   |  // [479]
            pidgeon. Some say it's spelled "pigeon".      |   |  // [479]
            Weird, next thing you know people are         |   |  // [479]
            going to tell me "bridge" is spelled          |   |  // [479]
            "brige".                                      |   |  // [479]
                                                          |   |  // [479]
            And yes, I do pronounce the "d" in            |   |  // [479]
            both "pidgeon" and "bridge".                  |   |  // [479]
                                                          |   |  // [479]
            https://en.wikipedia.org/wiki/Pidgeon         |   |  // [479]
        :-------------------------------------------------+   |  // [479]
                                                              |  // [479]
    :---------------------------------------------------------+  // [479]

    #_GUESS_I_LL_DIE_# :--------------------------------------+  // [480]
                                                              |  // [480]
        So... I need to call this number because my           |  // [480]
        perscription is out. You know, for the thing          |  // [480]
        that I have that is going to be there until           |  // [480]
        I die... They like to call by phone. I don't          |  // [480]
        like using my phone. Don't even know where            |  // [480]
        it is. Haven't used it for months.                    |  // [480]
                                                              |  // [480]
        734-647-8902 .... Anyways...                          |  // [480]
                                                              |  // [480]
        #____L16____TO____C49____________# :---------------+  |  // [480]
                                                           |  |  // [480]
            (L16)===>(C49)===>(L16) test.                  |  |  // [480]
            SKIP 0XFF , because trap value.                |  |  // [480]
                                                           |  |  // [480]
        :--------------------------------------------------+  |  // [480]
        #____PF8____TO____C49____________# :---------------+  |  // [480]
                                                           |  |  // [480]
            (PF8)===>(C49)===>(PF8) test.                  |  |  // [480]
            SKIP 0XFF , because trap value.                |  |  // [480]
                                                           |  |  // [480]
        :--------------------------------------------------+  |  // [480]
        #____T25____TO____C49____________# :---------------+  |  // [480]
                                                           |  |  // [480]
            (T25)===>(C49)===>(T25) test.                  |  |  // [480]
            SKIP 0XFF , because trap value.                |  |  // [480]
                                                           |  |  // [480]
        :--------------------------------------------------+  |  // [480]
    :---------------------------------------------------------+  // [480]

*** ******************************************************** **/         
//:==========================:HASHTAG_OR_ATTED_COMMENTS:[085]://         
//:THIS_COMMITS_DELTA_NOTE:[085]:============================://         
/** ******************************************************** ***     

    [479] : 1. Created lookup tables :                :::::::::  // [479]
          :         ( l16 )===>(c49)                  :::::::::  // [479]
          :         ( pf8 )===>(c49)                  :::::::::  // [479]
          :         ( t25 )===>(c49)                  :::::::::  // [479]
          : 2. Created pidgeon hole test to roughly   :::::::::  // [479]
          :    verify that the lookup tables correct. :::::::::  // [479]

*** ******************************************************** **/
//:============================:THIS_COMMITS_DELTA_NOTE:[085]://